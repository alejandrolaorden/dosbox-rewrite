#define IPFcodeW() IPFDW()
#define IPFcodeWsigned() IPFDWsigned()
#define IPFaddrW() IPFDW()
#define IPFaddrWsigned() IPFDWsigned()
/* BEGIN AUTOGENERATED CODE */
/* code width = 32     addr width = 32 */
/* expect host code to prefix this with */
/*   _x86decode_begin_code32_addr32: */
/*   _x86decode_after_prefix_code32_addr32: */
/* expect host code to provide: */
/*   uint8_t op;               opcode byte */
/*   uint32_t imm,imm2,imm3,imm4; immediate 32-bit */
/*   struct x86ModRegRm mrm;   mod/reg/rm byte */
/*   struct x86ScaleIndexBase sib; scalar/index/base byte */
/*   uint32_t disp;            displacement */
/* expect host code to provide: */
/*   uint8_t IPFB();           fetch byte at instruction pointer */
/*   uint16_t IPFW();          fetch word at instruction pointer */
/*   uint32_t IPFDW();         fetch dword at instruction pointer */
/*   uint32_t IPFcodeW();      fetch 32-bit word at instruction pointer */
/*   uint32_t IPFaddrW();      fetch 32-bit word at instruction pointer */
/*   void IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);   read mod/reg/rm, sib, displacement */
/* expect host to provide: */
/*   x86_offset_t IPDecIP; */
/*   char IPDecStr[256]; */
/*   char *ipw,*ipwf; */
/*   x86_offset_t IPval(void); */
switch (op=IPFB()) {
    case 0x00: /* 00h ADDb b(r/m),b(reg)      spec: 0x00 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ADDb %s,%s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),CPUregsN[1][mrm.reg()]);
        break;
    case 0x01: /* 01h ADDd w(r/m),w(reg)      spec: 0x01 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ADDd %s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[4][mrm.reg()]);
        break;
    case 0x02: /* 02h ADDb b(reg),b(r/m)      spec: 0x02 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ADDb %s,%s",CPUregsN[1][mrm.reg()],IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
        break;
    case 0x03: /* 03h ADDd w(reg),w(r/m)      spec: 0x03 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ADDd %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
        break;
    case 0x04: /* 04h ADDb b(a),i      spec: 0x04 ib */
        imm=IPFB();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ADDb %s,0x%02lX",CPUregsN[1][0],(unsigned long)((uint32_t)imm));
        break;
    case 0x05: /* 05h ADDd w(a),i      spec: 0x05 iw */
        imm=IPFcodeW();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ADDd %s,0x%08lX",CPUregsN[4][0],(unsigned long)((uint32_t)imm));
        break;
    case 0x06: /* 06h PUSHd w(es)      spec: 0x06 */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PUSHd %s",CPUsregs_80386[0]);
        break;
    case 0x07: /* 07h POPd w(es)      spec: 0x07 */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"POPd %s",CPUsregs_80386[0]);
        break;
    case 0x08: /* 08h ORb b(r/m),b(reg)      spec: 0x08 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ORb %s,%s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),CPUregsN[1][mrm.reg()]);
        break;
    case 0x09: /* 09h ORd w(r/m),w(reg)      spec: 0x09 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ORd %s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[4][mrm.reg()]);
        break;
    case 0x0A: /* 0Ah ORb b(reg),b(r/m)      spec: 0x0A mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ORb %s,%s",CPUregsN[1][mrm.reg()],IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
        break;
    case 0x0B: /* 0Bh ORd w(reg),w(r/m)      spec: 0x0B mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ORd %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
        break;
    case 0x0C: /* 0Ch ORb b(a),i      spec: 0x0C ib */
        imm=IPFB();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ORb %s,0x%02lX",CPUregsN[1][0],(unsigned long)((uint32_t)imm));
        break;
    case 0x0D: /* 0Dh ORd w(a),i      spec: 0x0D iw */
        imm=IPFcodeW();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ORd %s,0x%08lX",CPUregsN[4][0],(unsigned long)((uint32_t)imm));
        break;
    case 0x0E: /* 0Eh PUSHd w(cs)      spec: 0x0E */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PUSHd %s",CPUsregs_80386[1]);
        break;
    case 0x0F: /* 0Fh        spec:  */
/* Opcodes starting with 0Fh */
        switch (op=IPFB()) {
            case 0x00: /* 0Fh 00h        spec:  */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
/* Opcodes starting with 0Fh 00h */
                switch (mrm.byte) {
                    case 0x00: /* 0Fh 00h 00h SLDTd w(r/m) mod=0 reg=0 rm=0      spec: 0x0F 0x00 mod/reg/rm /0 mod!=3 */
                    case 0x01: /* 0Fh 00h 01h SLDTd w(r/m) mod=0 reg=0 rm=1      spec: 0x0F 0x00 mod/reg/rm /0 mod!=3 */
                    case 0x02: /* 0Fh 00h 02h SLDTd w(r/m) mod=0 reg=0 rm=2      spec: 0x0F 0x00 mod/reg/rm /0 mod!=3 */
                    case 0x03: /* 0Fh 00h 03h SLDTd w(r/m) mod=0 reg=0 rm=3      spec: 0x0F 0x00 mod/reg/rm /0 mod!=3 */
                    case 0x04: /* 0Fh 00h 04h SLDTd w(r/m) mod=0 reg=0 rm=4      spec: 0x0F 0x00 mod/reg/rm /0 mod!=3 */
                    case 0x05: /* 0Fh 00h 05h SLDTd w(r/m) mod=0 reg=0 rm=5      spec: 0x0F 0x00 mod/reg/rm /0 mod!=3 */
                    case 0x06: /* 0Fh 00h 06h SLDTd w(r/m) mod=0 reg=0 rm=6      spec: 0x0F 0x00 mod/reg/rm /0 mod!=3 */
                    case 0x07: /* 0Fh 00h 07h SLDTd w(r/m) mod=0 reg=0 rm=7      spec: 0x0F 0x00 mod/reg/rm /0 mod!=3 */
                    case 0x40: /* 0Fh 00h 40h SLDTd w(r/m) mod=1 reg=0 rm=0      spec: 0x0F 0x00 mod/reg/rm /0 mod!=3 */
                    case 0x41: /* 0Fh 00h 41h SLDTd w(r/m) mod=1 reg=0 rm=1      spec: 0x0F 0x00 mod/reg/rm /0 mod!=3 */
                    case 0x42: /* 0Fh 00h 42h SLDTd w(r/m) mod=1 reg=0 rm=2      spec: 0x0F 0x00 mod/reg/rm /0 mod!=3 */
                    case 0x43: /* 0Fh 00h 43h SLDTd w(r/m) mod=1 reg=0 rm=3      spec: 0x0F 0x00 mod/reg/rm /0 mod!=3 */
                    case 0x44: /* 0Fh 00h 44h SLDTd w(r/m) mod=1 reg=0 rm=4      spec: 0x0F 0x00 mod/reg/rm /0 mod!=3 */
                    case 0x45: /* 0Fh 00h 45h SLDTd w(r/m) mod=1 reg=0 rm=5      spec: 0x0F 0x00 mod/reg/rm /0 mod!=3 */
                    case 0x46: /* 0Fh 00h 46h SLDTd w(r/m) mod=1 reg=0 rm=6      spec: 0x0F 0x00 mod/reg/rm /0 mod!=3 */
                    case 0x47: /* 0Fh 00h 47h SLDTd w(r/m) mod=1 reg=0 rm=7      spec: 0x0F 0x00 mod/reg/rm /0 mod!=3 */
                    case 0x80: /* 0Fh 00h 80h SLDTd w(r/m) mod=2 reg=0 rm=0      spec: 0x0F 0x00 mod/reg/rm /0 mod!=3 */
                    case 0x81: /* 0Fh 00h 81h SLDTd w(r/m) mod=2 reg=0 rm=1      spec: 0x0F 0x00 mod/reg/rm /0 mod!=3 */
                    case 0x82: /* 0Fh 00h 82h SLDTd w(r/m) mod=2 reg=0 rm=2      spec: 0x0F 0x00 mod/reg/rm /0 mod!=3 */
                    case 0x83: /* 0Fh 00h 83h SLDTd w(r/m) mod=2 reg=0 rm=3      spec: 0x0F 0x00 mod/reg/rm /0 mod!=3 */
                    case 0x84: /* 0Fh 00h 84h SLDTd w(r/m) mod=2 reg=0 rm=4      spec: 0x0F 0x00 mod/reg/rm /0 mod!=3 */
                    case 0x85: /* 0Fh 00h 85h SLDTd w(r/m) mod=2 reg=0 rm=5      spec: 0x0F 0x00 mod/reg/rm /0 mod!=3 */
                    case 0x86: /* 0Fh 00h 86h SLDTd w(r/m) mod=2 reg=0 rm=6      spec: 0x0F 0x00 mod/reg/rm /0 mod!=3 */
                    case 0x87: /* 0Fh 00h 87h SLDTd w(r/m) mod=2 reg=0 rm=7      spec: 0x0F 0x00 mod/reg/rm /0 mod!=3 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SLDTd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                        break;
                    case 0x08: /* 0Fh 00h 08h STRd w(r/m) mod=0 reg=1 rm=0      spec: 0x0F 0x00 mod/reg/rm /1 mod!=3 */
                    case 0x09: /* 0Fh 00h 09h STRd w(r/m) mod=0 reg=1 rm=1      spec: 0x0F 0x00 mod/reg/rm /1 mod!=3 */
                    case 0x0A: /* 0Fh 00h 0Ah STRd w(r/m) mod=0 reg=1 rm=2      spec: 0x0F 0x00 mod/reg/rm /1 mod!=3 */
                    case 0x0B: /* 0Fh 00h 0Bh STRd w(r/m) mod=0 reg=1 rm=3      spec: 0x0F 0x00 mod/reg/rm /1 mod!=3 */
                    case 0x0C: /* 0Fh 00h 0Ch STRd w(r/m) mod=0 reg=1 rm=4      spec: 0x0F 0x00 mod/reg/rm /1 mod!=3 */
                    case 0x0D: /* 0Fh 00h 0Dh STRd w(r/m) mod=0 reg=1 rm=5      spec: 0x0F 0x00 mod/reg/rm /1 mod!=3 */
                    case 0x0E: /* 0Fh 00h 0Eh STRd w(r/m) mod=0 reg=1 rm=6      spec: 0x0F 0x00 mod/reg/rm /1 mod!=3 */
                    case 0x0F: /* 0Fh 00h 0Fh STRd w(r/m) mod=0 reg=1 rm=7      spec: 0x0F 0x00 mod/reg/rm /1 mod!=3 */
                    case 0x48: /* 0Fh 00h 48h STRd w(r/m) mod=1 reg=1 rm=0      spec: 0x0F 0x00 mod/reg/rm /1 mod!=3 */
                    case 0x49: /* 0Fh 00h 49h STRd w(r/m) mod=1 reg=1 rm=1      spec: 0x0F 0x00 mod/reg/rm /1 mod!=3 */
                    case 0x4A: /* 0Fh 00h 4Ah STRd w(r/m) mod=1 reg=1 rm=2      spec: 0x0F 0x00 mod/reg/rm /1 mod!=3 */
                    case 0x4B: /* 0Fh 00h 4Bh STRd w(r/m) mod=1 reg=1 rm=3      spec: 0x0F 0x00 mod/reg/rm /1 mod!=3 */
                    case 0x4C: /* 0Fh 00h 4Ch STRd w(r/m) mod=1 reg=1 rm=4      spec: 0x0F 0x00 mod/reg/rm /1 mod!=3 */
                    case 0x4D: /* 0Fh 00h 4Dh STRd w(r/m) mod=1 reg=1 rm=5      spec: 0x0F 0x00 mod/reg/rm /1 mod!=3 */
                    case 0x4E: /* 0Fh 00h 4Eh STRd w(r/m) mod=1 reg=1 rm=6      spec: 0x0F 0x00 mod/reg/rm /1 mod!=3 */
                    case 0x4F: /* 0Fh 00h 4Fh STRd w(r/m) mod=1 reg=1 rm=7      spec: 0x0F 0x00 mod/reg/rm /1 mod!=3 */
                    case 0x88: /* 0Fh 00h 88h STRd w(r/m) mod=2 reg=1 rm=0      spec: 0x0F 0x00 mod/reg/rm /1 mod!=3 */
                    case 0x89: /* 0Fh 00h 89h STRd w(r/m) mod=2 reg=1 rm=1      spec: 0x0F 0x00 mod/reg/rm /1 mod!=3 */
                    case 0x8A: /* 0Fh 00h 8Ah STRd w(r/m) mod=2 reg=1 rm=2      spec: 0x0F 0x00 mod/reg/rm /1 mod!=3 */
                    case 0x8B: /* 0Fh 00h 8Bh STRd w(r/m) mod=2 reg=1 rm=3      spec: 0x0F 0x00 mod/reg/rm /1 mod!=3 */
                    case 0x8C: /* 0Fh 00h 8Ch STRd w(r/m) mod=2 reg=1 rm=4      spec: 0x0F 0x00 mod/reg/rm /1 mod!=3 */
                    case 0x8D: /* 0Fh 00h 8Dh STRd w(r/m) mod=2 reg=1 rm=5      spec: 0x0F 0x00 mod/reg/rm /1 mod!=3 */
                    case 0x8E: /* 0Fh 00h 8Eh STRd w(r/m) mod=2 reg=1 rm=6      spec: 0x0F 0x00 mod/reg/rm /1 mod!=3 */
                    case 0x8F: /* 0Fh 00h 8Fh STRd w(r/m) mod=2 reg=1 rm=7      spec: 0x0F 0x00 mod/reg/rm /1 mod!=3 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"STRd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                        break;
                    case 0x10: /* 0Fh 00h 10h LLDTd w(r/m) mod=0 reg=2 rm=0      spec: 0x0F 0x00 mod/reg/rm /2 mod!=3 */
                    case 0x11: /* 0Fh 00h 11h LLDTd w(r/m) mod=0 reg=2 rm=1      spec: 0x0F 0x00 mod/reg/rm /2 mod!=3 */
                    case 0x12: /* 0Fh 00h 12h LLDTd w(r/m) mod=0 reg=2 rm=2      spec: 0x0F 0x00 mod/reg/rm /2 mod!=3 */
                    case 0x13: /* 0Fh 00h 13h LLDTd w(r/m) mod=0 reg=2 rm=3      spec: 0x0F 0x00 mod/reg/rm /2 mod!=3 */
                    case 0x14: /* 0Fh 00h 14h LLDTd w(r/m) mod=0 reg=2 rm=4      spec: 0x0F 0x00 mod/reg/rm /2 mod!=3 */
                    case 0x15: /* 0Fh 00h 15h LLDTd w(r/m) mod=0 reg=2 rm=5      spec: 0x0F 0x00 mod/reg/rm /2 mod!=3 */
                    case 0x16: /* 0Fh 00h 16h LLDTd w(r/m) mod=0 reg=2 rm=6      spec: 0x0F 0x00 mod/reg/rm /2 mod!=3 */
                    case 0x17: /* 0Fh 00h 17h LLDTd w(r/m) mod=0 reg=2 rm=7      spec: 0x0F 0x00 mod/reg/rm /2 mod!=3 */
                    case 0x50: /* 0Fh 00h 50h LLDTd w(r/m) mod=1 reg=2 rm=0      spec: 0x0F 0x00 mod/reg/rm /2 mod!=3 */
                    case 0x51: /* 0Fh 00h 51h LLDTd w(r/m) mod=1 reg=2 rm=1      spec: 0x0F 0x00 mod/reg/rm /2 mod!=3 */
                    case 0x52: /* 0Fh 00h 52h LLDTd w(r/m) mod=1 reg=2 rm=2      spec: 0x0F 0x00 mod/reg/rm /2 mod!=3 */
                    case 0x53: /* 0Fh 00h 53h LLDTd w(r/m) mod=1 reg=2 rm=3      spec: 0x0F 0x00 mod/reg/rm /2 mod!=3 */
                    case 0x54: /* 0Fh 00h 54h LLDTd w(r/m) mod=1 reg=2 rm=4      spec: 0x0F 0x00 mod/reg/rm /2 mod!=3 */
                    case 0x55: /* 0Fh 00h 55h LLDTd w(r/m) mod=1 reg=2 rm=5      spec: 0x0F 0x00 mod/reg/rm /2 mod!=3 */
                    case 0x56: /* 0Fh 00h 56h LLDTd w(r/m) mod=1 reg=2 rm=6      spec: 0x0F 0x00 mod/reg/rm /2 mod!=3 */
                    case 0x57: /* 0Fh 00h 57h LLDTd w(r/m) mod=1 reg=2 rm=7      spec: 0x0F 0x00 mod/reg/rm /2 mod!=3 */
                    case 0x90: /* 0Fh 00h 90h LLDTd w(r/m) mod=2 reg=2 rm=0      spec: 0x0F 0x00 mod/reg/rm /2 mod!=3 */
                    case 0x91: /* 0Fh 00h 91h LLDTd w(r/m) mod=2 reg=2 rm=1      spec: 0x0F 0x00 mod/reg/rm /2 mod!=3 */
                    case 0x92: /* 0Fh 00h 92h LLDTd w(r/m) mod=2 reg=2 rm=2      spec: 0x0F 0x00 mod/reg/rm /2 mod!=3 */
                    case 0x93: /* 0Fh 00h 93h LLDTd w(r/m) mod=2 reg=2 rm=3      spec: 0x0F 0x00 mod/reg/rm /2 mod!=3 */
                    case 0x94: /* 0Fh 00h 94h LLDTd w(r/m) mod=2 reg=2 rm=4      spec: 0x0F 0x00 mod/reg/rm /2 mod!=3 */
                    case 0x95: /* 0Fh 00h 95h LLDTd w(r/m) mod=2 reg=2 rm=5      spec: 0x0F 0x00 mod/reg/rm /2 mod!=3 */
                    case 0x96: /* 0Fh 00h 96h LLDTd w(r/m) mod=2 reg=2 rm=6      spec: 0x0F 0x00 mod/reg/rm /2 mod!=3 */
                    case 0x97: /* 0Fh 00h 97h LLDTd w(r/m) mod=2 reg=2 rm=7      spec: 0x0F 0x00 mod/reg/rm /2 mod!=3 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"LLDTd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                        break;
                    case 0x18: /* 0Fh 00h 18h LTRd w(r/m) mod=0 reg=3 rm=0      spec: 0x0F 0x00 mod/reg/rm /3 mod!=3 */
                    case 0x19: /* 0Fh 00h 19h LTRd w(r/m) mod=0 reg=3 rm=1      spec: 0x0F 0x00 mod/reg/rm /3 mod!=3 */
                    case 0x1A: /* 0Fh 00h 1Ah LTRd w(r/m) mod=0 reg=3 rm=2      spec: 0x0F 0x00 mod/reg/rm /3 mod!=3 */
                    case 0x1B: /* 0Fh 00h 1Bh LTRd w(r/m) mod=0 reg=3 rm=3      spec: 0x0F 0x00 mod/reg/rm /3 mod!=3 */
                    case 0x1C: /* 0Fh 00h 1Ch LTRd w(r/m) mod=0 reg=3 rm=4      spec: 0x0F 0x00 mod/reg/rm /3 mod!=3 */
                    case 0x1D: /* 0Fh 00h 1Dh LTRd w(r/m) mod=0 reg=3 rm=5      spec: 0x0F 0x00 mod/reg/rm /3 mod!=3 */
                    case 0x1E: /* 0Fh 00h 1Eh LTRd w(r/m) mod=0 reg=3 rm=6      spec: 0x0F 0x00 mod/reg/rm /3 mod!=3 */
                    case 0x1F: /* 0Fh 00h 1Fh LTRd w(r/m) mod=0 reg=3 rm=7      spec: 0x0F 0x00 mod/reg/rm /3 mod!=3 */
                    case 0x58: /* 0Fh 00h 58h LTRd w(r/m) mod=1 reg=3 rm=0      spec: 0x0F 0x00 mod/reg/rm /3 mod!=3 */
                    case 0x59: /* 0Fh 00h 59h LTRd w(r/m) mod=1 reg=3 rm=1      spec: 0x0F 0x00 mod/reg/rm /3 mod!=3 */
                    case 0x5A: /* 0Fh 00h 5Ah LTRd w(r/m) mod=1 reg=3 rm=2      spec: 0x0F 0x00 mod/reg/rm /3 mod!=3 */
                    case 0x5B: /* 0Fh 00h 5Bh LTRd w(r/m) mod=1 reg=3 rm=3      spec: 0x0F 0x00 mod/reg/rm /3 mod!=3 */
                    case 0x5C: /* 0Fh 00h 5Ch LTRd w(r/m) mod=1 reg=3 rm=4      spec: 0x0F 0x00 mod/reg/rm /3 mod!=3 */
                    case 0x5D: /* 0Fh 00h 5Dh LTRd w(r/m) mod=1 reg=3 rm=5      spec: 0x0F 0x00 mod/reg/rm /3 mod!=3 */
                    case 0x5E: /* 0Fh 00h 5Eh LTRd w(r/m) mod=1 reg=3 rm=6      spec: 0x0F 0x00 mod/reg/rm /3 mod!=3 */
                    case 0x5F: /* 0Fh 00h 5Fh LTRd w(r/m) mod=1 reg=3 rm=7      spec: 0x0F 0x00 mod/reg/rm /3 mod!=3 */
                    case 0x98: /* 0Fh 00h 98h LTRd w(r/m) mod=2 reg=3 rm=0      spec: 0x0F 0x00 mod/reg/rm /3 mod!=3 */
                    case 0x99: /* 0Fh 00h 99h LTRd w(r/m) mod=2 reg=3 rm=1      spec: 0x0F 0x00 mod/reg/rm /3 mod!=3 */
                    case 0x9A: /* 0Fh 00h 9Ah LTRd w(r/m) mod=2 reg=3 rm=2      spec: 0x0F 0x00 mod/reg/rm /3 mod!=3 */
                    case 0x9B: /* 0Fh 00h 9Bh LTRd w(r/m) mod=2 reg=3 rm=3      spec: 0x0F 0x00 mod/reg/rm /3 mod!=3 */
                    case 0x9C: /* 0Fh 00h 9Ch LTRd w(r/m) mod=2 reg=3 rm=4      spec: 0x0F 0x00 mod/reg/rm /3 mod!=3 */
                    case 0x9D: /* 0Fh 00h 9Dh LTRd w(r/m) mod=2 reg=3 rm=5      spec: 0x0F 0x00 mod/reg/rm /3 mod!=3 */
                    case 0x9E: /* 0Fh 00h 9Eh LTRd w(r/m) mod=2 reg=3 rm=6      spec: 0x0F 0x00 mod/reg/rm /3 mod!=3 */
                    case 0x9F: /* 0Fh 00h 9Fh LTRd w(r/m) mod=2 reg=3 rm=7      spec: 0x0F 0x00 mod/reg/rm /3 mod!=3 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"LTRd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                        break;
                    case 0x20: /* 0Fh 00h 20h VERRd w(r/m) mod=0 reg=4 rm=0      spec: 0x0F 0x00 mod/reg/rm /4 mod!=3 */
                    case 0x21: /* 0Fh 00h 21h VERRd w(r/m) mod=0 reg=4 rm=1      spec: 0x0F 0x00 mod/reg/rm /4 mod!=3 */
                    case 0x22: /* 0Fh 00h 22h VERRd w(r/m) mod=0 reg=4 rm=2      spec: 0x0F 0x00 mod/reg/rm /4 mod!=3 */
                    case 0x23: /* 0Fh 00h 23h VERRd w(r/m) mod=0 reg=4 rm=3      spec: 0x0F 0x00 mod/reg/rm /4 mod!=3 */
                    case 0x24: /* 0Fh 00h 24h VERRd w(r/m) mod=0 reg=4 rm=4      spec: 0x0F 0x00 mod/reg/rm /4 mod!=3 */
                    case 0x25: /* 0Fh 00h 25h VERRd w(r/m) mod=0 reg=4 rm=5      spec: 0x0F 0x00 mod/reg/rm /4 mod!=3 */
                    case 0x26: /* 0Fh 00h 26h VERRd w(r/m) mod=0 reg=4 rm=6      spec: 0x0F 0x00 mod/reg/rm /4 mod!=3 */
                    case 0x27: /* 0Fh 00h 27h VERRd w(r/m) mod=0 reg=4 rm=7      spec: 0x0F 0x00 mod/reg/rm /4 mod!=3 */
                    case 0x60: /* 0Fh 00h 60h VERRd w(r/m) mod=1 reg=4 rm=0      spec: 0x0F 0x00 mod/reg/rm /4 mod!=3 */
                    case 0x61: /* 0Fh 00h 61h VERRd w(r/m) mod=1 reg=4 rm=1      spec: 0x0F 0x00 mod/reg/rm /4 mod!=3 */
                    case 0x62: /* 0Fh 00h 62h VERRd w(r/m) mod=1 reg=4 rm=2      spec: 0x0F 0x00 mod/reg/rm /4 mod!=3 */
                    case 0x63: /* 0Fh 00h 63h VERRd w(r/m) mod=1 reg=4 rm=3      spec: 0x0F 0x00 mod/reg/rm /4 mod!=3 */
                    case 0x64: /* 0Fh 00h 64h VERRd w(r/m) mod=1 reg=4 rm=4      spec: 0x0F 0x00 mod/reg/rm /4 mod!=3 */
                    case 0x65: /* 0Fh 00h 65h VERRd w(r/m) mod=1 reg=4 rm=5      spec: 0x0F 0x00 mod/reg/rm /4 mod!=3 */
                    case 0x66: /* 0Fh 00h 66h VERRd w(r/m) mod=1 reg=4 rm=6      spec: 0x0F 0x00 mod/reg/rm /4 mod!=3 */
                    case 0x67: /* 0Fh 00h 67h VERRd w(r/m) mod=1 reg=4 rm=7      spec: 0x0F 0x00 mod/reg/rm /4 mod!=3 */
                    case 0xA0: /* 0Fh 00h A0h VERRd w(r/m) mod=2 reg=4 rm=0      spec: 0x0F 0x00 mod/reg/rm /4 mod!=3 */
                    case 0xA1: /* 0Fh 00h A1h VERRd w(r/m) mod=2 reg=4 rm=1      spec: 0x0F 0x00 mod/reg/rm /4 mod!=3 */
                    case 0xA2: /* 0Fh 00h A2h VERRd w(r/m) mod=2 reg=4 rm=2      spec: 0x0F 0x00 mod/reg/rm /4 mod!=3 */
                    case 0xA3: /* 0Fh 00h A3h VERRd w(r/m) mod=2 reg=4 rm=3      spec: 0x0F 0x00 mod/reg/rm /4 mod!=3 */
                    case 0xA4: /* 0Fh 00h A4h VERRd w(r/m) mod=2 reg=4 rm=4      spec: 0x0F 0x00 mod/reg/rm /4 mod!=3 */
                    case 0xA5: /* 0Fh 00h A5h VERRd w(r/m) mod=2 reg=4 rm=5      spec: 0x0F 0x00 mod/reg/rm /4 mod!=3 */
                    case 0xA6: /* 0Fh 00h A6h VERRd w(r/m) mod=2 reg=4 rm=6      spec: 0x0F 0x00 mod/reg/rm /4 mod!=3 */
                    case 0xA7: /* 0Fh 00h A7h VERRd w(r/m) mod=2 reg=4 rm=7      spec: 0x0F 0x00 mod/reg/rm /4 mod!=3 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VERRd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                        break;
                    case 0x28: /* 0Fh 00h 28h VERWd w(r/m) mod=0 reg=5 rm=0      spec: 0x0F 0x00 mod/reg/rm /5 mod!=3 */
                    case 0x29: /* 0Fh 00h 29h VERWd w(r/m) mod=0 reg=5 rm=1      spec: 0x0F 0x00 mod/reg/rm /5 mod!=3 */
                    case 0x2A: /* 0Fh 00h 2Ah VERWd w(r/m) mod=0 reg=5 rm=2      spec: 0x0F 0x00 mod/reg/rm /5 mod!=3 */
                    case 0x2B: /* 0Fh 00h 2Bh VERWd w(r/m) mod=0 reg=5 rm=3      spec: 0x0F 0x00 mod/reg/rm /5 mod!=3 */
                    case 0x2C: /* 0Fh 00h 2Ch VERWd w(r/m) mod=0 reg=5 rm=4      spec: 0x0F 0x00 mod/reg/rm /5 mod!=3 */
                    case 0x2D: /* 0Fh 00h 2Dh VERWd w(r/m) mod=0 reg=5 rm=5      spec: 0x0F 0x00 mod/reg/rm /5 mod!=3 */
                    case 0x2E: /* 0Fh 00h 2Eh VERWd w(r/m) mod=0 reg=5 rm=6      spec: 0x0F 0x00 mod/reg/rm /5 mod!=3 */
                    case 0x2F: /* 0Fh 00h 2Fh VERWd w(r/m) mod=0 reg=5 rm=7      spec: 0x0F 0x00 mod/reg/rm /5 mod!=3 */
                    case 0x68: /* 0Fh 00h 68h VERWd w(r/m) mod=1 reg=5 rm=0      spec: 0x0F 0x00 mod/reg/rm /5 mod!=3 */
                    case 0x69: /* 0Fh 00h 69h VERWd w(r/m) mod=1 reg=5 rm=1      spec: 0x0F 0x00 mod/reg/rm /5 mod!=3 */
                    case 0x6A: /* 0Fh 00h 6Ah VERWd w(r/m) mod=1 reg=5 rm=2      spec: 0x0F 0x00 mod/reg/rm /5 mod!=3 */
                    case 0x6B: /* 0Fh 00h 6Bh VERWd w(r/m) mod=1 reg=5 rm=3      spec: 0x0F 0x00 mod/reg/rm /5 mod!=3 */
                    case 0x6C: /* 0Fh 00h 6Ch VERWd w(r/m) mod=1 reg=5 rm=4      spec: 0x0F 0x00 mod/reg/rm /5 mod!=3 */
                    case 0x6D: /* 0Fh 00h 6Dh VERWd w(r/m) mod=1 reg=5 rm=5      spec: 0x0F 0x00 mod/reg/rm /5 mod!=3 */
                    case 0x6E: /* 0Fh 00h 6Eh VERWd w(r/m) mod=1 reg=5 rm=6      spec: 0x0F 0x00 mod/reg/rm /5 mod!=3 */
                    case 0x6F: /* 0Fh 00h 6Fh VERWd w(r/m) mod=1 reg=5 rm=7      spec: 0x0F 0x00 mod/reg/rm /5 mod!=3 */
                    case 0xA8: /* 0Fh 00h A8h VERWd w(r/m) mod=2 reg=5 rm=0      spec: 0x0F 0x00 mod/reg/rm /5 mod!=3 */
                    case 0xA9: /* 0Fh 00h A9h VERWd w(r/m) mod=2 reg=5 rm=1      spec: 0x0F 0x00 mod/reg/rm /5 mod!=3 */
                    case 0xAA: /* 0Fh 00h AAh VERWd w(r/m) mod=2 reg=5 rm=2      spec: 0x0F 0x00 mod/reg/rm /5 mod!=3 */
                    case 0xAB: /* 0Fh 00h ABh VERWd w(r/m) mod=2 reg=5 rm=3      spec: 0x0F 0x00 mod/reg/rm /5 mod!=3 */
                    case 0xAC: /* 0Fh 00h ACh VERWd w(r/m) mod=2 reg=5 rm=4      spec: 0x0F 0x00 mod/reg/rm /5 mod!=3 */
                    case 0xAD: /* 0Fh 00h ADh VERWd w(r/m) mod=2 reg=5 rm=5      spec: 0x0F 0x00 mod/reg/rm /5 mod!=3 */
                    case 0xAE: /* 0Fh 00h AEh VERWd w(r/m) mod=2 reg=5 rm=6      spec: 0x0F 0x00 mod/reg/rm /5 mod!=3 */
                    case 0xAF: /* 0Fh 00h AFh VERWd w(r/m) mod=2 reg=5 rm=7      spec: 0x0F 0x00 mod/reg/rm /5 mod!=3 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VERWd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                        break;
                    /* opcode 0Fh 00h 30h  not defined */
                    /* opcode 0Fh 00h 31h  not defined */
                    /* opcode 0Fh 00h 32h  not defined */
                    /* opcode 0Fh 00h 33h  not defined */
                    /* opcode 0Fh 00h 34h  not defined */
                    /* opcode 0Fh 00h 35h  not defined */
                    /* opcode 0Fh 00h 36h  not defined */
                    /* opcode 0Fh 00h 37h  not defined */
                    /* opcode 0Fh 00h 38h  not defined */
                    /* opcode 0Fh 00h 39h  not defined */
                    /* opcode 0Fh 00h 3Ah  not defined */
                    /* opcode 0Fh 00h 3Bh  not defined */
                    /* opcode 0Fh 00h 3Ch  not defined */
                    /* opcode 0Fh 00h 3Dh  not defined */
                    /* opcode 0Fh 00h 3Eh  not defined */
                    /* opcode 0Fh 00h 3Fh  not defined */
                    /* opcode 0Fh 00h 70h  not defined */
                    /* opcode 0Fh 00h 71h  not defined */
                    /* opcode 0Fh 00h 72h  not defined */
                    /* opcode 0Fh 00h 73h  not defined */
                    /* opcode 0Fh 00h 74h  not defined */
                    /* opcode 0Fh 00h 75h  not defined */
                    /* opcode 0Fh 00h 76h  not defined */
                    /* opcode 0Fh 00h 77h  not defined */
                    /* opcode 0Fh 00h 78h  not defined */
                    /* opcode 0Fh 00h 79h  not defined */
                    /* opcode 0Fh 00h 7Ah  not defined */
                    /* opcode 0Fh 00h 7Bh  not defined */
                    /* opcode 0Fh 00h 7Ch  not defined */
                    /* opcode 0Fh 00h 7Dh  not defined */
                    /* opcode 0Fh 00h 7Eh  not defined */
                    /* opcode 0Fh 00h 7Fh  not defined */
                    /* opcode 0Fh 00h B0h  not defined */
                    /* opcode 0Fh 00h B1h  not defined */
                    /* opcode 0Fh 00h B2h  not defined */
                    /* opcode 0Fh 00h B3h  not defined */
                    /* opcode 0Fh 00h B4h  not defined */
                    /* opcode 0Fh 00h B5h  not defined */
                    /* opcode 0Fh 00h B6h  not defined */
                    /* opcode 0Fh 00h B7h  not defined */
                    /* opcode 0Fh 00h B8h  not defined */
                    /* opcode 0Fh 00h B9h  not defined */
                    /* opcode 0Fh 00h BAh  not defined */
                    /* opcode 0Fh 00h BBh  not defined */
                    /* opcode 0Fh 00h BCh  not defined */
                    /* opcode 0Fh 00h BDh  not defined */
                    /* opcode 0Fh 00h BEh  not defined */
                    /* opcode 0Fh 00h BFh  not defined */
                    /* opcode 0Fh 00h C0h  not defined */
                    /* opcode 0Fh 00h C1h  not defined */
                    /* opcode 0Fh 00h C2h  not defined */
                    /* opcode 0Fh 00h C3h  not defined */
                    /* opcode 0Fh 00h C4h  not defined */
                    /* opcode 0Fh 00h C5h  not defined */
                    /* opcode 0Fh 00h C6h  not defined */
                    /* opcode 0Fh 00h C7h  not defined */
                    /* opcode 0Fh 00h C8h  not defined */
                    /* opcode 0Fh 00h C9h  not defined */
                    /* opcode 0Fh 00h CAh  not defined */
                    /* opcode 0Fh 00h CBh  not defined */
                    /* opcode 0Fh 00h CCh  not defined */
                    /* opcode 0Fh 00h CDh  not defined */
                    /* opcode 0Fh 00h CEh  not defined */
                    /* opcode 0Fh 00h CFh  not defined */
                    /* opcode 0Fh 00h D0h  not defined */
                    /* opcode 0Fh 00h D1h  not defined */
                    /* opcode 0Fh 00h D2h  not defined */
                    /* opcode 0Fh 00h D3h  not defined */
                    /* opcode 0Fh 00h D4h  not defined */
                    /* opcode 0Fh 00h D5h  not defined */
                    /* opcode 0Fh 00h D6h  not defined */
                    /* opcode 0Fh 00h D7h  not defined */
                    /* opcode 0Fh 00h D8h  not defined */
                    /* opcode 0Fh 00h D9h  not defined */
                    /* opcode 0Fh 00h DAh  not defined */
                    /* opcode 0Fh 00h DBh  not defined */
                    /* opcode 0Fh 00h DCh  not defined */
                    /* opcode 0Fh 00h DDh  not defined */
                    /* opcode 0Fh 00h DEh  not defined */
                    /* opcode 0Fh 00h DFh  not defined */
                    /* opcode 0Fh 00h E0h  not defined */
                    /* opcode 0Fh 00h E1h  not defined */
                    /* opcode 0Fh 00h E2h  not defined */
                    /* opcode 0Fh 00h E3h  not defined */
                    /* opcode 0Fh 00h E4h  not defined */
                    /* opcode 0Fh 00h E5h  not defined */
                    /* opcode 0Fh 00h E6h  not defined */
                    /* opcode 0Fh 00h E7h  not defined */
                    /* opcode 0Fh 00h E8h  not defined */
                    /* opcode 0Fh 00h E9h  not defined */
                    /* opcode 0Fh 00h EAh  not defined */
                    /* opcode 0Fh 00h EBh  not defined */
                    /* opcode 0Fh 00h ECh  not defined */
                    /* opcode 0Fh 00h EDh  not defined */
                    /* opcode 0Fh 00h EEh  not defined */
                    /* opcode 0Fh 00h EFh  not defined */
                    /* opcode 0Fh 00h F0h  not defined */
                    /* opcode 0Fh 00h F1h  not defined */
                    /* opcode 0Fh 00h F2h  not defined */
                    /* opcode 0Fh 00h F3h  not defined */
                    /* opcode 0Fh 00h F4h  not defined */
                    /* opcode 0Fh 00h F5h  not defined */
                    /* opcode 0Fh 00h F6h  not defined */
                    /* opcode 0Fh 00h F7h  not defined */
                    /* opcode 0Fh 00h F8h  not defined */
                    /* opcode 0Fh 00h F9h  not defined */
                    /* opcode 0Fh 00h FAh  not defined */
                    /* opcode 0Fh 00h FBh  not defined */
                    /* opcode 0Fh 00h FCh  not defined */
                    /* opcode 0Fh 00h FDh  not defined */
                    /* opcode 0Fh 00h FEh  not defined */
                    /* opcode 0Fh 00h FFh  not defined */
                    default:
                        goto _x86decode_illegal_opcode;
                };
/* End of opcodes starting with 0Fh 00h */
                break;
            case 0x01: /* 0Fh 01h        spec:  */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
/* Opcodes starting with 0Fh 01h */
                switch (mrm.byte) {
                    case 0x00: /* 0Fh 01h 00h SGDTd w(r/m) mod=0 reg=0 rm=0      spec: 0x0F 0x01 mod/reg/rm /0 mod!=3 */
                    case 0x01: /* 0Fh 01h 01h SGDTd w(r/m) mod=0 reg=0 rm=1      spec: 0x0F 0x01 mod/reg/rm /0 mod!=3 */
                    case 0x02: /* 0Fh 01h 02h SGDTd w(r/m) mod=0 reg=0 rm=2      spec: 0x0F 0x01 mod/reg/rm /0 mod!=3 */
                    case 0x03: /* 0Fh 01h 03h SGDTd w(r/m) mod=0 reg=0 rm=3      spec: 0x0F 0x01 mod/reg/rm /0 mod!=3 */
                    case 0x04: /* 0Fh 01h 04h SGDTd w(r/m) mod=0 reg=0 rm=4      spec: 0x0F 0x01 mod/reg/rm /0 mod!=3 */
                    case 0x05: /* 0Fh 01h 05h SGDTd w(r/m) mod=0 reg=0 rm=5      spec: 0x0F 0x01 mod/reg/rm /0 mod!=3 */
                    case 0x06: /* 0Fh 01h 06h SGDTd w(r/m) mod=0 reg=0 rm=6      spec: 0x0F 0x01 mod/reg/rm /0 mod!=3 */
                    case 0x07: /* 0Fh 01h 07h SGDTd w(r/m) mod=0 reg=0 rm=7      spec: 0x0F 0x01 mod/reg/rm /0 mod!=3 */
                    case 0x40: /* 0Fh 01h 40h SGDTd w(r/m) mod=1 reg=0 rm=0      spec: 0x0F 0x01 mod/reg/rm /0 mod!=3 */
                    case 0x41: /* 0Fh 01h 41h SGDTd w(r/m) mod=1 reg=0 rm=1      spec: 0x0F 0x01 mod/reg/rm /0 mod!=3 */
                    case 0x42: /* 0Fh 01h 42h SGDTd w(r/m) mod=1 reg=0 rm=2      spec: 0x0F 0x01 mod/reg/rm /0 mod!=3 */
                    case 0x43: /* 0Fh 01h 43h SGDTd w(r/m) mod=1 reg=0 rm=3      spec: 0x0F 0x01 mod/reg/rm /0 mod!=3 */
                    case 0x44: /* 0Fh 01h 44h SGDTd w(r/m) mod=1 reg=0 rm=4      spec: 0x0F 0x01 mod/reg/rm /0 mod!=3 */
                    case 0x45: /* 0Fh 01h 45h SGDTd w(r/m) mod=1 reg=0 rm=5      spec: 0x0F 0x01 mod/reg/rm /0 mod!=3 */
                    case 0x46: /* 0Fh 01h 46h SGDTd w(r/m) mod=1 reg=0 rm=6      spec: 0x0F 0x01 mod/reg/rm /0 mod!=3 */
                    case 0x47: /* 0Fh 01h 47h SGDTd w(r/m) mod=1 reg=0 rm=7      spec: 0x0F 0x01 mod/reg/rm /0 mod!=3 */
                    case 0x80: /* 0Fh 01h 80h SGDTd w(r/m) mod=2 reg=0 rm=0      spec: 0x0F 0x01 mod/reg/rm /0 mod!=3 */
                    case 0x81: /* 0Fh 01h 81h SGDTd w(r/m) mod=2 reg=0 rm=1      spec: 0x0F 0x01 mod/reg/rm /0 mod!=3 */
                    case 0x82: /* 0Fh 01h 82h SGDTd w(r/m) mod=2 reg=0 rm=2      spec: 0x0F 0x01 mod/reg/rm /0 mod!=3 */
                    case 0x83: /* 0Fh 01h 83h SGDTd w(r/m) mod=2 reg=0 rm=3      spec: 0x0F 0x01 mod/reg/rm /0 mod!=3 */
                    case 0x84: /* 0Fh 01h 84h SGDTd w(r/m) mod=2 reg=0 rm=4      spec: 0x0F 0x01 mod/reg/rm /0 mod!=3 */
                    case 0x85: /* 0Fh 01h 85h SGDTd w(r/m) mod=2 reg=0 rm=5      spec: 0x0F 0x01 mod/reg/rm /0 mod!=3 */
                    case 0x86: /* 0Fh 01h 86h SGDTd w(r/m) mod=2 reg=0 rm=6      spec: 0x0F 0x01 mod/reg/rm /0 mod!=3 */
                    case 0x87: /* 0Fh 01h 87h SGDTd w(r/m) mod=2 reg=0 rm=7      spec: 0x0F 0x01 mod/reg/rm /0 mod!=3 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SGDTd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                        break;
                    case 0x08: /* 0Fh 01h 08h SIDTd w(r/m) mod=0 reg=1 rm=0      spec: 0x0F 0x01 mod/reg/rm /1 mod!=3 */
                    case 0x09: /* 0Fh 01h 09h SIDTd w(r/m) mod=0 reg=1 rm=1      spec: 0x0F 0x01 mod/reg/rm /1 mod!=3 */
                    case 0x0A: /* 0Fh 01h 0Ah SIDTd w(r/m) mod=0 reg=1 rm=2      spec: 0x0F 0x01 mod/reg/rm /1 mod!=3 */
                    case 0x0B: /* 0Fh 01h 0Bh SIDTd w(r/m) mod=0 reg=1 rm=3      spec: 0x0F 0x01 mod/reg/rm /1 mod!=3 */
                    case 0x0C: /* 0Fh 01h 0Ch SIDTd w(r/m) mod=0 reg=1 rm=4      spec: 0x0F 0x01 mod/reg/rm /1 mod!=3 */
                    case 0x0D: /* 0Fh 01h 0Dh SIDTd w(r/m) mod=0 reg=1 rm=5      spec: 0x0F 0x01 mod/reg/rm /1 mod!=3 */
                    case 0x0E: /* 0Fh 01h 0Eh SIDTd w(r/m) mod=0 reg=1 rm=6      spec: 0x0F 0x01 mod/reg/rm /1 mod!=3 */
                    case 0x0F: /* 0Fh 01h 0Fh SIDTd w(r/m) mod=0 reg=1 rm=7      spec: 0x0F 0x01 mod/reg/rm /1 mod!=3 */
                    case 0x48: /* 0Fh 01h 48h SIDTd w(r/m) mod=1 reg=1 rm=0      spec: 0x0F 0x01 mod/reg/rm /1 mod!=3 */
                    case 0x49: /* 0Fh 01h 49h SIDTd w(r/m) mod=1 reg=1 rm=1      spec: 0x0F 0x01 mod/reg/rm /1 mod!=3 */
                    case 0x4A: /* 0Fh 01h 4Ah SIDTd w(r/m) mod=1 reg=1 rm=2      spec: 0x0F 0x01 mod/reg/rm /1 mod!=3 */
                    case 0x4B: /* 0Fh 01h 4Bh SIDTd w(r/m) mod=1 reg=1 rm=3      spec: 0x0F 0x01 mod/reg/rm /1 mod!=3 */
                    case 0x4C: /* 0Fh 01h 4Ch SIDTd w(r/m) mod=1 reg=1 rm=4      spec: 0x0F 0x01 mod/reg/rm /1 mod!=3 */
                    case 0x4D: /* 0Fh 01h 4Dh SIDTd w(r/m) mod=1 reg=1 rm=5      spec: 0x0F 0x01 mod/reg/rm /1 mod!=3 */
                    case 0x4E: /* 0Fh 01h 4Eh SIDTd w(r/m) mod=1 reg=1 rm=6      spec: 0x0F 0x01 mod/reg/rm /1 mod!=3 */
                    case 0x4F: /* 0Fh 01h 4Fh SIDTd w(r/m) mod=1 reg=1 rm=7      spec: 0x0F 0x01 mod/reg/rm /1 mod!=3 */
                    case 0x88: /* 0Fh 01h 88h SIDTd w(r/m) mod=2 reg=1 rm=0      spec: 0x0F 0x01 mod/reg/rm /1 mod!=3 */
                    case 0x89: /* 0Fh 01h 89h SIDTd w(r/m) mod=2 reg=1 rm=1      spec: 0x0F 0x01 mod/reg/rm /1 mod!=3 */
                    case 0x8A: /* 0Fh 01h 8Ah SIDTd w(r/m) mod=2 reg=1 rm=2      spec: 0x0F 0x01 mod/reg/rm /1 mod!=3 */
                    case 0x8B: /* 0Fh 01h 8Bh SIDTd w(r/m) mod=2 reg=1 rm=3      spec: 0x0F 0x01 mod/reg/rm /1 mod!=3 */
                    case 0x8C: /* 0Fh 01h 8Ch SIDTd w(r/m) mod=2 reg=1 rm=4      spec: 0x0F 0x01 mod/reg/rm /1 mod!=3 */
                    case 0x8D: /* 0Fh 01h 8Dh SIDTd w(r/m) mod=2 reg=1 rm=5      spec: 0x0F 0x01 mod/reg/rm /1 mod!=3 */
                    case 0x8E: /* 0Fh 01h 8Eh SIDTd w(r/m) mod=2 reg=1 rm=6      spec: 0x0F 0x01 mod/reg/rm /1 mod!=3 */
                    case 0x8F: /* 0Fh 01h 8Fh SIDTd w(r/m) mod=2 reg=1 rm=7      spec: 0x0F 0x01 mod/reg/rm /1 mod!=3 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SIDTd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                        break;
                    case 0x10: /* 0Fh 01h 10h LGDTd w(r/m) mod=0 reg=2 rm=0      spec: 0x0F 0x01 mod/reg/rm /2 mod!=3 */
                    case 0x11: /* 0Fh 01h 11h LGDTd w(r/m) mod=0 reg=2 rm=1      spec: 0x0F 0x01 mod/reg/rm /2 mod!=3 */
                    case 0x12: /* 0Fh 01h 12h LGDTd w(r/m) mod=0 reg=2 rm=2      spec: 0x0F 0x01 mod/reg/rm /2 mod!=3 */
                    case 0x13: /* 0Fh 01h 13h LGDTd w(r/m) mod=0 reg=2 rm=3      spec: 0x0F 0x01 mod/reg/rm /2 mod!=3 */
                    case 0x14: /* 0Fh 01h 14h LGDTd w(r/m) mod=0 reg=2 rm=4      spec: 0x0F 0x01 mod/reg/rm /2 mod!=3 */
                    case 0x15: /* 0Fh 01h 15h LGDTd w(r/m) mod=0 reg=2 rm=5      spec: 0x0F 0x01 mod/reg/rm /2 mod!=3 */
                    case 0x16: /* 0Fh 01h 16h LGDTd w(r/m) mod=0 reg=2 rm=6      spec: 0x0F 0x01 mod/reg/rm /2 mod!=3 */
                    case 0x17: /* 0Fh 01h 17h LGDTd w(r/m) mod=0 reg=2 rm=7      spec: 0x0F 0x01 mod/reg/rm /2 mod!=3 */
                    case 0x50: /* 0Fh 01h 50h LGDTd w(r/m) mod=1 reg=2 rm=0      spec: 0x0F 0x01 mod/reg/rm /2 mod!=3 */
                    case 0x51: /* 0Fh 01h 51h LGDTd w(r/m) mod=1 reg=2 rm=1      spec: 0x0F 0x01 mod/reg/rm /2 mod!=3 */
                    case 0x52: /* 0Fh 01h 52h LGDTd w(r/m) mod=1 reg=2 rm=2      spec: 0x0F 0x01 mod/reg/rm /2 mod!=3 */
                    case 0x53: /* 0Fh 01h 53h LGDTd w(r/m) mod=1 reg=2 rm=3      spec: 0x0F 0x01 mod/reg/rm /2 mod!=3 */
                    case 0x54: /* 0Fh 01h 54h LGDTd w(r/m) mod=1 reg=2 rm=4      spec: 0x0F 0x01 mod/reg/rm /2 mod!=3 */
                    case 0x55: /* 0Fh 01h 55h LGDTd w(r/m) mod=1 reg=2 rm=5      spec: 0x0F 0x01 mod/reg/rm /2 mod!=3 */
                    case 0x56: /* 0Fh 01h 56h LGDTd w(r/m) mod=1 reg=2 rm=6      spec: 0x0F 0x01 mod/reg/rm /2 mod!=3 */
                    case 0x57: /* 0Fh 01h 57h LGDTd w(r/m) mod=1 reg=2 rm=7      spec: 0x0F 0x01 mod/reg/rm /2 mod!=3 */
                    case 0x90: /* 0Fh 01h 90h LGDTd w(r/m) mod=2 reg=2 rm=0      spec: 0x0F 0x01 mod/reg/rm /2 mod!=3 */
                    case 0x91: /* 0Fh 01h 91h LGDTd w(r/m) mod=2 reg=2 rm=1      spec: 0x0F 0x01 mod/reg/rm /2 mod!=3 */
                    case 0x92: /* 0Fh 01h 92h LGDTd w(r/m) mod=2 reg=2 rm=2      spec: 0x0F 0x01 mod/reg/rm /2 mod!=3 */
                    case 0x93: /* 0Fh 01h 93h LGDTd w(r/m) mod=2 reg=2 rm=3      spec: 0x0F 0x01 mod/reg/rm /2 mod!=3 */
                    case 0x94: /* 0Fh 01h 94h LGDTd w(r/m) mod=2 reg=2 rm=4      spec: 0x0F 0x01 mod/reg/rm /2 mod!=3 */
                    case 0x95: /* 0Fh 01h 95h LGDTd w(r/m) mod=2 reg=2 rm=5      spec: 0x0F 0x01 mod/reg/rm /2 mod!=3 */
                    case 0x96: /* 0Fh 01h 96h LGDTd w(r/m) mod=2 reg=2 rm=6      spec: 0x0F 0x01 mod/reg/rm /2 mod!=3 */
                    case 0x97: /* 0Fh 01h 97h LGDTd w(r/m) mod=2 reg=2 rm=7      spec: 0x0F 0x01 mod/reg/rm /2 mod!=3 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"LGDTd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                        break;
                    case 0x18: /* 0Fh 01h 18h LIDTd w(r/m) mod=0 reg=3 rm=0      spec: 0x0F 0x01 mod/reg/rm /3 mod!=3 */
                    case 0x19: /* 0Fh 01h 19h LIDTd w(r/m) mod=0 reg=3 rm=1      spec: 0x0F 0x01 mod/reg/rm /3 mod!=3 */
                    case 0x1A: /* 0Fh 01h 1Ah LIDTd w(r/m) mod=0 reg=3 rm=2      spec: 0x0F 0x01 mod/reg/rm /3 mod!=3 */
                    case 0x1B: /* 0Fh 01h 1Bh LIDTd w(r/m) mod=0 reg=3 rm=3      spec: 0x0F 0x01 mod/reg/rm /3 mod!=3 */
                    case 0x1C: /* 0Fh 01h 1Ch LIDTd w(r/m) mod=0 reg=3 rm=4      spec: 0x0F 0x01 mod/reg/rm /3 mod!=3 */
                    case 0x1D: /* 0Fh 01h 1Dh LIDTd w(r/m) mod=0 reg=3 rm=5      spec: 0x0F 0x01 mod/reg/rm /3 mod!=3 */
                    case 0x1E: /* 0Fh 01h 1Eh LIDTd w(r/m) mod=0 reg=3 rm=6      spec: 0x0F 0x01 mod/reg/rm /3 mod!=3 */
                    case 0x1F: /* 0Fh 01h 1Fh LIDTd w(r/m) mod=0 reg=3 rm=7      spec: 0x0F 0x01 mod/reg/rm /3 mod!=3 */
                    case 0x58: /* 0Fh 01h 58h LIDTd w(r/m) mod=1 reg=3 rm=0      spec: 0x0F 0x01 mod/reg/rm /3 mod!=3 */
                    case 0x59: /* 0Fh 01h 59h LIDTd w(r/m) mod=1 reg=3 rm=1      spec: 0x0F 0x01 mod/reg/rm /3 mod!=3 */
                    case 0x5A: /* 0Fh 01h 5Ah LIDTd w(r/m) mod=1 reg=3 rm=2      spec: 0x0F 0x01 mod/reg/rm /3 mod!=3 */
                    case 0x5B: /* 0Fh 01h 5Bh LIDTd w(r/m) mod=1 reg=3 rm=3      spec: 0x0F 0x01 mod/reg/rm /3 mod!=3 */
                    case 0x5C: /* 0Fh 01h 5Ch LIDTd w(r/m) mod=1 reg=3 rm=4      spec: 0x0F 0x01 mod/reg/rm /3 mod!=3 */
                    case 0x5D: /* 0Fh 01h 5Dh LIDTd w(r/m) mod=1 reg=3 rm=5      spec: 0x0F 0x01 mod/reg/rm /3 mod!=3 */
                    case 0x5E: /* 0Fh 01h 5Eh LIDTd w(r/m) mod=1 reg=3 rm=6      spec: 0x0F 0x01 mod/reg/rm /3 mod!=3 */
                    case 0x5F: /* 0Fh 01h 5Fh LIDTd w(r/m) mod=1 reg=3 rm=7      spec: 0x0F 0x01 mod/reg/rm /3 mod!=3 */
                    case 0x98: /* 0Fh 01h 98h LIDTd w(r/m) mod=2 reg=3 rm=0      spec: 0x0F 0x01 mod/reg/rm /3 mod!=3 */
                    case 0x99: /* 0Fh 01h 99h LIDTd w(r/m) mod=2 reg=3 rm=1      spec: 0x0F 0x01 mod/reg/rm /3 mod!=3 */
                    case 0x9A: /* 0Fh 01h 9Ah LIDTd w(r/m) mod=2 reg=3 rm=2      spec: 0x0F 0x01 mod/reg/rm /3 mod!=3 */
                    case 0x9B: /* 0Fh 01h 9Bh LIDTd w(r/m) mod=2 reg=3 rm=3      spec: 0x0F 0x01 mod/reg/rm /3 mod!=3 */
                    case 0x9C: /* 0Fh 01h 9Ch LIDTd w(r/m) mod=2 reg=3 rm=4      spec: 0x0F 0x01 mod/reg/rm /3 mod!=3 */
                    case 0x9D: /* 0Fh 01h 9Dh LIDTd w(r/m) mod=2 reg=3 rm=5      spec: 0x0F 0x01 mod/reg/rm /3 mod!=3 */
                    case 0x9E: /* 0Fh 01h 9Eh LIDTd w(r/m) mod=2 reg=3 rm=6      spec: 0x0F 0x01 mod/reg/rm /3 mod!=3 */
                    case 0x9F: /* 0Fh 01h 9Fh LIDTd w(r/m) mod=2 reg=3 rm=7      spec: 0x0F 0x01 mod/reg/rm /3 mod!=3 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"LIDTd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                        break;
                    case 0x20: /* 0Fh 01h 20h SMSWd w(r/m) mod=0 reg=4 rm=0      spec: 0x0F 0x01 mod/reg/rm /4 mod!=3 */
                    case 0x21: /* 0Fh 01h 21h SMSWd w(r/m) mod=0 reg=4 rm=1      spec: 0x0F 0x01 mod/reg/rm /4 mod!=3 */
                    case 0x22: /* 0Fh 01h 22h SMSWd w(r/m) mod=0 reg=4 rm=2      spec: 0x0F 0x01 mod/reg/rm /4 mod!=3 */
                    case 0x23: /* 0Fh 01h 23h SMSWd w(r/m) mod=0 reg=4 rm=3      spec: 0x0F 0x01 mod/reg/rm /4 mod!=3 */
                    case 0x24: /* 0Fh 01h 24h SMSWd w(r/m) mod=0 reg=4 rm=4      spec: 0x0F 0x01 mod/reg/rm /4 mod!=3 */
                    case 0x25: /* 0Fh 01h 25h SMSWd w(r/m) mod=0 reg=4 rm=5      spec: 0x0F 0x01 mod/reg/rm /4 mod!=3 */
                    case 0x26: /* 0Fh 01h 26h SMSWd w(r/m) mod=0 reg=4 rm=6      spec: 0x0F 0x01 mod/reg/rm /4 mod!=3 */
                    case 0x27: /* 0Fh 01h 27h SMSWd w(r/m) mod=0 reg=4 rm=7      spec: 0x0F 0x01 mod/reg/rm /4 mod!=3 */
                    case 0x60: /* 0Fh 01h 60h SMSWd w(r/m) mod=1 reg=4 rm=0      spec: 0x0F 0x01 mod/reg/rm /4 mod!=3 */
                    case 0x61: /* 0Fh 01h 61h SMSWd w(r/m) mod=1 reg=4 rm=1      spec: 0x0F 0x01 mod/reg/rm /4 mod!=3 */
                    case 0x62: /* 0Fh 01h 62h SMSWd w(r/m) mod=1 reg=4 rm=2      spec: 0x0F 0x01 mod/reg/rm /4 mod!=3 */
                    case 0x63: /* 0Fh 01h 63h SMSWd w(r/m) mod=1 reg=4 rm=3      spec: 0x0F 0x01 mod/reg/rm /4 mod!=3 */
                    case 0x64: /* 0Fh 01h 64h SMSWd w(r/m) mod=1 reg=4 rm=4      spec: 0x0F 0x01 mod/reg/rm /4 mod!=3 */
                    case 0x65: /* 0Fh 01h 65h SMSWd w(r/m) mod=1 reg=4 rm=5      spec: 0x0F 0x01 mod/reg/rm /4 mod!=3 */
                    case 0x66: /* 0Fh 01h 66h SMSWd w(r/m) mod=1 reg=4 rm=6      spec: 0x0F 0x01 mod/reg/rm /4 mod!=3 */
                    case 0x67: /* 0Fh 01h 67h SMSWd w(r/m) mod=1 reg=4 rm=7      spec: 0x0F 0x01 mod/reg/rm /4 mod!=3 */
                    case 0xA0: /* 0Fh 01h A0h SMSWd w(r/m) mod=2 reg=4 rm=0      spec: 0x0F 0x01 mod/reg/rm /4 mod!=3 */
                    case 0xA1: /* 0Fh 01h A1h SMSWd w(r/m) mod=2 reg=4 rm=1      spec: 0x0F 0x01 mod/reg/rm /4 mod!=3 */
                    case 0xA2: /* 0Fh 01h A2h SMSWd w(r/m) mod=2 reg=4 rm=2      spec: 0x0F 0x01 mod/reg/rm /4 mod!=3 */
                    case 0xA3: /* 0Fh 01h A3h SMSWd w(r/m) mod=2 reg=4 rm=3      spec: 0x0F 0x01 mod/reg/rm /4 mod!=3 */
                    case 0xA4: /* 0Fh 01h A4h SMSWd w(r/m) mod=2 reg=4 rm=4      spec: 0x0F 0x01 mod/reg/rm /4 mod!=3 */
                    case 0xA5: /* 0Fh 01h A5h SMSWd w(r/m) mod=2 reg=4 rm=5      spec: 0x0F 0x01 mod/reg/rm /4 mod!=3 */
                    case 0xA6: /* 0Fh 01h A6h SMSWd w(r/m) mod=2 reg=4 rm=6      spec: 0x0F 0x01 mod/reg/rm /4 mod!=3 */
                    case 0xA7: /* 0Fh 01h A7h SMSWd w(r/m) mod=2 reg=4 rm=7      spec: 0x0F 0x01 mod/reg/rm /4 mod!=3 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SMSWd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                        break;
                    /* opcode 0Fh 01h 28h  not defined */
                    /* opcode 0Fh 01h 29h  not defined */
                    /* opcode 0Fh 01h 2Ah  not defined */
                    /* opcode 0Fh 01h 2Bh  not defined */
                    /* opcode 0Fh 01h 2Ch  not defined */
                    /* opcode 0Fh 01h 2Dh  not defined */
                    /* opcode 0Fh 01h 2Eh  not defined */
                    /* opcode 0Fh 01h 2Fh  not defined */
                    case 0x30: /* 0Fh 01h 30h LMSWd w(r/m) mod=0 reg=6 rm=0      spec: 0x0F 0x01 mod/reg/rm /6 mod!=3 */
                    case 0x31: /* 0Fh 01h 31h LMSWd w(r/m) mod=0 reg=6 rm=1      spec: 0x0F 0x01 mod/reg/rm /6 mod!=3 */
                    case 0x32: /* 0Fh 01h 32h LMSWd w(r/m) mod=0 reg=6 rm=2      spec: 0x0F 0x01 mod/reg/rm /6 mod!=3 */
                    case 0x33: /* 0Fh 01h 33h LMSWd w(r/m) mod=0 reg=6 rm=3      spec: 0x0F 0x01 mod/reg/rm /6 mod!=3 */
                    case 0x34: /* 0Fh 01h 34h LMSWd w(r/m) mod=0 reg=6 rm=4      spec: 0x0F 0x01 mod/reg/rm /6 mod!=3 */
                    case 0x35: /* 0Fh 01h 35h LMSWd w(r/m) mod=0 reg=6 rm=5      spec: 0x0F 0x01 mod/reg/rm /6 mod!=3 */
                    case 0x36: /* 0Fh 01h 36h LMSWd w(r/m) mod=0 reg=6 rm=6      spec: 0x0F 0x01 mod/reg/rm /6 mod!=3 */
                    case 0x37: /* 0Fh 01h 37h LMSWd w(r/m) mod=0 reg=6 rm=7      spec: 0x0F 0x01 mod/reg/rm /6 mod!=3 */
                    case 0x70: /* 0Fh 01h 70h LMSWd w(r/m) mod=1 reg=6 rm=0      spec: 0x0F 0x01 mod/reg/rm /6 mod!=3 */
                    case 0x71: /* 0Fh 01h 71h LMSWd w(r/m) mod=1 reg=6 rm=1      spec: 0x0F 0x01 mod/reg/rm /6 mod!=3 */
                    case 0x72: /* 0Fh 01h 72h LMSWd w(r/m) mod=1 reg=6 rm=2      spec: 0x0F 0x01 mod/reg/rm /6 mod!=3 */
                    case 0x73: /* 0Fh 01h 73h LMSWd w(r/m) mod=1 reg=6 rm=3      spec: 0x0F 0x01 mod/reg/rm /6 mod!=3 */
                    case 0x74: /* 0Fh 01h 74h LMSWd w(r/m) mod=1 reg=6 rm=4      spec: 0x0F 0x01 mod/reg/rm /6 mod!=3 */
                    case 0x75: /* 0Fh 01h 75h LMSWd w(r/m) mod=1 reg=6 rm=5      spec: 0x0F 0x01 mod/reg/rm /6 mod!=3 */
                    case 0x76: /* 0Fh 01h 76h LMSWd w(r/m) mod=1 reg=6 rm=6      spec: 0x0F 0x01 mod/reg/rm /6 mod!=3 */
                    case 0x77: /* 0Fh 01h 77h LMSWd w(r/m) mod=1 reg=6 rm=7      spec: 0x0F 0x01 mod/reg/rm /6 mod!=3 */
                    case 0xB0: /* 0Fh 01h B0h LMSWd w(r/m) mod=2 reg=6 rm=0      spec: 0x0F 0x01 mod/reg/rm /6 mod!=3 */
                    case 0xB1: /* 0Fh 01h B1h LMSWd w(r/m) mod=2 reg=6 rm=1      spec: 0x0F 0x01 mod/reg/rm /6 mod!=3 */
                    case 0xB2: /* 0Fh 01h B2h LMSWd w(r/m) mod=2 reg=6 rm=2      spec: 0x0F 0x01 mod/reg/rm /6 mod!=3 */
                    case 0xB3: /* 0Fh 01h B3h LMSWd w(r/m) mod=2 reg=6 rm=3      spec: 0x0F 0x01 mod/reg/rm /6 mod!=3 */
                    case 0xB4: /* 0Fh 01h B4h LMSWd w(r/m) mod=2 reg=6 rm=4      spec: 0x0F 0x01 mod/reg/rm /6 mod!=3 */
                    case 0xB5: /* 0Fh 01h B5h LMSWd w(r/m) mod=2 reg=6 rm=5      spec: 0x0F 0x01 mod/reg/rm /6 mod!=3 */
                    case 0xB6: /* 0Fh 01h B6h LMSWd w(r/m) mod=2 reg=6 rm=6      spec: 0x0F 0x01 mod/reg/rm /6 mod!=3 */
                    case 0xB7: /* 0Fh 01h B7h LMSWd w(r/m) mod=2 reg=6 rm=7      spec: 0x0F 0x01 mod/reg/rm /6 mod!=3 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"LMSWd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                        break;
                    case 0x38: /* 0Fh 01h 38h INVLPG b(r/m) mod=0 reg=7 rm=0      spec: 0x0F 0x01 mod/reg/rm mod!=3 /7 */
                    case 0x39: /* 0Fh 01h 39h INVLPG b(r/m) mod=0 reg=7 rm=1      spec: 0x0F 0x01 mod/reg/rm mod!=3 /7 */
                    case 0x3A: /* 0Fh 01h 3Ah INVLPG b(r/m) mod=0 reg=7 rm=2      spec: 0x0F 0x01 mod/reg/rm mod!=3 /7 */
                    case 0x3B: /* 0Fh 01h 3Bh INVLPG b(r/m) mod=0 reg=7 rm=3      spec: 0x0F 0x01 mod/reg/rm mod!=3 /7 */
                    case 0x3C: /* 0Fh 01h 3Ch INVLPG b(r/m) mod=0 reg=7 rm=4      spec: 0x0F 0x01 mod/reg/rm mod!=3 /7 */
                    case 0x3D: /* 0Fh 01h 3Dh INVLPG b(r/m) mod=0 reg=7 rm=5      spec: 0x0F 0x01 mod/reg/rm mod!=3 /7 */
                    case 0x3E: /* 0Fh 01h 3Eh INVLPG b(r/m) mod=0 reg=7 rm=6      spec: 0x0F 0x01 mod/reg/rm mod!=3 /7 */
                    case 0x3F: /* 0Fh 01h 3Fh INVLPG b(r/m) mod=0 reg=7 rm=7      spec: 0x0F 0x01 mod/reg/rm mod!=3 /7 */
                    case 0x78: /* 0Fh 01h 78h INVLPG b(r/m) mod=1 reg=7 rm=0      spec: 0x0F 0x01 mod/reg/rm mod!=3 /7 */
                    case 0x79: /* 0Fh 01h 79h INVLPG b(r/m) mod=1 reg=7 rm=1      spec: 0x0F 0x01 mod/reg/rm mod!=3 /7 */
                    case 0x7A: /* 0Fh 01h 7Ah INVLPG b(r/m) mod=1 reg=7 rm=2      spec: 0x0F 0x01 mod/reg/rm mod!=3 /7 */
                    case 0x7B: /* 0Fh 01h 7Bh INVLPG b(r/m) mod=1 reg=7 rm=3      spec: 0x0F 0x01 mod/reg/rm mod!=3 /7 */
                    case 0x7C: /* 0Fh 01h 7Ch INVLPG b(r/m) mod=1 reg=7 rm=4      spec: 0x0F 0x01 mod/reg/rm mod!=3 /7 */
                    case 0x7D: /* 0Fh 01h 7Dh INVLPG b(r/m) mod=1 reg=7 rm=5      spec: 0x0F 0x01 mod/reg/rm mod!=3 /7 */
                    case 0x7E: /* 0Fh 01h 7Eh INVLPG b(r/m) mod=1 reg=7 rm=6      spec: 0x0F 0x01 mod/reg/rm mod!=3 /7 */
                    case 0x7F: /* 0Fh 01h 7Fh INVLPG b(r/m) mod=1 reg=7 rm=7      spec: 0x0F 0x01 mod/reg/rm mod!=3 /7 */
                    case 0xB8: /* 0Fh 01h B8h INVLPG b(r/m) mod=2 reg=7 rm=0      spec: 0x0F 0x01 mod/reg/rm mod!=3 /7 */
                    case 0xB9: /* 0Fh 01h B9h INVLPG b(r/m) mod=2 reg=7 rm=1      spec: 0x0F 0x01 mod/reg/rm mod!=3 /7 */
                    case 0xBA: /* 0Fh 01h BAh INVLPG b(r/m) mod=2 reg=7 rm=2      spec: 0x0F 0x01 mod/reg/rm mod!=3 /7 */
                    case 0xBB: /* 0Fh 01h BBh INVLPG b(r/m) mod=2 reg=7 rm=3      spec: 0x0F 0x01 mod/reg/rm mod!=3 /7 */
                    case 0xBC: /* 0Fh 01h BCh INVLPG b(r/m) mod=2 reg=7 rm=4      spec: 0x0F 0x01 mod/reg/rm mod!=3 /7 */
                    case 0xBD: /* 0Fh 01h BDh INVLPG b(r/m) mod=2 reg=7 rm=5      spec: 0x0F 0x01 mod/reg/rm mod!=3 /7 */
                    case 0xBE: /* 0Fh 01h BEh INVLPG b(r/m) mod=2 reg=7 rm=6      spec: 0x0F 0x01 mod/reg/rm mod!=3 /7 */
                    case 0xBF: /* 0Fh 01h BFh INVLPG b(r/m) mod=2 reg=7 rm=7      spec: 0x0F 0x01 mod/reg/rm mod!=3 /7 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"INVLPG %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                        break;
                    /* opcode 0Fh 01h 68h  not defined */
                    /* opcode 0Fh 01h 69h  not defined */
                    /* opcode 0Fh 01h 6Ah  not defined */
                    /* opcode 0Fh 01h 6Bh  not defined */
                    /* opcode 0Fh 01h 6Ch  not defined */
                    /* opcode 0Fh 01h 6Dh  not defined */
                    /* opcode 0Fh 01h 6Eh  not defined */
                    /* opcode 0Fh 01h 6Fh  not defined */
                    /* opcode 0Fh 01h A8h  not defined */
                    /* opcode 0Fh 01h A9h  not defined */
                    /* opcode 0Fh 01h AAh  not defined */
                    /* opcode 0Fh 01h ABh  not defined */
                    /* opcode 0Fh 01h ACh  not defined */
                    /* opcode 0Fh 01h ADh  not defined */
                    /* opcode 0Fh 01h AEh  not defined */
                    /* opcode 0Fh 01h AFh  not defined */
                    /* opcode 0Fh 01h C0h  not defined */
                    /* opcode 0Fh 01h C1h  not defined */
                    /* opcode 0Fh 01h C2h  not defined */
                    /* opcode 0Fh 01h C3h  not defined */
                    /* opcode 0Fh 01h C4h  not defined */
                    /* opcode 0Fh 01h C5h  not defined */
                    /* opcode 0Fh 01h C6h  not defined */
                    /* opcode 0Fh 01h C7h  not defined */
                    /* opcode 0Fh 01h C8h  not defined */
                    /* opcode 0Fh 01h C9h  not defined */
                    /* opcode 0Fh 01h CAh  not defined */
                    /* opcode 0Fh 01h CBh  not defined */
                    /* opcode 0Fh 01h CCh  not defined */
                    /* opcode 0Fh 01h CDh  not defined */
                    /* opcode 0Fh 01h CEh  not defined */
                    /* opcode 0Fh 01h CFh  not defined */
                    /* opcode 0Fh 01h D0h  not defined */
                    /* opcode 0Fh 01h D1h  not defined */
                    /* opcode 0Fh 01h D2h  not defined */
                    /* opcode 0Fh 01h D3h  not defined */
                    /* opcode 0Fh 01h D4h  not defined */
                    /* opcode 0Fh 01h D5h  not defined */
                    /* opcode 0Fh 01h D6h  not defined */
                    /* opcode 0Fh 01h D7h  not defined */
                    /* opcode 0Fh 01h D8h  not defined */
                    /* opcode 0Fh 01h D9h  not defined */
                    /* opcode 0Fh 01h DAh  not defined */
                    /* opcode 0Fh 01h DBh  not defined */
                    /* opcode 0Fh 01h DCh  not defined */
                    /* opcode 0Fh 01h DDh  not defined */
                    /* opcode 0Fh 01h DEh  not defined */
                    /* opcode 0Fh 01h DFh  not defined */
                    /* opcode 0Fh 01h E0h  not defined */
                    /* opcode 0Fh 01h E1h  not defined */
                    /* opcode 0Fh 01h E2h  not defined */
                    /* opcode 0Fh 01h E3h  not defined */
                    /* opcode 0Fh 01h E4h  not defined */
                    /* opcode 0Fh 01h E5h  not defined */
                    /* opcode 0Fh 01h E6h  not defined */
                    /* opcode 0Fh 01h E7h  not defined */
                    /* opcode 0Fh 01h E8h  not defined */
                    /* opcode 0Fh 01h E9h  not defined */
                    /* opcode 0Fh 01h EAh  not defined */
                    /* opcode 0Fh 01h EBh  not defined */
                    /* opcode 0Fh 01h ECh  not defined */
                    /* opcode 0Fh 01h EDh  not defined */
                    /* opcode 0Fh 01h EEh  not defined */
                    /* opcode 0Fh 01h EFh  not defined */
                    /* opcode 0Fh 01h F0h  not defined */
                    /* opcode 0Fh 01h F1h  not defined */
                    /* opcode 0Fh 01h F2h  not defined */
                    /* opcode 0Fh 01h F3h  not defined */
                    /* opcode 0Fh 01h F4h  not defined */
                    /* opcode 0Fh 01h F5h  not defined */
                    /* opcode 0Fh 01h F6h  not defined */
                    /* opcode 0Fh 01h F7h  not defined */
                    /* opcode 0Fh 01h F8h  not defined */
                    /* opcode 0Fh 01h F9h  not defined */
                    /* opcode 0Fh 01h FAh  not defined */
                    /* opcode 0Fh 01h FBh  not defined */
                    /* opcode 0Fh 01h FCh  not defined */
                    /* opcode 0Fh 01h FDh  not defined */
                    /* opcode 0Fh 01h FEh  not defined */
                    /* opcode 0Fh 01h FFh  not defined */
                    default:
                        goto _x86decode_illegal_opcode;
                };
/* End of opcodes starting with 0Fh 01h */
                break;
            case 0x02: /* 0Fh 02h LARd w(reg),w(r/m)      spec: 0x0F 0x02 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"LARd %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 0x03: /* 0Fh 03h LSLd w(reg),w(r/m)      spec: 0x0F 0x03 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"LSLd %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            /* opcode 0Fh 04h  not defined */
            /* opcode 0Fh 05h  not defined */
            case 0x06: /* 0Fh 06h CLTSd       spec: 0x0F 0x06 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CLTSd");
                break;
            /* opcode 0Fh 07h  not defined */
            case 0x08: /* 0Fh 08h INVD       spec: 0x0F 0x08 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"INVD");
                break;
            case 0x09: /* 0Fh 09h WBINVD       spec: 0x0F 0x09 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"WBINVD");
                break;
            /* opcode 0Fh 0Ah  not defined */
            /* opcode 0Fh 0Bh  not defined */
            /* opcode 0Fh 0Ch  not defined */
            /* opcode 0Fh 0Dh  not defined */
            /* opcode 0Fh 0Eh  not defined */
            /* opcode 0Fh 0Fh  not defined */
            /* opcode 0Fh 10h  not defined */
            /* opcode 0Fh 11h  not defined */
            /* opcode 0Fh 12h  not defined */
            /* opcode 0Fh 13h  not defined */
            /* opcode 0Fh 14h  not defined */
            /* opcode 0Fh 15h  not defined */
            /* opcode 0Fh 16h  not defined */
            /* opcode 0Fh 17h  not defined */
            /* opcode 0Fh 18h  not defined */
            /* opcode 0Fh 19h  not defined */
            /* opcode 0Fh 1Ah  not defined */
            /* opcode 0Fh 1Bh  not defined */
            /* opcode 0Fh 1Ch  not defined */
            /* opcode 0Fh 1Dh  not defined */
            /* opcode 0Fh 1Eh  not defined */
            /* opcode 0Fh 1Fh  not defined */
            case 0x20: /* 0Fh 20h        spec:  */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
/* Opcodes starting with 0Fh 20h */
                switch (mrm.byte) {
                    /* opcode 0Fh 20h 00h  not defined */
                    /* opcode 0Fh 20h 01h  not defined */
                    /* opcode 0Fh 20h 02h  not defined */
                    /* opcode 0Fh 20h 03h  not defined */
                    /* opcode 0Fh 20h 04h  not defined */
                    /* opcode 0Fh 20h 05h  not defined */
                    /* opcode 0Fh 20h 06h  not defined */
                    /* opcode 0Fh 20h 07h  not defined */
                    /* opcode 0Fh 20h 08h  not defined */
                    /* opcode 0Fh 20h 09h  not defined */
                    /* opcode 0Fh 20h 0Ah  not defined */
                    /* opcode 0Fh 20h 0Bh  not defined */
                    /* opcode 0Fh 20h 0Ch  not defined */
                    /* opcode 0Fh 20h 0Dh  not defined */
                    /* opcode 0Fh 20h 0Eh  not defined */
                    /* opcode 0Fh 20h 0Fh  not defined */
                    /* opcode 0Fh 20h 10h  not defined */
                    /* opcode 0Fh 20h 11h  not defined */
                    /* opcode 0Fh 20h 12h  not defined */
                    /* opcode 0Fh 20h 13h  not defined */
                    /* opcode 0Fh 20h 14h  not defined */
                    /* opcode 0Fh 20h 15h  not defined */
                    /* opcode 0Fh 20h 16h  not defined */
                    /* opcode 0Fh 20h 17h  not defined */
                    /* opcode 0Fh 20h 18h  not defined */
                    /* opcode 0Fh 20h 19h  not defined */
                    /* opcode 0Fh 20h 1Ah  not defined */
                    /* opcode 0Fh 20h 1Bh  not defined */
                    /* opcode 0Fh 20h 1Ch  not defined */
                    /* opcode 0Fh 20h 1Dh  not defined */
                    /* opcode 0Fh 20h 1Eh  not defined */
                    /* opcode 0Fh 20h 1Fh  not defined */
                    /* opcode 0Fh 20h 20h  not defined */
                    /* opcode 0Fh 20h 21h  not defined */
                    /* opcode 0Fh 20h 22h  not defined */
                    /* opcode 0Fh 20h 23h  not defined */
                    /* opcode 0Fh 20h 24h  not defined */
                    /* opcode 0Fh 20h 25h  not defined */
                    /* opcode 0Fh 20h 26h  not defined */
                    /* opcode 0Fh 20h 27h  not defined */
                    /* opcode 0Fh 20h 28h  not defined */
                    /* opcode 0Fh 20h 29h  not defined */
                    /* opcode 0Fh 20h 2Ah  not defined */
                    /* opcode 0Fh 20h 2Bh  not defined */
                    /* opcode 0Fh 20h 2Ch  not defined */
                    /* opcode 0Fh 20h 2Dh  not defined */
                    /* opcode 0Fh 20h 2Eh  not defined */
                    /* opcode 0Fh 20h 2Fh  not defined */
                    /* opcode 0Fh 20h 30h  not defined */
                    /* opcode 0Fh 20h 31h  not defined */
                    /* opcode 0Fh 20h 32h  not defined */
                    /* opcode 0Fh 20h 33h  not defined */
                    /* opcode 0Fh 20h 34h  not defined */
                    /* opcode 0Fh 20h 35h  not defined */
                    /* opcode 0Fh 20h 36h  not defined */
                    /* opcode 0Fh 20h 37h  not defined */
                    /* opcode 0Fh 20h 38h  not defined */
                    /* opcode 0Fh 20h 39h  not defined */
                    /* opcode 0Fh 20h 3Ah  not defined */
                    /* opcode 0Fh 20h 3Bh  not defined */
                    /* opcode 0Fh 20h 3Ch  not defined */
                    /* opcode 0Fh 20h 3Dh  not defined */
                    /* opcode 0Fh 20h 3Eh  not defined */
                    /* opcode 0Fh 20h 3Fh  not defined */
                    /* opcode 0Fh 20h 40h  not defined */
                    /* opcode 0Fh 20h 41h  not defined */
                    /* opcode 0Fh 20h 42h  not defined */
                    /* opcode 0Fh 20h 43h  not defined */
                    /* opcode 0Fh 20h 44h  not defined */
                    /* opcode 0Fh 20h 45h  not defined */
                    /* opcode 0Fh 20h 46h  not defined */
                    /* opcode 0Fh 20h 47h  not defined */
                    /* opcode 0Fh 20h 48h  not defined */
                    /* opcode 0Fh 20h 49h  not defined */
                    /* opcode 0Fh 20h 4Ah  not defined */
                    /* opcode 0Fh 20h 4Bh  not defined */
                    /* opcode 0Fh 20h 4Ch  not defined */
                    /* opcode 0Fh 20h 4Dh  not defined */
                    /* opcode 0Fh 20h 4Eh  not defined */
                    /* opcode 0Fh 20h 4Fh  not defined */
                    /* opcode 0Fh 20h 50h  not defined */
                    /* opcode 0Fh 20h 51h  not defined */
                    /* opcode 0Fh 20h 52h  not defined */
                    /* opcode 0Fh 20h 53h  not defined */
                    /* opcode 0Fh 20h 54h  not defined */
                    /* opcode 0Fh 20h 55h  not defined */
                    /* opcode 0Fh 20h 56h  not defined */
                    /* opcode 0Fh 20h 57h  not defined */
                    /* opcode 0Fh 20h 58h  not defined */
                    /* opcode 0Fh 20h 59h  not defined */
                    /* opcode 0Fh 20h 5Ah  not defined */
                    /* opcode 0Fh 20h 5Bh  not defined */
                    /* opcode 0Fh 20h 5Ch  not defined */
                    /* opcode 0Fh 20h 5Dh  not defined */
                    /* opcode 0Fh 20h 5Eh  not defined */
                    /* opcode 0Fh 20h 5Fh  not defined */
                    /* opcode 0Fh 20h 60h  not defined */
                    /* opcode 0Fh 20h 61h  not defined */
                    /* opcode 0Fh 20h 62h  not defined */
                    /* opcode 0Fh 20h 63h  not defined */
                    /* opcode 0Fh 20h 64h  not defined */
                    /* opcode 0Fh 20h 65h  not defined */
                    /* opcode 0Fh 20h 66h  not defined */
                    /* opcode 0Fh 20h 67h  not defined */
                    /* opcode 0Fh 20h 68h  not defined */
                    /* opcode 0Fh 20h 69h  not defined */
                    /* opcode 0Fh 20h 6Ah  not defined */
                    /* opcode 0Fh 20h 6Bh  not defined */
                    /* opcode 0Fh 20h 6Ch  not defined */
                    /* opcode 0Fh 20h 6Dh  not defined */
                    /* opcode 0Fh 20h 6Eh  not defined */
                    /* opcode 0Fh 20h 6Fh  not defined */
                    /* opcode 0Fh 20h 70h  not defined */
                    /* opcode 0Fh 20h 71h  not defined */
                    /* opcode 0Fh 20h 72h  not defined */
                    /* opcode 0Fh 20h 73h  not defined */
                    /* opcode 0Fh 20h 74h  not defined */
                    /* opcode 0Fh 20h 75h  not defined */
                    /* opcode 0Fh 20h 76h  not defined */
                    /* opcode 0Fh 20h 77h  not defined */
                    /* opcode 0Fh 20h 78h  not defined */
                    /* opcode 0Fh 20h 79h  not defined */
                    /* opcode 0Fh 20h 7Ah  not defined */
                    /* opcode 0Fh 20h 7Bh  not defined */
                    /* opcode 0Fh 20h 7Ch  not defined */
                    /* opcode 0Fh 20h 7Dh  not defined */
                    /* opcode 0Fh 20h 7Eh  not defined */
                    /* opcode 0Fh 20h 7Fh  not defined */
                    /* opcode 0Fh 20h 80h  not defined */
                    /* opcode 0Fh 20h 81h  not defined */
                    /* opcode 0Fh 20h 82h  not defined */
                    /* opcode 0Fh 20h 83h  not defined */
                    /* opcode 0Fh 20h 84h  not defined */
                    /* opcode 0Fh 20h 85h  not defined */
                    /* opcode 0Fh 20h 86h  not defined */
                    /* opcode 0Fh 20h 87h  not defined */
                    /* opcode 0Fh 20h 88h  not defined */
                    /* opcode 0Fh 20h 89h  not defined */
                    /* opcode 0Fh 20h 8Ah  not defined */
                    /* opcode 0Fh 20h 8Bh  not defined */
                    /* opcode 0Fh 20h 8Ch  not defined */
                    /* opcode 0Fh 20h 8Dh  not defined */
                    /* opcode 0Fh 20h 8Eh  not defined */
                    /* opcode 0Fh 20h 8Fh  not defined */
                    /* opcode 0Fh 20h 90h  not defined */
                    /* opcode 0Fh 20h 91h  not defined */
                    /* opcode 0Fh 20h 92h  not defined */
                    /* opcode 0Fh 20h 93h  not defined */
                    /* opcode 0Fh 20h 94h  not defined */
                    /* opcode 0Fh 20h 95h  not defined */
                    /* opcode 0Fh 20h 96h  not defined */
                    /* opcode 0Fh 20h 97h  not defined */
                    /* opcode 0Fh 20h 98h  not defined */
                    /* opcode 0Fh 20h 99h  not defined */
                    /* opcode 0Fh 20h 9Ah  not defined */
                    /* opcode 0Fh 20h 9Bh  not defined */
                    /* opcode 0Fh 20h 9Ch  not defined */
                    /* opcode 0Fh 20h 9Dh  not defined */
                    /* opcode 0Fh 20h 9Eh  not defined */
                    /* opcode 0Fh 20h 9Fh  not defined */
                    /* opcode 0Fh 20h A0h  not defined */
                    /* opcode 0Fh 20h A1h  not defined */
                    /* opcode 0Fh 20h A2h  not defined */
                    /* opcode 0Fh 20h A3h  not defined */
                    /* opcode 0Fh 20h A4h  not defined */
                    /* opcode 0Fh 20h A5h  not defined */
                    /* opcode 0Fh 20h A6h  not defined */
                    /* opcode 0Fh 20h A7h  not defined */
                    /* opcode 0Fh 20h A8h  not defined */
                    /* opcode 0Fh 20h A9h  not defined */
                    /* opcode 0Fh 20h AAh  not defined */
                    /* opcode 0Fh 20h ABh  not defined */
                    /* opcode 0Fh 20h ACh  not defined */
                    /* opcode 0Fh 20h ADh  not defined */
                    /* opcode 0Fh 20h AEh  not defined */
                    /* opcode 0Fh 20h AFh  not defined */
                    /* opcode 0Fh 20h B0h  not defined */
                    /* opcode 0Fh 20h B1h  not defined */
                    /* opcode 0Fh 20h B2h  not defined */
                    /* opcode 0Fh 20h B3h  not defined */
                    /* opcode 0Fh 20h B4h  not defined */
                    /* opcode 0Fh 20h B5h  not defined */
                    /* opcode 0Fh 20h B6h  not defined */
                    /* opcode 0Fh 20h B7h  not defined */
                    /* opcode 0Fh 20h B8h  not defined */
                    /* opcode 0Fh 20h B9h  not defined */
                    /* opcode 0Fh 20h BAh  not defined */
                    /* opcode 0Fh 20h BBh  not defined */
                    /* opcode 0Fh 20h BCh  not defined */
                    /* opcode 0Fh 20h BDh  not defined */
                    /* opcode 0Fh 20h BEh  not defined */
                    /* opcode 0Fh 20h BFh  not defined */
                    case 0xC0: /* 0Fh 20h C0h MOVd w32(r/m),cr(reg) mod=3 reg=0 rm=0      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xC1: /* 0Fh 20h C1h MOVd w32(r/m),cr(reg) mod=3 reg=0 rm=1      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xC2: /* 0Fh 20h C2h MOVd w32(r/m),cr(reg) mod=3 reg=0 rm=2      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xC3: /* 0Fh 20h C3h MOVd w32(r/m),cr(reg) mod=3 reg=0 rm=3      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xC4: /* 0Fh 20h C4h MOVd w32(r/m),cr(reg) mod=3 reg=0 rm=4      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xC5: /* 0Fh 20h C5h MOVd w32(r/m),cr(reg) mod=3 reg=0 rm=5      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xC6: /* 0Fh 20h C6h MOVd w32(r/m),cr(reg) mod=3 reg=0 rm=6      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xC7: /* 0Fh 20h C7h MOVd w32(r/m),cr(reg) mod=3 reg=0 rm=7      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xC8: /* 0Fh 20h C8h MOVd w32(r/m),cr(reg) mod=3 reg=1 rm=0      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xC9: /* 0Fh 20h C9h MOVd w32(r/m),cr(reg) mod=3 reg=1 rm=1      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xCA: /* 0Fh 20h CAh MOVd w32(r/m),cr(reg) mod=3 reg=1 rm=2      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xCB: /* 0Fh 20h CBh MOVd w32(r/m),cr(reg) mod=3 reg=1 rm=3      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xCC: /* 0Fh 20h CCh MOVd w32(r/m),cr(reg) mod=3 reg=1 rm=4      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xCD: /* 0Fh 20h CDh MOVd w32(r/m),cr(reg) mod=3 reg=1 rm=5      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xCE: /* 0Fh 20h CEh MOVd w32(r/m),cr(reg) mod=3 reg=1 rm=6      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xCF: /* 0Fh 20h CFh MOVd w32(r/m),cr(reg) mod=3 reg=1 rm=7      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xD0: /* 0Fh 20h D0h MOVd w32(r/m),cr(reg) mod=3 reg=2 rm=0      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xD1: /* 0Fh 20h D1h MOVd w32(r/m),cr(reg) mod=3 reg=2 rm=1      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xD2: /* 0Fh 20h D2h MOVd w32(r/m),cr(reg) mod=3 reg=2 rm=2      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xD3: /* 0Fh 20h D3h MOVd w32(r/m),cr(reg) mod=3 reg=2 rm=3      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xD4: /* 0Fh 20h D4h MOVd w32(r/m),cr(reg) mod=3 reg=2 rm=4      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xD5: /* 0Fh 20h D5h MOVd w32(r/m),cr(reg) mod=3 reg=2 rm=5      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xD6: /* 0Fh 20h D6h MOVd w32(r/m),cr(reg) mod=3 reg=2 rm=6      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xD7: /* 0Fh 20h D7h MOVd w32(r/m),cr(reg) mod=3 reg=2 rm=7      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xD8: /* 0Fh 20h D8h MOVd w32(r/m),cr(reg) mod=3 reg=3 rm=0      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xD9: /* 0Fh 20h D9h MOVd w32(r/m),cr(reg) mod=3 reg=3 rm=1      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xDA: /* 0Fh 20h DAh MOVd w32(r/m),cr(reg) mod=3 reg=3 rm=2      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xDB: /* 0Fh 20h DBh MOVd w32(r/m),cr(reg) mod=3 reg=3 rm=3      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xDC: /* 0Fh 20h DCh MOVd w32(r/m),cr(reg) mod=3 reg=3 rm=4      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xDD: /* 0Fh 20h DDh MOVd w32(r/m),cr(reg) mod=3 reg=3 rm=5      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xDE: /* 0Fh 20h DEh MOVd w32(r/m),cr(reg) mod=3 reg=3 rm=6      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xDF: /* 0Fh 20h DFh MOVd w32(r/m),cr(reg) mod=3 reg=3 rm=7      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xE0: /* 0Fh 20h E0h MOVd w32(r/m),cr(reg) mod=3 reg=4 rm=0      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xE1: /* 0Fh 20h E1h MOVd w32(r/m),cr(reg) mod=3 reg=4 rm=1      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xE2: /* 0Fh 20h E2h MOVd w32(r/m),cr(reg) mod=3 reg=4 rm=2      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xE3: /* 0Fh 20h E3h MOVd w32(r/m),cr(reg) mod=3 reg=4 rm=3      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xE4: /* 0Fh 20h E4h MOVd w32(r/m),cr(reg) mod=3 reg=4 rm=4      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xE5: /* 0Fh 20h E5h MOVd w32(r/m),cr(reg) mod=3 reg=4 rm=5      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xE6: /* 0Fh 20h E6h MOVd w32(r/m),cr(reg) mod=3 reg=4 rm=6      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xE7: /* 0Fh 20h E7h MOVd w32(r/m),cr(reg) mod=3 reg=4 rm=7      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xE8: /* 0Fh 20h E8h MOVd w32(r/m),cr(reg) mod=3 reg=5 rm=0      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xE9: /* 0Fh 20h E9h MOVd w32(r/m),cr(reg) mod=3 reg=5 rm=1      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xEA: /* 0Fh 20h EAh MOVd w32(r/m),cr(reg) mod=3 reg=5 rm=2      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xEB: /* 0Fh 20h EBh MOVd w32(r/m),cr(reg) mod=3 reg=5 rm=3      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xEC: /* 0Fh 20h ECh MOVd w32(r/m),cr(reg) mod=3 reg=5 rm=4      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xED: /* 0Fh 20h EDh MOVd w32(r/m),cr(reg) mod=3 reg=5 rm=5      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xEE: /* 0Fh 20h EEh MOVd w32(r/m),cr(reg) mod=3 reg=5 rm=6      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xEF: /* 0Fh 20h EFh MOVd w32(r/m),cr(reg) mod=3 reg=5 rm=7      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xF0: /* 0Fh 20h F0h MOVd w32(r/m),cr(reg) mod=3 reg=6 rm=0      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xF1: /* 0Fh 20h F1h MOVd w32(r/m),cr(reg) mod=3 reg=6 rm=1      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xF2: /* 0Fh 20h F2h MOVd w32(r/m),cr(reg) mod=3 reg=6 rm=2      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xF3: /* 0Fh 20h F3h MOVd w32(r/m),cr(reg) mod=3 reg=6 rm=3      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xF4: /* 0Fh 20h F4h MOVd w32(r/m),cr(reg) mod=3 reg=6 rm=4      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xF5: /* 0Fh 20h F5h MOVd w32(r/m),cr(reg) mod=3 reg=6 rm=5      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xF6: /* 0Fh 20h F6h MOVd w32(r/m),cr(reg) mod=3 reg=6 rm=6      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xF7: /* 0Fh 20h F7h MOVd w32(r/m),cr(reg) mod=3 reg=6 rm=7      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xF8: /* 0Fh 20h F8h MOVd w32(r/m),cr(reg) mod=3 reg=7 rm=0      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xF9: /* 0Fh 20h F9h MOVd w32(r/m),cr(reg) mod=3 reg=7 rm=1      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xFA: /* 0Fh 20h FAh MOVd w32(r/m),cr(reg) mod=3 reg=7 rm=2      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xFB: /* 0Fh 20h FBh MOVd w32(r/m),cr(reg) mod=3 reg=7 rm=3      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xFC: /* 0Fh 20h FCh MOVd w32(r/m),cr(reg) mod=3 reg=7 rm=4      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xFD: /* 0Fh 20h FDh MOVd w32(r/m),cr(reg) mod=3 reg=7 rm=5      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xFE: /* 0Fh 20h FEh MOVd w32(r/m),cr(reg) mod=3 reg=7 rm=6      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xFF: /* 0Fh 20h FFh MOVd w32(r/m),cr(reg) mod=3 reg=7 rm=7      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVd %s,CR%u",IPDecPrint32(mrm,sib,disp,4,RC_REG,"w32"),mrm.reg());
                        break;
                    default:
                        goto _x86decode_illegal_opcode;
                };
/* End of opcodes starting with 0Fh 20h */
                break;
            case 0x21: /* 0Fh 21h        spec:  */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
/* Opcodes starting with 0Fh 21h */
                switch (mrm.byte) {
                    /* opcode 0Fh 21h 00h  not defined */
                    /* opcode 0Fh 21h 01h  not defined */
                    /* opcode 0Fh 21h 02h  not defined */
                    /* opcode 0Fh 21h 03h  not defined */
                    /* opcode 0Fh 21h 04h  not defined */
                    /* opcode 0Fh 21h 05h  not defined */
                    /* opcode 0Fh 21h 06h  not defined */
                    /* opcode 0Fh 21h 07h  not defined */
                    /* opcode 0Fh 21h 08h  not defined */
                    /* opcode 0Fh 21h 09h  not defined */
                    /* opcode 0Fh 21h 0Ah  not defined */
                    /* opcode 0Fh 21h 0Bh  not defined */
                    /* opcode 0Fh 21h 0Ch  not defined */
                    /* opcode 0Fh 21h 0Dh  not defined */
                    /* opcode 0Fh 21h 0Eh  not defined */
                    /* opcode 0Fh 21h 0Fh  not defined */
                    /* opcode 0Fh 21h 10h  not defined */
                    /* opcode 0Fh 21h 11h  not defined */
                    /* opcode 0Fh 21h 12h  not defined */
                    /* opcode 0Fh 21h 13h  not defined */
                    /* opcode 0Fh 21h 14h  not defined */
                    /* opcode 0Fh 21h 15h  not defined */
                    /* opcode 0Fh 21h 16h  not defined */
                    /* opcode 0Fh 21h 17h  not defined */
                    /* opcode 0Fh 21h 18h  not defined */
                    /* opcode 0Fh 21h 19h  not defined */
                    /* opcode 0Fh 21h 1Ah  not defined */
                    /* opcode 0Fh 21h 1Bh  not defined */
                    /* opcode 0Fh 21h 1Ch  not defined */
                    /* opcode 0Fh 21h 1Dh  not defined */
                    /* opcode 0Fh 21h 1Eh  not defined */
                    /* opcode 0Fh 21h 1Fh  not defined */
                    /* opcode 0Fh 21h 20h  not defined */
                    /* opcode 0Fh 21h 21h  not defined */
                    /* opcode 0Fh 21h 22h  not defined */
                    /* opcode 0Fh 21h 23h  not defined */
                    /* opcode 0Fh 21h 24h  not defined */
                    /* opcode 0Fh 21h 25h  not defined */
                    /* opcode 0Fh 21h 26h  not defined */
                    /* opcode 0Fh 21h 27h  not defined */
                    /* opcode 0Fh 21h 28h  not defined */
                    /* opcode 0Fh 21h 29h  not defined */
                    /* opcode 0Fh 21h 2Ah  not defined */
                    /* opcode 0Fh 21h 2Bh  not defined */
                    /* opcode 0Fh 21h 2Ch  not defined */
                    /* opcode 0Fh 21h 2Dh  not defined */
                    /* opcode 0Fh 21h 2Eh  not defined */
                    /* opcode 0Fh 21h 2Fh  not defined */
                    /* opcode 0Fh 21h 30h  not defined */
                    /* opcode 0Fh 21h 31h  not defined */
                    /* opcode 0Fh 21h 32h  not defined */
                    /* opcode 0Fh 21h 33h  not defined */
                    /* opcode 0Fh 21h 34h  not defined */
                    /* opcode 0Fh 21h 35h  not defined */
                    /* opcode 0Fh 21h 36h  not defined */
                    /* opcode 0Fh 21h 37h  not defined */
                    /* opcode 0Fh 21h 38h  not defined */
                    /* opcode 0Fh 21h 39h  not defined */
                    /* opcode 0Fh 21h 3Ah  not defined */
                    /* opcode 0Fh 21h 3Bh  not defined */
                    /* opcode 0Fh 21h 3Ch  not defined */
                    /* opcode 0Fh 21h 3Dh  not defined */
                    /* opcode 0Fh 21h 3Eh  not defined */
                    /* opcode 0Fh 21h 3Fh  not defined */
                    /* opcode 0Fh 21h 40h  not defined */
                    /* opcode 0Fh 21h 41h  not defined */
                    /* opcode 0Fh 21h 42h  not defined */
                    /* opcode 0Fh 21h 43h  not defined */
                    /* opcode 0Fh 21h 44h  not defined */
                    /* opcode 0Fh 21h 45h  not defined */
                    /* opcode 0Fh 21h 46h  not defined */
                    /* opcode 0Fh 21h 47h  not defined */
                    /* opcode 0Fh 21h 48h  not defined */
                    /* opcode 0Fh 21h 49h  not defined */
                    /* opcode 0Fh 21h 4Ah  not defined */
                    /* opcode 0Fh 21h 4Bh  not defined */
                    /* opcode 0Fh 21h 4Ch  not defined */
                    /* opcode 0Fh 21h 4Dh  not defined */
                    /* opcode 0Fh 21h 4Eh  not defined */
                    /* opcode 0Fh 21h 4Fh  not defined */
                    /* opcode 0Fh 21h 50h  not defined */
                    /* opcode 0Fh 21h 51h  not defined */
                    /* opcode 0Fh 21h 52h  not defined */
                    /* opcode 0Fh 21h 53h  not defined */
                    /* opcode 0Fh 21h 54h  not defined */
                    /* opcode 0Fh 21h 55h  not defined */
                    /* opcode 0Fh 21h 56h  not defined */
                    /* opcode 0Fh 21h 57h  not defined */
                    /* opcode 0Fh 21h 58h  not defined */
                    /* opcode 0Fh 21h 59h  not defined */
                    /* opcode 0Fh 21h 5Ah  not defined */
                    /* opcode 0Fh 21h 5Bh  not defined */
                    /* opcode 0Fh 21h 5Ch  not defined */
                    /* opcode 0Fh 21h 5Dh  not defined */
                    /* opcode 0Fh 21h 5Eh  not defined */
                    /* opcode 0Fh 21h 5Fh  not defined */
                    /* opcode 0Fh 21h 60h  not defined */
                    /* opcode 0Fh 21h 61h  not defined */
                    /* opcode 0Fh 21h 62h  not defined */
                    /* opcode 0Fh 21h 63h  not defined */
                    /* opcode 0Fh 21h 64h  not defined */
                    /* opcode 0Fh 21h 65h  not defined */
                    /* opcode 0Fh 21h 66h  not defined */
                    /* opcode 0Fh 21h 67h  not defined */
                    /* opcode 0Fh 21h 68h  not defined */
                    /* opcode 0Fh 21h 69h  not defined */
                    /* opcode 0Fh 21h 6Ah  not defined */
                    /* opcode 0Fh 21h 6Bh  not defined */
                    /* opcode 0Fh 21h 6Ch  not defined */
                    /* opcode 0Fh 21h 6Dh  not defined */
                    /* opcode 0Fh 21h 6Eh  not defined */
                    /* opcode 0Fh 21h 6Fh  not defined */
                    /* opcode 0Fh 21h 70h  not defined */
                    /* opcode 0Fh 21h 71h  not defined */
                    /* opcode 0Fh 21h 72h  not defined */
                    /* opcode 0Fh 21h 73h  not defined */
                    /* opcode 0Fh 21h 74h  not defined */
                    /* opcode 0Fh 21h 75h  not defined */
                    /* opcode 0Fh 21h 76h  not defined */
                    /* opcode 0Fh 21h 77h  not defined */
                    /* opcode 0Fh 21h 78h  not defined */
                    /* opcode 0Fh 21h 79h  not defined */
                    /* opcode 0Fh 21h 7Ah  not defined */
                    /* opcode 0Fh 21h 7Bh  not defined */
                    /* opcode 0Fh 21h 7Ch  not defined */
                    /* opcode 0Fh 21h 7Dh  not defined */
                    /* opcode 0Fh 21h 7Eh  not defined */
                    /* opcode 0Fh 21h 7Fh  not defined */
                    /* opcode 0Fh 21h 80h  not defined */
                    /* opcode 0Fh 21h 81h  not defined */
                    /* opcode 0Fh 21h 82h  not defined */
                    /* opcode 0Fh 21h 83h  not defined */
                    /* opcode 0Fh 21h 84h  not defined */
                    /* opcode 0Fh 21h 85h  not defined */
                    /* opcode 0Fh 21h 86h  not defined */
                    /* opcode 0Fh 21h 87h  not defined */
                    /* opcode 0Fh 21h 88h  not defined */
                    /* opcode 0Fh 21h 89h  not defined */
                    /* opcode 0Fh 21h 8Ah  not defined */
                    /* opcode 0Fh 21h 8Bh  not defined */
                    /* opcode 0Fh 21h 8Ch  not defined */
                    /* opcode 0Fh 21h 8Dh  not defined */
                    /* opcode 0Fh 21h 8Eh  not defined */
                    /* opcode 0Fh 21h 8Fh  not defined */
                    /* opcode 0Fh 21h 90h  not defined */
                    /* opcode 0Fh 21h 91h  not defined */
                    /* opcode 0Fh 21h 92h  not defined */
                    /* opcode 0Fh 21h 93h  not defined */
                    /* opcode 0Fh 21h 94h  not defined */
                    /* opcode 0Fh 21h 95h  not defined */
                    /* opcode 0Fh 21h 96h  not defined */
                    /* opcode 0Fh 21h 97h  not defined */
                    /* opcode 0Fh 21h 98h  not defined */
                    /* opcode 0Fh 21h 99h  not defined */
                    /* opcode 0Fh 21h 9Ah  not defined */
                    /* opcode 0Fh 21h 9Bh  not defined */
                    /* opcode 0Fh 21h 9Ch  not defined */
                    /* opcode 0Fh 21h 9Dh  not defined */
                    /* opcode 0Fh 21h 9Eh  not defined */
                    /* opcode 0Fh 21h 9Fh  not defined */
                    /* opcode 0Fh 21h A0h  not defined */
                    /* opcode 0Fh 21h A1h  not defined */
                    /* opcode 0Fh 21h A2h  not defined */
                    /* opcode 0Fh 21h A3h  not defined */
                    /* opcode 0Fh 21h A4h  not defined */
                    /* opcode 0Fh 21h A5h  not defined */
                    /* opcode 0Fh 21h A6h  not defined */
                    /* opcode 0Fh 21h A7h  not defined */
                    /* opcode 0Fh 21h A8h  not defined */
                    /* opcode 0Fh 21h A9h  not defined */
                    /* opcode 0Fh 21h AAh  not defined */
                    /* opcode 0Fh 21h ABh  not defined */
                    /* opcode 0Fh 21h ACh  not defined */
                    /* opcode 0Fh 21h ADh  not defined */
                    /* opcode 0Fh 21h AEh  not defined */
                    /* opcode 0Fh 21h AFh  not defined */
                    /* opcode 0Fh 21h B0h  not defined */
                    /* opcode 0Fh 21h B1h  not defined */
                    /* opcode 0Fh 21h B2h  not defined */
                    /* opcode 0Fh 21h B3h  not defined */
                    /* opcode 0Fh 21h B4h  not defined */
                    /* opcode 0Fh 21h B5h  not defined */
                    /* opcode 0Fh 21h B6h  not defined */
                    /* opcode 0Fh 21h B7h  not defined */
                    /* opcode 0Fh 21h B8h  not defined */
                    /* opcode 0Fh 21h B9h  not defined */
                    /* opcode 0Fh 21h BAh  not defined */
                    /* opcode 0Fh 21h BBh  not defined */
                    /* opcode 0Fh 21h BCh  not defined */
                    /* opcode 0Fh 21h BDh  not defined */
                    /* opcode 0Fh 21h BEh  not defined */
                    /* opcode 0Fh 21h BFh  not defined */
                    case 0xC0: /* 0Fh 21h C0h MOVd w32(r/m),dr(reg) mod=3 reg=0 rm=0      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xC1: /* 0Fh 21h C1h MOVd w32(r/m),dr(reg) mod=3 reg=0 rm=1      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xC2: /* 0Fh 21h C2h MOVd w32(r/m),dr(reg) mod=3 reg=0 rm=2      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xC3: /* 0Fh 21h C3h MOVd w32(r/m),dr(reg) mod=3 reg=0 rm=3      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xC4: /* 0Fh 21h C4h MOVd w32(r/m),dr(reg) mod=3 reg=0 rm=4      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xC5: /* 0Fh 21h C5h MOVd w32(r/m),dr(reg) mod=3 reg=0 rm=5      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xC6: /* 0Fh 21h C6h MOVd w32(r/m),dr(reg) mod=3 reg=0 rm=6      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xC7: /* 0Fh 21h C7h MOVd w32(r/m),dr(reg) mod=3 reg=0 rm=7      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xC8: /* 0Fh 21h C8h MOVd w32(r/m),dr(reg) mod=3 reg=1 rm=0      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xC9: /* 0Fh 21h C9h MOVd w32(r/m),dr(reg) mod=3 reg=1 rm=1      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xCA: /* 0Fh 21h CAh MOVd w32(r/m),dr(reg) mod=3 reg=1 rm=2      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xCB: /* 0Fh 21h CBh MOVd w32(r/m),dr(reg) mod=3 reg=1 rm=3      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xCC: /* 0Fh 21h CCh MOVd w32(r/m),dr(reg) mod=3 reg=1 rm=4      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xCD: /* 0Fh 21h CDh MOVd w32(r/m),dr(reg) mod=3 reg=1 rm=5      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xCE: /* 0Fh 21h CEh MOVd w32(r/m),dr(reg) mod=3 reg=1 rm=6      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xCF: /* 0Fh 21h CFh MOVd w32(r/m),dr(reg) mod=3 reg=1 rm=7      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xD0: /* 0Fh 21h D0h MOVd w32(r/m),dr(reg) mod=3 reg=2 rm=0      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xD1: /* 0Fh 21h D1h MOVd w32(r/m),dr(reg) mod=3 reg=2 rm=1      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xD2: /* 0Fh 21h D2h MOVd w32(r/m),dr(reg) mod=3 reg=2 rm=2      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xD3: /* 0Fh 21h D3h MOVd w32(r/m),dr(reg) mod=3 reg=2 rm=3      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xD4: /* 0Fh 21h D4h MOVd w32(r/m),dr(reg) mod=3 reg=2 rm=4      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xD5: /* 0Fh 21h D5h MOVd w32(r/m),dr(reg) mod=3 reg=2 rm=5      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xD6: /* 0Fh 21h D6h MOVd w32(r/m),dr(reg) mod=3 reg=2 rm=6      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xD7: /* 0Fh 21h D7h MOVd w32(r/m),dr(reg) mod=3 reg=2 rm=7      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xD8: /* 0Fh 21h D8h MOVd w32(r/m),dr(reg) mod=3 reg=3 rm=0      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xD9: /* 0Fh 21h D9h MOVd w32(r/m),dr(reg) mod=3 reg=3 rm=1      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xDA: /* 0Fh 21h DAh MOVd w32(r/m),dr(reg) mod=3 reg=3 rm=2      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xDB: /* 0Fh 21h DBh MOVd w32(r/m),dr(reg) mod=3 reg=3 rm=3      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xDC: /* 0Fh 21h DCh MOVd w32(r/m),dr(reg) mod=3 reg=3 rm=4      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xDD: /* 0Fh 21h DDh MOVd w32(r/m),dr(reg) mod=3 reg=3 rm=5      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xDE: /* 0Fh 21h DEh MOVd w32(r/m),dr(reg) mod=3 reg=3 rm=6      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xDF: /* 0Fh 21h DFh MOVd w32(r/m),dr(reg) mod=3 reg=3 rm=7      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xE0: /* 0Fh 21h E0h MOVd w32(r/m),dr(reg) mod=3 reg=4 rm=0      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xE1: /* 0Fh 21h E1h MOVd w32(r/m),dr(reg) mod=3 reg=4 rm=1      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xE2: /* 0Fh 21h E2h MOVd w32(r/m),dr(reg) mod=3 reg=4 rm=2      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xE3: /* 0Fh 21h E3h MOVd w32(r/m),dr(reg) mod=3 reg=4 rm=3      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xE4: /* 0Fh 21h E4h MOVd w32(r/m),dr(reg) mod=3 reg=4 rm=4      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xE5: /* 0Fh 21h E5h MOVd w32(r/m),dr(reg) mod=3 reg=4 rm=5      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xE6: /* 0Fh 21h E6h MOVd w32(r/m),dr(reg) mod=3 reg=4 rm=6      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xE7: /* 0Fh 21h E7h MOVd w32(r/m),dr(reg) mod=3 reg=4 rm=7      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xE8: /* 0Fh 21h E8h MOVd w32(r/m),dr(reg) mod=3 reg=5 rm=0      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xE9: /* 0Fh 21h E9h MOVd w32(r/m),dr(reg) mod=3 reg=5 rm=1      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xEA: /* 0Fh 21h EAh MOVd w32(r/m),dr(reg) mod=3 reg=5 rm=2      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xEB: /* 0Fh 21h EBh MOVd w32(r/m),dr(reg) mod=3 reg=5 rm=3      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xEC: /* 0Fh 21h ECh MOVd w32(r/m),dr(reg) mod=3 reg=5 rm=4      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xED: /* 0Fh 21h EDh MOVd w32(r/m),dr(reg) mod=3 reg=5 rm=5      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xEE: /* 0Fh 21h EEh MOVd w32(r/m),dr(reg) mod=3 reg=5 rm=6      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xEF: /* 0Fh 21h EFh MOVd w32(r/m),dr(reg) mod=3 reg=5 rm=7      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xF0: /* 0Fh 21h F0h MOVd w32(r/m),dr(reg) mod=3 reg=6 rm=0      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xF1: /* 0Fh 21h F1h MOVd w32(r/m),dr(reg) mod=3 reg=6 rm=1      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xF2: /* 0Fh 21h F2h MOVd w32(r/m),dr(reg) mod=3 reg=6 rm=2      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xF3: /* 0Fh 21h F3h MOVd w32(r/m),dr(reg) mod=3 reg=6 rm=3      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xF4: /* 0Fh 21h F4h MOVd w32(r/m),dr(reg) mod=3 reg=6 rm=4      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xF5: /* 0Fh 21h F5h MOVd w32(r/m),dr(reg) mod=3 reg=6 rm=5      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xF6: /* 0Fh 21h F6h MOVd w32(r/m),dr(reg) mod=3 reg=6 rm=6      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xF7: /* 0Fh 21h F7h MOVd w32(r/m),dr(reg) mod=3 reg=6 rm=7      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xF8: /* 0Fh 21h F8h MOVd w32(r/m),dr(reg) mod=3 reg=7 rm=0      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xF9: /* 0Fh 21h F9h MOVd w32(r/m),dr(reg) mod=3 reg=7 rm=1      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xFA: /* 0Fh 21h FAh MOVd w32(r/m),dr(reg) mod=3 reg=7 rm=2      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xFB: /* 0Fh 21h FBh MOVd w32(r/m),dr(reg) mod=3 reg=7 rm=3      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xFC: /* 0Fh 21h FCh MOVd w32(r/m),dr(reg) mod=3 reg=7 rm=4      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xFD: /* 0Fh 21h FDh MOVd w32(r/m),dr(reg) mod=3 reg=7 rm=5      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xFE: /* 0Fh 21h FEh MOVd w32(r/m),dr(reg) mod=3 reg=7 rm=6      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xFF: /* 0Fh 21h FFh MOVd w32(r/m),dr(reg) mod=3 reg=7 rm=7      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVd %s,DR%u",IPDecPrint32(mrm,sib,disp,4,RC_REG,"w32"),mrm.reg());
                        break;
                    default:
                        goto _x86decode_illegal_opcode;
                };
/* End of opcodes starting with 0Fh 21h */
                break;
            case 0x22: /* 0Fh 22h        spec:  */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
/* Opcodes starting with 0Fh 22h */
                switch (mrm.byte) {
                    /* opcode 0Fh 22h 00h  not defined */
                    /* opcode 0Fh 22h 01h  not defined */
                    /* opcode 0Fh 22h 02h  not defined */
                    /* opcode 0Fh 22h 03h  not defined */
                    /* opcode 0Fh 22h 04h  not defined */
                    /* opcode 0Fh 22h 05h  not defined */
                    /* opcode 0Fh 22h 06h  not defined */
                    /* opcode 0Fh 22h 07h  not defined */
                    /* opcode 0Fh 22h 08h  not defined */
                    /* opcode 0Fh 22h 09h  not defined */
                    /* opcode 0Fh 22h 0Ah  not defined */
                    /* opcode 0Fh 22h 0Bh  not defined */
                    /* opcode 0Fh 22h 0Ch  not defined */
                    /* opcode 0Fh 22h 0Dh  not defined */
                    /* opcode 0Fh 22h 0Eh  not defined */
                    /* opcode 0Fh 22h 0Fh  not defined */
                    /* opcode 0Fh 22h 10h  not defined */
                    /* opcode 0Fh 22h 11h  not defined */
                    /* opcode 0Fh 22h 12h  not defined */
                    /* opcode 0Fh 22h 13h  not defined */
                    /* opcode 0Fh 22h 14h  not defined */
                    /* opcode 0Fh 22h 15h  not defined */
                    /* opcode 0Fh 22h 16h  not defined */
                    /* opcode 0Fh 22h 17h  not defined */
                    /* opcode 0Fh 22h 18h  not defined */
                    /* opcode 0Fh 22h 19h  not defined */
                    /* opcode 0Fh 22h 1Ah  not defined */
                    /* opcode 0Fh 22h 1Bh  not defined */
                    /* opcode 0Fh 22h 1Ch  not defined */
                    /* opcode 0Fh 22h 1Dh  not defined */
                    /* opcode 0Fh 22h 1Eh  not defined */
                    /* opcode 0Fh 22h 1Fh  not defined */
                    /* opcode 0Fh 22h 20h  not defined */
                    /* opcode 0Fh 22h 21h  not defined */
                    /* opcode 0Fh 22h 22h  not defined */
                    /* opcode 0Fh 22h 23h  not defined */
                    /* opcode 0Fh 22h 24h  not defined */
                    /* opcode 0Fh 22h 25h  not defined */
                    /* opcode 0Fh 22h 26h  not defined */
                    /* opcode 0Fh 22h 27h  not defined */
                    /* opcode 0Fh 22h 28h  not defined */
                    /* opcode 0Fh 22h 29h  not defined */
                    /* opcode 0Fh 22h 2Ah  not defined */
                    /* opcode 0Fh 22h 2Bh  not defined */
                    /* opcode 0Fh 22h 2Ch  not defined */
                    /* opcode 0Fh 22h 2Dh  not defined */
                    /* opcode 0Fh 22h 2Eh  not defined */
                    /* opcode 0Fh 22h 2Fh  not defined */
                    /* opcode 0Fh 22h 30h  not defined */
                    /* opcode 0Fh 22h 31h  not defined */
                    /* opcode 0Fh 22h 32h  not defined */
                    /* opcode 0Fh 22h 33h  not defined */
                    /* opcode 0Fh 22h 34h  not defined */
                    /* opcode 0Fh 22h 35h  not defined */
                    /* opcode 0Fh 22h 36h  not defined */
                    /* opcode 0Fh 22h 37h  not defined */
                    /* opcode 0Fh 22h 38h  not defined */
                    /* opcode 0Fh 22h 39h  not defined */
                    /* opcode 0Fh 22h 3Ah  not defined */
                    /* opcode 0Fh 22h 3Bh  not defined */
                    /* opcode 0Fh 22h 3Ch  not defined */
                    /* opcode 0Fh 22h 3Dh  not defined */
                    /* opcode 0Fh 22h 3Eh  not defined */
                    /* opcode 0Fh 22h 3Fh  not defined */
                    /* opcode 0Fh 22h 40h  not defined */
                    /* opcode 0Fh 22h 41h  not defined */
                    /* opcode 0Fh 22h 42h  not defined */
                    /* opcode 0Fh 22h 43h  not defined */
                    /* opcode 0Fh 22h 44h  not defined */
                    /* opcode 0Fh 22h 45h  not defined */
                    /* opcode 0Fh 22h 46h  not defined */
                    /* opcode 0Fh 22h 47h  not defined */
                    /* opcode 0Fh 22h 48h  not defined */
                    /* opcode 0Fh 22h 49h  not defined */
                    /* opcode 0Fh 22h 4Ah  not defined */
                    /* opcode 0Fh 22h 4Bh  not defined */
                    /* opcode 0Fh 22h 4Ch  not defined */
                    /* opcode 0Fh 22h 4Dh  not defined */
                    /* opcode 0Fh 22h 4Eh  not defined */
                    /* opcode 0Fh 22h 4Fh  not defined */
                    /* opcode 0Fh 22h 50h  not defined */
                    /* opcode 0Fh 22h 51h  not defined */
                    /* opcode 0Fh 22h 52h  not defined */
                    /* opcode 0Fh 22h 53h  not defined */
                    /* opcode 0Fh 22h 54h  not defined */
                    /* opcode 0Fh 22h 55h  not defined */
                    /* opcode 0Fh 22h 56h  not defined */
                    /* opcode 0Fh 22h 57h  not defined */
                    /* opcode 0Fh 22h 58h  not defined */
                    /* opcode 0Fh 22h 59h  not defined */
                    /* opcode 0Fh 22h 5Ah  not defined */
                    /* opcode 0Fh 22h 5Bh  not defined */
                    /* opcode 0Fh 22h 5Ch  not defined */
                    /* opcode 0Fh 22h 5Dh  not defined */
                    /* opcode 0Fh 22h 5Eh  not defined */
                    /* opcode 0Fh 22h 5Fh  not defined */
                    /* opcode 0Fh 22h 60h  not defined */
                    /* opcode 0Fh 22h 61h  not defined */
                    /* opcode 0Fh 22h 62h  not defined */
                    /* opcode 0Fh 22h 63h  not defined */
                    /* opcode 0Fh 22h 64h  not defined */
                    /* opcode 0Fh 22h 65h  not defined */
                    /* opcode 0Fh 22h 66h  not defined */
                    /* opcode 0Fh 22h 67h  not defined */
                    /* opcode 0Fh 22h 68h  not defined */
                    /* opcode 0Fh 22h 69h  not defined */
                    /* opcode 0Fh 22h 6Ah  not defined */
                    /* opcode 0Fh 22h 6Bh  not defined */
                    /* opcode 0Fh 22h 6Ch  not defined */
                    /* opcode 0Fh 22h 6Dh  not defined */
                    /* opcode 0Fh 22h 6Eh  not defined */
                    /* opcode 0Fh 22h 6Fh  not defined */
                    /* opcode 0Fh 22h 70h  not defined */
                    /* opcode 0Fh 22h 71h  not defined */
                    /* opcode 0Fh 22h 72h  not defined */
                    /* opcode 0Fh 22h 73h  not defined */
                    /* opcode 0Fh 22h 74h  not defined */
                    /* opcode 0Fh 22h 75h  not defined */
                    /* opcode 0Fh 22h 76h  not defined */
                    /* opcode 0Fh 22h 77h  not defined */
                    /* opcode 0Fh 22h 78h  not defined */
                    /* opcode 0Fh 22h 79h  not defined */
                    /* opcode 0Fh 22h 7Ah  not defined */
                    /* opcode 0Fh 22h 7Bh  not defined */
                    /* opcode 0Fh 22h 7Ch  not defined */
                    /* opcode 0Fh 22h 7Dh  not defined */
                    /* opcode 0Fh 22h 7Eh  not defined */
                    /* opcode 0Fh 22h 7Fh  not defined */
                    /* opcode 0Fh 22h 80h  not defined */
                    /* opcode 0Fh 22h 81h  not defined */
                    /* opcode 0Fh 22h 82h  not defined */
                    /* opcode 0Fh 22h 83h  not defined */
                    /* opcode 0Fh 22h 84h  not defined */
                    /* opcode 0Fh 22h 85h  not defined */
                    /* opcode 0Fh 22h 86h  not defined */
                    /* opcode 0Fh 22h 87h  not defined */
                    /* opcode 0Fh 22h 88h  not defined */
                    /* opcode 0Fh 22h 89h  not defined */
                    /* opcode 0Fh 22h 8Ah  not defined */
                    /* opcode 0Fh 22h 8Bh  not defined */
                    /* opcode 0Fh 22h 8Ch  not defined */
                    /* opcode 0Fh 22h 8Dh  not defined */
                    /* opcode 0Fh 22h 8Eh  not defined */
                    /* opcode 0Fh 22h 8Fh  not defined */
                    /* opcode 0Fh 22h 90h  not defined */
                    /* opcode 0Fh 22h 91h  not defined */
                    /* opcode 0Fh 22h 92h  not defined */
                    /* opcode 0Fh 22h 93h  not defined */
                    /* opcode 0Fh 22h 94h  not defined */
                    /* opcode 0Fh 22h 95h  not defined */
                    /* opcode 0Fh 22h 96h  not defined */
                    /* opcode 0Fh 22h 97h  not defined */
                    /* opcode 0Fh 22h 98h  not defined */
                    /* opcode 0Fh 22h 99h  not defined */
                    /* opcode 0Fh 22h 9Ah  not defined */
                    /* opcode 0Fh 22h 9Bh  not defined */
                    /* opcode 0Fh 22h 9Ch  not defined */
                    /* opcode 0Fh 22h 9Dh  not defined */
                    /* opcode 0Fh 22h 9Eh  not defined */
                    /* opcode 0Fh 22h 9Fh  not defined */
                    /* opcode 0Fh 22h A0h  not defined */
                    /* opcode 0Fh 22h A1h  not defined */
                    /* opcode 0Fh 22h A2h  not defined */
                    /* opcode 0Fh 22h A3h  not defined */
                    /* opcode 0Fh 22h A4h  not defined */
                    /* opcode 0Fh 22h A5h  not defined */
                    /* opcode 0Fh 22h A6h  not defined */
                    /* opcode 0Fh 22h A7h  not defined */
                    /* opcode 0Fh 22h A8h  not defined */
                    /* opcode 0Fh 22h A9h  not defined */
                    /* opcode 0Fh 22h AAh  not defined */
                    /* opcode 0Fh 22h ABh  not defined */
                    /* opcode 0Fh 22h ACh  not defined */
                    /* opcode 0Fh 22h ADh  not defined */
                    /* opcode 0Fh 22h AEh  not defined */
                    /* opcode 0Fh 22h AFh  not defined */
                    /* opcode 0Fh 22h B0h  not defined */
                    /* opcode 0Fh 22h B1h  not defined */
                    /* opcode 0Fh 22h B2h  not defined */
                    /* opcode 0Fh 22h B3h  not defined */
                    /* opcode 0Fh 22h B4h  not defined */
                    /* opcode 0Fh 22h B5h  not defined */
                    /* opcode 0Fh 22h B6h  not defined */
                    /* opcode 0Fh 22h B7h  not defined */
                    /* opcode 0Fh 22h B8h  not defined */
                    /* opcode 0Fh 22h B9h  not defined */
                    /* opcode 0Fh 22h BAh  not defined */
                    /* opcode 0Fh 22h BBh  not defined */
                    /* opcode 0Fh 22h BCh  not defined */
                    /* opcode 0Fh 22h BDh  not defined */
                    /* opcode 0Fh 22h BEh  not defined */
                    /* opcode 0Fh 22h BFh  not defined */
                    case 0xC0: /* 0Fh 22h C0h MOVd cr(reg),w32(r/m) mod=3 reg=0 rm=0      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xC1: /* 0Fh 22h C1h MOVd cr(reg),w32(r/m) mod=3 reg=0 rm=1      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xC2: /* 0Fh 22h C2h MOVd cr(reg),w32(r/m) mod=3 reg=0 rm=2      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xC3: /* 0Fh 22h C3h MOVd cr(reg),w32(r/m) mod=3 reg=0 rm=3      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xC4: /* 0Fh 22h C4h MOVd cr(reg),w32(r/m) mod=3 reg=0 rm=4      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xC5: /* 0Fh 22h C5h MOVd cr(reg),w32(r/m) mod=3 reg=0 rm=5      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xC6: /* 0Fh 22h C6h MOVd cr(reg),w32(r/m) mod=3 reg=0 rm=6      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xC7: /* 0Fh 22h C7h MOVd cr(reg),w32(r/m) mod=3 reg=0 rm=7      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xC8: /* 0Fh 22h C8h MOVd cr(reg),w32(r/m) mod=3 reg=1 rm=0      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xC9: /* 0Fh 22h C9h MOVd cr(reg),w32(r/m) mod=3 reg=1 rm=1      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xCA: /* 0Fh 22h CAh MOVd cr(reg),w32(r/m) mod=3 reg=1 rm=2      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xCB: /* 0Fh 22h CBh MOVd cr(reg),w32(r/m) mod=3 reg=1 rm=3      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xCC: /* 0Fh 22h CCh MOVd cr(reg),w32(r/m) mod=3 reg=1 rm=4      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xCD: /* 0Fh 22h CDh MOVd cr(reg),w32(r/m) mod=3 reg=1 rm=5      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xCE: /* 0Fh 22h CEh MOVd cr(reg),w32(r/m) mod=3 reg=1 rm=6      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xCF: /* 0Fh 22h CFh MOVd cr(reg),w32(r/m) mod=3 reg=1 rm=7      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xD0: /* 0Fh 22h D0h MOVd cr(reg),w32(r/m) mod=3 reg=2 rm=0      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xD1: /* 0Fh 22h D1h MOVd cr(reg),w32(r/m) mod=3 reg=2 rm=1      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xD2: /* 0Fh 22h D2h MOVd cr(reg),w32(r/m) mod=3 reg=2 rm=2      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xD3: /* 0Fh 22h D3h MOVd cr(reg),w32(r/m) mod=3 reg=2 rm=3      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xD4: /* 0Fh 22h D4h MOVd cr(reg),w32(r/m) mod=3 reg=2 rm=4      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xD5: /* 0Fh 22h D5h MOVd cr(reg),w32(r/m) mod=3 reg=2 rm=5      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xD6: /* 0Fh 22h D6h MOVd cr(reg),w32(r/m) mod=3 reg=2 rm=6      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xD7: /* 0Fh 22h D7h MOVd cr(reg),w32(r/m) mod=3 reg=2 rm=7      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xD8: /* 0Fh 22h D8h MOVd cr(reg),w32(r/m) mod=3 reg=3 rm=0      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xD9: /* 0Fh 22h D9h MOVd cr(reg),w32(r/m) mod=3 reg=3 rm=1      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xDA: /* 0Fh 22h DAh MOVd cr(reg),w32(r/m) mod=3 reg=3 rm=2      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xDB: /* 0Fh 22h DBh MOVd cr(reg),w32(r/m) mod=3 reg=3 rm=3      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xDC: /* 0Fh 22h DCh MOVd cr(reg),w32(r/m) mod=3 reg=3 rm=4      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xDD: /* 0Fh 22h DDh MOVd cr(reg),w32(r/m) mod=3 reg=3 rm=5      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xDE: /* 0Fh 22h DEh MOVd cr(reg),w32(r/m) mod=3 reg=3 rm=6      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xDF: /* 0Fh 22h DFh MOVd cr(reg),w32(r/m) mod=3 reg=3 rm=7      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xE0: /* 0Fh 22h E0h MOVd cr(reg),w32(r/m) mod=3 reg=4 rm=0      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xE1: /* 0Fh 22h E1h MOVd cr(reg),w32(r/m) mod=3 reg=4 rm=1      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xE2: /* 0Fh 22h E2h MOVd cr(reg),w32(r/m) mod=3 reg=4 rm=2      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xE3: /* 0Fh 22h E3h MOVd cr(reg),w32(r/m) mod=3 reg=4 rm=3      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xE4: /* 0Fh 22h E4h MOVd cr(reg),w32(r/m) mod=3 reg=4 rm=4      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xE5: /* 0Fh 22h E5h MOVd cr(reg),w32(r/m) mod=3 reg=4 rm=5      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xE6: /* 0Fh 22h E6h MOVd cr(reg),w32(r/m) mod=3 reg=4 rm=6      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xE7: /* 0Fh 22h E7h MOVd cr(reg),w32(r/m) mod=3 reg=4 rm=7      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xE8: /* 0Fh 22h E8h MOVd cr(reg),w32(r/m) mod=3 reg=5 rm=0      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xE9: /* 0Fh 22h E9h MOVd cr(reg),w32(r/m) mod=3 reg=5 rm=1      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xEA: /* 0Fh 22h EAh MOVd cr(reg),w32(r/m) mod=3 reg=5 rm=2      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xEB: /* 0Fh 22h EBh MOVd cr(reg),w32(r/m) mod=3 reg=5 rm=3      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xEC: /* 0Fh 22h ECh MOVd cr(reg),w32(r/m) mod=3 reg=5 rm=4      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xED: /* 0Fh 22h EDh MOVd cr(reg),w32(r/m) mod=3 reg=5 rm=5      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xEE: /* 0Fh 22h EEh MOVd cr(reg),w32(r/m) mod=3 reg=5 rm=6      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xEF: /* 0Fh 22h EFh MOVd cr(reg),w32(r/m) mod=3 reg=5 rm=7      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xF0: /* 0Fh 22h F0h MOVd cr(reg),w32(r/m) mod=3 reg=6 rm=0      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xF1: /* 0Fh 22h F1h MOVd cr(reg),w32(r/m) mod=3 reg=6 rm=1      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xF2: /* 0Fh 22h F2h MOVd cr(reg),w32(r/m) mod=3 reg=6 rm=2      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xF3: /* 0Fh 22h F3h MOVd cr(reg),w32(r/m) mod=3 reg=6 rm=3      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xF4: /* 0Fh 22h F4h MOVd cr(reg),w32(r/m) mod=3 reg=6 rm=4      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xF5: /* 0Fh 22h F5h MOVd cr(reg),w32(r/m) mod=3 reg=6 rm=5      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xF6: /* 0Fh 22h F6h MOVd cr(reg),w32(r/m) mod=3 reg=6 rm=6      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xF7: /* 0Fh 22h F7h MOVd cr(reg),w32(r/m) mod=3 reg=6 rm=7      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xF8: /* 0Fh 22h F8h MOVd cr(reg),w32(r/m) mod=3 reg=7 rm=0      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xF9: /* 0Fh 22h F9h MOVd cr(reg),w32(r/m) mod=3 reg=7 rm=1      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xFA: /* 0Fh 22h FAh MOVd cr(reg),w32(r/m) mod=3 reg=7 rm=2      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xFB: /* 0Fh 22h FBh MOVd cr(reg),w32(r/m) mod=3 reg=7 rm=3      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xFC: /* 0Fh 22h FCh MOVd cr(reg),w32(r/m) mod=3 reg=7 rm=4      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xFD: /* 0Fh 22h FDh MOVd cr(reg),w32(r/m) mod=3 reg=7 rm=5      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xFE: /* 0Fh 22h FEh MOVd cr(reg),w32(r/m) mod=3 reg=7 rm=6      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xFF: /* 0Fh 22h FFh MOVd cr(reg),w32(r/m) mod=3 reg=7 rm=7      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVd CR%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,4,RC_REG,"w32"));
                        break;
                    default:
                        goto _x86decode_illegal_opcode;
                };
/* End of opcodes starting with 0Fh 22h */
                break;
            case 0x23: /* 0Fh 23h        spec:  */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
/* Opcodes starting with 0Fh 23h */
                switch (mrm.byte) {
                    /* opcode 0Fh 23h 00h  not defined */
                    /* opcode 0Fh 23h 01h  not defined */
                    /* opcode 0Fh 23h 02h  not defined */
                    /* opcode 0Fh 23h 03h  not defined */
                    /* opcode 0Fh 23h 04h  not defined */
                    /* opcode 0Fh 23h 05h  not defined */
                    /* opcode 0Fh 23h 06h  not defined */
                    /* opcode 0Fh 23h 07h  not defined */
                    /* opcode 0Fh 23h 08h  not defined */
                    /* opcode 0Fh 23h 09h  not defined */
                    /* opcode 0Fh 23h 0Ah  not defined */
                    /* opcode 0Fh 23h 0Bh  not defined */
                    /* opcode 0Fh 23h 0Ch  not defined */
                    /* opcode 0Fh 23h 0Dh  not defined */
                    /* opcode 0Fh 23h 0Eh  not defined */
                    /* opcode 0Fh 23h 0Fh  not defined */
                    /* opcode 0Fh 23h 10h  not defined */
                    /* opcode 0Fh 23h 11h  not defined */
                    /* opcode 0Fh 23h 12h  not defined */
                    /* opcode 0Fh 23h 13h  not defined */
                    /* opcode 0Fh 23h 14h  not defined */
                    /* opcode 0Fh 23h 15h  not defined */
                    /* opcode 0Fh 23h 16h  not defined */
                    /* opcode 0Fh 23h 17h  not defined */
                    /* opcode 0Fh 23h 18h  not defined */
                    /* opcode 0Fh 23h 19h  not defined */
                    /* opcode 0Fh 23h 1Ah  not defined */
                    /* opcode 0Fh 23h 1Bh  not defined */
                    /* opcode 0Fh 23h 1Ch  not defined */
                    /* opcode 0Fh 23h 1Dh  not defined */
                    /* opcode 0Fh 23h 1Eh  not defined */
                    /* opcode 0Fh 23h 1Fh  not defined */
                    /* opcode 0Fh 23h 20h  not defined */
                    /* opcode 0Fh 23h 21h  not defined */
                    /* opcode 0Fh 23h 22h  not defined */
                    /* opcode 0Fh 23h 23h  not defined */
                    /* opcode 0Fh 23h 24h  not defined */
                    /* opcode 0Fh 23h 25h  not defined */
                    /* opcode 0Fh 23h 26h  not defined */
                    /* opcode 0Fh 23h 27h  not defined */
                    /* opcode 0Fh 23h 28h  not defined */
                    /* opcode 0Fh 23h 29h  not defined */
                    /* opcode 0Fh 23h 2Ah  not defined */
                    /* opcode 0Fh 23h 2Bh  not defined */
                    /* opcode 0Fh 23h 2Ch  not defined */
                    /* opcode 0Fh 23h 2Dh  not defined */
                    /* opcode 0Fh 23h 2Eh  not defined */
                    /* opcode 0Fh 23h 2Fh  not defined */
                    /* opcode 0Fh 23h 30h  not defined */
                    /* opcode 0Fh 23h 31h  not defined */
                    /* opcode 0Fh 23h 32h  not defined */
                    /* opcode 0Fh 23h 33h  not defined */
                    /* opcode 0Fh 23h 34h  not defined */
                    /* opcode 0Fh 23h 35h  not defined */
                    /* opcode 0Fh 23h 36h  not defined */
                    /* opcode 0Fh 23h 37h  not defined */
                    /* opcode 0Fh 23h 38h  not defined */
                    /* opcode 0Fh 23h 39h  not defined */
                    /* opcode 0Fh 23h 3Ah  not defined */
                    /* opcode 0Fh 23h 3Bh  not defined */
                    /* opcode 0Fh 23h 3Ch  not defined */
                    /* opcode 0Fh 23h 3Dh  not defined */
                    /* opcode 0Fh 23h 3Eh  not defined */
                    /* opcode 0Fh 23h 3Fh  not defined */
                    /* opcode 0Fh 23h 40h  not defined */
                    /* opcode 0Fh 23h 41h  not defined */
                    /* opcode 0Fh 23h 42h  not defined */
                    /* opcode 0Fh 23h 43h  not defined */
                    /* opcode 0Fh 23h 44h  not defined */
                    /* opcode 0Fh 23h 45h  not defined */
                    /* opcode 0Fh 23h 46h  not defined */
                    /* opcode 0Fh 23h 47h  not defined */
                    /* opcode 0Fh 23h 48h  not defined */
                    /* opcode 0Fh 23h 49h  not defined */
                    /* opcode 0Fh 23h 4Ah  not defined */
                    /* opcode 0Fh 23h 4Bh  not defined */
                    /* opcode 0Fh 23h 4Ch  not defined */
                    /* opcode 0Fh 23h 4Dh  not defined */
                    /* opcode 0Fh 23h 4Eh  not defined */
                    /* opcode 0Fh 23h 4Fh  not defined */
                    /* opcode 0Fh 23h 50h  not defined */
                    /* opcode 0Fh 23h 51h  not defined */
                    /* opcode 0Fh 23h 52h  not defined */
                    /* opcode 0Fh 23h 53h  not defined */
                    /* opcode 0Fh 23h 54h  not defined */
                    /* opcode 0Fh 23h 55h  not defined */
                    /* opcode 0Fh 23h 56h  not defined */
                    /* opcode 0Fh 23h 57h  not defined */
                    /* opcode 0Fh 23h 58h  not defined */
                    /* opcode 0Fh 23h 59h  not defined */
                    /* opcode 0Fh 23h 5Ah  not defined */
                    /* opcode 0Fh 23h 5Bh  not defined */
                    /* opcode 0Fh 23h 5Ch  not defined */
                    /* opcode 0Fh 23h 5Dh  not defined */
                    /* opcode 0Fh 23h 5Eh  not defined */
                    /* opcode 0Fh 23h 5Fh  not defined */
                    /* opcode 0Fh 23h 60h  not defined */
                    /* opcode 0Fh 23h 61h  not defined */
                    /* opcode 0Fh 23h 62h  not defined */
                    /* opcode 0Fh 23h 63h  not defined */
                    /* opcode 0Fh 23h 64h  not defined */
                    /* opcode 0Fh 23h 65h  not defined */
                    /* opcode 0Fh 23h 66h  not defined */
                    /* opcode 0Fh 23h 67h  not defined */
                    /* opcode 0Fh 23h 68h  not defined */
                    /* opcode 0Fh 23h 69h  not defined */
                    /* opcode 0Fh 23h 6Ah  not defined */
                    /* opcode 0Fh 23h 6Bh  not defined */
                    /* opcode 0Fh 23h 6Ch  not defined */
                    /* opcode 0Fh 23h 6Dh  not defined */
                    /* opcode 0Fh 23h 6Eh  not defined */
                    /* opcode 0Fh 23h 6Fh  not defined */
                    /* opcode 0Fh 23h 70h  not defined */
                    /* opcode 0Fh 23h 71h  not defined */
                    /* opcode 0Fh 23h 72h  not defined */
                    /* opcode 0Fh 23h 73h  not defined */
                    /* opcode 0Fh 23h 74h  not defined */
                    /* opcode 0Fh 23h 75h  not defined */
                    /* opcode 0Fh 23h 76h  not defined */
                    /* opcode 0Fh 23h 77h  not defined */
                    /* opcode 0Fh 23h 78h  not defined */
                    /* opcode 0Fh 23h 79h  not defined */
                    /* opcode 0Fh 23h 7Ah  not defined */
                    /* opcode 0Fh 23h 7Bh  not defined */
                    /* opcode 0Fh 23h 7Ch  not defined */
                    /* opcode 0Fh 23h 7Dh  not defined */
                    /* opcode 0Fh 23h 7Eh  not defined */
                    /* opcode 0Fh 23h 7Fh  not defined */
                    /* opcode 0Fh 23h 80h  not defined */
                    /* opcode 0Fh 23h 81h  not defined */
                    /* opcode 0Fh 23h 82h  not defined */
                    /* opcode 0Fh 23h 83h  not defined */
                    /* opcode 0Fh 23h 84h  not defined */
                    /* opcode 0Fh 23h 85h  not defined */
                    /* opcode 0Fh 23h 86h  not defined */
                    /* opcode 0Fh 23h 87h  not defined */
                    /* opcode 0Fh 23h 88h  not defined */
                    /* opcode 0Fh 23h 89h  not defined */
                    /* opcode 0Fh 23h 8Ah  not defined */
                    /* opcode 0Fh 23h 8Bh  not defined */
                    /* opcode 0Fh 23h 8Ch  not defined */
                    /* opcode 0Fh 23h 8Dh  not defined */
                    /* opcode 0Fh 23h 8Eh  not defined */
                    /* opcode 0Fh 23h 8Fh  not defined */
                    /* opcode 0Fh 23h 90h  not defined */
                    /* opcode 0Fh 23h 91h  not defined */
                    /* opcode 0Fh 23h 92h  not defined */
                    /* opcode 0Fh 23h 93h  not defined */
                    /* opcode 0Fh 23h 94h  not defined */
                    /* opcode 0Fh 23h 95h  not defined */
                    /* opcode 0Fh 23h 96h  not defined */
                    /* opcode 0Fh 23h 97h  not defined */
                    /* opcode 0Fh 23h 98h  not defined */
                    /* opcode 0Fh 23h 99h  not defined */
                    /* opcode 0Fh 23h 9Ah  not defined */
                    /* opcode 0Fh 23h 9Bh  not defined */
                    /* opcode 0Fh 23h 9Ch  not defined */
                    /* opcode 0Fh 23h 9Dh  not defined */
                    /* opcode 0Fh 23h 9Eh  not defined */
                    /* opcode 0Fh 23h 9Fh  not defined */
                    /* opcode 0Fh 23h A0h  not defined */
                    /* opcode 0Fh 23h A1h  not defined */
                    /* opcode 0Fh 23h A2h  not defined */
                    /* opcode 0Fh 23h A3h  not defined */
                    /* opcode 0Fh 23h A4h  not defined */
                    /* opcode 0Fh 23h A5h  not defined */
                    /* opcode 0Fh 23h A6h  not defined */
                    /* opcode 0Fh 23h A7h  not defined */
                    /* opcode 0Fh 23h A8h  not defined */
                    /* opcode 0Fh 23h A9h  not defined */
                    /* opcode 0Fh 23h AAh  not defined */
                    /* opcode 0Fh 23h ABh  not defined */
                    /* opcode 0Fh 23h ACh  not defined */
                    /* opcode 0Fh 23h ADh  not defined */
                    /* opcode 0Fh 23h AEh  not defined */
                    /* opcode 0Fh 23h AFh  not defined */
                    /* opcode 0Fh 23h B0h  not defined */
                    /* opcode 0Fh 23h B1h  not defined */
                    /* opcode 0Fh 23h B2h  not defined */
                    /* opcode 0Fh 23h B3h  not defined */
                    /* opcode 0Fh 23h B4h  not defined */
                    /* opcode 0Fh 23h B5h  not defined */
                    /* opcode 0Fh 23h B6h  not defined */
                    /* opcode 0Fh 23h B7h  not defined */
                    /* opcode 0Fh 23h B8h  not defined */
                    /* opcode 0Fh 23h B9h  not defined */
                    /* opcode 0Fh 23h BAh  not defined */
                    /* opcode 0Fh 23h BBh  not defined */
                    /* opcode 0Fh 23h BCh  not defined */
                    /* opcode 0Fh 23h BDh  not defined */
                    /* opcode 0Fh 23h BEh  not defined */
                    /* opcode 0Fh 23h BFh  not defined */
                    case 0xC0: /* 0Fh 23h C0h MOVd dr(reg),w32(r/m) mod=3 reg=0 rm=0      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xC1: /* 0Fh 23h C1h MOVd dr(reg),w32(r/m) mod=3 reg=0 rm=1      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xC2: /* 0Fh 23h C2h MOVd dr(reg),w32(r/m) mod=3 reg=0 rm=2      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xC3: /* 0Fh 23h C3h MOVd dr(reg),w32(r/m) mod=3 reg=0 rm=3      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xC4: /* 0Fh 23h C4h MOVd dr(reg),w32(r/m) mod=3 reg=0 rm=4      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xC5: /* 0Fh 23h C5h MOVd dr(reg),w32(r/m) mod=3 reg=0 rm=5      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xC6: /* 0Fh 23h C6h MOVd dr(reg),w32(r/m) mod=3 reg=0 rm=6      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xC7: /* 0Fh 23h C7h MOVd dr(reg),w32(r/m) mod=3 reg=0 rm=7      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xC8: /* 0Fh 23h C8h MOVd dr(reg),w32(r/m) mod=3 reg=1 rm=0      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xC9: /* 0Fh 23h C9h MOVd dr(reg),w32(r/m) mod=3 reg=1 rm=1      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xCA: /* 0Fh 23h CAh MOVd dr(reg),w32(r/m) mod=3 reg=1 rm=2      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xCB: /* 0Fh 23h CBh MOVd dr(reg),w32(r/m) mod=3 reg=1 rm=3      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xCC: /* 0Fh 23h CCh MOVd dr(reg),w32(r/m) mod=3 reg=1 rm=4      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xCD: /* 0Fh 23h CDh MOVd dr(reg),w32(r/m) mod=3 reg=1 rm=5      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xCE: /* 0Fh 23h CEh MOVd dr(reg),w32(r/m) mod=3 reg=1 rm=6      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xCF: /* 0Fh 23h CFh MOVd dr(reg),w32(r/m) mod=3 reg=1 rm=7      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xD0: /* 0Fh 23h D0h MOVd dr(reg),w32(r/m) mod=3 reg=2 rm=0      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xD1: /* 0Fh 23h D1h MOVd dr(reg),w32(r/m) mod=3 reg=2 rm=1      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xD2: /* 0Fh 23h D2h MOVd dr(reg),w32(r/m) mod=3 reg=2 rm=2      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xD3: /* 0Fh 23h D3h MOVd dr(reg),w32(r/m) mod=3 reg=2 rm=3      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xD4: /* 0Fh 23h D4h MOVd dr(reg),w32(r/m) mod=3 reg=2 rm=4      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xD5: /* 0Fh 23h D5h MOVd dr(reg),w32(r/m) mod=3 reg=2 rm=5      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xD6: /* 0Fh 23h D6h MOVd dr(reg),w32(r/m) mod=3 reg=2 rm=6      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xD7: /* 0Fh 23h D7h MOVd dr(reg),w32(r/m) mod=3 reg=2 rm=7      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xD8: /* 0Fh 23h D8h MOVd dr(reg),w32(r/m) mod=3 reg=3 rm=0      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xD9: /* 0Fh 23h D9h MOVd dr(reg),w32(r/m) mod=3 reg=3 rm=1      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xDA: /* 0Fh 23h DAh MOVd dr(reg),w32(r/m) mod=3 reg=3 rm=2      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xDB: /* 0Fh 23h DBh MOVd dr(reg),w32(r/m) mod=3 reg=3 rm=3      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xDC: /* 0Fh 23h DCh MOVd dr(reg),w32(r/m) mod=3 reg=3 rm=4      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xDD: /* 0Fh 23h DDh MOVd dr(reg),w32(r/m) mod=3 reg=3 rm=5      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xDE: /* 0Fh 23h DEh MOVd dr(reg),w32(r/m) mod=3 reg=3 rm=6      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xDF: /* 0Fh 23h DFh MOVd dr(reg),w32(r/m) mod=3 reg=3 rm=7      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xE0: /* 0Fh 23h E0h MOVd dr(reg),w32(r/m) mod=3 reg=4 rm=0      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xE1: /* 0Fh 23h E1h MOVd dr(reg),w32(r/m) mod=3 reg=4 rm=1      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xE2: /* 0Fh 23h E2h MOVd dr(reg),w32(r/m) mod=3 reg=4 rm=2      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xE3: /* 0Fh 23h E3h MOVd dr(reg),w32(r/m) mod=3 reg=4 rm=3      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xE4: /* 0Fh 23h E4h MOVd dr(reg),w32(r/m) mod=3 reg=4 rm=4      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xE5: /* 0Fh 23h E5h MOVd dr(reg),w32(r/m) mod=3 reg=4 rm=5      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xE6: /* 0Fh 23h E6h MOVd dr(reg),w32(r/m) mod=3 reg=4 rm=6      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xE7: /* 0Fh 23h E7h MOVd dr(reg),w32(r/m) mod=3 reg=4 rm=7      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xE8: /* 0Fh 23h E8h MOVd dr(reg),w32(r/m) mod=3 reg=5 rm=0      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xE9: /* 0Fh 23h E9h MOVd dr(reg),w32(r/m) mod=3 reg=5 rm=1      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xEA: /* 0Fh 23h EAh MOVd dr(reg),w32(r/m) mod=3 reg=5 rm=2      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xEB: /* 0Fh 23h EBh MOVd dr(reg),w32(r/m) mod=3 reg=5 rm=3      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xEC: /* 0Fh 23h ECh MOVd dr(reg),w32(r/m) mod=3 reg=5 rm=4      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xED: /* 0Fh 23h EDh MOVd dr(reg),w32(r/m) mod=3 reg=5 rm=5      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xEE: /* 0Fh 23h EEh MOVd dr(reg),w32(r/m) mod=3 reg=5 rm=6      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xEF: /* 0Fh 23h EFh MOVd dr(reg),w32(r/m) mod=3 reg=5 rm=7      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xF0: /* 0Fh 23h F0h MOVd dr(reg),w32(r/m) mod=3 reg=6 rm=0      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xF1: /* 0Fh 23h F1h MOVd dr(reg),w32(r/m) mod=3 reg=6 rm=1      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xF2: /* 0Fh 23h F2h MOVd dr(reg),w32(r/m) mod=3 reg=6 rm=2      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xF3: /* 0Fh 23h F3h MOVd dr(reg),w32(r/m) mod=3 reg=6 rm=3      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xF4: /* 0Fh 23h F4h MOVd dr(reg),w32(r/m) mod=3 reg=6 rm=4      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xF5: /* 0Fh 23h F5h MOVd dr(reg),w32(r/m) mod=3 reg=6 rm=5      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xF6: /* 0Fh 23h F6h MOVd dr(reg),w32(r/m) mod=3 reg=6 rm=6      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xF7: /* 0Fh 23h F7h MOVd dr(reg),w32(r/m) mod=3 reg=6 rm=7      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xF8: /* 0Fh 23h F8h MOVd dr(reg),w32(r/m) mod=3 reg=7 rm=0      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xF9: /* 0Fh 23h F9h MOVd dr(reg),w32(r/m) mod=3 reg=7 rm=1      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xFA: /* 0Fh 23h FAh MOVd dr(reg),w32(r/m) mod=3 reg=7 rm=2      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xFB: /* 0Fh 23h FBh MOVd dr(reg),w32(r/m) mod=3 reg=7 rm=3      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xFC: /* 0Fh 23h FCh MOVd dr(reg),w32(r/m) mod=3 reg=7 rm=4      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xFD: /* 0Fh 23h FDh MOVd dr(reg),w32(r/m) mod=3 reg=7 rm=5      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xFE: /* 0Fh 23h FEh MOVd dr(reg),w32(r/m) mod=3 reg=7 rm=6      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xFF: /* 0Fh 23h FFh MOVd dr(reg),w32(r/m) mod=3 reg=7 rm=7      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVd DR%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,4,RC_REG,"w32"));
                        break;
                    default:
                        goto _x86decode_illegal_opcode;
                };
/* End of opcodes starting with 0Fh 23h */
                break;
            /* opcode 0Fh 24h  not defined */
            /* opcode 0Fh 25h  not defined */
            /* opcode 0Fh 26h  not defined */
            /* opcode 0Fh 27h  not defined */
            /* opcode 0Fh 28h  not defined */
            /* opcode 0Fh 29h  not defined */
            /* opcode 0Fh 2Ah  not defined */
            /* opcode 0Fh 2Bh  not defined */
            /* opcode 0Fh 2Ch  not defined */
            /* opcode 0Fh 2Dh  not defined */
            /* opcode 0Fh 2Eh  not defined */
            /* opcode 0Fh 2Fh  not defined */
            case 0x30: /* 0Fh 30h WRMSR       spec: 0x0F 0x30 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"WRMSR");
                break;
            case 0x31: /* 0Fh 31h RDTSC       spec: 0x0F 0x31 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"RDTSC");
                break;
            case 0x32: /* 0Fh 32h RDMSR       spec: 0x0F 0x32 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"RDMSR");
                break;
            /* opcode 0Fh 33h  not defined */
            /* opcode 0Fh 34h  not defined */
            /* opcode 0Fh 35h  not defined */
            /* opcode 0Fh 36h  not defined */
            /* opcode 0Fh 37h  not defined */
            /* opcode 0Fh 38h  not defined */
            /* opcode 0Fh 39h  not defined */
            /* opcode 0Fh 3Ah  not defined */
            /* opcode 0Fh 3Bh  not defined */
            /* opcode 0Fh 3Ch  not defined */
            /* opcode 0Fh 3Dh  not defined */
            /* opcode 0Fh 3Eh  not defined */
            /* opcode 0Fh 3Fh  not defined */
            /* opcode 0Fh 40h  not defined */
            /* opcode 0Fh 41h  not defined */
            /* opcode 0Fh 42h  not defined */
            /* opcode 0Fh 43h  not defined */
            /* opcode 0Fh 44h  not defined */
            /* opcode 0Fh 45h  not defined */
            /* opcode 0Fh 46h  not defined */
            /* opcode 0Fh 47h  not defined */
            /* opcode 0Fh 48h  not defined */
            /* opcode 0Fh 49h  not defined */
            /* opcode 0Fh 4Ah  not defined */
            /* opcode 0Fh 4Bh  not defined */
            /* opcode 0Fh 4Ch  not defined */
            /* opcode 0Fh 4Dh  not defined */
            /* opcode 0Fh 4Eh  not defined */
            /* opcode 0Fh 4Fh  not defined */
            /* opcode 0Fh 50h  not defined */
            /* opcode 0Fh 51h  not defined */
            /* opcode 0Fh 52h  not defined */
            /* opcode 0Fh 53h  not defined */
            /* opcode 0Fh 54h  not defined */
            /* opcode 0Fh 55h  not defined */
            /* opcode 0Fh 56h  not defined */
            /* opcode 0Fh 57h  not defined */
            /* opcode 0Fh 58h  not defined */
            /* opcode 0Fh 59h  not defined */
            /* opcode 0Fh 5Ah  not defined */
            /* opcode 0Fh 5Bh  not defined */
            /* opcode 0Fh 5Ch  not defined */
            /* opcode 0Fh 5Dh  not defined */
            /* opcode 0Fh 5Eh  not defined */
            /* opcode 0Fh 5Fh  not defined */
            /* opcode 0Fh 60h  not defined */
            /* opcode 0Fh 61h  not defined */
            /* opcode 0Fh 62h  not defined */
            /* opcode 0Fh 63h  not defined */
            /* opcode 0Fh 64h  not defined */
            /* opcode 0Fh 65h  not defined */
            /* opcode 0Fh 66h  not defined */
            /* opcode 0Fh 67h  not defined */
            /* opcode 0Fh 68h  not defined */
            /* opcode 0Fh 69h  not defined */
            /* opcode 0Fh 6Ah  not defined */
            /* opcode 0Fh 6Bh  not defined */
            /* opcode 0Fh 6Ch  not defined */
            /* opcode 0Fh 6Dh  not defined */
            /* opcode 0Fh 6Eh  not defined */
            /* opcode 0Fh 6Fh  not defined */
            /* opcode 0Fh 70h  not defined */
            /* opcode 0Fh 71h  not defined */
            /* opcode 0Fh 72h  not defined */
            /* opcode 0Fh 73h  not defined */
            /* opcode 0Fh 74h  not defined */
            /* opcode 0Fh 75h  not defined */
            /* opcode 0Fh 76h  not defined */
            /* opcode 0Fh 77h  not defined */
            /* opcode 0Fh 78h  not defined */
            /* opcode 0Fh 79h  not defined */
            /* opcode 0Fh 7Ah  not defined */
            /* opcode 0Fh 7Bh  not defined */
            /* opcode 0Fh 7Ch  not defined */
            /* opcode 0Fh 7Dh  not defined */
            /* opcode 0Fh 7Eh  not defined */
            /* opcode 0Fh 7Fh  not defined */
            case 0x80: /* 0Fh 80h JO w(i+ip)      spec: 0x0F 0x80 iws */
                imm=IPFcodeWsigned();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JO 0x%08lX",(unsigned long)((uint32_t)(imm+IPval())));
                break;
            case 0x81: /* 0Fh 81h JNO w(i+ip)      spec: 0x0F 0x81 iws */
                imm=IPFcodeWsigned();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JNO 0x%08lX",(unsigned long)((uint32_t)(imm+IPval())));
                break;
            case 0x82: /* 0Fh 82h JB w(i+ip)      spec: 0x0F 0x82 iws */
                imm=IPFcodeWsigned();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JB 0x%08lX",(unsigned long)((uint32_t)(imm+IPval())));
                break;
            case 0x83: /* 0Fh 83h JNB w(i+ip)      spec: 0x0F 0x83 iws */
                imm=IPFcodeWsigned();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JNB 0x%08lX",(unsigned long)((uint32_t)(imm+IPval())));
                break;
            case 0x84: /* 0Fh 84h JZ w(i+ip)      spec: 0x0F 0x84 iws */
                imm=IPFcodeWsigned();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JZ 0x%08lX",(unsigned long)((uint32_t)(imm+IPval())));
                break;
            case 0x85: /* 0Fh 85h JNZ w(i+ip)      spec: 0x0F 0x85 iws */
                imm=IPFcodeWsigned();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JNZ 0x%08lX",(unsigned long)((uint32_t)(imm+IPval())));
                break;
            case 0x86: /* 0Fh 86h JBE w(i+ip)      spec: 0x0F 0x86 iws */
                imm=IPFcodeWsigned();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JBE 0x%08lX",(unsigned long)((uint32_t)(imm+IPval())));
                break;
            case 0x87: /* 0Fh 87h JA w(i+ip)      spec: 0x0F 0x87 iws */
                imm=IPFcodeWsigned();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JA 0x%08lX",(unsigned long)((uint32_t)(imm+IPval())));
                break;
            case 0x88: /* 0Fh 88h JS w(i+ip)      spec: 0x0F 0x88 iws */
                imm=IPFcodeWsigned();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JS 0x%08lX",(unsigned long)((uint32_t)(imm+IPval())));
                break;
            case 0x89: /* 0Fh 89h JNS w(i+ip)      spec: 0x0F 0x89 iws */
                imm=IPFcodeWsigned();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JNS 0x%08lX",(unsigned long)((uint32_t)(imm+IPval())));
                break;
            case 0x8A: /* 0Fh 8Ah JPE w(i+ip)      spec: 0x0F 0x8A iws */
                imm=IPFcodeWsigned();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JPE 0x%08lX",(unsigned long)((uint32_t)(imm+IPval())));
                break;
            case 0x8B: /* 0Fh 8Bh JPO w(i+ip)      spec: 0x0F 0x8B iws */
                imm=IPFcodeWsigned();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JPO 0x%08lX",(unsigned long)((uint32_t)(imm+IPval())));
                break;
            case 0x8C: /* 0Fh 8Ch JL w(i+ip)      spec: 0x0F 0x8C iws */
                imm=IPFcodeWsigned();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JL 0x%08lX",(unsigned long)((uint32_t)(imm+IPval())));
                break;
            case 0x8D: /* 0Fh 8Dh JGE w(i+ip)      spec: 0x0F 0x8D iws */
                imm=IPFcodeWsigned();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JGE 0x%08lX",(unsigned long)((uint32_t)(imm+IPval())));
                break;
            case 0x8E: /* 0Fh 8Eh JLE w(i+ip)      spec: 0x0F 0x8E iws */
                imm=IPFcodeWsigned();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JLE 0x%08lX",(unsigned long)((uint32_t)(imm+IPval())));
                break;
            case 0x8F: /* 0Fh 8Fh JG w(i+ip)      spec: 0x0F 0x8F iws */
                imm=IPFcodeWsigned();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JG 0x%08lX",(unsigned long)((uint32_t)(imm+IPval())));
                break;
            case 0x90: /* 0Fh 90h SETO b(r/m)      spec: 0x0F 0x90 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SETO %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 0x91: /* 0Fh 91h SETNO b(r/m)      spec: 0x0F 0x91 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SETNO %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 0x92: /* 0Fh 92h SETB b(r/m)      spec: 0x0F 0x92 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SETB %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 0x93: /* 0Fh 93h SETNB b(r/m)      spec: 0x0F 0x93 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SETNB %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 0x94: /* 0Fh 94h SETZ b(r/m)      spec: 0x0F 0x94 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SETZ %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 0x95: /* 0Fh 95h SETNZ b(r/m)      spec: 0x0F 0x95 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SETNZ %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 0x96: /* 0Fh 96h SETBE b(r/m)      spec: 0x0F 0x96 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SETBE %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 0x97: /* 0Fh 97h SETA b(r/m)      spec: 0x0F 0x97 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SETA %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 0x98: /* 0Fh 98h SETS b(r/m)      spec: 0x0F 0x98 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SETS %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 0x99: /* 0Fh 99h SETNS b(r/m)      spec: 0x0F 0x99 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SETNS %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 0x9A: /* 0Fh 9Ah SETPE b(r/m)      spec: 0x0F 0x9A mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SETPE %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 0x9B: /* 0Fh 9Bh SETPO b(r/m)      spec: 0x0F 0x9B mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SETPO %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 0x9C: /* 0Fh 9Ch SETL b(r/m)      spec: 0x0F 0x9C mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SETL %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 0x9D: /* 0Fh 9Dh SETGE b(r/m)      spec: 0x0F 0x9D mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SETGE %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 0x9E: /* 0Fh 9Eh SETLE b(r/m)      spec: 0x0F 0x9E mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SETLE %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 0x9F: /* 0Fh 9Fh SETG b(r/m)      spec: 0x0F 0x9F mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SETG %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 0xA0: /* 0Fh A0h PUSHd w(fs)      spec: 0x0F 0xA0 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PUSHd %s",CPUsregs_80386[4]);
                break;
            case 0xA1: /* 0Fh A1h POPd w(fs)      spec: 0x0F 0xA1 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"POPd %s",CPUsregs_80386[4]);
                break;
            case 0xA2: /* 0Fh A2h CPUID       spec: 0x0F 0xA2 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CPUID");
                break;
            case 0xA3: /* 0Fh A3h BTd w(r/m),w(reg)      spec: 0x0F 0xA3 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"BTd %s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[4][mrm.reg()]);
                break;
            case 0xA4: /* 0Fh A4h SHLDd w(r/m),w(reg),i      spec: 0x0F 0xA4 mod/reg/rm ib */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                imm=IPFB();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SHLDd %s,%s,0x%02lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[4][mrm.reg()],(unsigned long)((uint32_t)imm));
                break;
            case 0xA5: /* 0Fh A5h SHLDd w(r/m),w(reg),b(c)      spec: 0x0F 0xA5 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SHLDd %s,%s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[4][mrm.reg()],CPUregsN[1][1]);
                break;
            /* opcode 0Fh A6h  not defined */
            /* opcode 0Fh A7h  not defined */
            case 0xA8: /* 0Fh A8h PUSHd w(gs)      spec: 0x0F 0xA8 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PUSHd %s",CPUsregs_80386[5]);
                break;
            case 0xA9: /* 0Fh A9h POPd w(gs)      spec: 0x0F 0xA9 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"POPd %s",CPUsregs_80386[5]);
                break;
            /* opcode 0Fh AAh  not defined */
            case 0xAB: /* 0Fh ABh BTSd w(r/m),w(reg)      spec: 0x0F 0xAB mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"BTSd %s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[4][mrm.reg()]);
                break;
            case 0xAC: /* 0Fh ACh SHRDd w(r/m),w(reg),i      spec: 0x0F 0xAC mod/reg/rm ib */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                imm=IPFB();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SHRDd %s,%s,0x%02lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[4][mrm.reg()],(unsigned long)((uint32_t)imm));
                break;
            case 0xAD: /* 0Fh ADh SHRDd w(r/m),w(reg),b(c)      spec: 0x0F 0xAD mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SHRDd %s,%s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[4][mrm.reg()],CPUregsN[1][1]);
                break;
            /* opcode 0Fh AEh  not defined */
            case 0xAF: /* 0Fh AFh IMULd w(reg),w(r/m)      spec: 0x0F 0xAF mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"IMULd %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 0xB0: /* 0Fh B0h CMPXCHGb b(r/m),b(reg)      spec: 0x0F 0xB0 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CMPXCHGb %s,%s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),CPUregsN[1][mrm.reg()]);
                break;
            case 0xB1: /* 0Fh B1h CMPXCHGd w(r/m),w(reg)      spec: 0x0F 0xB1 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CMPXCHGd %s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[4][mrm.reg()]);
                break;
            case 0xB2: /* 0Fh B2h LSSd w(reg),w(r/m)      spec: 0x0F 0xB2 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"LSSd %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 0xB3: /* 0Fh B3h BTRd w(r/m),w(reg)      spec: 0x0F 0xB3 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"BTRd %s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[4][mrm.reg()]);
                break;
            case 0xB4: /* 0Fh B4h LFSd w(reg),w(r/m)      spec: 0x0F 0xB4 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"LFSd %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 0xB5: /* 0Fh B5h LGSd w(reg),w(r/m)      spec: 0x0F 0xB5 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"LGSd %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 0xB6: /* 0Fh B6h MOVZXb w(reg),b(r/m)      spec: 0x0F 0xB6 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVZXb %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 0xB7: /* 0Fh B7h MOVZXd w(reg),w16(r/m)      spec: 0x0F 0xB7 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVZXd %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,2,RC_REG,"w16"));
                break;
            /* opcode 0Fh B8h  not defined */
            /* opcode 0Fh B9h  not defined */
            case 0xBA: /* 0Fh BAh        spec:  */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
/* Opcodes starting with 0Fh BAh */
                switch (mrm.reg()) {
                    /* reg 0 not defined */
                    /* reg 1 not defined */
                    /* reg 2 not defined */
                    /* reg 3 not defined */
                    case 4: /* 0Fh BAh 20h BTd w(r/m),i reg=4      spec: 0x0F 0xBA mod/reg/rm /4 ib */
                        imm=IPFB();
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"BTd %s,0x%02lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
                        break;
                    case 5: /* 0Fh BAh 28h BTSd w(r/m),i reg=5      spec: 0x0F 0xBA mod/reg/rm /5 ib */
                        imm=IPFB();
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"BTSd %s,0x%02lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
                        break;
                    case 6: /* 0Fh BAh 30h BTRd w(r/m),i reg=6      spec: 0x0F 0xBA mod/reg/rm /6 ib */
                        imm=IPFB();
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"BTRd %s,0x%02lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
                        break;
                    case 7: /* 0Fh BAh 38h BTCd w(r/m),i reg=7      spec: 0x0F 0xBA mod/reg/rm /7 ib */
                        imm=IPFB();
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"BTCd %s,0x%02lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
                        break;
                    default:
                        goto _x86decode_illegal_opcode;
                };
/* End of opcodes starting with 0Fh BAh */
                break;
            case 0xBB: /* 0Fh BBh BTCd w(r/m),w(reg)      spec: 0x0F 0xBB mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"BTCd %s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[4][mrm.reg()]);
                break;
            case 0xBC: /* 0Fh BCh BSFd w(reg),w(r/m)      spec: 0x0F 0xBC mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"BSFd %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 0xBD: /* 0Fh BDh BSRd w(reg),w(r/m)      spec: 0x0F 0xBD mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"BSRd %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 0xBE: /* 0Fh BEh MOVSXb w(reg),b(r/m)      spec: 0x0F 0xBE mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVSXb %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 0xBF: /* 0Fh BFh MOVSXd w(reg),w16(r/m)      spec: 0x0F 0xBF mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVSXd %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,2,RC_REG,"w16"));
                break;
            case 0xC0: /* 0Fh C0h XADDb b(r/m),b(reg)      spec: 0x0F 0xC0 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"XADDb %s,%s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),CPUregsN[1][mrm.reg()]);
                break;
            case 0xC1: /* 0Fh C1h XADDd w(r/m),w(reg)      spec: 0x0F 0xC1 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"XADDd %s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[4][mrm.reg()]);
                break;
            /* opcode 0Fh C2h  not defined */
            /* opcode 0Fh C3h  not defined */
            /* opcode 0Fh C4h  not defined */
            /* opcode 0Fh C5h  not defined */
            /* opcode 0Fh C6h  not defined */
            case 0xC7: /* 0Fh C7h        spec:  */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
/* Opcodes starting with 0Fh C7h */
                switch (mrm.byte) {
                    /* opcode 0Fh C7h 00h  not defined */
                    /* opcode 0Fh C7h 01h  not defined */
                    /* opcode 0Fh C7h 02h  not defined */
                    /* opcode 0Fh C7h 03h  not defined */
                    /* opcode 0Fh C7h 04h  not defined */
                    /* opcode 0Fh C7h 05h  not defined */
                    /* opcode 0Fh C7h 06h  not defined */
                    /* opcode 0Fh C7h 07h  not defined */
                    case 0x08: /* 0Fh C7h 08h CMPXCHG8Bb b(r/m) mod=0 reg=1 rm=0      spec: 0x0F 0xC7 mod/reg/rm /1 mod!=3 */
                    case 0x09: /* 0Fh C7h 09h CMPXCHG8Bb b(r/m) mod=0 reg=1 rm=1      spec: 0x0F 0xC7 mod/reg/rm /1 mod!=3 */
                    case 0x0A: /* 0Fh C7h 0Ah CMPXCHG8Bb b(r/m) mod=0 reg=1 rm=2      spec: 0x0F 0xC7 mod/reg/rm /1 mod!=3 */
                    case 0x0B: /* 0Fh C7h 0Bh CMPXCHG8Bb b(r/m) mod=0 reg=1 rm=3      spec: 0x0F 0xC7 mod/reg/rm /1 mod!=3 */
                    case 0x0C: /* 0Fh C7h 0Ch CMPXCHG8Bb b(r/m) mod=0 reg=1 rm=4      spec: 0x0F 0xC7 mod/reg/rm /1 mod!=3 */
                    case 0x0D: /* 0Fh C7h 0Dh CMPXCHG8Bb b(r/m) mod=0 reg=1 rm=5      spec: 0x0F 0xC7 mod/reg/rm /1 mod!=3 */
                    case 0x0E: /* 0Fh C7h 0Eh CMPXCHG8Bb b(r/m) mod=0 reg=1 rm=6      spec: 0x0F 0xC7 mod/reg/rm /1 mod!=3 */
                    case 0x0F: /* 0Fh C7h 0Fh CMPXCHG8Bb b(r/m) mod=0 reg=1 rm=7      spec: 0x0F 0xC7 mod/reg/rm /1 mod!=3 */
                    case 0x48: /* 0Fh C7h 48h CMPXCHG8Bb b(r/m) mod=1 reg=1 rm=0      spec: 0x0F 0xC7 mod/reg/rm /1 mod!=3 */
                    case 0x49: /* 0Fh C7h 49h CMPXCHG8Bb b(r/m) mod=1 reg=1 rm=1      spec: 0x0F 0xC7 mod/reg/rm /1 mod!=3 */
                    case 0x4A: /* 0Fh C7h 4Ah CMPXCHG8Bb b(r/m) mod=1 reg=1 rm=2      spec: 0x0F 0xC7 mod/reg/rm /1 mod!=3 */
                    case 0x4B: /* 0Fh C7h 4Bh CMPXCHG8Bb b(r/m) mod=1 reg=1 rm=3      spec: 0x0F 0xC7 mod/reg/rm /1 mod!=3 */
                    case 0x4C: /* 0Fh C7h 4Ch CMPXCHG8Bb b(r/m) mod=1 reg=1 rm=4      spec: 0x0F 0xC7 mod/reg/rm /1 mod!=3 */
                    case 0x4D: /* 0Fh C7h 4Dh CMPXCHG8Bb b(r/m) mod=1 reg=1 rm=5      spec: 0x0F 0xC7 mod/reg/rm /1 mod!=3 */
                    case 0x4E: /* 0Fh C7h 4Eh CMPXCHG8Bb b(r/m) mod=1 reg=1 rm=6      spec: 0x0F 0xC7 mod/reg/rm /1 mod!=3 */
                    case 0x4F: /* 0Fh C7h 4Fh CMPXCHG8Bb b(r/m) mod=1 reg=1 rm=7      spec: 0x0F 0xC7 mod/reg/rm /1 mod!=3 */
                    case 0x88: /* 0Fh C7h 88h CMPXCHG8Bb b(r/m) mod=2 reg=1 rm=0      spec: 0x0F 0xC7 mod/reg/rm /1 mod!=3 */
                    case 0x89: /* 0Fh C7h 89h CMPXCHG8Bb b(r/m) mod=2 reg=1 rm=1      spec: 0x0F 0xC7 mod/reg/rm /1 mod!=3 */
                    case 0x8A: /* 0Fh C7h 8Ah CMPXCHG8Bb b(r/m) mod=2 reg=1 rm=2      spec: 0x0F 0xC7 mod/reg/rm /1 mod!=3 */
                    case 0x8B: /* 0Fh C7h 8Bh CMPXCHG8Bb b(r/m) mod=2 reg=1 rm=3      spec: 0x0F 0xC7 mod/reg/rm /1 mod!=3 */
                    case 0x8C: /* 0Fh C7h 8Ch CMPXCHG8Bb b(r/m) mod=2 reg=1 rm=4      spec: 0x0F 0xC7 mod/reg/rm /1 mod!=3 */
                    case 0x8D: /* 0Fh C7h 8Dh CMPXCHG8Bb b(r/m) mod=2 reg=1 rm=5      spec: 0x0F 0xC7 mod/reg/rm /1 mod!=3 */
                    case 0x8E: /* 0Fh C7h 8Eh CMPXCHG8Bb b(r/m) mod=2 reg=1 rm=6      spec: 0x0F 0xC7 mod/reg/rm /1 mod!=3 */
                    case 0x8F: /* 0Fh C7h 8Fh CMPXCHG8Bb b(r/m) mod=2 reg=1 rm=7      spec: 0x0F 0xC7 mod/reg/rm /1 mod!=3 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CMPXCHG8Bb %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                        break;
                    /* opcode 0Fh C7h 10h  not defined */
                    /* opcode 0Fh C7h 11h  not defined */
                    /* opcode 0Fh C7h 12h  not defined */
                    /* opcode 0Fh C7h 13h  not defined */
                    /* opcode 0Fh C7h 14h  not defined */
                    /* opcode 0Fh C7h 15h  not defined */
                    /* opcode 0Fh C7h 16h  not defined */
                    /* opcode 0Fh C7h 17h  not defined */
                    /* opcode 0Fh C7h 18h  not defined */
                    /* opcode 0Fh C7h 19h  not defined */
                    /* opcode 0Fh C7h 1Ah  not defined */
                    /* opcode 0Fh C7h 1Bh  not defined */
                    /* opcode 0Fh C7h 1Ch  not defined */
                    /* opcode 0Fh C7h 1Dh  not defined */
                    /* opcode 0Fh C7h 1Eh  not defined */
                    /* opcode 0Fh C7h 1Fh  not defined */
                    /* opcode 0Fh C7h 20h  not defined */
                    /* opcode 0Fh C7h 21h  not defined */
                    /* opcode 0Fh C7h 22h  not defined */
                    /* opcode 0Fh C7h 23h  not defined */
                    /* opcode 0Fh C7h 24h  not defined */
                    /* opcode 0Fh C7h 25h  not defined */
                    /* opcode 0Fh C7h 26h  not defined */
                    /* opcode 0Fh C7h 27h  not defined */
                    /* opcode 0Fh C7h 28h  not defined */
                    /* opcode 0Fh C7h 29h  not defined */
                    /* opcode 0Fh C7h 2Ah  not defined */
                    /* opcode 0Fh C7h 2Bh  not defined */
                    /* opcode 0Fh C7h 2Ch  not defined */
                    /* opcode 0Fh C7h 2Dh  not defined */
                    /* opcode 0Fh C7h 2Eh  not defined */
                    /* opcode 0Fh C7h 2Fh  not defined */
                    /* opcode 0Fh C7h 30h  not defined */
                    /* opcode 0Fh C7h 31h  not defined */
                    /* opcode 0Fh C7h 32h  not defined */
                    /* opcode 0Fh C7h 33h  not defined */
                    /* opcode 0Fh C7h 34h  not defined */
                    /* opcode 0Fh C7h 35h  not defined */
                    /* opcode 0Fh C7h 36h  not defined */
                    /* opcode 0Fh C7h 37h  not defined */
                    /* opcode 0Fh C7h 38h  not defined */
                    /* opcode 0Fh C7h 39h  not defined */
                    /* opcode 0Fh C7h 3Ah  not defined */
                    /* opcode 0Fh C7h 3Bh  not defined */
                    /* opcode 0Fh C7h 3Ch  not defined */
                    /* opcode 0Fh C7h 3Dh  not defined */
                    /* opcode 0Fh C7h 3Eh  not defined */
                    /* opcode 0Fh C7h 3Fh  not defined */
                    /* opcode 0Fh C7h 40h  not defined */
                    /* opcode 0Fh C7h 41h  not defined */
                    /* opcode 0Fh C7h 42h  not defined */
                    /* opcode 0Fh C7h 43h  not defined */
                    /* opcode 0Fh C7h 44h  not defined */
                    /* opcode 0Fh C7h 45h  not defined */
                    /* opcode 0Fh C7h 46h  not defined */
                    /* opcode 0Fh C7h 47h  not defined */
                    /* opcode 0Fh C7h 50h  not defined */
                    /* opcode 0Fh C7h 51h  not defined */
                    /* opcode 0Fh C7h 52h  not defined */
                    /* opcode 0Fh C7h 53h  not defined */
                    /* opcode 0Fh C7h 54h  not defined */
                    /* opcode 0Fh C7h 55h  not defined */
                    /* opcode 0Fh C7h 56h  not defined */
                    /* opcode 0Fh C7h 57h  not defined */
                    /* opcode 0Fh C7h 58h  not defined */
                    /* opcode 0Fh C7h 59h  not defined */
                    /* opcode 0Fh C7h 5Ah  not defined */
                    /* opcode 0Fh C7h 5Bh  not defined */
                    /* opcode 0Fh C7h 5Ch  not defined */
                    /* opcode 0Fh C7h 5Dh  not defined */
                    /* opcode 0Fh C7h 5Eh  not defined */
                    /* opcode 0Fh C7h 5Fh  not defined */
                    /* opcode 0Fh C7h 60h  not defined */
                    /* opcode 0Fh C7h 61h  not defined */
                    /* opcode 0Fh C7h 62h  not defined */
                    /* opcode 0Fh C7h 63h  not defined */
                    /* opcode 0Fh C7h 64h  not defined */
                    /* opcode 0Fh C7h 65h  not defined */
                    /* opcode 0Fh C7h 66h  not defined */
                    /* opcode 0Fh C7h 67h  not defined */
                    /* opcode 0Fh C7h 68h  not defined */
                    /* opcode 0Fh C7h 69h  not defined */
                    /* opcode 0Fh C7h 6Ah  not defined */
                    /* opcode 0Fh C7h 6Bh  not defined */
                    /* opcode 0Fh C7h 6Ch  not defined */
                    /* opcode 0Fh C7h 6Dh  not defined */
                    /* opcode 0Fh C7h 6Eh  not defined */
                    /* opcode 0Fh C7h 6Fh  not defined */
                    /* opcode 0Fh C7h 70h  not defined */
                    /* opcode 0Fh C7h 71h  not defined */
                    /* opcode 0Fh C7h 72h  not defined */
                    /* opcode 0Fh C7h 73h  not defined */
                    /* opcode 0Fh C7h 74h  not defined */
                    /* opcode 0Fh C7h 75h  not defined */
                    /* opcode 0Fh C7h 76h  not defined */
                    /* opcode 0Fh C7h 77h  not defined */
                    /* opcode 0Fh C7h 78h  not defined */
                    /* opcode 0Fh C7h 79h  not defined */
                    /* opcode 0Fh C7h 7Ah  not defined */
                    /* opcode 0Fh C7h 7Bh  not defined */
                    /* opcode 0Fh C7h 7Ch  not defined */
                    /* opcode 0Fh C7h 7Dh  not defined */
                    /* opcode 0Fh C7h 7Eh  not defined */
                    /* opcode 0Fh C7h 7Fh  not defined */
                    /* opcode 0Fh C7h 80h  not defined */
                    /* opcode 0Fh C7h 81h  not defined */
                    /* opcode 0Fh C7h 82h  not defined */
                    /* opcode 0Fh C7h 83h  not defined */
                    /* opcode 0Fh C7h 84h  not defined */
                    /* opcode 0Fh C7h 85h  not defined */
                    /* opcode 0Fh C7h 86h  not defined */
                    /* opcode 0Fh C7h 87h  not defined */
                    /* opcode 0Fh C7h 90h  not defined */
                    /* opcode 0Fh C7h 91h  not defined */
                    /* opcode 0Fh C7h 92h  not defined */
                    /* opcode 0Fh C7h 93h  not defined */
                    /* opcode 0Fh C7h 94h  not defined */
                    /* opcode 0Fh C7h 95h  not defined */
                    /* opcode 0Fh C7h 96h  not defined */
                    /* opcode 0Fh C7h 97h  not defined */
                    /* opcode 0Fh C7h 98h  not defined */
                    /* opcode 0Fh C7h 99h  not defined */
                    /* opcode 0Fh C7h 9Ah  not defined */
                    /* opcode 0Fh C7h 9Bh  not defined */
                    /* opcode 0Fh C7h 9Ch  not defined */
                    /* opcode 0Fh C7h 9Dh  not defined */
                    /* opcode 0Fh C7h 9Eh  not defined */
                    /* opcode 0Fh C7h 9Fh  not defined */
                    /* opcode 0Fh C7h A0h  not defined */
                    /* opcode 0Fh C7h A1h  not defined */
                    /* opcode 0Fh C7h A2h  not defined */
                    /* opcode 0Fh C7h A3h  not defined */
                    /* opcode 0Fh C7h A4h  not defined */
                    /* opcode 0Fh C7h A5h  not defined */
                    /* opcode 0Fh C7h A6h  not defined */
                    /* opcode 0Fh C7h A7h  not defined */
                    /* opcode 0Fh C7h A8h  not defined */
                    /* opcode 0Fh C7h A9h  not defined */
                    /* opcode 0Fh C7h AAh  not defined */
                    /* opcode 0Fh C7h ABh  not defined */
                    /* opcode 0Fh C7h ACh  not defined */
                    /* opcode 0Fh C7h ADh  not defined */
                    /* opcode 0Fh C7h AEh  not defined */
                    /* opcode 0Fh C7h AFh  not defined */
                    /* opcode 0Fh C7h B0h  not defined */
                    /* opcode 0Fh C7h B1h  not defined */
                    /* opcode 0Fh C7h B2h  not defined */
                    /* opcode 0Fh C7h B3h  not defined */
                    /* opcode 0Fh C7h B4h  not defined */
                    /* opcode 0Fh C7h B5h  not defined */
                    /* opcode 0Fh C7h B6h  not defined */
                    /* opcode 0Fh C7h B7h  not defined */
                    /* opcode 0Fh C7h B8h  not defined */
                    /* opcode 0Fh C7h B9h  not defined */
                    /* opcode 0Fh C7h BAh  not defined */
                    /* opcode 0Fh C7h BBh  not defined */
                    /* opcode 0Fh C7h BCh  not defined */
                    /* opcode 0Fh C7h BDh  not defined */
                    /* opcode 0Fh C7h BEh  not defined */
                    /* opcode 0Fh C7h BFh  not defined */
                    /* opcode 0Fh C7h C0h  not defined */
                    /* opcode 0Fh C7h C1h  not defined */
                    /* opcode 0Fh C7h C2h  not defined */
                    /* opcode 0Fh C7h C3h  not defined */
                    /* opcode 0Fh C7h C4h  not defined */
                    /* opcode 0Fh C7h C5h  not defined */
                    /* opcode 0Fh C7h C6h  not defined */
                    /* opcode 0Fh C7h C7h  not defined */
                    /* opcode 0Fh C7h C8h  not defined */
                    /* opcode 0Fh C7h C9h  not defined */
                    /* opcode 0Fh C7h CAh  not defined */
                    /* opcode 0Fh C7h CBh  not defined */
                    /* opcode 0Fh C7h CCh  not defined */
                    /* opcode 0Fh C7h CDh  not defined */
                    /* opcode 0Fh C7h CEh  not defined */
                    /* opcode 0Fh C7h CFh  not defined */
                    /* opcode 0Fh C7h D0h  not defined */
                    /* opcode 0Fh C7h D1h  not defined */
                    /* opcode 0Fh C7h D2h  not defined */
                    /* opcode 0Fh C7h D3h  not defined */
                    /* opcode 0Fh C7h D4h  not defined */
                    /* opcode 0Fh C7h D5h  not defined */
                    /* opcode 0Fh C7h D6h  not defined */
                    /* opcode 0Fh C7h D7h  not defined */
                    /* opcode 0Fh C7h D8h  not defined */
                    /* opcode 0Fh C7h D9h  not defined */
                    /* opcode 0Fh C7h DAh  not defined */
                    /* opcode 0Fh C7h DBh  not defined */
                    /* opcode 0Fh C7h DCh  not defined */
                    /* opcode 0Fh C7h DDh  not defined */
                    /* opcode 0Fh C7h DEh  not defined */
                    /* opcode 0Fh C7h DFh  not defined */
                    /* opcode 0Fh C7h E0h  not defined */
                    /* opcode 0Fh C7h E1h  not defined */
                    /* opcode 0Fh C7h E2h  not defined */
                    /* opcode 0Fh C7h E3h  not defined */
                    /* opcode 0Fh C7h E4h  not defined */
                    /* opcode 0Fh C7h E5h  not defined */
                    /* opcode 0Fh C7h E6h  not defined */
                    /* opcode 0Fh C7h E7h  not defined */
                    /* opcode 0Fh C7h E8h  not defined */
                    /* opcode 0Fh C7h E9h  not defined */
                    /* opcode 0Fh C7h EAh  not defined */
                    /* opcode 0Fh C7h EBh  not defined */
                    /* opcode 0Fh C7h ECh  not defined */
                    /* opcode 0Fh C7h EDh  not defined */
                    /* opcode 0Fh C7h EEh  not defined */
                    /* opcode 0Fh C7h EFh  not defined */
                    /* opcode 0Fh C7h F0h  not defined */
                    /* opcode 0Fh C7h F1h  not defined */
                    /* opcode 0Fh C7h F2h  not defined */
                    /* opcode 0Fh C7h F3h  not defined */
                    /* opcode 0Fh C7h F4h  not defined */
                    /* opcode 0Fh C7h F5h  not defined */
                    /* opcode 0Fh C7h F6h  not defined */
                    /* opcode 0Fh C7h F7h  not defined */
                    /* opcode 0Fh C7h F8h  not defined */
                    /* opcode 0Fh C7h F9h  not defined */
                    /* opcode 0Fh C7h FAh  not defined */
                    /* opcode 0Fh C7h FBh  not defined */
                    /* opcode 0Fh C7h FCh  not defined */
                    /* opcode 0Fh C7h FDh  not defined */
                    /* opcode 0Fh C7h FEh  not defined */
                    /* opcode 0Fh C7h FFh  not defined */
                    default:
                        goto _x86decode_illegal_opcode;
                };
/* End of opcodes starting with 0Fh C7h */
                break;
            case 0xC8: /* 0Fh C8h BSWAPd w(reg) reg=0      spec: 0x0F range(0xC8,0xCF) reg=op02 */
            case 0xC9: /* 0Fh C9h BSWAPd w(reg) reg=1      spec: 0x0F range(0xC8,0xCF) reg=op02 */
            case 0xCA: /* 0Fh CAh BSWAPd w(reg) reg=2      spec: 0x0F range(0xC8,0xCF) reg=op02 */
            case 0xCB: /* 0Fh CBh BSWAPd w(reg) reg=3      spec: 0x0F range(0xC8,0xCF) reg=op02 */
            case 0xCC: /* 0Fh CCh BSWAPd w(reg) reg=4      spec: 0x0F range(0xC8,0xCF) reg=op02 */
            case 0xCD: /* 0Fh CDh BSWAPd w(reg) reg=5      spec: 0x0F range(0xC8,0xCF) reg=op02 */
            case 0xCE: /* 0Fh CEh BSWAPd w(reg) reg=6      spec: 0x0F range(0xC8,0xCF) reg=op02 */
            case 0xCF: /* 0Fh CFh BSWAPd w(reg) reg=7      spec: 0x0F range(0xC8,0xCF) reg=op02 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"BSWAPd %s",CPUregsN[4][op&7]);
                break;
            /* opcode 0Fh D0h  not defined */
            /* opcode 0Fh D1h  not defined */
            /* opcode 0Fh D2h  not defined */
            /* opcode 0Fh D3h  not defined */
            /* opcode 0Fh D4h  not defined */
            /* opcode 0Fh D5h  not defined */
            /* opcode 0Fh D6h  not defined */
            /* opcode 0Fh D7h  not defined */
            /* opcode 0Fh D8h  not defined */
            /* opcode 0Fh D9h  not defined */
            /* opcode 0Fh DAh  not defined */
            /* opcode 0Fh DBh  not defined */
            /* opcode 0Fh DCh  not defined */
            /* opcode 0Fh DDh  not defined */
            /* opcode 0Fh DEh  not defined */
            /* opcode 0Fh DFh  not defined */
            /* opcode 0Fh E0h  not defined */
            /* opcode 0Fh E1h  not defined */
            /* opcode 0Fh E2h  not defined */
            /* opcode 0Fh E3h  not defined */
            /* opcode 0Fh E4h  not defined */
            /* opcode 0Fh E5h  not defined */
            /* opcode 0Fh E6h  not defined */
            /* opcode 0Fh E7h  not defined */
            /* opcode 0Fh E8h  not defined */
            /* opcode 0Fh E9h  not defined */
            /* opcode 0Fh EAh  not defined */
            /* opcode 0Fh EBh  not defined */
            /* opcode 0Fh ECh  not defined */
            /* opcode 0Fh EDh  not defined */
            /* opcode 0Fh EEh  not defined */
            /* opcode 0Fh EFh  not defined */
            /* opcode 0Fh F0h  not defined */
            /* opcode 0Fh F1h  not defined */
            /* opcode 0Fh F2h  not defined */
            /* opcode 0Fh F3h  not defined */
            /* opcode 0Fh F4h  not defined */
            /* opcode 0Fh F5h  not defined */
            /* opcode 0Fh F6h  not defined */
            /* opcode 0Fh F7h  not defined */
            /* opcode 0Fh F8h  not defined */
            /* opcode 0Fh F9h  not defined */
            /* opcode 0Fh FAh  not defined */
            /* opcode 0Fh FBh  not defined */
            /* opcode 0Fh FCh  not defined */
            /* opcode 0Fh FDh  not defined */
            /* opcode 0Fh FEh  not defined */
            /* opcode 0Fh FFh  not defined */
            default:
                goto _x86decode_illegal_opcode;
        };
/* End of opcodes starting with 0Fh */
        break;
    case 0x10: /* 10h ADCb b(r/m),b(reg)      spec: 0x10 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ADCb %s,%s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),CPUregsN[1][mrm.reg()]);
        break;
    case 0x11: /* 11h ADCd w(r/m),w(reg)      spec: 0x11 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ADCd %s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[4][mrm.reg()]);
        break;
    case 0x12: /* 12h ADCb b(reg),b(r/m)      spec: 0x12 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ADCb %s,%s",CPUregsN[1][mrm.reg()],IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
        break;
    case 0x13: /* 13h ADCd w(reg),w(r/m)      spec: 0x13 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ADCd %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
        break;
    case 0x14: /* 14h ADCb b(a),i      spec: 0x14 ib */
        imm=IPFB();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ADCb %s,0x%02lX",CPUregsN[1][0],(unsigned long)((uint32_t)imm));
        break;
    case 0x15: /* 15h ADCd w(a),i      spec: 0x15 iw */
        imm=IPFcodeW();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ADCd %s,0x%08lX",CPUregsN[4][0],(unsigned long)((uint32_t)imm));
        break;
    case 0x16: /* 16h PUSHd w(ss)      spec: 0x16 */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PUSHd %s",CPUsregs_80386[2]);
        break;
    case 0x17: /* 17h POPd w(ss)      spec: 0x17 */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"POPd %s",CPUsregs_80386[2]);
        break;
    case 0x18: /* 18h SBBb b(r/m),b(reg)      spec: 0x18 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SBBb %s,%s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),CPUregsN[1][mrm.reg()]);
        break;
    case 0x19: /* 19h SBBd w(r/m),w(reg)      spec: 0x19 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SBBd %s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[4][mrm.reg()]);
        break;
    case 0x1A: /* 1Ah SBBb b(reg),b(r/m)      spec: 0x1A mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SBBb %s,%s",CPUregsN[1][mrm.reg()],IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
        break;
    case 0x1B: /* 1Bh SBBd w(reg),w(r/m)      spec: 0x1B mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SBBd %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
        break;
    case 0x1C: /* 1Ch SBBb b(a),i      spec: 0x1C ib */
        imm=IPFB();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SBBb %s,0x%02lX",CPUregsN[1][0],(unsigned long)((uint32_t)imm));
        break;
    case 0x1D: /* 1Dh SBBd w(a),i      spec: 0x1D iw */
        imm=IPFcodeW();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SBBd %s,0x%08lX",CPUregsN[4][0],(unsigned long)((uint32_t)imm));
        break;
    case 0x1E: /* 1Eh PUSHd w(ds)      spec: 0x1E */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PUSHd %s",CPUsregs_80386[3]);
        break;
    case 0x1F: /* 1Fh POPd w(ds)      spec: 0x1F */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"POPd %s",CPUsregs_80386[3]);
        break;
    case 0x20: /* 20h ANDb b(r/m),b(reg)      spec: 0x20 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ANDb %s,%s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),CPUregsN[1][mrm.reg()]);
        break;
    case 0x21: /* 21h ANDd w(r/m),w(reg)      spec: 0x21 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ANDd %s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[4][mrm.reg()]);
        break;
    case 0x22: /* 22h ANDb b(reg),b(r/m)      spec: 0x22 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ANDb %s,%s",CPUregsN[1][mrm.reg()],IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
        break;
    case 0x23: /* 23h ANDd w(reg),w(r/m)      spec: 0x23 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ANDd %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
        break;
    case 0x24: /* 24h ANDb b(a),i      spec: 0x24 ib */
        imm=IPFB();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ANDb %s,0x%02lX",CPUregsN[1][0],(unsigned long)((uint32_t)imm));
        break;
    case 0x25: /* 25h ANDd w(a),i      spec: 0x25 iw */
        imm=IPFcodeW();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ANDd %s,0x%08lX",CPUregsN[4][0],(unsigned long)((uint32_t)imm));
        break;
    case 0x26: /* 26h ES:       spec: prefix 0x26 segoverride(es) */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ES: ");
        goto _x86decode_after_prefix_code32_addr32;
    case 0x27: /* 27h DAAb       spec: 0x27 */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"DAAb");
        break;
    case 0x28: /* 28h SUBb b(r/m),b(reg)      spec: 0x28 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SUBb %s,%s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),CPUregsN[1][mrm.reg()]);
        break;
    case 0x29: /* 29h SUBd w(r/m),w(reg)      spec: 0x29 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SUBd %s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[4][mrm.reg()]);
        break;
    case 0x2A: /* 2Ah SUBb b(reg),b(r/m)      spec: 0x2A mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SUBb %s,%s",CPUregsN[1][mrm.reg()],IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
        break;
    case 0x2B: /* 2Bh SUBd w(reg),w(r/m)      spec: 0x2B mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SUBd %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
        break;
    case 0x2C: /* 2Ch SUBb b(a),i      spec: 0x2C ib */
        imm=IPFB();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SUBb %s,0x%02lX",CPUregsN[1][0],(unsigned long)((uint32_t)imm));
        break;
    case 0x2D: /* 2Dh SUBd w(a),i      spec: 0x2D iw */
        imm=IPFcodeW();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SUBd %s,0x%08lX",CPUregsN[4][0],(unsigned long)((uint32_t)imm));
        break;
    case 0x2E: /* 2Eh CS:       spec: prefix 0x2E segoverride(cs) */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CS: ");
        goto _x86decode_after_prefix_code32_addr32;
    case 0x2F: /* 2Fh DASb       spec: 0x2F */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"DASb");
        break;
    case 0x30: /* 30h XORb b(r/m),b(reg)      spec: 0x30 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"XORb %s,%s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),CPUregsN[1][mrm.reg()]);
        break;
    case 0x31: /* 31h XORd w(r/m),w(reg)      spec: 0x31 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"XORd %s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[4][mrm.reg()]);
        break;
    case 0x32: /* 32h XORb b(reg),b(r/m)      spec: 0x32 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"XORb %s,%s",CPUregsN[1][mrm.reg()],IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
        break;
    case 0x33: /* 33h XORd w(reg),w(r/m)      spec: 0x33 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"XORd %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
        break;
    case 0x34: /* 34h XORb b(a),i      spec: 0x34 ib */
        imm=IPFB();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"XORb %s,0x%02lX",CPUregsN[1][0],(unsigned long)((uint32_t)imm));
        break;
    case 0x35: /* 35h XORd w(a),i      spec: 0x35 iw */
        imm=IPFcodeW();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"XORd %s,0x%08lX",CPUregsN[4][0],(unsigned long)((uint32_t)imm));
        break;
    case 0x36: /* 36h SS:       spec: prefix 0x36 segoverride(ss) */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SS: ");
        goto _x86decode_after_prefix_code32_addr32;
    case 0x37: /* 37h AAAb       spec: 0x37 */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"AAAb");
        break;
    case 0x38: /* 38h CMPb b(r/m),b(reg)      spec: 0x38 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CMPb %s,%s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),CPUregsN[1][mrm.reg()]);
        break;
    case 0x39: /* 39h CMPd w(r/m),w(reg)      spec: 0x39 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CMPd %s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[4][mrm.reg()]);
        break;
    case 0x3A: /* 3Ah CMPb b(reg),b(r/m)      spec: 0x3A mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CMPb %s,%s",CPUregsN[1][mrm.reg()],IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
        break;
    case 0x3B: /* 3Bh CMPd w(reg),w(r/m)      spec: 0x3B mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CMPd %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
        break;
    case 0x3C: /* 3Ch CMPb b(a),i      spec: 0x3C ib */
        imm=IPFB();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CMPb %s,0x%02lX",CPUregsN[1][0],(unsigned long)((uint32_t)imm));
        break;
    case 0x3D: /* 3Dh CMPd w(a),i      spec: 0x3D iw */
        imm=IPFcodeW();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CMPd %s,0x%08lX",CPUregsN[4][0],(unsigned long)((uint32_t)imm));
        break;
    case 0x3E: /* 3Eh DS:       spec: prefix 0x3E segoverride(ds) */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"DS: ");
        goto _x86decode_after_prefix_code32_addr32;
    case 0x3F: /* 3Fh AASb       spec: 0x3F */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"AASb");
        break;
    case 0x40: /* 40h INCd w(reg) reg=0      spec: range(0x40,0x47) reg=op02 */
    case 0x41: /* 41h INCd w(reg) reg=1      spec: range(0x40,0x47) reg=op02 */
    case 0x42: /* 42h INCd w(reg) reg=2      spec: range(0x40,0x47) reg=op02 */
    case 0x43: /* 43h INCd w(reg) reg=3      spec: range(0x40,0x47) reg=op02 */
    case 0x44: /* 44h INCd w(reg) reg=4      spec: range(0x40,0x47) reg=op02 */
    case 0x45: /* 45h INCd w(reg) reg=5      spec: range(0x40,0x47) reg=op02 */
    case 0x46: /* 46h INCd w(reg) reg=6      spec: range(0x40,0x47) reg=op02 */
    case 0x47: /* 47h INCd w(reg) reg=7      spec: range(0x40,0x47) reg=op02 */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"INCd %s",CPUregsN[4][op&7]);
        break;
    case 0x48: /* 48h DECd w(reg) reg=0      spec: range(0x48,0x4F) reg=op02 */
    case 0x49: /* 49h DECd w(reg) reg=1      spec: range(0x48,0x4F) reg=op02 */
    case 0x4A: /* 4Ah DECd w(reg) reg=2      spec: range(0x48,0x4F) reg=op02 */
    case 0x4B: /* 4Bh DECd w(reg) reg=3      spec: range(0x48,0x4F) reg=op02 */
    case 0x4C: /* 4Ch DECd w(reg) reg=4      spec: range(0x48,0x4F) reg=op02 */
    case 0x4D: /* 4Dh DECd w(reg) reg=5      spec: range(0x48,0x4F) reg=op02 */
    case 0x4E: /* 4Eh DECd w(reg) reg=6      spec: range(0x48,0x4F) reg=op02 */
    case 0x4F: /* 4Fh DECd w(reg) reg=7      spec: range(0x48,0x4F) reg=op02 */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"DECd %s",CPUregsN[4][op&7]);
        break;
    case 0x50: /* 50h PUSHd w(reg) reg=0      spec: range(0x50,0x57) reg=op02 */
    case 0x51: /* 51h PUSHd w(reg) reg=1      spec: range(0x50,0x57) reg=op02 */
    case 0x52: /* 52h PUSHd w(reg) reg=2      spec: range(0x50,0x57) reg=op02 */
    case 0x53: /* 53h PUSHd w(reg) reg=3      spec: range(0x50,0x57) reg=op02 */
    case 0x54: /* 54h PUSHd w(reg) reg=4      spec: range(0x50,0x57) reg=op02 */
    case 0x55: /* 55h PUSHd w(reg) reg=5      spec: range(0x50,0x57) reg=op02 */
    case 0x56: /* 56h PUSHd w(reg) reg=6      spec: range(0x50,0x57) reg=op02 */
    case 0x57: /* 57h PUSHd w(reg) reg=7      spec: range(0x50,0x57) reg=op02 */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PUSHd %s",CPUregsN[4][op&7]);
        break;
    case 0x58: /* 58h POPd w(reg) reg=0      spec: range(0x58,0x5F) reg=op02 */
    case 0x59: /* 59h POPd w(reg) reg=1      spec: range(0x58,0x5F) reg=op02 */
    case 0x5A: /* 5Ah POPd w(reg) reg=2      spec: range(0x58,0x5F) reg=op02 */
    case 0x5B: /* 5Bh POPd w(reg) reg=3      spec: range(0x58,0x5F) reg=op02 */
    case 0x5C: /* 5Ch POPd w(reg) reg=4      spec: range(0x58,0x5F) reg=op02 */
    case 0x5D: /* 5Dh POPd w(reg) reg=5      spec: range(0x58,0x5F) reg=op02 */
    case 0x5E: /* 5Eh POPd w(reg) reg=6      spec: range(0x58,0x5F) reg=op02 */
    case 0x5F: /* 5Fh POPd w(reg) reg=7      spec: range(0x58,0x5F) reg=op02 */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"POPd %s",CPUregsN[4][op&7]);
        break;
    case 0x60: /* 60h PUSHAd       spec: 0x60 */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PUSHAd");
        break;
    case 0x61: /* 61h POPAd       spec: 0x61 */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"POPAd");
        break;
    case 0x62: /* 62h        spec:  */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
/* Opcodes starting with 62h */
        switch (mrm.byte) {
            case 0x00: /* 62h 00h BOUNDd w(reg),w(r/m) mod=0 reg=0 rm=0      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x01: /* 62h 01h BOUNDd w(reg),w(r/m) mod=0 reg=0 rm=1      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x02: /* 62h 02h BOUNDd w(reg),w(r/m) mod=0 reg=0 rm=2      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x03: /* 62h 03h BOUNDd w(reg),w(r/m) mod=0 reg=0 rm=3      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x04: /* 62h 04h BOUNDd w(reg),w(r/m) mod=0 reg=0 rm=4      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x05: /* 62h 05h BOUNDd w(reg),w(r/m) mod=0 reg=0 rm=5      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x06: /* 62h 06h BOUNDd w(reg),w(r/m) mod=0 reg=0 rm=6      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x07: /* 62h 07h BOUNDd w(reg),w(r/m) mod=0 reg=0 rm=7      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x08: /* 62h 08h BOUNDd w(reg),w(r/m) mod=0 reg=1 rm=0      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x09: /* 62h 09h BOUNDd w(reg),w(r/m) mod=0 reg=1 rm=1      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x0A: /* 62h 0Ah BOUNDd w(reg),w(r/m) mod=0 reg=1 rm=2      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x0B: /* 62h 0Bh BOUNDd w(reg),w(r/m) mod=0 reg=1 rm=3      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x0C: /* 62h 0Ch BOUNDd w(reg),w(r/m) mod=0 reg=1 rm=4      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x0D: /* 62h 0Dh BOUNDd w(reg),w(r/m) mod=0 reg=1 rm=5      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x0E: /* 62h 0Eh BOUNDd w(reg),w(r/m) mod=0 reg=1 rm=6      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x0F: /* 62h 0Fh BOUNDd w(reg),w(r/m) mod=0 reg=1 rm=7      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x10: /* 62h 10h BOUNDd w(reg),w(r/m) mod=0 reg=2 rm=0      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x11: /* 62h 11h BOUNDd w(reg),w(r/m) mod=0 reg=2 rm=1      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x12: /* 62h 12h BOUNDd w(reg),w(r/m) mod=0 reg=2 rm=2      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x13: /* 62h 13h BOUNDd w(reg),w(r/m) mod=0 reg=2 rm=3      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x14: /* 62h 14h BOUNDd w(reg),w(r/m) mod=0 reg=2 rm=4      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x15: /* 62h 15h BOUNDd w(reg),w(r/m) mod=0 reg=2 rm=5      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x16: /* 62h 16h BOUNDd w(reg),w(r/m) mod=0 reg=2 rm=6      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x17: /* 62h 17h BOUNDd w(reg),w(r/m) mod=0 reg=2 rm=7      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x18: /* 62h 18h BOUNDd w(reg),w(r/m) mod=0 reg=3 rm=0      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x19: /* 62h 19h BOUNDd w(reg),w(r/m) mod=0 reg=3 rm=1      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x1A: /* 62h 1Ah BOUNDd w(reg),w(r/m) mod=0 reg=3 rm=2      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x1B: /* 62h 1Bh BOUNDd w(reg),w(r/m) mod=0 reg=3 rm=3      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x1C: /* 62h 1Ch BOUNDd w(reg),w(r/m) mod=0 reg=3 rm=4      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x1D: /* 62h 1Dh BOUNDd w(reg),w(r/m) mod=0 reg=3 rm=5      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x1E: /* 62h 1Eh BOUNDd w(reg),w(r/m) mod=0 reg=3 rm=6      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x1F: /* 62h 1Fh BOUNDd w(reg),w(r/m) mod=0 reg=3 rm=7      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x20: /* 62h 20h BOUNDd w(reg),w(r/m) mod=0 reg=4 rm=0      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x21: /* 62h 21h BOUNDd w(reg),w(r/m) mod=0 reg=4 rm=1      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x22: /* 62h 22h BOUNDd w(reg),w(r/m) mod=0 reg=4 rm=2      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x23: /* 62h 23h BOUNDd w(reg),w(r/m) mod=0 reg=4 rm=3      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x24: /* 62h 24h BOUNDd w(reg),w(r/m) mod=0 reg=4 rm=4      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x25: /* 62h 25h BOUNDd w(reg),w(r/m) mod=0 reg=4 rm=5      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x26: /* 62h 26h BOUNDd w(reg),w(r/m) mod=0 reg=4 rm=6      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x27: /* 62h 27h BOUNDd w(reg),w(r/m) mod=0 reg=4 rm=7      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x28: /* 62h 28h BOUNDd w(reg),w(r/m) mod=0 reg=5 rm=0      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x29: /* 62h 29h BOUNDd w(reg),w(r/m) mod=0 reg=5 rm=1      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x2A: /* 62h 2Ah BOUNDd w(reg),w(r/m) mod=0 reg=5 rm=2      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x2B: /* 62h 2Bh BOUNDd w(reg),w(r/m) mod=0 reg=5 rm=3      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x2C: /* 62h 2Ch BOUNDd w(reg),w(r/m) mod=0 reg=5 rm=4      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x2D: /* 62h 2Dh BOUNDd w(reg),w(r/m) mod=0 reg=5 rm=5      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x2E: /* 62h 2Eh BOUNDd w(reg),w(r/m) mod=0 reg=5 rm=6      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x2F: /* 62h 2Fh BOUNDd w(reg),w(r/m) mod=0 reg=5 rm=7      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x30: /* 62h 30h BOUNDd w(reg),w(r/m) mod=0 reg=6 rm=0      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x31: /* 62h 31h BOUNDd w(reg),w(r/m) mod=0 reg=6 rm=1      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x32: /* 62h 32h BOUNDd w(reg),w(r/m) mod=0 reg=6 rm=2      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x33: /* 62h 33h BOUNDd w(reg),w(r/m) mod=0 reg=6 rm=3      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x34: /* 62h 34h BOUNDd w(reg),w(r/m) mod=0 reg=6 rm=4      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x35: /* 62h 35h BOUNDd w(reg),w(r/m) mod=0 reg=6 rm=5      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x36: /* 62h 36h BOUNDd w(reg),w(r/m) mod=0 reg=6 rm=6      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x37: /* 62h 37h BOUNDd w(reg),w(r/m) mod=0 reg=6 rm=7      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x38: /* 62h 38h BOUNDd w(reg),w(r/m) mod=0 reg=7 rm=0      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x39: /* 62h 39h BOUNDd w(reg),w(r/m) mod=0 reg=7 rm=1      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x3A: /* 62h 3Ah BOUNDd w(reg),w(r/m) mod=0 reg=7 rm=2      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x3B: /* 62h 3Bh BOUNDd w(reg),w(r/m) mod=0 reg=7 rm=3      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x3C: /* 62h 3Ch BOUNDd w(reg),w(r/m) mod=0 reg=7 rm=4      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x3D: /* 62h 3Dh BOUNDd w(reg),w(r/m) mod=0 reg=7 rm=5      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x3E: /* 62h 3Eh BOUNDd w(reg),w(r/m) mod=0 reg=7 rm=6      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x3F: /* 62h 3Fh BOUNDd w(reg),w(r/m) mod=0 reg=7 rm=7      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x40: /* 62h 40h BOUNDd w(reg),w(r/m) mod=1 reg=0 rm=0      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x41: /* 62h 41h BOUNDd w(reg),w(r/m) mod=1 reg=0 rm=1      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x42: /* 62h 42h BOUNDd w(reg),w(r/m) mod=1 reg=0 rm=2      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x43: /* 62h 43h BOUNDd w(reg),w(r/m) mod=1 reg=0 rm=3      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x44: /* 62h 44h BOUNDd w(reg),w(r/m) mod=1 reg=0 rm=4      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x45: /* 62h 45h BOUNDd w(reg),w(r/m) mod=1 reg=0 rm=5      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x46: /* 62h 46h BOUNDd w(reg),w(r/m) mod=1 reg=0 rm=6      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x47: /* 62h 47h BOUNDd w(reg),w(r/m) mod=1 reg=0 rm=7      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x48: /* 62h 48h BOUNDd w(reg),w(r/m) mod=1 reg=1 rm=0      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x49: /* 62h 49h BOUNDd w(reg),w(r/m) mod=1 reg=1 rm=1      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x4A: /* 62h 4Ah BOUNDd w(reg),w(r/m) mod=1 reg=1 rm=2      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x4B: /* 62h 4Bh BOUNDd w(reg),w(r/m) mod=1 reg=1 rm=3      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x4C: /* 62h 4Ch BOUNDd w(reg),w(r/m) mod=1 reg=1 rm=4      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x4D: /* 62h 4Dh BOUNDd w(reg),w(r/m) mod=1 reg=1 rm=5      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x4E: /* 62h 4Eh BOUNDd w(reg),w(r/m) mod=1 reg=1 rm=6      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x4F: /* 62h 4Fh BOUNDd w(reg),w(r/m) mod=1 reg=1 rm=7      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x50: /* 62h 50h BOUNDd w(reg),w(r/m) mod=1 reg=2 rm=0      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x51: /* 62h 51h BOUNDd w(reg),w(r/m) mod=1 reg=2 rm=1      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x52: /* 62h 52h BOUNDd w(reg),w(r/m) mod=1 reg=2 rm=2      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x53: /* 62h 53h BOUNDd w(reg),w(r/m) mod=1 reg=2 rm=3      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x54: /* 62h 54h BOUNDd w(reg),w(r/m) mod=1 reg=2 rm=4      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x55: /* 62h 55h BOUNDd w(reg),w(r/m) mod=1 reg=2 rm=5      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x56: /* 62h 56h BOUNDd w(reg),w(r/m) mod=1 reg=2 rm=6      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x57: /* 62h 57h BOUNDd w(reg),w(r/m) mod=1 reg=2 rm=7      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x58: /* 62h 58h BOUNDd w(reg),w(r/m) mod=1 reg=3 rm=0      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x59: /* 62h 59h BOUNDd w(reg),w(r/m) mod=1 reg=3 rm=1      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x5A: /* 62h 5Ah BOUNDd w(reg),w(r/m) mod=1 reg=3 rm=2      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x5B: /* 62h 5Bh BOUNDd w(reg),w(r/m) mod=1 reg=3 rm=3      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x5C: /* 62h 5Ch BOUNDd w(reg),w(r/m) mod=1 reg=3 rm=4      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x5D: /* 62h 5Dh BOUNDd w(reg),w(r/m) mod=1 reg=3 rm=5      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x5E: /* 62h 5Eh BOUNDd w(reg),w(r/m) mod=1 reg=3 rm=6      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x5F: /* 62h 5Fh BOUNDd w(reg),w(r/m) mod=1 reg=3 rm=7      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x60: /* 62h 60h BOUNDd w(reg),w(r/m) mod=1 reg=4 rm=0      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x61: /* 62h 61h BOUNDd w(reg),w(r/m) mod=1 reg=4 rm=1      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x62: /* 62h 62h BOUNDd w(reg),w(r/m) mod=1 reg=4 rm=2      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x63: /* 62h 63h BOUNDd w(reg),w(r/m) mod=1 reg=4 rm=3      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x64: /* 62h 64h BOUNDd w(reg),w(r/m) mod=1 reg=4 rm=4      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x65: /* 62h 65h BOUNDd w(reg),w(r/m) mod=1 reg=4 rm=5      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x66: /* 62h 66h BOUNDd w(reg),w(r/m) mod=1 reg=4 rm=6      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x67: /* 62h 67h BOUNDd w(reg),w(r/m) mod=1 reg=4 rm=7      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x68: /* 62h 68h BOUNDd w(reg),w(r/m) mod=1 reg=5 rm=0      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x69: /* 62h 69h BOUNDd w(reg),w(r/m) mod=1 reg=5 rm=1      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x6A: /* 62h 6Ah BOUNDd w(reg),w(r/m) mod=1 reg=5 rm=2      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x6B: /* 62h 6Bh BOUNDd w(reg),w(r/m) mod=1 reg=5 rm=3      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x6C: /* 62h 6Ch BOUNDd w(reg),w(r/m) mod=1 reg=5 rm=4      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x6D: /* 62h 6Dh BOUNDd w(reg),w(r/m) mod=1 reg=5 rm=5      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x6E: /* 62h 6Eh BOUNDd w(reg),w(r/m) mod=1 reg=5 rm=6      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x6F: /* 62h 6Fh BOUNDd w(reg),w(r/m) mod=1 reg=5 rm=7      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x70: /* 62h 70h BOUNDd w(reg),w(r/m) mod=1 reg=6 rm=0      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x71: /* 62h 71h BOUNDd w(reg),w(r/m) mod=1 reg=6 rm=1      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x72: /* 62h 72h BOUNDd w(reg),w(r/m) mod=1 reg=6 rm=2      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x73: /* 62h 73h BOUNDd w(reg),w(r/m) mod=1 reg=6 rm=3      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x74: /* 62h 74h BOUNDd w(reg),w(r/m) mod=1 reg=6 rm=4      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x75: /* 62h 75h BOUNDd w(reg),w(r/m) mod=1 reg=6 rm=5      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x76: /* 62h 76h BOUNDd w(reg),w(r/m) mod=1 reg=6 rm=6      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x77: /* 62h 77h BOUNDd w(reg),w(r/m) mod=1 reg=6 rm=7      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x78: /* 62h 78h BOUNDd w(reg),w(r/m) mod=1 reg=7 rm=0      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x79: /* 62h 79h BOUNDd w(reg),w(r/m) mod=1 reg=7 rm=1      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x7A: /* 62h 7Ah BOUNDd w(reg),w(r/m) mod=1 reg=7 rm=2      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x7B: /* 62h 7Bh BOUNDd w(reg),w(r/m) mod=1 reg=7 rm=3      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x7C: /* 62h 7Ch BOUNDd w(reg),w(r/m) mod=1 reg=7 rm=4      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x7D: /* 62h 7Dh BOUNDd w(reg),w(r/m) mod=1 reg=7 rm=5      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x7E: /* 62h 7Eh BOUNDd w(reg),w(r/m) mod=1 reg=7 rm=6      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x7F: /* 62h 7Fh BOUNDd w(reg),w(r/m) mod=1 reg=7 rm=7      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x80: /* 62h 80h BOUNDd w(reg),w(r/m) mod=2 reg=0 rm=0      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x81: /* 62h 81h BOUNDd w(reg),w(r/m) mod=2 reg=0 rm=1      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x82: /* 62h 82h BOUNDd w(reg),w(r/m) mod=2 reg=0 rm=2      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x83: /* 62h 83h BOUNDd w(reg),w(r/m) mod=2 reg=0 rm=3      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x84: /* 62h 84h BOUNDd w(reg),w(r/m) mod=2 reg=0 rm=4      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x85: /* 62h 85h BOUNDd w(reg),w(r/m) mod=2 reg=0 rm=5      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x86: /* 62h 86h BOUNDd w(reg),w(r/m) mod=2 reg=0 rm=6      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x87: /* 62h 87h BOUNDd w(reg),w(r/m) mod=2 reg=0 rm=7      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x88: /* 62h 88h BOUNDd w(reg),w(r/m) mod=2 reg=1 rm=0      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x89: /* 62h 89h BOUNDd w(reg),w(r/m) mod=2 reg=1 rm=1      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x8A: /* 62h 8Ah BOUNDd w(reg),w(r/m) mod=2 reg=1 rm=2      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x8B: /* 62h 8Bh BOUNDd w(reg),w(r/m) mod=2 reg=1 rm=3      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x8C: /* 62h 8Ch BOUNDd w(reg),w(r/m) mod=2 reg=1 rm=4      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x8D: /* 62h 8Dh BOUNDd w(reg),w(r/m) mod=2 reg=1 rm=5      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x8E: /* 62h 8Eh BOUNDd w(reg),w(r/m) mod=2 reg=1 rm=6      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x8F: /* 62h 8Fh BOUNDd w(reg),w(r/m) mod=2 reg=1 rm=7      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x90: /* 62h 90h BOUNDd w(reg),w(r/m) mod=2 reg=2 rm=0      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x91: /* 62h 91h BOUNDd w(reg),w(r/m) mod=2 reg=2 rm=1      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x92: /* 62h 92h BOUNDd w(reg),w(r/m) mod=2 reg=2 rm=2      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x93: /* 62h 93h BOUNDd w(reg),w(r/m) mod=2 reg=2 rm=3      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x94: /* 62h 94h BOUNDd w(reg),w(r/m) mod=2 reg=2 rm=4      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x95: /* 62h 95h BOUNDd w(reg),w(r/m) mod=2 reg=2 rm=5      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x96: /* 62h 96h BOUNDd w(reg),w(r/m) mod=2 reg=2 rm=6      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x97: /* 62h 97h BOUNDd w(reg),w(r/m) mod=2 reg=2 rm=7      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x98: /* 62h 98h BOUNDd w(reg),w(r/m) mod=2 reg=3 rm=0      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x99: /* 62h 99h BOUNDd w(reg),w(r/m) mod=2 reg=3 rm=1      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x9A: /* 62h 9Ah BOUNDd w(reg),w(r/m) mod=2 reg=3 rm=2      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x9B: /* 62h 9Bh BOUNDd w(reg),w(r/m) mod=2 reg=3 rm=3      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x9C: /* 62h 9Ch BOUNDd w(reg),w(r/m) mod=2 reg=3 rm=4      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x9D: /* 62h 9Dh BOUNDd w(reg),w(r/m) mod=2 reg=3 rm=5      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x9E: /* 62h 9Eh BOUNDd w(reg),w(r/m) mod=2 reg=3 rm=6      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x9F: /* 62h 9Fh BOUNDd w(reg),w(r/m) mod=2 reg=3 rm=7      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xA0: /* 62h A0h BOUNDd w(reg),w(r/m) mod=2 reg=4 rm=0      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xA1: /* 62h A1h BOUNDd w(reg),w(r/m) mod=2 reg=4 rm=1      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xA2: /* 62h A2h BOUNDd w(reg),w(r/m) mod=2 reg=4 rm=2      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xA3: /* 62h A3h BOUNDd w(reg),w(r/m) mod=2 reg=4 rm=3      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xA4: /* 62h A4h BOUNDd w(reg),w(r/m) mod=2 reg=4 rm=4      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xA5: /* 62h A5h BOUNDd w(reg),w(r/m) mod=2 reg=4 rm=5      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xA6: /* 62h A6h BOUNDd w(reg),w(r/m) mod=2 reg=4 rm=6      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xA7: /* 62h A7h BOUNDd w(reg),w(r/m) mod=2 reg=4 rm=7      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xA8: /* 62h A8h BOUNDd w(reg),w(r/m) mod=2 reg=5 rm=0      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xA9: /* 62h A9h BOUNDd w(reg),w(r/m) mod=2 reg=5 rm=1      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xAA: /* 62h AAh BOUNDd w(reg),w(r/m) mod=2 reg=5 rm=2      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xAB: /* 62h ABh BOUNDd w(reg),w(r/m) mod=2 reg=5 rm=3      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xAC: /* 62h ACh BOUNDd w(reg),w(r/m) mod=2 reg=5 rm=4      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xAD: /* 62h ADh BOUNDd w(reg),w(r/m) mod=2 reg=5 rm=5      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xAE: /* 62h AEh BOUNDd w(reg),w(r/m) mod=2 reg=5 rm=6      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xAF: /* 62h AFh BOUNDd w(reg),w(r/m) mod=2 reg=5 rm=7      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xB0: /* 62h B0h BOUNDd w(reg),w(r/m) mod=2 reg=6 rm=0      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xB1: /* 62h B1h BOUNDd w(reg),w(r/m) mod=2 reg=6 rm=1      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xB2: /* 62h B2h BOUNDd w(reg),w(r/m) mod=2 reg=6 rm=2      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xB3: /* 62h B3h BOUNDd w(reg),w(r/m) mod=2 reg=6 rm=3      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xB4: /* 62h B4h BOUNDd w(reg),w(r/m) mod=2 reg=6 rm=4      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xB5: /* 62h B5h BOUNDd w(reg),w(r/m) mod=2 reg=6 rm=5      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xB6: /* 62h B6h BOUNDd w(reg),w(r/m) mod=2 reg=6 rm=6      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xB7: /* 62h B7h BOUNDd w(reg),w(r/m) mod=2 reg=6 rm=7      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xB8: /* 62h B8h BOUNDd w(reg),w(r/m) mod=2 reg=7 rm=0      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xB9: /* 62h B9h BOUNDd w(reg),w(r/m) mod=2 reg=7 rm=1      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xBA: /* 62h BAh BOUNDd w(reg),w(r/m) mod=2 reg=7 rm=2      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xBB: /* 62h BBh BOUNDd w(reg),w(r/m) mod=2 reg=7 rm=3      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xBC: /* 62h BCh BOUNDd w(reg),w(r/m) mod=2 reg=7 rm=4      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xBD: /* 62h BDh BOUNDd w(reg),w(r/m) mod=2 reg=7 rm=5      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xBE: /* 62h BEh BOUNDd w(reg),w(r/m) mod=2 reg=7 rm=6      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xBF: /* 62h BFh BOUNDd w(reg),w(r/m) mod=2 reg=7 rm=7      spec: 0x62 mod/reg/rm mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"BOUNDd %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            /* opcode 62h C0h  not defined */
            /* opcode 62h C1h  not defined */
            /* opcode 62h C2h  not defined */
            /* opcode 62h C3h  not defined */
            /* opcode 62h C4h  not defined */
            /* opcode 62h C5h  not defined */
            /* opcode 62h C6h  not defined */
            /* opcode 62h C7h  not defined */
            /* opcode 62h C8h  not defined */
            /* opcode 62h C9h  not defined */
            /* opcode 62h CAh  not defined */
            /* opcode 62h CBh  not defined */
            /* opcode 62h CCh  not defined */
            /* opcode 62h CDh  not defined */
            /* opcode 62h CEh  not defined */
            /* opcode 62h CFh  not defined */
            /* opcode 62h D0h  not defined */
            /* opcode 62h D1h  not defined */
            /* opcode 62h D2h  not defined */
            /* opcode 62h D3h  not defined */
            /* opcode 62h D4h  not defined */
            /* opcode 62h D5h  not defined */
            /* opcode 62h D6h  not defined */
            /* opcode 62h D7h  not defined */
            /* opcode 62h D8h  not defined */
            /* opcode 62h D9h  not defined */
            /* opcode 62h DAh  not defined */
            /* opcode 62h DBh  not defined */
            /* opcode 62h DCh  not defined */
            /* opcode 62h DDh  not defined */
            /* opcode 62h DEh  not defined */
            /* opcode 62h DFh  not defined */
            /* opcode 62h E0h  not defined */
            /* opcode 62h E1h  not defined */
            /* opcode 62h E2h  not defined */
            /* opcode 62h E3h  not defined */
            /* opcode 62h E4h  not defined */
            /* opcode 62h E5h  not defined */
            /* opcode 62h E6h  not defined */
            /* opcode 62h E7h  not defined */
            /* opcode 62h E8h  not defined */
            /* opcode 62h E9h  not defined */
            /* opcode 62h EAh  not defined */
            /* opcode 62h EBh  not defined */
            /* opcode 62h ECh  not defined */
            /* opcode 62h EDh  not defined */
            /* opcode 62h EEh  not defined */
            /* opcode 62h EFh  not defined */
            /* opcode 62h F0h  not defined */
            /* opcode 62h F1h  not defined */
            /* opcode 62h F2h  not defined */
            /* opcode 62h F3h  not defined */
            /* opcode 62h F4h  not defined */
            /* opcode 62h F5h  not defined */
            /* opcode 62h F6h  not defined */
            /* opcode 62h F7h  not defined */
            /* opcode 62h F8h  not defined */
            /* opcode 62h F9h  not defined */
            /* opcode 62h FAh  not defined */
            /* opcode 62h FBh  not defined */
            /* opcode 62h FCh  not defined */
            /* opcode 62h FDh  not defined */
            /* opcode 62h FEh  not defined */
            /* opcode 62h FFh  not defined */
            default:
                goto _x86decode_illegal_opcode;
        };
/* End of opcodes starting with 62h */
        break;
    case 0x63: /* 63h ARPLd w(r/m),w(reg)      spec: 0x63 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ARPLd %s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[4][mrm.reg()]);
        break;
    /* opcode 64h  not defined */
    /* opcode 65h  not defined */
    case 0x66: /* 66h        spec: 0x66 prefix opsz32 */
        prefix66 ^= 1;
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"");
        code32=0; addr32=1;
        goto _x86decode_after_prefix_386override_code16_addr32;
    case 0x67: /* 67h        spec: 0x67 prefix addrsz32 */
        prefix67 ^= 1;
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"");
        code32=1; addr32=0;
        goto _x86decode_after_prefix_386override_code32_addr16;
    case 0x68: /* 68h PUSHd w(i)      spec: 0x68 iw */
        imm=IPFcodeW();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PUSHd 0x%08lX",(unsigned long)((uint32_t)imm));
        break;
    case 0x69: /* 69h IMULd w(reg),w(r/m),w(i)      spec: 0x69 mod/reg/rm iw */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        imm=IPFcodeW();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"IMULd %s,%s,0x%08lX",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
        break;
    case 0x6A: /* 6Ah PUSHd w(i)      spec: 0x6A ibs */
        imm=IPFBsigned();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PUSHd 0x%02lX",(unsigned long)((uint32_t)imm));
        break;
    case 0x6B: /* 6Bh IMULb w(reg),w(r/m),b(i)      spec: 0x6B mod/reg/rm ib */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        imm=IPFB();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"IMULb %s,%s,0x%02lX",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
        break;
    case 0x6C: /* 6Ch INSb       spec: 0x6C */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"INSb");
        break;
    case 0x6D: /* 6Dh INSd       spec: 0x6D */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"INSd");
        break;
    case 0x6E: /* 6Eh OUTSb       spec: 0x6E */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"OUTSb");
        break;
    case 0x6F: /* 6Fh OUTSd       spec: 0x6F */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"OUTSd");
        break;
    case 0x70: /* 70h JO w(i+ip)      spec: 0x70 ibs */
        imm=IPFBsigned();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JO 0x%02lX",(unsigned long)((uint32_t)(imm+IPval())));
        break;
    case 0x71: /* 71h JNO w(i+ip)      spec: 0x71 ibs */
        imm=IPFBsigned();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JNO 0x%02lX",(unsigned long)((uint32_t)(imm+IPval())));
        break;
    case 0x72: /* 72h JB w(i+ip)      spec: 0x72 ibs */
        imm=IPFBsigned();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JB 0x%02lX",(unsigned long)((uint32_t)(imm+IPval())));
        break;
    case 0x73: /* 73h JNB w(i+ip)      spec: 0x73 ibs */
        imm=IPFBsigned();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JNB 0x%02lX",(unsigned long)((uint32_t)(imm+IPval())));
        break;
    case 0x74: /* 74h JZ w(i+ip)      spec: 0x74 ibs */
        imm=IPFBsigned();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JZ 0x%02lX",(unsigned long)((uint32_t)(imm+IPval())));
        break;
    case 0x75: /* 75h JNZ w(i+ip)      spec: 0x75 ibs */
        imm=IPFBsigned();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JNZ 0x%02lX",(unsigned long)((uint32_t)(imm+IPval())));
        break;
    case 0x76: /* 76h JBE w(i+ip)      spec: 0x76 ibs */
        imm=IPFBsigned();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JBE 0x%02lX",(unsigned long)((uint32_t)(imm+IPval())));
        break;
    case 0x77: /* 77h JA w(i+ip)      spec: 0x77 ibs */
        imm=IPFBsigned();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JA 0x%02lX",(unsigned long)((uint32_t)(imm+IPval())));
        break;
    case 0x78: /* 78h JS w(i+ip)      spec: 0x78 ibs */
        imm=IPFBsigned();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JS 0x%02lX",(unsigned long)((uint32_t)(imm+IPval())));
        break;
    case 0x79: /* 79h JNS w(i+ip)      spec: 0x79 ibs */
        imm=IPFBsigned();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JNS 0x%02lX",(unsigned long)((uint32_t)(imm+IPval())));
        break;
    case 0x7A: /* 7Ah JPE w(i+ip)      spec: 0x7A ibs */
        imm=IPFBsigned();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JPE 0x%02lX",(unsigned long)((uint32_t)(imm+IPval())));
        break;
    case 0x7B: /* 7Bh JPO w(i+ip)      spec: 0x7B ibs */
        imm=IPFBsigned();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JPO 0x%02lX",(unsigned long)((uint32_t)(imm+IPval())));
        break;
    case 0x7C: /* 7Ch JL w(i+ip)      spec: 0x7C ibs */
        imm=IPFBsigned();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JL 0x%02lX",(unsigned long)((uint32_t)(imm+IPval())));
        break;
    case 0x7D: /* 7Dh JGE w(i+ip)      spec: 0x7D ibs */
        imm=IPFBsigned();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JGE 0x%02lX",(unsigned long)((uint32_t)(imm+IPval())));
        break;
    case 0x7E: /* 7Eh JLE w(i+ip)      spec: 0x7E ibs */
        imm=IPFBsigned();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JLE 0x%02lX",(unsigned long)((uint32_t)(imm+IPval())));
        break;
    case 0x7F: /* 7Fh JG w(i+ip)      spec: 0x7F ibs */
        imm=IPFBsigned();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JG 0x%02lX",(unsigned long)((uint32_t)(imm+IPval())));
        break;
    case 0x80: /* 80h        spec:  */
    case 0x82: /* 82h        spec:  */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
/* Opcodes starting with 80h */
        switch (mrm.reg()) {
            case 0: /* 80h 00h ADDb b(r/m),i reg=0      spec: 0x80 mod/reg/rm /0 ib */
                imm=IPFB();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ADDb %s,0x%02lX",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),(unsigned long)((uint32_t)imm));
                break;
            case 1: /* 80h 08h ORb b(r/m),i reg=1      spec: 0x80 mod/reg/rm /1 ib */
                imm=IPFB();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ORb %s,0x%02lX",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),(unsigned long)((uint32_t)imm));
                break;
            case 2: /* 80h 10h ADCb b(r/m),i reg=2      spec: 0x80 mod/reg/rm /2 ib */
                imm=IPFB();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ADCb %s,0x%02lX",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),(unsigned long)((uint32_t)imm));
                break;
            case 3: /* 80h 18h SBBb b(r/m),i reg=3      spec: 0x80 mod/reg/rm /3 ib */
                imm=IPFB();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SBBb %s,0x%02lX",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),(unsigned long)((uint32_t)imm));
                break;
            case 4: /* 80h 20h ANDb b(r/m),i reg=4      spec: 0x80 mod/reg/rm /4 ib */
                imm=IPFB();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ANDb %s,0x%02lX",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),(unsigned long)((uint32_t)imm));
                break;
            case 5: /* 80h 28h SUBb b(r/m),i reg=5      spec: 0x80 mod/reg/rm /5 ib */
                imm=IPFB();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SUBb %s,0x%02lX",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),(unsigned long)((uint32_t)imm));
                break;
            case 6: /* 80h 30h XORb b(r/m),i reg=6      spec: 0x80 mod/reg/rm /6 ib */
                imm=IPFB();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"XORb %s,0x%02lX",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),(unsigned long)((uint32_t)imm));
                break;
            case 7: /* 80h 38h CMPb b(r/m),i reg=7      spec: 0x80 mod/reg/rm /7 ib */
                imm=IPFB();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CMPb %s,0x%02lX",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),(unsigned long)((uint32_t)imm));
                break;
            default:
                goto _x86decode_illegal_opcode;
        };
/* End of opcodes starting with 80h */
        break;
    case 0x81: /* 81h        spec:  */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
/* Opcodes starting with 81h */
        switch (mrm.reg()) {
            case 0: /* 81h 00h ADDd w(r/m),i reg=0      spec: 0x81 mod/reg/rm /0 iw */
                imm=IPFcodeW();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ADDd %s,0x%08lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
                break;
            case 1: /* 81h 08h ORd w(r/m),i reg=1      spec: 0x81 mod/reg/rm /1 iw */
                imm=IPFcodeW();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ORd %s,0x%08lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
                break;
            case 2: /* 81h 10h ADCd w(r/m),i reg=2      spec: 0x81 mod/reg/rm /2 iw */
                imm=IPFcodeW();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ADCd %s,0x%08lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
                break;
            case 3: /* 81h 18h SBBd w(r/m),i reg=3      spec: 0x81 mod/reg/rm /3 iw */
                imm=IPFcodeW();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SBBd %s,0x%08lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
                break;
            case 4: /* 81h 20h ANDd w(r/m),i reg=4      spec: 0x81 mod/reg/rm /4 iw */
                imm=IPFcodeW();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ANDd %s,0x%08lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
                break;
            case 5: /* 81h 28h SUBd w(r/m),i reg=5      spec: 0x81 mod/reg/rm /5 iw */
                imm=IPFcodeW();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SUBd %s,0x%08lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
                break;
            case 6: /* 81h 30h XORd w(r/m),i reg=6      spec: 0x81 mod/reg/rm /6 iw */
                imm=IPFcodeW();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"XORd %s,0x%08lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
                break;
            case 7: /* 81h 38h CMPd w(r/m),i reg=7      spec: 0x81 mod/reg/rm /7 iw */
                imm=IPFcodeW();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CMPd %s,0x%08lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
                break;
            default:
                goto _x86decode_illegal_opcode;
        };
/* End of opcodes starting with 81h */
        break;
    case 0x83: /* 83h        spec:  */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
/* Opcodes starting with 83h */
        switch (mrm.reg()) {
            case 0: /* 83h 00h ADDd w(r/m),i reg=0      spec: 0x83 mod/reg/rm /0 ibs */
                imm=IPFBsigned();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ADDd %s,0x%02lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
                break;
            case 1: /* 83h 08h ORd w(r/m),i reg=1      spec: 0x83 mod/reg/rm /1 ibs */
                imm=IPFBsigned();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ORd %s,0x%02lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
                break;
            case 2: /* 83h 10h ADCd w(r/m),i reg=2      spec: 0x83 mod/reg/rm /2 ibs */
                imm=IPFBsigned();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ADCd %s,0x%02lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
                break;
            case 3: /* 83h 18h SBBd w(r/m),i reg=3      spec: 0x83 mod/reg/rm /3 ibs */
                imm=IPFBsigned();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SBBd %s,0x%02lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
                break;
            case 4: /* 83h 20h ANDd w(r/m),i reg=4      spec: 0x83 mod/reg/rm /4 ibs */
                imm=IPFBsigned();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ANDd %s,0x%02lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
                break;
            case 5: /* 83h 28h SUBd w(r/m),i reg=5      spec: 0x83 mod/reg/rm /5 ibs */
                imm=IPFBsigned();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SUBd %s,0x%02lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
                break;
            case 6: /* 83h 30h XORd w(r/m),i reg=6      spec: 0x83 mod/reg/rm /6 ibs */
                imm=IPFBsigned();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"XORd %s,0x%02lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
                break;
            case 7: /* 83h 38h CMPd w(r/m),i reg=7      spec: 0x83 mod/reg/rm /7 ibs */
                imm=IPFBsigned();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CMPd %s,0x%02lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
                break;
            default:
                goto _x86decode_illegal_opcode;
        };
/* End of opcodes starting with 83h */
        break;
    case 0x84: /* 84h TESTb b(r/m),b(reg)      spec: 0x84 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"TESTb %s,%s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),CPUregsN[1][mrm.reg()]);
        break;
    case 0x85: /* 85h TESTd w(r/m),w(reg)      spec: 0x85 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"TESTd %s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[4][mrm.reg()]);
        break;
    case 0x86: /* 86h XCHGb b(r/m),b(reg)      spec: 0x86 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"XCHGb %s,%s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),CPUregsN[1][mrm.reg()]);
        break;
    case 0x87: /* 87h XCHGd w(r/m),w(reg)      spec: 0x87 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"XCHGd %s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[4][mrm.reg()]);
        break;
    case 0x88: /* 88h MOVb b(r/m),b(reg)      spec: 0x88 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVb %s,%s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),CPUregsN[1][mrm.reg()]);
        break;
    case 0x89: /* 89h MOVd w(r/m),w(reg)      spec: 0x89 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVd %s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[4][mrm.reg()]);
        break;
    case 0x8A: /* 8Ah MOVb b(reg),b(r/m)      spec: 0x8A mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVb %s,%s",CPUregsN[1][mrm.reg()],IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
        break;
    case 0x8B: /* 8Bh MOVd w(reg),w(r/m)      spec: 0x8B mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVd %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
        break;
    case 0x8C: /* 8Ch MOVd w(r/m),seg(reg)      spec: 0x8C mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVd %s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUsregs_80386[mrm.reg()]);
        break;
    case 0x8D: /* 8Dh LEAd w(reg),w(r/m)      spec: 0x8D mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"LEAd %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
        break;
    case 0x8E: /* 8Eh MOVd seg(reg),w(r/m)      spec: 0x8E mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVd %s,%s",CPUsregs_80386[mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
        break;
    case 0x8F: /* 8Fh POPd w(r/m)      spec: 0x8F mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"POPd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
        break;
    case 0x90: /* 90h NOP       spec: 0x90 */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"NOP");
        break;
    case 0x91: /* 91h XCHGd w(reg),w(a) reg=1      spec: range(0x91,0x97) reg=op02 */
    case 0x92: /* 92h XCHGd w(reg),w(a) reg=2      spec: range(0x91,0x97) reg=op02 */
    case 0x93: /* 93h XCHGd w(reg),w(a) reg=3      spec: range(0x91,0x97) reg=op02 */
    case 0x94: /* 94h XCHGd w(reg),w(a) reg=4      spec: range(0x91,0x97) reg=op02 */
    case 0x95: /* 95h XCHGd w(reg),w(a) reg=5      spec: range(0x91,0x97) reg=op02 */
    case 0x96: /* 96h XCHGd w(reg),w(a) reg=6      spec: range(0x91,0x97) reg=op02 */
    case 0x97: /* 97h XCHGd w(reg),w(a) reg=7      spec: range(0x91,0x97) reg=op02 */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"XCHGd %s,%s",CPUregsN[4][op&7],CPUregsN[4][0]);
        break;
    case 0x98: /* 98h CBWb       spec: 0x98 */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CBWb");
        break;
    case 0x99: /* 99h CWDd       spec: 0x99 */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CWDd");
        break;
    case 0x9A: /* 9Ah CALLFd w(i2),w(i)      spec: 0x9A iw iw16 */
        imm=IPFcodeW();
        imm2=IPFW();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CALLFd 0x%04lX,0x%08lX",(unsigned long)((uint32_t)imm2),(unsigned long)((uint32_t)imm));
        break;
    case 0x9B: /* 9Bh WAIT       spec: 0x9B prefix */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"WAIT ");
        goto _x86decode_after_prefix_code32_addr32;
    case 0x9C: /* 9Ch PUSHFd       spec: 0x9C */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PUSHFd");
        break;
    case 0x9D: /* 9Dh POPFd       spec: 0x9D */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"POPFd");
        break;
    case 0x9E: /* 9Eh SAHFb       spec: 0x9E */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SAHFb");
        break;
    case 0x9F: /* 9Fh LAHFb       spec: 0x9F */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"LAHFb");
        break;
    case 0xA0: /* A0h MOVb b(a),b(mem[i])      spec: 0xA0 iwa */
        imm=IPFaddrW();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVb %s,[0x%08lX]b",CPUregsN[1][0],(unsigned long)((uint32_t)imm));
        break;
    case 0xA1: /* A1h MOVd w(a),w(mem[i])      spec: 0xA1 iwa */
        imm=IPFaddrW();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVd %s,[0x%08lX]w",CPUregsN[4][0],(unsigned long)((uint32_t)imm));
        break;
    case 0xA2: /* A2h MOVb b(mem[i]),b(a)      spec: 0xA2 iwa */
        imm=IPFaddrW();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVb [0x%08lX]b,%s",(unsigned long)((uint32_t)imm),CPUregsN[1][0]);
        break;
    case 0xA3: /* A3h MOVd b(mem[i]),w(a)      spec: 0xA3 iwa */
        imm=IPFaddrW();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVd [0x%08lX]b,%s",(unsigned long)((uint32_t)imm),CPUregsN[4][0]);
        break;
    case 0xA4: /* A4h MOVSb       spec: 0xA4 */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVSb");
        break;
    case 0xA5: /* A5h MOVSd       spec: 0xA5 */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVSd");
        break;
    case 0xA6: /* A6h CMPSb       spec: 0xA6 */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CMPSb");
        break;
    case 0xA7: /* A7h CMPSd       spec: 0xA7 */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CMPSd");
        break;
    case 0xA8: /* A8h TESTb b(a),i      spec: 0xA8 ib */
        imm=IPFB();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"TESTb %s,0x%02lX",CPUregsN[1][0],(unsigned long)((uint32_t)imm));
        break;
    case 0xA9: /* A9h TESTd w(a),i      spec: 0xA9 iw */
        imm=IPFcodeW();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"TESTd %s,0x%08lX",CPUregsN[4][0],(unsigned long)((uint32_t)imm));
        break;
    case 0xAA: /* AAh STOSb       spec: 0xAA */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"STOSb");
        break;
    case 0xAB: /* ABh STOSd       spec: 0xAB */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"STOSd");
        break;
    case 0xAC: /* ACh LODSb       spec: 0xAC */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"LODSb");
        break;
    case 0xAD: /* ADh LODSd       spec: 0xAD */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"LODSd");
        break;
    case 0xAE: /* AEh SCASb       spec: 0xAE */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SCASb");
        break;
    case 0xAF: /* AFh SCASd       spec: 0xAF */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SCASd");
        break;
    case 0xB0: /* B0h MOVb b(reg),i reg=0      spec: range(0xB0,0xB7) ib reg=op02 */
    case 0xB1: /* B1h MOVb b(reg),i reg=1      spec: range(0xB0,0xB7) ib reg=op02 */
    case 0xB2: /* B2h MOVb b(reg),i reg=2      spec: range(0xB0,0xB7) ib reg=op02 */
    case 0xB3: /* B3h MOVb b(reg),i reg=3      spec: range(0xB0,0xB7) ib reg=op02 */
    case 0xB4: /* B4h MOVb b(reg),i reg=4      spec: range(0xB0,0xB7) ib reg=op02 */
    case 0xB5: /* B5h MOVb b(reg),i reg=5      spec: range(0xB0,0xB7) ib reg=op02 */
    case 0xB6: /* B6h MOVb b(reg),i reg=6      spec: range(0xB0,0xB7) ib reg=op02 */
    case 0xB7: /* B7h MOVb b(reg),i reg=7      spec: range(0xB0,0xB7) ib reg=op02 */
        imm=IPFB();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVb %s,0x%02lX",CPUregsN[1][op&7],(unsigned long)((uint32_t)imm));
        break;
    case 0xB8: /* B8h MOVd w(reg),i reg=0      spec: range(0xB8,0xBF) iw reg=op02 */
    case 0xB9: /* B9h MOVd w(reg),i reg=1      spec: range(0xB8,0xBF) iw reg=op02 */
    case 0xBA: /* BAh MOVd w(reg),i reg=2      spec: range(0xB8,0xBF) iw reg=op02 */
    case 0xBB: /* BBh MOVd w(reg),i reg=3      spec: range(0xB8,0xBF) iw reg=op02 */
    case 0xBC: /* BCh MOVd w(reg),i reg=4      spec: range(0xB8,0xBF) iw reg=op02 */
    case 0xBD: /* BDh MOVd w(reg),i reg=5      spec: range(0xB8,0xBF) iw reg=op02 */
    case 0xBE: /* BEh MOVd w(reg),i reg=6      spec: range(0xB8,0xBF) iw reg=op02 */
    case 0xBF: /* BFh MOVd w(reg),i reg=7      spec: range(0xB8,0xBF) iw reg=op02 */
        imm=IPFcodeW();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVd %s,0x%08lX",CPUregsN[4][op&7],(unsigned long)((uint32_t)imm));
        break;
    case 0xC0: /* C0h        spec:  */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
/* Opcodes starting with C0h */
        switch (mrm.reg()) {
            case 0: /* C0h 00h ROLb b(r/m),b(i) reg=0      spec: 0xC0 mod/reg/rm /0 ib */
                imm=IPFB();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ROLb %s,0x%02lX",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),(unsigned long)((uint32_t)imm));
                break;
            case 1: /* C0h 08h RORb b(r/m),b(i) reg=1      spec: 0xC0 mod/reg/rm /1 ib */
                imm=IPFB();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"RORb %s,0x%02lX",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),(unsigned long)((uint32_t)imm));
                break;
            case 2: /* C0h 10h RCLb b(r/m),b(i) reg=2      spec: 0xC0 mod/reg/rm /2 ib */
                imm=IPFB();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"RCLb %s,0x%02lX",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),(unsigned long)((uint32_t)imm));
                break;
            case 3: /* C0h 18h RCRb b(r/m),b(i) reg=3      spec: 0xC0 mod/reg/rm /3 ib */
                imm=IPFB();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"RCRb %s,0x%02lX",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),(unsigned long)((uint32_t)imm));
                break;
            case 4: /* C0h 20h SHLb b(r/m),b(i) reg=4      spec: 0xC0 mod/reg/rm /4 ib */
                imm=IPFB();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SHLb %s,0x%02lX",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),(unsigned long)((uint32_t)imm));
                break;
            case 5: /* C0h 28h SHRb b(r/m),b(i) reg=5      spec: 0xC0 mod/reg/rm /5 ib */
                imm=IPFB();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SHRb %s,0x%02lX",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),(unsigned long)((uint32_t)imm));
                break;
            case 6: /* C0h 30h SALb b(r/m),b(i) reg=6      spec: 0xC0 mod/reg/rm /6 ib */
                imm=IPFB();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SALb %s,0x%02lX",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),(unsigned long)((uint32_t)imm));
                break;
            case 7: /* C0h 38h SARb b(r/m),b(i) reg=7      spec: 0xC0 mod/reg/rm /7 ib */
                imm=IPFB();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SARb %s,0x%02lX",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),(unsigned long)((uint32_t)imm));
                break;
            default:
                goto _x86decode_illegal_opcode;
        };
/* End of opcodes starting with C0h */
        break;
    case 0xC1: /* C1h        spec:  */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
/* Opcodes starting with C1h */
        switch (mrm.reg()) {
            case 0: /* C1h 00h ROLd w(r/m),b(i) reg=0      spec: 0xC1 mod/reg/rm /0 ib */
                imm=IPFB();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ROLd %s,0x%02lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
                break;
            case 1: /* C1h 08h RORd w(r/m),b(i) reg=1      spec: 0xC1 mod/reg/rm /1 ib */
                imm=IPFB();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"RORd %s,0x%02lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
                break;
            case 2: /* C1h 10h RCLd w(r/m),b(i) reg=2      spec: 0xC1 mod/reg/rm /2 ib */
                imm=IPFB();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"RCLd %s,0x%02lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
                break;
            case 3: /* C1h 18h RCRd w(r/m),b(i) reg=3      spec: 0xC1 mod/reg/rm /3 ib */
                imm=IPFB();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"RCRd %s,0x%02lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
                break;
            case 4: /* C1h 20h SHLd w(r/m),b(i) reg=4      spec: 0xC1 mod/reg/rm /4 ib */
                imm=IPFB();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SHLd %s,0x%02lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
                break;
            case 5: /* C1h 28h SHRd w(r/m),b(i) reg=5      spec: 0xC1 mod/reg/rm /5 ib */
                imm=IPFB();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SHRd %s,0x%02lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
                break;
            case 6: /* C1h 30h SALd w(r/m),b(i) reg=6      spec: 0xC1 mod/reg/rm /6 ib */
                imm=IPFB();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SALd %s,0x%02lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
                break;
            case 7: /* C1h 38h SARd w(r/m),b(i) reg=7      spec: 0xC1 mod/reg/rm /7 ib */
                imm=IPFB();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SARd %s,0x%02lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
                break;
            default:
                goto _x86decode_illegal_opcode;
        };
/* End of opcodes starting with C1h */
        break;
    case 0xC2: /* C2h RETd i      spec: 0xC2 iw16 */
        imm=IPFW();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"RETd 0x%04lX",(unsigned long)((uint32_t)imm));
        break;
    case 0xC3: /* C3h RETd       spec: 0xC3 */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"RETd");
        break;
    case 0xC4: /* C4h LESd w(reg),w(r/m)      spec: 0xC4 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"LESd %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
        break;
    case 0xC5: /* C5h LDSd w(reg),w(r/m)      spec: 0xC5 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"LDSd %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
        break;
    case 0xC6: /* C6h        spec:  */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
/* Opcodes starting with C6h */
        switch (mrm.reg()) {
            case 0: /* C6h 00h MOVb b(r/m),i reg=0      spec: 0xC6 mod/reg/rm /0 ib */
                imm=IPFB();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVb %s,0x%02lX",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),(unsigned long)((uint32_t)imm));
                break;
            /* reg 1 not defined */
            /* reg 2 not defined */
            /* reg 3 not defined */
            /* reg 4 not defined */
            /* reg 5 not defined */
            /* reg 6 not defined */
            /* reg 7 not defined */
            default:
                goto _x86decode_illegal_opcode;
        };
/* End of opcodes starting with C6h */
        break;
    case 0xC7: /* C7h        spec:  */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
/* Opcodes starting with C7h */
        switch (mrm.reg()) {
            case 0: /* C7h 00h MOVd w(r/m),i reg=0      spec: 0xC7 mod/reg/rm /0 iw */
                imm=IPFcodeW();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVd %s,0x%08lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
                break;
            /* reg 1 not defined */
            /* reg 2 not defined */
            /* reg 3 not defined */
            /* reg 4 not defined */
            /* reg 5 not defined */
            /* reg 6 not defined */
            /* reg 7 not defined */
            default:
                goto _x86decode_illegal_opcode;
        };
/* End of opcodes starting with C7h */
        break;
    case 0xC8: /* C8h ENTERd w(i),b(i2)      spec: 0xC8 iw ib */
        imm=IPFcodeW();
        imm2=IPFB();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ENTERd 0x%08lX,0x%02lX",(unsigned long)((uint32_t)imm),(unsigned long)((uint32_t)imm2));
        break;
    case 0xC9: /* C9h LEAVEd       spec: 0xC9 */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"LEAVEd");
        break;
    case 0xCA: /* CAh RETFd i      spec: 0xCA iw16 */
        imm=IPFW();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"RETFd 0x%04lX",(unsigned long)((uint32_t)imm));
        break;
    case 0xCB: /* CBh RETFd       spec: 0xCB */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"RETFd");
        break;
    case 0xCC: /* CCh INT3d       spec: 0xCC */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"INT3d");
        break;
    case 0xCD: /* CDh INTd i      spec: 0xCD ib */
        imm=IPFB();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"INTd 0x%02lX",(unsigned long)((uint32_t)imm));
        break;
    case 0xCE: /* CEh INTOd       spec: 0xCE */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"INTOd");
        break;
    case 0xCF: /* CFh IRETd       spec: 0xCF */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"IRETd");
        break;
    case 0xD0: /* D0h        spec:  */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
/* Opcodes starting with D0h */
        switch (mrm.reg()) {
            case 0: /* D0h 00h ROLb b(r/m),1 reg=0      spec: 0xD0 mod/reg/rm /0 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ROLb %s,1",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 1: /* D0h 08h RORb b(r/m),1 reg=1      spec: 0xD0 mod/reg/rm /1 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"RORb %s,1",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 2: /* D0h 10h RCLb b(r/m),1 reg=2      spec: 0xD0 mod/reg/rm /2 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"RCLb %s,1",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 3: /* D0h 18h RCRb b(r/m),1 reg=3      spec: 0xD0 mod/reg/rm /3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"RCRb %s,1",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 4: /* D0h 20h SHLb b(r/m),1 reg=4      spec: 0xD0 mod/reg/rm /4 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SHLb %s,1",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 5: /* D0h 28h SHRb b(r/m),1 reg=5      spec: 0xD0 mod/reg/rm /5 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SHRb %s,1",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 6: /* D0h 30h SALb b(r/m),1 reg=6      spec: 0xD0 mod/reg/rm /6 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SALb %s,1",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 7: /* D0h 38h SARb b(r/m),1 reg=7      spec: 0xD0 mod/reg/rm /7 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SARb %s,1",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            default:
                goto _x86decode_illegal_opcode;
        };
/* End of opcodes starting with D0h */
        break;
    case 0xD1: /* D1h        spec:  */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
/* Opcodes starting with D1h */
        switch (mrm.reg()) {
            case 0: /* D1h 00h ROLd w(r/m),1 reg=0      spec: 0xD1 mod/reg/rm /0 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ROLd %s,1",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 1: /* D1h 08h RORd w(r/m),1 reg=1      spec: 0xD1 mod/reg/rm /1 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"RORd %s,1",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 2: /* D1h 10h RCLd w(r/m),1 reg=2      spec: 0xD1 mod/reg/rm /2 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"RCLd %s,1",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 3: /* D1h 18h RCRd w(r/m),1 reg=3      spec: 0xD1 mod/reg/rm /3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"RCRd %s,1",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 4: /* D1h 20h SHLd w(r/m),1 reg=4      spec: 0xD1 mod/reg/rm /4 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SHLd %s,1",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 5: /* D1h 28h SHRd w(r/m),1 reg=5      spec: 0xD1 mod/reg/rm /5 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SHRd %s,1",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 6: /* D1h 30h SALd w(r/m),1 reg=6      spec: 0xD1 mod/reg/rm /6 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SALd %s,1",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 7: /* D1h 38h SARd w(r/m),1 reg=7      spec: 0xD1 mod/reg/rm /7 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SARd %s,1",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            default:
                goto _x86decode_illegal_opcode;
        };
/* End of opcodes starting with D1h */
        break;
    case 0xD2: /* D2h        spec:  */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
/* Opcodes starting with D2h */
        switch (mrm.reg()) {
            case 0: /* D2h 00h ROLb b(r/m),b(c) reg=0      spec: 0xD2 mod/reg/rm /0 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ROLb %s,%s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),CPUregsN[1][1]);
                break;
            case 1: /* D2h 08h RORb b(r/m),b(c) reg=1      spec: 0xD2 mod/reg/rm /1 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"RORb %s,%s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),CPUregsN[1][1]);
                break;
            case 2: /* D2h 10h RCLb b(r/m),b(c) reg=2      spec: 0xD2 mod/reg/rm /2 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"RCLb %s,%s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),CPUregsN[1][1]);
                break;
            case 3: /* D2h 18h RCRb b(r/m),b(c) reg=3      spec: 0xD2 mod/reg/rm /3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"RCRb %s,%s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),CPUregsN[1][1]);
                break;
            case 4: /* D2h 20h SHLb b(r/m),b(c) reg=4      spec: 0xD2 mod/reg/rm /4 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SHLb %s,%s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),CPUregsN[1][1]);
                break;
            case 5: /* D2h 28h SHRb b(r/m),b(c) reg=5      spec: 0xD2 mod/reg/rm /5 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SHRb %s,%s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),CPUregsN[1][1]);
                break;
            case 6: /* D2h 30h SALb b(r/m),b(c) reg=6      spec: 0xD2 mod/reg/rm /6 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SALb %s,%s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),CPUregsN[1][1]);
                break;
            case 7: /* D2h 38h SARb b(r/m),b(c) reg=7      spec: 0xD2 mod/reg/rm /7 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SARb %s,%s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),CPUregsN[1][1]);
                break;
            default:
                goto _x86decode_illegal_opcode;
        };
/* End of opcodes starting with D2h */
        break;
    case 0xD3: /* D3h        spec:  */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
/* Opcodes starting with D3h */
        switch (mrm.reg()) {
            case 0: /* D3h 00h ROLd w(r/m),b(c) reg=0      spec: 0xD3 mod/reg/rm /0 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ROLd %s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[1][1]);
                break;
            case 1: /* D3h 08h RORd w(r/m),b(c) reg=1      spec: 0xD3 mod/reg/rm /1 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"RORd %s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[1][1]);
                break;
            case 2: /* D3h 10h RCLd w(r/m),b(c) reg=2      spec: 0xD3 mod/reg/rm /2 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"RCLd %s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[1][1]);
                break;
            case 3: /* D3h 18h RCRd w(r/m),b(c) reg=3      spec: 0xD3 mod/reg/rm /3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"RCRd %s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[1][1]);
                break;
            case 4: /* D3h 20h SHLd w(r/m),b(c) reg=4      spec: 0xD3 mod/reg/rm /4 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SHLd %s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[1][1]);
                break;
            case 5: /* D3h 28h SHRd w(r/m),b(c) reg=5      spec: 0xD3 mod/reg/rm /5 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SHRd %s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[1][1]);
                break;
            case 6: /* D3h 30h SALd w(r/m),b(c) reg=6      spec: 0xD3 mod/reg/rm /6 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SALd %s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[1][1]);
                break;
            case 7: /* D3h 38h SARd w(r/m),b(c) reg=7      spec: 0xD3 mod/reg/rm /7 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SARd %s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[1][1]);
                break;
            default:
                goto _x86decode_illegal_opcode;
        };
/* End of opcodes starting with D3h */
        break;
    case 0xD4: /* D4h AAMb i      spec: 0xD4 ib */
        imm=IPFB();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"AAMb 0x%02lX",(unsigned long)((uint32_t)imm));
        break;
    case 0xD5: /* D5h AADb i      spec: 0xD5 ib */
        imm=IPFB();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"AADb 0x%02lX",(unsigned long)((uint32_t)imm));
        break;
    case 0xD6: /* D6h SALCb       spec: 0xD6 */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SALCb");
        break;
    case 0xD7: /* D7h XLATb       spec: 0xD7 */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"XLATb");
        break;
    case 0xD8: /* D8h        spec:  */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
/* Opcodes starting with D8h */
        switch (mrm.byte) {
            case 0x00: /* D8h 00h FADDf32 f32(r/m) mod=0 reg=0 rm=0      spec: 0xD8 mod/reg/rm /0 mod!=3 */
            case 0x01: /* D8h 01h FADDf32 f32(r/m) mod=0 reg=0 rm=1      spec: 0xD8 mod/reg/rm /0 mod!=3 */
            case 0x02: /* D8h 02h FADDf32 f32(r/m) mod=0 reg=0 rm=2      spec: 0xD8 mod/reg/rm /0 mod!=3 */
            case 0x03: /* D8h 03h FADDf32 f32(r/m) mod=0 reg=0 rm=3      spec: 0xD8 mod/reg/rm /0 mod!=3 */
            case 0x04: /* D8h 04h FADDf32 f32(r/m) mod=0 reg=0 rm=4      spec: 0xD8 mod/reg/rm /0 mod!=3 */
            case 0x05: /* D8h 05h FADDf32 f32(r/m) mod=0 reg=0 rm=5      spec: 0xD8 mod/reg/rm /0 mod!=3 */
            case 0x06: /* D8h 06h FADDf32 f32(r/m) mod=0 reg=0 rm=6      spec: 0xD8 mod/reg/rm /0 mod!=3 */
            case 0x07: /* D8h 07h FADDf32 f32(r/m) mod=0 reg=0 rm=7      spec: 0xD8 mod/reg/rm /0 mod!=3 */
            case 0x40: /* D8h 40h FADDf32 f32(r/m) mod=1 reg=0 rm=0      spec: 0xD8 mod/reg/rm /0 mod!=3 */
            case 0x41: /* D8h 41h FADDf32 f32(r/m) mod=1 reg=0 rm=1      spec: 0xD8 mod/reg/rm /0 mod!=3 */
            case 0x42: /* D8h 42h FADDf32 f32(r/m) mod=1 reg=0 rm=2      spec: 0xD8 mod/reg/rm /0 mod!=3 */
            case 0x43: /* D8h 43h FADDf32 f32(r/m) mod=1 reg=0 rm=3      spec: 0xD8 mod/reg/rm /0 mod!=3 */
            case 0x44: /* D8h 44h FADDf32 f32(r/m) mod=1 reg=0 rm=4      spec: 0xD8 mod/reg/rm /0 mod!=3 */
            case 0x45: /* D8h 45h FADDf32 f32(r/m) mod=1 reg=0 rm=5      spec: 0xD8 mod/reg/rm /0 mod!=3 */
            case 0x46: /* D8h 46h FADDf32 f32(r/m) mod=1 reg=0 rm=6      spec: 0xD8 mod/reg/rm /0 mod!=3 */
            case 0x47: /* D8h 47h FADDf32 f32(r/m) mod=1 reg=0 rm=7      spec: 0xD8 mod/reg/rm /0 mod!=3 */
            case 0x80: /* D8h 80h FADDf32 f32(r/m) mod=2 reg=0 rm=0      spec: 0xD8 mod/reg/rm /0 mod!=3 */
            case 0x81: /* D8h 81h FADDf32 f32(r/m) mod=2 reg=0 rm=1      spec: 0xD8 mod/reg/rm /0 mod!=3 */
            case 0x82: /* D8h 82h FADDf32 f32(r/m) mod=2 reg=0 rm=2      spec: 0xD8 mod/reg/rm /0 mod!=3 */
            case 0x83: /* D8h 83h FADDf32 f32(r/m) mod=2 reg=0 rm=3      spec: 0xD8 mod/reg/rm /0 mod!=3 */
            case 0x84: /* D8h 84h FADDf32 f32(r/m) mod=2 reg=0 rm=4      spec: 0xD8 mod/reg/rm /0 mod!=3 */
            case 0x85: /* D8h 85h FADDf32 f32(r/m) mod=2 reg=0 rm=5      spec: 0xD8 mod/reg/rm /0 mod!=3 */
            case 0x86: /* D8h 86h FADDf32 f32(r/m) mod=2 reg=0 rm=6      spec: 0xD8 mod/reg/rm /0 mod!=3 */
            case 0x87: /* D8h 87h FADDf32 f32(r/m) mod=2 reg=0 rm=7      spec: 0xD8 mod/reg/rm /0 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FADDf32 %s",IPDecPrint32(mrm,sib,disp,4,RC_FPUREG,"f32"));
                break;
            case 0x08: /* D8h 08h FMULf32 f32(r/m) mod=0 reg=1 rm=0      spec: 0xD8 mod/reg/rm /1 mod!=3 */
            case 0x09: /* D8h 09h FMULf32 f32(r/m) mod=0 reg=1 rm=1      spec: 0xD8 mod/reg/rm /1 mod!=3 */
            case 0x0A: /* D8h 0Ah FMULf32 f32(r/m) mod=0 reg=1 rm=2      spec: 0xD8 mod/reg/rm /1 mod!=3 */
            case 0x0B: /* D8h 0Bh FMULf32 f32(r/m) mod=0 reg=1 rm=3      spec: 0xD8 mod/reg/rm /1 mod!=3 */
            case 0x0C: /* D8h 0Ch FMULf32 f32(r/m) mod=0 reg=1 rm=4      spec: 0xD8 mod/reg/rm /1 mod!=3 */
            case 0x0D: /* D8h 0Dh FMULf32 f32(r/m) mod=0 reg=1 rm=5      spec: 0xD8 mod/reg/rm /1 mod!=3 */
            case 0x0E: /* D8h 0Eh FMULf32 f32(r/m) mod=0 reg=1 rm=6      spec: 0xD8 mod/reg/rm /1 mod!=3 */
            case 0x0F: /* D8h 0Fh FMULf32 f32(r/m) mod=0 reg=1 rm=7      spec: 0xD8 mod/reg/rm /1 mod!=3 */
            case 0x48: /* D8h 48h FMULf32 f32(r/m) mod=1 reg=1 rm=0      spec: 0xD8 mod/reg/rm /1 mod!=3 */
            case 0x49: /* D8h 49h FMULf32 f32(r/m) mod=1 reg=1 rm=1      spec: 0xD8 mod/reg/rm /1 mod!=3 */
            case 0x4A: /* D8h 4Ah FMULf32 f32(r/m) mod=1 reg=1 rm=2      spec: 0xD8 mod/reg/rm /1 mod!=3 */
            case 0x4B: /* D8h 4Bh FMULf32 f32(r/m) mod=1 reg=1 rm=3      spec: 0xD8 mod/reg/rm /1 mod!=3 */
            case 0x4C: /* D8h 4Ch FMULf32 f32(r/m) mod=1 reg=1 rm=4      spec: 0xD8 mod/reg/rm /1 mod!=3 */
            case 0x4D: /* D8h 4Dh FMULf32 f32(r/m) mod=1 reg=1 rm=5      spec: 0xD8 mod/reg/rm /1 mod!=3 */
            case 0x4E: /* D8h 4Eh FMULf32 f32(r/m) mod=1 reg=1 rm=6      spec: 0xD8 mod/reg/rm /1 mod!=3 */
            case 0x4F: /* D8h 4Fh FMULf32 f32(r/m) mod=1 reg=1 rm=7      spec: 0xD8 mod/reg/rm /1 mod!=3 */
            case 0x88: /* D8h 88h FMULf32 f32(r/m) mod=2 reg=1 rm=0      spec: 0xD8 mod/reg/rm /1 mod!=3 */
            case 0x89: /* D8h 89h FMULf32 f32(r/m) mod=2 reg=1 rm=1      spec: 0xD8 mod/reg/rm /1 mod!=3 */
            case 0x8A: /* D8h 8Ah FMULf32 f32(r/m) mod=2 reg=1 rm=2      spec: 0xD8 mod/reg/rm /1 mod!=3 */
            case 0x8B: /* D8h 8Bh FMULf32 f32(r/m) mod=2 reg=1 rm=3      spec: 0xD8 mod/reg/rm /1 mod!=3 */
            case 0x8C: /* D8h 8Ch FMULf32 f32(r/m) mod=2 reg=1 rm=4      spec: 0xD8 mod/reg/rm /1 mod!=3 */
            case 0x8D: /* D8h 8Dh FMULf32 f32(r/m) mod=2 reg=1 rm=5      spec: 0xD8 mod/reg/rm /1 mod!=3 */
            case 0x8E: /* D8h 8Eh FMULf32 f32(r/m) mod=2 reg=1 rm=6      spec: 0xD8 mod/reg/rm /1 mod!=3 */
            case 0x8F: /* D8h 8Fh FMULf32 f32(r/m) mod=2 reg=1 rm=7      spec: 0xD8 mod/reg/rm /1 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FMULf32 %s",IPDecPrint32(mrm,sib,disp,4,RC_FPUREG,"f32"));
                break;
            case 0x10: /* D8h 10h FCOMf32 f32(r/m) mod=0 reg=2 rm=0      spec: 0xD8 mod/reg/rm /2 mod!=3 */
            case 0x11: /* D8h 11h FCOMf32 f32(r/m) mod=0 reg=2 rm=1      spec: 0xD8 mod/reg/rm /2 mod!=3 */
            case 0x12: /* D8h 12h FCOMf32 f32(r/m) mod=0 reg=2 rm=2      spec: 0xD8 mod/reg/rm /2 mod!=3 */
            case 0x13: /* D8h 13h FCOMf32 f32(r/m) mod=0 reg=2 rm=3      spec: 0xD8 mod/reg/rm /2 mod!=3 */
            case 0x14: /* D8h 14h FCOMf32 f32(r/m) mod=0 reg=2 rm=4      spec: 0xD8 mod/reg/rm /2 mod!=3 */
            case 0x15: /* D8h 15h FCOMf32 f32(r/m) mod=0 reg=2 rm=5      spec: 0xD8 mod/reg/rm /2 mod!=3 */
            case 0x16: /* D8h 16h FCOMf32 f32(r/m) mod=0 reg=2 rm=6      spec: 0xD8 mod/reg/rm /2 mod!=3 */
            case 0x17: /* D8h 17h FCOMf32 f32(r/m) mod=0 reg=2 rm=7      spec: 0xD8 mod/reg/rm /2 mod!=3 */
            case 0x50: /* D8h 50h FCOMf32 f32(r/m) mod=1 reg=2 rm=0      spec: 0xD8 mod/reg/rm /2 mod!=3 */
            case 0x51: /* D8h 51h FCOMf32 f32(r/m) mod=1 reg=2 rm=1      spec: 0xD8 mod/reg/rm /2 mod!=3 */
            case 0x52: /* D8h 52h FCOMf32 f32(r/m) mod=1 reg=2 rm=2      spec: 0xD8 mod/reg/rm /2 mod!=3 */
            case 0x53: /* D8h 53h FCOMf32 f32(r/m) mod=1 reg=2 rm=3      spec: 0xD8 mod/reg/rm /2 mod!=3 */
            case 0x54: /* D8h 54h FCOMf32 f32(r/m) mod=1 reg=2 rm=4      spec: 0xD8 mod/reg/rm /2 mod!=3 */
            case 0x55: /* D8h 55h FCOMf32 f32(r/m) mod=1 reg=2 rm=5      spec: 0xD8 mod/reg/rm /2 mod!=3 */
            case 0x56: /* D8h 56h FCOMf32 f32(r/m) mod=1 reg=2 rm=6      spec: 0xD8 mod/reg/rm /2 mod!=3 */
            case 0x57: /* D8h 57h FCOMf32 f32(r/m) mod=1 reg=2 rm=7      spec: 0xD8 mod/reg/rm /2 mod!=3 */
            case 0x90: /* D8h 90h FCOMf32 f32(r/m) mod=2 reg=2 rm=0      spec: 0xD8 mod/reg/rm /2 mod!=3 */
            case 0x91: /* D8h 91h FCOMf32 f32(r/m) mod=2 reg=2 rm=1      spec: 0xD8 mod/reg/rm /2 mod!=3 */
            case 0x92: /* D8h 92h FCOMf32 f32(r/m) mod=2 reg=2 rm=2      spec: 0xD8 mod/reg/rm /2 mod!=3 */
            case 0x93: /* D8h 93h FCOMf32 f32(r/m) mod=2 reg=2 rm=3      spec: 0xD8 mod/reg/rm /2 mod!=3 */
            case 0x94: /* D8h 94h FCOMf32 f32(r/m) mod=2 reg=2 rm=4      spec: 0xD8 mod/reg/rm /2 mod!=3 */
            case 0x95: /* D8h 95h FCOMf32 f32(r/m) mod=2 reg=2 rm=5      spec: 0xD8 mod/reg/rm /2 mod!=3 */
            case 0x96: /* D8h 96h FCOMf32 f32(r/m) mod=2 reg=2 rm=6      spec: 0xD8 mod/reg/rm /2 mod!=3 */
            case 0x97: /* D8h 97h FCOMf32 f32(r/m) mod=2 reg=2 rm=7      spec: 0xD8 mod/reg/rm /2 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FCOMf32 %s",IPDecPrint32(mrm,sib,disp,4,RC_FPUREG,"f32"));
                break;
            case 0x18: /* D8h 18h FCOMPf32 f32(r/m) mod=0 reg=3 rm=0      spec: 0xD8 mod/reg/rm /3 mod!=3 */
            case 0x19: /* D8h 19h FCOMPf32 f32(r/m) mod=0 reg=3 rm=1      spec: 0xD8 mod/reg/rm /3 mod!=3 */
            case 0x1A: /* D8h 1Ah FCOMPf32 f32(r/m) mod=0 reg=3 rm=2      spec: 0xD8 mod/reg/rm /3 mod!=3 */
            case 0x1B: /* D8h 1Bh FCOMPf32 f32(r/m) mod=0 reg=3 rm=3      spec: 0xD8 mod/reg/rm /3 mod!=3 */
            case 0x1C: /* D8h 1Ch FCOMPf32 f32(r/m) mod=0 reg=3 rm=4      spec: 0xD8 mod/reg/rm /3 mod!=3 */
            case 0x1D: /* D8h 1Dh FCOMPf32 f32(r/m) mod=0 reg=3 rm=5      spec: 0xD8 mod/reg/rm /3 mod!=3 */
            case 0x1E: /* D8h 1Eh FCOMPf32 f32(r/m) mod=0 reg=3 rm=6      spec: 0xD8 mod/reg/rm /3 mod!=3 */
            case 0x1F: /* D8h 1Fh FCOMPf32 f32(r/m) mod=0 reg=3 rm=7      spec: 0xD8 mod/reg/rm /3 mod!=3 */
            case 0x58: /* D8h 58h FCOMPf32 f32(r/m) mod=1 reg=3 rm=0      spec: 0xD8 mod/reg/rm /3 mod!=3 */
            case 0x59: /* D8h 59h FCOMPf32 f32(r/m) mod=1 reg=3 rm=1      spec: 0xD8 mod/reg/rm /3 mod!=3 */
            case 0x5A: /* D8h 5Ah FCOMPf32 f32(r/m) mod=1 reg=3 rm=2      spec: 0xD8 mod/reg/rm /3 mod!=3 */
            case 0x5B: /* D8h 5Bh FCOMPf32 f32(r/m) mod=1 reg=3 rm=3      spec: 0xD8 mod/reg/rm /3 mod!=3 */
            case 0x5C: /* D8h 5Ch FCOMPf32 f32(r/m) mod=1 reg=3 rm=4      spec: 0xD8 mod/reg/rm /3 mod!=3 */
            case 0x5D: /* D8h 5Dh FCOMPf32 f32(r/m) mod=1 reg=3 rm=5      spec: 0xD8 mod/reg/rm /3 mod!=3 */
            case 0x5E: /* D8h 5Eh FCOMPf32 f32(r/m) mod=1 reg=3 rm=6      spec: 0xD8 mod/reg/rm /3 mod!=3 */
            case 0x5F: /* D8h 5Fh FCOMPf32 f32(r/m) mod=1 reg=3 rm=7      spec: 0xD8 mod/reg/rm /3 mod!=3 */
            case 0x98: /* D8h 98h FCOMPf32 f32(r/m) mod=2 reg=3 rm=0      spec: 0xD8 mod/reg/rm /3 mod!=3 */
            case 0x99: /* D8h 99h FCOMPf32 f32(r/m) mod=2 reg=3 rm=1      spec: 0xD8 mod/reg/rm /3 mod!=3 */
            case 0x9A: /* D8h 9Ah FCOMPf32 f32(r/m) mod=2 reg=3 rm=2      spec: 0xD8 mod/reg/rm /3 mod!=3 */
            case 0x9B: /* D8h 9Bh FCOMPf32 f32(r/m) mod=2 reg=3 rm=3      spec: 0xD8 mod/reg/rm /3 mod!=3 */
            case 0x9C: /* D8h 9Ch FCOMPf32 f32(r/m) mod=2 reg=3 rm=4      spec: 0xD8 mod/reg/rm /3 mod!=3 */
            case 0x9D: /* D8h 9Dh FCOMPf32 f32(r/m) mod=2 reg=3 rm=5      spec: 0xD8 mod/reg/rm /3 mod!=3 */
            case 0x9E: /* D8h 9Eh FCOMPf32 f32(r/m) mod=2 reg=3 rm=6      spec: 0xD8 mod/reg/rm /3 mod!=3 */
            case 0x9F: /* D8h 9Fh FCOMPf32 f32(r/m) mod=2 reg=3 rm=7      spec: 0xD8 mod/reg/rm /3 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FCOMPf32 %s",IPDecPrint32(mrm,sib,disp,4,RC_FPUREG,"f32"));
                break;
            case 0x20: /* D8h 20h FSUBf32 f32(r/m) mod=0 reg=4 rm=0      spec: 0xD8 mod/reg/rm /4 mod!=3 */
            case 0x21: /* D8h 21h FSUBf32 f32(r/m) mod=0 reg=4 rm=1      spec: 0xD8 mod/reg/rm /4 mod!=3 */
            case 0x22: /* D8h 22h FSUBf32 f32(r/m) mod=0 reg=4 rm=2      spec: 0xD8 mod/reg/rm /4 mod!=3 */
            case 0x23: /* D8h 23h FSUBf32 f32(r/m) mod=0 reg=4 rm=3      spec: 0xD8 mod/reg/rm /4 mod!=3 */
            case 0x24: /* D8h 24h FSUBf32 f32(r/m) mod=0 reg=4 rm=4      spec: 0xD8 mod/reg/rm /4 mod!=3 */
            case 0x25: /* D8h 25h FSUBf32 f32(r/m) mod=0 reg=4 rm=5      spec: 0xD8 mod/reg/rm /4 mod!=3 */
            case 0x26: /* D8h 26h FSUBf32 f32(r/m) mod=0 reg=4 rm=6      spec: 0xD8 mod/reg/rm /4 mod!=3 */
            case 0x27: /* D8h 27h FSUBf32 f32(r/m) mod=0 reg=4 rm=7      spec: 0xD8 mod/reg/rm /4 mod!=3 */
            case 0x60: /* D8h 60h FSUBf32 f32(r/m) mod=1 reg=4 rm=0      spec: 0xD8 mod/reg/rm /4 mod!=3 */
            case 0x61: /* D8h 61h FSUBf32 f32(r/m) mod=1 reg=4 rm=1      spec: 0xD8 mod/reg/rm /4 mod!=3 */
            case 0x62: /* D8h 62h FSUBf32 f32(r/m) mod=1 reg=4 rm=2      spec: 0xD8 mod/reg/rm /4 mod!=3 */
            case 0x63: /* D8h 63h FSUBf32 f32(r/m) mod=1 reg=4 rm=3      spec: 0xD8 mod/reg/rm /4 mod!=3 */
            case 0x64: /* D8h 64h FSUBf32 f32(r/m) mod=1 reg=4 rm=4      spec: 0xD8 mod/reg/rm /4 mod!=3 */
            case 0x65: /* D8h 65h FSUBf32 f32(r/m) mod=1 reg=4 rm=5      spec: 0xD8 mod/reg/rm /4 mod!=3 */
            case 0x66: /* D8h 66h FSUBf32 f32(r/m) mod=1 reg=4 rm=6      spec: 0xD8 mod/reg/rm /4 mod!=3 */
            case 0x67: /* D8h 67h FSUBf32 f32(r/m) mod=1 reg=4 rm=7      spec: 0xD8 mod/reg/rm /4 mod!=3 */
            case 0xA0: /* D8h A0h FSUBf32 f32(r/m) mod=2 reg=4 rm=0      spec: 0xD8 mod/reg/rm /4 mod!=3 */
            case 0xA1: /* D8h A1h FSUBf32 f32(r/m) mod=2 reg=4 rm=1      spec: 0xD8 mod/reg/rm /4 mod!=3 */
            case 0xA2: /* D8h A2h FSUBf32 f32(r/m) mod=2 reg=4 rm=2      spec: 0xD8 mod/reg/rm /4 mod!=3 */
            case 0xA3: /* D8h A3h FSUBf32 f32(r/m) mod=2 reg=4 rm=3      spec: 0xD8 mod/reg/rm /4 mod!=3 */
            case 0xA4: /* D8h A4h FSUBf32 f32(r/m) mod=2 reg=4 rm=4      spec: 0xD8 mod/reg/rm /4 mod!=3 */
            case 0xA5: /* D8h A5h FSUBf32 f32(r/m) mod=2 reg=4 rm=5      spec: 0xD8 mod/reg/rm /4 mod!=3 */
            case 0xA6: /* D8h A6h FSUBf32 f32(r/m) mod=2 reg=4 rm=6      spec: 0xD8 mod/reg/rm /4 mod!=3 */
            case 0xA7: /* D8h A7h FSUBf32 f32(r/m) mod=2 reg=4 rm=7      spec: 0xD8 mod/reg/rm /4 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSUBf32 %s",IPDecPrint32(mrm,sib,disp,4,RC_FPUREG,"f32"));
                break;
            case 0x28: /* D8h 28h FSUBRf32 f32(r/m) mod=0 reg=5 rm=0      spec: 0xD8 mod/reg/rm /5 mod!=3 */
            case 0x29: /* D8h 29h FSUBRf32 f32(r/m) mod=0 reg=5 rm=1      spec: 0xD8 mod/reg/rm /5 mod!=3 */
            case 0x2A: /* D8h 2Ah FSUBRf32 f32(r/m) mod=0 reg=5 rm=2      spec: 0xD8 mod/reg/rm /5 mod!=3 */
            case 0x2B: /* D8h 2Bh FSUBRf32 f32(r/m) mod=0 reg=5 rm=3      spec: 0xD8 mod/reg/rm /5 mod!=3 */
            case 0x2C: /* D8h 2Ch FSUBRf32 f32(r/m) mod=0 reg=5 rm=4      spec: 0xD8 mod/reg/rm /5 mod!=3 */
            case 0x2D: /* D8h 2Dh FSUBRf32 f32(r/m) mod=0 reg=5 rm=5      spec: 0xD8 mod/reg/rm /5 mod!=3 */
            case 0x2E: /* D8h 2Eh FSUBRf32 f32(r/m) mod=0 reg=5 rm=6      spec: 0xD8 mod/reg/rm /5 mod!=3 */
            case 0x2F: /* D8h 2Fh FSUBRf32 f32(r/m) mod=0 reg=5 rm=7      spec: 0xD8 mod/reg/rm /5 mod!=3 */
            case 0x68: /* D8h 68h FSUBRf32 f32(r/m) mod=1 reg=5 rm=0      spec: 0xD8 mod/reg/rm /5 mod!=3 */
            case 0x69: /* D8h 69h FSUBRf32 f32(r/m) mod=1 reg=5 rm=1      spec: 0xD8 mod/reg/rm /5 mod!=3 */
            case 0x6A: /* D8h 6Ah FSUBRf32 f32(r/m) mod=1 reg=5 rm=2      spec: 0xD8 mod/reg/rm /5 mod!=3 */
            case 0x6B: /* D8h 6Bh FSUBRf32 f32(r/m) mod=1 reg=5 rm=3      spec: 0xD8 mod/reg/rm /5 mod!=3 */
            case 0x6C: /* D8h 6Ch FSUBRf32 f32(r/m) mod=1 reg=5 rm=4      spec: 0xD8 mod/reg/rm /5 mod!=3 */
            case 0x6D: /* D8h 6Dh FSUBRf32 f32(r/m) mod=1 reg=5 rm=5      spec: 0xD8 mod/reg/rm /5 mod!=3 */
            case 0x6E: /* D8h 6Eh FSUBRf32 f32(r/m) mod=1 reg=5 rm=6      spec: 0xD8 mod/reg/rm /5 mod!=3 */
            case 0x6F: /* D8h 6Fh FSUBRf32 f32(r/m) mod=1 reg=5 rm=7      spec: 0xD8 mod/reg/rm /5 mod!=3 */
            case 0xA8: /* D8h A8h FSUBRf32 f32(r/m) mod=2 reg=5 rm=0      spec: 0xD8 mod/reg/rm /5 mod!=3 */
            case 0xA9: /* D8h A9h FSUBRf32 f32(r/m) mod=2 reg=5 rm=1      spec: 0xD8 mod/reg/rm /5 mod!=3 */
            case 0xAA: /* D8h AAh FSUBRf32 f32(r/m) mod=2 reg=5 rm=2      spec: 0xD8 mod/reg/rm /5 mod!=3 */
            case 0xAB: /* D8h ABh FSUBRf32 f32(r/m) mod=2 reg=5 rm=3      spec: 0xD8 mod/reg/rm /5 mod!=3 */
            case 0xAC: /* D8h ACh FSUBRf32 f32(r/m) mod=2 reg=5 rm=4      spec: 0xD8 mod/reg/rm /5 mod!=3 */
            case 0xAD: /* D8h ADh FSUBRf32 f32(r/m) mod=2 reg=5 rm=5      spec: 0xD8 mod/reg/rm /5 mod!=3 */
            case 0xAE: /* D8h AEh FSUBRf32 f32(r/m) mod=2 reg=5 rm=6      spec: 0xD8 mod/reg/rm /5 mod!=3 */
            case 0xAF: /* D8h AFh FSUBRf32 f32(r/m) mod=2 reg=5 rm=7      spec: 0xD8 mod/reg/rm /5 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSUBRf32 %s",IPDecPrint32(mrm,sib,disp,4,RC_FPUREG,"f32"));
                break;
            case 0x30: /* D8h 30h FDIVf32 f32(r/m) mod=0 reg=6 rm=0      spec: 0xD8 mod/reg/rm /6 mod!=3 */
            case 0x31: /* D8h 31h FDIVf32 f32(r/m) mod=0 reg=6 rm=1      spec: 0xD8 mod/reg/rm /6 mod!=3 */
            case 0x32: /* D8h 32h FDIVf32 f32(r/m) mod=0 reg=6 rm=2      spec: 0xD8 mod/reg/rm /6 mod!=3 */
            case 0x33: /* D8h 33h FDIVf32 f32(r/m) mod=0 reg=6 rm=3      spec: 0xD8 mod/reg/rm /6 mod!=3 */
            case 0x34: /* D8h 34h FDIVf32 f32(r/m) mod=0 reg=6 rm=4      spec: 0xD8 mod/reg/rm /6 mod!=3 */
            case 0x35: /* D8h 35h FDIVf32 f32(r/m) mod=0 reg=6 rm=5      spec: 0xD8 mod/reg/rm /6 mod!=3 */
            case 0x36: /* D8h 36h FDIVf32 f32(r/m) mod=0 reg=6 rm=6      spec: 0xD8 mod/reg/rm /6 mod!=3 */
            case 0x37: /* D8h 37h FDIVf32 f32(r/m) mod=0 reg=6 rm=7      spec: 0xD8 mod/reg/rm /6 mod!=3 */
            case 0x70: /* D8h 70h FDIVf32 f32(r/m) mod=1 reg=6 rm=0      spec: 0xD8 mod/reg/rm /6 mod!=3 */
            case 0x71: /* D8h 71h FDIVf32 f32(r/m) mod=1 reg=6 rm=1      spec: 0xD8 mod/reg/rm /6 mod!=3 */
            case 0x72: /* D8h 72h FDIVf32 f32(r/m) mod=1 reg=6 rm=2      spec: 0xD8 mod/reg/rm /6 mod!=3 */
            case 0x73: /* D8h 73h FDIVf32 f32(r/m) mod=1 reg=6 rm=3      spec: 0xD8 mod/reg/rm /6 mod!=3 */
            case 0x74: /* D8h 74h FDIVf32 f32(r/m) mod=1 reg=6 rm=4      spec: 0xD8 mod/reg/rm /6 mod!=3 */
            case 0x75: /* D8h 75h FDIVf32 f32(r/m) mod=1 reg=6 rm=5      spec: 0xD8 mod/reg/rm /6 mod!=3 */
            case 0x76: /* D8h 76h FDIVf32 f32(r/m) mod=1 reg=6 rm=6      spec: 0xD8 mod/reg/rm /6 mod!=3 */
            case 0x77: /* D8h 77h FDIVf32 f32(r/m) mod=1 reg=6 rm=7      spec: 0xD8 mod/reg/rm /6 mod!=3 */
            case 0xB0: /* D8h B0h FDIVf32 f32(r/m) mod=2 reg=6 rm=0      spec: 0xD8 mod/reg/rm /6 mod!=3 */
            case 0xB1: /* D8h B1h FDIVf32 f32(r/m) mod=2 reg=6 rm=1      spec: 0xD8 mod/reg/rm /6 mod!=3 */
            case 0xB2: /* D8h B2h FDIVf32 f32(r/m) mod=2 reg=6 rm=2      spec: 0xD8 mod/reg/rm /6 mod!=3 */
            case 0xB3: /* D8h B3h FDIVf32 f32(r/m) mod=2 reg=6 rm=3      spec: 0xD8 mod/reg/rm /6 mod!=3 */
            case 0xB4: /* D8h B4h FDIVf32 f32(r/m) mod=2 reg=6 rm=4      spec: 0xD8 mod/reg/rm /6 mod!=3 */
            case 0xB5: /* D8h B5h FDIVf32 f32(r/m) mod=2 reg=6 rm=5      spec: 0xD8 mod/reg/rm /6 mod!=3 */
            case 0xB6: /* D8h B6h FDIVf32 f32(r/m) mod=2 reg=6 rm=6      spec: 0xD8 mod/reg/rm /6 mod!=3 */
            case 0xB7: /* D8h B7h FDIVf32 f32(r/m) mod=2 reg=6 rm=7      spec: 0xD8 mod/reg/rm /6 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FDIVf32 %s",IPDecPrint32(mrm,sib,disp,4,RC_FPUREG,"f32"));
                break;
            case 0x38: /* D8h 38h FDIVRf32 f32(r/m) mod=0 reg=7 rm=0      spec: 0xD8 mod/reg/rm /7 mod!=3 */
            case 0x39: /* D8h 39h FDIVRf32 f32(r/m) mod=0 reg=7 rm=1      spec: 0xD8 mod/reg/rm /7 mod!=3 */
            case 0x3A: /* D8h 3Ah FDIVRf32 f32(r/m) mod=0 reg=7 rm=2      spec: 0xD8 mod/reg/rm /7 mod!=3 */
            case 0x3B: /* D8h 3Bh FDIVRf32 f32(r/m) mod=0 reg=7 rm=3      spec: 0xD8 mod/reg/rm /7 mod!=3 */
            case 0x3C: /* D8h 3Ch FDIVRf32 f32(r/m) mod=0 reg=7 rm=4      spec: 0xD8 mod/reg/rm /7 mod!=3 */
            case 0x3D: /* D8h 3Dh FDIVRf32 f32(r/m) mod=0 reg=7 rm=5      spec: 0xD8 mod/reg/rm /7 mod!=3 */
            case 0x3E: /* D8h 3Eh FDIVRf32 f32(r/m) mod=0 reg=7 rm=6      spec: 0xD8 mod/reg/rm /7 mod!=3 */
            case 0x3F: /* D8h 3Fh FDIVRf32 f32(r/m) mod=0 reg=7 rm=7      spec: 0xD8 mod/reg/rm /7 mod!=3 */
            case 0x78: /* D8h 78h FDIVRf32 f32(r/m) mod=1 reg=7 rm=0      spec: 0xD8 mod/reg/rm /7 mod!=3 */
            case 0x79: /* D8h 79h FDIVRf32 f32(r/m) mod=1 reg=7 rm=1      spec: 0xD8 mod/reg/rm /7 mod!=3 */
            case 0x7A: /* D8h 7Ah FDIVRf32 f32(r/m) mod=1 reg=7 rm=2      spec: 0xD8 mod/reg/rm /7 mod!=3 */
            case 0x7B: /* D8h 7Bh FDIVRf32 f32(r/m) mod=1 reg=7 rm=3      spec: 0xD8 mod/reg/rm /7 mod!=3 */
            case 0x7C: /* D8h 7Ch FDIVRf32 f32(r/m) mod=1 reg=7 rm=4      spec: 0xD8 mod/reg/rm /7 mod!=3 */
            case 0x7D: /* D8h 7Dh FDIVRf32 f32(r/m) mod=1 reg=7 rm=5      spec: 0xD8 mod/reg/rm /7 mod!=3 */
            case 0x7E: /* D8h 7Eh FDIVRf32 f32(r/m) mod=1 reg=7 rm=6      spec: 0xD8 mod/reg/rm /7 mod!=3 */
            case 0x7F: /* D8h 7Fh FDIVRf32 f32(r/m) mod=1 reg=7 rm=7      spec: 0xD8 mod/reg/rm /7 mod!=3 */
            case 0xB8: /* D8h B8h FDIVRf32 f32(r/m) mod=2 reg=7 rm=0      spec: 0xD8 mod/reg/rm /7 mod!=3 */
            case 0xB9: /* D8h B9h FDIVRf32 f32(r/m) mod=2 reg=7 rm=1      spec: 0xD8 mod/reg/rm /7 mod!=3 */
            case 0xBA: /* D8h BAh FDIVRf32 f32(r/m) mod=2 reg=7 rm=2      spec: 0xD8 mod/reg/rm /7 mod!=3 */
            case 0xBB: /* D8h BBh FDIVRf32 f32(r/m) mod=2 reg=7 rm=3      spec: 0xD8 mod/reg/rm /7 mod!=3 */
            case 0xBC: /* D8h BCh FDIVRf32 f32(r/m) mod=2 reg=7 rm=4      spec: 0xD8 mod/reg/rm /7 mod!=3 */
            case 0xBD: /* D8h BDh FDIVRf32 f32(r/m) mod=2 reg=7 rm=5      spec: 0xD8 mod/reg/rm /7 mod!=3 */
            case 0xBE: /* D8h BEh FDIVRf32 f32(r/m) mod=2 reg=7 rm=6      spec: 0xD8 mod/reg/rm /7 mod!=3 */
            case 0xBF: /* D8h BFh FDIVRf32 f32(r/m) mod=2 reg=7 rm=7      spec: 0xD8 mod/reg/rm /7 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FDIVRf32 %s",IPDecPrint32(mrm,sib,disp,4,RC_FPUREG,"f32"));
                break;
            case 0xC0: /* D8h C0h FADD st(0),st(r/m) mod=3 reg=0 rm=0      spec: 0xD8 mod/reg/rm /0 mod==3 */
            case 0xC1: /* D8h C1h FADD st(0),st(r/m) mod=3 reg=0 rm=1      spec: 0xD8 mod/reg/rm /0 mod==3 */
            case 0xC2: /* D8h C2h FADD st(0),st(r/m) mod=3 reg=0 rm=2      spec: 0xD8 mod/reg/rm /0 mod==3 */
            case 0xC3: /* D8h C3h FADD st(0),st(r/m) mod=3 reg=0 rm=3      spec: 0xD8 mod/reg/rm /0 mod==3 */
            case 0xC4: /* D8h C4h FADD st(0),st(r/m) mod=3 reg=0 rm=4      spec: 0xD8 mod/reg/rm /0 mod==3 */
            case 0xC5: /* D8h C5h FADD st(0),st(r/m) mod=3 reg=0 rm=5      spec: 0xD8 mod/reg/rm /0 mod==3 */
            case 0xC6: /* D8h C6h FADD st(0),st(r/m) mod=3 reg=0 rm=6      spec: 0xD8 mod/reg/rm /0 mod==3 */
            case 0xC7: /* D8h C7h FADD st(0),st(r/m) mod=3 reg=0 rm=7      spec: 0xD8 mod/reg/rm /0 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FADD ST(%u),%s",0,IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""));
                break;
            case 0xC8: /* D8h C8h FMUL st(0),st(r/m) mod=3 reg=1 rm=0      spec: 0xD8 mod/reg/rm /1 mod==3 */
            case 0xC9: /* D8h C9h FMUL st(0),st(r/m) mod=3 reg=1 rm=1      spec: 0xD8 mod/reg/rm /1 mod==3 */
            case 0xCA: /* D8h CAh FMUL st(0),st(r/m) mod=3 reg=1 rm=2      spec: 0xD8 mod/reg/rm /1 mod==3 */
            case 0xCB: /* D8h CBh FMUL st(0),st(r/m) mod=3 reg=1 rm=3      spec: 0xD8 mod/reg/rm /1 mod==3 */
            case 0xCC: /* D8h CCh FMUL st(0),st(r/m) mod=3 reg=1 rm=4      spec: 0xD8 mod/reg/rm /1 mod==3 */
            case 0xCD: /* D8h CDh FMUL st(0),st(r/m) mod=3 reg=1 rm=5      spec: 0xD8 mod/reg/rm /1 mod==3 */
            case 0xCE: /* D8h CEh FMUL st(0),st(r/m) mod=3 reg=1 rm=6      spec: 0xD8 mod/reg/rm /1 mod==3 */
            case 0xCF: /* D8h CFh FMUL st(0),st(r/m) mod=3 reg=1 rm=7      spec: 0xD8 mod/reg/rm /1 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FMUL ST(%u),%s",0,IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""));
                break;
            case 0xD0: /* D8h D0h FCOM st(0),st(r/m) mod=3 reg=2 rm=0      spec: 0xD8 mod/reg/rm /2 mod==3 */
            case 0xD1: /* D8h D1h FCOM st(0),st(r/m) mod=3 reg=2 rm=1      spec: 0xD8 mod/reg/rm /2 mod==3 */
            case 0xD2: /* D8h D2h FCOM st(0),st(r/m) mod=3 reg=2 rm=2      spec: 0xD8 mod/reg/rm /2 mod==3 */
            case 0xD3: /* D8h D3h FCOM st(0),st(r/m) mod=3 reg=2 rm=3      spec: 0xD8 mod/reg/rm /2 mod==3 */
            case 0xD4: /* D8h D4h FCOM st(0),st(r/m) mod=3 reg=2 rm=4      spec: 0xD8 mod/reg/rm /2 mod==3 */
            case 0xD5: /* D8h D5h FCOM st(0),st(r/m) mod=3 reg=2 rm=5      spec: 0xD8 mod/reg/rm /2 mod==3 */
            case 0xD6: /* D8h D6h FCOM st(0),st(r/m) mod=3 reg=2 rm=6      spec: 0xD8 mod/reg/rm /2 mod==3 */
            case 0xD7: /* D8h D7h FCOM st(0),st(r/m) mod=3 reg=2 rm=7      spec: 0xD8 mod/reg/rm /2 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FCOM ST(%u),%s",0,IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""));
                break;
            case 0xD8: /* D8h D8h FCOMP st(0),st(r/m) mod=3 reg=3 rm=0      spec: 0xD8 mod/reg/rm /3 mod==3 */
            case 0xD9: /* D8h D9h FCOMP st(0),st(r/m) mod=3 reg=3 rm=1      spec: 0xD8 mod/reg/rm /3 mod==3 */
            case 0xDA: /* D8h DAh FCOMP st(0),st(r/m) mod=3 reg=3 rm=2      spec: 0xD8 mod/reg/rm /3 mod==3 */
            case 0xDB: /* D8h DBh FCOMP st(0),st(r/m) mod=3 reg=3 rm=3      spec: 0xD8 mod/reg/rm /3 mod==3 */
            case 0xDC: /* D8h DCh FCOMP st(0),st(r/m) mod=3 reg=3 rm=4      spec: 0xD8 mod/reg/rm /3 mod==3 */
            case 0xDD: /* D8h DDh FCOMP st(0),st(r/m) mod=3 reg=3 rm=5      spec: 0xD8 mod/reg/rm /3 mod==3 */
            case 0xDE: /* D8h DEh FCOMP st(0),st(r/m) mod=3 reg=3 rm=6      spec: 0xD8 mod/reg/rm /3 mod==3 */
            case 0xDF: /* D8h DFh FCOMP st(0),st(r/m) mod=3 reg=3 rm=7      spec: 0xD8 mod/reg/rm /3 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FCOMP ST(%u),%s",0,IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""));
                break;
            case 0xE0: /* D8h E0h FSUB st(0),st(r/m) mod=3 reg=4 rm=0      spec: 0xD8 mod/reg/rm /4 mod==3 */
            case 0xE1: /* D8h E1h FSUB st(0),st(r/m) mod=3 reg=4 rm=1      spec: 0xD8 mod/reg/rm /4 mod==3 */
            case 0xE2: /* D8h E2h FSUB st(0),st(r/m) mod=3 reg=4 rm=2      spec: 0xD8 mod/reg/rm /4 mod==3 */
            case 0xE3: /* D8h E3h FSUB st(0),st(r/m) mod=3 reg=4 rm=3      spec: 0xD8 mod/reg/rm /4 mod==3 */
            case 0xE4: /* D8h E4h FSUB st(0),st(r/m) mod=3 reg=4 rm=4      spec: 0xD8 mod/reg/rm /4 mod==3 */
            case 0xE5: /* D8h E5h FSUB st(0),st(r/m) mod=3 reg=4 rm=5      spec: 0xD8 mod/reg/rm /4 mod==3 */
            case 0xE6: /* D8h E6h FSUB st(0),st(r/m) mod=3 reg=4 rm=6      spec: 0xD8 mod/reg/rm /4 mod==3 */
            case 0xE7: /* D8h E7h FSUB st(0),st(r/m) mod=3 reg=4 rm=7      spec: 0xD8 mod/reg/rm /4 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSUB ST(%u),%s",0,IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""));
                break;
            case 0xE8: /* D8h E8h FSUBR st(0),st(r/m) mod=3 reg=5 rm=0      spec: 0xD8 mod/reg/rm /5 mod==3 */
            case 0xE9: /* D8h E9h FSUBR st(0),st(r/m) mod=3 reg=5 rm=1      spec: 0xD8 mod/reg/rm /5 mod==3 */
            case 0xEA: /* D8h EAh FSUBR st(0),st(r/m) mod=3 reg=5 rm=2      spec: 0xD8 mod/reg/rm /5 mod==3 */
            case 0xEB: /* D8h EBh FSUBR st(0),st(r/m) mod=3 reg=5 rm=3      spec: 0xD8 mod/reg/rm /5 mod==3 */
            case 0xEC: /* D8h ECh FSUBR st(0),st(r/m) mod=3 reg=5 rm=4      spec: 0xD8 mod/reg/rm /5 mod==3 */
            case 0xED: /* D8h EDh FSUBR st(0),st(r/m) mod=3 reg=5 rm=5      spec: 0xD8 mod/reg/rm /5 mod==3 */
            case 0xEE: /* D8h EEh FSUBR st(0),st(r/m) mod=3 reg=5 rm=6      spec: 0xD8 mod/reg/rm /5 mod==3 */
            case 0xEF: /* D8h EFh FSUBR st(0),st(r/m) mod=3 reg=5 rm=7      spec: 0xD8 mod/reg/rm /5 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSUBR ST(%u),%s",0,IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""));
                break;
            case 0xF0: /* D8h F0h FDIV st(0),st(r/m) mod=3 reg=6 rm=0      spec: 0xD8 mod/reg/rm /6 mod==3 */
            case 0xF1: /* D8h F1h FDIV st(0),st(r/m) mod=3 reg=6 rm=1      spec: 0xD8 mod/reg/rm /6 mod==3 */
            case 0xF2: /* D8h F2h FDIV st(0),st(r/m) mod=3 reg=6 rm=2      spec: 0xD8 mod/reg/rm /6 mod==3 */
            case 0xF3: /* D8h F3h FDIV st(0),st(r/m) mod=3 reg=6 rm=3      spec: 0xD8 mod/reg/rm /6 mod==3 */
            case 0xF4: /* D8h F4h FDIV st(0),st(r/m) mod=3 reg=6 rm=4      spec: 0xD8 mod/reg/rm /6 mod==3 */
            case 0xF5: /* D8h F5h FDIV st(0),st(r/m) mod=3 reg=6 rm=5      spec: 0xD8 mod/reg/rm /6 mod==3 */
            case 0xF6: /* D8h F6h FDIV st(0),st(r/m) mod=3 reg=6 rm=6      spec: 0xD8 mod/reg/rm /6 mod==3 */
            case 0xF7: /* D8h F7h FDIV st(0),st(r/m) mod=3 reg=6 rm=7      spec: 0xD8 mod/reg/rm /6 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FDIV ST(%u),%s",0,IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""));
                break;
            case 0xF8: /* D8h F8h FDIVR st(0),st(r/m) mod=3 reg=7 rm=0      spec: 0xD8 mod/reg/rm /7 mod==3 */
            case 0xF9: /* D8h F9h FDIVR st(0),st(r/m) mod=3 reg=7 rm=1      spec: 0xD8 mod/reg/rm /7 mod==3 */
            case 0xFA: /* D8h FAh FDIVR st(0),st(r/m) mod=3 reg=7 rm=2      spec: 0xD8 mod/reg/rm /7 mod==3 */
            case 0xFB: /* D8h FBh FDIVR st(0),st(r/m) mod=3 reg=7 rm=3      spec: 0xD8 mod/reg/rm /7 mod==3 */
            case 0xFC: /* D8h FCh FDIVR st(0),st(r/m) mod=3 reg=7 rm=4      spec: 0xD8 mod/reg/rm /7 mod==3 */
            case 0xFD: /* D8h FDh FDIVR st(0),st(r/m) mod=3 reg=7 rm=5      spec: 0xD8 mod/reg/rm /7 mod==3 */
            case 0xFE: /* D8h FEh FDIVR st(0),st(r/m) mod=3 reg=7 rm=6      spec: 0xD8 mod/reg/rm /7 mod==3 */
            case 0xFF: /* D8h FFh FDIVR st(0),st(r/m) mod=3 reg=7 rm=7      spec: 0xD8 mod/reg/rm /7 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FDIVR ST(%u),%s",0,IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""));
                break;
            default:
                goto _x86decode_illegal_opcode;
        };
/* End of opcodes starting with D8h */
        break;
    case 0xD9: /* D9h        spec:  */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
/* Opcodes starting with D9h */
        switch (mrm.byte) {
            case 0x00: /* D9h 00h FLDf32 f32(r/m) mod=0 reg=0 rm=0      spec: 0xD9 mod/reg/rm /0 mod!=3 */
            case 0x01: /* D9h 01h FLDf32 f32(r/m) mod=0 reg=0 rm=1      spec: 0xD9 mod/reg/rm /0 mod!=3 */
            case 0x02: /* D9h 02h FLDf32 f32(r/m) mod=0 reg=0 rm=2      spec: 0xD9 mod/reg/rm /0 mod!=3 */
            case 0x03: /* D9h 03h FLDf32 f32(r/m) mod=0 reg=0 rm=3      spec: 0xD9 mod/reg/rm /0 mod!=3 */
            case 0x04: /* D9h 04h FLDf32 f32(r/m) mod=0 reg=0 rm=4      spec: 0xD9 mod/reg/rm /0 mod!=3 */
            case 0x05: /* D9h 05h FLDf32 f32(r/m) mod=0 reg=0 rm=5      spec: 0xD9 mod/reg/rm /0 mod!=3 */
            case 0x06: /* D9h 06h FLDf32 f32(r/m) mod=0 reg=0 rm=6      spec: 0xD9 mod/reg/rm /0 mod!=3 */
            case 0x07: /* D9h 07h FLDf32 f32(r/m) mod=0 reg=0 rm=7      spec: 0xD9 mod/reg/rm /0 mod!=3 */
            case 0x40: /* D9h 40h FLDf32 f32(r/m) mod=1 reg=0 rm=0      spec: 0xD9 mod/reg/rm /0 mod!=3 */
            case 0x41: /* D9h 41h FLDf32 f32(r/m) mod=1 reg=0 rm=1      spec: 0xD9 mod/reg/rm /0 mod!=3 */
            case 0x42: /* D9h 42h FLDf32 f32(r/m) mod=1 reg=0 rm=2      spec: 0xD9 mod/reg/rm /0 mod!=3 */
            case 0x43: /* D9h 43h FLDf32 f32(r/m) mod=1 reg=0 rm=3      spec: 0xD9 mod/reg/rm /0 mod!=3 */
            case 0x44: /* D9h 44h FLDf32 f32(r/m) mod=1 reg=0 rm=4      spec: 0xD9 mod/reg/rm /0 mod!=3 */
            case 0x45: /* D9h 45h FLDf32 f32(r/m) mod=1 reg=0 rm=5      spec: 0xD9 mod/reg/rm /0 mod!=3 */
            case 0x46: /* D9h 46h FLDf32 f32(r/m) mod=1 reg=0 rm=6      spec: 0xD9 mod/reg/rm /0 mod!=3 */
            case 0x47: /* D9h 47h FLDf32 f32(r/m) mod=1 reg=0 rm=7      spec: 0xD9 mod/reg/rm /0 mod!=3 */
            case 0x80: /* D9h 80h FLDf32 f32(r/m) mod=2 reg=0 rm=0      spec: 0xD9 mod/reg/rm /0 mod!=3 */
            case 0x81: /* D9h 81h FLDf32 f32(r/m) mod=2 reg=0 rm=1      spec: 0xD9 mod/reg/rm /0 mod!=3 */
            case 0x82: /* D9h 82h FLDf32 f32(r/m) mod=2 reg=0 rm=2      spec: 0xD9 mod/reg/rm /0 mod!=3 */
            case 0x83: /* D9h 83h FLDf32 f32(r/m) mod=2 reg=0 rm=3      spec: 0xD9 mod/reg/rm /0 mod!=3 */
            case 0x84: /* D9h 84h FLDf32 f32(r/m) mod=2 reg=0 rm=4      spec: 0xD9 mod/reg/rm /0 mod!=3 */
            case 0x85: /* D9h 85h FLDf32 f32(r/m) mod=2 reg=0 rm=5      spec: 0xD9 mod/reg/rm /0 mod!=3 */
            case 0x86: /* D9h 86h FLDf32 f32(r/m) mod=2 reg=0 rm=6      spec: 0xD9 mod/reg/rm /0 mod!=3 */
            case 0x87: /* D9h 87h FLDf32 f32(r/m) mod=2 reg=0 rm=7      spec: 0xD9 mod/reg/rm /0 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FLDf32 %s",IPDecPrint32(mrm,sib,disp,4,RC_FPUREG,"f32"));
                break;
            /* opcode D9h 08h  not defined */
            /* opcode D9h 09h  not defined */
            /* opcode D9h 0Ah  not defined */
            /* opcode D9h 0Bh  not defined */
            /* opcode D9h 0Ch  not defined */
            /* opcode D9h 0Dh  not defined */
            /* opcode D9h 0Eh  not defined */
            /* opcode D9h 0Fh  not defined */
            case 0x10: /* D9h 10h FSTf32 f32(r/m) mod=0 reg=2 rm=0      spec: 0xD9 mod/reg/rm /2 mod!=3 */
            case 0x11: /* D9h 11h FSTf32 f32(r/m) mod=0 reg=2 rm=1      spec: 0xD9 mod/reg/rm /2 mod!=3 */
            case 0x12: /* D9h 12h FSTf32 f32(r/m) mod=0 reg=2 rm=2      spec: 0xD9 mod/reg/rm /2 mod!=3 */
            case 0x13: /* D9h 13h FSTf32 f32(r/m) mod=0 reg=2 rm=3      spec: 0xD9 mod/reg/rm /2 mod!=3 */
            case 0x14: /* D9h 14h FSTf32 f32(r/m) mod=0 reg=2 rm=4      spec: 0xD9 mod/reg/rm /2 mod!=3 */
            case 0x15: /* D9h 15h FSTf32 f32(r/m) mod=0 reg=2 rm=5      spec: 0xD9 mod/reg/rm /2 mod!=3 */
            case 0x16: /* D9h 16h FSTf32 f32(r/m) mod=0 reg=2 rm=6      spec: 0xD9 mod/reg/rm /2 mod!=3 */
            case 0x17: /* D9h 17h FSTf32 f32(r/m) mod=0 reg=2 rm=7      spec: 0xD9 mod/reg/rm /2 mod!=3 */
            case 0x50: /* D9h 50h FSTf32 f32(r/m) mod=1 reg=2 rm=0      spec: 0xD9 mod/reg/rm /2 mod!=3 */
            case 0x51: /* D9h 51h FSTf32 f32(r/m) mod=1 reg=2 rm=1      spec: 0xD9 mod/reg/rm /2 mod!=3 */
            case 0x52: /* D9h 52h FSTf32 f32(r/m) mod=1 reg=2 rm=2      spec: 0xD9 mod/reg/rm /2 mod!=3 */
            case 0x53: /* D9h 53h FSTf32 f32(r/m) mod=1 reg=2 rm=3      spec: 0xD9 mod/reg/rm /2 mod!=3 */
            case 0x54: /* D9h 54h FSTf32 f32(r/m) mod=1 reg=2 rm=4      spec: 0xD9 mod/reg/rm /2 mod!=3 */
            case 0x55: /* D9h 55h FSTf32 f32(r/m) mod=1 reg=2 rm=5      spec: 0xD9 mod/reg/rm /2 mod!=3 */
            case 0x56: /* D9h 56h FSTf32 f32(r/m) mod=1 reg=2 rm=6      spec: 0xD9 mod/reg/rm /2 mod!=3 */
            case 0x57: /* D9h 57h FSTf32 f32(r/m) mod=1 reg=2 rm=7      spec: 0xD9 mod/reg/rm /2 mod!=3 */
            case 0x90: /* D9h 90h FSTf32 f32(r/m) mod=2 reg=2 rm=0      spec: 0xD9 mod/reg/rm /2 mod!=3 */
            case 0x91: /* D9h 91h FSTf32 f32(r/m) mod=2 reg=2 rm=1      spec: 0xD9 mod/reg/rm /2 mod!=3 */
            case 0x92: /* D9h 92h FSTf32 f32(r/m) mod=2 reg=2 rm=2      spec: 0xD9 mod/reg/rm /2 mod!=3 */
            case 0x93: /* D9h 93h FSTf32 f32(r/m) mod=2 reg=2 rm=3      spec: 0xD9 mod/reg/rm /2 mod!=3 */
            case 0x94: /* D9h 94h FSTf32 f32(r/m) mod=2 reg=2 rm=4      spec: 0xD9 mod/reg/rm /2 mod!=3 */
            case 0x95: /* D9h 95h FSTf32 f32(r/m) mod=2 reg=2 rm=5      spec: 0xD9 mod/reg/rm /2 mod!=3 */
            case 0x96: /* D9h 96h FSTf32 f32(r/m) mod=2 reg=2 rm=6      spec: 0xD9 mod/reg/rm /2 mod!=3 */
            case 0x97: /* D9h 97h FSTf32 f32(r/m) mod=2 reg=2 rm=7      spec: 0xD9 mod/reg/rm /2 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSTf32 %s",IPDecPrint32(mrm,sib,disp,4,RC_FPUREG,"f32"));
                break;
            case 0x18: /* D9h 18h FSTPf32 f32(r/m) mod=0 reg=3 rm=0      spec: 0xD9 mod/reg/rm /3 mod!=3 */
            case 0x19: /* D9h 19h FSTPf32 f32(r/m) mod=0 reg=3 rm=1      spec: 0xD9 mod/reg/rm /3 mod!=3 */
            case 0x1A: /* D9h 1Ah FSTPf32 f32(r/m) mod=0 reg=3 rm=2      spec: 0xD9 mod/reg/rm /3 mod!=3 */
            case 0x1B: /* D9h 1Bh FSTPf32 f32(r/m) mod=0 reg=3 rm=3      spec: 0xD9 mod/reg/rm /3 mod!=3 */
            case 0x1C: /* D9h 1Ch FSTPf32 f32(r/m) mod=0 reg=3 rm=4      spec: 0xD9 mod/reg/rm /3 mod!=3 */
            case 0x1D: /* D9h 1Dh FSTPf32 f32(r/m) mod=0 reg=3 rm=5      spec: 0xD9 mod/reg/rm /3 mod!=3 */
            case 0x1E: /* D9h 1Eh FSTPf32 f32(r/m) mod=0 reg=3 rm=6      spec: 0xD9 mod/reg/rm /3 mod!=3 */
            case 0x1F: /* D9h 1Fh FSTPf32 f32(r/m) mod=0 reg=3 rm=7      spec: 0xD9 mod/reg/rm /3 mod!=3 */
            case 0x58: /* D9h 58h FSTPf32 f32(r/m) mod=1 reg=3 rm=0      spec: 0xD9 mod/reg/rm /3 mod!=3 */
            case 0x59: /* D9h 59h FSTPf32 f32(r/m) mod=1 reg=3 rm=1      spec: 0xD9 mod/reg/rm /3 mod!=3 */
            case 0x5A: /* D9h 5Ah FSTPf32 f32(r/m) mod=1 reg=3 rm=2      spec: 0xD9 mod/reg/rm /3 mod!=3 */
            case 0x5B: /* D9h 5Bh FSTPf32 f32(r/m) mod=1 reg=3 rm=3      spec: 0xD9 mod/reg/rm /3 mod!=3 */
            case 0x5C: /* D9h 5Ch FSTPf32 f32(r/m) mod=1 reg=3 rm=4      spec: 0xD9 mod/reg/rm /3 mod!=3 */
            case 0x5D: /* D9h 5Dh FSTPf32 f32(r/m) mod=1 reg=3 rm=5      spec: 0xD9 mod/reg/rm /3 mod!=3 */
            case 0x5E: /* D9h 5Eh FSTPf32 f32(r/m) mod=1 reg=3 rm=6      spec: 0xD9 mod/reg/rm /3 mod!=3 */
            case 0x5F: /* D9h 5Fh FSTPf32 f32(r/m) mod=1 reg=3 rm=7      spec: 0xD9 mod/reg/rm /3 mod!=3 */
            case 0x98: /* D9h 98h FSTPf32 f32(r/m) mod=2 reg=3 rm=0      spec: 0xD9 mod/reg/rm /3 mod!=3 */
            case 0x99: /* D9h 99h FSTPf32 f32(r/m) mod=2 reg=3 rm=1      spec: 0xD9 mod/reg/rm /3 mod!=3 */
            case 0x9A: /* D9h 9Ah FSTPf32 f32(r/m) mod=2 reg=3 rm=2      spec: 0xD9 mod/reg/rm /3 mod!=3 */
            case 0x9B: /* D9h 9Bh FSTPf32 f32(r/m) mod=2 reg=3 rm=3      spec: 0xD9 mod/reg/rm /3 mod!=3 */
            case 0x9C: /* D9h 9Ch FSTPf32 f32(r/m) mod=2 reg=3 rm=4      spec: 0xD9 mod/reg/rm /3 mod!=3 */
            case 0x9D: /* D9h 9Dh FSTPf32 f32(r/m) mod=2 reg=3 rm=5      spec: 0xD9 mod/reg/rm /3 mod!=3 */
            case 0x9E: /* D9h 9Eh FSTPf32 f32(r/m) mod=2 reg=3 rm=6      spec: 0xD9 mod/reg/rm /3 mod!=3 */
            case 0x9F: /* D9h 9Fh FSTPf32 f32(r/m) mod=2 reg=3 rm=7      spec: 0xD9 mod/reg/rm /3 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSTPf32 %s",IPDecPrint32(mrm,sib,disp,4,RC_FPUREG,"f32"));
                break;
            case 0x20: /* D9h 20h FLDENV fenv(r/m) mod=0 reg=4 rm=0      spec: 0xD9 mod/reg/rm /4 mod!=3 */
            case 0x21: /* D9h 21h FLDENV fenv(r/m) mod=0 reg=4 rm=1      spec: 0xD9 mod/reg/rm /4 mod!=3 */
            case 0x22: /* D9h 22h FLDENV fenv(r/m) mod=0 reg=4 rm=2      spec: 0xD9 mod/reg/rm /4 mod!=3 */
            case 0x23: /* D9h 23h FLDENV fenv(r/m) mod=0 reg=4 rm=3      spec: 0xD9 mod/reg/rm /4 mod!=3 */
            case 0x24: /* D9h 24h FLDENV fenv(r/m) mod=0 reg=4 rm=4      spec: 0xD9 mod/reg/rm /4 mod!=3 */
            case 0x25: /* D9h 25h FLDENV fenv(r/m) mod=0 reg=4 rm=5      spec: 0xD9 mod/reg/rm /4 mod!=3 */
            case 0x26: /* D9h 26h FLDENV fenv(r/m) mod=0 reg=4 rm=6      spec: 0xD9 mod/reg/rm /4 mod!=3 */
            case 0x27: /* D9h 27h FLDENV fenv(r/m) mod=0 reg=4 rm=7      spec: 0xD9 mod/reg/rm /4 mod!=3 */
            case 0x60: /* D9h 60h FLDENV fenv(r/m) mod=1 reg=4 rm=0      spec: 0xD9 mod/reg/rm /4 mod!=3 */
            case 0x61: /* D9h 61h FLDENV fenv(r/m) mod=1 reg=4 rm=1      spec: 0xD9 mod/reg/rm /4 mod!=3 */
            case 0x62: /* D9h 62h FLDENV fenv(r/m) mod=1 reg=4 rm=2      spec: 0xD9 mod/reg/rm /4 mod!=3 */
            case 0x63: /* D9h 63h FLDENV fenv(r/m) mod=1 reg=4 rm=3      spec: 0xD9 mod/reg/rm /4 mod!=3 */
            case 0x64: /* D9h 64h FLDENV fenv(r/m) mod=1 reg=4 rm=4      spec: 0xD9 mod/reg/rm /4 mod!=3 */
            case 0x65: /* D9h 65h FLDENV fenv(r/m) mod=1 reg=4 rm=5      spec: 0xD9 mod/reg/rm /4 mod!=3 */
            case 0x66: /* D9h 66h FLDENV fenv(r/m) mod=1 reg=4 rm=6      spec: 0xD9 mod/reg/rm /4 mod!=3 */
            case 0x67: /* D9h 67h FLDENV fenv(r/m) mod=1 reg=4 rm=7      spec: 0xD9 mod/reg/rm /4 mod!=3 */
            case 0xA0: /* D9h A0h FLDENV fenv(r/m) mod=2 reg=4 rm=0      spec: 0xD9 mod/reg/rm /4 mod!=3 */
            case 0xA1: /* D9h A1h FLDENV fenv(r/m) mod=2 reg=4 rm=1      spec: 0xD9 mod/reg/rm /4 mod!=3 */
            case 0xA2: /* D9h A2h FLDENV fenv(r/m) mod=2 reg=4 rm=2      spec: 0xD9 mod/reg/rm /4 mod!=3 */
            case 0xA3: /* D9h A3h FLDENV fenv(r/m) mod=2 reg=4 rm=3      spec: 0xD9 mod/reg/rm /4 mod!=3 */
            case 0xA4: /* D9h A4h FLDENV fenv(r/m) mod=2 reg=4 rm=4      spec: 0xD9 mod/reg/rm /4 mod!=3 */
            case 0xA5: /* D9h A5h FLDENV fenv(r/m) mod=2 reg=4 rm=5      spec: 0xD9 mod/reg/rm /4 mod!=3 */
            case 0xA6: /* D9h A6h FLDENV fenv(r/m) mod=2 reg=4 rm=6      spec: 0xD9 mod/reg/rm /4 mod!=3 */
            case 0xA7: /* D9h A7h FLDENV fenv(r/m) mod=2 reg=4 rm=7      spec: 0xD9 mod/reg/rm /4 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FLDENV %s",IPDecPrint32(mrm,sib,disp,0,RC_REG,"fenv"));
                break;
            case 0x28: /* D9h 28h FLDCW w16(r/m) mod=0 reg=5 rm=0      spec: 0xD9 mod/reg/rm /5 mod!=3 */
            case 0x29: /* D9h 29h FLDCW w16(r/m) mod=0 reg=5 rm=1      spec: 0xD9 mod/reg/rm /5 mod!=3 */
            case 0x2A: /* D9h 2Ah FLDCW w16(r/m) mod=0 reg=5 rm=2      spec: 0xD9 mod/reg/rm /5 mod!=3 */
            case 0x2B: /* D9h 2Bh FLDCW w16(r/m) mod=0 reg=5 rm=3      spec: 0xD9 mod/reg/rm /5 mod!=3 */
            case 0x2C: /* D9h 2Ch FLDCW w16(r/m) mod=0 reg=5 rm=4      spec: 0xD9 mod/reg/rm /5 mod!=3 */
            case 0x2D: /* D9h 2Dh FLDCW w16(r/m) mod=0 reg=5 rm=5      spec: 0xD9 mod/reg/rm /5 mod!=3 */
            case 0x2E: /* D9h 2Eh FLDCW w16(r/m) mod=0 reg=5 rm=6      spec: 0xD9 mod/reg/rm /5 mod!=3 */
            case 0x2F: /* D9h 2Fh FLDCW w16(r/m) mod=0 reg=5 rm=7      spec: 0xD9 mod/reg/rm /5 mod!=3 */
            case 0x68: /* D9h 68h FLDCW w16(r/m) mod=1 reg=5 rm=0      spec: 0xD9 mod/reg/rm /5 mod!=3 */
            case 0x69: /* D9h 69h FLDCW w16(r/m) mod=1 reg=5 rm=1      spec: 0xD9 mod/reg/rm /5 mod!=3 */
            case 0x6A: /* D9h 6Ah FLDCW w16(r/m) mod=1 reg=5 rm=2      spec: 0xD9 mod/reg/rm /5 mod!=3 */
            case 0x6B: /* D9h 6Bh FLDCW w16(r/m) mod=1 reg=5 rm=3      spec: 0xD9 mod/reg/rm /5 mod!=3 */
            case 0x6C: /* D9h 6Ch FLDCW w16(r/m) mod=1 reg=5 rm=4      spec: 0xD9 mod/reg/rm /5 mod!=3 */
            case 0x6D: /* D9h 6Dh FLDCW w16(r/m) mod=1 reg=5 rm=5      spec: 0xD9 mod/reg/rm /5 mod!=3 */
            case 0x6E: /* D9h 6Eh FLDCW w16(r/m) mod=1 reg=5 rm=6      spec: 0xD9 mod/reg/rm /5 mod!=3 */
            case 0x6F: /* D9h 6Fh FLDCW w16(r/m) mod=1 reg=5 rm=7      spec: 0xD9 mod/reg/rm /5 mod!=3 */
            case 0xA8: /* D9h A8h FLDCW w16(r/m) mod=2 reg=5 rm=0      spec: 0xD9 mod/reg/rm /5 mod!=3 */
            case 0xA9: /* D9h A9h FLDCW w16(r/m) mod=2 reg=5 rm=1      spec: 0xD9 mod/reg/rm /5 mod!=3 */
            case 0xAA: /* D9h AAh FLDCW w16(r/m) mod=2 reg=5 rm=2      spec: 0xD9 mod/reg/rm /5 mod!=3 */
            case 0xAB: /* D9h ABh FLDCW w16(r/m) mod=2 reg=5 rm=3      spec: 0xD9 mod/reg/rm /5 mod!=3 */
            case 0xAC: /* D9h ACh FLDCW w16(r/m) mod=2 reg=5 rm=4      spec: 0xD9 mod/reg/rm /5 mod!=3 */
            case 0xAD: /* D9h ADh FLDCW w16(r/m) mod=2 reg=5 rm=5      spec: 0xD9 mod/reg/rm /5 mod!=3 */
            case 0xAE: /* D9h AEh FLDCW w16(r/m) mod=2 reg=5 rm=6      spec: 0xD9 mod/reg/rm /5 mod!=3 */
            case 0xAF: /* D9h AFh FLDCW w16(r/m) mod=2 reg=5 rm=7      spec: 0xD9 mod/reg/rm /5 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FLDCW %s",IPDecPrint32(mrm,sib,disp,2,RC_REG,"w16"));
                break;
            case 0x30: /* D9h 30h FSTENV fenv(r/m) mod=0 reg=6 rm=0      spec: 0xD9 mod/reg/rm /6 mod!=3 */
            case 0x31: /* D9h 31h FSTENV fenv(r/m) mod=0 reg=6 rm=1      spec: 0xD9 mod/reg/rm /6 mod!=3 */
            case 0x32: /* D9h 32h FSTENV fenv(r/m) mod=0 reg=6 rm=2      spec: 0xD9 mod/reg/rm /6 mod!=3 */
            case 0x33: /* D9h 33h FSTENV fenv(r/m) mod=0 reg=6 rm=3      spec: 0xD9 mod/reg/rm /6 mod!=3 */
            case 0x34: /* D9h 34h FSTENV fenv(r/m) mod=0 reg=6 rm=4      spec: 0xD9 mod/reg/rm /6 mod!=3 */
            case 0x35: /* D9h 35h FSTENV fenv(r/m) mod=0 reg=6 rm=5      spec: 0xD9 mod/reg/rm /6 mod!=3 */
            case 0x36: /* D9h 36h FSTENV fenv(r/m) mod=0 reg=6 rm=6      spec: 0xD9 mod/reg/rm /6 mod!=3 */
            case 0x37: /* D9h 37h FSTENV fenv(r/m) mod=0 reg=6 rm=7      spec: 0xD9 mod/reg/rm /6 mod!=3 */
            case 0x70: /* D9h 70h FSTENV fenv(r/m) mod=1 reg=6 rm=0      spec: 0xD9 mod/reg/rm /6 mod!=3 */
            case 0x71: /* D9h 71h FSTENV fenv(r/m) mod=1 reg=6 rm=1      spec: 0xD9 mod/reg/rm /6 mod!=3 */
            case 0x72: /* D9h 72h FSTENV fenv(r/m) mod=1 reg=6 rm=2      spec: 0xD9 mod/reg/rm /6 mod!=3 */
            case 0x73: /* D9h 73h FSTENV fenv(r/m) mod=1 reg=6 rm=3      spec: 0xD9 mod/reg/rm /6 mod!=3 */
            case 0x74: /* D9h 74h FSTENV fenv(r/m) mod=1 reg=6 rm=4      spec: 0xD9 mod/reg/rm /6 mod!=3 */
            case 0x75: /* D9h 75h FSTENV fenv(r/m) mod=1 reg=6 rm=5      spec: 0xD9 mod/reg/rm /6 mod!=3 */
            case 0x76: /* D9h 76h FSTENV fenv(r/m) mod=1 reg=6 rm=6      spec: 0xD9 mod/reg/rm /6 mod!=3 */
            case 0x77: /* D9h 77h FSTENV fenv(r/m) mod=1 reg=6 rm=7      spec: 0xD9 mod/reg/rm /6 mod!=3 */
            case 0xB0: /* D9h B0h FSTENV fenv(r/m) mod=2 reg=6 rm=0      spec: 0xD9 mod/reg/rm /6 mod!=3 */
            case 0xB1: /* D9h B1h FSTENV fenv(r/m) mod=2 reg=6 rm=1      spec: 0xD9 mod/reg/rm /6 mod!=3 */
            case 0xB2: /* D9h B2h FSTENV fenv(r/m) mod=2 reg=6 rm=2      spec: 0xD9 mod/reg/rm /6 mod!=3 */
            case 0xB3: /* D9h B3h FSTENV fenv(r/m) mod=2 reg=6 rm=3      spec: 0xD9 mod/reg/rm /6 mod!=3 */
            case 0xB4: /* D9h B4h FSTENV fenv(r/m) mod=2 reg=6 rm=4      spec: 0xD9 mod/reg/rm /6 mod!=3 */
            case 0xB5: /* D9h B5h FSTENV fenv(r/m) mod=2 reg=6 rm=5      spec: 0xD9 mod/reg/rm /6 mod!=3 */
            case 0xB6: /* D9h B6h FSTENV fenv(r/m) mod=2 reg=6 rm=6      spec: 0xD9 mod/reg/rm /6 mod!=3 */
            case 0xB7: /* D9h B7h FSTENV fenv(r/m) mod=2 reg=6 rm=7      spec: 0xD9 mod/reg/rm /6 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSTENV %s",IPDecPrint32(mrm,sib,disp,0,RC_REG,"fenv"));
                break;
            case 0x38: /* D9h 38h FSTCW w16(r/m) mod=0 reg=7 rm=0      spec: 0xD9 mod/reg/rm /7 mod!=3 */
            case 0x39: /* D9h 39h FSTCW w16(r/m) mod=0 reg=7 rm=1      spec: 0xD9 mod/reg/rm /7 mod!=3 */
            case 0x3A: /* D9h 3Ah FSTCW w16(r/m) mod=0 reg=7 rm=2      spec: 0xD9 mod/reg/rm /7 mod!=3 */
            case 0x3B: /* D9h 3Bh FSTCW w16(r/m) mod=0 reg=7 rm=3      spec: 0xD9 mod/reg/rm /7 mod!=3 */
            case 0x3C: /* D9h 3Ch FSTCW w16(r/m) mod=0 reg=7 rm=4      spec: 0xD9 mod/reg/rm /7 mod!=3 */
            case 0x3D: /* D9h 3Dh FSTCW w16(r/m) mod=0 reg=7 rm=5      spec: 0xD9 mod/reg/rm /7 mod!=3 */
            case 0x3E: /* D9h 3Eh FSTCW w16(r/m) mod=0 reg=7 rm=6      spec: 0xD9 mod/reg/rm /7 mod!=3 */
            case 0x3F: /* D9h 3Fh FSTCW w16(r/m) mod=0 reg=7 rm=7      spec: 0xD9 mod/reg/rm /7 mod!=3 */
            case 0x78: /* D9h 78h FSTCW w16(r/m) mod=1 reg=7 rm=0      spec: 0xD9 mod/reg/rm /7 mod!=3 */
            case 0x79: /* D9h 79h FSTCW w16(r/m) mod=1 reg=7 rm=1      spec: 0xD9 mod/reg/rm /7 mod!=3 */
            case 0x7A: /* D9h 7Ah FSTCW w16(r/m) mod=1 reg=7 rm=2      spec: 0xD9 mod/reg/rm /7 mod!=3 */
            case 0x7B: /* D9h 7Bh FSTCW w16(r/m) mod=1 reg=7 rm=3      spec: 0xD9 mod/reg/rm /7 mod!=3 */
            case 0x7C: /* D9h 7Ch FSTCW w16(r/m) mod=1 reg=7 rm=4      spec: 0xD9 mod/reg/rm /7 mod!=3 */
            case 0x7D: /* D9h 7Dh FSTCW w16(r/m) mod=1 reg=7 rm=5      spec: 0xD9 mod/reg/rm /7 mod!=3 */
            case 0x7E: /* D9h 7Eh FSTCW w16(r/m) mod=1 reg=7 rm=6      spec: 0xD9 mod/reg/rm /7 mod!=3 */
            case 0x7F: /* D9h 7Fh FSTCW w16(r/m) mod=1 reg=7 rm=7      spec: 0xD9 mod/reg/rm /7 mod!=3 */
            case 0xB8: /* D9h B8h FSTCW w16(r/m) mod=2 reg=7 rm=0      spec: 0xD9 mod/reg/rm /7 mod!=3 */
            case 0xB9: /* D9h B9h FSTCW w16(r/m) mod=2 reg=7 rm=1      spec: 0xD9 mod/reg/rm /7 mod!=3 */
            case 0xBA: /* D9h BAh FSTCW w16(r/m) mod=2 reg=7 rm=2      spec: 0xD9 mod/reg/rm /7 mod!=3 */
            case 0xBB: /* D9h BBh FSTCW w16(r/m) mod=2 reg=7 rm=3      spec: 0xD9 mod/reg/rm /7 mod!=3 */
            case 0xBC: /* D9h BCh FSTCW w16(r/m) mod=2 reg=7 rm=4      spec: 0xD9 mod/reg/rm /7 mod!=3 */
            case 0xBD: /* D9h BDh FSTCW w16(r/m) mod=2 reg=7 rm=5      spec: 0xD9 mod/reg/rm /7 mod!=3 */
            case 0xBE: /* D9h BEh FSTCW w16(r/m) mod=2 reg=7 rm=6      spec: 0xD9 mod/reg/rm /7 mod!=3 */
            case 0xBF: /* D9h BFh FSTCW w16(r/m) mod=2 reg=7 rm=7      spec: 0xD9 mod/reg/rm /7 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSTCW %s",IPDecPrint32(mrm,sib,disp,2,RC_REG,"w16"));
                break;
            /* opcode D9h 48h  not defined */
            /* opcode D9h 49h  not defined */
            /* opcode D9h 4Ah  not defined */
            /* opcode D9h 4Bh  not defined */
            /* opcode D9h 4Ch  not defined */
            /* opcode D9h 4Dh  not defined */
            /* opcode D9h 4Eh  not defined */
            /* opcode D9h 4Fh  not defined */
            /* opcode D9h 88h  not defined */
            /* opcode D9h 89h  not defined */
            /* opcode D9h 8Ah  not defined */
            /* opcode D9h 8Bh  not defined */
            /* opcode D9h 8Ch  not defined */
            /* opcode D9h 8Dh  not defined */
            /* opcode D9h 8Eh  not defined */
            /* opcode D9h 8Fh  not defined */
            case 0xC0: /* D9h C0h FLD st(0),st(r/m) mod=3 reg=0 rm=0      spec: 0xD9 mod/reg/rm /0 mod==3 */
            case 0xC1: /* D9h C1h FLD st(0),st(r/m) mod=3 reg=0 rm=1      spec: 0xD9 mod/reg/rm /0 mod==3 */
            case 0xC2: /* D9h C2h FLD st(0),st(r/m) mod=3 reg=0 rm=2      spec: 0xD9 mod/reg/rm /0 mod==3 */
            case 0xC3: /* D9h C3h FLD st(0),st(r/m) mod=3 reg=0 rm=3      spec: 0xD9 mod/reg/rm /0 mod==3 */
            case 0xC4: /* D9h C4h FLD st(0),st(r/m) mod=3 reg=0 rm=4      spec: 0xD9 mod/reg/rm /0 mod==3 */
            case 0xC5: /* D9h C5h FLD st(0),st(r/m) mod=3 reg=0 rm=5      spec: 0xD9 mod/reg/rm /0 mod==3 */
            case 0xC6: /* D9h C6h FLD st(0),st(r/m) mod=3 reg=0 rm=6      spec: 0xD9 mod/reg/rm /0 mod==3 */
            case 0xC7: /* D9h C7h FLD st(0),st(r/m) mod=3 reg=0 rm=7      spec: 0xD9 mod/reg/rm /0 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FLD ST(%u),%s",0,IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""));
                break;
            case 0xC8: /* D9h C8h FXCH st(r/m) mod=3 reg=1 rm=0      spec: 0xD9 mod/reg/rm /1 mod==3 */
            case 0xC9: /* D9h C9h FXCH st(r/m) mod=3 reg=1 rm=1      spec: 0xD9 mod/reg/rm /1 mod==3 */
            case 0xCA: /* D9h CAh FXCH st(r/m) mod=3 reg=1 rm=2      spec: 0xD9 mod/reg/rm /1 mod==3 */
            case 0xCB: /* D9h CBh FXCH st(r/m) mod=3 reg=1 rm=3      spec: 0xD9 mod/reg/rm /1 mod==3 */
            case 0xCC: /* D9h CCh FXCH st(r/m) mod=3 reg=1 rm=4      spec: 0xD9 mod/reg/rm /1 mod==3 */
            case 0xCD: /* D9h CDh FXCH st(r/m) mod=3 reg=1 rm=5      spec: 0xD9 mod/reg/rm /1 mod==3 */
            case 0xCE: /* D9h CEh FXCH st(r/m) mod=3 reg=1 rm=6      spec: 0xD9 mod/reg/rm /1 mod==3 */
            case 0xCF: /* D9h CFh FXCH st(r/m) mod=3 reg=1 rm=7      spec: 0xD9 mod/reg/rm /1 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FXCH %s",IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""));
                break;
            case 0xD0: /* D9h D0h FNOP  mod=3 reg=2 rm=0      spec: 0xD9 0xD0 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FNOP");
                break;
            /* opcode D9h D1h  not defined */
            /* opcode D9h D2h  not defined */
            /* opcode D9h D3h  not defined */
            /* opcode D9h D4h  not defined */
            /* opcode D9h D5h  not defined */
            /* opcode D9h D6h  not defined */
            /* opcode D9h D7h  not defined */
            /* opcode D9h D8h  not defined */
            /* opcode D9h D9h  not defined */
            /* opcode D9h DAh  not defined */
            /* opcode D9h DBh  not defined */
            /* opcode D9h DCh  not defined */
            /* opcode D9h DDh  not defined */
            /* opcode D9h DEh  not defined */
            /* opcode D9h DFh  not defined */
            case 0xE0: /* D9h E0h FCHS  mod=3 reg=4 rm=0      spec: 0xD9 0xE0 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FCHS");
                break;
            case 0xE1: /* D9h E1h FABS  mod=3 reg=4 rm=1      spec: 0xD9 0xE1 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FABS");
                break;
            /* opcode D9h E2h  not defined */
            /* opcode D9h E3h  not defined */
            case 0xE4: /* D9h E4h FTST  mod=3 reg=4 rm=4      spec: 0xD9 0xE4 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FTST");
                break;
            case 0xE5: /* D9h E5h FXAM  mod=3 reg=4 rm=5      spec: 0xD9 0xE5 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FXAM");
                break;
            /* opcode D9h E6h  not defined */
            /* opcode D9h E7h  not defined */
            case 0xE8: /* D9h E8h FLD1  mod=3 reg=5 rm=0      spec: 0xD9 0xE8 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FLD1");
                break;
            case 0xE9: /* D9h E9h FLD2L2T  mod=3 reg=5 rm=1      spec: 0xD9 0xE9 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FLD2L2T");
                break;
            case 0xEA: /* D9h EAh FLD2L2E  mod=3 reg=5 rm=2      spec: 0xD9 0xEA */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FLD2L2E");
                break;
            case 0xEB: /* D9h EBh FLDPI  mod=3 reg=5 rm=3      spec: 0xD9 0xEB */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FLDPI");
                break;
            case 0xEC: /* D9h ECh FLDLG2  mod=3 reg=5 rm=4      spec: 0xD9 0xEC */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FLDLG2");
                break;
            case 0xED: /* D9h EDh FLDLN2  mod=3 reg=5 rm=5      spec: 0xD9 0xED */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FLDLN2");
                break;
            case 0xEE: /* D9h EEh FLDZ  mod=3 reg=5 rm=6      spec: 0xD9 0xEE */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FLDZ");
                break;
            /* opcode D9h EFh  not defined */
            case 0xF0: /* D9h F0h F2XM1  mod=3 reg=6 rm=0      spec: 0xD9 0xF0 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"F2XM1");
                break;
            case 0xF1: /* D9h F1h FYL2X  mod=3 reg=6 rm=1      spec: 0xD9 0xF1 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FYL2X");
                break;
            case 0xF2: /* D9h F2h FPTAN  mod=3 reg=6 rm=2      spec: 0xD9 0xF2 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FPTAN");
                break;
            case 0xF3: /* D9h F3h FPATAN  mod=3 reg=6 rm=3      spec: 0xD9 0xF3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FPATAN");
                break;
            case 0xF4: /* D9h F4h FXTRACT  mod=3 reg=6 rm=4      spec: 0xD9 0xF4 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FXTRACT");
                break;
            case 0xF5: /* D9h F5h FPREM1  mod=3 reg=6 rm=5      spec: 0xD9 0xF5 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FPREM1");
                break;
            case 0xF6: /* D9h F6h FDECSTP  mod=3 reg=6 rm=6      spec: 0xD9 0xF6 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FDECSTP");
                break;
            case 0xF7: /* D9h F7h FINCSTP  mod=3 reg=6 rm=7      spec: 0xD9 0xF7 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FINCSTP");
                break;
            case 0xF8: /* D9h F8h FPREM  mod=3 reg=7 rm=0      spec: 0xD9 0xF8 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FPREM");
                break;
            case 0xF9: /* D9h F9h FYL2XP1  mod=3 reg=7 rm=1      spec: 0xD9 0xF9 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FYL2XP1");
                break;
            case 0xFA: /* D9h FAh FSQRT  mod=3 reg=7 rm=2      spec: 0xD9 0xFA */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSQRT");
                break;
            case 0xFB: /* D9h FBh FSINCOS  mod=3 reg=7 rm=3      spec: 0xD9 0xFB */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSINCOS");
                break;
            case 0xFC: /* D9h FCh FRNDINT  mod=3 reg=7 rm=4      spec: 0xD9 0xFC */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FRNDINT");
                break;
            case 0xFD: /* D9h FDh FSCALE  mod=3 reg=7 rm=5      spec: 0xD9 0xFD */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSCALE");
                break;
            case 0xFE: /* D9h FEh FSIN  mod=3 reg=7 rm=6      spec: 0xD9 0xFE */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSIN");
                break;
            case 0xFF: /* D9h FFh FCOS  mod=3 reg=7 rm=7      spec: 0xD9 0xFF */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FCOS");
                break;
            default:
                goto _x86decode_illegal_opcode;
        };
/* End of opcodes starting with D9h */
        break;
    case 0xDA: /* DAh        spec:  */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
/* Opcodes starting with DAh */
        switch (mrm.byte) {
            case 0x00: /* DAh 00h FADDd w32(r/m) mod=0 reg=0 rm=0      spec: 0xDA mod/reg/rm /0 mod!=3 */
            case 0x01: /* DAh 01h FADDd w32(r/m) mod=0 reg=0 rm=1      spec: 0xDA mod/reg/rm /0 mod!=3 */
            case 0x02: /* DAh 02h FADDd w32(r/m) mod=0 reg=0 rm=2      spec: 0xDA mod/reg/rm /0 mod!=3 */
            case 0x03: /* DAh 03h FADDd w32(r/m) mod=0 reg=0 rm=3      spec: 0xDA mod/reg/rm /0 mod!=3 */
            case 0x04: /* DAh 04h FADDd w32(r/m) mod=0 reg=0 rm=4      spec: 0xDA mod/reg/rm /0 mod!=3 */
            case 0x05: /* DAh 05h FADDd w32(r/m) mod=0 reg=0 rm=5      spec: 0xDA mod/reg/rm /0 mod!=3 */
            case 0x06: /* DAh 06h FADDd w32(r/m) mod=0 reg=0 rm=6      spec: 0xDA mod/reg/rm /0 mod!=3 */
            case 0x07: /* DAh 07h FADDd w32(r/m) mod=0 reg=0 rm=7      spec: 0xDA mod/reg/rm /0 mod!=3 */
            case 0x40: /* DAh 40h FADDd w32(r/m) mod=1 reg=0 rm=0      spec: 0xDA mod/reg/rm /0 mod!=3 */
            case 0x41: /* DAh 41h FADDd w32(r/m) mod=1 reg=0 rm=1      spec: 0xDA mod/reg/rm /0 mod!=3 */
            case 0x42: /* DAh 42h FADDd w32(r/m) mod=1 reg=0 rm=2      spec: 0xDA mod/reg/rm /0 mod!=3 */
            case 0x43: /* DAh 43h FADDd w32(r/m) mod=1 reg=0 rm=3      spec: 0xDA mod/reg/rm /0 mod!=3 */
            case 0x44: /* DAh 44h FADDd w32(r/m) mod=1 reg=0 rm=4      spec: 0xDA mod/reg/rm /0 mod!=3 */
            case 0x45: /* DAh 45h FADDd w32(r/m) mod=1 reg=0 rm=5      spec: 0xDA mod/reg/rm /0 mod!=3 */
            case 0x46: /* DAh 46h FADDd w32(r/m) mod=1 reg=0 rm=6      spec: 0xDA mod/reg/rm /0 mod!=3 */
            case 0x47: /* DAh 47h FADDd w32(r/m) mod=1 reg=0 rm=7      spec: 0xDA mod/reg/rm /0 mod!=3 */
            case 0x80: /* DAh 80h FADDd w32(r/m) mod=2 reg=0 rm=0      spec: 0xDA mod/reg/rm /0 mod!=3 */
            case 0x81: /* DAh 81h FADDd w32(r/m) mod=2 reg=0 rm=1      spec: 0xDA mod/reg/rm /0 mod!=3 */
            case 0x82: /* DAh 82h FADDd w32(r/m) mod=2 reg=0 rm=2      spec: 0xDA mod/reg/rm /0 mod!=3 */
            case 0x83: /* DAh 83h FADDd w32(r/m) mod=2 reg=0 rm=3      spec: 0xDA mod/reg/rm /0 mod!=3 */
            case 0x84: /* DAh 84h FADDd w32(r/m) mod=2 reg=0 rm=4      spec: 0xDA mod/reg/rm /0 mod!=3 */
            case 0x85: /* DAh 85h FADDd w32(r/m) mod=2 reg=0 rm=5      spec: 0xDA mod/reg/rm /0 mod!=3 */
            case 0x86: /* DAh 86h FADDd w32(r/m) mod=2 reg=0 rm=6      spec: 0xDA mod/reg/rm /0 mod!=3 */
            case 0x87: /* DAh 87h FADDd w32(r/m) mod=2 reg=0 rm=7      spec: 0xDA mod/reg/rm /0 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FADDd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"w32"));
                break;
            case 0x08: /* DAh 08h FMULd w32(r/m) mod=0 reg=1 rm=0      spec: 0xDA mod/reg/rm /1 mod!=3 */
            case 0x09: /* DAh 09h FMULd w32(r/m) mod=0 reg=1 rm=1      spec: 0xDA mod/reg/rm /1 mod!=3 */
            case 0x0A: /* DAh 0Ah FMULd w32(r/m) mod=0 reg=1 rm=2      spec: 0xDA mod/reg/rm /1 mod!=3 */
            case 0x0B: /* DAh 0Bh FMULd w32(r/m) mod=0 reg=1 rm=3      spec: 0xDA mod/reg/rm /1 mod!=3 */
            case 0x0C: /* DAh 0Ch FMULd w32(r/m) mod=0 reg=1 rm=4      spec: 0xDA mod/reg/rm /1 mod!=3 */
            case 0x0D: /* DAh 0Dh FMULd w32(r/m) mod=0 reg=1 rm=5      spec: 0xDA mod/reg/rm /1 mod!=3 */
            case 0x0E: /* DAh 0Eh FMULd w32(r/m) mod=0 reg=1 rm=6      spec: 0xDA mod/reg/rm /1 mod!=3 */
            case 0x0F: /* DAh 0Fh FMULd w32(r/m) mod=0 reg=1 rm=7      spec: 0xDA mod/reg/rm /1 mod!=3 */
            case 0x48: /* DAh 48h FMULd w32(r/m) mod=1 reg=1 rm=0      spec: 0xDA mod/reg/rm /1 mod!=3 */
            case 0x49: /* DAh 49h FMULd w32(r/m) mod=1 reg=1 rm=1      spec: 0xDA mod/reg/rm /1 mod!=3 */
            case 0x4A: /* DAh 4Ah FMULd w32(r/m) mod=1 reg=1 rm=2      spec: 0xDA mod/reg/rm /1 mod!=3 */
            case 0x4B: /* DAh 4Bh FMULd w32(r/m) mod=1 reg=1 rm=3      spec: 0xDA mod/reg/rm /1 mod!=3 */
            case 0x4C: /* DAh 4Ch FMULd w32(r/m) mod=1 reg=1 rm=4      spec: 0xDA mod/reg/rm /1 mod!=3 */
            case 0x4D: /* DAh 4Dh FMULd w32(r/m) mod=1 reg=1 rm=5      spec: 0xDA mod/reg/rm /1 mod!=3 */
            case 0x4E: /* DAh 4Eh FMULd w32(r/m) mod=1 reg=1 rm=6      spec: 0xDA mod/reg/rm /1 mod!=3 */
            case 0x4F: /* DAh 4Fh FMULd w32(r/m) mod=1 reg=1 rm=7      spec: 0xDA mod/reg/rm /1 mod!=3 */
            case 0x88: /* DAh 88h FMULd w32(r/m) mod=2 reg=1 rm=0      spec: 0xDA mod/reg/rm /1 mod!=3 */
            case 0x89: /* DAh 89h FMULd w32(r/m) mod=2 reg=1 rm=1      spec: 0xDA mod/reg/rm /1 mod!=3 */
            case 0x8A: /* DAh 8Ah FMULd w32(r/m) mod=2 reg=1 rm=2      spec: 0xDA mod/reg/rm /1 mod!=3 */
            case 0x8B: /* DAh 8Bh FMULd w32(r/m) mod=2 reg=1 rm=3      spec: 0xDA mod/reg/rm /1 mod!=3 */
            case 0x8C: /* DAh 8Ch FMULd w32(r/m) mod=2 reg=1 rm=4      spec: 0xDA mod/reg/rm /1 mod!=3 */
            case 0x8D: /* DAh 8Dh FMULd w32(r/m) mod=2 reg=1 rm=5      spec: 0xDA mod/reg/rm /1 mod!=3 */
            case 0x8E: /* DAh 8Eh FMULd w32(r/m) mod=2 reg=1 rm=6      spec: 0xDA mod/reg/rm /1 mod!=3 */
            case 0x8F: /* DAh 8Fh FMULd w32(r/m) mod=2 reg=1 rm=7      spec: 0xDA mod/reg/rm /1 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FMULd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"w32"));
                break;
            case 0x10: /* DAh 10h FCOMd w32(r/m) mod=0 reg=2 rm=0      spec: 0xDA mod/reg/rm /2 mod!=3 */
            case 0x11: /* DAh 11h FCOMd w32(r/m) mod=0 reg=2 rm=1      spec: 0xDA mod/reg/rm /2 mod!=3 */
            case 0x12: /* DAh 12h FCOMd w32(r/m) mod=0 reg=2 rm=2      spec: 0xDA mod/reg/rm /2 mod!=3 */
            case 0x13: /* DAh 13h FCOMd w32(r/m) mod=0 reg=2 rm=3      spec: 0xDA mod/reg/rm /2 mod!=3 */
            case 0x14: /* DAh 14h FCOMd w32(r/m) mod=0 reg=2 rm=4      spec: 0xDA mod/reg/rm /2 mod!=3 */
            case 0x15: /* DAh 15h FCOMd w32(r/m) mod=0 reg=2 rm=5      spec: 0xDA mod/reg/rm /2 mod!=3 */
            case 0x16: /* DAh 16h FCOMd w32(r/m) mod=0 reg=2 rm=6      spec: 0xDA mod/reg/rm /2 mod!=3 */
            case 0x17: /* DAh 17h FCOMd w32(r/m) mod=0 reg=2 rm=7      spec: 0xDA mod/reg/rm /2 mod!=3 */
            case 0x50: /* DAh 50h FCOMd w32(r/m) mod=1 reg=2 rm=0      spec: 0xDA mod/reg/rm /2 mod!=3 */
            case 0x51: /* DAh 51h FCOMd w32(r/m) mod=1 reg=2 rm=1      spec: 0xDA mod/reg/rm /2 mod!=3 */
            case 0x52: /* DAh 52h FCOMd w32(r/m) mod=1 reg=2 rm=2      spec: 0xDA mod/reg/rm /2 mod!=3 */
            case 0x53: /* DAh 53h FCOMd w32(r/m) mod=1 reg=2 rm=3      spec: 0xDA mod/reg/rm /2 mod!=3 */
            case 0x54: /* DAh 54h FCOMd w32(r/m) mod=1 reg=2 rm=4      spec: 0xDA mod/reg/rm /2 mod!=3 */
            case 0x55: /* DAh 55h FCOMd w32(r/m) mod=1 reg=2 rm=5      spec: 0xDA mod/reg/rm /2 mod!=3 */
            case 0x56: /* DAh 56h FCOMd w32(r/m) mod=1 reg=2 rm=6      spec: 0xDA mod/reg/rm /2 mod!=3 */
            case 0x57: /* DAh 57h FCOMd w32(r/m) mod=1 reg=2 rm=7      spec: 0xDA mod/reg/rm /2 mod!=3 */
            case 0x90: /* DAh 90h FCOMd w32(r/m) mod=2 reg=2 rm=0      spec: 0xDA mod/reg/rm /2 mod!=3 */
            case 0x91: /* DAh 91h FCOMd w32(r/m) mod=2 reg=2 rm=1      spec: 0xDA mod/reg/rm /2 mod!=3 */
            case 0x92: /* DAh 92h FCOMd w32(r/m) mod=2 reg=2 rm=2      spec: 0xDA mod/reg/rm /2 mod!=3 */
            case 0x93: /* DAh 93h FCOMd w32(r/m) mod=2 reg=2 rm=3      spec: 0xDA mod/reg/rm /2 mod!=3 */
            case 0x94: /* DAh 94h FCOMd w32(r/m) mod=2 reg=2 rm=4      spec: 0xDA mod/reg/rm /2 mod!=3 */
            case 0x95: /* DAh 95h FCOMd w32(r/m) mod=2 reg=2 rm=5      spec: 0xDA mod/reg/rm /2 mod!=3 */
            case 0x96: /* DAh 96h FCOMd w32(r/m) mod=2 reg=2 rm=6      spec: 0xDA mod/reg/rm /2 mod!=3 */
            case 0x97: /* DAh 97h FCOMd w32(r/m) mod=2 reg=2 rm=7      spec: 0xDA mod/reg/rm /2 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FCOMd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"w32"));
                break;
            case 0x18: /* DAh 18h FCOMPd w32(r/m) mod=0 reg=3 rm=0      spec: 0xDA mod/reg/rm /3 mod!=3 */
            case 0x19: /* DAh 19h FCOMPd w32(r/m) mod=0 reg=3 rm=1      spec: 0xDA mod/reg/rm /3 mod!=3 */
            case 0x1A: /* DAh 1Ah FCOMPd w32(r/m) mod=0 reg=3 rm=2      spec: 0xDA mod/reg/rm /3 mod!=3 */
            case 0x1B: /* DAh 1Bh FCOMPd w32(r/m) mod=0 reg=3 rm=3      spec: 0xDA mod/reg/rm /3 mod!=3 */
            case 0x1C: /* DAh 1Ch FCOMPd w32(r/m) mod=0 reg=3 rm=4      spec: 0xDA mod/reg/rm /3 mod!=3 */
            case 0x1D: /* DAh 1Dh FCOMPd w32(r/m) mod=0 reg=3 rm=5      spec: 0xDA mod/reg/rm /3 mod!=3 */
            case 0x1E: /* DAh 1Eh FCOMPd w32(r/m) mod=0 reg=3 rm=6      spec: 0xDA mod/reg/rm /3 mod!=3 */
            case 0x1F: /* DAh 1Fh FCOMPd w32(r/m) mod=0 reg=3 rm=7      spec: 0xDA mod/reg/rm /3 mod!=3 */
            case 0x58: /* DAh 58h FCOMPd w32(r/m) mod=1 reg=3 rm=0      spec: 0xDA mod/reg/rm /3 mod!=3 */
            case 0x59: /* DAh 59h FCOMPd w32(r/m) mod=1 reg=3 rm=1      spec: 0xDA mod/reg/rm /3 mod!=3 */
            case 0x5A: /* DAh 5Ah FCOMPd w32(r/m) mod=1 reg=3 rm=2      spec: 0xDA mod/reg/rm /3 mod!=3 */
            case 0x5B: /* DAh 5Bh FCOMPd w32(r/m) mod=1 reg=3 rm=3      spec: 0xDA mod/reg/rm /3 mod!=3 */
            case 0x5C: /* DAh 5Ch FCOMPd w32(r/m) mod=1 reg=3 rm=4      spec: 0xDA mod/reg/rm /3 mod!=3 */
            case 0x5D: /* DAh 5Dh FCOMPd w32(r/m) mod=1 reg=3 rm=5      spec: 0xDA mod/reg/rm /3 mod!=3 */
            case 0x5E: /* DAh 5Eh FCOMPd w32(r/m) mod=1 reg=3 rm=6      spec: 0xDA mod/reg/rm /3 mod!=3 */
            case 0x5F: /* DAh 5Fh FCOMPd w32(r/m) mod=1 reg=3 rm=7      spec: 0xDA mod/reg/rm /3 mod!=3 */
            case 0x98: /* DAh 98h FCOMPd w32(r/m) mod=2 reg=3 rm=0      spec: 0xDA mod/reg/rm /3 mod!=3 */
            case 0x99: /* DAh 99h FCOMPd w32(r/m) mod=2 reg=3 rm=1      spec: 0xDA mod/reg/rm /3 mod!=3 */
            case 0x9A: /* DAh 9Ah FCOMPd w32(r/m) mod=2 reg=3 rm=2      spec: 0xDA mod/reg/rm /3 mod!=3 */
            case 0x9B: /* DAh 9Bh FCOMPd w32(r/m) mod=2 reg=3 rm=3      spec: 0xDA mod/reg/rm /3 mod!=3 */
            case 0x9C: /* DAh 9Ch FCOMPd w32(r/m) mod=2 reg=3 rm=4      spec: 0xDA mod/reg/rm /3 mod!=3 */
            case 0x9D: /* DAh 9Dh FCOMPd w32(r/m) mod=2 reg=3 rm=5      spec: 0xDA mod/reg/rm /3 mod!=3 */
            case 0x9E: /* DAh 9Eh FCOMPd w32(r/m) mod=2 reg=3 rm=6      spec: 0xDA mod/reg/rm /3 mod!=3 */
            case 0x9F: /* DAh 9Fh FCOMPd w32(r/m) mod=2 reg=3 rm=7      spec: 0xDA mod/reg/rm /3 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FCOMPd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"w32"));
                break;
            case 0x20: /* DAh 20h FSUBd w32(r/m) mod=0 reg=4 rm=0      spec: 0xDA mod/reg/rm /4 mod!=3 */
            case 0x21: /* DAh 21h FSUBd w32(r/m) mod=0 reg=4 rm=1      spec: 0xDA mod/reg/rm /4 mod!=3 */
            case 0x22: /* DAh 22h FSUBd w32(r/m) mod=0 reg=4 rm=2      spec: 0xDA mod/reg/rm /4 mod!=3 */
            case 0x23: /* DAh 23h FSUBd w32(r/m) mod=0 reg=4 rm=3      spec: 0xDA mod/reg/rm /4 mod!=3 */
            case 0x24: /* DAh 24h FSUBd w32(r/m) mod=0 reg=4 rm=4      spec: 0xDA mod/reg/rm /4 mod!=3 */
            case 0x25: /* DAh 25h FSUBd w32(r/m) mod=0 reg=4 rm=5      spec: 0xDA mod/reg/rm /4 mod!=3 */
            case 0x26: /* DAh 26h FSUBd w32(r/m) mod=0 reg=4 rm=6      spec: 0xDA mod/reg/rm /4 mod!=3 */
            case 0x27: /* DAh 27h FSUBd w32(r/m) mod=0 reg=4 rm=7      spec: 0xDA mod/reg/rm /4 mod!=3 */
            case 0x60: /* DAh 60h FSUBd w32(r/m) mod=1 reg=4 rm=0      spec: 0xDA mod/reg/rm /4 mod!=3 */
            case 0x61: /* DAh 61h FSUBd w32(r/m) mod=1 reg=4 rm=1      spec: 0xDA mod/reg/rm /4 mod!=3 */
            case 0x62: /* DAh 62h FSUBd w32(r/m) mod=1 reg=4 rm=2      spec: 0xDA mod/reg/rm /4 mod!=3 */
            case 0x63: /* DAh 63h FSUBd w32(r/m) mod=1 reg=4 rm=3      spec: 0xDA mod/reg/rm /4 mod!=3 */
            case 0x64: /* DAh 64h FSUBd w32(r/m) mod=1 reg=4 rm=4      spec: 0xDA mod/reg/rm /4 mod!=3 */
            case 0x65: /* DAh 65h FSUBd w32(r/m) mod=1 reg=4 rm=5      spec: 0xDA mod/reg/rm /4 mod!=3 */
            case 0x66: /* DAh 66h FSUBd w32(r/m) mod=1 reg=4 rm=6      spec: 0xDA mod/reg/rm /4 mod!=3 */
            case 0x67: /* DAh 67h FSUBd w32(r/m) mod=1 reg=4 rm=7      spec: 0xDA mod/reg/rm /4 mod!=3 */
            case 0xA0: /* DAh A0h FSUBd w32(r/m) mod=2 reg=4 rm=0      spec: 0xDA mod/reg/rm /4 mod!=3 */
            case 0xA1: /* DAh A1h FSUBd w32(r/m) mod=2 reg=4 rm=1      spec: 0xDA mod/reg/rm /4 mod!=3 */
            case 0xA2: /* DAh A2h FSUBd w32(r/m) mod=2 reg=4 rm=2      spec: 0xDA mod/reg/rm /4 mod!=3 */
            case 0xA3: /* DAh A3h FSUBd w32(r/m) mod=2 reg=4 rm=3      spec: 0xDA mod/reg/rm /4 mod!=3 */
            case 0xA4: /* DAh A4h FSUBd w32(r/m) mod=2 reg=4 rm=4      spec: 0xDA mod/reg/rm /4 mod!=3 */
            case 0xA5: /* DAh A5h FSUBd w32(r/m) mod=2 reg=4 rm=5      spec: 0xDA mod/reg/rm /4 mod!=3 */
            case 0xA6: /* DAh A6h FSUBd w32(r/m) mod=2 reg=4 rm=6      spec: 0xDA mod/reg/rm /4 mod!=3 */
            case 0xA7: /* DAh A7h FSUBd w32(r/m) mod=2 reg=4 rm=7      spec: 0xDA mod/reg/rm /4 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSUBd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"w32"));
                break;
            case 0x28: /* DAh 28h FSUBRd w32(r/m) mod=0 reg=5 rm=0      spec: 0xDA mod/reg/rm /5 mod!=3 */
            case 0x29: /* DAh 29h FSUBRd w32(r/m) mod=0 reg=5 rm=1      spec: 0xDA mod/reg/rm /5 mod!=3 */
            case 0x2A: /* DAh 2Ah FSUBRd w32(r/m) mod=0 reg=5 rm=2      spec: 0xDA mod/reg/rm /5 mod!=3 */
            case 0x2B: /* DAh 2Bh FSUBRd w32(r/m) mod=0 reg=5 rm=3      spec: 0xDA mod/reg/rm /5 mod!=3 */
            case 0x2C: /* DAh 2Ch FSUBRd w32(r/m) mod=0 reg=5 rm=4      spec: 0xDA mod/reg/rm /5 mod!=3 */
            case 0x2D: /* DAh 2Dh FSUBRd w32(r/m) mod=0 reg=5 rm=5      spec: 0xDA mod/reg/rm /5 mod!=3 */
            case 0x2E: /* DAh 2Eh FSUBRd w32(r/m) mod=0 reg=5 rm=6      spec: 0xDA mod/reg/rm /5 mod!=3 */
            case 0x2F: /* DAh 2Fh FSUBRd w32(r/m) mod=0 reg=5 rm=7      spec: 0xDA mod/reg/rm /5 mod!=3 */
            case 0x68: /* DAh 68h FSUBRd w32(r/m) mod=1 reg=5 rm=0      spec: 0xDA mod/reg/rm /5 mod!=3 */
            case 0x69: /* DAh 69h FSUBRd w32(r/m) mod=1 reg=5 rm=1      spec: 0xDA mod/reg/rm /5 mod!=3 */
            case 0x6A: /* DAh 6Ah FSUBRd w32(r/m) mod=1 reg=5 rm=2      spec: 0xDA mod/reg/rm /5 mod!=3 */
            case 0x6B: /* DAh 6Bh FSUBRd w32(r/m) mod=1 reg=5 rm=3      spec: 0xDA mod/reg/rm /5 mod!=3 */
            case 0x6C: /* DAh 6Ch FSUBRd w32(r/m) mod=1 reg=5 rm=4      spec: 0xDA mod/reg/rm /5 mod!=3 */
            case 0x6D: /* DAh 6Dh FSUBRd w32(r/m) mod=1 reg=5 rm=5      spec: 0xDA mod/reg/rm /5 mod!=3 */
            case 0x6E: /* DAh 6Eh FSUBRd w32(r/m) mod=1 reg=5 rm=6      spec: 0xDA mod/reg/rm /5 mod!=3 */
            case 0x6F: /* DAh 6Fh FSUBRd w32(r/m) mod=1 reg=5 rm=7      spec: 0xDA mod/reg/rm /5 mod!=3 */
            case 0xA8: /* DAh A8h FSUBRd w32(r/m) mod=2 reg=5 rm=0      spec: 0xDA mod/reg/rm /5 mod!=3 */
            case 0xA9: /* DAh A9h FSUBRd w32(r/m) mod=2 reg=5 rm=1      spec: 0xDA mod/reg/rm /5 mod!=3 */
            case 0xAA: /* DAh AAh FSUBRd w32(r/m) mod=2 reg=5 rm=2      spec: 0xDA mod/reg/rm /5 mod!=3 */
            case 0xAB: /* DAh ABh FSUBRd w32(r/m) mod=2 reg=5 rm=3      spec: 0xDA mod/reg/rm /5 mod!=3 */
            case 0xAC: /* DAh ACh FSUBRd w32(r/m) mod=2 reg=5 rm=4      spec: 0xDA mod/reg/rm /5 mod!=3 */
            case 0xAD: /* DAh ADh FSUBRd w32(r/m) mod=2 reg=5 rm=5      spec: 0xDA mod/reg/rm /5 mod!=3 */
            case 0xAE: /* DAh AEh FSUBRd w32(r/m) mod=2 reg=5 rm=6      spec: 0xDA mod/reg/rm /5 mod!=3 */
            case 0xAF: /* DAh AFh FSUBRd w32(r/m) mod=2 reg=5 rm=7      spec: 0xDA mod/reg/rm /5 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSUBRd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"w32"));
                break;
            case 0x30: /* DAh 30h FDIVd w32(r/m) mod=0 reg=6 rm=0      spec: 0xDA mod/reg/rm /6 mod!=3 */
            case 0x31: /* DAh 31h FDIVd w32(r/m) mod=0 reg=6 rm=1      spec: 0xDA mod/reg/rm /6 mod!=3 */
            case 0x32: /* DAh 32h FDIVd w32(r/m) mod=0 reg=6 rm=2      spec: 0xDA mod/reg/rm /6 mod!=3 */
            case 0x33: /* DAh 33h FDIVd w32(r/m) mod=0 reg=6 rm=3      spec: 0xDA mod/reg/rm /6 mod!=3 */
            case 0x34: /* DAh 34h FDIVd w32(r/m) mod=0 reg=6 rm=4      spec: 0xDA mod/reg/rm /6 mod!=3 */
            case 0x35: /* DAh 35h FDIVd w32(r/m) mod=0 reg=6 rm=5      spec: 0xDA mod/reg/rm /6 mod!=3 */
            case 0x36: /* DAh 36h FDIVd w32(r/m) mod=0 reg=6 rm=6      spec: 0xDA mod/reg/rm /6 mod!=3 */
            case 0x37: /* DAh 37h FDIVd w32(r/m) mod=0 reg=6 rm=7      spec: 0xDA mod/reg/rm /6 mod!=3 */
            case 0x70: /* DAh 70h FDIVd w32(r/m) mod=1 reg=6 rm=0      spec: 0xDA mod/reg/rm /6 mod!=3 */
            case 0x71: /* DAh 71h FDIVd w32(r/m) mod=1 reg=6 rm=1      spec: 0xDA mod/reg/rm /6 mod!=3 */
            case 0x72: /* DAh 72h FDIVd w32(r/m) mod=1 reg=6 rm=2      spec: 0xDA mod/reg/rm /6 mod!=3 */
            case 0x73: /* DAh 73h FDIVd w32(r/m) mod=1 reg=6 rm=3      spec: 0xDA mod/reg/rm /6 mod!=3 */
            case 0x74: /* DAh 74h FDIVd w32(r/m) mod=1 reg=6 rm=4      spec: 0xDA mod/reg/rm /6 mod!=3 */
            case 0x75: /* DAh 75h FDIVd w32(r/m) mod=1 reg=6 rm=5      spec: 0xDA mod/reg/rm /6 mod!=3 */
            case 0x76: /* DAh 76h FDIVd w32(r/m) mod=1 reg=6 rm=6      spec: 0xDA mod/reg/rm /6 mod!=3 */
            case 0x77: /* DAh 77h FDIVd w32(r/m) mod=1 reg=6 rm=7      spec: 0xDA mod/reg/rm /6 mod!=3 */
            case 0xB0: /* DAh B0h FDIVd w32(r/m) mod=2 reg=6 rm=0      spec: 0xDA mod/reg/rm /6 mod!=3 */
            case 0xB1: /* DAh B1h FDIVd w32(r/m) mod=2 reg=6 rm=1      spec: 0xDA mod/reg/rm /6 mod!=3 */
            case 0xB2: /* DAh B2h FDIVd w32(r/m) mod=2 reg=6 rm=2      spec: 0xDA mod/reg/rm /6 mod!=3 */
            case 0xB3: /* DAh B3h FDIVd w32(r/m) mod=2 reg=6 rm=3      spec: 0xDA mod/reg/rm /6 mod!=3 */
            case 0xB4: /* DAh B4h FDIVd w32(r/m) mod=2 reg=6 rm=4      spec: 0xDA mod/reg/rm /6 mod!=3 */
            case 0xB5: /* DAh B5h FDIVd w32(r/m) mod=2 reg=6 rm=5      spec: 0xDA mod/reg/rm /6 mod!=3 */
            case 0xB6: /* DAh B6h FDIVd w32(r/m) mod=2 reg=6 rm=6      spec: 0xDA mod/reg/rm /6 mod!=3 */
            case 0xB7: /* DAh B7h FDIVd w32(r/m) mod=2 reg=6 rm=7      spec: 0xDA mod/reg/rm /6 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FDIVd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"w32"));
                break;
            case 0x38: /* DAh 38h FDIVRd w32(r/m) mod=0 reg=7 rm=0      spec: 0xDA mod/reg/rm /7 mod!=3 */
            case 0x39: /* DAh 39h FDIVRd w32(r/m) mod=0 reg=7 rm=1      spec: 0xDA mod/reg/rm /7 mod!=3 */
            case 0x3A: /* DAh 3Ah FDIVRd w32(r/m) mod=0 reg=7 rm=2      spec: 0xDA mod/reg/rm /7 mod!=3 */
            case 0x3B: /* DAh 3Bh FDIVRd w32(r/m) mod=0 reg=7 rm=3      spec: 0xDA mod/reg/rm /7 mod!=3 */
            case 0x3C: /* DAh 3Ch FDIVRd w32(r/m) mod=0 reg=7 rm=4      spec: 0xDA mod/reg/rm /7 mod!=3 */
            case 0x3D: /* DAh 3Dh FDIVRd w32(r/m) mod=0 reg=7 rm=5      spec: 0xDA mod/reg/rm /7 mod!=3 */
            case 0x3E: /* DAh 3Eh FDIVRd w32(r/m) mod=0 reg=7 rm=6      spec: 0xDA mod/reg/rm /7 mod!=3 */
            case 0x3F: /* DAh 3Fh FDIVRd w32(r/m) mod=0 reg=7 rm=7      spec: 0xDA mod/reg/rm /7 mod!=3 */
            case 0x78: /* DAh 78h FDIVRd w32(r/m) mod=1 reg=7 rm=0      spec: 0xDA mod/reg/rm /7 mod!=3 */
            case 0x79: /* DAh 79h FDIVRd w32(r/m) mod=1 reg=7 rm=1      spec: 0xDA mod/reg/rm /7 mod!=3 */
            case 0x7A: /* DAh 7Ah FDIVRd w32(r/m) mod=1 reg=7 rm=2      spec: 0xDA mod/reg/rm /7 mod!=3 */
            case 0x7B: /* DAh 7Bh FDIVRd w32(r/m) mod=1 reg=7 rm=3      spec: 0xDA mod/reg/rm /7 mod!=3 */
            case 0x7C: /* DAh 7Ch FDIVRd w32(r/m) mod=1 reg=7 rm=4      spec: 0xDA mod/reg/rm /7 mod!=3 */
            case 0x7D: /* DAh 7Dh FDIVRd w32(r/m) mod=1 reg=7 rm=5      spec: 0xDA mod/reg/rm /7 mod!=3 */
            case 0x7E: /* DAh 7Eh FDIVRd w32(r/m) mod=1 reg=7 rm=6      spec: 0xDA mod/reg/rm /7 mod!=3 */
            case 0x7F: /* DAh 7Fh FDIVRd w32(r/m) mod=1 reg=7 rm=7      spec: 0xDA mod/reg/rm /7 mod!=3 */
            case 0xB8: /* DAh B8h FDIVRd w32(r/m) mod=2 reg=7 rm=0      spec: 0xDA mod/reg/rm /7 mod!=3 */
            case 0xB9: /* DAh B9h FDIVRd w32(r/m) mod=2 reg=7 rm=1      spec: 0xDA mod/reg/rm /7 mod!=3 */
            case 0xBA: /* DAh BAh FDIVRd w32(r/m) mod=2 reg=7 rm=2      spec: 0xDA mod/reg/rm /7 mod!=3 */
            case 0xBB: /* DAh BBh FDIVRd w32(r/m) mod=2 reg=7 rm=3      spec: 0xDA mod/reg/rm /7 mod!=3 */
            case 0xBC: /* DAh BCh FDIVRd w32(r/m) mod=2 reg=7 rm=4      spec: 0xDA mod/reg/rm /7 mod!=3 */
            case 0xBD: /* DAh BDh FDIVRd w32(r/m) mod=2 reg=7 rm=5      spec: 0xDA mod/reg/rm /7 mod!=3 */
            case 0xBE: /* DAh BEh FDIVRd w32(r/m) mod=2 reg=7 rm=6      spec: 0xDA mod/reg/rm /7 mod!=3 */
            case 0xBF: /* DAh BFh FDIVRd w32(r/m) mod=2 reg=7 rm=7      spec: 0xDA mod/reg/rm /7 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FDIVRd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"w32"));
                break;
            /* opcode DAh C0h  not defined */
            /* opcode DAh C1h  not defined */
            /* opcode DAh C2h  not defined */
            /* opcode DAh C3h  not defined */
            /* opcode DAh C4h  not defined */
            /* opcode DAh C5h  not defined */
            /* opcode DAh C6h  not defined */
            /* opcode DAh C7h  not defined */
            /* opcode DAh C8h  not defined */
            /* opcode DAh C9h  not defined */
            /* opcode DAh CAh  not defined */
            /* opcode DAh CBh  not defined */
            /* opcode DAh CCh  not defined */
            /* opcode DAh CDh  not defined */
            /* opcode DAh CEh  not defined */
            /* opcode DAh CFh  not defined */
            /* opcode DAh D0h  not defined */
            /* opcode DAh D1h  not defined */
            /* opcode DAh D2h  not defined */
            /* opcode DAh D3h  not defined */
            /* opcode DAh D4h  not defined */
            /* opcode DAh D5h  not defined */
            /* opcode DAh D6h  not defined */
            /* opcode DAh D7h  not defined */
            /* opcode DAh D8h  not defined */
            /* opcode DAh D9h  not defined */
            /* opcode DAh DAh  not defined */
            /* opcode DAh DBh  not defined */
            /* opcode DAh DCh  not defined */
            /* opcode DAh DDh  not defined */
            /* opcode DAh DEh  not defined */
            /* opcode DAh DFh  not defined */
            /* opcode DAh E0h  not defined */
            /* opcode DAh E1h  not defined */
            /* opcode DAh E2h  not defined */
            /* opcode DAh E3h  not defined */
            /* opcode DAh E4h  not defined */
            /* opcode DAh E5h  not defined */
            /* opcode DAh E6h  not defined */
            /* opcode DAh E7h  not defined */
            /* opcode DAh E8h  not defined */
            case 0xE9: /* DAh E9h FUCOMPP  mod=3 reg=5 rm=1      spec: 0xDA 0xE9 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FUCOMPP");
                break;
            /* opcode DAh EAh  not defined */
            /* opcode DAh EBh  not defined */
            /* opcode DAh ECh  not defined */
            /* opcode DAh EDh  not defined */
            /* opcode DAh EEh  not defined */
            /* opcode DAh EFh  not defined */
            /* opcode DAh F0h  not defined */
            /* opcode DAh F1h  not defined */
            /* opcode DAh F2h  not defined */
            /* opcode DAh F3h  not defined */
            /* opcode DAh F4h  not defined */
            /* opcode DAh F5h  not defined */
            /* opcode DAh F6h  not defined */
            /* opcode DAh F7h  not defined */
            /* opcode DAh F8h  not defined */
            /* opcode DAh F9h  not defined */
            /* opcode DAh FAh  not defined */
            /* opcode DAh FBh  not defined */
            /* opcode DAh FCh  not defined */
            /* opcode DAh FDh  not defined */
            /* opcode DAh FEh  not defined */
            /* opcode DAh FFh  not defined */
            default:
                goto _x86decode_illegal_opcode;
        };
/* End of opcodes starting with DAh */
        break;
    case 0xDB: /* DBh        spec:  */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
/* Opcodes starting with DBh */
        switch (mrm.byte) {
            case 0x00: /* DBh 00h FLDd w32(r/m) mod=0 reg=0 rm=0      spec: 0xDB mod/reg/rm /0 mod!=3 */
            case 0x01: /* DBh 01h FLDd w32(r/m) mod=0 reg=0 rm=1      spec: 0xDB mod/reg/rm /0 mod!=3 */
            case 0x02: /* DBh 02h FLDd w32(r/m) mod=0 reg=0 rm=2      spec: 0xDB mod/reg/rm /0 mod!=3 */
            case 0x03: /* DBh 03h FLDd w32(r/m) mod=0 reg=0 rm=3      spec: 0xDB mod/reg/rm /0 mod!=3 */
            case 0x04: /* DBh 04h FLDd w32(r/m) mod=0 reg=0 rm=4      spec: 0xDB mod/reg/rm /0 mod!=3 */
            case 0x05: /* DBh 05h FLDd w32(r/m) mod=0 reg=0 rm=5      spec: 0xDB mod/reg/rm /0 mod!=3 */
            case 0x06: /* DBh 06h FLDd w32(r/m) mod=0 reg=0 rm=6      spec: 0xDB mod/reg/rm /0 mod!=3 */
            case 0x07: /* DBh 07h FLDd w32(r/m) mod=0 reg=0 rm=7      spec: 0xDB mod/reg/rm /0 mod!=3 */
            case 0x40: /* DBh 40h FLDd w32(r/m) mod=1 reg=0 rm=0      spec: 0xDB mod/reg/rm /0 mod!=3 */
            case 0x41: /* DBh 41h FLDd w32(r/m) mod=1 reg=0 rm=1      spec: 0xDB mod/reg/rm /0 mod!=3 */
            case 0x42: /* DBh 42h FLDd w32(r/m) mod=1 reg=0 rm=2      spec: 0xDB mod/reg/rm /0 mod!=3 */
            case 0x43: /* DBh 43h FLDd w32(r/m) mod=1 reg=0 rm=3      spec: 0xDB mod/reg/rm /0 mod!=3 */
            case 0x44: /* DBh 44h FLDd w32(r/m) mod=1 reg=0 rm=4      spec: 0xDB mod/reg/rm /0 mod!=3 */
            case 0x45: /* DBh 45h FLDd w32(r/m) mod=1 reg=0 rm=5      spec: 0xDB mod/reg/rm /0 mod!=3 */
            case 0x46: /* DBh 46h FLDd w32(r/m) mod=1 reg=0 rm=6      spec: 0xDB mod/reg/rm /0 mod!=3 */
            case 0x47: /* DBh 47h FLDd w32(r/m) mod=1 reg=0 rm=7      spec: 0xDB mod/reg/rm /0 mod!=3 */
            case 0x80: /* DBh 80h FLDd w32(r/m) mod=2 reg=0 rm=0      spec: 0xDB mod/reg/rm /0 mod!=3 */
            case 0x81: /* DBh 81h FLDd w32(r/m) mod=2 reg=0 rm=1      spec: 0xDB mod/reg/rm /0 mod!=3 */
            case 0x82: /* DBh 82h FLDd w32(r/m) mod=2 reg=0 rm=2      spec: 0xDB mod/reg/rm /0 mod!=3 */
            case 0x83: /* DBh 83h FLDd w32(r/m) mod=2 reg=0 rm=3      spec: 0xDB mod/reg/rm /0 mod!=3 */
            case 0x84: /* DBh 84h FLDd w32(r/m) mod=2 reg=0 rm=4      spec: 0xDB mod/reg/rm /0 mod!=3 */
            case 0x85: /* DBh 85h FLDd w32(r/m) mod=2 reg=0 rm=5      spec: 0xDB mod/reg/rm /0 mod!=3 */
            case 0x86: /* DBh 86h FLDd w32(r/m) mod=2 reg=0 rm=6      spec: 0xDB mod/reg/rm /0 mod!=3 */
            case 0x87: /* DBh 87h FLDd w32(r/m) mod=2 reg=0 rm=7      spec: 0xDB mod/reg/rm /0 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FLDd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"w32"));
                break;
            /* opcode DBh 08h  not defined */
            /* opcode DBh 09h  not defined */
            /* opcode DBh 0Ah  not defined */
            /* opcode DBh 0Bh  not defined */
            /* opcode DBh 0Ch  not defined */
            /* opcode DBh 0Dh  not defined */
            /* opcode DBh 0Eh  not defined */
            /* opcode DBh 0Fh  not defined */
            case 0x10: /* DBh 10h FSTd w32(r/m) mod=0 reg=2 rm=0      spec: 0xDB mod/reg/rm /2 mod!=3 */
            case 0x11: /* DBh 11h FSTd w32(r/m) mod=0 reg=2 rm=1      spec: 0xDB mod/reg/rm /2 mod!=3 */
            case 0x12: /* DBh 12h FSTd w32(r/m) mod=0 reg=2 rm=2      spec: 0xDB mod/reg/rm /2 mod!=3 */
            case 0x13: /* DBh 13h FSTd w32(r/m) mod=0 reg=2 rm=3      spec: 0xDB mod/reg/rm /2 mod!=3 */
            case 0x14: /* DBh 14h FSTd w32(r/m) mod=0 reg=2 rm=4      spec: 0xDB mod/reg/rm /2 mod!=3 */
            case 0x15: /* DBh 15h FSTd w32(r/m) mod=0 reg=2 rm=5      spec: 0xDB mod/reg/rm /2 mod!=3 */
            case 0x16: /* DBh 16h FSTd w32(r/m) mod=0 reg=2 rm=6      spec: 0xDB mod/reg/rm /2 mod!=3 */
            case 0x17: /* DBh 17h FSTd w32(r/m) mod=0 reg=2 rm=7      spec: 0xDB mod/reg/rm /2 mod!=3 */
            case 0x50: /* DBh 50h FSTd w32(r/m) mod=1 reg=2 rm=0      spec: 0xDB mod/reg/rm /2 mod!=3 */
            case 0x51: /* DBh 51h FSTd w32(r/m) mod=1 reg=2 rm=1      spec: 0xDB mod/reg/rm /2 mod!=3 */
            case 0x52: /* DBh 52h FSTd w32(r/m) mod=1 reg=2 rm=2      spec: 0xDB mod/reg/rm /2 mod!=3 */
            case 0x53: /* DBh 53h FSTd w32(r/m) mod=1 reg=2 rm=3      spec: 0xDB mod/reg/rm /2 mod!=3 */
            case 0x54: /* DBh 54h FSTd w32(r/m) mod=1 reg=2 rm=4      spec: 0xDB mod/reg/rm /2 mod!=3 */
            case 0x55: /* DBh 55h FSTd w32(r/m) mod=1 reg=2 rm=5      spec: 0xDB mod/reg/rm /2 mod!=3 */
            case 0x56: /* DBh 56h FSTd w32(r/m) mod=1 reg=2 rm=6      spec: 0xDB mod/reg/rm /2 mod!=3 */
            case 0x57: /* DBh 57h FSTd w32(r/m) mod=1 reg=2 rm=7      spec: 0xDB mod/reg/rm /2 mod!=3 */
            case 0x90: /* DBh 90h FSTd w32(r/m) mod=2 reg=2 rm=0      spec: 0xDB mod/reg/rm /2 mod!=3 */
            case 0x91: /* DBh 91h FSTd w32(r/m) mod=2 reg=2 rm=1      spec: 0xDB mod/reg/rm /2 mod!=3 */
            case 0x92: /* DBh 92h FSTd w32(r/m) mod=2 reg=2 rm=2      spec: 0xDB mod/reg/rm /2 mod!=3 */
            case 0x93: /* DBh 93h FSTd w32(r/m) mod=2 reg=2 rm=3      spec: 0xDB mod/reg/rm /2 mod!=3 */
            case 0x94: /* DBh 94h FSTd w32(r/m) mod=2 reg=2 rm=4      spec: 0xDB mod/reg/rm /2 mod!=3 */
            case 0x95: /* DBh 95h FSTd w32(r/m) mod=2 reg=2 rm=5      spec: 0xDB mod/reg/rm /2 mod!=3 */
            case 0x96: /* DBh 96h FSTd w32(r/m) mod=2 reg=2 rm=6      spec: 0xDB mod/reg/rm /2 mod!=3 */
            case 0x97: /* DBh 97h FSTd w32(r/m) mod=2 reg=2 rm=7      spec: 0xDB mod/reg/rm /2 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSTd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"w32"));
                break;
            case 0x18: /* DBh 18h FSTPd w32(r/m) mod=0 reg=3 rm=0      spec: 0xDB mod/reg/rm /3 mod!=3 */
            case 0x19: /* DBh 19h FSTPd w32(r/m) mod=0 reg=3 rm=1      spec: 0xDB mod/reg/rm /3 mod!=3 */
            case 0x1A: /* DBh 1Ah FSTPd w32(r/m) mod=0 reg=3 rm=2      spec: 0xDB mod/reg/rm /3 mod!=3 */
            case 0x1B: /* DBh 1Bh FSTPd w32(r/m) mod=0 reg=3 rm=3      spec: 0xDB mod/reg/rm /3 mod!=3 */
            case 0x1C: /* DBh 1Ch FSTPd w32(r/m) mod=0 reg=3 rm=4      spec: 0xDB mod/reg/rm /3 mod!=3 */
            case 0x1D: /* DBh 1Dh FSTPd w32(r/m) mod=0 reg=3 rm=5      spec: 0xDB mod/reg/rm /3 mod!=3 */
            case 0x1E: /* DBh 1Eh FSTPd w32(r/m) mod=0 reg=3 rm=6      spec: 0xDB mod/reg/rm /3 mod!=3 */
            case 0x1F: /* DBh 1Fh FSTPd w32(r/m) mod=0 reg=3 rm=7      spec: 0xDB mod/reg/rm /3 mod!=3 */
            case 0x58: /* DBh 58h FSTPd w32(r/m) mod=1 reg=3 rm=0      spec: 0xDB mod/reg/rm /3 mod!=3 */
            case 0x59: /* DBh 59h FSTPd w32(r/m) mod=1 reg=3 rm=1      spec: 0xDB mod/reg/rm /3 mod!=3 */
            case 0x5A: /* DBh 5Ah FSTPd w32(r/m) mod=1 reg=3 rm=2      spec: 0xDB mod/reg/rm /3 mod!=3 */
            case 0x5B: /* DBh 5Bh FSTPd w32(r/m) mod=1 reg=3 rm=3      spec: 0xDB mod/reg/rm /3 mod!=3 */
            case 0x5C: /* DBh 5Ch FSTPd w32(r/m) mod=1 reg=3 rm=4      spec: 0xDB mod/reg/rm /3 mod!=3 */
            case 0x5D: /* DBh 5Dh FSTPd w32(r/m) mod=1 reg=3 rm=5      spec: 0xDB mod/reg/rm /3 mod!=3 */
            case 0x5E: /* DBh 5Eh FSTPd w32(r/m) mod=1 reg=3 rm=6      spec: 0xDB mod/reg/rm /3 mod!=3 */
            case 0x5F: /* DBh 5Fh FSTPd w32(r/m) mod=1 reg=3 rm=7      spec: 0xDB mod/reg/rm /3 mod!=3 */
            case 0x98: /* DBh 98h FSTPd w32(r/m) mod=2 reg=3 rm=0      spec: 0xDB mod/reg/rm /3 mod!=3 */
            case 0x99: /* DBh 99h FSTPd w32(r/m) mod=2 reg=3 rm=1      spec: 0xDB mod/reg/rm /3 mod!=3 */
            case 0x9A: /* DBh 9Ah FSTPd w32(r/m) mod=2 reg=3 rm=2      spec: 0xDB mod/reg/rm /3 mod!=3 */
            case 0x9B: /* DBh 9Bh FSTPd w32(r/m) mod=2 reg=3 rm=3      spec: 0xDB mod/reg/rm /3 mod!=3 */
            case 0x9C: /* DBh 9Ch FSTPd w32(r/m) mod=2 reg=3 rm=4      spec: 0xDB mod/reg/rm /3 mod!=3 */
            case 0x9D: /* DBh 9Dh FSTPd w32(r/m) mod=2 reg=3 rm=5      spec: 0xDB mod/reg/rm /3 mod!=3 */
            case 0x9E: /* DBh 9Eh FSTPd w32(r/m) mod=2 reg=3 rm=6      spec: 0xDB mod/reg/rm /3 mod!=3 */
            case 0x9F: /* DBh 9Fh FSTPd w32(r/m) mod=2 reg=3 rm=7      spec: 0xDB mod/reg/rm /3 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSTPd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"w32"));
                break;
            /* opcode DBh 20h  not defined */
            /* opcode DBh 21h  not defined */
            /* opcode DBh 22h  not defined */
            /* opcode DBh 23h  not defined */
            /* opcode DBh 24h  not defined */
            /* opcode DBh 25h  not defined */
            /* opcode DBh 26h  not defined */
            /* opcode DBh 27h  not defined */
            case 0x28: /* DBh 28h FLDf80 f80(r/m) mod=0 reg=5 rm=0      spec: 0xDB mod/reg/rm /5 mod!=3 */
            case 0x29: /* DBh 29h FLDf80 f80(r/m) mod=0 reg=5 rm=1      spec: 0xDB mod/reg/rm /5 mod!=3 */
            case 0x2A: /* DBh 2Ah FLDf80 f80(r/m) mod=0 reg=5 rm=2      spec: 0xDB mod/reg/rm /5 mod!=3 */
            case 0x2B: /* DBh 2Bh FLDf80 f80(r/m) mod=0 reg=5 rm=3      spec: 0xDB mod/reg/rm /5 mod!=3 */
            case 0x2C: /* DBh 2Ch FLDf80 f80(r/m) mod=0 reg=5 rm=4      spec: 0xDB mod/reg/rm /5 mod!=3 */
            case 0x2D: /* DBh 2Dh FLDf80 f80(r/m) mod=0 reg=5 rm=5      spec: 0xDB mod/reg/rm /5 mod!=3 */
            case 0x2E: /* DBh 2Eh FLDf80 f80(r/m) mod=0 reg=5 rm=6      spec: 0xDB mod/reg/rm /5 mod!=3 */
            case 0x2F: /* DBh 2Fh FLDf80 f80(r/m) mod=0 reg=5 rm=7      spec: 0xDB mod/reg/rm /5 mod!=3 */
            case 0x68: /* DBh 68h FLDf80 f80(r/m) mod=1 reg=5 rm=0      spec: 0xDB mod/reg/rm /5 mod!=3 */
            case 0x69: /* DBh 69h FLDf80 f80(r/m) mod=1 reg=5 rm=1      spec: 0xDB mod/reg/rm /5 mod!=3 */
            case 0x6A: /* DBh 6Ah FLDf80 f80(r/m) mod=1 reg=5 rm=2      spec: 0xDB mod/reg/rm /5 mod!=3 */
            case 0x6B: /* DBh 6Bh FLDf80 f80(r/m) mod=1 reg=5 rm=3      spec: 0xDB mod/reg/rm /5 mod!=3 */
            case 0x6C: /* DBh 6Ch FLDf80 f80(r/m) mod=1 reg=5 rm=4      spec: 0xDB mod/reg/rm /5 mod!=3 */
            case 0x6D: /* DBh 6Dh FLDf80 f80(r/m) mod=1 reg=5 rm=5      spec: 0xDB mod/reg/rm /5 mod!=3 */
            case 0x6E: /* DBh 6Eh FLDf80 f80(r/m) mod=1 reg=5 rm=6      spec: 0xDB mod/reg/rm /5 mod!=3 */
            case 0x6F: /* DBh 6Fh FLDf80 f80(r/m) mod=1 reg=5 rm=7      spec: 0xDB mod/reg/rm /5 mod!=3 */
            case 0xA8: /* DBh A8h FLDf80 f80(r/m) mod=2 reg=5 rm=0      spec: 0xDB mod/reg/rm /5 mod!=3 */
            case 0xA9: /* DBh A9h FLDf80 f80(r/m) mod=2 reg=5 rm=1      spec: 0xDB mod/reg/rm /5 mod!=3 */
            case 0xAA: /* DBh AAh FLDf80 f80(r/m) mod=2 reg=5 rm=2      spec: 0xDB mod/reg/rm /5 mod!=3 */
            case 0xAB: /* DBh ABh FLDf80 f80(r/m) mod=2 reg=5 rm=3      spec: 0xDB mod/reg/rm /5 mod!=3 */
            case 0xAC: /* DBh ACh FLDf80 f80(r/m) mod=2 reg=5 rm=4      spec: 0xDB mod/reg/rm /5 mod!=3 */
            case 0xAD: /* DBh ADh FLDf80 f80(r/m) mod=2 reg=5 rm=5      spec: 0xDB mod/reg/rm /5 mod!=3 */
            case 0xAE: /* DBh AEh FLDf80 f80(r/m) mod=2 reg=5 rm=6      spec: 0xDB mod/reg/rm /5 mod!=3 */
            case 0xAF: /* DBh AFh FLDf80 f80(r/m) mod=2 reg=5 rm=7      spec: 0xDB mod/reg/rm /5 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FLDf80 %s",IPDecPrint32(mrm,sib,disp,10,RC_FPUREG,"f80"));
                break;
            /* opcode DBh 30h  not defined */
            /* opcode DBh 31h  not defined */
            /* opcode DBh 32h  not defined */
            /* opcode DBh 33h  not defined */
            /* opcode DBh 34h  not defined */
            /* opcode DBh 35h  not defined */
            /* opcode DBh 36h  not defined */
            /* opcode DBh 37h  not defined */
            case 0x38: /* DBh 38h FSTPf80 f80(r/m) mod=0 reg=7 rm=0      spec: 0xDB mod/reg/rm /7 mod!=3 */
            case 0x39: /* DBh 39h FSTPf80 f80(r/m) mod=0 reg=7 rm=1      spec: 0xDB mod/reg/rm /7 mod!=3 */
            case 0x3A: /* DBh 3Ah FSTPf80 f80(r/m) mod=0 reg=7 rm=2      spec: 0xDB mod/reg/rm /7 mod!=3 */
            case 0x3B: /* DBh 3Bh FSTPf80 f80(r/m) mod=0 reg=7 rm=3      spec: 0xDB mod/reg/rm /7 mod!=3 */
            case 0x3C: /* DBh 3Ch FSTPf80 f80(r/m) mod=0 reg=7 rm=4      spec: 0xDB mod/reg/rm /7 mod!=3 */
            case 0x3D: /* DBh 3Dh FSTPf80 f80(r/m) mod=0 reg=7 rm=5      spec: 0xDB mod/reg/rm /7 mod!=3 */
            case 0x3E: /* DBh 3Eh FSTPf80 f80(r/m) mod=0 reg=7 rm=6      spec: 0xDB mod/reg/rm /7 mod!=3 */
            case 0x3F: /* DBh 3Fh FSTPf80 f80(r/m) mod=0 reg=7 rm=7      spec: 0xDB mod/reg/rm /7 mod!=3 */
            case 0x78: /* DBh 78h FSTPf80 f80(r/m) mod=1 reg=7 rm=0      spec: 0xDB mod/reg/rm /7 mod!=3 */
            case 0x79: /* DBh 79h FSTPf80 f80(r/m) mod=1 reg=7 rm=1      spec: 0xDB mod/reg/rm /7 mod!=3 */
            case 0x7A: /* DBh 7Ah FSTPf80 f80(r/m) mod=1 reg=7 rm=2      spec: 0xDB mod/reg/rm /7 mod!=3 */
            case 0x7B: /* DBh 7Bh FSTPf80 f80(r/m) mod=1 reg=7 rm=3      spec: 0xDB mod/reg/rm /7 mod!=3 */
            case 0x7C: /* DBh 7Ch FSTPf80 f80(r/m) mod=1 reg=7 rm=4      spec: 0xDB mod/reg/rm /7 mod!=3 */
            case 0x7D: /* DBh 7Dh FSTPf80 f80(r/m) mod=1 reg=7 rm=5      spec: 0xDB mod/reg/rm /7 mod!=3 */
            case 0x7E: /* DBh 7Eh FSTPf80 f80(r/m) mod=1 reg=7 rm=6      spec: 0xDB mod/reg/rm /7 mod!=3 */
            case 0x7F: /* DBh 7Fh FSTPf80 f80(r/m) mod=1 reg=7 rm=7      spec: 0xDB mod/reg/rm /7 mod!=3 */
            case 0xB8: /* DBh B8h FSTPf80 f80(r/m) mod=2 reg=7 rm=0      spec: 0xDB mod/reg/rm /7 mod!=3 */
            case 0xB9: /* DBh B9h FSTPf80 f80(r/m) mod=2 reg=7 rm=1      spec: 0xDB mod/reg/rm /7 mod!=3 */
            case 0xBA: /* DBh BAh FSTPf80 f80(r/m) mod=2 reg=7 rm=2      spec: 0xDB mod/reg/rm /7 mod!=3 */
            case 0xBB: /* DBh BBh FSTPf80 f80(r/m) mod=2 reg=7 rm=3      spec: 0xDB mod/reg/rm /7 mod!=3 */
            case 0xBC: /* DBh BCh FSTPf80 f80(r/m) mod=2 reg=7 rm=4      spec: 0xDB mod/reg/rm /7 mod!=3 */
            case 0xBD: /* DBh BDh FSTPf80 f80(r/m) mod=2 reg=7 rm=5      spec: 0xDB mod/reg/rm /7 mod!=3 */
            case 0xBE: /* DBh BEh FSTPf80 f80(r/m) mod=2 reg=7 rm=6      spec: 0xDB mod/reg/rm /7 mod!=3 */
            case 0xBF: /* DBh BFh FSTPf80 f80(r/m) mod=2 reg=7 rm=7      spec: 0xDB mod/reg/rm /7 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSTPf80 %s",IPDecPrint32(mrm,sib,disp,10,RC_FPUREG,"f80"));
                break;
            /* opcode DBh 48h  not defined */
            /* opcode DBh 49h  not defined */
            /* opcode DBh 4Ah  not defined */
            /* opcode DBh 4Bh  not defined */
            /* opcode DBh 4Ch  not defined */
            /* opcode DBh 4Dh  not defined */
            /* opcode DBh 4Eh  not defined */
            /* opcode DBh 4Fh  not defined */
            /* opcode DBh 60h  not defined */
            /* opcode DBh 61h  not defined */
            /* opcode DBh 62h  not defined */
            /* opcode DBh 63h  not defined */
            /* opcode DBh 64h  not defined */
            /* opcode DBh 65h  not defined */
            /* opcode DBh 66h  not defined */
            /* opcode DBh 67h  not defined */
            /* opcode DBh 70h  not defined */
            /* opcode DBh 71h  not defined */
            /* opcode DBh 72h  not defined */
            /* opcode DBh 73h  not defined */
            /* opcode DBh 74h  not defined */
            /* opcode DBh 75h  not defined */
            /* opcode DBh 76h  not defined */
            /* opcode DBh 77h  not defined */
            /* opcode DBh 88h  not defined */
            /* opcode DBh 89h  not defined */
            /* opcode DBh 8Ah  not defined */
            /* opcode DBh 8Bh  not defined */
            /* opcode DBh 8Ch  not defined */
            /* opcode DBh 8Dh  not defined */
            /* opcode DBh 8Eh  not defined */
            /* opcode DBh 8Fh  not defined */
            /* opcode DBh A0h  not defined */
            /* opcode DBh A1h  not defined */
            /* opcode DBh A2h  not defined */
            /* opcode DBh A3h  not defined */
            /* opcode DBh A4h  not defined */
            /* opcode DBh A5h  not defined */
            /* opcode DBh A6h  not defined */
            /* opcode DBh A7h  not defined */
            /* opcode DBh B0h  not defined */
            /* opcode DBh B1h  not defined */
            /* opcode DBh B2h  not defined */
            /* opcode DBh B3h  not defined */
            /* opcode DBh B4h  not defined */
            /* opcode DBh B5h  not defined */
            /* opcode DBh B6h  not defined */
            /* opcode DBh B7h  not defined */
            /* opcode DBh C0h  not defined */
            /* opcode DBh C1h  not defined */
            /* opcode DBh C2h  not defined */
            /* opcode DBh C3h  not defined */
            /* opcode DBh C4h  not defined */
            /* opcode DBh C5h  not defined */
            /* opcode DBh C6h  not defined */
            /* opcode DBh C7h  not defined */
            /* opcode DBh C8h  not defined */
            /* opcode DBh C9h  not defined */
            /* opcode DBh CAh  not defined */
            /* opcode DBh CBh  not defined */
            /* opcode DBh CCh  not defined */
            /* opcode DBh CDh  not defined */
            /* opcode DBh CEh  not defined */
            /* opcode DBh CFh  not defined */
            /* opcode DBh D0h  not defined */
            /* opcode DBh D1h  not defined */
            /* opcode DBh D2h  not defined */
            /* opcode DBh D3h  not defined */
            /* opcode DBh D4h  not defined */
            /* opcode DBh D5h  not defined */
            /* opcode DBh D6h  not defined */
            /* opcode DBh D7h  not defined */
            /* opcode DBh D8h  not defined */
            /* opcode DBh D9h  not defined */
            /* opcode DBh DAh  not defined */
            /* opcode DBh DBh  not defined */
            /* opcode DBh DCh  not defined */
            /* opcode DBh DDh  not defined */
            /* opcode DBh DEh  not defined */
            /* opcode DBh DFh  not defined */
            case 0xE0: /* DBh E0h FENI  mod=3 reg=4 rm=0      spec: 0xDB 0xE0 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FENI");
                break;
            case 0xE1: /* DBh E1h FDISI  mod=3 reg=4 rm=1      spec: 0xDB 0xE1 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FDISI");
                break;
            case 0xE2: /* DBh E2h FCLEX  mod=3 reg=4 rm=2      spec: 0xDB 0xE2 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FCLEX");
                break;
            case 0xE3: /* DBh E3h FINIT  mod=3 reg=4 rm=3      spec: 0xDB 0xE3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FINIT");
                break;
            case 0xE4: /* DBh E4h FSETPM  mod=3 reg=4 rm=4      spec: 0xDB 0xE4 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSETPM");
                break;
            /* opcode DBh E5h  not defined */
            /* opcode DBh E6h  not defined */
            /* opcode DBh E7h  not defined */
            /* opcode DBh E8h  not defined */
            /* opcode DBh E9h  not defined */
            /* opcode DBh EAh  not defined */
            /* opcode DBh EBh  not defined */
            /* opcode DBh ECh  not defined */
            /* opcode DBh EDh  not defined */
            /* opcode DBh EEh  not defined */
            /* opcode DBh EFh  not defined */
            /* opcode DBh F0h  not defined */
            /* opcode DBh F1h  not defined */
            /* opcode DBh F2h  not defined */
            /* opcode DBh F3h  not defined */
            /* opcode DBh F4h  not defined */
            /* opcode DBh F5h  not defined */
            /* opcode DBh F6h  not defined */
            /* opcode DBh F7h  not defined */
            /* opcode DBh F8h  not defined */
            /* opcode DBh F9h  not defined */
            /* opcode DBh FAh  not defined */
            /* opcode DBh FBh  not defined */
            /* opcode DBh FCh  not defined */
            /* opcode DBh FDh  not defined */
            /* opcode DBh FEh  not defined */
            /* opcode DBh FFh  not defined */
            default:
                goto _x86decode_illegal_opcode;
        };
/* End of opcodes starting with DBh */
        break;
    case 0xDC: /* DCh        spec:  */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
/* Opcodes starting with DCh */
        switch (mrm.byte) {
            case 0x00: /* DCh 00h FADDf64 f64(r/m) mod=0 reg=0 rm=0      spec: 0xDC mod/reg/rm /0 mod!=3 */
            case 0x01: /* DCh 01h FADDf64 f64(r/m) mod=0 reg=0 rm=1      spec: 0xDC mod/reg/rm /0 mod!=3 */
            case 0x02: /* DCh 02h FADDf64 f64(r/m) mod=0 reg=0 rm=2      spec: 0xDC mod/reg/rm /0 mod!=3 */
            case 0x03: /* DCh 03h FADDf64 f64(r/m) mod=0 reg=0 rm=3      spec: 0xDC mod/reg/rm /0 mod!=3 */
            case 0x04: /* DCh 04h FADDf64 f64(r/m) mod=0 reg=0 rm=4      spec: 0xDC mod/reg/rm /0 mod!=3 */
            case 0x05: /* DCh 05h FADDf64 f64(r/m) mod=0 reg=0 rm=5      spec: 0xDC mod/reg/rm /0 mod!=3 */
            case 0x06: /* DCh 06h FADDf64 f64(r/m) mod=0 reg=0 rm=6      spec: 0xDC mod/reg/rm /0 mod!=3 */
            case 0x07: /* DCh 07h FADDf64 f64(r/m) mod=0 reg=0 rm=7      spec: 0xDC mod/reg/rm /0 mod!=3 */
            case 0x40: /* DCh 40h FADDf64 f64(r/m) mod=1 reg=0 rm=0      spec: 0xDC mod/reg/rm /0 mod!=3 */
            case 0x41: /* DCh 41h FADDf64 f64(r/m) mod=1 reg=0 rm=1      spec: 0xDC mod/reg/rm /0 mod!=3 */
            case 0x42: /* DCh 42h FADDf64 f64(r/m) mod=1 reg=0 rm=2      spec: 0xDC mod/reg/rm /0 mod!=3 */
            case 0x43: /* DCh 43h FADDf64 f64(r/m) mod=1 reg=0 rm=3      spec: 0xDC mod/reg/rm /0 mod!=3 */
            case 0x44: /* DCh 44h FADDf64 f64(r/m) mod=1 reg=0 rm=4      spec: 0xDC mod/reg/rm /0 mod!=3 */
            case 0x45: /* DCh 45h FADDf64 f64(r/m) mod=1 reg=0 rm=5      spec: 0xDC mod/reg/rm /0 mod!=3 */
            case 0x46: /* DCh 46h FADDf64 f64(r/m) mod=1 reg=0 rm=6      spec: 0xDC mod/reg/rm /0 mod!=3 */
            case 0x47: /* DCh 47h FADDf64 f64(r/m) mod=1 reg=0 rm=7      spec: 0xDC mod/reg/rm /0 mod!=3 */
            case 0x80: /* DCh 80h FADDf64 f64(r/m) mod=2 reg=0 rm=0      spec: 0xDC mod/reg/rm /0 mod!=3 */
            case 0x81: /* DCh 81h FADDf64 f64(r/m) mod=2 reg=0 rm=1      spec: 0xDC mod/reg/rm /0 mod!=3 */
            case 0x82: /* DCh 82h FADDf64 f64(r/m) mod=2 reg=0 rm=2      spec: 0xDC mod/reg/rm /0 mod!=3 */
            case 0x83: /* DCh 83h FADDf64 f64(r/m) mod=2 reg=0 rm=3      spec: 0xDC mod/reg/rm /0 mod!=3 */
            case 0x84: /* DCh 84h FADDf64 f64(r/m) mod=2 reg=0 rm=4      spec: 0xDC mod/reg/rm /0 mod!=3 */
            case 0x85: /* DCh 85h FADDf64 f64(r/m) mod=2 reg=0 rm=5      spec: 0xDC mod/reg/rm /0 mod!=3 */
            case 0x86: /* DCh 86h FADDf64 f64(r/m) mod=2 reg=0 rm=6      spec: 0xDC mod/reg/rm /0 mod!=3 */
            case 0x87: /* DCh 87h FADDf64 f64(r/m) mod=2 reg=0 rm=7      spec: 0xDC mod/reg/rm /0 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FADDf64 %s",IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,"f64"));
                break;
            case 0x08: /* DCh 08h FMULf64 f64(r/m) mod=0 reg=1 rm=0      spec: 0xDC mod/reg/rm /1 mod!=3 */
            case 0x09: /* DCh 09h FMULf64 f64(r/m) mod=0 reg=1 rm=1      spec: 0xDC mod/reg/rm /1 mod!=3 */
            case 0x0A: /* DCh 0Ah FMULf64 f64(r/m) mod=0 reg=1 rm=2      spec: 0xDC mod/reg/rm /1 mod!=3 */
            case 0x0B: /* DCh 0Bh FMULf64 f64(r/m) mod=0 reg=1 rm=3      spec: 0xDC mod/reg/rm /1 mod!=3 */
            case 0x0C: /* DCh 0Ch FMULf64 f64(r/m) mod=0 reg=1 rm=4      spec: 0xDC mod/reg/rm /1 mod!=3 */
            case 0x0D: /* DCh 0Dh FMULf64 f64(r/m) mod=0 reg=1 rm=5      spec: 0xDC mod/reg/rm /1 mod!=3 */
            case 0x0E: /* DCh 0Eh FMULf64 f64(r/m) mod=0 reg=1 rm=6      spec: 0xDC mod/reg/rm /1 mod!=3 */
            case 0x0F: /* DCh 0Fh FMULf64 f64(r/m) mod=0 reg=1 rm=7      spec: 0xDC mod/reg/rm /1 mod!=3 */
            case 0x48: /* DCh 48h FMULf64 f64(r/m) mod=1 reg=1 rm=0      spec: 0xDC mod/reg/rm /1 mod!=3 */
            case 0x49: /* DCh 49h FMULf64 f64(r/m) mod=1 reg=1 rm=1      spec: 0xDC mod/reg/rm /1 mod!=3 */
            case 0x4A: /* DCh 4Ah FMULf64 f64(r/m) mod=1 reg=1 rm=2      spec: 0xDC mod/reg/rm /1 mod!=3 */
            case 0x4B: /* DCh 4Bh FMULf64 f64(r/m) mod=1 reg=1 rm=3      spec: 0xDC mod/reg/rm /1 mod!=3 */
            case 0x4C: /* DCh 4Ch FMULf64 f64(r/m) mod=1 reg=1 rm=4      spec: 0xDC mod/reg/rm /1 mod!=3 */
            case 0x4D: /* DCh 4Dh FMULf64 f64(r/m) mod=1 reg=1 rm=5      spec: 0xDC mod/reg/rm /1 mod!=3 */
            case 0x4E: /* DCh 4Eh FMULf64 f64(r/m) mod=1 reg=1 rm=6      spec: 0xDC mod/reg/rm /1 mod!=3 */
            case 0x4F: /* DCh 4Fh FMULf64 f64(r/m) mod=1 reg=1 rm=7      spec: 0xDC mod/reg/rm /1 mod!=3 */
            case 0x88: /* DCh 88h FMULf64 f64(r/m) mod=2 reg=1 rm=0      spec: 0xDC mod/reg/rm /1 mod!=3 */
            case 0x89: /* DCh 89h FMULf64 f64(r/m) mod=2 reg=1 rm=1      spec: 0xDC mod/reg/rm /1 mod!=3 */
            case 0x8A: /* DCh 8Ah FMULf64 f64(r/m) mod=2 reg=1 rm=2      spec: 0xDC mod/reg/rm /1 mod!=3 */
            case 0x8B: /* DCh 8Bh FMULf64 f64(r/m) mod=2 reg=1 rm=3      spec: 0xDC mod/reg/rm /1 mod!=3 */
            case 0x8C: /* DCh 8Ch FMULf64 f64(r/m) mod=2 reg=1 rm=4      spec: 0xDC mod/reg/rm /1 mod!=3 */
            case 0x8D: /* DCh 8Dh FMULf64 f64(r/m) mod=2 reg=1 rm=5      spec: 0xDC mod/reg/rm /1 mod!=3 */
            case 0x8E: /* DCh 8Eh FMULf64 f64(r/m) mod=2 reg=1 rm=6      spec: 0xDC mod/reg/rm /1 mod!=3 */
            case 0x8F: /* DCh 8Fh FMULf64 f64(r/m) mod=2 reg=1 rm=7      spec: 0xDC mod/reg/rm /1 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FMULf64 %s",IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,"f64"));
                break;
            case 0x10: /* DCh 10h FCOMf64 f64(r/m) mod=0 reg=2 rm=0      spec: 0xDC mod/reg/rm /2 mod!=3 */
            case 0x11: /* DCh 11h FCOMf64 f64(r/m) mod=0 reg=2 rm=1      spec: 0xDC mod/reg/rm /2 mod!=3 */
            case 0x12: /* DCh 12h FCOMf64 f64(r/m) mod=0 reg=2 rm=2      spec: 0xDC mod/reg/rm /2 mod!=3 */
            case 0x13: /* DCh 13h FCOMf64 f64(r/m) mod=0 reg=2 rm=3      spec: 0xDC mod/reg/rm /2 mod!=3 */
            case 0x14: /* DCh 14h FCOMf64 f64(r/m) mod=0 reg=2 rm=4      spec: 0xDC mod/reg/rm /2 mod!=3 */
            case 0x15: /* DCh 15h FCOMf64 f64(r/m) mod=0 reg=2 rm=5      spec: 0xDC mod/reg/rm /2 mod!=3 */
            case 0x16: /* DCh 16h FCOMf64 f64(r/m) mod=0 reg=2 rm=6      spec: 0xDC mod/reg/rm /2 mod!=3 */
            case 0x17: /* DCh 17h FCOMf64 f64(r/m) mod=0 reg=2 rm=7      spec: 0xDC mod/reg/rm /2 mod!=3 */
            case 0x50: /* DCh 50h FCOMf64 f64(r/m) mod=1 reg=2 rm=0      spec: 0xDC mod/reg/rm /2 mod!=3 */
            case 0x51: /* DCh 51h FCOMf64 f64(r/m) mod=1 reg=2 rm=1      spec: 0xDC mod/reg/rm /2 mod!=3 */
            case 0x52: /* DCh 52h FCOMf64 f64(r/m) mod=1 reg=2 rm=2      spec: 0xDC mod/reg/rm /2 mod!=3 */
            case 0x53: /* DCh 53h FCOMf64 f64(r/m) mod=1 reg=2 rm=3      spec: 0xDC mod/reg/rm /2 mod!=3 */
            case 0x54: /* DCh 54h FCOMf64 f64(r/m) mod=1 reg=2 rm=4      spec: 0xDC mod/reg/rm /2 mod!=3 */
            case 0x55: /* DCh 55h FCOMf64 f64(r/m) mod=1 reg=2 rm=5      spec: 0xDC mod/reg/rm /2 mod!=3 */
            case 0x56: /* DCh 56h FCOMf64 f64(r/m) mod=1 reg=2 rm=6      spec: 0xDC mod/reg/rm /2 mod!=3 */
            case 0x57: /* DCh 57h FCOMf64 f64(r/m) mod=1 reg=2 rm=7      spec: 0xDC mod/reg/rm /2 mod!=3 */
            case 0x90: /* DCh 90h FCOMf64 f64(r/m) mod=2 reg=2 rm=0      spec: 0xDC mod/reg/rm /2 mod!=3 */
            case 0x91: /* DCh 91h FCOMf64 f64(r/m) mod=2 reg=2 rm=1      spec: 0xDC mod/reg/rm /2 mod!=3 */
            case 0x92: /* DCh 92h FCOMf64 f64(r/m) mod=2 reg=2 rm=2      spec: 0xDC mod/reg/rm /2 mod!=3 */
            case 0x93: /* DCh 93h FCOMf64 f64(r/m) mod=2 reg=2 rm=3      spec: 0xDC mod/reg/rm /2 mod!=3 */
            case 0x94: /* DCh 94h FCOMf64 f64(r/m) mod=2 reg=2 rm=4      spec: 0xDC mod/reg/rm /2 mod!=3 */
            case 0x95: /* DCh 95h FCOMf64 f64(r/m) mod=2 reg=2 rm=5      spec: 0xDC mod/reg/rm /2 mod!=3 */
            case 0x96: /* DCh 96h FCOMf64 f64(r/m) mod=2 reg=2 rm=6      spec: 0xDC mod/reg/rm /2 mod!=3 */
            case 0x97: /* DCh 97h FCOMf64 f64(r/m) mod=2 reg=2 rm=7      spec: 0xDC mod/reg/rm /2 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FCOMf64 %s",IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,"f64"));
                break;
            case 0x18: /* DCh 18h FCOMPf64 f64(r/m) mod=0 reg=3 rm=0      spec: 0xDC mod/reg/rm /3 mod!=3 */
            case 0x19: /* DCh 19h FCOMPf64 f64(r/m) mod=0 reg=3 rm=1      spec: 0xDC mod/reg/rm /3 mod!=3 */
            case 0x1A: /* DCh 1Ah FCOMPf64 f64(r/m) mod=0 reg=3 rm=2      spec: 0xDC mod/reg/rm /3 mod!=3 */
            case 0x1B: /* DCh 1Bh FCOMPf64 f64(r/m) mod=0 reg=3 rm=3      spec: 0xDC mod/reg/rm /3 mod!=3 */
            case 0x1C: /* DCh 1Ch FCOMPf64 f64(r/m) mod=0 reg=3 rm=4      spec: 0xDC mod/reg/rm /3 mod!=3 */
            case 0x1D: /* DCh 1Dh FCOMPf64 f64(r/m) mod=0 reg=3 rm=5      spec: 0xDC mod/reg/rm /3 mod!=3 */
            case 0x1E: /* DCh 1Eh FCOMPf64 f64(r/m) mod=0 reg=3 rm=6      spec: 0xDC mod/reg/rm /3 mod!=3 */
            case 0x1F: /* DCh 1Fh FCOMPf64 f64(r/m) mod=0 reg=3 rm=7      spec: 0xDC mod/reg/rm /3 mod!=3 */
            case 0x58: /* DCh 58h FCOMPf64 f64(r/m) mod=1 reg=3 rm=0      spec: 0xDC mod/reg/rm /3 mod!=3 */
            case 0x59: /* DCh 59h FCOMPf64 f64(r/m) mod=1 reg=3 rm=1      spec: 0xDC mod/reg/rm /3 mod!=3 */
            case 0x5A: /* DCh 5Ah FCOMPf64 f64(r/m) mod=1 reg=3 rm=2      spec: 0xDC mod/reg/rm /3 mod!=3 */
            case 0x5B: /* DCh 5Bh FCOMPf64 f64(r/m) mod=1 reg=3 rm=3      spec: 0xDC mod/reg/rm /3 mod!=3 */
            case 0x5C: /* DCh 5Ch FCOMPf64 f64(r/m) mod=1 reg=3 rm=4      spec: 0xDC mod/reg/rm /3 mod!=3 */
            case 0x5D: /* DCh 5Dh FCOMPf64 f64(r/m) mod=1 reg=3 rm=5      spec: 0xDC mod/reg/rm /3 mod!=3 */
            case 0x5E: /* DCh 5Eh FCOMPf64 f64(r/m) mod=1 reg=3 rm=6      spec: 0xDC mod/reg/rm /3 mod!=3 */
            case 0x5F: /* DCh 5Fh FCOMPf64 f64(r/m) mod=1 reg=3 rm=7      spec: 0xDC mod/reg/rm /3 mod!=3 */
            case 0x98: /* DCh 98h FCOMPf64 f64(r/m) mod=2 reg=3 rm=0      spec: 0xDC mod/reg/rm /3 mod!=3 */
            case 0x99: /* DCh 99h FCOMPf64 f64(r/m) mod=2 reg=3 rm=1      spec: 0xDC mod/reg/rm /3 mod!=3 */
            case 0x9A: /* DCh 9Ah FCOMPf64 f64(r/m) mod=2 reg=3 rm=2      spec: 0xDC mod/reg/rm /3 mod!=3 */
            case 0x9B: /* DCh 9Bh FCOMPf64 f64(r/m) mod=2 reg=3 rm=3      spec: 0xDC mod/reg/rm /3 mod!=3 */
            case 0x9C: /* DCh 9Ch FCOMPf64 f64(r/m) mod=2 reg=3 rm=4      spec: 0xDC mod/reg/rm /3 mod!=3 */
            case 0x9D: /* DCh 9Dh FCOMPf64 f64(r/m) mod=2 reg=3 rm=5      spec: 0xDC mod/reg/rm /3 mod!=3 */
            case 0x9E: /* DCh 9Eh FCOMPf64 f64(r/m) mod=2 reg=3 rm=6      spec: 0xDC mod/reg/rm /3 mod!=3 */
            case 0x9F: /* DCh 9Fh FCOMPf64 f64(r/m) mod=2 reg=3 rm=7      spec: 0xDC mod/reg/rm /3 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FCOMPf64 %s",IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,"f64"));
                break;
            case 0x20: /* DCh 20h FSUBf64 f64(r/m) mod=0 reg=4 rm=0      spec: 0xDC mod/reg/rm /4 mod!=3 */
            case 0x21: /* DCh 21h FSUBf64 f64(r/m) mod=0 reg=4 rm=1      spec: 0xDC mod/reg/rm /4 mod!=3 */
            case 0x22: /* DCh 22h FSUBf64 f64(r/m) mod=0 reg=4 rm=2      spec: 0xDC mod/reg/rm /4 mod!=3 */
            case 0x23: /* DCh 23h FSUBf64 f64(r/m) mod=0 reg=4 rm=3      spec: 0xDC mod/reg/rm /4 mod!=3 */
            case 0x24: /* DCh 24h FSUBf64 f64(r/m) mod=0 reg=4 rm=4      spec: 0xDC mod/reg/rm /4 mod!=3 */
            case 0x25: /* DCh 25h FSUBf64 f64(r/m) mod=0 reg=4 rm=5      spec: 0xDC mod/reg/rm /4 mod!=3 */
            case 0x26: /* DCh 26h FSUBf64 f64(r/m) mod=0 reg=4 rm=6      spec: 0xDC mod/reg/rm /4 mod!=3 */
            case 0x27: /* DCh 27h FSUBf64 f64(r/m) mod=0 reg=4 rm=7      spec: 0xDC mod/reg/rm /4 mod!=3 */
            case 0x60: /* DCh 60h FSUBf64 f64(r/m) mod=1 reg=4 rm=0      spec: 0xDC mod/reg/rm /4 mod!=3 */
            case 0x61: /* DCh 61h FSUBf64 f64(r/m) mod=1 reg=4 rm=1      spec: 0xDC mod/reg/rm /4 mod!=3 */
            case 0x62: /* DCh 62h FSUBf64 f64(r/m) mod=1 reg=4 rm=2      spec: 0xDC mod/reg/rm /4 mod!=3 */
            case 0x63: /* DCh 63h FSUBf64 f64(r/m) mod=1 reg=4 rm=3      spec: 0xDC mod/reg/rm /4 mod!=3 */
            case 0x64: /* DCh 64h FSUBf64 f64(r/m) mod=1 reg=4 rm=4      spec: 0xDC mod/reg/rm /4 mod!=3 */
            case 0x65: /* DCh 65h FSUBf64 f64(r/m) mod=1 reg=4 rm=5      spec: 0xDC mod/reg/rm /4 mod!=3 */
            case 0x66: /* DCh 66h FSUBf64 f64(r/m) mod=1 reg=4 rm=6      spec: 0xDC mod/reg/rm /4 mod!=3 */
            case 0x67: /* DCh 67h FSUBf64 f64(r/m) mod=1 reg=4 rm=7      spec: 0xDC mod/reg/rm /4 mod!=3 */
            case 0xA0: /* DCh A0h FSUBf64 f64(r/m) mod=2 reg=4 rm=0      spec: 0xDC mod/reg/rm /4 mod!=3 */
            case 0xA1: /* DCh A1h FSUBf64 f64(r/m) mod=2 reg=4 rm=1      spec: 0xDC mod/reg/rm /4 mod!=3 */
            case 0xA2: /* DCh A2h FSUBf64 f64(r/m) mod=2 reg=4 rm=2      spec: 0xDC mod/reg/rm /4 mod!=3 */
            case 0xA3: /* DCh A3h FSUBf64 f64(r/m) mod=2 reg=4 rm=3      spec: 0xDC mod/reg/rm /4 mod!=3 */
            case 0xA4: /* DCh A4h FSUBf64 f64(r/m) mod=2 reg=4 rm=4      spec: 0xDC mod/reg/rm /4 mod!=3 */
            case 0xA5: /* DCh A5h FSUBf64 f64(r/m) mod=2 reg=4 rm=5      spec: 0xDC mod/reg/rm /4 mod!=3 */
            case 0xA6: /* DCh A6h FSUBf64 f64(r/m) mod=2 reg=4 rm=6      spec: 0xDC mod/reg/rm /4 mod!=3 */
            case 0xA7: /* DCh A7h FSUBf64 f64(r/m) mod=2 reg=4 rm=7      spec: 0xDC mod/reg/rm /4 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSUBf64 %s",IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,"f64"));
                break;
            case 0x28: /* DCh 28h FSUBRf64 f64(r/m) mod=0 reg=5 rm=0      spec: 0xDC mod/reg/rm /5 mod!=3 */
            case 0x29: /* DCh 29h FSUBRf64 f64(r/m) mod=0 reg=5 rm=1      spec: 0xDC mod/reg/rm /5 mod!=3 */
            case 0x2A: /* DCh 2Ah FSUBRf64 f64(r/m) mod=0 reg=5 rm=2      spec: 0xDC mod/reg/rm /5 mod!=3 */
            case 0x2B: /* DCh 2Bh FSUBRf64 f64(r/m) mod=0 reg=5 rm=3      spec: 0xDC mod/reg/rm /5 mod!=3 */
            case 0x2C: /* DCh 2Ch FSUBRf64 f64(r/m) mod=0 reg=5 rm=4      spec: 0xDC mod/reg/rm /5 mod!=3 */
            case 0x2D: /* DCh 2Dh FSUBRf64 f64(r/m) mod=0 reg=5 rm=5      spec: 0xDC mod/reg/rm /5 mod!=3 */
            case 0x2E: /* DCh 2Eh FSUBRf64 f64(r/m) mod=0 reg=5 rm=6      spec: 0xDC mod/reg/rm /5 mod!=3 */
            case 0x2F: /* DCh 2Fh FSUBRf64 f64(r/m) mod=0 reg=5 rm=7      spec: 0xDC mod/reg/rm /5 mod!=3 */
            case 0x68: /* DCh 68h FSUBRf64 f64(r/m) mod=1 reg=5 rm=0      spec: 0xDC mod/reg/rm /5 mod!=3 */
            case 0x69: /* DCh 69h FSUBRf64 f64(r/m) mod=1 reg=5 rm=1      spec: 0xDC mod/reg/rm /5 mod!=3 */
            case 0x6A: /* DCh 6Ah FSUBRf64 f64(r/m) mod=1 reg=5 rm=2      spec: 0xDC mod/reg/rm /5 mod!=3 */
            case 0x6B: /* DCh 6Bh FSUBRf64 f64(r/m) mod=1 reg=5 rm=3      spec: 0xDC mod/reg/rm /5 mod!=3 */
            case 0x6C: /* DCh 6Ch FSUBRf64 f64(r/m) mod=1 reg=5 rm=4      spec: 0xDC mod/reg/rm /5 mod!=3 */
            case 0x6D: /* DCh 6Dh FSUBRf64 f64(r/m) mod=1 reg=5 rm=5      spec: 0xDC mod/reg/rm /5 mod!=3 */
            case 0x6E: /* DCh 6Eh FSUBRf64 f64(r/m) mod=1 reg=5 rm=6      spec: 0xDC mod/reg/rm /5 mod!=3 */
            case 0x6F: /* DCh 6Fh FSUBRf64 f64(r/m) mod=1 reg=5 rm=7      spec: 0xDC mod/reg/rm /5 mod!=3 */
            case 0xA8: /* DCh A8h FSUBRf64 f64(r/m) mod=2 reg=5 rm=0      spec: 0xDC mod/reg/rm /5 mod!=3 */
            case 0xA9: /* DCh A9h FSUBRf64 f64(r/m) mod=2 reg=5 rm=1      spec: 0xDC mod/reg/rm /5 mod!=3 */
            case 0xAA: /* DCh AAh FSUBRf64 f64(r/m) mod=2 reg=5 rm=2      spec: 0xDC mod/reg/rm /5 mod!=3 */
            case 0xAB: /* DCh ABh FSUBRf64 f64(r/m) mod=2 reg=5 rm=3      spec: 0xDC mod/reg/rm /5 mod!=3 */
            case 0xAC: /* DCh ACh FSUBRf64 f64(r/m) mod=2 reg=5 rm=4      spec: 0xDC mod/reg/rm /5 mod!=3 */
            case 0xAD: /* DCh ADh FSUBRf64 f64(r/m) mod=2 reg=5 rm=5      spec: 0xDC mod/reg/rm /5 mod!=3 */
            case 0xAE: /* DCh AEh FSUBRf64 f64(r/m) mod=2 reg=5 rm=6      spec: 0xDC mod/reg/rm /5 mod!=3 */
            case 0xAF: /* DCh AFh FSUBRf64 f64(r/m) mod=2 reg=5 rm=7      spec: 0xDC mod/reg/rm /5 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSUBRf64 %s",IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,"f64"));
                break;
            case 0x30: /* DCh 30h FDIVf64 f64(r/m) mod=0 reg=6 rm=0      spec: 0xDC mod/reg/rm /6 mod!=3 */
            case 0x31: /* DCh 31h FDIVf64 f64(r/m) mod=0 reg=6 rm=1      spec: 0xDC mod/reg/rm /6 mod!=3 */
            case 0x32: /* DCh 32h FDIVf64 f64(r/m) mod=0 reg=6 rm=2      spec: 0xDC mod/reg/rm /6 mod!=3 */
            case 0x33: /* DCh 33h FDIVf64 f64(r/m) mod=0 reg=6 rm=3      spec: 0xDC mod/reg/rm /6 mod!=3 */
            case 0x34: /* DCh 34h FDIVf64 f64(r/m) mod=0 reg=6 rm=4      spec: 0xDC mod/reg/rm /6 mod!=3 */
            case 0x35: /* DCh 35h FDIVf64 f64(r/m) mod=0 reg=6 rm=5      spec: 0xDC mod/reg/rm /6 mod!=3 */
            case 0x36: /* DCh 36h FDIVf64 f64(r/m) mod=0 reg=6 rm=6      spec: 0xDC mod/reg/rm /6 mod!=3 */
            case 0x37: /* DCh 37h FDIVf64 f64(r/m) mod=0 reg=6 rm=7      spec: 0xDC mod/reg/rm /6 mod!=3 */
            case 0x70: /* DCh 70h FDIVf64 f64(r/m) mod=1 reg=6 rm=0      spec: 0xDC mod/reg/rm /6 mod!=3 */
            case 0x71: /* DCh 71h FDIVf64 f64(r/m) mod=1 reg=6 rm=1      spec: 0xDC mod/reg/rm /6 mod!=3 */
            case 0x72: /* DCh 72h FDIVf64 f64(r/m) mod=1 reg=6 rm=2      spec: 0xDC mod/reg/rm /6 mod!=3 */
            case 0x73: /* DCh 73h FDIVf64 f64(r/m) mod=1 reg=6 rm=3      spec: 0xDC mod/reg/rm /6 mod!=3 */
            case 0x74: /* DCh 74h FDIVf64 f64(r/m) mod=1 reg=6 rm=4      spec: 0xDC mod/reg/rm /6 mod!=3 */
            case 0x75: /* DCh 75h FDIVf64 f64(r/m) mod=1 reg=6 rm=5      spec: 0xDC mod/reg/rm /6 mod!=3 */
            case 0x76: /* DCh 76h FDIVf64 f64(r/m) mod=1 reg=6 rm=6      spec: 0xDC mod/reg/rm /6 mod!=3 */
            case 0x77: /* DCh 77h FDIVf64 f64(r/m) mod=1 reg=6 rm=7      spec: 0xDC mod/reg/rm /6 mod!=3 */
            case 0xB0: /* DCh B0h FDIVf64 f64(r/m) mod=2 reg=6 rm=0      spec: 0xDC mod/reg/rm /6 mod!=3 */
            case 0xB1: /* DCh B1h FDIVf64 f64(r/m) mod=2 reg=6 rm=1      spec: 0xDC mod/reg/rm /6 mod!=3 */
            case 0xB2: /* DCh B2h FDIVf64 f64(r/m) mod=2 reg=6 rm=2      spec: 0xDC mod/reg/rm /6 mod!=3 */
            case 0xB3: /* DCh B3h FDIVf64 f64(r/m) mod=2 reg=6 rm=3      spec: 0xDC mod/reg/rm /6 mod!=3 */
            case 0xB4: /* DCh B4h FDIVf64 f64(r/m) mod=2 reg=6 rm=4      spec: 0xDC mod/reg/rm /6 mod!=3 */
            case 0xB5: /* DCh B5h FDIVf64 f64(r/m) mod=2 reg=6 rm=5      spec: 0xDC mod/reg/rm /6 mod!=3 */
            case 0xB6: /* DCh B6h FDIVf64 f64(r/m) mod=2 reg=6 rm=6      spec: 0xDC mod/reg/rm /6 mod!=3 */
            case 0xB7: /* DCh B7h FDIVf64 f64(r/m) mod=2 reg=6 rm=7      spec: 0xDC mod/reg/rm /6 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FDIVf64 %s",IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,"f64"));
                break;
            case 0x38: /* DCh 38h FDIVRf64 f64(r/m) mod=0 reg=7 rm=0      spec: 0xDC mod/reg/rm /7 mod!=3 */
            case 0x39: /* DCh 39h FDIVRf64 f64(r/m) mod=0 reg=7 rm=1      spec: 0xDC mod/reg/rm /7 mod!=3 */
            case 0x3A: /* DCh 3Ah FDIVRf64 f64(r/m) mod=0 reg=7 rm=2      spec: 0xDC mod/reg/rm /7 mod!=3 */
            case 0x3B: /* DCh 3Bh FDIVRf64 f64(r/m) mod=0 reg=7 rm=3      spec: 0xDC mod/reg/rm /7 mod!=3 */
            case 0x3C: /* DCh 3Ch FDIVRf64 f64(r/m) mod=0 reg=7 rm=4      spec: 0xDC mod/reg/rm /7 mod!=3 */
            case 0x3D: /* DCh 3Dh FDIVRf64 f64(r/m) mod=0 reg=7 rm=5      spec: 0xDC mod/reg/rm /7 mod!=3 */
            case 0x3E: /* DCh 3Eh FDIVRf64 f64(r/m) mod=0 reg=7 rm=6      spec: 0xDC mod/reg/rm /7 mod!=3 */
            case 0x3F: /* DCh 3Fh FDIVRf64 f64(r/m) mod=0 reg=7 rm=7      spec: 0xDC mod/reg/rm /7 mod!=3 */
            case 0x78: /* DCh 78h FDIVRf64 f64(r/m) mod=1 reg=7 rm=0      spec: 0xDC mod/reg/rm /7 mod!=3 */
            case 0x79: /* DCh 79h FDIVRf64 f64(r/m) mod=1 reg=7 rm=1      spec: 0xDC mod/reg/rm /7 mod!=3 */
            case 0x7A: /* DCh 7Ah FDIVRf64 f64(r/m) mod=1 reg=7 rm=2      spec: 0xDC mod/reg/rm /7 mod!=3 */
            case 0x7B: /* DCh 7Bh FDIVRf64 f64(r/m) mod=1 reg=7 rm=3      spec: 0xDC mod/reg/rm /7 mod!=3 */
            case 0x7C: /* DCh 7Ch FDIVRf64 f64(r/m) mod=1 reg=7 rm=4      spec: 0xDC mod/reg/rm /7 mod!=3 */
            case 0x7D: /* DCh 7Dh FDIVRf64 f64(r/m) mod=1 reg=7 rm=5      spec: 0xDC mod/reg/rm /7 mod!=3 */
            case 0x7E: /* DCh 7Eh FDIVRf64 f64(r/m) mod=1 reg=7 rm=6      spec: 0xDC mod/reg/rm /7 mod!=3 */
            case 0x7F: /* DCh 7Fh FDIVRf64 f64(r/m) mod=1 reg=7 rm=7      spec: 0xDC mod/reg/rm /7 mod!=3 */
            case 0xB8: /* DCh B8h FDIVRf64 f64(r/m) mod=2 reg=7 rm=0      spec: 0xDC mod/reg/rm /7 mod!=3 */
            case 0xB9: /* DCh B9h FDIVRf64 f64(r/m) mod=2 reg=7 rm=1      spec: 0xDC mod/reg/rm /7 mod!=3 */
            case 0xBA: /* DCh BAh FDIVRf64 f64(r/m) mod=2 reg=7 rm=2      spec: 0xDC mod/reg/rm /7 mod!=3 */
            case 0xBB: /* DCh BBh FDIVRf64 f64(r/m) mod=2 reg=7 rm=3      spec: 0xDC mod/reg/rm /7 mod!=3 */
            case 0xBC: /* DCh BCh FDIVRf64 f64(r/m) mod=2 reg=7 rm=4      spec: 0xDC mod/reg/rm /7 mod!=3 */
            case 0xBD: /* DCh BDh FDIVRf64 f64(r/m) mod=2 reg=7 rm=5      spec: 0xDC mod/reg/rm /7 mod!=3 */
            case 0xBE: /* DCh BEh FDIVRf64 f64(r/m) mod=2 reg=7 rm=6      spec: 0xDC mod/reg/rm /7 mod!=3 */
            case 0xBF: /* DCh BFh FDIVRf64 f64(r/m) mod=2 reg=7 rm=7      spec: 0xDC mod/reg/rm /7 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FDIVRf64 %s",IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,"f64"));
                break;
            case 0xC0: /* DCh C0h FADD st(r/m),st(0) mod=3 reg=0 rm=0      spec: 0xDC mod/reg/rm /0 mod==3 */
            case 0xC1: /* DCh C1h FADD st(r/m),st(0) mod=3 reg=0 rm=1      spec: 0xDC mod/reg/rm /0 mod==3 */
            case 0xC2: /* DCh C2h FADD st(r/m),st(0) mod=3 reg=0 rm=2      spec: 0xDC mod/reg/rm /0 mod==3 */
            case 0xC3: /* DCh C3h FADD st(r/m),st(0) mod=3 reg=0 rm=3      spec: 0xDC mod/reg/rm /0 mod==3 */
            case 0xC4: /* DCh C4h FADD st(r/m),st(0) mod=3 reg=0 rm=4      spec: 0xDC mod/reg/rm /0 mod==3 */
            case 0xC5: /* DCh C5h FADD st(r/m),st(0) mod=3 reg=0 rm=5      spec: 0xDC mod/reg/rm /0 mod==3 */
            case 0xC6: /* DCh C6h FADD st(r/m),st(0) mod=3 reg=0 rm=6      spec: 0xDC mod/reg/rm /0 mod==3 */
            case 0xC7: /* DCh C7h FADD st(r/m),st(0) mod=3 reg=0 rm=7      spec: 0xDC mod/reg/rm /0 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FADD %s,ST(%u)",IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""),0);
                break;
            case 0xC8: /* DCh C8h FMUL st(r/m),st(0) mod=3 reg=1 rm=0      spec: 0xDC mod/reg/rm /1 mod==3 */
            case 0xC9: /* DCh C9h FMUL st(r/m),st(0) mod=3 reg=1 rm=1      spec: 0xDC mod/reg/rm /1 mod==3 */
            case 0xCA: /* DCh CAh FMUL st(r/m),st(0) mod=3 reg=1 rm=2      spec: 0xDC mod/reg/rm /1 mod==3 */
            case 0xCB: /* DCh CBh FMUL st(r/m),st(0) mod=3 reg=1 rm=3      spec: 0xDC mod/reg/rm /1 mod==3 */
            case 0xCC: /* DCh CCh FMUL st(r/m),st(0) mod=3 reg=1 rm=4      spec: 0xDC mod/reg/rm /1 mod==3 */
            case 0xCD: /* DCh CDh FMUL st(r/m),st(0) mod=3 reg=1 rm=5      spec: 0xDC mod/reg/rm /1 mod==3 */
            case 0xCE: /* DCh CEh FMUL st(r/m),st(0) mod=3 reg=1 rm=6      spec: 0xDC mod/reg/rm /1 mod==3 */
            case 0xCF: /* DCh CFh FMUL st(r/m),st(0) mod=3 reg=1 rm=7      spec: 0xDC mod/reg/rm /1 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FMUL %s,ST(%u)",IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""),0);
                break;
            /* opcode DCh D0h  not defined */
            /* opcode DCh D1h  not defined */
            /* opcode DCh D2h  not defined */
            /* opcode DCh D3h  not defined */
            /* opcode DCh D4h  not defined */
            /* opcode DCh D5h  not defined */
            /* opcode DCh D6h  not defined */
            /* opcode DCh D7h  not defined */
            /* opcode DCh D8h  not defined */
            /* opcode DCh D9h  not defined */
            /* opcode DCh DAh  not defined */
            /* opcode DCh DBh  not defined */
            /* opcode DCh DCh  not defined */
            /* opcode DCh DDh  not defined */
            /* opcode DCh DEh  not defined */
            /* opcode DCh DFh  not defined */
            case 0xE0: /* DCh E0h FSUB st(r/m),st(0) mod=3 reg=4 rm=0      spec: 0xDC mod/reg/rm /4 mod==3 */
            case 0xE1: /* DCh E1h FSUB st(r/m),st(0) mod=3 reg=4 rm=1      spec: 0xDC mod/reg/rm /4 mod==3 */
            case 0xE2: /* DCh E2h FSUB st(r/m),st(0) mod=3 reg=4 rm=2      spec: 0xDC mod/reg/rm /4 mod==3 */
            case 0xE3: /* DCh E3h FSUB st(r/m),st(0) mod=3 reg=4 rm=3      spec: 0xDC mod/reg/rm /4 mod==3 */
            case 0xE4: /* DCh E4h FSUB st(r/m),st(0) mod=3 reg=4 rm=4      spec: 0xDC mod/reg/rm /4 mod==3 */
            case 0xE5: /* DCh E5h FSUB st(r/m),st(0) mod=3 reg=4 rm=5      spec: 0xDC mod/reg/rm /4 mod==3 */
            case 0xE6: /* DCh E6h FSUB st(r/m),st(0) mod=3 reg=4 rm=6      spec: 0xDC mod/reg/rm /4 mod==3 */
            case 0xE7: /* DCh E7h FSUB st(r/m),st(0) mod=3 reg=4 rm=7      spec: 0xDC mod/reg/rm /4 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSUB %s,ST(%u)",IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""),0);
                break;
            case 0xE8: /* DCh E8h FSUBR st(r/m),st(0) mod=3 reg=5 rm=0      spec: 0xDC mod/reg/rm /5 mod==3 */
            case 0xE9: /* DCh E9h FSUBR st(r/m),st(0) mod=3 reg=5 rm=1      spec: 0xDC mod/reg/rm /5 mod==3 */
            case 0xEA: /* DCh EAh FSUBR st(r/m),st(0) mod=3 reg=5 rm=2      spec: 0xDC mod/reg/rm /5 mod==3 */
            case 0xEB: /* DCh EBh FSUBR st(r/m),st(0) mod=3 reg=5 rm=3      spec: 0xDC mod/reg/rm /5 mod==3 */
            case 0xEC: /* DCh ECh FSUBR st(r/m),st(0) mod=3 reg=5 rm=4      spec: 0xDC mod/reg/rm /5 mod==3 */
            case 0xED: /* DCh EDh FSUBR st(r/m),st(0) mod=3 reg=5 rm=5      spec: 0xDC mod/reg/rm /5 mod==3 */
            case 0xEE: /* DCh EEh FSUBR st(r/m),st(0) mod=3 reg=5 rm=6      spec: 0xDC mod/reg/rm /5 mod==3 */
            case 0xEF: /* DCh EFh FSUBR st(r/m),st(0) mod=3 reg=5 rm=7      spec: 0xDC mod/reg/rm /5 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSUBR %s,ST(%u)",IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""),0);
                break;
            case 0xF0: /* DCh F0h FDIV st(r/m),st(0) mod=3 reg=6 rm=0      spec: 0xDC mod/reg/rm /6 mod==3 */
            case 0xF1: /* DCh F1h FDIV st(r/m),st(0) mod=3 reg=6 rm=1      spec: 0xDC mod/reg/rm /6 mod==3 */
            case 0xF2: /* DCh F2h FDIV st(r/m),st(0) mod=3 reg=6 rm=2      spec: 0xDC mod/reg/rm /6 mod==3 */
            case 0xF3: /* DCh F3h FDIV st(r/m),st(0) mod=3 reg=6 rm=3      spec: 0xDC mod/reg/rm /6 mod==3 */
            case 0xF4: /* DCh F4h FDIV st(r/m),st(0) mod=3 reg=6 rm=4      spec: 0xDC mod/reg/rm /6 mod==3 */
            case 0xF5: /* DCh F5h FDIV st(r/m),st(0) mod=3 reg=6 rm=5      spec: 0xDC mod/reg/rm /6 mod==3 */
            case 0xF6: /* DCh F6h FDIV st(r/m),st(0) mod=3 reg=6 rm=6      spec: 0xDC mod/reg/rm /6 mod==3 */
            case 0xF7: /* DCh F7h FDIV st(r/m),st(0) mod=3 reg=6 rm=7      spec: 0xDC mod/reg/rm /6 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FDIV %s,ST(%u)",IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""),0);
                break;
            case 0xF8: /* DCh F8h FDIVR st(r/m),st(0) mod=3 reg=7 rm=0      spec: 0xDC mod/reg/rm /7 mod==3 */
            case 0xF9: /* DCh F9h FDIVR st(r/m),st(0) mod=3 reg=7 rm=1      spec: 0xDC mod/reg/rm /7 mod==3 */
            case 0xFA: /* DCh FAh FDIVR st(r/m),st(0) mod=3 reg=7 rm=2      spec: 0xDC mod/reg/rm /7 mod==3 */
            case 0xFB: /* DCh FBh FDIVR st(r/m),st(0) mod=3 reg=7 rm=3      spec: 0xDC mod/reg/rm /7 mod==3 */
            case 0xFC: /* DCh FCh FDIVR st(r/m),st(0) mod=3 reg=7 rm=4      spec: 0xDC mod/reg/rm /7 mod==3 */
            case 0xFD: /* DCh FDh FDIVR st(r/m),st(0) mod=3 reg=7 rm=5      spec: 0xDC mod/reg/rm /7 mod==3 */
            case 0xFE: /* DCh FEh FDIVR st(r/m),st(0) mod=3 reg=7 rm=6      spec: 0xDC mod/reg/rm /7 mod==3 */
            case 0xFF: /* DCh FFh FDIVR st(r/m),st(0) mod=3 reg=7 rm=7      spec: 0xDC mod/reg/rm /7 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FDIVR %s,ST(%u)",IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""),0);
                break;
            default:
                goto _x86decode_illegal_opcode;
        };
/* End of opcodes starting with DCh */
        break;
    case 0xDD: /* DDh        spec:  */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
/* Opcodes starting with DDh */
        switch (mrm.byte) {
            case 0x00: /* DDh 00h FLDf64 f64(r/m) mod=0 reg=0 rm=0      spec: 0xDD mod/reg/rm /0 mod!=3 */
            case 0x01: /* DDh 01h FLDf64 f64(r/m) mod=0 reg=0 rm=1      spec: 0xDD mod/reg/rm /0 mod!=3 */
            case 0x02: /* DDh 02h FLDf64 f64(r/m) mod=0 reg=0 rm=2      spec: 0xDD mod/reg/rm /0 mod!=3 */
            case 0x03: /* DDh 03h FLDf64 f64(r/m) mod=0 reg=0 rm=3      spec: 0xDD mod/reg/rm /0 mod!=3 */
            case 0x04: /* DDh 04h FLDf64 f64(r/m) mod=0 reg=0 rm=4      spec: 0xDD mod/reg/rm /0 mod!=3 */
            case 0x05: /* DDh 05h FLDf64 f64(r/m) mod=0 reg=0 rm=5      spec: 0xDD mod/reg/rm /0 mod!=3 */
            case 0x06: /* DDh 06h FLDf64 f64(r/m) mod=0 reg=0 rm=6      spec: 0xDD mod/reg/rm /0 mod!=3 */
            case 0x07: /* DDh 07h FLDf64 f64(r/m) mod=0 reg=0 rm=7      spec: 0xDD mod/reg/rm /0 mod!=3 */
            case 0x40: /* DDh 40h FLDf64 f64(r/m) mod=1 reg=0 rm=0      spec: 0xDD mod/reg/rm /0 mod!=3 */
            case 0x41: /* DDh 41h FLDf64 f64(r/m) mod=1 reg=0 rm=1      spec: 0xDD mod/reg/rm /0 mod!=3 */
            case 0x42: /* DDh 42h FLDf64 f64(r/m) mod=1 reg=0 rm=2      spec: 0xDD mod/reg/rm /0 mod!=3 */
            case 0x43: /* DDh 43h FLDf64 f64(r/m) mod=1 reg=0 rm=3      spec: 0xDD mod/reg/rm /0 mod!=3 */
            case 0x44: /* DDh 44h FLDf64 f64(r/m) mod=1 reg=0 rm=4      spec: 0xDD mod/reg/rm /0 mod!=3 */
            case 0x45: /* DDh 45h FLDf64 f64(r/m) mod=1 reg=0 rm=5      spec: 0xDD mod/reg/rm /0 mod!=3 */
            case 0x46: /* DDh 46h FLDf64 f64(r/m) mod=1 reg=0 rm=6      spec: 0xDD mod/reg/rm /0 mod!=3 */
            case 0x47: /* DDh 47h FLDf64 f64(r/m) mod=1 reg=0 rm=7      spec: 0xDD mod/reg/rm /0 mod!=3 */
            case 0x80: /* DDh 80h FLDf64 f64(r/m) mod=2 reg=0 rm=0      spec: 0xDD mod/reg/rm /0 mod!=3 */
            case 0x81: /* DDh 81h FLDf64 f64(r/m) mod=2 reg=0 rm=1      spec: 0xDD mod/reg/rm /0 mod!=3 */
            case 0x82: /* DDh 82h FLDf64 f64(r/m) mod=2 reg=0 rm=2      spec: 0xDD mod/reg/rm /0 mod!=3 */
            case 0x83: /* DDh 83h FLDf64 f64(r/m) mod=2 reg=0 rm=3      spec: 0xDD mod/reg/rm /0 mod!=3 */
            case 0x84: /* DDh 84h FLDf64 f64(r/m) mod=2 reg=0 rm=4      spec: 0xDD mod/reg/rm /0 mod!=3 */
            case 0x85: /* DDh 85h FLDf64 f64(r/m) mod=2 reg=0 rm=5      spec: 0xDD mod/reg/rm /0 mod!=3 */
            case 0x86: /* DDh 86h FLDf64 f64(r/m) mod=2 reg=0 rm=6      spec: 0xDD mod/reg/rm /0 mod!=3 */
            case 0x87: /* DDh 87h FLDf64 f64(r/m) mod=2 reg=0 rm=7      spec: 0xDD mod/reg/rm /0 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FLDf64 %s",IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,"f64"));
                break;
            /* opcode DDh 08h  not defined */
            /* opcode DDh 09h  not defined */
            /* opcode DDh 0Ah  not defined */
            /* opcode DDh 0Bh  not defined */
            /* opcode DDh 0Ch  not defined */
            /* opcode DDh 0Dh  not defined */
            /* opcode DDh 0Eh  not defined */
            /* opcode DDh 0Fh  not defined */
            case 0x10: /* DDh 10h FSTf64 f64(r/m) mod=0 reg=2 rm=0      spec: 0xDD mod/reg/rm /2 mod!=3 */
            case 0x11: /* DDh 11h FSTf64 f64(r/m) mod=0 reg=2 rm=1      spec: 0xDD mod/reg/rm /2 mod!=3 */
            case 0x12: /* DDh 12h FSTf64 f64(r/m) mod=0 reg=2 rm=2      spec: 0xDD mod/reg/rm /2 mod!=3 */
            case 0x13: /* DDh 13h FSTf64 f64(r/m) mod=0 reg=2 rm=3      spec: 0xDD mod/reg/rm /2 mod!=3 */
            case 0x14: /* DDh 14h FSTf64 f64(r/m) mod=0 reg=2 rm=4      spec: 0xDD mod/reg/rm /2 mod!=3 */
            case 0x15: /* DDh 15h FSTf64 f64(r/m) mod=0 reg=2 rm=5      spec: 0xDD mod/reg/rm /2 mod!=3 */
            case 0x16: /* DDh 16h FSTf64 f64(r/m) mod=0 reg=2 rm=6      spec: 0xDD mod/reg/rm /2 mod!=3 */
            case 0x17: /* DDh 17h FSTf64 f64(r/m) mod=0 reg=2 rm=7      spec: 0xDD mod/reg/rm /2 mod!=3 */
            case 0x50: /* DDh 50h FSTf64 f64(r/m) mod=1 reg=2 rm=0      spec: 0xDD mod/reg/rm /2 mod!=3 */
            case 0x51: /* DDh 51h FSTf64 f64(r/m) mod=1 reg=2 rm=1      spec: 0xDD mod/reg/rm /2 mod!=3 */
            case 0x52: /* DDh 52h FSTf64 f64(r/m) mod=1 reg=2 rm=2      spec: 0xDD mod/reg/rm /2 mod!=3 */
            case 0x53: /* DDh 53h FSTf64 f64(r/m) mod=1 reg=2 rm=3      spec: 0xDD mod/reg/rm /2 mod!=3 */
            case 0x54: /* DDh 54h FSTf64 f64(r/m) mod=1 reg=2 rm=4      spec: 0xDD mod/reg/rm /2 mod!=3 */
            case 0x55: /* DDh 55h FSTf64 f64(r/m) mod=1 reg=2 rm=5      spec: 0xDD mod/reg/rm /2 mod!=3 */
            case 0x56: /* DDh 56h FSTf64 f64(r/m) mod=1 reg=2 rm=6      spec: 0xDD mod/reg/rm /2 mod!=3 */
            case 0x57: /* DDh 57h FSTf64 f64(r/m) mod=1 reg=2 rm=7      spec: 0xDD mod/reg/rm /2 mod!=3 */
            case 0x90: /* DDh 90h FSTf64 f64(r/m) mod=2 reg=2 rm=0      spec: 0xDD mod/reg/rm /2 mod!=3 */
            case 0x91: /* DDh 91h FSTf64 f64(r/m) mod=2 reg=2 rm=1      spec: 0xDD mod/reg/rm /2 mod!=3 */
            case 0x92: /* DDh 92h FSTf64 f64(r/m) mod=2 reg=2 rm=2      spec: 0xDD mod/reg/rm /2 mod!=3 */
            case 0x93: /* DDh 93h FSTf64 f64(r/m) mod=2 reg=2 rm=3      spec: 0xDD mod/reg/rm /2 mod!=3 */
            case 0x94: /* DDh 94h FSTf64 f64(r/m) mod=2 reg=2 rm=4      spec: 0xDD mod/reg/rm /2 mod!=3 */
            case 0x95: /* DDh 95h FSTf64 f64(r/m) mod=2 reg=2 rm=5      spec: 0xDD mod/reg/rm /2 mod!=3 */
            case 0x96: /* DDh 96h FSTf64 f64(r/m) mod=2 reg=2 rm=6      spec: 0xDD mod/reg/rm /2 mod!=3 */
            case 0x97: /* DDh 97h FSTf64 f64(r/m) mod=2 reg=2 rm=7      spec: 0xDD mod/reg/rm /2 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSTf64 %s",IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,"f64"));
                break;
            case 0x18: /* DDh 18h FSTPf64 f64(r/m) mod=0 reg=3 rm=0      spec: 0xDD mod/reg/rm /3 mod!=3 */
            case 0x19: /* DDh 19h FSTPf64 f64(r/m) mod=0 reg=3 rm=1      spec: 0xDD mod/reg/rm /3 mod!=3 */
            case 0x1A: /* DDh 1Ah FSTPf64 f64(r/m) mod=0 reg=3 rm=2      spec: 0xDD mod/reg/rm /3 mod!=3 */
            case 0x1B: /* DDh 1Bh FSTPf64 f64(r/m) mod=0 reg=3 rm=3      spec: 0xDD mod/reg/rm /3 mod!=3 */
            case 0x1C: /* DDh 1Ch FSTPf64 f64(r/m) mod=0 reg=3 rm=4      spec: 0xDD mod/reg/rm /3 mod!=3 */
            case 0x1D: /* DDh 1Dh FSTPf64 f64(r/m) mod=0 reg=3 rm=5      spec: 0xDD mod/reg/rm /3 mod!=3 */
            case 0x1E: /* DDh 1Eh FSTPf64 f64(r/m) mod=0 reg=3 rm=6      spec: 0xDD mod/reg/rm /3 mod!=3 */
            case 0x1F: /* DDh 1Fh FSTPf64 f64(r/m) mod=0 reg=3 rm=7      spec: 0xDD mod/reg/rm /3 mod!=3 */
            case 0x58: /* DDh 58h FSTPf64 f64(r/m) mod=1 reg=3 rm=0      spec: 0xDD mod/reg/rm /3 mod!=3 */
            case 0x59: /* DDh 59h FSTPf64 f64(r/m) mod=1 reg=3 rm=1      spec: 0xDD mod/reg/rm /3 mod!=3 */
            case 0x5A: /* DDh 5Ah FSTPf64 f64(r/m) mod=1 reg=3 rm=2      spec: 0xDD mod/reg/rm /3 mod!=3 */
            case 0x5B: /* DDh 5Bh FSTPf64 f64(r/m) mod=1 reg=3 rm=3      spec: 0xDD mod/reg/rm /3 mod!=3 */
            case 0x5C: /* DDh 5Ch FSTPf64 f64(r/m) mod=1 reg=3 rm=4      spec: 0xDD mod/reg/rm /3 mod!=3 */
            case 0x5D: /* DDh 5Dh FSTPf64 f64(r/m) mod=1 reg=3 rm=5      spec: 0xDD mod/reg/rm /3 mod!=3 */
            case 0x5E: /* DDh 5Eh FSTPf64 f64(r/m) mod=1 reg=3 rm=6      spec: 0xDD mod/reg/rm /3 mod!=3 */
            case 0x5F: /* DDh 5Fh FSTPf64 f64(r/m) mod=1 reg=3 rm=7      spec: 0xDD mod/reg/rm /3 mod!=3 */
            case 0x98: /* DDh 98h FSTPf64 f64(r/m) mod=2 reg=3 rm=0      spec: 0xDD mod/reg/rm /3 mod!=3 */
            case 0x99: /* DDh 99h FSTPf64 f64(r/m) mod=2 reg=3 rm=1      spec: 0xDD mod/reg/rm /3 mod!=3 */
            case 0x9A: /* DDh 9Ah FSTPf64 f64(r/m) mod=2 reg=3 rm=2      spec: 0xDD mod/reg/rm /3 mod!=3 */
            case 0x9B: /* DDh 9Bh FSTPf64 f64(r/m) mod=2 reg=3 rm=3      spec: 0xDD mod/reg/rm /3 mod!=3 */
            case 0x9C: /* DDh 9Ch FSTPf64 f64(r/m) mod=2 reg=3 rm=4      spec: 0xDD mod/reg/rm /3 mod!=3 */
            case 0x9D: /* DDh 9Dh FSTPf64 f64(r/m) mod=2 reg=3 rm=5      spec: 0xDD mod/reg/rm /3 mod!=3 */
            case 0x9E: /* DDh 9Eh FSTPf64 f64(r/m) mod=2 reg=3 rm=6      spec: 0xDD mod/reg/rm /3 mod!=3 */
            case 0x9F: /* DDh 9Fh FSTPf64 f64(r/m) mod=2 reg=3 rm=7      spec: 0xDD mod/reg/rm /3 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSTPf64 %s",IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,"f64"));
                break;
            case 0x20: /* DDh 20h FRSTOR fstate(r/m) mod=0 reg=4 rm=0      spec: 0xDD mod/reg/rm /4 mod!=3 */
            case 0x21: /* DDh 21h FRSTOR fstate(r/m) mod=0 reg=4 rm=1      spec: 0xDD mod/reg/rm /4 mod!=3 */
            case 0x22: /* DDh 22h FRSTOR fstate(r/m) mod=0 reg=4 rm=2      spec: 0xDD mod/reg/rm /4 mod!=3 */
            case 0x23: /* DDh 23h FRSTOR fstate(r/m) mod=0 reg=4 rm=3      spec: 0xDD mod/reg/rm /4 mod!=3 */
            case 0x24: /* DDh 24h FRSTOR fstate(r/m) mod=0 reg=4 rm=4      spec: 0xDD mod/reg/rm /4 mod!=3 */
            case 0x25: /* DDh 25h FRSTOR fstate(r/m) mod=0 reg=4 rm=5      spec: 0xDD mod/reg/rm /4 mod!=3 */
            case 0x26: /* DDh 26h FRSTOR fstate(r/m) mod=0 reg=4 rm=6      spec: 0xDD mod/reg/rm /4 mod!=3 */
            case 0x27: /* DDh 27h FRSTOR fstate(r/m) mod=0 reg=4 rm=7      spec: 0xDD mod/reg/rm /4 mod!=3 */
            case 0x60: /* DDh 60h FRSTOR fstate(r/m) mod=1 reg=4 rm=0      spec: 0xDD mod/reg/rm /4 mod!=3 */
            case 0x61: /* DDh 61h FRSTOR fstate(r/m) mod=1 reg=4 rm=1      spec: 0xDD mod/reg/rm /4 mod!=3 */
            case 0x62: /* DDh 62h FRSTOR fstate(r/m) mod=1 reg=4 rm=2      spec: 0xDD mod/reg/rm /4 mod!=3 */
            case 0x63: /* DDh 63h FRSTOR fstate(r/m) mod=1 reg=4 rm=3      spec: 0xDD mod/reg/rm /4 mod!=3 */
            case 0x64: /* DDh 64h FRSTOR fstate(r/m) mod=1 reg=4 rm=4      spec: 0xDD mod/reg/rm /4 mod!=3 */
            case 0x65: /* DDh 65h FRSTOR fstate(r/m) mod=1 reg=4 rm=5      spec: 0xDD mod/reg/rm /4 mod!=3 */
            case 0x66: /* DDh 66h FRSTOR fstate(r/m) mod=1 reg=4 rm=6      spec: 0xDD mod/reg/rm /4 mod!=3 */
            case 0x67: /* DDh 67h FRSTOR fstate(r/m) mod=1 reg=4 rm=7      spec: 0xDD mod/reg/rm /4 mod!=3 */
            case 0xA0: /* DDh A0h FRSTOR fstate(r/m) mod=2 reg=4 rm=0      spec: 0xDD mod/reg/rm /4 mod!=3 */
            case 0xA1: /* DDh A1h FRSTOR fstate(r/m) mod=2 reg=4 rm=1      spec: 0xDD mod/reg/rm /4 mod!=3 */
            case 0xA2: /* DDh A2h FRSTOR fstate(r/m) mod=2 reg=4 rm=2      spec: 0xDD mod/reg/rm /4 mod!=3 */
            case 0xA3: /* DDh A3h FRSTOR fstate(r/m) mod=2 reg=4 rm=3      spec: 0xDD mod/reg/rm /4 mod!=3 */
            case 0xA4: /* DDh A4h FRSTOR fstate(r/m) mod=2 reg=4 rm=4      spec: 0xDD mod/reg/rm /4 mod!=3 */
            case 0xA5: /* DDh A5h FRSTOR fstate(r/m) mod=2 reg=4 rm=5      spec: 0xDD mod/reg/rm /4 mod!=3 */
            case 0xA6: /* DDh A6h FRSTOR fstate(r/m) mod=2 reg=4 rm=6      spec: 0xDD mod/reg/rm /4 mod!=3 */
            case 0xA7: /* DDh A7h FRSTOR fstate(r/m) mod=2 reg=4 rm=7      spec: 0xDD mod/reg/rm /4 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FRSTOR %s",IPDecPrint32(mrm,sib,disp,0,RC_REG,"fstate"));
                break;
            /* opcode DDh 28h  not defined */
            /* opcode DDh 29h  not defined */
            /* opcode DDh 2Ah  not defined */
            /* opcode DDh 2Bh  not defined */
            /* opcode DDh 2Ch  not defined */
            /* opcode DDh 2Dh  not defined */
            /* opcode DDh 2Eh  not defined */
            /* opcode DDh 2Fh  not defined */
            case 0x30: /* DDh 30h FSAVE fstate(r/m) mod=0 reg=6 rm=0      spec: 0xDD mod/reg/rm /6 mod!=3 */
            case 0x31: /* DDh 31h FSAVE fstate(r/m) mod=0 reg=6 rm=1      spec: 0xDD mod/reg/rm /6 mod!=3 */
            case 0x32: /* DDh 32h FSAVE fstate(r/m) mod=0 reg=6 rm=2      spec: 0xDD mod/reg/rm /6 mod!=3 */
            case 0x33: /* DDh 33h FSAVE fstate(r/m) mod=0 reg=6 rm=3      spec: 0xDD mod/reg/rm /6 mod!=3 */
            case 0x34: /* DDh 34h FSAVE fstate(r/m) mod=0 reg=6 rm=4      spec: 0xDD mod/reg/rm /6 mod!=3 */
            case 0x35: /* DDh 35h FSAVE fstate(r/m) mod=0 reg=6 rm=5      spec: 0xDD mod/reg/rm /6 mod!=3 */
            case 0x36: /* DDh 36h FSAVE fstate(r/m) mod=0 reg=6 rm=6      spec: 0xDD mod/reg/rm /6 mod!=3 */
            case 0x37: /* DDh 37h FSAVE fstate(r/m) mod=0 reg=6 rm=7      spec: 0xDD mod/reg/rm /6 mod!=3 */
            case 0x70: /* DDh 70h FSAVE fstate(r/m) mod=1 reg=6 rm=0      spec: 0xDD mod/reg/rm /6 mod!=3 */
            case 0x71: /* DDh 71h FSAVE fstate(r/m) mod=1 reg=6 rm=1      spec: 0xDD mod/reg/rm /6 mod!=3 */
            case 0x72: /* DDh 72h FSAVE fstate(r/m) mod=1 reg=6 rm=2      spec: 0xDD mod/reg/rm /6 mod!=3 */
            case 0x73: /* DDh 73h FSAVE fstate(r/m) mod=1 reg=6 rm=3      spec: 0xDD mod/reg/rm /6 mod!=3 */
            case 0x74: /* DDh 74h FSAVE fstate(r/m) mod=1 reg=6 rm=4      spec: 0xDD mod/reg/rm /6 mod!=3 */
            case 0x75: /* DDh 75h FSAVE fstate(r/m) mod=1 reg=6 rm=5      spec: 0xDD mod/reg/rm /6 mod!=3 */
            case 0x76: /* DDh 76h FSAVE fstate(r/m) mod=1 reg=6 rm=6      spec: 0xDD mod/reg/rm /6 mod!=3 */
            case 0x77: /* DDh 77h FSAVE fstate(r/m) mod=1 reg=6 rm=7      spec: 0xDD mod/reg/rm /6 mod!=3 */
            case 0xB0: /* DDh B0h FSAVE fstate(r/m) mod=2 reg=6 rm=0      spec: 0xDD mod/reg/rm /6 mod!=3 */
            case 0xB1: /* DDh B1h FSAVE fstate(r/m) mod=2 reg=6 rm=1      spec: 0xDD mod/reg/rm /6 mod!=3 */
            case 0xB2: /* DDh B2h FSAVE fstate(r/m) mod=2 reg=6 rm=2      spec: 0xDD mod/reg/rm /6 mod!=3 */
            case 0xB3: /* DDh B3h FSAVE fstate(r/m) mod=2 reg=6 rm=3      spec: 0xDD mod/reg/rm /6 mod!=3 */
            case 0xB4: /* DDh B4h FSAVE fstate(r/m) mod=2 reg=6 rm=4      spec: 0xDD mod/reg/rm /6 mod!=3 */
            case 0xB5: /* DDh B5h FSAVE fstate(r/m) mod=2 reg=6 rm=5      spec: 0xDD mod/reg/rm /6 mod!=3 */
            case 0xB6: /* DDh B6h FSAVE fstate(r/m) mod=2 reg=6 rm=6      spec: 0xDD mod/reg/rm /6 mod!=3 */
            case 0xB7: /* DDh B7h FSAVE fstate(r/m) mod=2 reg=6 rm=7      spec: 0xDD mod/reg/rm /6 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSAVE %s",IPDecPrint32(mrm,sib,disp,0,RC_REG,"fstate"));
                break;
            case 0x38: /* DDh 38h FSTSW w16(r/m) mod=0 reg=7 rm=0      spec: 0xDD mod/reg/rm /7 mod!=3 */
            case 0x39: /* DDh 39h FSTSW w16(r/m) mod=0 reg=7 rm=1      spec: 0xDD mod/reg/rm /7 mod!=3 */
            case 0x3A: /* DDh 3Ah FSTSW w16(r/m) mod=0 reg=7 rm=2      spec: 0xDD mod/reg/rm /7 mod!=3 */
            case 0x3B: /* DDh 3Bh FSTSW w16(r/m) mod=0 reg=7 rm=3      spec: 0xDD mod/reg/rm /7 mod!=3 */
            case 0x3C: /* DDh 3Ch FSTSW w16(r/m) mod=0 reg=7 rm=4      spec: 0xDD mod/reg/rm /7 mod!=3 */
            case 0x3D: /* DDh 3Dh FSTSW w16(r/m) mod=0 reg=7 rm=5      spec: 0xDD mod/reg/rm /7 mod!=3 */
            case 0x3E: /* DDh 3Eh FSTSW w16(r/m) mod=0 reg=7 rm=6      spec: 0xDD mod/reg/rm /7 mod!=3 */
            case 0x3F: /* DDh 3Fh FSTSW w16(r/m) mod=0 reg=7 rm=7      spec: 0xDD mod/reg/rm /7 mod!=3 */
            case 0x78: /* DDh 78h FSTSW w16(r/m) mod=1 reg=7 rm=0      spec: 0xDD mod/reg/rm /7 mod!=3 */
            case 0x79: /* DDh 79h FSTSW w16(r/m) mod=1 reg=7 rm=1      spec: 0xDD mod/reg/rm /7 mod!=3 */
            case 0x7A: /* DDh 7Ah FSTSW w16(r/m) mod=1 reg=7 rm=2      spec: 0xDD mod/reg/rm /7 mod!=3 */
            case 0x7B: /* DDh 7Bh FSTSW w16(r/m) mod=1 reg=7 rm=3      spec: 0xDD mod/reg/rm /7 mod!=3 */
            case 0x7C: /* DDh 7Ch FSTSW w16(r/m) mod=1 reg=7 rm=4      spec: 0xDD mod/reg/rm /7 mod!=3 */
            case 0x7D: /* DDh 7Dh FSTSW w16(r/m) mod=1 reg=7 rm=5      spec: 0xDD mod/reg/rm /7 mod!=3 */
            case 0x7E: /* DDh 7Eh FSTSW w16(r/m) mod=1 reg=7 rm=6      spec: 0xDD mod/reg/rm /7 mod!=3 */
            case 0x7F: /* DDh 7Fh FSTSW w16(r/m) mod=1 reg=7 rm=7      spec: 0xDD mod/reg/rm /7 mod!=3 */
            case 0xB8: /* DDh B8h FSTSW w16(r/m) mod=2 reg=7 rm=0      spec: 0xDD mod/reg/rm /7 mod!=3 */
            case 0xB9: /* DDh B9h FSTSW w16(r/m) mod=2 reg=7 rm=1      spec: 0xDD mod/reg/rm /7 mod!=3 */
            case 0xBA: /* DDh BAh FSTSW w16(r/m) mod=2 reg=7 rm=2      spec: 0xDD mod/reg/rm /7 mod!=3 */
            case 0xBB: /* DDh BBh FSTSW w16(r/m) mod=2 reg=7 rm=3      spec: 0xDD mod/reg/rm /7 mod!=3 */
            case 0xBC: /* DDh BCh FSTSW w16(r/m) mod=2 reg=7 rm=4      spec: 0xDD mod/reg/rm /7 mod!=3 */
            case 0xBD: /* DDh BDh FSTSW w16(r/m) mod=2 reg=7 rm=5      spec: 0xDD mod/reg/rm /7 mod!=3 */
            case 0xBE: /* DDh BEh FSTSW w16(r/m) mod=2 reg=7 rm=6      spec: 0xDD mod/reg/rm /7 mod!=3 */
            case 0xBF: /* DDh BFh FSTSW w16(r/m) mod=2 reg=7 rm=7      spec: 0xDD mod/reg/rm /7 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSTSW %s",IPDecPrint32(mrm,sib,disp,2,RC_REG,"w16"));
                break;
            /* opcode DDh 48h  not defined */
            /* opcode DDh 49h  not defined */
            /* opcode DDh 4Ah  not defined */
            /* opcode DDh 4Bh  not defined */
            /* opcode DDh 4Ch  not defined */
            /* opcode DDh 4Dh  not defined */
            /* opcode DDh 4Eh  not defined */
            /* opcode DDh 4Fh  not defined */
            /* opcode DDh 68h  not defined */
            /* opcode DDh 69h  not defined */
            /* opcode DDh 6Ah  not defined */
            /* opcode DDh 6Bh  not defined */
            /* opcode DDh 6Ch  not defined */
            /* opcode DDh 6Dh  not defined */
            /* opcode DDh 6Eh  not defined */
            /* opcode DDh 6Fh  not defined */
            /* opcode DDh 88h  not defined */
            /* opcode DDh 89h  not defined */
            /* opcode DDh 8Ah  not defined */
            /* opcode DDh 8Bh  not defined */
            /* opcode DDh 8Ch  not defined */
            /* opcode DDh 8Dh  not defined */
            /* opcode DDh 8Eh  not defined */
            /* opcode DDh 8Fh  not defined */
            /* opcode DDh A8h  not defined */
            /* opcode DDh A9h  not defined */
            /* opcode DDh AAh  not defined */
            /* opcode DDh ABh  not defined */
            /* opcode DDh ACh  not defined */
            /* opcode DDh ADh  not defined */
            /* opcode DDh AEh  not defined */
            /* opcode DDh AFh  not defined */
            case 0xC0: /* DDh C0h FFREE st(r/m) mod=3 reg=0 rm=0      spec: 0xDD mod/reg/rm /0 mod==3 */
            case 0xC1: /* DDh C1h FFREE st(r/m) mod=3 reg=0 rm=1      spec: 0xDD mod/reg/rm /0 mod==3 */
            case 0xC2: /* DDh C2h FFREE st(r/m) mod=3 reg=0 rm=2      spec: 0xDD mod/reg/rm /0 mod==3 */
            case 0xC3: /* DDh C3h FFREE st(r/m) mod=3 reg=0 rm=3      spec: 0xDD mod/reg/rm /0 mod==3 */
            case 0xC4: /* DDh C4h FFREE st(r/m) mod=3 reg=0 rm=4      spec: 0xDD mod/reg/rm /0 mod==3 */
            case 0xC5: /* DDh C5h FFREE st(r/m) mod=3 reg=0 rm=5      spec: 0xDD mod/reg/rm /0 mod==3 */
            case 0xC6: /* DDh C6h FFREE st(r/m) mod=3 reg=0 rm=6      spec: 0xDD mod/reg/rm /0 mod==3 */
            case 0xC7: /* DDh C7h FFREE st(r/m) mod=3 reg=0 rm=7      spec: 0xDD mod/reg/rm /0 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FFREE %s",IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""));
                break;
            /* opcode DDh C8h  not defined */
            /* opcode DDh C9h  not defined */
            /* opcode DDh CAh  not defined */
            /* opcode DDh CBh  not defined */
            /* opcode DDh CCh  not defined */
            /* opcode DDh CDh  not defined */
            /* opcode DDh CEh  not defined */
            /* opcode DDh CFh  not defined */
            case 0xD0: /* DDh D0h FST st(r/m) mod=3 reg=2 rm=0      spec: 0xDD mod/reg/rm /2 mod==3 */
            case 0xD1: /* DDh D1h FST st(r/m) mod=3 reg=2 rm=1      spec: 0xDD mod/reg/rm /2 mod==3 */
            case 0xD2: /* DDh D2h FST st(r/m) mod=3 reg=2 rm=2      spec: 0xDD mod/reg/rm /2 mod==3 */
            case 0xD3: /* DDh D3h FST st(r/m) mod=3 reg=2 rm=3      spec: 0xDD mod/reg/rm /2 mod==3 */
            case 0xD4: /* DDh D4h FST st(r/m) mod=3 reg=2 rm=4      spec: 0xDD mod/reg/rm /2 mod==3 */
            case 0xD5: /* DDh D5h FST st(r/m) mod=3 reg=2 rm=5      spec: 0xDD mod/reg/rm /2 mod==3 */
            case 0xD6: /* DDh D6h FST st(r/m) mod=3 reg=2 rm=6      spec: 0xDD mod/reg/rm /2 mod==3 */
            case 0xD7: /* DDh D7h FST st(r/m) mod=3 reg=2 rm=7      spec: 0xDD mod/reg/rm /2 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FST %s",IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""));
                break;
            case 0xD8: /* DDh D8h FSTP st(r/m) mod=3 reg=3 rm=0      spec: 0xDD mod/reg/rm /3 mod==3 */
            case 0xD9: /* DDh D9h FSTP st(r/m) mod=3 reg=3 rm=1      spec: 0xDD mod/reg/rm /3 mod==3 */
            case 0xDA: /* DDh DAh FSTP st(r/m) mod=3 reg=3 rm=2      spec: 0xDD mod/reg/rm /3 mod==3 */
            case 0xDB: /* DDh DBh FSTP st(r/m) mod=3 reg=3 rm=3      spec: 0xDD mod/reg/rm /3 mod==3 */
            case 0xDC: /* DDh DCh FSTP st(r/m) mod=3 reg=3 rm=4      spec: 0xDD mod/reg/rm /3 mod==3 */
            case 0xDD: /* DDh DDh FSTP st(r/m) mod=3 reg=3 rm=5      spec: 0xDD mod/reg/rm /3 mod==3 */
            case 0xDE: /* DDh DEh FSTP st(r/m) mod=3 reg=3 rm=6      spec: 0xDD mod/reg/rm /3 mod==3 */
            case 0xDF: /* DDh DFh FSTP st(r/m) mod=3 reg=3 rm=7      spec: 0xDD mod/reg/rm /3 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSTP %s",IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""));
                break;
            case 0xE0: /* DDh E0h FUCOM st(r/m) mod=3 reg=4 rm=0      spec: 0xDD mod/reg/rm mod==3 /4 */
            case 0xE1: /* DDh E1h FUCOM st(r/m) mod=3 reg=4 rm=1      spec: 0xDD mod/reg/rm mod==3 /4 */
            case 0xE2: /* DDh E2h FUCOM st(r/m) mod=3 reg=4 rm=2      spec: 0xDD mod/reg/rm mod==3 /4 */
            case 0xE3: /* DDh E3h FUCOM st(r/m) mod=3 reg=4 rm=3      spec: 0xDD mod/reg/rm mod==3 /4 */
            case 0xE4: /* DDh E4h FUCOM st(r/m) mod=3 reg=4 rm=4      spec: 0xDD mod/reg/rm mod==3 /4 */
            case 0xE5: /* DDh E5h FUCOM st(r/m) mod=3 reg=4 rm=5      spec: 0xDD mod/reg/rm mod==3 /4 */
            case 0xE6: /* DDh E6h FUCOM st(r/m) mod=3 reg=4 rm=6      spec: 0xDD mod/reg/rm mod==3 /4 */
            case 0xE7: /* DDh E7h FUCOM st(r/m) mod=3 reg=4 rm=7      spec: 0xDD mod/reg/rm mod==3 /4 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FUCOM %s",IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""));
                break;
            case 0xE8: /* DDh E8h FUCOMP st(r/m) mod=3 reg=5 rm=0      spec: 0xDD mod/reg/rm mod==3 /5 */
            case 0xE9: /* DDh E9h FUCOMP st(r/m) mod=3 reg=5 rm=1      spec: 0xDD mod/reg/rm mod==3 /5 */
            case 0xEA: /* DDh EAh FUCOMP st(r/m) mod=3 reg=5 rm=2      spec: 0xDD mod/reg/rm mod==3 /5 */
            case 0xEB: /* DDh EBh FUCOMP st(r/m) mod=3 reg=5 rm=3      spec: 0xDD mod/reg/rm mod==3 /5 */
            case 0xEC: /* DDh ECh FUCOMP st(r/m) mod=3 reg=5 rm=4      spec: 0xDD mod/reg/rm mod==3 /5 */
            case 0xED: /* DDh EDh FUCOMP st(r/m) mod=3 reg=5 rm=5      spec: 0xDD mod/reg/rm mod==3 /5 */
            case 0xEE: /* DDh EEh FUCOMP st(r/m) mod=3 reg=5 rm=6      spec: 0xDD mod/reg/rm mod==3 /5 */
            case 0xEF: /* DDh EFh FUCOMP st(r/m) mod=3 reg=5 rm=7      spec: 0xDD mod/reg/rm mod==3 /5 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FUCOMP %s",IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""));
                break;
            /* opcode DDh F0h  not defined */
            /* opcode DDh F1h  not defined */
            /* opcode DDh F2h  not defined */
            /* opcode DDh F3h  not defined */
            /* opcode DDh F4h  not defined */
            /* opcode DDh F5h  not defined */
            /* opcode DDh F6h  not defined */
            /* opcode DDh F7h  not defined */
            /* opcode DDh F8h  not defined */
            /* opcode DDh F9h  not defined */
            /* opcode DDh FAh  not defined */
            /* opcode DDh FBh  not defined */
            /* opcode DDh FCh  not defined */
            /* opcode DDh FDh  not defined */
            /* opcode DDh FEh  not defined */
            /* opcode DDh FFh  not defined */
            default:
                goto _x86decode_illegal_opcode;
        };
/* End of opcodes starting with DDh */
        break;
    case 0xDE: /* DEh        spec:  */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
/* Opcodes starting with DEh */
        switch (mrm.byte) {
            case 0x00: /* DEh 00h FADDw w16(r/m) mod=0 reg=0 rm=0      spec: 0xDE mod/reg/rm /0 mod!=3 */
            case 0x01: /* DEh 01h FADDw w16(r/m) mod=0 reg=0 rm=1      spec: 0xDE mod/reg/rm /0 mod!=3 */
            case 0x02: /* DEh 02h FADDw w16(r/m) mod=0 reg=0 rm=2      spec: 0xDE mod/reg/rm /0 mod!=3 */
            case 0x03: /* DEh 03h FADDw w16(r/m) mod=0 reg=0 rm=3      spec: 0xDE mod/reg/rm /0 mod!=3 */
            case 0x04: /* DEh 04h FADDw w16(r/m) mod=0 reg=0 rm=4      spec: 0xDE mod/reg/rm /0 mod!=3 */
            case 0x05: /* DEh 05h FADDw w16(r/m) mod=0 reg=0 rm=5      spec: 0xDE mod/reg/rm /0 mod!=3 */
            case 0x06: /* DEh 06h FADDw w16(r/m) mod=0 reg=0 rm=6      spec: 0xDE mod/reg/rm /0 mod!=3 */
            case 0x07: /* DEh 07h FADDw w16(r/m) mod=0 reg=0 rm=7      spec: 0xDE mod/reg/rm /0 mod!=3 */
            case 0x40: /* DEh 40h FADDw w16(r/m) mod=1 reg=0 rm=0      spec: 0xDE mod/reg/rm /0 mod!=3 */
            case 0x41: /* DEh 41h FADDw w16(r/m) mod=1 reg=0 rm=1      spec: 0xDE mod/reg/rm /0 mod!=3 */
            case 0x42: /* DEh 42h FADDw w16(r/m) mod=1 reg=0 rm=2      spec: 0xDE mod/reg/rm /0 mod!=3 */
            case 0x43: /* DEh 43h FADDw w16(r/m) mod=1 reg=0 rm=3      spec: 0xDE mod/reg/rm /0 mod!=3 */
            case 0x44: /* DEh 44h FADDw w16(r/m) mod=1 reg=0 rm=4      spec: 0xDE mod/reg/rm /0 mod!=3 */
            case 0x45: /* DEh 45h FADDw w16(r/m) mod=1 reg=0 rm=5      spec: 0xDE mod/reg/rm /0 mod!=3 */
            case 0x46: /* DEh 46h FADDw w16(r/m) mod=1 reg=0 rm=6      spec: 0xDE mod/reg/rm /0 mod!=3 */
            case 0x47: /* DEh 47h FADDw w16(r/m) mod=1 reg=0 rm=7      spec: 0xDE mod/reg/rm /0 mod!=3 */
            case 0x80: /* DEh 80h FADDw w16(r/m) mod=2 reg=0 rm=0      spec: 0xDE mod/reg/rm /0 mod!=3 */
            case 0x81: /* DEh 81h FADDw w16(r/m) mod=2 reg=0 rm=1      spec: 0xDE mod/reg/rm /0 mod!=3 */
            case 0x82: /* DEh 82h FADDw w16(r/m) mod=2 reg=0 rm=2      spec: 0xDE mod/reg/rm /0 mod!=3 */
            case 0x83: /* DEh 83h FADDw w16(r/m) mod=2 reg=0 rm=3      spec: 0xDE mod/reg/rm /0 mod!=3 */
            case 0x84: /* DEh 84h FADDw w16(r/m) mod=2 reg=0 rm=4      spec: 0xDE mod/reg/rm /0 mod!=3 */
            case 0x85: /* DEh 85h FADDw w16(r/m) mod=2 reg=0 rm=5      spec: 0xDE mod/reg/rm /0 mod!=3 */
            case 0x86: /* DEh 86h FADDw w16(r/m) mod=2 reg=0 rm=6      spec: 0xDE mod/reg/rm /0 mod!=3 */
            case 0x87: /* DEh 87h FADDw w16(r/m) mod=2 reg=0 rm=7      spec: 0xDE mod/reg/rm /0 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FADDw %s",IPDecPrint32(mrm,sib,disp,2,RC_REG,"w16"));
                break;
            case 0x08: /* DEh 08h FMULw w16(r/m) mod=0 reg=1 rm=0      spec: 0xDE mod/reg/rm /1 mod!=3 */
            case 0x09: /* DEh 09h FMULw w16(r/m) mod=0 reg=1 rm=1      spec: 0xDE mod/reg/rm /1 mod!=3 */
            case 0x0A: /* DEh 0Ah FMULw w16(r/m) mod=0 reg=1 rm=2      spec: 0xDE mod/reg/rm /1 mod!=3 */
            case 0x0B: /* DEh 0Bh FMULw w16(r/m) mod=0 reg=1 rm=3      spec: 0xDE mod/reg/rm /1 mod!=3 */
            case 0x0C: /* DEh 0Ch FMULw w16(r/m) mod=0 reg=1 rm=4      spec: 0xDE mod/reg/rm /1 mod!=3 */
            case 0x0D: /* DEh 0Dh FMULw w16(r/m) mod=0 reg=1 rm=5      spec: 0xDE mod/reg/rm /1 mod!=3 */
            case 0x0E: /* DEh 0Eh FMULw w16(r/m) mod=0 reg=1 rm=6      spec: 0xDE mod/reg/rm /1 mod!=3 */
            case 0x0F: /* DEh 0Fh FMULw w16(r/m) mod=0 reg=1 rm=7      spec: 0xDE mod/reg/rm /1 mod!=3 */
            case 0x48: /* DEh 48h FMULw w16(r/m) mod=1 reg=1 rm=0      spec: 0xDE mod/reg/rm /1 mod!=3 */
            case 0x49: /* DEh 49h FMULw w16(r/m) mod=1 reg=1 rm=1      spec: 0xDE mod/reg/rm /1 mod!=3 */
            case 0x4A: /* DEh 4Ah FMULw w16(r/m) mod=1 reg=1 rm=2      spec: 0xDE mod/reg/rm /1 mod!=3 */
            case 0x4B: /* DEh 4Bh FMULw w16(r/m) mod=1 reg=1 rm=3      spec: 0xDE mod/reg/rm /1 mod!=3 */
            case 0x4C: /* DEh 4Ch FMULw w16(r/m) mod=1 reg=1 rm=4      spec: 0xDE mod/reg/rm /1 mod!=3 */
            case 0x4D: /* DEh 4Dh FMULw w16(r/m) mod=1 reg=1 rm=5      spec: 0xDE mod/reg/rm /1 mod!=3 */
            case 0x4E: /* DEh 4Eh FMULw w16(r/m) mod=1 reg=1 rm=6      spec: 0xDE mod/reg/rm /1 mod!=3 */
            case 0x4F: /* DEh 4Fh FMULw w16(r/m) mod=1 reg=1 rm=7      spec: 0xDE mod/reg/rm /1 mod!=3 */
            case 0x88: /* DEh 88h FMULw w16(r/m) mod=2 reg=1 rm=0      spec: 0xDE mod/reg/rm /1 mod!=3 */
            case 0x89: /* DEh 89h FMULw w16(r/m) mod=2 reg=1 rm=1      spec: 0xDE mod/reg/rm /1 mod!=3 */
            case 0x8A: /* DEh 8Ah FMULw w16(r/m) mod=2 reg=1 rm=2      spec: 0xDE mod/reg/rm /1 mod!=3 */
            case 0x8B: /* DEh 8Bh FMULw w16(r/m) mod=2 reg=1 rm=3      spec: 0xDE mod/reg/rm /1 mod!=3 */
            case 0x8C: /* DEh 8Ch FMULw w16(r/m) mod=2 reg=1 rm=4      spec: 0xDE mod/reg/rm /1 mod!=3 */
            case 0x8D: /* DEh 8Dh FMULw w16(r/m) mod=2 reg=1 rm=5      spec: 0xDE mod/reg/rm /1 mod!=3 */
            case 0x8E: /* DEh 8Eh FMULw w16(r/m) mod=2 reg=1 rm=6      spec: 0xDE mod/reg/rm /1 mod!=3 */
            case 0x8F: /* DEh 8Fh FMULw w16(r/m) mod=2 reg=1 rm=7      spec: 0xDE mod/reg/rm /1 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FMULw %s",IPDecPrint32(mrm,sib,disp,2,RC_REG,"w16"));
                break;
            case 0x10: /* DEh 10h FCOMw w16(r/m) mod=0 reg=2 rm=0      spec: 0xDE mod/reg/rm /2 mod!=3 */
            case 0x11: /* DEh 11h FCOMw w16(r/m) mod=0 reg=2 rm=1      spec: 0xDE mod/reg/rm /2 mod!=3 */
            case 0x12: /* DEh 12h FCOMw w16(r/m) mod=0 reg=2 rm=2      spec: 0xDE mod/reg/rm /2 mod!=3 */
            case 0x13: /* DEh 13h FCOMw w16(r/m) mod=0 reg=2 rm=3      spec: 0xDE mod/reg/rm /2 mod!=3 */
            case 0x14: /* DEh 14h FCOMw w16(r/m) mod=0 reg=2 rm=4      spec: 0xDE mod/reg/rm /2 mod!=3 */
            case 0x15: /* DEh 15h FCOMw w16(r/m) mod=0 reg=2 rm=5      spec: 0xDE mod/reg/rm /2 mod!=3 */
            case 0x16: /* DEh 16h FCOMw w16(r/m) mod=0 reg=2 rm=6      spec: 0xDE mod/reg/rm /2 mod!=3 */
            case 0x17: /* DEh 17h FCOMw w16(r/m) mod=0 reg=2 rm=7      spec: 0xDE mod/reg/rm /2 mod!=3 */
            case 0x50: /* DEh 50h FCOMw w16(r/m) mod=1 reg=2 rm=0      spec: 0xDE mod/reg/rm /2 mod!=3 */
            case 0x51: /* DEh 51h FCOMw w16(r/m) mod=1 reg=2 rm=1      spec: 0xDE mod/reg/rm /2 mod!=3 */
            case 0x52: /* DEh 52h FCOMw w16(r/m) mod=1 reg=2 rm=2      spec: 0xDE mod/reg/rm /2 mod!=3 */
            case 0x53: /* DEh 53h FCOMw w16(r/m) mod=1 reg=2 rm=3      spec: 0xDE mod/reg/rm /2 mod!=3 */
            case 0x54: /* DEh 54h FCOMw w16(r/m) mod=1 reg=2 rm=4      spec: 0xDE mod/reg/rm /2 mod!=3 */
            case 0x55: /* DEh 55h FCOMw w16(r/m) mod=1 reg=2 rm=5      spec: 0xDE mod/reg/rm /2 mod!=3 */
            case 0x56: /* DEh 56h FCOMw w16(r/m) mod=1 reg=2 rm=6      spec: 0xDE mod/reg/rm /2 mod!=3 */
            case 0x57: /* DEh 57h FCOMw w16(r/m) mod=1 reg=2 rm=7      spec: 0xDE mod/reg/rm /2 mod!=3 */
            case 0x90: /* DEh 90h FCOMw w16(r/m) mod=2 reg=2 rm=0      spec: 0xDE mod/reg/rm /2 mod!=3 */
            case 0x91: /* DEh 91h FCOMw w16(r/m) mod=2 reg=2 rm=1      spec: 0xDE mod/reg/rm /2 mod!=3 */
            case 0x92: /* DEh 92h FCOMw w16(r/m) mod=2 reg=2 rm=2      spec: 0xDE mod/reg/rm /2 mod!=3 */
            case 0x93: /* DEh 93h FCOMw w16(r/m) mod=2 reg=2 rm=3      spec: 0xDE mod/reg/rm /2 mod!=3 */
            case 0x94: /* DEh 94h FCOMw w16(r/m) mod=2 reg=2 rm=4      spec: 0xDE mod/reg/rm /2 mod!=3 */
            case 0x95: /* DEh 95h FCOMw w16(r/m) mod=2 reg=2 rm=5      spec: 0xDE mod/reg/rm /2 mod!=3 */
            case 0x96: /* DEh 96h FCOMw w16(r/m) mod=2 reg=2 rm=6      spec: 0xDE mod/reg/rm /2 mod!=3 */
            case 0x97: /* DEh 97h FCOMw w16(r/m) mod=2 reg=2 rm=7      spec: 0xDE mod/reg/rm /2 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FCOMw %s",IPDecPrint32(mrm,sib,disp,2,RC_REG,"w16"));
                break;
            case 0x18: /* DEh 18h FCOMPw w16(r/m) mod=0 reg=3 rm=0      spec: 0xDE mod/reg/rm /3 mod!=3 */
            case 0x19: /* DEh 19h FCOMPw w16(r/m) mod=0 reg=3 rm=1      spec: 0xDE mod/reg/rm /3 mod!=3 */
            case 0x1A: /* DEh 1Ah FCOMPw w16(r/m) mod=0 reg=3 rm=2      spec: 0xDE mod/reg/rm /3 mod!=3 */
            case 0x1B: /* DEh 1Bh FCOMPw w16(r/m) mod=0 reg=3 rm=3      spec: 0xDE mod/reg/rm /3 mod!=3 */
            case 0x1C: /* DEh 1Ch FCOMPw w16(r/m) mod=0 reg=3 rm=4      spec: 0xDE mod/reg/rm /3 mod!=3 */
            case 0x1D: /* DEh 1Dh FCOMPw w16(r/m) mod=0 reg=3 rm=5      spec: 0xDE mod/reg/rm /3 mod!=3 */
            case 0x1E: /* DEh 1Eh FCOMPw w16(r/m) mod=0 reg=3 rm=6      spec: 0xDE mod/reg/rm /3 mod!=3 */
            case 0x1F: /* DEh 1Fh FCOMPw w16(r/m) mod=0 reg=3 rm=7      spec: 0xDE mod/reg/rm /3 mod!=3 */
            case 0x58: /* DEh 58h FCOMPw w16(r/m) mod=1 reg=3 rm=0      spec: 0xDE mod/reg/rm /3 mod!=3 */
            case 0x59: /* DEh 59h FCOMPw w16(r/m) mod=1 reg=3 rm=1      spec: 0xDE mod/reg/rm /3 mod!=3 */
            case 0x5A: /* DEh 5Ah FCOMPw w16(r/m) mod=1 reg=3 rm=2      spec: 0xDE mod/reg/rm /3 mod!=3 */
            case 0x5B: /* DEh 5Bh FCOMPw w16(r/m) mod=1 reg=3 rm=3      spec: 0xDE mod/reg/rm /3 mod!=3 */
            case 0x5C: /* DEh 5Ch FCOMPw w16(r/m) mod=1 reg=3 rm=4      spec: 0xDE mod/reg/rm /3 mod!=3 */
            case 0x5D: /* DEh 5Dh FCOMPw w16(r/m) mod=1 reg=3 rm=5      spec: 0xDE mod/reg/rm /3 mod!=3 */
            case 0x5E: /* DEh 5Eh FCOMPw w16(r/m) mod=1 reg=3 rm=6      spec: 0xDE mod/reg/rm /3 mod!=3 */
            case 0x5F: /* DEh 5Fh FCOMPw w16(r/m) mod=1 reg=3 rm=7      spec: 0xDE mod/reg/rm /3 mod!=3 */
            case 0x98: /* DEh 98h FCOMPw w16(r/m) mod=2 reg=3 rm=0      spec: 0xDE mod/reg/rm /3 mod!=3 */
            case 0x99: /* DEh 99h FCOMPw w16(r/m) mod=2 reg=3 rm=1      spec: 0xDE mod/reg/rm /3 mod!=3 */
            case 0x9A: /* DEh 9Ah FCOMPw w16(r/m) mod=2 reg=3 rm=2      spec: 0xDE mod/reg/rm /3 mod!=3 */
            case 0x9B: /* DEh 9Bh FCOMPw w16(r/m) mod=2 reg=3 rm=3      spec: 0xDE mod/reg/rm /3 mod!=3 */
            case 0x9C: /* DEh 9Ch FCOMPw w16(r/m) mod=2 reg=3 rm=4      spec: 0xDE mod/reg/rm /3 mod!=3 */
            case 0x9D: /* DEh 9Dh FCOMPw w16(r/m) mod=2 reg=3 rm=5      spec: 0xDE mod/reg/rm /3 mod!=3 */
            case 0x9E: /* DEh 9Eh FCOMPw w16(r/m) mod=2 reg=3 rm=6      spec: 0xDE mod/reg/rm /3 mod!=3 */
            case 0x9F: /* DEh 9Fh FCOMPw w16(r/m) mod=2 reg=3 rm=7      spec: 0xDE mod/reg/rm /3 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FCOMPw %s",IPDecPrint32(mrm,sib,disp,2,RC_REG,"w16"));
                break;
            case 0x20: /* DEh 20h FSUBw w16(r/m) mod=0 reg=4 rm=0      spec: 0xDE mod/reg/rm /4 mod!=3 */
            case 0x21: /* DEh 21h FSUBw w16(r/m) mod=0 reg=4 rm=1      spec: 0xDE mod/reg/rm /4 mod!=3 */
            case 0x22: /* DEh 22h FSUBw w16(r/m) mod=0 reg=4 rm=2      spec: 0xDE mod/reg/rm /4 mod!=3 */
            case 0x23: /* DEh 23h FSUBw w16(r/m) mod=0 reg=4 rm=3      spec: 0xDE mod/reg/rm /4 mod!=3 */
            case 0x24: /* DEh 24h FSUBw w16(r/m) mod=0 reg=4 rm=4      spec: 0xDE mod/reg/rm /4 mod!=3 */
            case 0x25: /* DEh 25h FSUBw w16(r/m) mod=0 reg=4 rm=5      spec: 0xDE mod/reg/rm /4 mod!=3 */
            case 0x26: /* DEh 26h FSUBw w16(r/m) mod=0 reg=4 rm=6      spec: 0xDE mod/reg/rm /4 mod!=3 */
            case 0x27: /* DEh 27h FSUBw w16(r/m) mod=0 reg=4 rm=7      spec: 0xDE mod/reg/rm /4 mod!=3 */
            case 0x60: /* DEh 60h FSUBw w16(r/m) mod=1 reg=4 rm=0      spec: 0xDE mod/reg/rm /4 mod!=3 */
            case 0x61: /* DEh 61h FSUBw w16(r/m) mod=1 reg=4 rm=1      spec: 0xDE mod/reg/rm /4 mod!=3 */
            case 0x62: /* DEh 62h FSUBw w16(r/m) mod=1 reg=4 rm=2      spec: 0xDE mod/reg/rm /4 mod!=3 */
            case 0x63: /* DEh 63h FSUBw w16(r/m) mod=1 reg=4 rm=3      spec: 0xDE mod/reg/rm /4 mod!=3 */
            case 0x64: /* DEh 64h FSUBw w16(r/m) mod=1 reg=4 rm=4      spec: 0xDE mod/reg/rm /4 mod!=3 */
            case 0x65: /* DEh 65h FSUBw w16(r/m) mod=1 reg=4 rm=5      spec: 0xDE mod/reg/rm /4 mod!=3 */
            case 0x66: /* DEh 66h FSUBw w16(r/m) mod=1 reg=4 rm=6      spec: 0xDE mod/reg/rm /4 mod!=3 */
            case 0x67: /* DEh 67h FSUBw w16(r/m) mod=1 reg=4 rm=7      spec: 0xDE mod/reg/rm /4 mod!=3 */
            case 0xA0: /* DEh A0h FSUBw w16(r/m) mod=2 reg=4 rm=0      spec: 0xDE mod/reg/rm /4 mod!=3 */
            case 0xA1: /* DEh A1h FSUBw w16(r/m) mod=2 reg=4 rm=1      spec: 0xDE mod/reg/rm /4 mod!=3 */
            case 0xA2: /* DEh A2h FSUBw w16(r/m) mod=2 reg=4 rm=2      spec: 0xDE mod/reg/rm /4 mod!=3 */
            case 0xA3: /* DEh A3h FSUBw w16(r/m) mod=2 reg=4 rm=3      spec: 0xDE mod/reg/rm /4 mod!=3 */
            case 0xA4: /* DEh A4h FSUBw w16(r/m) mod=2 reg=4 rm=4      spec: 0xDE mod/reg/rm /4 mod!=3 */
            case 0xA5: /* DEh A5h FSUBw w16(r/m) mod=2 reg=4 rm=5      spec: 0xDE mod/reg/rm /4 mod!=3 */
            case 0xA6: /* DEh A6h FSUBw w16(r/m) mod=2 reg=4 rm=6      spec: 0xDE mod/reg/rm /4 mod!=3 */
            case 0xA7: /* DEh A7h FSUBw w16(r/m) mod=2 reg=4 rm=7      spec: 0xDE mod/reg/rm /4 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSUBw %s",IPDecPrint32(mrm,sib,disp,2,RC_REG,"w16"));
                break;
            case 0x28: /* DEh 28h FSUBRw w16(r/m) mod=0 reg=5 rm=0      spec: 0xDE mod/reg/rm /5 mod!=3 */
            case 0x29: /* DEh 29h FSUBRw w16(r/m) mod=0 reg=5 rm=1      spec: 0xDE mod/reg/rm /5 mod!=3 */
            case 0x2A: /* DEh 2Ah FSUBRw w16(r/m) mod=0 reg=5 rm=2      spec: 0xDE mod/reg/rm /5 mod!=3 */
            case 0x2B: /* DEh 2Bh FSUBRw w16(r/m) mod=0 reg=5 rm=3      spec: 0xDE mod/reg/rm /5 mod!=3 */
            case 0x2C: /* DEh 2Ch FSUBRw w16(r/m) mod=0 reg=5 rm=4      spec: 0xDE mod/reg/rm /5 mod!=3 */
            case 0x2D: /* DEh 2Dh FSUBRw w16(r/m) mod=0 reg=5 rm=5      spec: 0xDE mod/reg/rm /5 mod!=3 */
            case 0x2E: /* DEh 2Eh FSUBRw w16(r/m) mod=0 reg=5 rm=6      spec: 0xDE mod/reg/rm /5 mod!=3 */
            case 0x2F: /* DEh 2Fh FSUBRw w16(r/m) mod=0 reg=5 rm=7      spec: 0xDE mod/reg/rm /5 mod!=3 */
            case 0x68: /* DEh 68h FSUBRw w16(r/m) mod=1 reg=5 rm=0      spec: 0xDE mod/reg/rm /5 mod!=3 */
            case 0x69: /* DEh 69h FSUBRw w16(r/m) mod=1 reg=5 rm=1      spec: 0xDE mod/reg/rm /5 mod!=3 */
            case 0x6A: /* DEh 6Ah FSUBRw w16(r/m) mod=1 reg=5 rm=2      spec: 0xDE mod/reg/rm /5 mod!=3 */
            case 0x6B: /* DEh 6Bh FSUBRw w16(r/m) mod=1 reg=5 rm=3      spec: 0xDE mod/reg/rm /5 mod!=3 */
            case 0x6C: /* DEh 6Ch FSUBRw w16(r/m) mod=1 reg=5 rm=4      spec: 0xDE mod/reg/rm /5 mod!=3 */
            case 0x6D: /* DEh 6Dh FSUBRw w16(r/m) mod=1 reg=5 rm=5      spec: 0xDE mod/reg/rm /5 mod!=3 */
            case 0x6E: /* DEh 6Eh FSUBRw w16(r/m) mod=1 reg=5 rm=6      spec: 0xDE mod/reg/rm /5 mod!=3 */
            case 0x6F: /* DEh 6Fh FSUBRw w16(r/m) mod=1 reg=5 rm=7      spec: 0xDE mod/reg/rm /5 mod!=3 */
            case 0xA8: /* DEh A8h FSUBRw w16(r/m) mod=2 reg=5 rm=0      spec: 0xDE mod/reg/rm /5 mod!=3 */
            case 0xA9: /* DEh A9h FSUBRw w16(r/m) mod=2 reg=5 rm=1      spec: 0xDE mod/reg/rm /5 mod!=3 */
            case 0xAA: /* DEh AAh FSUBRw w16(r/m) mod=2 reg=5 rm=2      spec: 0xDE mod/reg/rm /5 mod!=3 */
            case 0xAB: /* DEh ABh FSUBRw w16(r/m) mod=2 reg=5 rm=3      spec: 0xDE mod/reg/rm /5 mod!=3 */
            case 0xAC: /* DEh ACh FSUBRw w16(r/m) mod=2 reg=5 rm=4      spec: 0xDE mod/reg/rm /5 mod!=3 */
            case 0xAD: /* DEh ADh FSUBRw w16(r/m) mod=2 reg=5 rm=5      spec: 0xDE mod/reg/rm /5 mod!=3 */
            case 0xAE: /* DEh AEh FSUBRw w16(r/m) mod=2 reg=5 rm=6      spec: 0xDE mod/reg/rm /5 mod!=3 */
            case 0xAF: /* DEh AFh FSUBRw w16(r/m) mod=2 reg=5 rm=7      spec: 0xDE mod/reg/rm /5 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSUBRw %s",IPDecPrint32(mrm,sib,disp,2,RC_REG,"w16"));
                break;
            case 0x30: /* DEh 30h FDIVw w16(r/m) mod=0 reg=6 rm=0      spec: 0xDE mod/reg/rm /6 mod!=3 */
            case 0x31: /* DEh 31h FDIVw w16(r/m) mod=0 reg=6 rm=1      spec: 0xDE mod/reg/rm /6 mod!=3 */
            case 0x32: /* DEh 32h FDIVw w16(r/m) mod=0 reg=6 rm=2      spec: 0xDE mod/reg/rm /6 mod!=3 */
            case 0x33: /* DEh 33h FDIVw w16(r/m) mod=0 reg=6 rm=3      spec: 0xDE mod/reg/rm /6 mod!=3 */
            case 0x34: /* DEh 34h FDIVw w16(r/m) mod=0 reg=6 rm=4      spec: 0xDE mod/reg/rm /6 mod!=3 */
            case 0x35: /* DEh 35h FDIVw w16(r/m) mod=0 reg=6 rm=5      spec: 0xDE mod/reg/rm /6 mod!=3 */
            case 0x36: /* DEh 36h FDIVw w16(r/m) mod=0 reg=6 rm=6      spec: 0xDE mod/reg/rm /6 mod!=3 */
            case 0x37: /* DEh 37h FDIVw w16(r/m) mod=0 reg=6 rm=7      spec: 0xDE mod/reg/rm /6 mod!=3 */
            case 0x70: /* DEh 70h FDIVw w16(r/m) mod=1 reg=6 rm=0      spec: 0xDE mod/reg/rm /6 mod!=3 */
            case 0x71: /* DEh 71h FDIVw w16(r/m) mod=1 reg=6 rm=1      spec: 0xDE mod/reg/rm /6 mod!=3 */
            case 0x72: /* DEh 72h FDIVw w16(r/m) mod=1 reg=6 rm=2      spec: 0xDE mod/reg/rm /6 mod!=3 */
            case 0x73: /* DEh 73h FDIVw w16(r/m) mod=1 reg=6 rm=3      spec: 0xDE mod/reg/rm /6 mod!=3 */
            case 0x74: /* DEh 74h FDIVw w16(r/m) mod=1 reg=6 rm=4      spec: 0xDE mod/reg/rm /6 mod!=3 */
            case 0x75: /* DEh 75h FDIVw w16(r/m) mod=1 reg=6 rm=5      spec: 0xDE mod/reg/rm /6 mod!=3 */
            case 0x76: /* DEh 76h FDIVw w16(r/m) mod=1 reg=6 rm=6      spec: 0xDE mod/reg/rm /6 mod!=3 */
            case 0x77: /* DEh 77h FDIVw w16(r/m) mod=1 reg=6 rm=7      spec: 0xDE mod/reg/rm /6 mod!=3 */
            case 0xB0: /* DEh B0h FDIVw w16(r/m) mod=2 reg=6 rm=0      spec: 0xDE mod/reg/rm /6 mod!=3 */
            case 0xB1: /* DEh B1h FDIVw w16(r/m) mod=2 reg=6 rm=1      spec: 0xDE mod/reg/rm /6 mod!=3 */
            case 0xB2: /* DEh B2h FDIVw w16(r/m) mod=2 reg=6 rm=2      spec: 0xDE mod/reg/rm /6 mod!=3 */
            case 0xB3: /* DEh B3h FDIVw w16(r/m) mod=2 reg=6 rm=3      spec: 0xDE mod/reg/rm /6 mod!=3 */
            case 0xB4: /* DEh B4h FDIVw w16(r/m) mod=2 reg=6 rm=4      spec: 0xDE mod/reg/rm /6 mod!=3 */
            case 0xB5: /* DEh B5h FDIVw w16(r/m) mod=2 reg=6 rm=5      spec: 0xDE mod/reg/rm /6 mod!=3 */
            case 0xB6: /* DEh B6h FDIVw w16(r/m) mod=2 reg=6 rm=6      spec: 0xDE mod/reg/rm /6 mod!=3 */
            case 0xB7: /* DEh B7h FDIVw w16(r/m) mod=2 reg=6 rm=7      spec: 0xDE mod/reg/rm /6 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FDIVw %s",IPDecPrint32(mrm,sib,disp,2,RC_REG,"w16"));
                break;
            case 0x38: /* DEh 38h FDIVRw w16(r/m) mod=0 reg=7 rm=0      spec: 0xDE mod/reg/rm /7 mod!=3 */
            case 0x39: /* DEh 39h FDIVRw w16(r/m) mod=0 reg=7 rm=1      spec: 0xDE mod/reg/rm /7 mod!=3 */
            case 0x3A: /* DEh 3Ah FDIVRw w16(r/m) mod=0 reg=7 rm=2      spec: 0xDE mod/reg/rm /7 mod!=3 */
            case 0x3B: /* DEh 3Bh FDIVRw w16(r/m) mod=0 reg=7 rm=3      spec: 0xDE mod/reg/rm /7 mod!=3 */
            case 0x3C: /* DEh 3Ch FDIVRw w16(r/m) mod=0 reg=7 rm=4      spec: 0xDE mod/reg/rm /7 mod!=3 */
            case 0x3D: /* DEh 3Dh FDIVRw w16(r/m) mod=0 reg=7 rm=5      spec: 0xDE mod/reg/rm /7 mod!=3 */
            case 0x3E: /* DEh 3Eh FDIVRw w16(r/m) mod=0 reg=7 rm=6      spec: 0xDE mod/reg/rm /7 mod!=3 */
            case 0x3F: /* DEh 3Fh FDIVRw w16(r/m) mod=0 reg=7 rm=7      spec: 0xDE mod/reg/rm /7 mod!=3 */
            case 0x78: /* DEh 78h FDIVRw w16(r/m) mod=1 reg=7 rm=0      spec: 0xDE mod/reg/rm /7 mod!=3 */
            case 0x79: /* DEh 79h FDIVRw w16(r/m) mod=1 reg=7 rm=1      spec: 0xDE mod/reg/rm /7 mod!=3 */
            case 0x7A: /* DEh 7Ah FDIVRw w16(r/m) mod=1 reg=7 rm=2      spec: 0xDE mod/reg/rm /7 mod!=3 */
            case 0x7B: /* DEh 7Bh FDIVRw w16(r/m) mod=1 reg=7 rm=3      spec: 0xDE mod/reg/rm /7 mod!=3 */
            case 0x7C: /* DEh 7Ch FDIVRw w16(r/m) mod=1 reg=7 rm=4      spec: 0xDE mod/reg/rm /7 mod!=3 */
            case 0x7D: /* DEh 7Dh FDIVRw w16(r/m) mod=1 reg=7 rm=5      spec: 0xDE mod/reg/rm /7 mod!=3 */
            case 0x7E: /* DEh 7Eh FDIVRw w16(r/m) mod=1 reg=7 rm=6      spec: 0xDE mod/reg/rm /7 mod!=3 */
            case 0x7F: /* DEh 7Fh FDIVRw w16(r/m) mod=1 reg=7 rm=7      spec: 0xDE mod/reg/rm /7 mod!=3 */
            case 0xB8: /* DEh B8h FDIVRw w16(r/m) mod=2 reg=7 rm=0      spec: 0xDE mod/reg/rm /7 mod!=3 */
            case 0xB9: /* DEh B9h FDIVRw w16(r/m) mod=2 reg=7 rm=1      spec: 0xDE mod/reg/rm /7 mod!=3 */
            case 0xBA: /* DEh BAh FDIVRw w16(r/m) mod=2 reg=7 rm=2      spec: 0xDE mod/reg/rm /7 mod!=3 */
            case 0xBB: /* DEh BBh FDIVRw w16(r/m) mod=2 reg=7 rm=3      spec: 0xDE mod/reg/rm /7 mod!=3 */
            case 0xBC: /* DEh BCh FDIVRw w16(r/m) mod=2 reg=7 rm=4      spec: 0xDE mod/reg/rm /7 mod!=3 */
            case 0xBD: /* DEh BDh FDIVRw w16(r/m) mod=2 reg=7 rm=5      spec: 0xDE mod/reg/rm /7 mod!=3 */
            case 0xBE: /* DEh BEh FDIVRw w16(r/m) mod=2 reg=7 rm=6      spec: 0xDE mod/reg/rm /7 mod!=3 */
            case 0xBF: /* DEh BFh FDIVRw w16(r/m) mod=2 reg=7 rm=7      spec: 0xDE mod/reg/rm /7 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FDIVRw %s",IPDecPrint32(mrm,sib,disp,2,RC_REG,"w16"));
                break;
            case 0xC0: /* DEh C0h FADDP st(r/m),st(0) mod=3 reg=0 rm=0      spec: 0xDE mod/reg/rm /0 mod==3 */
            case 0xC1: /* DEh C1h FADDP st(r/m),st(0) mod=3 reg=0 rm=1      spec: 0xDE mod/reg/rm /0 mod==3 */
            case 0xC2: /* DEh C2h FADDP st(r/m),st(0) mod=3 reg=0 rm=2      spec: 0xDE mod/reg/rm /0 mod==3 */
            case 0xC3: /* DEh C3h FADDP st(r/m),st(0) mod=3 reg=0 rm=3      spec: 0xDE mod/reg/rm /0 mod==3 */
            case 0xC4: /* DEh C4h FADDP st(r/m),st(0) mod=3 reg=0 rm=4      spec: 0xDE mod/reg/rm /0 mod==3 */
            case 0xC5: /* DEh C5h FADDP st(r/m),st(0) mod=3 reg=0 rm=5      spec: 0xDE mod/reg/rm /0 mod==3 */
            case 0xC6: /* DEh C6h FADDP st(r/m),st(0) mod=3 reg=0 rm=6      spec: 0xDE mod/reg/rm /0 mod==3 */
            case 0xC7: /* DEh C7h FADDP st(r/m),st(0) mod=3 reg=0 rm=7      spec: 0xDE mod/reg/rm /0 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FADDP %s,ST(%u)",IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""),0);
                break;
            case 0xC8: /* DEh C8h FMULP st(r/m),st(0) mod=3 reg=1 rm=0      spec: 0xDE mod/reg/rm /1 mod==3 */
            case 0xC9: /* DEh C9h FMULP st(r/m),st(0) mod=3 reg=1 rm=1      spec: 0xDE mod/reg/rm /1 mod==3 */
            case 0xCA: /* DEh CAh FMULP st(r/m),st(0) mod=3 reg=1 rm=2      spec: 0xDE mod/reg/rm /1 mod==3 */
            case 0xCB: /* DEh CBh FMULP st(r/m),st(0) mod=3 reg=1 rm=3      spec: 0xDE mod/reg/rm /1 mod==3 */
            case 0xCC: /* DEh CCh FMULP st(r/m),st(0) mod=3 reg=1 rm=4      spec: 0xDE mod/reg/rm /1 mod==3 */
            case 0xCD: /* DEh CDh FMULP st(r/m),st(0) mod=3 reg=1 rm=5      spec: 0xDE mod/reg/rm /1 mod==3 */
            case 0xCE: /* DEh CEh FMULP st(r/m),st(0) mod=3 reg=1 rm=6      spec: 0xDE mod/reg/rm /1 mod==3 */
            case 0xCF: /* DEh CFh FMULP st(r/m),st(0) mod=3 reg=1 rm=7      spec: 0xDE mod/reg/rm /1 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FMULP %s,ST(%u)",IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""),0);
                break;
            /* opcode DEh D0h  not defined */
            /* opcode DEh D1h  not defined */
            /* opcode DEh D2h  not defined */
            /* opcode DEh D3h  not defined */
            /* opcode DEh D4h  not defined */
            /* opcode DEh D5h  not defined */
            /* opcode DEh D6h  not defined */
            /* opcode DEh D7h  not defined */
            /* opcode DEh D8h  not defined */
            case 0xD9: /* DEh D9h FCOMPP  mod=3 reg=3 rm=1      spec: 0xDE 0xD9 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FCOMPP");
                break;
            /* opcode DEh DAh  not defined */
            /* opcode DEh DBh  not defined */
            /* opcode DEh DCh  not defined */
            /* opcode DEh DDh  not defined */
            /* opcode DEh DEh  not defined */
            /* opcode DEh DFh  not defined */
            case 0xE0: /* DEh E0h FSUBP st(r/m),st(0) mod=3 reg=4 rm=0      spec: 0xDE mod/reg/rm /4 mod==3 */
            case 0xE1: /* DEh E1h FSUBP st(r/m),st(0) mod=3 reg=4 rm=1      spec: 0xDE mod/reg/rm /4 mod==3 */
            case 0xE2: /* DEh E2h FSUBP st(r/m),st(0) mod=3 reg=4 rm=2      spec: 0xDE mod/reg/rm /4 mod==3 */
            case 0xE3: /* DEh E3h FSUBP st(r/m),st(0) mod=3 reg=4 rm=3      spec: 0xDE mod/reg/rm /4 mod==3 */
            case 0xE4: /* DEh E4h FSUBP st(r/m),st(0) mod=3 reg=4 rm=4      spec: 0xDE mod/reg/rm /4 mod==3 */
            case 0xE5: /* DEh E5h FSUBP st(r/m),st(0) mod=3 reg=4 rm=5      spec: 0xDE mod/reg/rm /4 mod==3 */
            case 0xE6: /* DEh E6h FSUBP st(r/m),st(0) mod=3 reg=4 rm=6      spec: 0xDE mod/reg/rm /4 mod==3 */
            case 0xE7: /* DEh E7h FSUBP st(r/m),st(0) mod=3 reg=4 rm=7      spec: 0xDE mod/reg/rm /4 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSUBP %s,ST(%u)",IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""),0);
                break;
            case 0xE8: /* DEh E8h FSUBRP st(r/m),st(0) mod=3 reg=5 rm=0      spec: 0xDE mod/reg/rm /5 mod==3 */
            case 0xE9: /* DEh E9h FSUBRP st(r/m),st(0) mod=3 reg=5 rm=1      spec: 0xDE mod/reg/rm /5 mod==3 */
            case 0xEA: /* DEh EAh FSUBRP st(r/m),st(0) mod=3 reg=5 rm=2      spec: 0xDE mod/reg/rm /5 mod==3 */
            case 0xEB: /* DEh EBh FSUBRP st(r/m),st(0) mod=3 reg=5 rm=3      spec: 0xDE mod/reg/rm /5 mod==3 */
            case 0xEC: /* DEh ECh FSUBRP st(r/m),st(0) mod=3 reg=5 rm=4      spec: 0xDE mod/reg/rm /5 mod==3 */
            case 0xED: /* DEh EDh FSUBRP st(r/m),st(0) mod=3 reg=5 rm=5      spec: 0xDE mod/reg/rm /5 mod==3 */
            case 0xEE: /* DEh EEh FSUBRP st(r/m),st(0) mod=3 reg=5 rm=6      spec: 0xDE mod/reg/rm /5 mod==3 */
            case 0xEF: /* DEh EFh FSUBRP st(r/m),st(0) mod=3 reg=5 rm=7      spec: 0xDE mod/reg/rm /5 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSUBRP %s,ST(%u)",IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""),0);
                break;
            case 0xF0: /* DEh F0h FDIVP st(r/m),st(0) mod=3 reg=6 rm=0      spec: 0xDE mod/reg/rm /6 mod==3 */
            case 0xF1: /* DEh F1h FDIVP st(r/m),st(0) mod=3 reg=6 rm=1      spec: 0xDE mod/reg/rm /6 mod==3 */
            case 0xF2: /* DEh F2h FDIVP st(r/m),st(0) mod=3 reg=6 rm=2      spec: 0xDE mod/reg/rm /6 mod==3 */
            case 0xF3: /* DEh F3h FDIVP st(r/m),st(0) mod=3 reg=6 rm=3      spec: 0xDE mod/reg/rm /6 mod==3 */
            case 0xF4: /* DEh F4h FDIVP st(r/m),st(0) mod=3 reg=6 rm=4      spec: 0xDE mod/reg/rm /6 mod==3 */
            case 0xF5: /* DEh F5h FDIVP st(r/m),st(0) mod=3 reg=6 rm=5      spec: 0xDE mod/reg/rm /6 mod==3 */
            case 0xF6: /* DEh F6h FDIVP st(r/m),st(0) mod=3 reg=6 rm=6      spec: 0xDE mod/reg/rm /6 mod==3 */
            case 0xF7: /* DEh F7h FDIVP st(r/m),st(0) mod=3 reg=6 rm=7      spec: 0xDE mod/reg/rm /6 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FDIVP %s,ST(%u)",IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""),0);
                break;
            case 0xF8: /* DEh F8h FDIVRP st(r/m),st(0) mod=3 reg=7 rm=0      spec: 0xDE mod/reg/rm /7 mod==3 */
            case 0xF9: /* DEh F9h FDIVRP st(r/m),st(0) mod=3 reg=7 rm=1      spec: 0xDE mod/reg/rm /7 mod==3 */
            case 0xFA: /* DEh FAh FDIVRP st(r/m),st(0) mod=3 reg=7 rm=2      spec: 0xDE mod/reg/rm /7 mod==3 */
            case 0xFB: /* DEh FBh FDIVRP st(r/m),st(0) mod=3 reg=7 rm=3      spec: 0xDE mod/reg/rm /7 mod==3 */
            case 0xFC: /* DEh FCh FDIVRP st(r/m),st(0) mod=3 reg=7 rm=4      spec: 0xDE mod/reg/rm /7 mod==3 */
            case 0xFD: /* DEh FDh FDIVRP st(r/m),st(0) mod=3 reg=7 rm=5      spec: 0xDE mod/reg/rm /7 mod==3 */
            case 0xFE: /* DEh FEh FDIVRP st(r/m),st(0) mod=3 reg=7 rm=6      spec: 0xDE mod/reg/rm /7 mod==3 */
            case 0xFF: /* DEh FFh FDIVRP st(r/m),st(0) mod=3 reg=7 rm=7      spec: 0xDE mod/reg/rm /7 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FDIVRP %s,ST(%u)",IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""),0);
                break;
            default:
                goto _x86decode_illegal_opcode;
        };
/* End of opcodes starting with DEh */
        break;
    case 0xDF: /* DFh        spec:  */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
/* Opcodes starting with DFh */
        switch (mrm.byte) {
            case 0x00: /* DFh 00h FLDw w16(r/m) mod=0 reg=0 rm=0      spec: 0xDF mod/reg/rm /0 mod!=3 */
            case 0x01: /* DFh 01h FLDw w16(r/m) mod=0 reg=0 rm=1      spec: 0xDF mod/reg/rm /0 mod!=3 */
            case 0x02: /* DFh 02h FLDw w16(r/m) mod=0 reg=0 rm=2      spec: 0xDF mod/reg/rm /0 mod!=3 */
            case 0x03: /* DFh 03h FLDw w16(r/m) mod=0 reg=0 rm=3      spec: 0xDF mod/reg/rm /0 mod!=3 */
            case 0x04: /* DFh 04h FLDw w16(r/m) mod=0 reg=0 rm=4      spec: 0xDF mod/reg/rm /0 mod!=3 */
            case 0x05: /* DFh 05h FLDw w16(r/m) mod=0 reg=0 rm=5      spec: 0xDF mod/reg/rm /0 mod!=3 */
            case 0x06: /* DFh 06h FLDw w16(r/m) mod=0 reg=0 rm=6      spec: 0xDF mod/reg/rm /0 mod!=3 */
            case 0x07: /* DFh 07h FLDw w16(r/m) mod=0 reg=0 rm=7      spec: 0xDF mod/reg/rm /0 mod!=3 */
            case 0x40: /* DFh 40h FLDw w16(r/m) mod=1 reg=0 rm=0      spec: 0xDF mod/reg/rm /0 mod!=3 */
            case 0x41: /* DFh 41h FLDw w16(r/m) mod=1 reg=0 rm=1      spec: 0xDF mod/reg/rm /0 mod!=3 */
            case 0x42: /* DFh 42h FLDw w16(r/m) mod=1 reg=0 rm=2      spec: 0xDF mod/reg/rm /0 mod!=3 */
            case 0x43: /* DFh 43h FLDw w16(r/m) mod=1 reg=0 rm=3      spec: 0xDF mod/reg/rm /0 mod!=3 */
            case 0x44: /* DFh 44h FLDw w16(r/m) mod=1 reg=0 rm=4      spec: 0xDF mod/reg/rm /0 mod!=3 */
            case 0x45: /* DFh 45h FLDw w16(r/m) mod=1 reg=0 rm=5      spec: 0xDF mod/reg/rm /0 mod!=3 */
            case 0x46: /* DFh 46h FLDw w16(r/m) mod=1 reg=0 rm=6      spec: 0xDF mod/reg/rm /0 mod!=3 */
            case 0x47: /* DFh 47h FLDw w16(r/m) mod=1 reg=0 rm=7      spec: 0xDF mod/reg/rm /0 mod!=3 */
            case 0x80: /* DFh 80h FLDw w16(r/m) mod=2 reg=0 rm=0      spec: 0xDF mod/reg/rm /0 mod!=3 */
            case 0x81: /* DFh 81h FLDw w16(r/m) mod=2 reg=0 rm=1      spec: 0xDF mod/reg/rm /0 mod!=3 */
            case 0x82: /* DFh 82h FLDw w16(r/m) mod=2 reg=0 rm=2      spec: 0xDF mod/reg/rm /0 mod!=3 */
            case 0x83: /* DFh 83h FLDw w16(r/m) mod=2 reg=0 rm=3      spec: 0xDF mod/reg/rm /0 mod!=3 */
            case 0x84: /* DFh 84h FLDw w16(r/m) mod=2 reg=0 rm=4      spec: 0xDF mod/reg/rm /0 mod!=3 */
            case 0x85: /* DFh 85h FLDw w16(r/m) mod=2 reg=0 rm=5      spec: 0xDF mod/reg/rm /0 mod!=3 */
            case 0x86: /* DFh 86h FLDw w16(r/m) mod=2 reg=0 rm=6      spec: 0xDF mod/reg/rm /0 mod!=3 */
            case 0x87: /* DFh 87h FLDw w16(r/m) mod=2 reg=0 rm=7      spec: 0xDF mod/reg/rm /0 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FLDw %s",IPDecPrint32(mrm,sib,disp,2,RC_REG,"w16"));
                break;
            /* opcode DFh 08h  not defined */
            /* opcode DFh 09h  not defined */
            /* opcode DFh 0Ah  not defined */
            /* opcode DFh 0Bh  not defined */
            /* opcode DFh 0Ch  not defined */
            /* opcode DFh 0Dh  not defined */
            /* opcode DFh 0Eh  not defined */
            /* opcode DFh 0Fh  not defined */
            case 0x10: /* DFh 10h FSTw w16(r/m) mod=0 reg=2 rm=0      spec: 0xDF mod/reg/rm /2 mod!=3 */
            case 0x11: /* DFh 11h FSTw w16(r/m) mod=0 reg=2 rm=1      spec: 0xDF mod/reg/rm /2 mod!=3 */
            case 0x12: /* DFh 12h FSTw w16(r/m) mod=0 reg=2 rm=2      spec: 0xDF mod/reg/rm /2 mod!=3 */
            case 0x13: /* DFh 13h FSTw w16(r/m) mod=0 reg=2 rm=3      spec: 0xDF mod/reg/rm /2 mod!=3 */
            case 0x14: /* DFh 14h FSTw w16(r/m) mod=0 reg=2 rm=4      spec: 0xDF mod/reg/rm /2 mod!=3 */
            case 0x15: /* DFh 15h FSTw w16(r/m) mod=0 reg=2 rm=5      spec: 0xDF mod/reg/rm /2 mod!=3 */
            case 0x16: /* DFh 16h FSTw w16(r/m) mod=0 reg=2 rm=6      spec: 0xDF mod/reg/rm /2 mod!=3 */
            case 0x17: /* DFh 17h FSTw w16(r/m) mod=0 reg=2 rm=7      spec: 0xDF mod/reg/rm /2 mod!=3 */
            case 0x50: /* DFh 50h FSTw w16(r/m) mod=1 reg=2 rm=0      spec: 0xDF mod/reg/rm /2 mod!=3 */
            case 0x51: /* DFh 51h FSTw w16(r/m) mod=1 reg=2 rm=1      spec: 0xDF mod/reg/rm /2 mod!=3 */
            case 0x52: /* DFh 52h FSTw w16(r/m) mod=1 reg=2 rm=2      spec: 0xDF mod/reg/rm /2 mod!=3 */
            case 0x53: /* DFh 53h FSTw w16(r/m) mod=1 reg=2 rm=3      spec: 0xDF mod/reg/rm /2 mod!=3 */
            case 0x54: /* DFh 54h FSTw w16(r/m) mod=1 reg=2 rm=4      spec: 0xDF mod/reg/rm /2 mod!=3 */
            case 0x55: /* DFh 55h FSTw w16(r/m) mod=1 reg=2 rm=5      spec: 0xDF mod/reg/rm /2 mod!=3 */
            case 0x56: /* DFh 56h FSTw w16(r/m) mod=1 reg=2 rm=6      spec: 0xDF mod/reg/rm /2 mod!=3 */
            case 0x57: /* DFh 57h FSTw w16(r/m) mod=1 reg=2 rm=7      spec: 0xDF mod/reg/rm /2 mod!=3 */
            case 0x90: /* DFh 90h FSTw w16(r/m) mod=2 reg=2 rm=0      spec: 0xDF mod/reg/rm /2 mod!=3 */
            case 0x91: /* DFh 91h FSTw w16(r/m) mod=2 reg=2 rm=1      spec: 0xDF mod/reg/rm /2 mod!=3 */
            case 0x92: /* DFh 92h FSTw w16(r/m) mod=2 reg=2 rm=2      spec: 0xDF mod/reg/rm /2 mod!=3 */
            case 0x93: /* DFh 93h FSTw w16(r/m) mod=2 reg=2 rm=3      spec: 0xDF mod/reg/rm /2 mod!=3 */
            case 0x94: /* DFh 94h FSTw w16(r/m) mod=2 reg=2 rm=4      spec: 0xDF mod/reg/rm /2 mod!=3 */
            case 0x95: /* DFh 95h FSTw w16(r/m) mod=2 reg=2 rm=5      spec: 0xDF mod/reg/rm /2 mod!=3 */
            case 0x96: /* DFh 96h FSTw w16(r/m) mod=2 reg=2 rm=6      spec: 0xDF mod/reg/rm /2 mod!=3 */
            case 0x97: /* DFh 97h FSTw w16(r/m) mod=2 reg=2 rm=7      spec: 0xDF mod/reg/rm /2 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSTw %s",IPDecPrint32(mrm,sib,disp,2,RC_REG,"w16"));
                break;
            case 0x18: /* DFh 18h FSTPw w16(r/m) mod=0 reg=3 rm=0      spec: 0xDF mod/reg/rm /3 mod!=3 */
            case 0x19: /* DFh 19h FSTPw w16(r/m) mod=0 reg=3 rm=1      spec: 0xDF mod/reg/rm /3 mod!=3 */
            case 0x1A: /* DFh 1Ah FSTPw w16(r/m) mod=0 reg=3 rm=2      spec: 0xDF mod/reg/rm /3 mod!=3 */
            case 0x1B: /* DFh 1Bh FSTPw w16(r/m) mod=0 reg=3 rm=3      spec: 0xDF mod/reg/rm /3 mod!=3 */
            case 0x1C: /* DFh 1Ch FSTPw w16(r/m) mod=0 reg=3 rm=4      spec: 0xDF mod/reg/rm /3 mod!=3 */
            case 0x1D: /* DFh 1Dh FSTPw w16(r/m) mod=0 reg=3 rm=5      spec: 0xDF mod/reg/rm /3 mod!=3 */
            case 0x1E: /* DFh 1Eh FSTPw w16(r/m) mod=0 reg=3 rm=6      spec: 0xDF mod/reg/rm /3 mod!=3 */
            case 0x1F: /* DFh 1Fh FSTPw w16(r/m) mod=0 reg=3 rm=7      spec: 0xDF mod/reg/rm /3 mod!=3 */
            case 0x58: /* DFh 58h FSTPw w16(r/m) mod=1 reg=3 rm=0      spec: 0xDF mod/reg/rm /3 mod!=3 */
            case 0x59: /* DFh 59h FSTPw w16(r/m) mod=1 reg=3 rm=1      spec: 0xDF mod/reg/rm /3 mod!=3 */
            case 0x5A: /* DFh 5Ah FSTPw w16(r/m) mod=1 reg=3 rm=2      spec: 0xDF mod/reg/rm /3 mod!=3 */
            case 0x5B: /* DFh 5Bh FSTPw w16(r/m) mod=1 reg=3 rm=3      spec: 0xDF mod/reg/rm /3 mod!=3 */
            case 0x5C: /* DFh 5Ch FSTPw w16(r/m) mod=1 reg=3 rm=4      spec: 0xDF mod/reg/rm /3 mod!=3 */
            case 0x5D: /* DFh 5Dh FSTPw w16(r/m) mod=1 reg=3 rm=5      spec: 0xDF mod/reg/rm /3 mod!=3 */
            case 0x5E: /* DFh 5Eh FSTPw w16(r/m) mod=1 reg=3 rm=6      spec: 0xDF mod/reg/rm /3 mod!=3 */
            case 0x5F: /* DFh 5Fh FSTPw w16(r/m) mod=1 reg=3 rm=7      spec: 0xDF mod/reg/rm /3 mod!=3 */
            case 0x98: /* DFh 98h FSTPw w16(r/m) mod=2 reg=3 rm=0      spec: 0xDF mod/reg/rm /3 mod!=3 */
            case 0x99: /* DFh 99h FSTPw w16(r/m) mod=2 reg=3 rm=1      spec: 0xDF mod/reg/rm /3 mod!=3 */
            case 0x9A: /* DFh 9Ah FSTPw w16(r/m) mod=2 reg=3 rm=2      spec: 0xDF mod/reg/rm /3 mod!=3 */
            case 0x9B: /* DFh 9Bh FSTPw w16(r/m) mod=2 reg=3 rm=3      spec: 0xDF mod/reg/rm /3 mod!=3 */
            case 0x9C: /* DFh 9Ch FSTPw w16(r/m) mod=2 reg=3 rm=4      spec: 0xDF mod/reg/rm /3 mod!=3 */
            case 0x9D: /* DFh 9Dh FSTPw w16(r/m) mod=2 reg=3 rm=5      spec: 0xDF mod/reg/rm /3 mod!=3 */
            case 0x9E: /* DFh 9Eh FSTPw w16(r/m) mod=2 reg=3 rm=6      spec: 0xDF mod/reg/rm /3 mod!=3 */
            case 0x9F: /* DFh 9Fh FSTPw w16(r/m) mod=2 reg=3 rm=7      spec: 0xDF mod/reg/rm /3 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSTPw %s",IPDecPrint32(mrm,sib,disp,2,RC_REG,"w16"));
                break;
            case 0x20: /* DFh 20h FLDfbcd fbcd(r/m) mod=0 reg=4 rm=0      spec: 0xDF mod/reg/rm /4 mod!=3 */
            case 0x21: /* DFh 21h FLDfbcd fbcd(r/m) mod=0 reg=4 rm=1      spec: 0xDF mod/reg/rm /4 mod!=3 */
            case 0x22: /* DFh 22h FLDfbcd fbcd(r/m) mod=0 reg=4 rm=2      spec: 0xDF mod/reg/rm /4 mod!=3 */
            case 0x23: /* DFh 23h FLDfbcd fbcd(r/m) mod=0 reg=4 rm=3      spec: 0xDF mod/reg/rm /4 mod!=3 */
            case 0x24: /* DFh 24h FLDfbcd fbcd(r/m) mod=0 reg=4 rm=4      spec: 0xDF mod/reg/rm /4 mod!=3 */
            case 0x25: /* DFh 25h FLDfbcd fbcd(r/m) mod=0 reg=4 rm=5      spec: 0xDF mod/reg/rm /4 mod!=3 */
            case 0x26: /* DFh 26h FLDfbcd fbcd(r/m) mod=0 reg=4 rm=6      spec: 0xDF mod/reg/rm /4 mod!=3 */
            case 0x27: /* DFh 27h FLDfbcd fbcd(r/m) mod=0 reg=4 rm=7      spec: 0xDF mod/reg/rm /4 mod!=3 */
            case 0x60: /* DFh 60h FLDfbcd fbcd(r/m) mod=1 reg=4 rm=0      spec: 0xDF mod/reg/rm /4 mod!=3 */
            case 0x61: /* DFh 61h FLDfbcd fbcd(r/m) mod=1 reg=4 rm=1      spec: 0xDF mod/reg/rm /4 mod!=3 */
            case 0x62: /* DFh 62h FLDfbcd fbcd(r/m) mod=1 reg=4 rm=2      spec: 0xDF mod/reg/rm /4 mod!=3 */
            case 0x63: /* DFh 63h FLDfbcd fbcd(r/m) mod=1 reg=4 rm=3      spec: 0xDF mod/reg/rm /4 mod!=3 */
            case 0x64: /* DFh 64h FLDfbcd fbcd(r/m) mod=1 reg=4 rm=4      spec: 0xDF mod/reg/rm /4 mod!=3 */
            case 0x65: /* DFh 65h FLDfbcd fbcd(r/m) mod=1 reg=4 rm=5      spec: 0xDF mod/reg/rm /4 mod!=3 */
            case 0x66: /* DFh 66h FLDfbcd fbcd(r/m) mod=1 reg=4 rm=6      spec: 0xDF mod/reg/rm /4 mod!=3 */
            case 0x67: /* DFh 67h FLDfbcd fbcd(r/m) mod=1 reg=4 rm=7      spec: 0xDF mod/reg/rm /4 mod!=3 */
            case 0xA0: /* DFh A0h FLDfbcd fbcd(r/m) mod=2 reg=4 rm=0      spec: 0xDF mod/reg/rm /4 mod!=3 */
            case 0xA1: /* DFh A1h FLDfbcd fbcd(r/m) mod=2 reg=4 rm=1      spec: 0xDF mod/reg/rm /4 mod!=3 */
            case 0xA2: /* DFh A2h FLDfbcd fbcd(r/m) mod=2 reg=4 rm=2      spec: 0xDF mod/reg/rm /4 mod!=3 */
            case 0xA3: /* DFh A3h FLDfbcd fbcd(r/m) mod=2 reg=4 rm=3      spec: 0xDF mod/reg/rm /4 mod!=3 */
            case 0xA4: /* DFh A4h FLDfbcd fbcd(r/m) mod=2 reg=4 rm=4      spec: 0xDF mod/reg/rm /4 mod!=3 */
            case 0xA5: /* DFh A5h FLDfbcd fbcd(r/m) mod=2 reg=4 rm=5      spec: 0xDF mod/reg/rm /4 mod!=3 */
            case 0xA6: /* DFh A6h FLDfbcd fbcd(r/m) mod=2 reg=4 rm=6      spec: 0xDF mod/reg/rm /4 mod!=3 */
            case 0xA7: /* DFh A7h FLDfbcd fbcd(r/m) mod=2 reg=4 rm=7      spec: 0xDF mod/reg/rm /4 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FLDfbcd %s",IPDecPrint32(mrm,sib,disp,10,RC_FPUREG,"fbcd"));
                break;
            case 0x28: /* DFh 28h FLDq w64(r/m) mod=0 reg=5 rm=0      spec: 0xDF mod/reg/rm /5 mod!=3 */
            case 0x29: /* DFh 29h FLDq w64(r/m) mod=0 reg=5 rm=1      spec: 0xDF mod/reg/rm /5 mod!=3 */
            case 0x2A: /* DFh 2Ah FLDq w64(r/m) mod=0 reg=5 rm=2      spec: 0xDF mod/reg/rm /5 mod!=3 */
            case 0x2B: /* DFh 2Bh FLDq w64(r/m) mod=0 reg=5 rm=3      spec: 0xDF mod/reg/rm /5 mod!=3 */
            case 0x2C: /* DFh 2Ch FLDq w64(r/m) mod=0 reg=5 rm=4      spec: 0xDF mod/reg/rm /5 mod!=3 */
            case 0x2D: /* DFh 2Dh FLDq w64(r/m) mod=0 reg=5 rm=5      spec: 0xDF mod/reg/rm /5 mod!=3 */
            case 0x2E: /* DFh 2Eh FLDq w64(r/m) mod=0 reg=5 rm=6      spec: 0xDF mod/reg/rm /5 mod!=3 */
            case 0x2F: /* DFh 2Fh FLDq w64(r/m) mod=0 reg=5 rm=7      spec: 0xDF mod/reg/rm /5 mod!=3 */
            case 0x68: /* DFh 68h FLDq w64(r/m) mod=1 reg=5 rm=0      spec: 0xDF mod/reg/rm /5 mod!=3 */
            case 0x69: /* DFh 69h FLDq w64(r/m) mod=1 reg=5 rm=1      spec: 0xDF mod/reg/rm /5 mod!=3 */
            case 0x6A: /* DFh 6Ah FLDq w64(r/m) mod=1 reg=5 rm=2      spec: 0xDF mod/reg/rm /5 mod!=3 */
            case 0x6B: /* DFh 6Bh FLDq w64(r/m) mod=1 reg=5 rm=3      spec: 0xDF mod/reg/rm /5 mod!=3 */
            case 0x6C: /* DFh 6Ch FLDq w64(r/m) mod=1 reg=5 rm=4      spec: 0xDF mod/reg/rm /5 mod!=3 */
            case 0x6D: /* DFh 6Dh FLDq w64(r/m) mod=1 reg=5 rm=5      spec: 0xDF mod/reg/rm /5 mod!=3 */
            case 0x6E: /* DFh 6Eh FLDq w64(r/m) mod=1 reg=5 rm=6      spec: 0xDF mod/reg/rm /5 mod!=3 */
            case 0x6F: /* DFh 6Fh FLDq w64(r/m) mod=1 reg=5 rm=7      spec: 0xDF mod/reg/rm /5 mod!=3 */
            case 0xA8: /* DFh A8h FLDq w64(r/m) mod=2 reg=5 rm=0      spec: 0xDF mod/reg/rm /5 mod!=3 */
            case 0xA9: /* DFh A9h FLDq w64(r/m) mod=2 reg=5 rm=1      spec: 0xDF mod/reg/rm /5 mod!=3 */
            case 0xAA: /* DFh AAh FLDq w64(r/m) mod=2 reg=5 rm=2      spec: 0xDF mod/reg/rm /5 mod!=3 */
            case 0xAB: /* DFh ABh FLDq w64(r/m) mod=2 reg=5 rm=3      spec: 0xDF mod/reg/rm /5 mod!=3 */
            case 0xAC: /* DFh ACh FLDq w64(r/m) mod=2 reg=5 rm=4      spec: 0xDF mod/reg/rm /5 mod!=3 */
            case 0xAD: /* DFh ADh FLDq w64(r/m) mod=2 reg=5 rm=5      spec: 0xDF mod/reg/rm /5 mod!=3 */
            case 0xAE: /* DFh AEh FLDq w64(r/m) mod=2 reg=5 rm=6      spec: 0xDF mod/reg/rm /5 mod!=3 */
            case 0xAF: /* DFh AFh FLDq w64(r/m) mod=2 reg=5 rm=7      spec: 0xDF mod/reg/rm /5 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FLDq %s",IPDecPrint32(mrm,sib,disp,8,RC_REG,"w64"));
                break;
            case 0x30: /* DFh 30h FSTPfbcd fbcd(r/m) mod=0 reg=6 rm=0      spec: 0xDF mod/reg/rm /6 mod!=3 */
            case 0x31: /* DFh 31h FSTPfbcd fbcd(r/m) mod=0 reg=6 rm=1      spec: 0xDF mod/reg/rm /6 mod!=3 */
            case 0x32: /* DFh 32h FSTPfbcd fbcd(r/m) mod=0 reg=6 rm=2      spec: 0xDF mod/reg/rm /6 mod!=3 */
            case 0x33: /* DFh 33h FSTPfbcd fbcd(r/m) mod=0 reg=6 rm=3      spec: 0xDF mod/reg/rm /6 mod!=3 */
            case 0x34: /* DFh 34h FSTPfbcd fbcd(r/m) mod=0 reg=6 rm=4      spec: 0xDF mod/reg/rm /6 mod!=3 */
            case 0x35: /* DFh 35h FSTPfbcd fbcd(r/m) mod=0 reg=6 rm=5      spec: 0xDF mod/reg/rm /6 mod!=3 */
            case 0x36: /* DFh 36h FSTPfbcd fbcd(r/m) mod=0 reg=6 rm=6      spec: 0xDF mod/reg/rm /6 mod!=3 */
            case 0x37: /* DFh 37h FSTPfbcd fbcd(r/m) mod=0 reg=6 rm=7      spec: 0xDF mod/reg/rm /6 mod!=3 */
            case 0x70: /* DFh 70h FSTPfbcd fbcd(r/m) mod=1 reg=6 rm=0      spec: 0xDF mod/reg/rm /6 mod!=3 */
            case 0x71: /* DFh 71h FSTPfbcd fbcd(r/m) mod=1 reg=6 rm=1      spec: 0xDF mod/reg/rm /6 mod!=3 */
            case 0x72: /* DFh 72h FSTPfbcd fbcd(r/m) mod=1 reg=6 rm=2      spec: 0xDF mod/reg/rm /6 mod!=3 */
            case 0x73: /* DFh 73h FSTPfbcd fbcd(r/m) mod=1 reg=6 rm=3      spec: 0xDF mod/reg/rm /6 mod!=3 */
            case 0x74: /* DFh 74h FSTPfbcd fbcd(r/m) mod=1 reg=6 rm=4      spec: 0xDF mod/reg/rm /6 mod!=3 */
            case 0x75: /* DFh 75h FSTPfbcd fbcd(r/m) mod=1 reg=6 rm=5      spec: 0xDF mod/reg/rm /6 mod!=3 */
            case 0x76: /* DFh 76h FSTPfbcd fbcd(r/m) mod=1 reg=6 rm=6      spec: 0xDF mod/reg/rm /6 mod!=3 */
            case 0x77: /* DFh 77h FSTPfbcd fbcd(r/m) mod=1 reg=6 rm=7      spec: 0xDF mod/reg/rm /6 mod!=3 */
            case 0xB0: /* DFh B0h FSTPfbcd fbcd(r/m) mod=2 reg=6 rm=0      spec: 0xDF mod/reg/rm /6 mod!=3 */
            case 0xB1: /* DFh B1h FSTPfbcd fbcd(r/m) mod=2 reg=6 rm=1      spec: 0xDF mod/reg/rm /6 mod!=3 */
            case 0xB2: /* DFh B2h FSTPfbcd fbcd(r/m) mod=2 reg=6 rm=2      spec: 0xDF mod/reg/rm /6 mod!=3 */
            case 0xB3: /* DFh B3h FSTPfbcd fbcd(r/m) mod=2 reg=6 rm=3      spec: 0xDF mod/reg/rm /6 mod!=3 */
            case 0xB4: /* DFh B4h FSTPfbcd fbcd(r/m) mod=2 reg=6 rm=4      spec: 0xDF mod/reg/rm /6 mod!=3 */
            case 0xB5: /* DFh B5h FSTPfbcd fbcd(r/m) mod=2 reg=6 rm=5      spec: 0xDF mod/reg/rm /6 mod!=3 */
            case 0xB6: /* DFh B6h FSTPfbcd fbcd(r/m) mod=2 reg=6 rm=6      spec: 0xDF mod/reg/rm /6 mod!=3 */
            case 0xB7: /* DFh B7h FSTPfbcd fbcd(r/m) mod=2 reg=6 rm=7      spec: 0xDF mod/reg/rm /6 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSTPfbcd %s",IPDecPrint32(mrm,sib,disp,10,RC_FPUREG,"fbcd"));
                break;
            case 0x38: /* DFh 38h FSTPq w64(r/m) mod=0 reg=7 rm=0      spec: 0xDF mod/reg/rm /7 mod!=3 */
            case 0x39: /* DFh 39h FSTPq w64(r/m) mod=0 reg=7 rm=1      spec: 0xDF mod/reg/rm /7 mod!=3 */
            case 0x3A: /* DFh 3Ah FSTPq w64(r/m) mod=0 reg=7 rm=2      spec: 0xDF mod/reg/rm /7 mod!=3 */
            case 0x3B: /* DFh 3Bh FSTPq w64(r/m) mod=0 reg=7 rm=3      spec: 0xDF mod/reg/rm /7 mod!=3 */
            case 0x3C: /* DFh 3Ch FSTPq w64(r/m) mod=0 reg=7 rm=4      spec: 0xDF mod/reg/rm /7 mod!=3 */
            case 0x3D: /* DFh 3Dh FSTPq w64(r/m) mod=0 reg=7 rm=5      spec: 0xDF mod/reg/rm /7 mod!=3 */
            case 0x3E: /* DFh 3Eh FSTPq w64(r/m) mod=0 reg=7 rm=6      spec: 0xDF mod/reg/rm /7 mod!=3 */
            case 0x3F: /* DFh 3Fh FSTPq w64(r/m) mod=0 reg=7 rm=7      spec: 0xDF mod/reg/rm /7 mod!=3 */
            case 0x78: /* DFh 78h FSTPq w64(r/m) mod=1 reg=7 rm=0      spec: 0xDF mod/reg/rm /7 mod!=3 */
            case 0x79: /* DFh 79h FSTPq w64(r/m) mod=1 reg=7 rm=1      spec: 0xDF mod/reg/rm /7 mod!=3 */
            case 0x7A: /* DFh 7Ah FSTPq w64(r/m) mod=1 reg=7 rm=2      spec: 0xDF mod/reg/rm /7 mod!=3 */
            case 0x7B: /* DFh 7Bh FSTPq w64(r/m) mod=1 reg=7 rm=3      spec: 0xDF mod/reg/rm /7 mod!=3 */
            case 0x7C: /* DFh 7Ch FSTPq w64(r/m) mod=1 reg=7 rm=4      spec: 0xDF mod/reg/rm /7 mod!=3 */
            case 0x7D: /* DFh 7Dh FSTPq w64(r/m) mod=1 reg=7 rm=5      spec: 0xDF mod/reg/rm /7 mod!=3 */
            case 0x7E: /* DFh 7Eh FSTPq w64(r/m) mod=1 reg=7 rm=6      spec: 0xDF mod/reg/rm /7 mod!=3 */
            case 0x7F: /* DFh 7Fh FSTPq w64(r/m) mod=1 reg=7 rm=7      spec: 0xDF mod/reg/rm /7 mod!=3 */
            case 0xB8: /* DFh B8h FSTPq w64(r/m) mod=2 reg=7 rm=0      spec: 0xDF mod/reg/rm /7 mod!=3 */
            case 0xB9: /* DFh B9h FSTPq w64(r/m) mod=2 reg=7 rm=1      spec: 0xDF mod/reg/rm /7 mod!=3 */
            case 0xBA: /* DFh BAh FSTPq w64(r/m) mod=2 reg=7 rm=2      spec: 0xDF mod/reg/rm /7 mod!=3 */
            case 0xBB: /* DFh BBh FSTPq w64(r/m) mod=2 reg=7 rm=3      spec: 0xDF mod/reg/rm /7 mod!=3 */
            case 0xBC: /* DFh BCh FSTPq w64(r/m) mod=2 reg=7 rm=4      spec: 0xDF mod/reg/rm /7 mod!=3 */
            case 0xBD: /* DFh BDh FSTPq w64(r/m) mod=2 reg=7 rm=5      spec: 0xDF mod/reg/rm /7 mod!=3 */
            case 0xBE: /* DFh BEh FSTPq w64(r/m) mod=2 reg=7 rm=6      spec: 0xDF mod/reg/rm /7 mod!=3 */
            case 0xBF: /* DFh BFh FSTPq w64(r/m) mod=2 reg=7 rm=7      spec: 0xDF mod/reg/rm /7 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSTPq %s",IPDecPrint32(mrm,sib,disp,8,RC_REG,"w64"));
                break;
            /* opcode DFh 48h  not defined */
            /* opcode DFh 49h  not defined */
            /* opcode DFh 4Ah  not defined */
            /* opcode DFh 4Bh  not defined */
            /* opcode DFh 4Ch  not defined */
            /* opcode DFh 4Dh  not defined */
            /* opcode DFh 4Eh  not defined */
            /* opcode DFh 4Fh  not defined */
            /* opcode DFh 88h  not defined */
            /* opcode DFh 89h  not defined */
            /* opcode DFh 8Ah  not defined */
            /* opcode DFh 8Bh  not defined */
            /* opcode DFh 8Ch  not defined */
            /* opcode DFh 8Dh  not defined */
            /* opcode DFh 8Eh  not defined */
            /* opcode DFh 8Fh  not defined */
            /* opcode DFh C0h  not defined */
            /* opcode DFh C1h  not defined */
            /* opcode DFh C2h  not defined */
            /* opcode DFh C3h  not defined */
            /* opcode DFh C4h  not defined */
            /* opcode DFh C5h  not defined */
            /* opcode DFh C6h  not defined */
            /* opcode DFh C7h  not defined */
            /* opcode DFh C8h  not defined */
            /* opcode DFh C9h  not defined */
            /* opcode DFh CAh  not defined */
            /* opcode DFh CBh  not defined */
            /* opcode DFh CCh  not defined */
            /* opcode DFh CDh  not defined */
            /* opcode DFh CEh  not defined */
            /* opcode DFh CFh  not defined */
            /* opcode DFh D0h  not defined */
            /* opcode DFh D1h  not defined */
            /* opcode DFh D2h  not defined */
            /* opcode DFh D3h  not defined */
            /* opcode DFh D4h  not defined */
            /* opcode DFh D5h  not defined */
            /* opcode DFh D6h  not defined */
            /* opcode DFh D7h  not defined */
            /* opcode DFh D8h  not defined */
            /* opcode DFh D9h  not defined */
            /* opcode DFh DAh  not defined */
            /* opcode DFh DBh  not defined */
            /* opcode DFh DCh  not defined */
            /* opcode DFh DDh  not defined */
            /* opcode DFh DEh  not defined */
            /* opcode DFh DFh  not defined */
            case 0xE0: /* DFh E0h FSTSWd w(a) mod=3 reg=4 rm=0      spec: 0xDF 0xE0 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSTSWd %s",CPUregsN[4][0]);
                break;
            /* opcode DFh E1h  not defined */
            /* opcode DFh E2h  not defined */
            /* opcode DFh E3h  not defined */
            /* opcode DFh E4h  not defined */
            /* opcode DFh E5h  not defined */
            /* opcode DFh E6h  not defined */
            /* opcode DFh E7h  not defined */
            /* opcode DFh E8h  not defined */
            /* opcode DFh E9h  not defined */
            /* opcode DFh EAh  not defined */
            /* opcode DFh EBh  not defined */
            /* opcode DFh ECh  not defined */
            /* opcode DFh EDh  not defined */
            /* opcode DFh EEh  not defined */
            /* opcode DFh EFh  not defined */
            /* opcode DFh F0h  not defined */
            /* opcode DFh F1h  not defined */
            /* opcode DFh F2h  not defined */
            /* opcode DFh F3h  not defined */
            /* opcode DFh F4h  not defined */
            /* opcode DFh F5h  not defined */
            /* opcode DFh F6h  not defined */
            /* opcode DFh F7h  not defined */
            /* opcode DFh F8h  not defined */
            /* opcode DFh F9h  not defined */
            /* opcode DFh FAh  not defined */
            /* opcode DFh FBh  not defined */
            /* opcode DFh FCh  not defined */
            /* opcode DFh FDh  not defined */
            /* opcode DFh FEh  not defined */
            /* opcode DFh FFh  not defined */
            default:
                goto _x86decode_illegal_opcode;
        };
/* End of opcodes starting with DFh */
        break;
    case 0xE0: /* E0h LOOPNZd w(i+ip)      spec: 0xE0 ibs */
        imm=IPFBsigned();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"LOOPNZd 0x%02lX",(unsigned long)((uint32_t)(imm+IPval())));
        break;
    case 0xE1: /* E1h LOOPZd w(i+ip)      spec: 0xE1 ibs */
        imm=IPFBsigned();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"LOOPZd 0x%02lX",(unsigned long)((uint32_t)(imm+IPval())));
        break;
    case 0xE2: /* E2h LOOPd w(i+ip)      spec: 0xE2 ibs */
        imm=IPFBsigned();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"LOOPd 0x%02lX",(unsigned long)((uint32_t)(imm+IPval())));
        break;
    case 0xE3: /* E3h JCXZd w(i+ip)      spec: 0xE3 ibs */
        imm=IPFBsigned();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JCXZd 0x%02lX",(unsigned long)((uint32_t)(imm+IPval())));
        break;
    case 0xE4: /* E4h INb b(a),i      spec: 0xE4 ib */
        imm=IPFB();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"INb %s,0x%02lX",CPUregsN[1][0],(unsigned long)((uint32_t)imm));
        break;
    case 0xE5: /* E5h INd w(a),i      spec: 0xE5 ib */
        imm=IPFB();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"INd %s,0x%02lX",CPUregsN[4][0],(unsigned long)((uint32_t)imm));
        break;
    case 0xE6: /* E6h OUTb i,b(a)      spec: 0xE6 ib */
        imm=IPFB();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"OUTb 0x%02lX,%s",(unsigned long)((uint32_t)imm),CPUregsN[1][0]);
        break;
    case 0xE7: /* E7h OUTd i,w(a)      spec: 0xE7 ib */
        imm=IPFB();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"OUTd 0x%02lX,%s",(unsigned long)((uint32_t)imm),CPUregsN[4][0]);
        break;
    case 0xE8: /* E8h CALLd w(i+ip)      spec: 0xE8 iws */
        imm=IPFcodeWsigned();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CALLd 0x%08lX",(unsigned long)((uint32_t)(imm+IPval())));
        break;
    case 0xE9: /* E9h JMPd w(i+ip)      spec: 0xE9 iws */
        imm=IPFcodeWsigned();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JMPd 0x%08lX",(unsigned long)((uint32_t)(imm+IPval())));
        break;
    case 0xEA: /* EAh JMPFd w(i2),w(i)      spec: 0xEA iw iw16 */
        imm=IPFcodeW();
        imm2=IPFW();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JMPFd 0x%04lX,0x%08lX",(unsigned long)((uint32_t)imm2),(unsigned long)((uint32_t)imm));
        break;
    case 0xEB: /* EBh JMPd w(i+ip)      spec: 0xEB ibs */
        imm=IPFBsigned();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JMPd 0x%02lX",(unsigned long)((uint32_t)(imm+IPval())));
        break;
    case 0xEC: /* ECh INb b(a),w16(d)      spec: 0xEC */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"INb %s,%s",CPUregsN[1][0],CPUregsN[2][2]);
        break;
    case 0xED: /* EDh INd w(a),w16(d)      spec: 0xED */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"INd %s,%s",CPUregsN[4][0],CPUregsN[2][2]);
        break;
    case 0xEE: /* EEh OUTb w16(d),b(a)      spec: 0xEE */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"OUTb %s,%s",CPUregsN[2][2],CPUregsN[1][0]);
        break;
    case 0xEF: /* EFh OUTd w16(d),w(a)      spec: 0xEF */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"OUTd %s,%s",CPUregsN[2][2],CPUregsN[4][0]);
        break;
    case 0xF0: /* F0h LOCK       spec: 0xF0 prefix */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"LOCK ");
        goto _x86decode_after_prefix_code32_addr32;
    case 0xF1: /* F1h INT1       spec: 0xF1 */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"INT1");
        break;
    case 0xF2: /* F2h REPNZ       spec: 0xF2 prefix */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"REPNZ ");
        goto _x86decode_after_prefix_code32_addr32;
    case 0xF3: /* F3h REPZ       spec: 0xF3 prefix */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"REPZ ");
        goto _x86decode_after_prefix_code32_addr32;
    case 0xF4: /* F4h HLT       spec: 0xF4 */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"HLT");
        break;
    case 0xF5: /* F5h CMC       spec: 0xF5 */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CMC");
        break;
    case 0xF6: /* F6h        spec:  */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
/* Opcodes starting with F6h */
        switch (mrm.reg()) {
            case 0: /* F6h 00h TESTb b(r/m),i reg=0      spec: 0xF6 mod/reg/rm /0 ib */
            case 1: /* F6h 08h TESTb b(r/m),i reg=1      spec: 0xF6 mod/reg/rm /1 ib */
                imm=IPFB();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"TESTb %s,0x%02lX",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),(unsigned long)((uint32_t)imm));
                break;
            case 2: /* F6h 10h NOTb b(r/m) reg=2      spec: 0xF6 mod/reg/rm /2 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"NOTb %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 3: /* F6h 18h NEGb b(r/m) reg=3      spec: 0xF6 mod/reg/rm /3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"NEGb %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 4: /* F6h 20h MULb b(r/m) reg=4      spec: 0xF6 mod/reg/rm /4 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MULb %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 5: /* F6h 28h IMULb b(r/m) reg=5      spec: 0xF6 mod/reg/rm /5 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"IMULb %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 6: /* F6h 30h DIVb b(r/m) reg=6      spec: 0xF6 mod/reg/rm /6 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"DIVb %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 7: /* F6h 38h IDIVb b(r/m) reg=7      spec: 0xF6 mod/reg/rm /7 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"IDIVb %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            default:
                goto _x86decode_illegal_opcode;
        };
/* End of opcodes starting with F6h */
        break;
    case 0xF7: /* F7h        spec:  */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
/* Opcodes starting with F7h */
        switch (mrm.reg()) {
            case 0: /* F7h 00h TESTd w(r/m),i reg=0      spec: 0xF7 mod/reg/rm /0 iw */
            case 1: /* F7h 08h TESTd w(r/m),i reg=1      spec: 0xF7 mod/reg/rm /1 iw */
                imm=IPFcodeW();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"TESTd %s,0x%08lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
                break;
            case 2: /* F7h 10h NOTd w(r/m) reg=2      spec: 0xF7 mod/reg/rm /2 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"NOTd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 3: /* F7h 18h NEGd w(r/m) reg=3      spec: 0xF7 mod/reg/rm /3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"NEGd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 4: /* F7h 20h MULd w(r/m) reg=4      spec: 0xF7 mod/reg/rm /4 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MULd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 5: /* F7h 28h IMULd w(r/m) reg=5      spec: 0xF7 mod/reg/rm /5 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"IMULd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 6: /* F7h 30h DIVd w(r/m) reg=6      spec: 0xF7 mod/reg/rm /6 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"DIVd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 7: /* F7h 38h IDIVd w(r/m) reg=7      spec: 0xF7 mod/reg/rm /7 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"IDIVd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            default:
                goto _x86decode_illegal_opcode;
        };
/* End of opcodes starting with F7h */
        break;
    case 0xF8: /* F8h CLC       spec: 0xF8 */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CLC");
        break;
    case 0xF9: /* F9h STC       spec: 0xF9 */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"STC");
        break;
    case 0xFA: /* FAh CLI       spec: 0xFA */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CLI");
        break;
    case 0xFB: /* FBh STI       spec: 0xFB */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"STI");
        break;
    case 0xFC: /* FCh CLD       spec: 0xFC */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CLD");
        break;
    case 0xFD: /* FDh STD       spec: 0xFD */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"STD");
        break;
    case 0xFE: /* FEh        spec:  */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
/* Opcodes starting with FEh */
        switch (mrm.reg()) {
            case 0: /* FEh 00h INCb b(r/m) reg=0      spec: 0xFE mod/reg/rm /0 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"INCb %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 1: /* FEh 08h DECb b(r/m) reg=1      spec: 0xFE mod/reg/rm /1 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"DECb %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            /* reg 2 not defined */
            /* reg 3 not defined */
            /* reg 4 not defined */
            /* reg 5 not defined */
            /* reg 6 not defined */
            /* reg 7 not defined */
            default:
                goto _x86decode_illegal_opcode;
        };
/* End of opcodes starting with FEh */
        break;
    case 0xFF: /* FFh        spec:  */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
/* Opcodes starting with FFh */
        switch (mrm.reg()) {
            case 0: /* FFh 00h INCd w(r/m) reg=0      spec: 0xFF mod/reg/rm /0 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"INCd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 1: /* FFh 08h DECd w(r/m) reg=1      spec: 0xFF mod/reg/rm /1 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"DECd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 2: /* FFh 10h CALLd w(r/m) reg=2      spec: 0xFF mod/reg/rm /2 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CALLd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 3: /* FFh 18h CALLFd w(r/m) reg=3      spec: 0xFF mod/reg/rm /3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CALLFd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 4: /* FFh 20h JMPd w(r/m) reg=4      spec: 0xFF mod/reg/rm /4 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JMPd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 5: /* FFh 28h JMPFd w(r/m) reg=5      spec: 0xFF mod/reg/rm /5 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JMPFd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 6: /* FFh 30h PUSHd w(r/m) reg=6      spec: 0xFF mod/reg/rm /6 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PUSHd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            /* reg 7 not defined */
            default:
                goto _x86decode_illegal_opcode;
        };
/* End of opcodes starting with FFh */
        break;
    default:
        goto _x86decode_illegal_opcode;
};
#undef IPFaddrW
#undef IPFaddrWsigned
#undef IPFcodeW
#undef IPFcodeWsigned
