#define IPFcodeW() IPFDW()
#define IPFcodeWsigned() IPFDWsigned()
#define IPFaddrW() IPFDW()
#define IPFaddrWsigned() IPFDWsigned()
/* BEGIN AUTOGENERATED CODE */
/* code width = 32     addr width = 32 */
/* expect host code to prefix this with */
/*   _x86decode_begin_code32_addr32: */
/*   _x86decode_after_prefix_code32_addr32: */
/* expect host code to provide: */
/*   uint8_t op;               opcode byte */
/*   uint32_t imm,imm2,imm3,imm4; immediate 32-bit */
/*   struct x86ModRegRm mrm;   mod/reg/rm byte */
/*   struct x86ScaleIndexBase sib; scalar/index/base byte */
/*   uint32_t disp;            displacement */
/* expect host code to provide: */
/*   uint8_t IPFB();           fetch byte at instruction pointer */
/*   uint16_t IPFW();          fetch word at instruction pointer */
/*   uint32_t IPFDW();         fetch dword at instruction pointer */
/*   uint32_t IPFcodeW();      fetch 32-bit word at instruction pointer */
/*   uint32_t IPFaddrW();      fetch 32-bit word at instruction pointer */
/*   void IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);   read mod/reg/rm, sib, displacement */
/* expect host to provide: */
/*   x86_offset_t IPDecIP; */
/*   char IPDecStr[256]; */
/*   char *ipw,*ipwf; */
/*   x86_offset_t IPval(void); */
op=IPFB();
_x86decode_begin_code32_addr32_opcode_parse_:
switch (op) {
    case 0x00: /* 00h ADDb b(r/m),b(reg)      spec: 0x00 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ADDb %s,%s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),CPUregsN[1][mrm.reg()]);
        break;
    case 0x01: /* 01h ADDd w(r/m),w(reg)      spec: 0x01 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ADDd %s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[4][mrm.reg()]);
        break;
    case 0x02: /* 02h ADDb b(reg),b(r/m)      spec: 0x02 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ADDb %s,%s",CPUregsN[1][mrm.reg()],IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
        break;
    case 0x03: /* 03h ADDd w(reg),w(r/m)      spec: 0x03 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ADDd %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
        break;
    case 0x04: /* 04h ADDb b(a),i      spec: 0x04 ib */
        imm=IPFB();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ADDb %s,0x%02lX",CPUregsN[1][0],(unsigned long)((uint32_t)imm));
        break;
    case 0x05: /* 05h ADDd w(a),i      spec: 0x05 iw */
        imm=IPFcodeW();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ADDd %s,0x%08lX",CPUregsN[4][0],(unsigned long)((uint32_t)imm));
        break;
    case 0x06: /* 06h PUSHd w(es)      spec: 0x06 */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PUSHd %s",CPUsregs_80386[0]);
        break;
    case 0x07: /* 07h POPd w(es)      spec: 0x07 */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"POPd %s",CPUsregs_80386[0]);
        break;
    case 0x08: /* 08h ORb b(r/m),b(reg)      spec: 0x08 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ORb %s,%s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),CPUregsN[1][mrm.reg()]);
        break;
    case 0x09: /* 09h ORd w(r/m),w(reg)      spec: 0x09 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ORd %s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[4][mrm.reg()]);
        break;
    case 0x0A: /* 0Ah ORb b(reg),b(r/m)      spec: 0x0A mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ORb %s,%s",CPUregsN[1][mrm.reg()],IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
        break;
    case 0x0B: /* 0Bh ORd w(reg),w(r/m)      spec: 0x0B mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ORd %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
        break;
    case 0x0C: /* 0Ch ORb b(a),i      spec: 0x0C ib */
        imm=IPFB();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ORb %s,0x%02lX",CPUregsN[1][0],(unsigned long)((uint32_t)imm));
        break;
    case 0x0D: /* 0Dh ORd w(a),i      spec: 0x0D iw */
        imm=IPFcodeW();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ORd %s,0x%08lX",CPUregsN[4][0],(unsigned long)((uint32_t)imm));
        break;
    case 0x0E: /* 0Eh PUSHd w(cs)      spec: 0x0E */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PUSHd %s",CPUsregs_80386[1]);
        break;
    case 0x0F: /* 0Fh        spec:  */
/* Opcodes starting with 0Fh */
        op=IPFB();
        _x86decode_begin_code32_addr32_opcode_parse_0F:
        switch (op) {
            case 0x00: /* 0Fh 00h        spec:  */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                _x86decode_begin_code32_addr32_opcode_parse_0F00:
/* Opcodes starting with 0Fh 00h */
                switch (mrm.byte) {
                    case 0x00: /* 0Fh 00h 00h SLDTd w(r/m) mod=0 reg=0 rm=0      spec: 0x0F 0x00 mod/reg/rm /0 mod!=3 */
                    case 0x01: /* 0Fh 00h 01h SLDTd w(r/m) mod=0 reg=0 rm=1      spec: 0x0F 0x00 mod/reg/rm /0 mod!=3 */
                    case 0x02: /* 0Fh 00h 02h SLDTd w(r/m) mod=0 reg=0 rm=2      spec: 0x0F 0x00 mod/reg/rm /0 mod!=3 */
                    case 0x03: /* 0Fh 00h 03h SLDTd w(r/m) mod=0 reg=0 rm=3      spec: 0x0F 0x00 mod/reg/rm /0 mod!=3 */
                    case 0x04: /* 0Fh 00h 04h SLDTd w(r/m) mod=0 reg=0 rm=4      spec: 0x0F 0x00 mod/reg/rm /0 mod!=3 */
                    case 0x05: /* 0Fh 00h 05h SLDTd w(r/m) mod=0 reg=0 rm=5      spec: 0x0F 0x00 mod/reg/rm /0 mod!=3 */
                    case 0x06: /* 0Fh 00h 06h SLDTd w(r/m) mod=0 reg=0 rm=6      spec: 0x0F 0x00 mod/reg/rm /0 mod!=3 */
                    case 0x07: /* 0Fh 00h 07h SLDTd w(r/m) mod=0 reg=0 rm=7      spec: 0x0F 0x00 mod/reg/rm /0 mod!=3 */
                    case 0x40: /* 0Fh 00h 40h SLDTd w(r/m) mod=1 reg=0 rm=0      spec: 0x0F 0x00 mod/reg/rm /0 mod!=3 */
                    case 0x41: /* 0Fh 00h 41h SLDTd w(r/m) mod=1 reg=0 rm=1      spec: 0x0F 0x00 mod/reg/rm /0 mod!=3 */
                    case 0x42: /* 0Fh 00h 42h SLDTd w(r/m) mod=1 reg=0 rm=2      spec: 0x0F 0x00 mod/reg/rm /0 mod!=3 */
                    case 0x43: /* 0Fh 00h 43h SLDTd w(r/m) mod=1 reg=0 rm=3      spec: 0x0F 0x00 mod/reg/rm /0 mod!=3 */
                    case 0x44: /* 0Fh 00h 44h SLDTd w(r/m) mod=1 reg=0 rm=4      spec: 0x0F 0x00 mod/reg/rm /0 mod!=3 */
                    case 0x45: /* 0Fh 00h 45h SLDTd w(r/m) mod=1 reg=0 rm=5      spec: 0x0F 0x00 mod/reg/rm /0 mod!=3 */
                    case 0x46: /* 0Fh 00h 46h SLDTd w(r/m) mod=1 reg=0 rm=6      spec: 0x0F 0x00 mod/reg/rm /0 mod!=3 */
                    case 0x47: /* 0Fh 00h 47h SLDTd w(r/m) mod=1 reg=0 rm=7      spec: 0x0F 0x00 mod/reg/rm /0 mod!=3 */
                    case 0x80: /* 0Fh 00h 80h SLDTd w(r/m) mod=2 reg=0 rm=0      spec: 0x0F 0x00 mod/reg/rm /0 mod!=3 */
                    case 0x81: /* 0Fh 00h 81h SLDTd w(r/m) mod=2 reg=0 rm=1      spec: 0x0F 0x00 mod/reg/rm /0 mod!=3 */
                    case 0x82: /* 0Fh 00h 82h SLDTd w(r/m) mod=2 reg=0 rm=2      spec: 0x0F 0x00 mod/reg/rm /0 mod!=3 */
                    case 0x83: /* 0Fh 00h 83h SLDTd w(r/m) mod=2 reg=0 rm=3      spec: 0x0F 0x00 mod/reg/rm /0 mod!=3 */
                    case 0x84: /* 0Fh 00h 84h SLDTd w(r/m) mod=2 reg=0 rm=4      spec: 0x0F 0x00 mod/reg/rm /0 mod!=3 */
                    case 0x85: /* 0Fh 00h 85h SLDTd w(r/m) mod=2 reg=0 rm=5      spec: 0x0F 0x00 mod/reg/rm /0 mod!=3 */
                    case 0x86: /* 0Fh 00h 86h SLDTd w(r/m) mod=2 reg=0 rm=6      spec: 0x0F 0x00 mod/reg/rm /0 mod!=3 */
                    case 0x87: /* 0Fh 00h 87h SLDTd w(r/m) mod=2 reg=0 rm=7      spec: 0x0F 0x00 mod/reg/rm /0 mod!=3 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SLDTd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                        break;
                    case 0x08: /* 0Fh 00h 08h STRd w(r/m) mod=0 reg=1 rm=0      spec: 0x0F 0x00 mod/reg/rm /1 mod!=3 */
                    case 0x09: /* 0Fh 00h 09h STRd w(r/m) mod=0 reg=1 rm=1      spec: 0x0F 0x00 mod/reg/rm /1 mod!=3 */
                    case 0x0A: /* 0Fh 00h 0Ah STRd w(r/m) mod=0 reg=1 rm=2      spec: 0x0F 0x00 mod/reg/rm /1 mod!=3 */
                    case 0x0B: /* 0Fh 00h 0Bh STRd w(r/m) mod=0 reg=1 rm=3      spec: 0x0F 0x00 mod/reg/rm /1 mod!=3 */
                    case 0x0C: /* 0Fh 00h 0Ch STRd w(r/m) mod=0 reg=1 rm=4      spec: 0x0F 0x00 mod/reg/rm /1 mod!=3 */
                    case 0x0D: /* 0Fh 00h 0Dh STRd w(r/m) mod=0 reg=1 rm=5      spec: 0x0F 0x00 mod/reg/rm /1 mod!=3 */
                    case 0x0E: /* 0Fh 00h 0Eh STRd w(r/m) mod=0 reg=1 rm=6      spec: 0x0F 0x00 mod/reg/rm /1 mod!=3 */
                    case 0x0F: /* 0Fh 00h 0Fh STRd w(r/m) mod=0 reg=1 rm=7      spec: 0x0F 0x00 mod/reg/rm /1 mod!=3 */
                    case 0x48: /* 0Fh 00h 48h STRd w(r/m) mod=1 reg=1 rm=0      spec: 0x0F 0x00 mod/reg/rm /1 mod!=3 */
                    case 0x49: /* 0Fh 00h 49h STRd w(r/m) mod=1 reg=1 rm=1      spec: 0x0F 0x00 mod/reg/rm /1 mod!=3 */
                    case 0x4A: /* 0Fh 00h 4Ah STRd w(r/m) mod=1 reg=1 rm=2      spec: 0x0F 0x00 mod/reg/rm /1 mod!=3 */
                    case 0x4B: /* 0Fh 00h 4Bh STRd w(r/m) mod=1 reg=1 rm=3      spec: 0x0F 0x00 mod/reg/rm /1 mod!=3 */
                    case 0x4C: /* 0Fh 00h 4Ch STRd w(r/m) mod=1 reg=1 rm=4      spec: 0x0F 0x00 mod/reg/rm /1 mod!=3 */
                    case 0x4D: /* 0Fh 00h 4Dh STRd w(r/m) mod=1 reg=1 rm=5      spec: 0x0F 0x00 mod/reg/rm /1 mod!=3 */
                    case 0x4E: /* 0Fh 00h 4Eh STRd w(r/m) mod=1 reg=1 rm=6      spec: 0x0F 0x00 mod/reg/rm /1 mod!=3 */
                    case 0x4F: /* 0Fh 00h 4Fh STRd w(r/m) mod=1 reg=1 rm=7      spec: 0x0F 0x00 mod/reg/rm /1 mod!=3 */
                    case 0x88: /* 0Fh 00h 88h STRd w(r/m) mod=2 reg=1 rm=0      spec: 0x0F 0x00 mod/reg/rm /1 mod!=3 */
                    case 0x89: /* 0Fh 00h 89h STRd w(r/m) mod=2 reg=1 rm=1      spec: 0x0F 0x00 mod/reg/rm /1 mod!=3 */
                    case 0x8A: /* 0Fh 00h 8Ah STRd w(r/m) mod=2 reg=1 rm=2      spec: 0x0F 0x00 mod/reg/rm /1 mod!=3 */
                    case 0x8B: /* 0Fh 00h 8Bh STRd w(r/m) mod=2 reg=1 rm=3      spec: 0x0F 0x00 mod/reg/rm /1 mod!=3 */
                    case 0x8C: /* 0Fh 00h 8Ch STRd w(r/m) mod=2 reg=1 rm=4      spec: 0x0F 0x00 mod/reg/rm /1 mod!=3 */
                    case 0x8D: /* 0Fh 00h 8Dh STRd w(r/m) mod=2 reg=1 rm=5      spec: 0x0F 0x00 mod/reg/rm /1 mod!=3 */
                    case 0x8E: /* 0Fh 00h 8Eh STRd w(r/m) mod=2 reg=1 rm=6      spec: 0x0F 0x00 mod/reg/rm /1 mod!=3 */
                    case 0x8F: /* 0Fh 00h 8Fh STRd w(r/m) mod=2 reg=1 rm=7      spec: 0x0F 0x00 mod/reg/rm /1 mod!=3 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"STRd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                        break;
                    case 0x10: /* 0Fh 00h 10h LLDTd w(r/m) mod=0 reg=2 rm=0      spec: 0x0F 0x00 mod/reg/rm /2 mod!=3 */
                    case 0x11: /* 0Fh 00h 11h LLDTd w(r/m) mod=0 reg=2 rm=1      spec: 0x0F 0x00 mod/reg/rm /2 mod!=3 */
                    case 0x12: /* 0Fh 00h 12h LLDTd w(r/m) mod=0 reg=2 rm=2      spec: 0x0F 0x00 mod/reg/rm /2 mod!=3 */
                    case 0x13: /* 0Fh 00h 13h LLDTd w(r/m) mod=0 reg=2 rm=3      spec: 0x0F 0x00 mod/reg/rm /2 mod!=3 */
                    case 0x14: /* 0Fh 00h 14h LLDTd w(r/m) mod=0 reg=2 rm=4      spec: 0x0F 0x00 mod/reg/rm /2 mod!=3 */
                    case 0x15: /* 0Fh 00h 15h LLDTd w(r/m) mod=0 reg=2 rm=5      spec: 0x0F 0x00 mod/reg/rm /2 mod!=3 */
                    case 0x16: /* 0Fh 00h 16h LLDTd w(r/m) mod=0 reg=2 rm=6      spec: 0x0F 0x00 mod/reg/rm /2 mod!=3 */
                    case 0x17: /* 0Fh 00h 17h LLDTd w(r/m) mod=0 reg=2 rm=7      spec: 0x0F 0x00 mod/reg/rm /2 mod!=3 */
                    case 0x50: /* 0Fh 00h 50h LLDTd w(r/m) mod=1 reg=2 rm=0      spec: 0x0F 0x00 mod/reg/rm /2 mod!=3 */
                    case 0x51: /* 0Fh 00h 51h LLDTd w(r/m) mod=1 reg=2 rm=1      spec: 0x0F 0x00 mod/reg/rm /2 mod!=3 */
                    case 0x52: /* 0Fh 00h 52h LLDTd w(r/m) mod=1 reg=2 rm=2      spec: 0x0F 0x00 mod/reg/rm /2 mod!=3 */
                    case 0x53: /* 0Fh 00h 53h LLDTd w(r/m) mod=1 reg=2 rm=3      spec: 0x0F 0x00 mod/reg/rm /2 mod!=3 */
                    case 0x54: /* 0Fh 00h 54h LLDTd w(r/m) mod=1 reg=2 rm=4      spec: 0x0F 0x00 mod/reg/rm /2 mod!=3 */
                    case 0x55: /* 0Fh 00h 55h LLDTd w(r/m) mod=1 reg=2 rm=5      spec: 0x0F 0x00 mod/reg/rm /2 mod!=3 */
                    case 0x56: /* 0Fh 00h 56h LLDTd w(r/m) mod=1 reg=2 rm=6      spec: 0x0F 0x00 mod/reg/rm /2 mod!=3 */
                    case 0x57: /* 0Fh 00h 57h LLDTd w(r/m) mod=1 reg=2 rm=7      spec: 0x0F 0x00 mod/reg/rm /2 mod!=3 */
                    case 0x90: /* 0Fh 00h 90h LLDTd w(r/m) mod=2 reg=2 rm=0      spec: 0x0F 0x00 mod/reg/rm /2 mod!=3 */
                    case 0x91: /* 0Fh 00h 91h LLDTd w(r/m) mod=2 reg=2 rm=1      spec: 0x0F 0x00 mod/reg/rm /2 mod!=3 */
                    case 0x92: /* 0Fh 00h 92h LLDTd w(r/m) mod=2 reg=2 rm=2      spec: 0x0F 0x00 mod/reg/rm /2 mod!=3 */
                    case 0x93: /* 0Fh 00h 93h LLDTd w(r/m) mod=2 reg=2 rm=3      spec: 0x0F 0x00 mod/reg/rm /2 mod!=3 */
                    case 0x94: /* 0Fh 00h 94h LLDTd w(r/m) mod=2 reg=2 rm=4      spec: 0x0F 0x00 mod/reg/rm /2 mod!=3 */
                    case 0x95: /* 0Fh 00h 95h LLDTd w(r/m) mod=2 reg=2 rm=5      spec: 0x0F 0x00 mod/reg/rm /2 mod!=3 */
                    case 0x96: /* 0Fh 00h 96h LLDTd w(r/m) mod=2 reg=2 rm=6      spec: 0x0F 0x00 mod/reg/rm /2 mod!=3 */
                    case 0x97: /* 0Fh 00h 97h LLDTd w(r/m) mod=2 reg=2 rm=7      spec: 0x0F 0x00 mod/reg/rm /2 mod!=3 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"LLDTd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                        break;
                    case 0x18: /* 0Fh 00h 18h LTRd w(r/m) mod=0 reg=3 rm=0      spec: 0x0F 0x00 mod/reg/rm /3 mod!=3 */
                    case 0x19: /* 0Fh 00h 19h LTRd w(r/m) mod=0 reg=3 rm=1      spec: 0x0F 0x00 mod/reg/rm /3 mod!=3 */
                    case 0x1A: /* 0Fh 00h 1Ah LTRd w(r/m) mod=0 reg=3 rm=2      spec: 0x0F 0x00 mod/reg/rm /3 mod!=3 */
                    case 0x1B: /* 0Fh 00h 1Bh LTRd w(r/m) mod=0 reg=3 rm=3      spec: 0x0F 0x00 mod/reg/rm /3 mod!=3 */
                    case 0x1C: /* 0Fh 00h 1Ch LTRd w(r/m) mod=0 reg=3 rm=4      spec: 0x0F 0x00 mod/reg/rm /3 mod!=3 */
                    case 0x1D: /* 0Fh 00h 1Dh LTRd w(r/m) mod=0 reg=3 rm=5      spec: 0x0F 0x00 mod/reg/rm /3 mod!=3 */
                    case 0x1E: /* 0Fh 00h 1Eh LTRd w(r/m) mod=0 reg=3 rm=6      spec: 0x0F 0x00 mod/reg/rm /3 mod!=3 */
                    case 0x1F: /* 0Fh 00h 1Fh LTRd w(r/m) mod=0 reg=3 rm=7      spec: 0x0F 0x00 mod/reg/rm /3 mod!=3 */
                    case 0x58: /* 0Fh 00h 58h LTRd w(r/m) mod=1 reg=3 rm=0      spec: 0x0F 0x00 mod/reg/rm /3 mod!=3 */
                    case 0x59: /* 0Fh 00h 59h LTRd w(r/m) mod=1 reg=3 rm=1      spec: 0x0F 0x00 mod/reg/rm /3 mod!=3 */
                    case 0x5A: /* 0Fh 00h 5Ah LTRd w(r/m) mod=1 reg=3 rm=2      spec: 0x0F 0x00 mod/reg/rm /3 mod!=3 */
                    case 0x5B: /* 0Fh 00h 5Bh LTRd w(r/m) mod=1 reg=3 rm=3      spec: 0x0F 0x00 mod/reg/rm /3 mod!=3 */
                    case 0x5C: /* 0Fh 00h 5Ch LTRd w(r/m) mod=1 reg=3 rm=4      spec: 0x0F 0x00 mod/reg/rm /3 mod!=3 */
                    case 0x5D: /* 0Fh 00h 5Dh LTRd w(r/m) mod=1 reg=3 rm=5      spec: 0x0F 0x00 mod/reg/rm /3 mod!=3 */
                    case 0x5E: /* 0Fh 00h 5Eh LTRd w(r/m) mod=1 reg=3 rm=6      spec: 0x0F 0x00 mod/reg/rm /3 mod!=3 */
                    case 0x5F: /* 0Fh 00h 5Fh LTRd w(r/m) mod=1 reg=3 rm=7      spec: 0x0F 0x00 mod/reg/rm /3 mod!=3 */
                    case 0x98: /* 0Fh 00h 98h LTRd w(r/m) mod=2 reg=3 rm=0      spec: 0x0F 0x00 mod/reg/rm /3 mod!=3 */
                    case 0x99: /* 0Fh 00h 99h LTRd w(r/m) mod=2 reg=3 rm=1      spec: 0x0F 0x00 mod/reg/rm /3 mod!=3 */
                    case 0x9A: /* 0Fh 00h 9Ah LTRd w(r/m) mod=2 reg=3 rm=2      spec: 0x0F 0x00 mod/reg/rm /3 mod!=3 */
                    case 0x9B: /* 0Fh 00h 9Bh LTRd w(r/m) mod=2 reg=3 rm=3      spec: 0x0F 0x00 mod/reg/rm /3 mod!=3 */
                    case 0x9C: /* 0Fh 00h 9Ch LTRd w(r/m) mod=2 reg=3 rm=4      spec: 0x0F 0x00 mod/reg/rm /3 mod!=3 */
                    case 0x9D: /* 0Fh 00h 9Dh LTRd w(r/m) mod=2 reg=3 rm=5      spec: 0x0F 0x00 mod/reg/rm /3 mod!=3 */
                    case 0x9E: /* 0Fh 00h 9Eh LTRd w(r/m) mod=2 reg=3 rm=6      spec: 0x0F 0x00 mod/reg/rm /3 mod!=3 */
                    case 0x9F: /* 0Fh 00h 9Fh LTRd w(r/m) mod=2 reg=3 rm=7      spec: 0x0F 0x00 mod/reg/rm /3 mod!=3 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"LTRd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                        break;
                    case 0x20: /* 0Fh 00h 20h VERRd w(r/m) mod=0 reg=4 rm=0      spec: 0x0F 0x00 mod/reg/rm /4 mod!=3 */
                    case 0x21: /* 0Fh 00h 21h VERRd w(r/m) mod=0 reg=4 rm=1      spec: 0x0F 0x00 mod/reg/rm /4 mod!=3 */
                    case 0x22: /* 0Fh 00h 22h VERRd w(r/m) mod=0 reg=4 rm=2      spec: 0x0F 0x00 mod/reg/rm /4 mod!=3 */
                    case 0x23: /* 0Fh 00h 23h VERRd w(r/m) mod=0 reg=4 rm=3      spec: 0x0F 0x00 mod/reg/rm /4 mod!=3 */
                    case 0x24: /* 0Fh 00h 24h VERRd w(r/m) mod=0 reg=4 rm=4      spec: 0x0F 0x00 mod/reg/rm /4 mod!=3 */
                    case 0x25: /* 0Fh 00h 25h VERRd w(r/m) mod=0 reg=4 rm=5      spec: 0x0F 0x00 mod/reg/rm /4 mod!=3 */
                    case 0x26: /* 0Fh 00h 26h VERRd w(r/m) mod=0 reg=4 rm=6      spec: 0x0F 0x00 mod/reg/rm /4 mod!=3 */
                    case 0x27: /* 0Fh 00h 27h VERRd w(r/m) mod=0 reg=4 rm=7      spec: 0x0F 0x00 mod/reg/rm /4 mod!=3 */
                    case 0x60: /* 0Fh 00h 60h VERRd w(r/m) mod=1 reg=4 rm=0      spec: 0x0F 0x00 mod/reg/rm /4 mod!=3 */
                    case 0x61: /* 0Fh 00h 61h VERRd w(r/m) mod=1 reg=4 rm=1      spec: 0x0F 0x00 mod/reg/rm /4 mod!=3 */
                    case 0x62: /* 0Fh 00h 62h VERRd w(r/m) mod=1 reg=4 rm=2      spec: 0x0F 0x00 mod/reg/rm /4 mod!=3 */
                    case 0x63: /* 0Fh 00h 63h VERRd w(r/m) mod=1 reg=4 rm=3      spec: 0x0F 0x00 mod/reg/rm /4 mod!=3 */
                    case 0x64: /* 0Fh 00h 64h VERRd w(r/m) mod=1 reg=4 rm=4      spec: 0x0F 0x00 mod/reg/rm /4 mod!=3 */
                    case 0x65: /* 0Fh 00h 65h VERRd w(r/m) mod=1 reg=4 rm=5      spec: 0x0F 0x00 mod/reg/rm /4 mod!=3 */
                    case 0x66: /* 0Fh 00h 66h VERRd w(r/m) mod=1 reg=4 rm=6      spec: 0x0F 0x00 mod/reg/rm /4 mod!=3 */
                    case 0x67: /* 0Fh 00h 67h VERRd w(r/m) mod=1 reg=4 rm=7      spec: 0x0F 0x00 mod/reg/rm /4 mod!=3 */
                    case 0xA0: /* 0Fh 00h A0h VERRd w(r/m) mod=2 reg=4 rm=0      spec: 0x0F 0x00 mod/reg/rm /4 mod!=3 */
                    case 0xA1: /* 0Fh 00h A1h VERRd w(r/m) mod=2 reg=4 rm=1      spec: 0x0F 0x00 mod/reg/rm /4 mod!=3 */
                    case 0xA2: /* 0Fh 00h A2h VERRd w(r/m) mod=2 reg=4 rm=2      spec: 0x0F 0x00 mod/reg/rm /4 mod!=3 */
                    case 0xA3: /* 0Fh 00h A3h VERRd w(r/m) mod=2 reg=4 rm=3      spec: 0x0F 0x00 mod/reg/rm /4 mod!=3 */
                    case 0xA4: /* 0Fh 00h A4h VERRd w(r/m) mod=2 reg=4 rm=4      spec: 0x0F 0x00 mod/reg/rm /4 mod!=3 */
                    case 0xA5: /* 0Fh 00h A5h VERRd w(r/m) mod=2 reg=4 rm=5      spec: 0x0F 0x00 mod/reg/rm /4 mod!=3 */
                    case 0xA6: /* 0Fh 00h A6h VERRd w(r/m) mod=2 reg=4 rm=6      spec: 0x0F 0x00 mod/reg/rm /4 mod!=3 */
                    case 0xA7: /* 0Fh 00h A7h VERRd w(r/m) mod=2 reg=4 rm=7      spec: 0x0F 0x00 mod/reg/rm /4 mod!=3 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VERRd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                        break;
                    case 0x28: /* 0Fh 00h 28h VERWd w(r/m) mod=0 reg=5 rm=0      spec: 0x0F 0x00 mod/reg/rm /5 mod!=3 */
                    case 0x29: /* 0Fh 00h 29h VERWd w(r/m) mod=0 reg=5 rm=1      spec: 0x0F 0x00 mod/reg/rm /5 mod!=3 */
                    case 0x2A: /* 0Fh 00h 2Ah VERWd w(r/m) mod=0 reg=5 rm=2      spec: 0x0F 0x00 mod/reg/rm /5 mod!=3 */
                    case 0x2B: /* 0Fh 00h 2Bh VERWd w(r/m) mod=0 reg=5 rm=3      spec: 0x0F 0x00 mod/reg/rm /5 mod!=3 */
                    case 0x2C: /* 0Fh 00h 2Ch VERWd w(r/m) mod=0 reg=5 rm=4      spec: 0x0F 0x00 mod/reg/rm /5 mod!=3 */
                    case 0x2D: /* 0Fh 00h 2Dh VERWd w(r/m) mod=0 reg=5 rm=5      spec: 0x0F 0x00 mod/reg/rm /5 mod!=3 */
                    case 0x2E: /* 0Fh 00h 2Eh VERWd w(r/m) mod=0 reg=5 rm=6      spec: 0x0F 0x00 mod/reg/rm /5 mod!=3 */
                    case 0x2F: /* 0Fh 00h 2Fh VERWd w(r/m) mod=0 reg=5 rm=7      spec: 0x0F 0x00 mod/reg/rm /5 mod!=3 */
                    case 0x68: /* 0Fh 00h 68h VERWd w(r/m) mod=1 reg=5 rm=0      spec: 0x0F 0x00 mod/reg/rm /5 mod!=3 */
                    case 0x69: /* 0Fh 00h 69h VERWd w(r/m) mod=1 reg=5 rm=1      spec: 0x0F 0x00 mod/reg/rm /5 mod!=3 */
                    case 0x6A: /* 0Fh 00h 6Ah VERWd w(r/m) mod=1 reg=5 rm=2      spec: 0x0F 0x00 mod/reg/rm /5 mod!=3 */
                    case 0x6B: /* 0Fh 00h 6Bh VERWd w(r/m) mod=1 reg=5 rm=3      spec: 0x0F 0x00 mod/reg/rm /5 mod!=3 */
                    case 0x6C: /* 0Fh 00h 6Ch VERWd w(r/m) mod=1 reg=5 rm=4      spec: 0x0F 0x00 mod/reg/rm /5 mod!=3 */
                    case 0x6D: /* 0Fh 00h 6Dh VERWd w(r/m) mod=1 reg=5 rm=5      spec: 0x0F 0x00 mod/reg/rm /5 mod!=3 */
                    case 0x6E: /* 0Fh 00h 6Eh VERWd w(r/m) mod=1 reg=5 rm=6      spec: 0x0F 0x00 mod/reg/rm /5 mod!=3 */
                    case 0x6F: /* 0Fh 00h 6Fh VERWd w(r/m) mod=1 reg=5 rm=7      spec: 0x0F 0x00 mod/reg/rm /5 mod!=3 */
                    case 0xA8: /* 0Fh 00h A8h VERWd w(r/m) mod=2 reg=5 rm=0      spec: 0x0F 0x00 mod/reg/rm /5 mod!=3 */
                    case 0xA9: /* 0Fh 00h A9h VERWd w(r/m) mod=2 reg=5 rm=1      spec: 0x0F 0x00 mod/reg/rm /5 mod!=3 */
                    case 0xAA: /* 0Fh 00h AAh VERWd w(r/m) mod=2 reg=5 rm=2      spec: 0x0F 0x00 mod/reg/rm /5 mod!=3 */
                    case 0xAB: /* 0Fh 00h ABh VERWd w(r/m) mod=2 reg=5 rm=3      spec: 0x0F 0x00 mod/reg/rm /5 mod!=3 */
                    case 0xAC: /* 0Fh 00h ACh VERWd w(r/m) mod=2 reg=5 rm=4      spec: 0x0F 0x00 mod/reg/rm /5 mod!=3 */
                    case 0xAD: /* 0Fh 00h ADh VERWd w(r/m) mod=2 reg=5 rm=5      spec: 0x0F 0x00 mod/reg/rm /5 mod!=3 */
                    case 0xAE: /* 0Fh 00h AEh VERWd w(r/m) mod=2 reg=5 rm=6      spec: 0x0F 0x00 mod/reg/rm /5 mod!=3 */
                    case 0xAF: /* 0Fh 00h AFh VERWd w(r/m) mod=2 reg=5 rm=7      spec: 0x0F 0x00 mod/reg/rm /5 mod!=3 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VERWd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                        break;
                    /* opcode 0Fh 00h 30h  not defined */
                    /* opcode 0Fh 00h 31h  not defined */
                    /* opcode 0Fh 00h 32h  not defined */
                    /* opcode 0Fh 00h 33h  not defined */
                    /* opcode 0Fh 00h 34h  not defined */
                    /* opcode 0Fh 00h 35h  not defined */
                    /* opcode 0Fh 00h 36h  not defined */
                    /* opcode 0Fh 00h 37h  not defined */
                    /* opcode 0Fh 00h 38h  not defined */
                    /* opcode 0Fh 00h 39h  not defined */
                    /* opcode 0Fh 00h 3Ah  not defined */
                    /* opcode 0Fh 00h 3Bh  not defined */
                    /* opcode 0Fh 00h 3Ch  not defined */
                    /* opcode 0Fh 00h 3Dh  not defined */
                    /* opcode 0Fh 00h 3Eh  not defined */
                    /* opcode 0Fh 00h 3Fh  not defined */
                    /* opcode 0Fh 00h 70h  not defined */
                    /* opcode 0Fh 00h 71h  not defined */
                    /* opcode 0Fh 00h 72h  not defined */
                    /* opcode 0Fh 00h 73h  not defined */
                    /* opcode 0Fh 00h 74h  not defined */
                    /* opcode 0Fh 00h 75h  not defined */
                    /* opcode 0Fh 00h 76h  not defined */
                    /* opcode 0Fh 00h 77h  not defined */
                    /* opcode 0Fh 00h 78h  not defined */
                    /* opcode 0Fh 00h 79h  not defined */
                    /* opcode 0Fh 00h 7Ah  not defined */
                    /* opcode 0Fh 00h 7Bh  not defined */
                    /* opcode 0Fh 00h 7Ch  not defined */
                    /* opcode 0Fh 00h 7Dh  not defined */
                    /* opcode 0Fh 00h 7Eh  not defined */
                    /* opcode 0Fh 00h 7Fh  not defined */
                    /* opcode 0Fh 00h B0h  not defined */
                    /* opcode 0Fh 00h B1h  not defined */
                    /* opcode 0Fh 00h B2h  not defined */
                    /* opcode 0Fh 00h B3h  not defined */
                    /* opcode 0Fh 00h B4h  not defined */
                    /* opcode 0Fh 00h B5h  not defined */
                    /* opcode 0Fh 00h B6h  not defined */
                    /* opcode 0Fh 00h B7h  not defined */
                    /* opcode 0Fh 00h B8h  not defined */
                    /* opcode 0Fh 00h B9h  not defined */
                    /* opcode 0Fh 00h BAh  not defined */
                    /* opcode 0Fh 00h BBh  not defined */
                    /* opcode 0Fh 00h BCh  not defined */
                    /* opcode 0Fh 00h BDh  not defined */
                    /* opcode 0Fh 00h BEh  not defined */
                    /* opcode 0Fh 00h BFh  not defined */
                    /* opcode 0Fh 00h C0h  not defined */
                    /* opcode 0Fh 00h C1h  not defined */
                    /* opcode 0Fh 00h C2h  not defined */
                    /* opcode 0Fh 00h C3h  not defined */
                    /* opcode 0Fh 00h C4h  not defined */
                    /* opcode 0Fh 00h C5h  not defined */
                    /* opcode 0Fh 00h C6h  not defined */
                    /* opcode 0Fh 00h C7h  not defined */
                    /* opcode 0Fh 00h C8h  not defined */
                    /* opcode 0Fh 00h C9h  not defined */
                    /* opcode 0Fh 00h CAh  not defined */
                    /* opcode 0Fh 00h CBh  not defined */
                    /* opcode 0Fh 00h CCh  not defined */
                    /* opcode 0Fh 00h CDh  not defined */
                    /* opcode 0Fh 00h CEh  not defined */
                    /* opcode 0Fh 00h CFh  not defined */
                    /* opcode 0Fh 00h D0h  not defined */
                    /* opcode 0Fh 00h D1h  not defined */
                    /* opcode 0Fh 00h D2h  not defined */
                    /* opcode 0Fh 00h D3h  not defined */
                    /* opcode 0Fh 00h D4h  not defined */
                    /* opcode 0Fh 00h D5h  not defined */
                    /* opcode 0Fh 00h D6h  not defined */
                    /* opcode 0Fh 00h D7h  not defined */
                    /* opcode 0Fh 00h D8h  not defined */
                    /* opcode 0Fh 00h D9h  not defined */
                    /* opcode 0Fh 00h DAh  not defined */
                    /* opcode 0Fh 00h DBh  not defined */
                    /* opcode 0Fh 00h DCh  not defined */
                    /* opcode 0Fh 00h DDh  not defined */
                    /* opcode 0Fh 00h DEh  not defined */
                    /* opcode 0Fh 00h DFh  not defined */
                    /* opcode 0Fh 00h E0h  not defined */
                    /* opcode 0Fh 00h E1h  not defined */
                    /* opcode 0Fh 00h E2h  not defined */
                    /* opcode 0Fh 00h E3h  not defined */
                    /* opcode 0Fh 00h E4h  not defined */
                    /* opcode 0Fh 00h E5h  not defined */
                    /* opcode 0Fh 00h E6h  not defined */
                    /* opcode 0Fh 00h E7h  not defined */
                    /* opcode 0Fh 00h E8h  not defined */
                    /* opcode 0Fh 00h E9h  not defined */
                    /* opcode 0Fh 00h EAh  not defined */
                    /* opcode 0Fh 00h EBh  not defined */
                    /* opcode 0Fh 00h ECh  not defined */
                    /* opcode 0Fh 00h EDh  not defined */
                    /* opcode 0Fh 00h EEh  not defined */
                    /* opcode 0Fh 00h EFh  not defined */
                    /* opcode 0Fh 00h F0h  not defined */
                    /* opcode 0Fh 00h F1h  not defined */
                    /* opcode 0Fh 00h F2h  not defined */
                    /* opcode 0Fh 00h F3h  not defined */
                    /* opcode 0Fh 00h F4h  not defined */
                    /* opcode 0Fh 00h F5h  not defined */
                    /* opcode 0Fh 00h F6h  not defined */
                    /* opcode 0Fh 00h F7h  not defined */
                    /* opcode 0Fh 00h F8h  not defined */
                    /* opcode 0Fh 00h F9h  not defined */
                    /* opcode 0Fh 00h FAh  not defined */
                    /* opcode 0Fh 00h FBh  not defined */
                    /* opcode 0Fh 00h FCh  not defined */
                    /* opcode 0Fh 00h FDh  not defined */
                    /* opcode 0Fh 00h FEh  not defined */
                    /* opcode 0Fh 00h FFh  not defined */
                    default:
                        goto _x86decode_illegal_opcode;
                };
/* End of opcodes starting with 0Fh 00h */
                break;
            case 0x01: /* 0Fh 01h        spec:  */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                _x86decode_begin_code32_addr32_opcode_parse_0F01:
/* Opcodes starting with 0Fh 01h */
                switch (mrm.byte) {
                    case 0x00: /* 0Fh 01h 00h SGDTd w(r/m) mod=0 reg=0 rm=0      spec: 0x0F 0x01 mod/reg/rm /0 mod!=3 */
                    case 0x01: /* 0Fh 01h 01h SGDTd w(r/m) mod=0 reg=0 rm=1      spec: 0x0F 0x01 mod/reg/rm /0 mod!=3 */
                    case 0x02: /* 0Fh 01h 02h SGDTd w(r/m) mod=0 reg=0 rm=2      spec: 0x0F 0x01 mod/reg/rm /0 mod!=3 */
                    case 0x03: /* 0Fh 01h 03h SGDTd w(r/m) mod=0 reg=0 rm=3      spec: 0x0F 0x01 mod/reg/rm /0 mod!=3 */
                    case 0x04: /* 0Fh 01h 04h SGDTd w(r/m) mod=0 reg=0 rm=4      spec: 0x0F 0x01 mod/reg/rm /0 mod!=3 */
                    case 0x05: /* 0Fh 01h 05h SGDTd w(r/m) mod=0 reg=0 rm=5      spec: 0x0F 0x01 mod/reg/rm /0 mod!=3 */
                    case 0x06: /* 0Fh 01h 06h SGDTd w(r/m) mod=0 reg=0 rm=6      spec: 0x0F 0x01 mod/reg/rm /0 mod!=3 */
                    case 0x07: /* 0Fh 01h 07h SGDTd w(r/m) mod=0 reg=0 rm=7      spec: 0x0F 0x01 mod/reg/rm /0 mod!=3 */
                    case 0x40: /* 0Fh 01h 40h SGDTd w(r/m) mod=1 reg=0 rm=0      spec: 0x0F 0x01 mod/reg/rm /0 mod!=3 */
                    case 0x41: /* 0Fh 01h 41h SGDTd w(r/m) mod=1 reg=0 rm=1      spec: 0x0F 0x01 mod/reg/rm /0 mod!=3 */
                    case 0x42: /* 0Fh 01h 42h SGDTd w(r/m) mod=1 reg=0 rm=2      spec: 0x0F 0x01 mod/reg/rm /0 mod!=3 */
                    case 0x43: /* 0Fh 01h 43h SGDTd w(r/m) mod=1 reg=0 rm=3      spec: 0x0F 0x01 mod/reg/rm /0 mod!=3 */
                    case 0x44: /* 0Fh 01h 44h SGDTd w(r/m) mod=1 reg=0 rm=4      spec: 0x0F 0x01 mod/reg/rm /0 mod!=3 */
                    case 0x45: /* 0Fh 01h 45h SGDTd w(r/m) mod=1 reg=0 rm=5      spec: 0x0F 0x01 mod/reg/rm /0 mod!=3 */
                    case 0x46: /* 0Fh 01h 46h SGDTd w(r/m) mod=1 reg=0 rm=6      spec: 0x0F 0x01 mod/reg/rm /0 mod!=3 */
                    case 0x47: /* 0Fh 01h 47h SGDTd w(r/m) mod=1 reg=0 rm=7      spec: 0x0F 0x01 mod/reg/rm /0 mod!=3 */
                    case 0x80: /* 0Fh 01h 80h SGDTd w(r/m) mod=2 reg=0 rm=0      spec: 0x0F 0x01 mod/reg/rm /0 mod!=3 */
                    case 0x81: /* 0Fh 01h 81h SGDTd w(r/m) mod=2 reg=0 rm=1      spec: 0x0F 0x01 mod/reg/rm /0 mod!=3 */
                    case 0x82: /* 0Fh 01h 82h SGDTd w(r/m) mod=2 reg=0 rm=2      spec: 0x0F 0x01 mod/reg/rm /0 mod!=3 */
                    case 0x83: /* 0Fh 01h 83h SGDTd w(r/m) mod=2 reg=0 rm=3      spec: 0x0F 0x01 mod/reg/rm /0 mod!=3 */
                    case 0x84: /* 0Fh 01h 84h SGDTd w(r/m) mod=2 reg=0 rm=4      spec: 0x0F 0x01 mod/reg/rm /0 mod!=3 */
                    case 0x85: /* 0Fh 01h 85h SGDTd w(r/m) mod=2 reg=0 rm=5      spec: 0x0F 0x01 mod/reg/rm /0 mod!=3 */
                    case 0x86: /* 0Fh 01h 86h SGDTd w(r/m) mod=2 reg=0 rm=6      spec: 0x0F 0x01 mod/reg/rm /0 mod!=3 */
                    case 0x87: /* 0Fh 01h 87h SGDTd w(r/m) mod=2 reg=0 rm=7      spec: 0x0F 0x01 mod/reg/rm /0 mod!=3 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SGDTd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                        break;
                    case 0x08: /* 0Fh 01h 08h SIDTd w(r/m) mod=0 reg=1 rm=0      spec: 0x0F 0x01 mod/reg/rm /1 mod!=3 */
                    case 0x09: /* 0Fh 01h 09h SIDTd w(r/m) mod=0 reg=1 rm=1      spec: 0x0F 0x01 mod/reg/rm /1 mod!=3 */
                    case 0x0A: /* 0Fh 01h 0Ah SIDTd w(r/m) mod=0 reg=1 rm=2      spec: 0x0F 0x01 mod/reg/rm /1 mod!=3 */
                    case 0x0B: /* 0Fh 01h 0Bh SIDTd w(r/m) mod=0 reg=1 rm=3      spec: 0x0F 0x01 mod/reg/rm /1 mod!=3 */
                    case 0x0C: /* 0Fh 01h 0Ch SIDTd w(r/m) mod=0 reg=1 rm=4      spec: 0x0F 0x01 mod/reg/rm /1 mod!=3 */
                    case 0x0D: /* 0Fh 01h 0Dh SIDTd w(r/m) mod=0 reg=1 rm=5      spec: 0x0F 0x01 mod/reg/rm /1 mod!=3 */
                    case 0x0E: /* 0Fh 01h 0Eh SIDTd w(r/m) mod=0 reg=1 rm=6      spec: 0x0F 0x01 mod/reg/rm /1 mod!=3 */
                    case 0x0F: /* 0Fh 01h 0Fh SIDTd w(r/m) mod=0 reg=1 rm=7      spec: 0x0F 0x01 mod/reg/rm /1 mod!=3 */
                    case 0x48: /* 0Fh 01h 48h SIDTd w(r/m) mod=1 reg=1 rm=0      spec: 0x0F 0x01 mod/reg/rm /1 mod!=3 */
                    case 0x49: /* 0Fh 01h 49h SIDTd w(r/m) mod=1 reg=1 rm=1      spec: 0x0F 0x01 mod/reg/rm /1 mod!=3 */
                    case 0x4A: /* 0Fh 01h 4Ah SIDTd w(r/m) mod=1 reg=1 rm=2      spec: 0x0F 0x01 mod/reg/rm /1 mod!=3 */
                    case 0x4B: /* 0Fh 01h 4Bh SIDTd w(r/m) mod=1 reg=1 rm=3      spec: 0x0F 0x01 mod/reg/rm /1 mod!=3 */
                    case 0x4C: /* 0Fh 01h 4Ch SIDTd w(r/m) mod=1 reg=1 rm=4      spec: 0x0F 0x01 mod/reg/rm /1 mod!=3 */
                    case 0x4D: /* 0Fh 01h 4Dh SIDTd w(r/m) mod=1 reg=1 rm=5      spec: 0x0F 0x01 mod/reg/rm /1 mod!=3 */
                    case 0x4E: /* 0Fh 01h 4Eh SIDTd w(r/m) mod=1 reg=1 rm=6      spec: 0x0F 0x01 mod/reg/rm /1 mod!=3 */
                    case 0x4F: /* 0Fh 01h 4Fh SIDTd w(r/m) mod=1 reg=1 rm=7      spec: 0x0F 0x01 mod/reg/rm /1 mod!=3 */
                    case 0x88: /* 0Fh 01h 88h SIDTd w(r/m) mod=2 reg=1 rm=0      spec: 0x0F 0x01 mod/reg/rm /1 mod!=3 */
                    case 0x89: /* 0Fh 01h 89h SIDTd w(r/m) mod=2 reg=1 rm=1      spec: 0x0F 0x01 mod/reg/rm /1 mod!=3 */
                    case 0x8A: /* 0Fh 01h 8Ah SIDTd w(r/m) mod=2 reg=1 rm=2      spec: 0x0F 0x01 mod/reg/rm /1 mod!=3 */
                    case 0x8B: /* 0Fh 01h 8Bh SIDTd w(r/m) mod=2 reg=1 rm=3      spec: 0x0F 0x01 mod/reg/rm /1 mod!=3 */
                    case 0x8C: /* 0Fh 01h 8Ch SIDTd w(r/m) mod=2 reg=1 rm=4      spec: 0x0F 0x01 mod/reg/rm /1 mod!=3 */
                    case 0x8D: /* 0Fh 01h 8Dh SIDTd w(r/m) mod=2 reg=1 rm=5      spec: 0x0F 0x01 mod/reg/rm /1 mod!=3 */
                    case 0x8E: /* 0Fh 01h 8Eh SIDTd w(r/m) mod=2 reg=1 rm=6      spec: 0x0F 0x01 mod/reg/rm /1 mod!=3 */
                    case 0x8F: /* 0Fh 01h 8Fh SIDTd w(r/m) mod=2 reg=1 rm=7      spec: 0x0F 0x01 mod/reg/rm /1 mod!=3 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SIDTd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                        break;
                    case 0x10: /* 0Fh 01h 10h LGDTd w(r/m) mod=0 reg=2 rm=0      spec: 0x0F 0x01 mod/reg/rm /2 mod!=3 */
                    case 0x11: /* 0Fh 01h 11h LGDTd w(r/m) mod=0 reg=2 rm=1      spec: 0x0F 0x01 mod/reg/rm /2 mod!=3 */
                    case 0x12: /* 0Fh 01h 12h LGDTd w(r/m) mod=0 reg=2 rm=2      spec: 0x0F 0x01 mod/reg/rm /2 mod!=3 */
                    case 0x13: /* 0Fh 01h 13h LGDTd w(r/m) mod=0 reg=2 rm=3      spec: 0x0F 0x01 mod/reg/rm /2 mod!=3 */
                    case 0x14: /* 0Fh 01h 14h LGDTd w(r/m) mod=0 reg=2 rm=4      spec: 0x0F 0x01 mod/reg/rm /2 mod!=3 */
                    case 0x15: /* 0Fh 01h 15h LGDTd w(r/m) mod=0 reg=2 rm=5      spec: 0x0F 0x01 mod/reg/rm /2 mod!=3 */
                    case 0x16: /* 0Fh 01h 16h LGDTd w(r/m) mod=0 reg=2 rm=6      spec: 0x0F 0x01 mod/reg/rm /2 mod!=3 */
                    case 0x17: /* 0Fh 01h 17h LGDTd w(r/m) mod=0 reg=2 rm=7      spec: 0x0F 0x01 mod/reg/rm /2 mod!=3 */
                    case 0x50: /* 0Fh 01h 50h LGDTd w(r/m) mod=1 reg=2 rm=0      spec: 0x0F 0x01 mod/reg/rm /2 mod!=3 */
                    case 0x51: /* 0Fh 01h 51h LGDTd w(r/m) mod=1 reg=2 rm=1      spec: 0x0F 0x01 mod/reg/rm /2 mod!=3 */
                    case 0x52: /* 0Fh 01h 52h LGDTd w(r/m) mod=1 reg=2 rm=2      spec: 0x0F 0x01 mod/reg/rm /2 mod!=3 */
                    case 0x53: /* 0Fh 01h 53h LGDTd w(r/m) mod=1 reg=2 rm=3      spec: 0x0F 0x01 mod/reg/rm /2 mod!=3 */
                    case 0x54: /* 0Fh 01h 54h LGDTd w(r/m) mod=1 reg=2 rm=4      spec: 0x0F 0x01 mod/reg/rm /2 mod!=3 */
                    case 0x55: /* 0Fh 01h 55h LGDTd w(r/m) mod=1 reg=2 rm=5      spec: 0x0F 0x01 mod/reg/rm /2 mod!=3 */
                    case 0x56: /* 0Fh 01h 56h LGDTd w(r/m) mod=1 reg=2 rm=6      spec: 0x0F 0x01 mod/reg/rm /2 mod!=3 */
                    case 0x57: /* 0Fh 01h 57h LGDTd w(r/m) mod=1 reg=2 rm=7      spec: 0x0F 0x01 mod/reg/rm /2 mod!=3 */
                    case 0x90: /* 0Fh 01h 90h LGDTd w(r/m) mod=2 reg=2 rm=0      spec: 0x0F 0x01 mod/reg/rm /2 mod!=3 */
                    case 0x91: /* 0Fh 01h 91h LGDTd w(r/m) mod=2 reg=2 rm=1      spec: 0x0F 0x01 mod/reg/rm /2 mod!=3 */
                    case 0x92: /* 0Fh 01h 92h LGDTd w(r/m) mod=2 reg=2 rm=2      spec: 0x0F 0x01 mod/reg/rm /2 mod!=3 */
                    case 0x93: /* 0Fh 01h 93h LGDTd w(r/m) mod=2 reg=2 rm=3      spec: 0x0F 0x01 mod/reg/rm /2 mod!=3 */
                    case 0x94: /* 0Fh 01h 94h LGDTd w(r/m) mod=2 reg=2 rm=4      spec: 0x0F 0x01 mod/reg/rm /2 mod!=3 */
                    case 0x95: /* 0Fh 01h 95h LGDTd w(r/m) mod=2 reg=2 rm=5      spec: 0x0F 0x01 mod/reg/rm /2 mod!=3 */
                    case 0x96: /* 0Fh 01h 96h LGDTd w(r/m) mod=2 reg=2 rm=6      spec: 0x0F 0x01 mod/reg/rm /2 mod!=3 */
                    case 0x97: /* 0Fh 01h 97h LGDTd w(r/m) mod=2 reg=2 rm=7      spec: 0x0F 0x01 mod/reg/rm /2 mod!=3 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"LGDTd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                        break;
                    case 0x18: /* 0Fh 01h 18h LIDTd w(r/m) mod=0 reg=3 rm=0      spec: 0x0F 0x01 mod/reg/rm /3 mod!=3 */
                    case 0x19: /* 0Fh 01h 19h LIDTd w(r/m) mod=0 reg=3 rm=1      spec: 0x0F 0x01 mod/reg/rm /3 mod!=3 */
                    case 0x1A: /* 0Fh 01h 1Ah LIDTd w(r/m) mod=0 reg=3 rm=2      spec: 0x0F 0x01 mod/reg/rm /3 mod!=3 */
                    case 0x1B: /* 0Fh 01h 1Bh LIDTd w(r/m) mod=0 reg=3 rm=3      spec: 0x0F 0x01 mod/reg/rm /3 mod!=3 */
                    case 0x1C: /* 0Fh 01h 1Ch LIDTd w(r/m) mod=0 reg=3 rm=4      spec: 0x0F 0x01 mod/reg/rm /3 mod!=3 */
                    case 0x1D: /* 0Fh 01h 1Dh LIDTd w(r/m) mod=0 reg=3 rm=5      spec: 0x0F 0x01 mod/reg/rm /3 mod!=3 */
                    case 0x1E: /* 0Fh 01h 1Eh LIDTd w(r/m) mod=0 reg=3 rm=6      spec: 0x0F 0x01 mod/reg/rm /3 mod!=3 */
                    case 0x1F: /* 0Fh 01h 1Fh LIDTd w(r/m) mod=0 reg=3 rm=7      spec: 0x0F 0x01 mod/reg/rm /3 mod!=3 */
                    case 0x58: /* 0Fh 01h 58h LIDTd w(r/m) mod=1 reg=3 rm=0      spec: 0x0F 0x01 mod/reg/rm /3 mod!=3 */
                    case 0x59: /* 0Fh 01h 59h LIDTd w(r/m) mod=1 reg=3 rm=1      spec: 0x0F 0x01 mod/reg/rm /3 mod!=3 */
                    case 0x5A: /* 0Fh 01h 5Ah LIDTd w(r/m) mod=1 reg=3 rm=2      spec: 0x0F 0x01 mod/reg/rm /3 mod!=3 */
                    case 0x5B: /* 0Fh 01h 5Bh LIDTd w(r/m) mod=1 reg=3 rm=3      spec: 0x0F 0x01 mod/reg/rm /3 mod!=3 */
                    case 0x5C: /* 0Fh 01h 5Ch LIDTd w(r/m) mod=1 reg=3 rm=4      spec: 0x0F 0x01 mod/reg/rm /3 mod!=3 */
                    case 0x5D: /* 0Fh 01h 5Dh LIDTd w(r/m) mod=1 reg=3 rm=5      spec: 0x0F 0x01 mod/reg/rm /3 mod!=3 */
                    case 0x5E: /* 0Fh 01h 5Eh LIDTd w(r/m) mod=1 reg=3 rm=6      spec: 0x0F 0x01 mod/reg/rm /3 mod!=3 */
                    case 0x5F: /* 0Fh 01h 5Fh LIDTd w(r/m) mod=1 reg=3 rm=7      spec: 0x0F 0x01 mod/reg/rm /3 mod!=3 */
                    case 0x98: /* 0Fh 01h 98h LIDTd w(r/m) mod=2 reg=3 rm=0      spec: 0x0F 0x01 mod/reg/rm /3 mod!=3 */
                    case 0x99: /* 0Fh 01h 99h LIDTd w(r/m) mod=2 reg=3 rm=1      spec: 0x0F 0x01 mod/reg/rm /3 mod!=3 */
                    case 0x9A: /* 0Fh 01h 9Ah LIDTd w(r/m) mod=2 reg=3 rm=2      spec: 0x0F 0x01 mod/reg/rm /3 mod!=3 */
                    case 0x9B: /* 0Fh 01h 9Bh LIDTd w(r/m) mod=2 reg=3 rm=3      spec: 0x0F 0x01 mod/reg/rm /3 mod!=3 */
                    case 0x9C: /* 0Fh 01h 9Ch LIDTd w(r/m) mod=2 reg=3 rm=4      spec: 0x0F 0x01 mod/reg/rm /3 mod!=3 */
                    case 0x9D: /* 0Fh 01h 9Dh LIDTd w(r/m) mod=2 reg=3 rm=5      spec: 0x0F 0x01 mod/reg/rm /3 mod!=3 */
                    case 0x9E: /* 0Fh 01h 9Eh LIDTd w(r/m) mod=2 reg=3 rm=6      spec: 0x0F 0x01 mod/reg/rm /3 mod!=3 */
                    case 0x9F: /* 0Fh 01h 9Fh LIDTd w(r/m) mod=2 reg=3 rm=7      spec: 0x0F 0x01 mod/reg/rm /3 mod!=3 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"LIDTd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                        break;
                    case 0x20: /* 0Fh 01h 20h SMSWd w(r/m) mod=0 reg=4 rm=0      spec: 0x0F 0x01 mod/reg/rm /4 mod!=3 */
                    case 0x21: /* 0Fh 01h 21h SMSWd w(r/m) mod=0 reg=4 rm=1      spec: 0x0F 0x01 mod/reg/rm /4 mod!=3 */
                    case 0x22: /* 0Fh 01h 22h SMSWd w(r/m) mod=0 reg=4 rm=2      spec: 0x0F 0x01 mod/reg/rm /4 mod!=3 */
                    case 0x23: /* 0Fh 01h 23h SMSWd w(r/m) mod=0 reg=4 rm=3      spec: 0x0F 0x01 mod/reg/rm /4 mod!=3 */
                    case 0x24: /* 0Fh 01h 24h SMSWd w(r/m) mod=0 reg=4 rm=4      spec: 0x0F 0x01 mod/reg/rm /4 mod!=3 */
                    case 0x25: /* 0Fh 01h 25h SMSWd w(r/m) mod=0 reg=4 rm=5      spec: 0x0F 0x01 mod/reg/rm /4 mod!=3 */
                    case 0x26: /* 0Fh 01h 26h SMSWd w(r/m) mod=0 reg=4 rm=6      spec: 0x0F 0x01 mod/reg/rm /4 mod!=3 */
                    case 0x27: /* 0Fh 01h 27h SMSWd w(r/m) mod=0 reg=4 rm=7      spec: 0x0F 0x01 mod/reg/rm /4 mod!=3 */
                    case 0x60: /* 0Fh 01h 60h SMSWd w(r/m) mod=1 reg=4 rm=0      spec: 0x0F 0x01 mod/reg/rm /4 mod!=3 */
                    case 0x61: /* 0Fh 01h 61h SMSWd w(r/m) mod=1 reg=4 rm=1      spec: 0x0F 0x01 mod/reg/rm /4 mod!=3 */
                    case 0x62: /* 0Fh 01h 62h SMSWd w(r/m) mod=1 reg=4 rm=2      spec: 0x0F 0x01 mod/reg/rm /4 mod!=3 */
                    case 0x63: /* 0Fh 01h 63h SMSWd w(r/m) mod=1 reg=4 rm=3      spec: 0x0F 0x01 mod/reg/rm /4 mod!=3 */
                    case 0x64: /* 0Fh 01h 64h SMSWd w(r/m) mod=1 reg=4 rm=4      spec: 0x0F 0x01 mod/reg/rm /4 mod!=3 */
                    case 0x65: /* 0Fh 01h 65h SMSWd w(r/m) mod=1 reg=4 rm=5      spec: 0x0F 0x01 mod/reg/rm /4 mod!=3 */
                    case 0x66: /* 0Fh 01h 66h SMSWd w(r/m) mod=1 reg=4 rm=6      spec: 0x0F 0x01 mod/reg/rm /4 mod!=3 */
                    case 0x67: /* 0Fh 01h 67h SMSWd w(r/m) mod=1 reg=4 rm=7      spec: 0x0F 0x01 mod/reg/rm /4 mod!=3 */
                    case 0xA0: /* 0Fh 01h A0h SMSWd w(r/m) mod=2 reg=4 rm=0      spec: 0x0F 0x01 mod/reg/rm /4 mod!=3 */
                    case 0xA1: /* 0Fh 01h A1h SMSWd w(r/m) mod=2 reg=4 rm=1      spec: 0x0F 0x01 mod/reg/rm /4 mod!=3 */
                    case 0xA2: /* 0Fh 01h A2h SMSWd w(r/m) mod=2 reg=4 rm=2      spec: 0x0F 0x01 mod/reg/rm /4 mod!=3 */
                    case 0xA3: /* 0Fh 01h A3h SMSWd w(r/m) mod=2 reg=4 rm=3      spec: 0x0F 0x01 mod/reg/rm /4 mod!=3 */
                    case 0xA4: /* 0Fh 01h A4h SMSWd w(r/m) mod=2 reg=4 rm=4      spec: 0x0F 0x01 mod/reg/rm /4 mod!=3 */
                    case 0xA5: /* 0Fh 01h A5h SMSWd w(r/m) mod=2 reg=4 rm=5      spec: 0x0F 0x01 mod/reg/rm /4 mod!=3 */
                    case 0xA6: /* 0Fh 01h A6h SMSWd w(r/m) mod=2 reg=4 rm=6      spec: 0x0F 0x01 mod/reg/rm /4 mod!=3 */
                    case 0xA7: /* 0Fh 01h A7h SMSWd w(r/m) mod=2 reg=4 rm=7      spec: 0x0F 0x01 mod/reg/rm /4 mod!=3 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SMSWd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                        break;
                    /* opcode 0Fh 01h 28h  not defined */
                    /* opcode 0Fh 01h 29h  not defined */
                    /* opcode 0Fh 01h 2Ah  not defined */
                    /* opcode 0Fh 01h 2Bh  not defined */
                    /* opcode 0Fh 01h 2Ch  not defined */
                    /* opcode 0Fh 01h 2Dh  not defined */
                    /* opcode 0Fh 01h 2Eh  not defined */
                    /* opcode 0Fh 01h 2Fh  not defined */
                    case 0x30: /* 0Fh 01h 30h LMSWd w(r/m) mod=0 reg=6 rm=0      spec: 0x0F 0x01 mod/reg/rm /6 mod!=3 */
                    case 0x31: /* 0Fh 01h 31h LMSWd w(r/m) mod=0 reg=6 rm=1      spec: 0x0F 0x01 mod/reg/rm /6 mod!=3 */
                    case 0x32: /* 0Fh 01h 32h LMSWd w(r/m) mod=0 reg=6 rm=2      spec: 0x0F 0x01 mod/reg/rm /6 mod!=3 */
                    case 0x33: /* 0Fh 01h 33h LMSWd w(r/m) mod=0 reg=6 rm=3      spec: 0x0F 0x01 mod/reg/rm /6 mod!=3 */
                    case 0x34: /* 0Fh 01h 34h LMSWd w(r/m) mod=0 reg=6 rm=4      spec: 0x0F 0x01 mod/reg/rm /6 mod!=3 */
                    case 0x35: /* 0Fh 01h 35h LMSWd w(r/m) mod=0 reg=6 rm=5      spec: 0x0F 0x01 mod/reg/rm /6 mod!=3 */
                    case 0x36: /* 0Fh 01h 36h LMSWd w(r/m) mod=0 reg=6 rm=6      spec: 0x0F 0x01 mod/reg/rm /6 mod!=3 */
                    case 0x37: /* 0Fh 01h 37h LMSWd w(r/m) mod=0 reg=6 rm=7      spec: 0x0F 0x01 mod/reg/rm /6 mod!=3 */
                    case 0x70: /* 0Fh 01h 70h LMSWd w(r/m) mod=1 reg=6 rm=0      spec: 0x0F 0x01 mod/reg/rm /6 mod!=3 */
                    case 0x71: /* 0Fh 01h 71h LMSWd w(r/m) mod=1 reg=6 rm=1      spec: 0x0F 0x01 mod/reg/rm /6 mod!=3 */
                    case 0x72: /* 0Fh 01h 72h LMSWd w(r/m) mod=1 reg=6 rm=2      spec: 0x0F 0x01 mod/reg/rm /6 mod!=3 */
                    case 0x73: /* 0Fh 01h 73h LMSWd w(r/m) mod=1 reg=6 rm=3      spec: 0x0F 0x01 mod/reg/rm /6 mod!=3 */
                    case 0x74: /* 0Fh 01h 74h LMSWd w(r/m) mod=1 reg=6 rm=4      spec: 0x0F 0x01 mod/reg/rm /6 mod!=3 */
                    case 0x75: /* 0Fh 01h 75h LMSWd w(r/m) mod=1 reg=6 rm=5      spec: 0x0F 0x01 mod/reg/rm /6 mod!=3 */
                    case 0x76: /* 0Fh 01h 76h LMSWd w(r/m) mod=1 reg=6 rm=6      spec: 0x0F 0x01 mod/reg/rm /6 mod!=3 */
                    case 0x77: /* 0Fh 01h 77h LMSWd w(r/m) mod=1 reg=6 rm=7      spec: 0x0F 0x01 mod/reg/rm /6 mod!=3 */
                    case 0xB0: /* 0Fh 01h B0h LMSWd w(r/m) mod=2 reg=6 rm=0      spec: 0x0F 0x01 mod/reg/rm /6 mod!=3 */
                    case 0xB1: /* 0Fh 01h B1h LMSWd w(r/m) mod=2 reg=6 rm=1      spec: 0x0F 0x01 mod/reg/rm /6 mod!=3 */
                    case 0xB2: /* 0Fh 01h B2h LMSWd w(r/m) mod=2 reg=6 rm=2      spec: 0x0F 0x01 mod/reg/rm /6 mod!=3 */
                    case 0xB3: /* 0Fh 01h B3h LMSWd w(r/m) mod=2 reg=6 rm=3      spec: 0x0F 0x01 mod/reg/rm /6 mod!=3 */
                    case 0xB4: /* 0Fh 01h B4h LMSWd w(r/m) mod=2 reg=6 rm=4      spec: 0x0F 0x01 mod/reg/rm /6 mod!=3 */
                    case 0xB5: /* 0Fh 01h B5h LMSWd w(r/m) mod=2 reg=6 rm=5      spec: 0x0F 0x01 mod/reg/rm /6 mod!=3 */
                    case 0xB6: /* 0Fh 01h B6h LMSWd w(r/m) mod=2 reg=6 rm=6      spec: 0x0F 0x01 mod/reg/rm /6 mod!=3 */
                    case 0xB7: /* 0Fh 01h B7h LMSWd w(r/m) mod=2 reg=6 rm=7      spec: 0x0F 0x01 mod/reg/rm /6 mod!=3 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"LMSWd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                        break;
                    case 0x38: /* 0Fh 01h 38h INVLPG b(r/m) mod=0 reg=7 rm=0      spec: 0x0F 0x01 mod/reg/rm mod!=3 /7 */
                    case 0x39: /* 0Fh 01h 39h INVLPG b(r/m) mod=0 reg=7 rm=1      spec: 0x0F 0x01 mod/reg/rm mod!=3 /7 */
                    case 0x3A: /* 0Fh 01h 3Ah INVLPG b(r/m) mod=0 reg=7 rm=2      spec: 0x0F 0x01 mod/reg/rm mod!=3 /7 */
                    case 0x3B: /* 0Fh 01h 3Bh INVLPG b(r/m) mod=0 reg=7 rm=3      spec: 0x0F 0x01 mod/reg/rm mod!=3 /7 */
                    case 0x3C: /* 0Fh 01h 3Ch INVLPG b(r/m) mod=0 reg=7 rm=4      spec: 0x0F 0x01 mod/reg/rm mod!=3 /7 */
                    case 0x3D: /* 0Fh 01h 3Dh INVLPG b(r/m) mod=0 reg=7 rm=5      spec: 0x0F 0x01 mod/reg/rm mod!=3 /7 */
                    case 0x3E: /* 0Fh 01h 3Eh INVLPG b(r/m) mod=0 reg=7 rm=6      spec: 0x0F 0x01 mod/reg/rm mod!=3 /7 */
                    case 0x3F: /* 0Fh 01h 3Fh INVLPG b(r/m) mod=0 reg=7 rm=7      spec: 0x0F 0x01 mod/reg/rm mod!=3 /7 */
                    case 0x78: /* 0Fh 01h 78h INVLPG b(r/m) mod=1 reg=7 rm=0      spec: 0x0F 0x01 mod/reg/rm mod!=3 /7 */
                    case 0x79: /* 0Fh 01h 79h INVLPG b(r/m) mod=1 reg=7 rm=1      spec: 0x0F 0x01 mod/reg/rm mod!=3 /7 */
                    case 0x7A: /* 0Fh 01h 7Ah INVLPG b(r/m) mod=1 reg=7 rm=2      spec: 0x0F 0x01 mod/reg/rm mod!=3 /7 */
                    case 0x7B: /* 0Fh 01h 7Bh INVLPG b(r/m) mod=1 reg=7 rm=3      spec: 0x0F 0x01 mod/reg/rm mod!=3 /7 */
                    case 0x7C: /* 0Fh 01h 7Ch INVLPG b(r/m) mod=1 reg=7 rm=4      spec: 0x0F 0x01 mod/reg/rm mod!=3 /7 */
                    case 0x7D: /* 0Fh 01h 7Dh INVLPG b(r/m) mod=1 reg=7 rm=5      spec: 0x0F 0x01 mod/reg/rm mod!=3 /7 */
                    case 0x7E: /* 0Fh 01h 7Eh INVLPG b(r/m) mod=1 reg=7 rm=6      spec: 0x0F 0x01 mod/reg/rm mod!=3 /7 */
                    case 0x7F: /* 0Fh 01h 7Fh INVLPG b(r/m) mod=1 reg=7 rm=7      spec: 0x0F 0x01 mod/reg/rm mod!=3 /7 */
                    case 0xB8: /* 0Fh 01h B8h INVLPG b(r/m) mod=2 reg=7 rm=0      spec: 0x0F 0x01 mod/reg/rm mod!=3 /7 */
                    case 0xB9: /* 0Fh 01h B9h INVLPG b(r/m) mod=2 reg=7 rm=1      spec: 0x0F 0x01 mod/reg/rm mod!=3 /7 */
                    case 0xBA: /* 0Fh 01h BAh INVLPG b(r/m) mod=2 reg=7 rm=2      spec: 0x0F 0x01 mod/reg/rm mod!=3 /7 */
                    case 0xBB: /* 0Fh 01h BBh INVLPG b(r/m) mod=2 reg=7 rm=3      spec: 0x0F 0x01 mod/reg/rm mod!=3 /7 */
                    case 0xBC: /* 0Fh 01h BCh INVLPG b(r/m) mod=2 reg=7 rm=4      spec: 0x0F 0x01 mod/reg/rm mod!=3 /7 */
                    case 0xBD: /* 0Fh 01h BDh INVLPG b(r/m) mod=2 reg=7 rm=5      spec: 0x0F 0x01 mod/reg/rm mod!=3 /7 */
                    case 0xBE: /* 0Fh 01h BEh INVLPG b(r/m) mod=2 reg=7 rm=6      spec: 0x0F 0x01 mod/reg/rm mod!=3 /7 */
                    case 0xBF: /* 0Fh 01h BFh INVLPG b(r/m) mod=2 reg=7 rm=7      spec: 0x0F 0x01 mod/reg/rm mod!=3 /7 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"INVLPG %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                        break;
                    /* opcode 0Fh 01h 68h  not defined */
                    /* opcode 0Fh 01h 69h  not defined */
                    /* opcode 0Fh 01h 6Ah  not defined */
                    /* opcode 0Fh 01h 6Bh  not defined */
                    /* opcode 0Fh 01h 6Ch  not defined */
                    /* opcode 0Fh 01h 6Dh  not defined */
                    /* opcode 0Fh 01h 6Eh  not defined */
                    /* opcode 0Fh 01h 6Fh  not defined */
                    /* opcode 0Fh 01h A8h  not defined */
                    /* opcode 0Fh 01h A9h  not defined */
                    /* opcode 0Fh 01h AAh  not defined */
                    /* opcode 0Fh 01h ABh  not defined */
                    /* opcode 0Fh 01h ACh  not defined */
                    /* opcode 0Fh 01h ADh  not defined */
                    /* opcode 0Fh 01h AEh  not defined */
                    /* opcode 0Fh 01h AFh  not defined */
                    /* opcode 0Fh 01h C0h  not defined */
                    case 0xC1: /* 0Fh 01h C1h VMCALL  mod=3 reg=0 rm=1      spec: 0x0F 0x01 0xC1 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VMCALL");
                        break;
                    case 0xC2: /* 0Fh 01h C2h VMLAUNCH  mod=3 reg=0 rm=2      spec: 0x0F 0x01 0xC2 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VMLAUNCH");
                        break;
                    case 0xC3: /* 0Fh 01h C3h VMRESUME  mod=3 reg=0 rm=3      spec: 0x0F 0x01 0xC3 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VMRESUME");
                        break;
                    case 0xC4: /* 0Fh 01h C4h VMXOFF  mod=3 reg=0 rm=4      spec: 0x0F 0x01 0xC4 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VMXOFF");
                        break;
                    /* opcode 0Fh 01h C5h  not defined */
                    /* opcode 0Fh 01h C6h  not defined */
                    /* opcode 0Fh 01h C7h  not defined */
                    case 0xC8: /* 0Fh 01h C8h MONITOR  mod=3 reg=1 rm=0      spec: 0x0F 0x01 0xC8 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MONITOR");
                        break;
                    case 0xC9: /* 0Fh 01h C9h MWAIT  mod=3 reg=1 rm=1      spec: 0x0F 0x01 0xC9 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MWAIT");
                        break;
                    /* opcode 0Fh 01h CAh  not defined */
                    /* opcode 0Fh 01h CBh  not defined */
                    /* opcode 0Fh 01h CCh  not defined */
                    /* opcode 0Fh 01h CDh  not defined */
                    /* opcode 0Fh 01h CEh  not defined */
                    /* opcode 0Fh 01h CFh  not defined */
                    case 0xD0: /* 0Fh 01h D0h XGETBV  mod=3 reg=2 rm=0      spec: 0x0F 0x01 0xD0 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"XGETBV");
                        break;
                    case 0xD1: /* 0Fh 01h D1h XSETBV  mod=3 reg=2 rm=1      spec: 0x0F 0x01 0xD1 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"XSETBV");
                        break;
                    /* opcode 0Fh 01h D2h  not defined */
                    /* opcode 0Fh 01h D3h  not defined */
                    /* opcode 0Fh 01h D4h  not defined */
                    /* opcode 0Fh 01h D5h  not defined */
                    /* opcode 0Fh 01h D6h  not defined */
                    /* opcode 0Fh 01h D7h  not defined */
                    /* opcode 0Fh 01h D8h  not defined */
                    /* opcode 0Fh 01h D9h  not defined */
                    /* opcode 0Fh 01h DAh  not defined */
                    /* opcode 0Fh 01h DBh  not defined */
                    /* opcode 0Fh 01h DCh  not defined */
                    /* opcode 0Fh 01h DDh  not defined */
                    /* opcode 0Fh 01h DEh  not defined */
                    /* opcode 0Fh 01h DFh  not defined */
                    /* opcode 0Fh 01h E0h  not defined */
                    /* opcode 0Fh 01h E1h  not defined */
                    /* opcode 0Fh 01h E2h  not defined */
                    /* opcode 0Fh 01h E3h  not defined */
                    /* opcode 0Fh 01h E4h  not defined */
                    /* opcode 0Fh 01h E5h  not defined */
                    /* opcode 0Fh 01h E6h  not defined */
                    /* opcode 0Fh 01h E7h  not defined */
                    /* opcode 0Fh 01h E8h  not defined */
                    /* opcode 0Fh 01h E9h  not defined */
                    /* opcode 0Fh 01h EAh  not defined */
                    /* opcode 0Fh 01h EBh  not defined */
                    /* opcode 0Fh 01h ECh  not defined */
                    /* opcode 0Fh 01h EDh  not defined */
                    /* opcode 0Fh 01h EEh  not defined */
                    /* opcode 0Fh 01h EFh  not defined */
                    /* opcode 0Fh 01h F0h  not defined */
                    /* opcode 0Fh 01h F1h  not defined */
                    /* opcode 0Fh 01h F2h  not defined */
                    /* opcode 0Fh 01h F3h  not defined */
                    /* opcode 0Fh 01h F4h  not defined */
                    /* opcode 0Fh 01h F5h  not defined */
                    /* opcode 0Fh 01h F6h  not defined */
                    /* opcode 0Fh 01h F7h  not defined */
                    /* opcode 0Fh 01h F8h  not defined */
                    /* opcode 0Fh 01h F9h  not defined */
                    /* opcode 0Fh 01h FAh  not defined */
                    /* opcode 0Fh 01h FBh  not defined */
                    /* opcode 0Fh 01h FCh  not defined */
                    /* opcode 0Fh 01h FDh  not defined */
                    /* opcode 0Fh 01h FEh  not defined */
                    /* opcode 0Fh 01h FFh  not defined */
                    default:
                        goto _x86decode_illegal_opcode;
                };
/* End of opcodes starting with 0Fh 01h */
                break;
            case 0x02: /* 0Fh 02h LARd w(reg),w(r/m)      spec: 0x0F 0x02 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"LARd %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 0x03: /* 0Fh 03h LSLd w(reg),w(r/m)      spec: 0x0F 0x03 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"LSLd %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            /* opcode 0Fh 04h  not defined */
            /* opcode 0Fh 05h  not defined */
            case 0x06: /* 0Fh 06h CLTSd       spec: 0x0F 0x06 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CLTSd");
                break;
            /* opcode 0Fh 07h  not defined */
            case 0x08: /* 0Fh 08h INVD       spec: 0x0F 0x08 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"INVD");
                break;
            case 0x09: /* 0Fh 09h WBINVD       spec: 0x0F 0x09 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"WBINVD");
                break;
            /* opcode 0Fh 0Ah  not defined */
            case 0x0B: /* 0Fh 0Bh        spec: 0x0F 0x0B */
            case 0xB9: /* 0Fh B9h        spec: 0x0F 0xB9 */
                goto _x86decode_illegal_opcode;
            /* opcode 0Fh 0Ch  not defined */
            case 0x0D: /* 0Fh 0Dh        spec:  */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                _x86decode_begin_code32_addr32_opcode_parse_0F0D:
/* Opcodes starting with 0Fh 0Dh */
                switch (mrm.byte) {
                    case 0x00: /* 0Fh 0Dh 00h PREFETCH b(r/m) mod=0 reg=0 rm=0      spec: 0x0F 0x0D mod/reg/rm mod!=3 /0 */
                    case 0x01: /* 0Fh 0Dh 01h PREFETCH b(r/m) mod=0 reg=0 rm=1      spec: 0x0F 0x0D mod/reg/rm mod!=3 /0 */
                    case 0x02: /* 0Fh 0Dh 02h PREFETCH b(r/m) mod=0 reg=0 rm=2      spec: 0x0F 0x0D mod/reg/rm mod!=3 /0 */
                    case 0x03: /* 0Fh 0Dh 03h PREFETCH b(r/m) mod=0 reg=0 rm=3      spec: 0x0F 0x0D mod/reg/rm mod!=3 /0 */
                    case 0x04: /* 0Fh 0Dh 04h PREFETCH b(r/m) mod=0 reg=0 rm=4      spec: 0x0F 0x0D mod/reg/rm mod!=3 /0 */
                    case 0x05: /* 0Fh 0Dh 05h PREFETCH b(r/m) mod=0 reg=0 rm=5      spec: 0x0F 0x0D mod/reg/rm mod!=3 /0 */
                    case 0x06: /* 0Fh 0Dh 06h PREFETCH b(r/m) mod=0 reg=0 rm=6      spec: 0x0F 0x0D mod/reg/rm mod!=3 /0 */
                    case 0x07: /* 0Fh 0Dh 07h PREFETCH b(r/m) mod=0 reg=0 rm=7      spec: 0x0F 0x0D mod/reg/rm mod!=3 /0 */
                    case 0x40: /* 0Fh 0Dh 40h PREFETCH b(r/m) mod=1 reg=0 rm=0      spec: 0x0F 0x0D mod/reg/rm mod!=3 /0 */
                    case 0x41: /* 0Fh 0Dh 41h PREFETCH b(r/m) mod=1 reg=0 rm=1      spec: 0x0F 0x0D mod/reg/rm mod!=3 /0 */
                    case 0x42: /* 0Fh 0Dh 42h PREFETCH b(r/m) mod=1 reg=0 rm=2      spec: 0x0F 0x0D mod/reg/rm mod!=3 /0 */
                    case 0x43: /* 0Fh 0Dh 43h PREFETCH b(r/m) mod=1 reg=0 rm=3      spec: 0x0F 0x0D mod/reg/rm mod!=3 /0 */
                    case 0x44: /* 0Fh 0Dh 44h PREFETCH b(r/m) mod=1 reg=0 rm=4      spec: 0x0F 0x0D mod/reg/rm mod!=3 /0 */
                    case 0x45: /* 0Fh 0Dh 45h PREFETCH b(r/m) mod=1 reg=0 rm=5      spec: 0x0F 0x0D mod/reg/rm mod!=3 /0 */
                    case 0x46: /* 0Fh 0Dh 46h PREFETCH b(r/m) mod=1 reg=0 rm=6      spec: 0x0F 0x0D mod/reg/rm mod!=3 /0 */
                    case 0x47: /* 0Fh 0Dh 47h PREFETCH b(r/m) mod=1 reg=0 rm=7      spec: 0x0F 0x0D mod/reg/rm mod!=3 /0 */
                    case 0x80: /* 0Fh 0Dh 80h PREFETCH b(r/m) mod=2 reg=0 rm=0      spec: 0x0F 0x0D mod/reg/rm mod!=3 /0 */
                    case 0x81: /* 0Fh 0Dh 81h PREFETCH b(r/m) mod=2 reg=0 rm=1      spec: 0x0F 0x0D mod/reg/rm mod!=3 /0 */
                    case 0x82: /* 0Fh 0Dh 82h PREFETCH b(r/m) mod=2 reg=0 rm=2      spec: 0x0F 0x0D mod/reg/rm mod!=3 /0 */
                    case 0x83: /* 0Fh 0Dh 83h PREFETCH b(r/m) mod=2 reg=0 rm=3      spec: 0x0F 0x0D mod/reg/rm mod!=3 /0 */
                    case 0x84: /* 0Fh 0Dh 84h PREFETCH b(r/m) mod=2 reg=0 rm=4      spec: 0x0F 0x0D mod/reg/rm mod!=3 /0 */
                    case 0x85: /* 0Fh 0Dh 85h PREFETCH b(r/m) mod=2 reg=0 rm=5      spec: 0x0F 0x0D mod/reg/rm mod!=3 /0 */
                    case 0x86: /* 0Fh 0Dh 86h PREFETCH b(r/m) mod=2 reg=0 rm=6      spec: 0x0F 0x0D mod/reg/rm mod!=3 /0 */
                    case 0x87: /* 0Fh 0Dh 87h PREFETCH b(r/m) mod=2 reg=0 rm=7      spec: 0x0F 0x0D mod/reg/rm mod!=3 /0 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PREFETCH %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                        break;
                    case 0x08: /* 0Fh 0Dh 08h PREFETCHW b(r/m) mod=0 reg=1 rm=0      spec: 0x0F 0x0D mod/reg/rm mod!=3 /1 */
                    case 0x09: /* 0Fh 0Dh 09h PREFETCHW b(r/m) mod=0 reg=1 rm=1      spec: 0x0F 0x0D mod/reg/rm mod!=3 /1 */
                    case 0x0A: /* 0Fh 0Dh 0Ah PREFETCHW b(r/m) mod=0 reg=1 rm=2      spec: 0x0F 0x0D mod/reg/rm mod!=3 /1 */
                    case 0x0B: /* 0Fh 0Dh 0Bh PREFETCHW b(r/m) mod=0 reg=1 rm=3      spec: 0x0F 0x0D mod/reg/rm mod!=3 /1 */
                    case 0x0C: /* 0Fh 0Dh 0Ch PREFETCHW b(r/m) mod=0 reg=1 rm=4      spec: 0x0F 0x0D mod/reg/rm mod!=3 /1 */
                    case 0x0D: /* 0Fh 0Dh 0Dh PREFETCHW b(r/m) mod=0 reg=1 rm=5      spec: 0x0F 0x0D mod/reg/rm mod!=3 /1 */
                    case 0x0E: /* 0Fh 0Dh 0Eh PREFETCHW b(r/m) mod=0 reg=1 rm=6      spec: 0x0F 0x0D mod/reg/rm mod!=3 /1 */
                    case 0x0F: /* 0Fh 0Dh 0Fh PREFETCHW b(r/m) mod=0 reg=1 rm=7      spec: 0x0F 0x0D mod/reg/rm mod!=3 /1 */
                    case 0x48: /* 0Fh 0Dh 48h PREFETCHW b(r/m) mod=1 reg=1 rm=0      spec: 0x0F 0x0D mod/reg/rm mod!=3 /1 */
                    case 0x49: /* 0Fh 0Dh 49h PREFETCHW b(r/m) mod=1 reg=1 rm=1      spec: 0x0F 0x0D mod/reg/rm mod!=3 /1 */
                    case 0x4A: /* 0Fh 0Dh 4Ah PREFETCHW b(r/m) mod=1 reg=1 rm=2      spec: 0x0F 0x0D mod/reg/rm mod!=3 /1 */
                    case 0x4B: /* 0Fh 0Dh 4Bh PREFETCHW b(r/m) mod=1 reg=1 rm=3      spec: 0x0F 0x0D mod/reg/rm mod!=3 /1 */
                    case 0x4C: /* 0Fh 0Dh 4Ch PREFETCHW b(r/m) mod=1 reg=1 rm=4      spec: 0x0F 0x0D mod/reg/rm mod!=3 /1 */
                    case 0x4D: /* 0Fh 0Dh 4Dh PREFETCHW b(r/m) mod=1 reg=1 rm=5      spec: 0x0F 0x0D mod/reg/rm mod!=3 /1 */
                    case 0x4E: /* 0Fh 0Dh 4Eh PREFETCHW b(r/m) mod=1 reg=1 rm=6      spec: 0x0F 0x0D mod/reg/rm mod!=3 /1 */
                    case 0x4F: /* 0Fh 0Dh 4Fh PREFETCHW b(r/m) mod=1 reg=1 rm=7      spec: 0x0F 0x0D mod/reg/rm mod!=3 /1 */
                    case 0x88: /* 0Fh 0Dh 88h PREFETCHW b(r/m) mod=2 reg=1 rm=0      spec: 0x0F 0x0D mod/reg/rm mod!=3 /1 */
                    case 0x89: /* 0Fh 0Dh 89h PREFETCHW b(r/m) mod=2 reg=1 rm=1      spec: 0x0F 0x0D mod/reg/rm mod!=3 /1 */
                    case 0x8A: /* 0Fh 0Dh 8Ah PREFETCHW b(r/m) mod=2 reg=1 rm=2      spec: 0x0F 0x0D mod/reg/rm mod!=3 /1 */
                    case 0x8B: /* 0Fh 0Dh 8Bh PREFETCHW b(r/m) mod=2 reg=1 rm=3      spec: 0x0F 0x0D mod/reg/rm mod!=3 /1 */
                    case 0x8C: /* 0Fh 0Dh 8Ch PREFETCHW b(r/m) mod=2 reg=1 rm=4      spec: 0x0F 0x0D mod/reg/rm mod!=3 /1 */
                    case 0x8D: /* 0Fh 0Dh 8Dh PREFETCHW b(r/m) mod=2 reg=1 rm=5      spec: 0x0F 0x0D mod/reg/rm mod!=3 /1 */
                    case 0x8E: /* 0Fh 0Dh 8Eh PREFETCHW b(r/m) mod=2 reg=1 rm=6      spec: 0x0F 0x0D mod/reg/rm mod!=3 /1 */
                    case 0x8F: /* 0Fh 0Dh 8Fh PREFETCHW b(r/m) mod=2 reg=1 rm=7      spec: 0x0F 0x0D mod/reg/rm mod!=3 /1 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PREFETCHW %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                        break;
                    /* opcode 0Fh 0Dh 10h  not defined */
                    /* opcode 0Fh 0Dh 11h  not defined */
                    /* opcode 0Fh 0Dh 12h  not defined */
                    /* opcode 0Fh 0Dh 13h  not defined */
                    /* opcode 0Fh 0Dh 14h  not defined */
                    /* opcode 0Fh 0Dh 15h  not defined */
                    /* opcode 0Fh 0Dh 16h  not defined */
                    /* opcode 0Fh 0Dh 17h  not defined */
                    /* opcode 0Fh 0Dh 18h  not defined */
                    /* opcode 0Fh 0Dh 19h  not defined */
                    /* opcode 0Fh 0Dh 1Ah  not defined */
                    /* opcode 0Fh 0Dh 1Bh  not defined */
                    /* opcode 0Fh 0Dh 1Ch  not defined */
                    /* opcode 0Fh 0Dh 1Dh  not defined */
                    /* opcode 0Fh 0Dh 1Eh  not defined */
                    /* opcode 0Fh 0Dh 1Fh  not defined */
                    /* opcode 0Fh 0Dh 20h  not defined */
                    /* opcode 0Fh 0Dh 21h  not defined */
                    /* opcode 0Fh 0Dh 22h  not defined */
                    /* opcode 0Fh 0Dh 23h  not defined */
                    /* opcode 0Fh 0Dh 24h  not defined */
                    /* opcode 0Fh 0Dh 25h  not defined */
                    /* opcode 0Fh 0Dh 26h  not defined */
                    /* opcode 0Fh 0Dh 27h  not defined */
                    /* opcode 0Fh 0Dh 28h  not defined */
                    /* opcode 0Fh 0Dh 29h  not defined */
                    /* opcode 0Fh 0Dh 2Ah  not defined */
                    /* opcode 0Fh 0Dh 2Bh  not defined */
                    /* opcode 0Fh 0Dh 2Ch  not defined */
                    /* opcode 0Fh 0Dh 2Dh  not defined */
                    /* opcode 0Fh 0Dh 2Eh  not defined */
                    /* opcode 0Fh 0Dh 2Fh  not defined */
                    /* opcode 0Fh 0Dh 30h  not defined */
                    /* opcode 0Fh 0Dh 31h  not defined */
                    /* opcode 0Fh 0Dh 32h  not defined */
                    /* opcode 0Fh 0Dh 33h  not defined */
                    /* opcode 0Fh 0Dh 34h  not defined */
                    /* opcode 0Fh 0Dh 35h  not defined */
                    /* opcode 0Fh 0Dh 36h  not defined */
                    /* opcode 0Fh 0Dh 37h  not defined */
                    /* opcode 0Fh 0Dh 38h  not defined */
                    /* opcode 0Fh 0Dh 39h  not defined */
                    /* opcode 0Fh 0Dh 3Ah  not defined */
                    /* opcode 0Fh 0Dh 3Bh  not defined */
                    /* opcode 0Fh 0Dh 3Ch  not defined */
                    /* opcode 0Fh 0Dh 3Dh  not defined */
                    /* opcode 0Fh 0Dh 3Eh  not defined */
                    /* opcode 0Fh 0Dh 3Fh  not defined */
                    /* opcode 0Fh 0Dh 50h  not defined */
                    /* opcode 0Fh 0Dh 51h  not defined */
                    /* opcode 0Fh 0Dh 52h  not defined */
                    /* opcode 0Fh 0Dh 53h  not defined */
                    /* opcode 0Fh 0Dh 54h  not defined */
                    /* opcode 0Fh 0Dh 55h  not defined */
                    /* opcode 0Fh 0Dh 56h  not defined */
                    /* opcode 0Fh 0Dh 57h  not defined */
                    /* opcode 0Fh 0Dh 58h  not defined */
                    /* opcode 0Fh 0Dh 59h  not defined */
                    /* opcode 0Fh 0Dh 5Ah  not defined */
                    /* opcode 0Fh 0Dh 5Bh  not defined */
                    /* opcode 0Fh 0Dh 5Ch  not defined */
                    /* opcode 0Fh 0Dh 5Dh  not defined */
                    /* opcode 0Fh 0Dh 5Eh  not defined */
                    /* opcode 0Fh 0Dh 5Fh  not defined */
                    /* opcode 0Fh 0Dh 60h  not defined */
                    /* opcode 0Fh 0Dh 61h  not defined */
                    /* opcode 0Fh 0Dh 62h  not defined */
                    /* opcode 0Fh 0Dh 63h  not defined */
                    /* opcode 0Fh 0Dh 64h  not defined */
                    /* opcode 0Fh 0Dh 65h  not defined */
                    /* opcode 0Fh 0Dh 66h  not defined */
                    /* opcode 0Fh 0Dh 67h  not defined */
                    /* opcode 0Fh 0Dh 68h  not defined */
                    /* opcode 0Fh 0Dh 69h  not defined */
                    /* opcode 0Fh 0Dh 6Ah  not defined */
                    /* opcode 0Fh 0Dh 6Bh  not defined */
                    /* opcode 0Fh 0Dh 6Ch  not defined */
                    /* opcode 0Fh 0Dh 6Dh  not defined */
                    /* opcode 0Fh 0Dh 6Eh  not defined */
                    /* opcode 0Fh 0Dh 6Fh  not defined */
                    /* opcode 0Fh 0Dh 70h  not defined */
                    /* opcode 0Fh 0Dh 71h  not defined */
                    /* opcode 0Fh 0Dh 72h  not defined */
                    /* opcode 0Fh 0Dh 73h  not defined */
                    /* opcode 0Fh 0Dh 74h  not defined */
                    /* opcode 0Fh 0Dh 75h  not defined */
                    /* opcode 0Fh 0Dh 76h  not defined */
                    /* opcode 0Fh 0Dh 77h  not defined */
                    /* opcode 0Fh 0Dh 78h  not defined */
                    /* opcode 0Fh 0Dh 79h  not defined */
                    /* opcode 0Fh 0Dh 7Ah  not defined */
                    /* opcode 0Fh 0Dh 7Bh  not defined */
                    /* opcode 0Fh 0Dh 7Ch  not defined */
                    /* opcode 0Fh 0Dh 7Dh  not defined */
                    /* opcode 0Fh 0Dh 7Eh  not defined */
                    /* opcode 0Fh 0Dh 7Fh  not defined */
                    /* opcode 0Fh 0Dh 90h  not defined */
                    /* opcode 0Fh 0Dh 91h  not defined */
                    /* opcode 0Fh 0Dh 92h  not defined */
                    /* opcode 0Fh 0Dh 93h  not defined */
                    /* opcode 0Fh 0Dh 94h  not defined */
                    /* opcode 0Fh 0Dh 95h  not defined */
                    /* opcode 0Fh 0Dh 96h  not defined */
                    /* opcode 0Fh 0Dh 97h  not defined */
                    /* opcode 0Fh 0Dh 98h  not defined */
                    /* opcode 0Fh 0Dh 99h  not defined */
                    /* opcode 0Fh 0Dh 9Ah  not defined */
                    /* opcode 0Fh 0Dh 9Bh  not defined */
                    /* opcode 0Fh 0Dh 9Ch  not defined */
                    /* opcode 0Fh 0Dh 9Dh  not defined */
                    /* opcode 0Fh 0Dh 9Eh  not defined */
                    /* opcode 0Fh 0Dh 9Fh  not defined */
                    /* opcode 0Fh 0Dh A0h  not defined */
                    /* opcode 0Fh 0Dh A1h  not defined */
                    /* opcode 0Fh 0Dh A2h  not defined */
                    /* opcode 0Fh 0Dh A3h  not defined */
                    /* opcode 0Fh 0Dh A4h  not defined */
                    /* opcode 0Fh 0Dh A5h  not defined */
                    /* opcode 0Fh 0Dh A6h  not defined */
                    /* opcode 0Fh 0Dh A7h  not defined */
                    /* opcode 0Fh 0Dh A8h  not defined */
                    /* opcode 0Fh 0Dh A9h  not defined */
                    /* opcode 0Fh 0Dh AAh  not defined */
                    /* opcode 0Fh 0Dh ABh  not defined */
                    /* opcode 0Fh 0Dh ACh  not defined */
                    /* opcode 0Fh 0Dh ADh  not defined */
                    /* opcode 0Fh 0Dh AEh  not defined */
                    /* opcode 0Fh 0Dh AFh  not defined */
                    /* opcode 0Fh 0Dh B0h  not defined */
                    /* opcode 0Fh 0Dh B1h  not defined */
                    /* opcode 0Fh 0Dh B2h  not defined */
                    /* opcode 0Fh 0Dh B3h  not defined */
                    /* opcode 0Fh 0Dh B4h  not defined */
                    /* opcode 0Fh 0Dh B5h  not defined */
                    /* opcode 0Fh 0Dh B6h  not defined */
                    /* opcode 0Fh 0Dh B7h  not defined */
                    /* opcode 0Fh 0Dh B8h  not defined */
                    /* opcode 0Fh 0Dh B9h  not defined */
                    /* opcode 0Fh 0Dh BAh  not defined */
                    /* opcode 0Fh 0Dh BBh  not defined */
                    /* opcode 0Fh 0Dh BCh  not defined */
                    /* opcode 0Fh 0Dh BDh  not defined */
                    /* opcode 0Fh 0Dh BEh  not defined */
                    /* opcode 0Fh 0Dh BFh  not defined */
                    /* opcode 0Fh 0Dh C0h  not defined */
                    /* opcode 0Fh 0Dh C1h  not defined */
                    /* opcode 0Fh 0Dh C2h  not defined */
                    /* opcode 0Fh 0Dh C3h  not defined */
                    /* opcode 0Fh 0Dh C4h  not defined */
                    /* opcode 0Fh 0Dh C5h  not defined */
                    /* opcode 0Fh 0Dh C6h  not defined */
                    /* opcode 0Fh 0Dh C7h  not defined */
                    /* opcode 0Fh 0Dh C8h  not defined */
                    /* opcode 0Fh 0Dh C9h  not defined */
                    /* opcode 0Fh 0Dh CAh  not defined */
                    /* opcode 0Fh 0Dh CBh  not defined */
                    /* opcode 0Fh 0Dh CCh  not defined */
                    /* opcode 0Fh 0Dh CDh  not defined */
                    /* opcode 0Fh 0Dh CEh  not defined */
                    /* opcode 0Fh 0Dh CFh  not defined */
                    /* opcode 0Fh 0Dh D0h  not defined */
                    /* opcode 0Fh 0Dh D1h  not defined */
                    /* opcode 0Fh 0Dh D2h  not defined */
                    /* opcode 0Fh 0Dh D3h  not defined */
                    /* opcode 0Fh 0Dh D4h  not defined */
                    /* opcode 0Fh 0Dh D5h  not defined */
                    /* opcode 0Fh 0Dh D6h  not defined */
                    /* opcode 0Fh 0Dh D7h  not defined */
                    /* opcode 0Fh 0Dh D8h  not defined */
                    /* opcode 0Fh 0Dh D9h  not defined */
                    /* opcode 0Fh 0Dh DAh  not defined */
                    /* opcode 0Fh 0Dh DBh  not defined */
                    /* opcode 0Fh 0Dh DCh  not defined */
                    /* opcode 0Fh 0Dh DDh  not defined */
                    /* opcode 0Fh 0Dh DEh  not defined */
                    /* opcode 0Fh 0Dh DFh  not defined */
                    /* opcode 0Fh 0Dh E0h  not defined */
                    /* opcode 0Fh 0Dh E1h  not defined */
                    /* opcode 0Fh 0Dh E2h  not defined */
                    /* opcode 0Fh 0Dh E3h  not defined */
                    /* opcode 0Fh 0Dh E4h  not defined */
                    /* opcode 0Fh 0Dh E5h  not defined */
                    /* opcode 0Fh 0Dh E6h  not defined */
                    /* opcode 0Fh 0Dh E7h  not defined */
                    /* opcode 0Fh 0Dh E8h  not defined */
                    /* opcode 0Fh 0Dh E9h  not defined */
                    /* opcode 0Fh 0Dh EAh  not defined */
                    /* opcode 0Fh 0Dh EBh  not defined */
                    /* opcode 0Fh 0Dh ECh  not defined */
                    /* opcode 0Fh 0Dh EDh  not defined */
                    /* opcode 0Fh 0Dh EEh  not defined */
                    /* opcode 0Fh 0Dh EFh  not defined */
                    /* opcode 0Fh 0Dh F0h  not defined */
                    /* opcode 0Fh 0Dh F1h  not defined */
                    /* opcode 0Fh 0Dh F2h  not defined */
                    /* opcode 0Fh 0Dh F3h  not defined */
                    /* opcode 0Fh 0Dh F4h  not defined */
                    /* opcode 0Fh 0Dh F5h  not defined */
                    /* opcode 0Fh 0Dh F6h  not defined */
                    /* opcode 0Fh 0Dh F7h  not defined */
                    /* opcode 0Fh 0Dh F8h  not defined */
                    /* opcode 0Fh 0Dh F9h  not defined */
                    /* opcode 0Fh 0Dh FAh  not defined */
                    /* opcode 0Fh 0Dh FBh  not defined */
                    /* opcode 0Fh 0Dh FCh  not defined */
                    /* opcode 0Fh 0Dh FDh  not defined */
                    /* opcode 0Fh 0Dh FEh  not defined */
                    /* opcode 0Fh 0Dh FFh  not defined */
                    default:
                        goto _x86decode_illegal_opcode;
                };
/* End of opcodes starting with 0Fh 0Dh */
                break;
            case 0x0E: /* 0Fh 0Eh FEMMS       spec: 0x0F 0x0E */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FEMMS");
                break;
            case 0x0F: /* 0Fh 0Fh        spec:  */
/* Opcodes starting with 0Fh 0Fh */
                /* AMD 3DNow! encoding 0x0F 0x0F mod/reg/rm <opcode> */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                switch (op=IPFB()) {
                    /* opcode 0Fh 0Fh 00h  not defined */
                    /* opcode 0Fh 0Fh 01h  not defined */
                    /* opcode 0Fh 0Fh 02h  not defined */
                    /* opcode 0Fh 0Fh 03h  not defined */
                    /* opcode 0Fh 0Fh 04h  not defined */
                    /* opcode 0Fh 0Fh 05h  not defined */
                    /* opcode 0Fh 0Fh 06h  not defined */
                    /* opcode 0Fh 0Fh 07h  not defined */
                    /* opcode 0Fh 0Fh 08h  not defined */
                    /* opcode 0Fh 0Fh 09h  not defined */
                    /* opcode 0Fh 0Fh 0Ah  not defined */
                    /* opcode 0Fh 0Fh 0Bh  not defined */
                    case 0x0C: /* 0Fh 0Fh 0Ch PI2FW mmx(reg),mmx(r/m)      spec: 0x0F 0x0F mod/reg/rm amd3dnow(0x0C) */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PI2FW MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                        break;
                    case 0x0D: /* 0Fh 0Fh 0Dh PI2FD mmx(reg),mmx(r/m)      spec: 0x0F 0x0F mod/reg/rm amd3dnow(0x0D) */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PI2FD MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                        break;
                    /* opcode 0Fh 0Fh 0Eh  not defined */
                    /* opcode 0Fh 0Fh 0Fh  not defined */
                    /* opcode 0Fh 0Fh 10h  not defined */
                    /* opcode 0Fh 0Fh 11h  not defined */
                    /* opcode 0Fh 0Fh 12h  not defined */
                    /* opcode 0Fh 0Fh 13h  not defined */
                    /* opcode 0Fh 0Fh 14h  not defined */
                    /* opcode 0Fh 0Fh 15h  not defined */
                    /* opcode 0Fh 0Fh 16h  not defined */
                    /* opcode 0Fh 0Fh 17h  not defined */
                    /* opcode 0Fh 0Fh 18h  not defined */
                    /* opcode 0Fh 0Fh 19h  not defined */
                    /* opcode 0Fh 0Fh 1Ah  not defined */
                    /* opcode 0Fh 0Fh 1Bh  not defined */
                    case 0x1C: /* 0Fh 0Fh 1Ch PF2IW mmx(reg),mmx(r/m)      spec: 0x0F 0x0F mod/reg/rm amd3dnow(0x1C) */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PF2IW MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                        break;
                    case 0x1D: /* 0Fh 0Fh 1Dh PF2ID mmx(reg),mmx(r/m)      spec: 0x0F 0x0F mod/reg/rm amd3dnow(0x1D) */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PF2ID MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                        break;
                    /* opcode 0Fh 0Fh 1Eh  not defined */
                    /* opcode 0Fh 0Fh 1Fh  not defined */
                    /* opcode 0Fh 0Fh 20h  not defined */
                    /* opcode 0Fh 0Fh 21h  not defined */
                    /* opcode 0Fh 0Fh 22h  not defined */
                    /* opcode 0Fh 0Fh 23h  not defined */
                    /* opcode 0Fh 0Fh 24h  not defined */
                    /* opcode 0Fh 0Fh 25h  not defined */
                    /* opcode 0Fh 0Fh 26h  not defined */
                    /* opcode 0Fh 0Fh 27h  not defined */
                    /* opcode 0Fh 0Fh 28h  not defined */
                    /* opcode 0Fh 0Fh 29h  not defined */
                    /* opcode 0Fh 0Fh 2Ah  not defined */
                    /* opcode 0Fh 0Fh 2Bh  not defined */
                    /* opcode 0Fh 0Fh 2Ch  not defined */
                    /* opcode 0Fh 0Fh 2Dh  not defined */
                    /* opcode 0Fh 0Fh 2Eh  not defined */
                    /* opcode 0Fh 0Fh 2Fh  not defined */
                    /* opcode 0Fh 0Fh 30h  not defined */
                    /* opcode 0Fh 0Fh 31h  not defined */
                    /* opcode 0Fh 0Fh 32h  not defined */
                    /* opcode 0Fh 0Fh 33h  not defined */
                    /* opcode 0Fh 0Fh 34h  not defined */
                    /* opcode 0Fh 0Fh 35h  not defined */
                    /* opcode 0Fh 0Fh 36h  not defined */
                    /* opcode 0Fh 0Fh 37h  not defined */
                    /* opcode 0Fh 0Fh 38h  not defined */
                    /* opcode 0Fh 0Fh 39h  not defined */
                    /* opcode 0Fh 0Fh 3Ah  not defined */
                    /* opcode 0Fh 0Fh 3Bh  not defined */
                    /* opcode 0Fh 0Fh 3Ch  not defined */
                    /* opcode 0Fh 0Fh 3Dh  not defined */
                    /* opcode 0Fh 0Fh 3Eh  not defined */
                    /* opcode 0Fh 0Fh 3Fh  not defined */
                    /* opcode 0Fh 0Fh 40h  not defined */
                    /* opcode 0Fh 0Fh 41h  not defined */
                    /* opcode 0Fh 0Fh 42h  not defined */
                    /* opcode 0Fh 0Fh 43h  not defined */
                    /* opcode 0Fh 0Fh 44h  not defined */
                    /* opcode 0Fh 0Fh 45h  not defined */
                    /* opcode 0Fh 0Fh 46h  not defined */
                    /* opcode 0Fh 0Fh 47h  not defined */
                    /* opcode 0Fh 0Fh 48h  not defined */
                    /* opcode 0Fh 0Fh 49h  not defined */
                    /* opcode 0Fh 0Fh 4Ah  not defined */
                    /* opcode 0Fh 0Fh 4Bh  not defined */
                    /* opcode 0Fh 0Fh 4Ch  not defined */
                    /* opcode 0Fh 0Fh 4Dh  not defined */
                    /* opcode 0Fh 0Fh 4Eh  not defined */
                    /* opcode 0Fh 0Fh 4Fh  not defined */
                    /* opcode 0Fh 0Fh 50h  not defined */
                    /* opcode 0Fh 0Fh 51h  not defined */
                    /* opcode 0Fh 0Fh 52h  not defined */
                    /* opcode 0Fh 0Fh 53h  not defined */
                    /* opcode 0Fh 0Fh 54h  not defined */
                    /* opcode 0Fh 0Fh 55h  not defined */
                    /* opcode 0Fh 0Fh 56h  not defined */
                    /* opcode 0Fh 0Fh 57h  not defined */
                    /* opcode 0Fh 0Fh 58h  not defined */
                    /* opcode 0Fh 0Fh 59h  not defined */
                    /* opcode 0Fh 0Fh 5Ah  not defined */
                    /* opcode 0Fh 0Fh 5Bh  not defined */
                    /* opcode 0Fh 0Fh 5Ch  not defined */
                    /* opcode 0Fh 0Fh 5Dh  not defined */
                    /* opcode 0Fh 0Fh 5Eh  not defined */
                    /* opcode 0Fh 0Fh 5Fh  not defined */
                    /* opcode 0Fh 0Fh 60h  not defined */
                    /* opcode 0Fh 0Fh 61h  not defined */
                    /* opcode 0Fh 0Fh 62h  not defined */
                    /* opcode 0Fh 0Fh 63h  not defined */
                    /* opcode 0Fh 0Fh 64h  not defined */
                    /* opcode 0Fh 0Fh 65h  not defined */
                    /* opcode 0Fh 0Fh 66h  not defined */
                    /* opcode 0Fh 0Fh 67h  not defined */
                    /* opcode 0Fh 0Fh 68h  not defined */
                    /* opcode 0Fh 0Fh 69h  not defined */
                    /* opcode 0Fh 0Fh 6Ah  not defined */
                    /* opcode 0Fh 0Fh 6Bh  not defined */
                    /* opcode 0Fh 0Fh 6Ch  not defined */
                    /* opcode 0Fh 0Fh 6Dh  not defined */
                    /* opcode 0Fh 0Fh 6Eh  not defined */
                    /* opcode 0Fh 0Fh 6Fh  not defined */
                    /* opcode 0Fh 0Fh 70h  not defined */
                    /* opcode 0Fh 0Fh 71h  not defined */
                    /* opcode 0Fh 0Fh 72h  not defined */
                    /* opcode 0Fh 0Fh 73h  not defined */
                    /* opcode 0Fh 0Fh 74h  not defined */
                    /* opcode 0Fh 0Fh 75h  not defined */
                    /* opcode 0Fh 0Fh 76h  not defined */
                    /* opcode 0Fh 0Fh 77h  not defined */
                    /* opcode 0Fh 0Fh 78h  not defined */
                    /* opcode 0Fh 0Fh 79h  not defined */
                    /* opcode 0Fh 0Fh 7Ah  not defined */
                    /* opcode 0Fh 0Fh 7Bh  not defined */
                    /* opcode 0Fh 0Fh 7Ch  not defined */
                    /* opcode 0Fh 0Fh 7Dh  not defined */
                    /* opcode 0Fh 0Fh 7Eh  not defined */
                    /* opcode 0Fh 0Fh 7Fh  not defined */
                    /* opcode 0Fh 0Fh 80h  not defined */
                    /* opcode 0Fh 0Fh 81h  not defined */
                    /* opcode 0Fh 0Fh 82h  not defined */
                    /* opcode 0Fh 0Fh 83h  not defined */
                    /* opcode 0Fh 0Fh 84h  not defined */
                    /* opcode 0Fh 0Fh 85h  not defined */
                    /* opcode 0Fh 0Fh 86h  not defined */
                    /* opcode 0Fh 0Fh 87h  not defined */
                    /* opcode 0Fh 0Fh 88h  not defined */
                    /* opcode 0Fh 0Fh 89h  not defined */
                    case 0x8A: /* 0Fh 0Fh 8Ah PFNACC mmx(reg),mmx(r/m)      spec: 0x0F 0x0F mod/reg/rm amd3dnow(0x8A) */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PFNACC MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                        break;
                    /* opcode 0Fh 0Fh 8Bh  not defined */
                    /* opcode 0Fh 0Fh 8Ch  not defined */
                    /* opcode 0Fh 0Fh 8Dh  not defined */
                    case 0x8E: /* 0Fh 0Fh 8Eh PFPNACC mmx(reg),mmx(r/m)      spec: 0x0F 0x0F mod/reg/rm amd3dnow(0x8E) */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PFPNACC MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                        break;
                    /* opcode 0Fh 0Fh 8Fh  not defined */
                    case 0x90: /* 0Fh 0Fh 90h PFCMPGE mmx(reg),mmx(r/m)      spec: 0x0F 0x0F mod/reg/rm amd3dnow(0x90) */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PFCMPGE MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                        break;
                    /* opcode 0Fh 0Fh 91h  not defined */
                    /* opcode 0Fh 0Fh 92h  not defined */
                    /* opcode 0Fh 0Fh 93h  not defined */
                    case 0x94: /* 0Fh 0Fh 94h PFMIN mmx(reg),mmx(r/m)      spec: 0x0F 0x0F mod/reg/rm amd3dnow(0x94) */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PFMIN MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                        break;
                    /* opcode 0Fh 0Fh 95h  not defined */
                    case 0x96: /* 0Fh 0Fh 96h PFRCP mmx(reg),mmx(r/m)      spec: 0x0F 0x0F mod/reg/rm amd3dnow(0x96) */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PFRCP MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                        break;
                    case 0x97: /* 0Fh 0Fh 97h PFRSQRT mmx(reg),mmx(r/m)      spec: 0x0F 0x0F mod/reg/rm amd3dnow(0x97) */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PFRSQRT MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                        break;
                    /* opcode 0Fh 0Fh 98h  not defined */
                    /* opcode 0Fh 0Fh 99h  not defined */
                    case 0x9A: /* 0Fh 0Fh 9Ah PFSUB mmx(reg),mmx(r/m)      spec: 0x0F 0x0F mod/reg/rm amd3dnow(0x9A) */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PFSUB MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                        break;
                    /* opcode 0Fh 0Fh 9Bh  not defined */
                    /* opcode 0Fh 0Fh 9Ch  not defined */
                    /* opcode 0Fh 0Fh 9Dh  not defined */
                    case 0x9E: /* 0Fh 0Fh 9Eh PFADD mmx(reg),mmx(r/m)      spec: 0x0F 0x0F mod/reg/rm amd3dnow(0x9E) */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PFADD MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                        break;
                    /* opcode 0Fh 0Fh 9Fh  not defined */
                    case 0xA0: /* 0Fh 0Fh A0h PFCMPGT mmx(reg),mmx(r/m)      spec: 0x0F 0x0F mod/reg/rm amd3dnow(0xA0) */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PFCMPGT MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                        break;
                    /* opcode 0Fh 0Fh A1h  not defined */
                    /* opcode 0Fh 0Fh A2h  not defined */
                    /* opcode 0Fh 0Fh A3h  not defined */
                    case 0xA4: /* 0Fh 0Fh A4h PFMAX mmx(reg),mmx(r/m)      spec: 0x0F 0x0F mod/reg/rm amd3dnow(0xA4) */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PFMAX MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                        break;
                    /* opcode 0Fh 0Fh A5h  not defined */
                    case 0xA6: /* 0Fh 0Fh A6h PFRCPIT1 mmx(reg),mmx(r/m)      spec: 0x0F 0x0F mod/reg/rm amd3dnow(0xA6) */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PFRCPIT1 MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                        break;
                    case 0xA7: /* 0Fh 0Fh A7h PFRSQIT1 mmx(reg),mmx(r/m)      spec: 0x0F 0x0F mod/reg/rm amd3dnow(0xA7) */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PFRSQIT1 MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                        break;
                    /* opcode 0Fh 0Fh A8h  not defined */
                    /* opcode 0Fh 0Fh A9h  not defined */
                    case 0xAA: /* 0Fh 0Fh AAh PFSUBR mmx(reg),mmx(r/m)      spec: 0x0F 0x0F mod/reg/rm amd3dnow(0xAA) */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PFSUBR MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                        break;
                    /* opcode 0Fh 0Fh ABh  not defined */
                    /* opcode 0Fh 0Fh ACh  not defined */
                    /* opcode 0Fh 0Fh ADh  not defined */
                    case 0xAE: /* 0Fh 0Fh AEh PFACC mmx(reg),mmx(r/m)      spec: 0x0F 0x0F mod/reg/rm amd3dnow(0xAE) */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PFACC MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                        break;
                    /* opcode 0Fh 0Fh AFh  not defined */
                    case 0xB0: /* 0Fh 0Fh B0h PFCMPEQ mmx(reg),mmx(r/m)      spec: 0x0F 0x0F mod/reg/rm amd3dnow(0xB0) */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PFCMPEQ MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                        break;
                    /* opcode 0Fh 0Fh B1h  not defined */
                    /* opcode 0Fh 0Fh B2h  not defined */
                    /* opcode 0Fh 0Fh B3h  not defined */
                    case 0xB4: /* 0Fh 0Fh B4h PFMUL mmx(reg),mmx(r/m)      spec: 0x0F 0x0F mod/reg/rm amd3dnow(0xB4) */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PFMUL MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                        break;
                    /* opcode 0Fh 0Fh B5h  not defined */
                    case 0xB6: /* 0Fh 0Fh B6h PFRCPIT2 mmx(reg),mmx(r/m)      spec: 0x0F 0x0F mod/reg/rm amd3dnow(0xB6) */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PFRCPIT2 MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                        break;
                    case 0xB7: /* 0Fh 0Fh B7h PMULHRW mmx(reg),mmx(r/m)      spec: 0x0F 0x0F mod/reg/rm amd3dnow(0xB7) */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PMULHRW MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                        break;
                    /* opcode 0Fh 0Fh B8h  not defined */
                    /* opcode 0Fh 0Fh B9h  not defined */
                    /* opcode 0Fh 0Fh BAh  not defined */
                    case 0xBB: /* 0Fh 0Fh BBh PSWAPD mmx(reg),mmx(r/m)      spec: 0x0F 0x0F mod/reg/rm amd3dnow(0xBB) */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSWAPD MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                        break;
                    /* opcode 0Fh 0Fh BCh  not defined */
                    /* opcode 0Fh 0Fh BDh  not defined */
                    /* opcode 0Fh 0Fh BEh  not defined */
                    case 0xBF: /* 0Fh 0Fh BFh PAVGUSB mmx(reg),mmx(r/m)      spec: 0x0F 0x0F mod/reg/rm amd3dnow(0xBF) */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PAVGUSB MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                        break;
                    /* opcode 0Fh 0Fh C0h  not defined */
                    /* opcode 0Fh 0Fh C1h  not defined */
                    /* opcode 0Fh 0Fh C2h  not defined */
                    /* opcode 0Fh 0Fh C3h  not defined */
                    /* opcode 0Fh 0Fh C4h  not defined */
                    /* opcode 0Fh 0Fh C5h  not defined */
                    /* opcode 0Fh 0Fh C6h  not defined */
                    /* opcode 0Fh 0Fh C7h  not defined */
                    /* opcode 0Fh 0Fh C8h  not defined */
                    /* opcode 0Fh 0Fh C9h  not defined */
                    /* opcode 0Fh 0Fh CAh  not defined */
                    /* opcode 0Fh 0Fh CBh  not defined */
                    /* opcode 0Fh 0Fh CCh  not defined */
                    /* opcode 0Fh 0Fh CDh  not defined */
                    /* opcode 0Fh 0Fh CEh  not defined */
                    /* opcode 0Fh 0Fh CFh  not defined */
                    /* opcode 0Fh 0Fh D0h  not defined */
                    /* opcode 0Fh 0Fh D1h  not defined */
                    /* opcode 0Fh 0Fh D2h  not defined */
                    /* opcode 0Fh 0Fh D3h  not defined */
                    /* opcode 0Fh 0Fh D4h  not defined */
                    /* opcode 0Fh 0Fh D5h  not defined */
                    /* opcode 0Fh 0Fh D6h  not defined */
                    /* opcode 0Fh 0Fh D7h  not defined */
                    /* opcode 0Fh 0Fh D8h  not defined */
                    /* opcode 0Fh 0Fh D9h  not defined */
                    /* opcode 0Fh 0Fh DAh  not defined */
                    /* opcode 0Fh 0Fh DBh  not defined */
                    /* opcode 0Fh 0Fh DCh  not defined */
                    /* opcode 0Fh 0Fh DDh  not defined */
                    /* opcode 0Fh 0Fh DEh  not defined */
                    /* opcode 0Fh 0Fh DFh  not defined */
                    /* opcode 0Fh 0Fh E0h  not defined */
                    /* opcode 0Fh 0Fh E1h  not defined */
                    /* opcode 0Fh 0Fh E2h  not defined */
                    /* opcode 0Fh 0Fh E3h  not defined */
                    /* opcode 0Fh 0Fh E4h  not defined */
                    /* opcode 0Fh 0Fh E5h  not defined */
                    /* opcode 0Fh 0Fh E6h  not defined */
                    /* opcode 0Fh 0Fh E7h  not defined */
                    /* opcode 0Fh 0Fh E8h  not defined */
                    /* opcode 0Fh 0Fh E9h  not defined */
                    /* opcode 0Fh 0Fh EAh  not defined */
                    /* opcode 0Fh 0Fh EBh  not defined */
                    /* opcode 0Fh 0Fh ECh  not defined */
                    /* opcode 0Fh 0Fh EDh  not defined */
                    /* opcode 0Fh 0Fh EEh  not defined */
                    /* opcode 0Fh 0Fh EFh  not defined */
                    /* opcode 0Fh 0Fh F0h  not defined */
                    /* opcode 0Fh 0Fh F1h  not defined */
                    /* opcode 0Fh 0Fh F2h  not defined */
                    /* opcode 0Fh 0Fh F3h  not defined */
                    /* opcode 0Fh 0Fh F4h  not defined */
                    /* opcode 0Fh 0Fh F5h  not defined */
                    /* opcode 0Fh 0Fh F6h  not defined */
                    /* opcode 0Fh 0Fh F7h  not defined */
                    /* opcode 0Fh 0Fh F8h  not defined */
                    /* opcode 0Fh 0Fh F9h  not defined */
                    /* opcode 0Fh 0Fh FAh  not defined */
                    /* opcode 0Fh 0Fh FBh  not defined */
                    /* opcode 0Fh 0Fh FCh  not defined */
                    /* opcode 0Fh 0Fh FDh  not defined */
                    /* opcode 0Fh 0Fh FEh  not defined */
                    /* opcode 0Fh 0Fh FFh  not defined */
                    default:
                        goto _x86decode_illegal_opcode;
                };
/* End of opcodes starting with 0Fh 0Fh */
                break;
            case 0x10: /* 0Fh 10h MOVUPS sse(reg),sse(r/m)      spec: 0x0F 0x10 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVUPS XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                break;
            case 0x11: /* 0Fh 11h MOVUPS sse(r/m),sse(reg)      spec: 0x0F 0x11 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVUPS %s,XMM%u",IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""),mrm.reg());
                break;
            case 0x12: /* 0Fh 12h        spec:  */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                _x86decode_begin_code32_addr32_opcode_parse_0F12:
/* Opcodes starting with 0Fh 12h */
                switch (mrm.byte) {
                    case 0x00: /* 0Fh 12h 00h MOVLPS sse(reg),sse(r/m) mod=0 reg=0 rm=0      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x01: /* 0Fh 12h 01h MOVLPS sse(reg),sse(r/m) mod=0 reg=0 rm=1      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x02: /* 0Fh 12h 02h MOVLPS sse(reg),sse(r/m) mod=0 reg=0 rm=2      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x03: /* 0Fh 12h 03h MOVLPS sse(reg),sse(r/m) mod=0 reg=0 rm=3      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x04: /* 0Fh 12h 04h MOVLPS sse(reg),sse(r/m) mod=0 reg=0 rm=4      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x05: /* 0Fh 12h 05h MOVLPS sse(reg),sse(r/m) mod=0 reg=0 rm=5      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x06: /* 0Fh 12h 06h MOVLPS sse(reg),sse(r/m) mod=0 reg=0 rm=6      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x07: /* 0Fh 12h 07h MOVLPS sse(reg),sse(r/m) mod=0 reg=0 rm=7      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x08: /* 0Fh 12h 08h MOVLPS sse(reg),sse(r/m) mod=0 reg=1 rm=0      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x09: /* 0Fh 12h 09h MOVLPS sse(reg),sse(r/m) mod=0 reg=1 rm=1      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x0A: /* 0Fh 12h 0Ah MOVLPS sse(reg),sse(r/m) mod=0 reg=1 rm=2      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x0B: /* 0Fh 12h 0Bh MOVLPS sse(reg),sse(r/m) mod=0 reg=1 rm=3      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x0C: /* 0Fh 12h 0Ch MOVLPS sse(reg),sse(r/m) mod=0 reg=1 rm=4      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x0D: /* 0Fh 12h 0Dh MOVLPS sse(reg),sse(r/m) mod=0 reg=1 rm=5      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x0E: /* 0Fh 12h 0Eh MOVLPS sse(reg),sse(r/m) mod=0 reg=1 rm=6      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x0F: /* 0Fh 12h 0Fh MOVLPS sse(reg),sse(r/m) mod=0 reg=1 rm=7      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x10: /* 0Fh 12h 10h MOVLPS sse(reg),sse(r/m) mod=0 reg=2 rm=0      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x11: /* 0Fh 12h 11h MOVLPS sse(reg),sse(r/m) mod=0 reg=2 rm=1      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x12: /* 0Fh 12h 12h MOVLPS sse(reg),sse(r/m) mod=0 reg=2 rm=2      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x13: /* 0Fh 12h 13h MOVLPS sse(reg),sse(r/m) mod=0 reg=2 rm=3      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x14: /* 0Fh 12h 14h MOVLPS sse(reg),sse(r/m) mod=0 reg=2 rm=4      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x15: /* 0Fh 12h 15h MOVLPS sse(reg),sse(r/m) mod=0 reg=2 rm=5      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x16: /* 0Fh 12h 16h MOVLPS sse(reg),sse(r/m) mod=0 reg=2 rm=6      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x17: /* 0Fh 12h 17h MOVLPS sse(reg),sse(r/m) mod=0 reg=2 rm=7      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x18: /* 0Fh 12h 18h MOVLPS sse(reg),sse(r/m) mod=0 reg=3 rm=0      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x19: /* 0Fh 12h 19h MOVLPS sse(reg),sse(r/m) mod=0 reg=3 rm=1      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x1A: /* 0Fh 12h 1Ah MOVLPS sse(reg),sse(r/m) mod=0 reg=3 rm=2      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x1B: /* 0Fh 12h 1Bh MOVLPS sse(reg),sse(r/m) mod=0 reg=3 rm=3      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x1C: /* 0Fh 12h 1Ch MOVLPS sse(reg),sse(r/m) mod=0 reg=3 rm=4      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x1D: /* 0Fh 12h 1Dh MOVLPS sse(reg),sse(r/m) mod=0 reg=3 rm=5      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x1E: /* 0Fh 12h 1Eh MOVLPS sse(reg),sse(r/m) mod=0 reg=3 rm=6      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x1F: /* 0Fh 12h 1Fh MOVLPS sse(reg),sse(r/m) mod=0 reg=3 rm=7      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x20: /* 0Fh 12h 20h MOVLPS sse(reg),sse(r/m) mod=0 reg=4 rm=0      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x21: /* 0Fh 12h 21h MOVLPS sse(reg),sse(r/m) mod=0 reg=4 rm=1      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x22: /* 0Fh 12h 22h MOVLPS sse(reg),sse(r/m) mod=0 reg=4 rm=2      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x23: /* 0Fh 12h 23h MOVLPS sse(reg),sse(r/m) mod=0 reg=4 rm=3      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x24: /* 0Fh 12h 24h MOVLPS sse(reg),sse(r/m) mod=0 reg=4 rm=4      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x25: /* 0Fh 12h 25h MOVLPS sse(reg),sse(r/m) mod=0 reg=4 rm=5      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x26: /* 0Fh 12h 26h MOVLPS sse(reg),sse(r/m) mod=0 reg=4 rm=6      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x27: /* 0Fh 12h 27h MOVLPS sse(reg),sse(r/m) mod=0 reg=4 rm=7      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x28: /* 0Fh 12h 28h MOVLPS sse(reg),sse(r/m) mod=0 reg=5 rm=0      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x29: /* 0Fh 12h 29h MOVLPS sse(reg),sse(r/m) mod=0 reg=5 rm=1      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x2A: /* 0Fh 12h 2Ah MOVLPS sse(reg),sse(r/m) mod=0 reg=5 rm=2      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x2B: /* 0Fh 12h 2Bh MOVLPS sse(reg),sse(r/m) mod=0 reg=5 rm=3      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x2C: /* 0Fh 12h 2Ch MOVLPS sse(reg),sse(r/m) mod=0 reg=5 rm=4      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x2D: /* 0Fh 12h 2Dh MOVLPS sse(reg),sse(r/m) mod=0 reg=5 rm=5      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x2E: /* 0Fh 12h 2Eh MOVLPS sse(reg),sse(r/m) mod=0 reg=5 rm=6      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x2F: /* 0Fh 12h 2Fh MOVLPS sse(reg),sse(r/m) mod=0 reg=5 rm=7      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x30: /* 0Fh 12h 30h MOVLPS sse(reg),sse(r/m) mod=0 reg=6 rm=0      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x31: /* 0Fh 12h 31h MOVLPS sse(reg),sse(r/m) mod=0 reg=6 rm=1      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x32: /* 0Fh 12h 32h MOVLPS sse(reg),sse(r/m) mod=0 reg=6 rm=2      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x33: /* 0Fh 12h 33h MOVLPS sse(reg),sse(r/m) mod=0 reg=6 rm=3      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x34: /* 0Fh 12h 34h MOVLPS sse(reg),sse(r/m) mod=0 reg=6 rm=4      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x35: /* 0Fh 12h 35h MOVLPS sse(reg),sse(r/m) mod=0 reg=6 rm=5      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x36: /* 0Fh 12h 36h MOVLPS sse(reg),sse(r/m) mod=0 reg=6 rm=6      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x37: /* 0Fh 12h 37h MOVLPS sse(reg),sse(r/m) mod=0 reg=6 rm=7      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x38: /* 0Fh 12h 38h MOVLPS sse(reg),sse(r/m) mod=0 reg=7 rm=0      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x39: /* 0Fh 12h 39h MOVLPS sse(reg),sse(r/m) mod=0 reg=7 rm=1      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x3A: /* 0Fh 12h 3Ah MOVLPS sse(reg),sse(r/m) mod=0 reg=7 rm=2      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x3B: /* 0Fh 12h 3Bh MOVLPS sse(reg),sse(r/m) mod=0 reg=7 rm=3      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x3C: /* 0Fh 12h 3Ch MOVLPS sse(reg),sse(r/m) mod=0 reg=7 rm=4      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x3D: /* 0Fh 12h 3Dh MOVLPS sse(reg),sse(r/m) mod=0 reg=7 rm=5      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x3E: /* 0Fh 12h 3Eh MOVLPS sse(reg),sse(r/m) mod=0 reg=7 rm=6      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x3F: /* 0Fh 12h 3Fh MOVLPS sse(reg),sse(r/m) mod=0 reg=7 rm=7      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x40: /* 0Fh 12h 40h MOVLPS sse(reg),sse(r/m) mod=1 reg=0 rm=0      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x41: /* 0Fh 12h 41h MOVLPS sse(reg),sse(r/m) mod=1 reg=0 rm=1      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x42: /* 0Fh 12h 42h MOVLPS sse(reg),sse(r/m) mod=1 reg=0 rm=2      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x43: /* 0Fh 12h 43h MOVLPS sse(reg),sse(r/m) mod=1 reg=0 rm=3      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x44: /* 0Fh 12h 44h MOVLPS sse(reg),sse(r/m) mod=1 reg=0 rm=4      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x45: /* 0Fh 12h 45h MOVLPS sse(reg),sse(r/m) mod=1 reg=0 rm=5      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x46: /* 0Fh 12h 46h MOVLPS sse(reg),sse(r/m) mod=1 reg=0 rm=6      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x47: /* 0Fh 12h 47h MOVLPS sse(reg),sse(r/m) mod=1 reg=0 rm=7      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x48: /* 0Fh 12h 48h MOVLPS sse(reg),sse(r/m) mod=1 reg=1 rm=0      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x49: /* 0Fh 12h 49h MOVLPS sse(reg),sse(r/m) mod=1 reg=1 rm=1      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x4A: /* 0Fh 12h 4Ah MOVLPS sse(reg),sse(r/m) mod=1 reg=1 rm=2      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x4B: /* 0Fh 12h 4Bh MOVLPS sse(reg),sse(r/m) mod=1 reg=1 rm=3      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x4C: /* 0Fh 12h 4Ch MOVLPS sse(reg),sse(r/m) mod=1 reg=1 rm=4      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x4D: /* 0Fh 12h 4Dh MOVLPS sse(reg),sse(r/m) mod=1 reg=1 rm=5      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x4E: /* 0Fh 12h 4Eh MOVLPS sse(reg),sse(r/m) mod=1 reg=1 rm=6      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x4F: /* 0Fh 12h 4Fh MOVLPS sse(reg),sse(r/m) mod=1 reg=1 rm=7      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x50: /* 0Fh 12h 50h MOVLPS sse(reg),sse(r/m) mod=1 reg=2 rm=0      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x51: /* 0Fh 12h 51h MOVLPS sse(reg),sse(r/m) mod=1 reg=2 rm=1      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x52: /* 0Fh 12h 52h MOVLPS sse(reg),sse(r/m) mod=1 reg=2 rm=2      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x53: /* 0Fh 12h 53h MOVLPS sse(reg),sse(r/m) mod=1 reg=2 rm=3      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x54: /* 0Fh 12h 54h MOVLPS sse(reg),sse(r/m) mod=1 reg=2 rm=4      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x55: /* 0Fh 12h 55h MOVLPS sse(reg),sse(r/m) mod=1 reg=2 rm=5      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x56: /* 0Fh 12h 56h MOVLPS sse(reg),sse(r/m) mod=1 reg=2 rm=6      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x57: /* 0Fh 12h 57h MOVLPS sse(reg),sse(r/m) mod=1 reg=2 rm=7      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x58: /* 0Fh 12h 58h MOVLPS sse(reg),sse(r/m) mod=1 reg=3 rm=0      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x59: /* 0Fh 12h 59h MOVLPS sse(reg),sse(r/m) mod=1 reg=3 rm=1      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x5A: /* 0Fh 12h 5Ah MOVLPS sse(reg),sse(r/m) mod=1 reg=3 rm=2      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x5B: /* 0Fh 12h 5Bh MOVLPS sse(reg),sse(r/m) mod=1 reg=3 rm=3      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x5C: /* 0Fh 12h 5Ch MOVLPS sse(reg),sse(r/m) mod=1 reg=3 rm=4      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x5D: /* 0Fh 12h 5Dh MOVLPS sse(reg),sse(r/m) mod=1 reg=3 rm=5      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x5E: /* 0Fh 12h 5Eh MOVLPS sse(reg),sse(r/m) mod=1 reg=3 rm=6      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x5F: /* 0Fh 12h 5Fh MOVLPS sse(reg),sse(r/m) mod=1 reg=3 rm=7      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x60: /* 0Fh 12h 60h MOVLPS sse(reg),sse(r/m) mod=1 reg=4 rm=0      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x61: /* 0Fh 12h 61h MOVLPS sse(reg),sse(r/m) mod=1 reg=4 rm=1      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x62: /* 0Fh 12h 62h MOVLPS sse(reg),sse(r/m) mod=1 reg=4 rm=2      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x63: /* 0Fh 12h 63h MOVLPS sse(reg),sse(r/m) mod=1 reg=4 rm=3      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x64: /* 0Fh 12h 64h MOVLPS sse(reg),sse(r/m) mod=1 reg=4 rm=4      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x65: /* 0Fh 12h 65h MOVLPS sse(reg),sse(r/m) mod=1 reg=4 rm=5      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x66: /* 0Fh 12h 66h MOVLPS sse(reg),sse(r/m) mod=1 reg=4 rm=6      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x67: /* 0Fh 12h 67h MOVLPS sse(reg),sse(r/m) mod=1 reg=4 rm=7      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x68: /* 0Fh 12h 68h MOVLPS sse(reg),sse(r/m) mod=1 reg=5 rm=0      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x69: /* 0Fh 12h 69h MOVLPS sse(reg),sse(r/m) mod=1 reg=5 rm=1      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x6A: /* 0Fh 12h 6Ah MOVLPS sse(reg),sse(r/m) mod=1 reg=5 rm=2      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x6B: /* 0Fh 12h 6Bh MOVLPS sse(reg),sse(r/m) mod=1 reg=5 rm=3      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x6C: /* 0Fh 12h 6Ch MOVLPS sse(reg),sse(r/m) mod=1 reg=5 rm=4      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x6D: /* 0Fh 12h 6Dh MOVLPS sse(reg),sse(r/m) mod=1 reg=5 rm=5      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x6E: /* 0Fh 12h 6Eh MOVLPS sse(reg),sse(r/m) mod=1 reg=5 rm=6      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x6F: /* 0Fh 12h 6Fh MOVLPS sse(reg),sse(r/m) mod=1 reg=5 rm=7      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x70: /* 0Fh 12h 70h MOVLPS sse(reg),sse(r/m) mod=1 reg=6 rm=0      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x71: /* 0Fh 12h 71h MOVLPS sse(reg),sse(r/m) mod=1 reg=6 rm=1      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x72: /* 0Fh 12h 72h MOVLPS sse(reg),sse(r/m) mod=1 reg=6 rm=2      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x73: /* 0Fh 12h 73h MOVLPS sse(reg),sse(r/m) mod=1 reg=6 rm=3      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x74: /* 0Fh 12h 74h MOVLPS sse(reg),sse(r/m) mod=1 reg=6 rm=4      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x75: /* 0Fh 12h 75h MOVLPS sse(reg),sse(r/m) mod=1 reg=6 rm=5      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x76: /* 0Fh 12h 76h MOVLPS sse(reg),sse(r/m) mod=1 reg=6 rm=6      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x77: /* 0Fh 12h 77h MOVLPS sse(reg),sse(r/m) mod=1 reg=6 rm=7      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x78: /* 0Fh 12h 78h MOVLPS sse(reg),sse(r/m) mod=1 reg=7 rm=0      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x79: /* 0Fh 12h 79h MOVLPS sse(reg),sse(r/m) mod=1 reg=7 rm=1      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x7A: /* 0Fh 12h 7Ah MOVLPS sse(reg),sse(r/m) mod=1 reg=7 rm=2      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x7B: /* 0Fh 12h 7Bh MOVLPS sse(reg),sse(r/m) mod=1 reg=7 rm=3      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x7C: /* 0Fh 12h 7Ch MOVLPS sse(reg),sse(r/m) mod=1 reg=7 rm=4      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x7D: /* 0Fh 12h 7Dh MOVLPS sse(reg),sse(r/m) mod=1 reg=7 rm=5      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x7E: /* 0Fh 12h 7Eh MOVLPS sse(reg),sse(r/m) mod=1 reg=7 rm=6      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x7F: /* 0Fh 12h 7Fh MOVLPS sse(reg),sse(r/m) mod=1 reg=7 rm=7      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x80: /* 0Fh 12h 80h MOVLPS sse(reg),sse(r/m) mod=2 reg=0 rm=0      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x81: /* 0Fh 12h 81h MOVLPS sse(reg),sse(r/m) mod=2 reg=0 rm=1      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x82: /* 0Fh 12h 82h MOVLPS sse(reg),sse(r/m) mod=2 reg=0 rm=2      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x83: /* 0Fh 12h 83h MOVLPS sse(reg),sse(r/m) mod=2 reg=0 rm=3      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x84: /* 0Fh 12h 84h MOVLPS sse(reg),sse(r/m) mod=2 reg=0 rm=4      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x85: /* 0Fh 12h 85h MOVLPS sse(reg),sse(r/m) mod=2 reg=0 rm=5      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x86: /* 0Fh 12h 86h MOVLPS sse(reg),sse(r/m) mod=2 reg=0 rm=6      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x87: /* 0Fh 12h 87h MOVLPS sse(reg),sse(r/m) mod=2 reg=0 rm=7      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x88: /* 0Fh 12h 88h MOVLPS sse(reg),sse(r/m) mod=2 reg=1 rm=0      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x89: /* 0Fh 12h 89h MOVLPS sse(reg),sse(r/m) mod=2 reg=1 rm=1      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x8A: /* 0Fh 12h 8Ah MOVLPS sse(reg),sse(r/m) mod=2 reg=1 rm=2      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x8B: /* 0Fh 12h 8Bh MOVLPS sse(reg),sse(r/m) mod=2 reg=1 rm=3      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x8C: /* 0Fh 12h 8Ch MOVLPS sse(reg),sse(r/m) mod=2 reg=1 rm=4      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x8D: /* 0Fh 12h 8Dh MOVLPS sse(reg),sse(r/m) mod=2 reg=1 rm=5      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x8E: /* 0Fh 12h 8Eh MOVLPS sse(reg),sse(r/m) mod=2 reg=1 rm=6      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x8F: /* 0Fh 12h 8Fh MOVLPS sse(reg),sse(r/m) mod=2 reg=1 rm=7      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x90: /* 0Fh 12h 90h MOVLPS sse(reg),sse(r/m) mod=2 reg=2 rm=0      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x91: /* 0Fh 12h 91h MOVLPS sse(reg),sse(r/m) mod=2 reg=2 rm=1      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x92: /* 0Fh 12h 92h MOVLPS sse(reg),sse(r/m) mod=2 reg=2 rm=2      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x93: /* 0Fh 12h 93h MOVLPS sse(reg),sse(r/m) mod=2 reg=2 rm=3      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x94: /* 0Fh 12h 94h MOVLPS sse(reg),sse(r/m) mod=2 reg=2 rm=4      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x95: /* 0Fh 12h 95h MOVLPS sse(reg),sse(r/m) mod=2 reg=2 rm=5      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x96: /* 0Fh 12h 96h MOVLPS sse(reg),sse(r/m) mod=2 reg=2 rm=6      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x97: /* 0Fh 12h 97h MOVLPS sse(reg),sse(r/m) mod=2 reg=2 rm=7      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x98: /* 0Fh 12h 98h MOVLPS sse(reg),sse(r/m) mod=2 reg=3 rm=0      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x99: /* 0Fh 12h 99h MOVLPS sse(reg),sse(r/m) mod=2 reg=3 rm=1      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x9A: /* 0Fh 12h 9Ah MOVLPS sse(reg),sse(r/m) mod=2 reg=3 rm=2      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x9B: /* 0Fh 12h 9Bh MOVLPS sse(reg),sse(r/m) mod=2 reg=3 rm=3      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x9C: /* 0Fh 12h 9Ch MOVLPS sse(reg),sse(r/m) mod=2 reg=3 rm=4      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x9D: /* 0Fh 12h 9Dh MOVLPS sse(reg),sse(r/m) mod=2 reg=3 rm=5      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x9E: /* 0Fh 12h 9Eh MOVLPS sse(reg),sse(r/m) mod=2 reg=3 rm=6      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0x9F: /* 0Fh 12h 9Fh MOVLPS sse(reg),sse(r/m) mod=2 reg=3 rm=7      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0xA0: /* 0Fh 12h A0h MOVLPS sse(reg),sse(r/m) mod=2 reg=4 rm=0      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0xA1: /* 0Fh 12h A1h MOVLPS sse(reg),sse(r/m) mod=2 reg=4 rm=1      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0xA2: /* 0Fh 12h A2h MOVLPS sse(reg),sse(r/m) mod=2 reg=4 rm=2      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0xA3: /* 0Fh 12h A3h MOVLPS sse(reg),sse(r/m) mod=2 reg=4 rm=3      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0xA4: /* 0Fh 12h A4h MOVLPS sse(reg),sse(r/m) mod=2 reg=4 rm=4      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0xA5: /* 0Fh 12h A5h MOVLPS sse(reg),sse(r/m) mod=2 reg=4 rm=5      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0xA6: /* 0Fh 12h A6h MOVLPS sse(reg),sse(r/m) mod=2 reg=4 rm=6      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0xA7: /* 0Fh 12h A7h MOVLPS sse(reg),sse(r/m) mod=2 reg=4 rm=7      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0xA8: /* 0Fh 12h A8h MOVLPS sse(reg),sse(r/m) mod=2 reg=5 rm=0      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0xA9: /* 0Fh 12h A9h MOVLPS sse(reg),sse(r/m) mod=2 reg=5 rm=1      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0xAA: /* 0Fh 12h AAh MOVLPS sse(reg),sse(r/m) mod=2 reg=5 rm=2      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0xAB: /* 0Fh 12h ABh MOVLPS sse(reg),sse(r/m) mod=2 reg=5 rm=3      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0xAC: /* 0Fh 12h ACh MOVLPS sse(reg),sse(r/m) mod=2 reg=5 rm=4      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0xAD: /* 0Fh 12h ADh MOVLPS sse(reg),sse(r/m) mod=2 reg=5 rm=5      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0xAE: /* 0Fh 12h AEh MOVLPS sse(reg),sse(r/m) mod=2 reg=5 rm=6      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0xAF: /* 0Fh 12h AFh MOVLPS sse(reg),sse(r/m) mod=2 reg=5 rm=7      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0xB0: /* 0Fh 12h B0h MOVLPS sse(reg),sse(r/m) mod=2 reg=6 rm=0      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0xB1: /* 0Fh 12h B1h MOVLPS sse(reg),sse(r/m) mod=2 reg=6 rm=1      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0xB2: /* 0Fh 12h B2h MOVLPS sse(reg),sse(r/m) mod=2 reg=6 rm=2      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0xB3: /* 0Fh 12h B3h MOVLPS sse(reg),sse(r/m) mod=2 reg=6 rm=3      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0xB4: /* 0Fh 12h B4h MOVLPS sse(reg),sse(r/m) mod=2 reg=6 rm=4      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0xB5: /* 0Fh 12h B5h MOVLPS sse(reg),sse(r/m) mod=2 reg=6 rm=5      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0xB6: /* 0Fh 12h B6h MOVLPS sse(reg),sse(r/m) mod=2 reg=6 rm=6      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0xB7: /* 0Fh 12h B7h MOVLPS sse(reg),sse(r/m) mod=2 reg=6 rm=7      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0xB8: /* 0Fh 12h B8h MOVLPS sse(reg),sse(r/m) mod=2 reg=7 rm=0      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0xB9: /* 0Fh 12h B9h MOVLPS sse(reg),sse(r/m) mod=2 reg=7 rm=1      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0xBA: /* 0Fh 12h BAh MOVLPS sse(reg),sse(r/m) mod=2 reg=7 rm=2      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0xBB: /* 0Fh 12h BBh MOVLPS sse(reg),sse(r/m) mod=2 reg=7 rm=3      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0xBC: /* 0Fh 12h BCh MOVLPS sse(reg),sse(r/m) mod=2 reg=7 rm=4      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0xBD: /* 0Fh 12h BDh MOVLPS sse(reg),sse(r/m) mod=2 reg=7 rm=5      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0xBE: /* 0Fh 12h BEh MOVLPS sse(reg),sse(r/m) mod=2 reg=7 rm=6      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                    case 0xBF: /* 0Fh 12h BFh MOVLPS sse(reg),sse(r/m) mod=2 reg=7 rm=7      spec: 0x0F 0x12 mod/reg/rm mod!=3 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVLPS XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                        break;
                    case 0xC0: /* 0Fh 12h C0h MOVHLPS sse(reg),sse(r/m) mod=3 reg=0 rm=0      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xC1: /* 0Fh 12h C1h MOVHLPS sse(reg),sse(r/m) mod=3 reg=0 rm=1      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xC2: /* 0Fh 12h C2h MOVHLPS sse(reg),sse(r/m) mod=3 reg=0 rm=2      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xC3: /* 0Fh 12h C3h MOVHLPS sse(reg),sse(r/m) mod=3 reg=0 rm=3      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xC4: /* 0Fh 12h C4h MOVHLPS sse(reg),sse(r/m) mod=3 reg=0 rm=4      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xC5: /* 0Fh 12h C5h MOVHLPS sse(reg),sse(r/m) mod=3 reg=0 rm=5      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xC6: /* 0Fh 12h C6h MOVHLPS sse(reg),sse(r/m) mod=3 reg=0 rm=6      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xC7: /* 0Fh 12h C7h MOVHLPS sse(reg),sse(r/m) mod=3 reg=0 rm=7      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xC8: /* 0Fh 12h C8h MOVHLPS sse(reg),sse(r/m) mod=3 reg=1 rm=0      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xC9: /* 0Fh 12h C9h MOVHLPS sse(reg),sse(r/m) mod=3 reg=1 rm=1      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xCA: /* 0Fh 12h CAh MOVHLPS sse(reg),sse(r/m) mod=3 reg=1 rm=2      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xCB: /* 0Fh 12h CBh MOVHLPS sse(reg),sse(r/m) mod=3 reg=1 rm=3      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xCC: /* 0Fh 12h CCh MOVHLPS sse(reg),sse(r/m) mod=3 reg=1 rm=4      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xCD: /* 0Fh 12h CDh MOVHLPS sse(reg),sse(r/m) mod=3 reg=1 rm=5      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xCE: /* 0Fh 12h CEh MOVHLPS sse(reg),sse(r/m) mod=3 reg=1 rm=6      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xCF: /* 0Fh 12h CFh MOVHLPS sse(reg),sse(r/m) mod=3 reg=1 rm=7      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xD0: /* 0Fh 12h D0h MOVHLPS sse(reg),sse(r/m) mod=3 reg=2 rm=0      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xD1: /* 0Fh 12h D1h MOVHLPS sse(reg),sse(r/m) mod=3 reg=2 rm=1      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xD2: /* 0Fh 12h D2h MOVHLPS sse(reg),sse(r/m) mod=3 reg=2 rm=2      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xD3: /* 0Fh 12h D3h MOVHLPS sse(reg),sse(r/m) mod=3 reg=2 rm=3      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xD4: /* 0Fh 12h D4h MOVHLPS sse(reg),sse(r/m) mod=3 reg=2 rm=4      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xD5: /* 0Fh 12h D5h MOVHLPS sse(reg),sse(r/m) mod=3 reg=2 rm=5      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xD6: /* 0Fh 12h D6h MOVHLPS sse(reg),sse(r/m) mod=3 reg=2 rm=6      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xD7: /* 0Fh 12h D7h MOVHLPS sse(reg),sse(r/m) mod=3 reg=2 rm=7      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xD8: /* 0Fh 12h D8h MOVHLPS sse(reg),sse(r/m) mod=3 reg=3 rm=0      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xD9: /* 0Fh 12h D9h MOVHLPS sse(reg),sse(r/m) mod=3 reg=3 rm=1      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xDA: /* 0Fh 12h DAh MOVHLPS sse(reg),sse(r/m) mod=3 reg=3 rm=2      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xDB: /* 0Fh 12h DBh MOVHLPS sse(reg),sse(r/m) mod=3 reg=3 rm=3      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xDC: /* 0Fh 12h DCh MOVHLPS sse(reg),sse(r/m) mod=3 reg=3 rm=4      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xDD: /* 0Fh 12h DDh MOVHLPS sse(reg),sse(r/m) mod=3 reg=3 rm=5      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xDE: /* 0Fh 12h DEh MOVHLPS sse(reg),sse(r/m) mod=3 reg=3 rm=6      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xDF: /* 0Fh 12h DFh MOVHLPS sse(reg),sse(r/m) mod=3 reg=3 rm=7      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xE0: /* 0Fh 12h E0h MOVHLPS sse(reg),sse(r/m) mod=3 reg=4 rm=0      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xE1: /* 0Fh 12h E1h MOVHLPS sse(reg),sse(r/m) mod=3 reg=4 rm=1      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xE2: /* 0Fh 12h E2h MOVHLPS sse(reg),sse(r/m) mod=3 reg=4 rm=2      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xE3: /* 0Fh 12h E3h MOVHLPS sse(reg),sse(r/m) mod=3 reg=4 rm=3      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xE4: /* 0Fh 12h E4h MOVHLPS sse(reg),sse(r/m) mod=3 reg=4 rm=4      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xE5: /* 0Fh 12h E5h MOVHLPS sse(reg),sse(r/m) mod=3 reg=4 rm=5      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xE6: /* 0Fh 12h E6h MOVHLPS sse(reg),sse(r/m) mod=3 reg=4 rm=6      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xE7: /* 0Fh 12h E7h MOVHLPS sse(reg),sse(r/m) mod=3 reg=4 rm=7      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xE8: /* 0Fh 12h E8h MOVHLPS sse(reg),sse(r/m) mod=3 reg=5 rm=0      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xE9: /* 0Fh 12h E9h MOVHLPS sse(reg),sse(r/m) mod=3 reg=5 rm=1      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xEA: /* 0Fh 12h EAh MOVHLPS sse(reg),sse(r/m) mod=3 reg=5 rm=2      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xEB: /* 0Fh 12h EBh MOVHLPS sse(reg),sse(r/m) mod=3 reg=5 rm=3      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xEC: /* 0Fh 12h ECh MOVHLPS sse(reg),sse(r/m) mod=3 reg=5 rm=4      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xED: /* 0Fh 12h EDh MOVHLPS sse(reg),sse(r/m) mod=3 reg=5 rm=5      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xEE: /* 0Fh 12h EEh MOVHLPS sse(reg),sse(r/m) mod=3 reg=5 rm=6      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xEF: /* 0Fh 12h EFh MOVHLPS sse(reg),sse(r/m) mod=3 reg=5 rm=7      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xF0: /* 0Fh 12h F0h MOVHLPS sse(reg),sse(r/m) mod=3 reg=6 rm=0      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xF1: /* 0Fh 12h F1h MOVHLPS sse(reg),sse(r/m) mod=3 reg=6 rm=1      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xF2: /* 0Fh 12h F2h MOVHLPS sse(reg),sse(r/m) mod=3 reg=6 rm=2      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xF3: /* 0Fh 12h F3h MOVHLPS sse(reg),sse(r/m) mod=3 reg=6 rm=3      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xF4: /* 0Fh 12h F4h MOVHLPS sse(reg),sse(r/m) mod=3 reg=6 rm=4      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xF5: /* 0Fh 12h F5h MOVHLPS sse(reg),sse(r/m) mod=3 reg=6 rm=5      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xF6: /* 0Fh 12h F6h MOVHLPS sse(reg),sse(r/m) mod=3 reg=6 rm=6      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xF7: /* 0Fh 12h F7h MOVHLPS sse(reg),sse(r/m) mod=3 reg=6 rm=7      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xF8: /* 0Fh 12h F8h MOVHLPS sse(reg),sse(r/m) mod=3 reg=7 rm=0      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xF9: /* 0Fh 12h F9h MOVHLPS sse(reg),sse(r/m) mod=3 reg=7 rm=1      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xFA: /* 0Fh 12h FAh MOVHLPS sse(reg),sse(r/m) mod=3 reg=7 rm=2      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xFB: /* 0Fh 12h FBh MOVHLPS sse(reg),sse(r/m) mod=3 reg=7 rm=3      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xFC: /* 0Fh 12h FCh MOVHLPS sse(reg),sse(r/m) mod=3 reg=7 rm=4      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xFD: /* 0Fh 12h FDh MOVHLPS sse(reg),sse(r/m) mod=3 reg=7 rm=5      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xFE: /* 0Fh 12h FEh MOVHLPS sse(reg),sse(r/m) mod=3 reg=7 rm=6      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                    case 0xFF: /* 0Fh 12h FFh MOVHLPS sse(reg),sse(r/m) mod=3 reg=7 rm=7      spec: 0x0F 0x12 mod/reg/rm mod==3 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVHLPS XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                        break;
                    default:
                        goto _x86decode_illegal_opcode;
                };
/* End of opcodes starting with 0Fh 12h */
                break;
            case 0x13: /* 0Fh 13h        spec:  */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                _x86decode_begin_code32_addr32_opcode_parse_0F13:
/* Opcodes starting with 0Fh 13h */
                switch (mrm.byte) {
                    case 0x00: /* 0Fh 13h 00h MOVLPS sse(r/m),sse(reg) mod=0 reg=0 rm=0      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x01: /* 0Fh 13h 01h MOVLPS sse(r/m),sse(reg) mod=0 reg=0 rm=1      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x02: /* 0Fh 13h 02h MOVLPS sse(r/m),sse(reg) mod=0 reg=0 rm=2      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x03: /* 0Fh 13h 03h MOVLPS sse(r/m),sse(reg) mod=0 reg=0 rm=3      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x04: /* 0Fh 13h 04h MOVLPS sse(r/m),sse(reg) mod=0 reg=0 rm=4      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x05: /* 0Fh 13h 05h MOVLPS sse(r/m),sse(reg) mod=0 reg=0 rm=5      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x06: /* 0Fh 13h 06h MOVLPS sse(r/m),sse(reg) mod=0 reg=0 rm=6      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x07: /* 0Fh 13h 07h MOVLPS sse(r/m),sse(reg) mod=0 reg=0 rm=7      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x08: /* 0Fh 13h 08h MOVLPS sse(r/m),sse(reg) mod=0 reg=1 rm=0      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x09: /* 0Fh 13h 09h MOVLPS sse(r/m),sse(reg) mod=0 reg=1 rm=1      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x0A: /* 0Fh 13h 0Ah MOVLPS sse(r/m),sse(reg) mod=0 reg=1 rm=2      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x0B: /* 0Fh 13h 0Bh MOVLPS sse(r/m),sse(reg) mod=0 reg=1 rm=3      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x0C: /* 0Fh 13h 0Ch MOVLPS sse(r/m),sse(reg) mod=0 reg=1 rm=4      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x0D: /* 0Fh 13h 0Dh MOVLPS sse(r/m),sse(reg) mod=0 reg=1 rm=5      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x0E: /* 0Fh 13h 0Eh MOVLPS sse(r/m),sse(reg) mod=0 reg=1 rm=6      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x0F: /* 0Fh 13h 0Fh MOVLPS sse(r/m),sse(reg) mod=0 reg=1 rm=7      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x10: /* 0Fh 13h 10h MOVLPS sse(r/m),sse(reg) mod=0 reg=2 rm=0      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x11: /* 0Fh 13h 11h MOVLPS sse(r/m),sse(reg) mod=0 reg=2 rm=1      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x12: /* 0Fh 13h 12h MOVLPS sse(r/m),sse(reg) mod=0 reg=2 rm=2      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x13: /* 0Fh 13h 13h MOVLPS sse(r/m),sse(reg) mod=0 reg=2 rm=3      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x14: /* 0Fh 13h 14h MOVLPS sse(r/m),sse(reg) mod=0 reg=2 rm=4      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x15: /* 0Fh 13h 15h MOVLPS sse(r/m),sse(reg) mod=0 reg=2 rm=5      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x16: /* 0Fh 13h 16h MOVLPS sse(r/m),sse(reg) mod=0 reg=2 rm=6      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x17: /* 0Fh 13h 17h MOVLPS sse(r/m),sse(reg) mod=0 reg=2 rm=7      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x18: /* 0Fh 13h 18h MOVLPS sse(r/m),sse(reg) mod=0 reg=3 rm=0      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x19: /* 0Fh 13h 19h MOVLPS sse(r/m),sse(reg) mod=0 reg=3 rm=1      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x1A: /* 0Fh 13h 1Ah MOVLPS sse(r/m),sse(reg) mod=0 reg=3 rm=2      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x1B: /* 0Fh 13h 1Bh MOVLPS sse(r/m),sse(reg) mod=0 reg=3 rm=3      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x1C: /* 0Fh 13h 1Ch MOVLPS sse(r/m),sse(reg) mod=0 reg=3 rm=4      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x1D: /* 0Fh 13h 1Dh MOVLPS sse(r/m),sse(reg) mod=0 reg=3 rm=5      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x1E: /* 0Fh 13h 1Eh MOVLPS sse(r/m),sse(reg) mod=0 reg=3 rm=6      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x1F: /* 0Fh 13h 1Fh MOVLPS sse(r/m),sse(reg) mod=0 reg=3 rm=7      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x20: /* 0Fh 13h 20h MOVLPS sse(r/m),sse(reg) mod=0 reg=4 rm=0      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x21: /* 0Fh 13h 21h MOVLPS sse(r/m),sse(reg) mod=0 reg=4 rm=1      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x22: /* 0Fh 13h 22h MOVLPS sse(r/m),sse(reg) mod=0 reg=4 rm=2      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x23: /* 0Fh 13h 23h MOVLPS sse(r/m),sse(reg) mod=0 reg=4 rm=3      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x24: /* 0Fh 13h 24h MOVLPS sse(r/m),sse(reg) mod=0 reg=4 rm=4      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x25: /* 0Fh 13h 25h MOVLPS sse(r/m),sse(reg) mod=0 reg=4 rm=5      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x26: /* 0Fh 13h 26h MOVLPS sse(r/m),sse(reg) mod=0 reg=4 rm=6      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x27: /* 0Fh 13h 27h MOVLPS sse(r/m),sse(reg) mod=0 reg=4 rm=7      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x28: /* 0Fh 13h 28h MOVLPS sse(r/m),sse(reg) mod=0 reg=5 rm=0      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x29: /* 0Fh 13h 29h MOVLPS sse(r/m),sse(reg) mod=0 reg=5 rm=1      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x2A: /* 0Fh 13h 2Ah MOVLPS sse(r/m),sse(reg) mod=0 reg=5 rm=2      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x2B: /* 0Fh 13h 2Bh MOVLPS sse(r/m),sse(reg) mod=0 reg=5 rm=3      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x2C: /* 0Fh 13h 2Ch MOVLPS sse(r/m),sse(reg) mod=0 reg=5 rm=4      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x2D: /* 0Fh 13h 2Dh MOVLPS sse(r/m),sse(reg) mod=0 reg=5 rm=5      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x2E: /* 0Fh 13h 2Eh MOVLPS sse(r/m),sse(reg) mod=0 reg=5 rm=6      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x2F: /* 0Fh 13h 2Fh MOVLPS sse(r/m),sse(reg) mod=0 reg=5 rm=7      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x30: /* 0Fh 13h 30h MOVLPS sse(r/m),sse(reg) mod=0 reg=6 rm=0      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x31: /* 0Fh 13h 31h MOVLPS sse(r/m),sse(reg) mod=0 reg=6 rm=1      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x32: /* 0Fh 13h 32h MOVLPS sse(r/m),sse(reg) mod=0 reg=6 rm=2      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x33: /* 0Fh 13h 33h MOVLPS sse(r/m),sse(reg) mod=0 reg=6 rm=3      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x34: /* 0Fh 13h 34h MOVLPS sse(r/m),sse(reg) mod=0 reg=6 rm=4      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x35: /* 0Fh 13h 35h MOVLPS sse(r/m),sse(reg) mod=0 reg=6 rm=5      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x36: /* 0Fh 13h 36h MOVLPS sse(r/m),sse(reg) mod=0 reg=6 rm=6      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x37: /* 0Fh 13h 37h MOVLPS sse(r/m),sse(reg) mod=0 reg=6 rm=7      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x38: /* 0Fh 13h 38h MOVLPS sse(r/m),sse(reg) mod=0 reg=7 rm=0      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x39: /* 0Fh 13h 39h MOVLPS sse(r/m),sse(reg) mod=0 reg=7 rm=1      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x3A: /* 0Fh 13h 3Ah MOVLPS sse(r/m),sse(reg) mod=0 reg=7 rm=2      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x3B: /* 0Fh 13h 3Bh MOVLPS sse(r/m),sse(reg) mod=0 reg=7 rm=3      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x3C: /* 0Fh 13h 3Ch MOVLPS sse(r/m),sse(reg) mod=0 reg=7 rm=4      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x3D: /* 0Fh 13h 3Dh MOVLPS sse(r/m),sse(reg) mod=0 reg=7 rm=5      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x3E: /* 0Fh 13h 3Eh MOVLPS sse(r/m),sse(reg) mod=0 reg=7 rm=6      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x3F: /* 0Fh 13h 3Fh MOVLPS sse(r/m),sse(reg) mod=0 reg=7 rm=7      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x40: /* 0Fh 13h 40h MOVLPS sse(r/m),sse(reg) mod=1 reg=0 rm=0      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x41: /* 0Fh 13h 41h MOVLPS sse(r/m),sse(reg) mod=1 reg=0 rm=1      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x42: /* 0Fh 13h 42h MOVLPS sse(r/m),sse(reg) mod=1 reg=0 rm=2      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x43: /* 0Fh 13h 43h MOVLPS sse(r/m),sse(reg) mod=1 reg=0 rm=3      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x44: /* 0Fh 13h 44h MOVLPS sse(r/m),sse(reg) mod=1 reg=0 rm=4      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x45: /* 0Fh 13h 45h MOVLPS sse(r/m),sse(reg) mod=1 reg=0 rm=5      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x46: /* 0Fh 13h 46h MOVLPS sse(r/m),sse(reg) mod=1 reg=0 rm=6      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x47: /* 0Fh 13h 47h MOVLPS sse(r/m),sse(reg) mod=1 reg=0 rm=7      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x48: /* 0Fh 13h 48h MOVLPS sse(r/m),sse(reg) mod=1 reg=1 rm=0      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x49: /* 0Fh 13h 49h MOVLPS sse(r/m),sse(reg) mod=1 reg=1 rm=1      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x4A: /* 0Fh 13h 4Ah MOVLPS sse(r/m),sse(reg) mod=1 reg=1 rm=2      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x4B: /* 0Fh 13h 4Bh MOVLPS sse(r/m),sse(reg) mod=1 reg=1 rm=3      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x4C: /* 0Fh 13h 4Ch MOVLPS sse(r/m),sse(reg) mod=1 reg=1 rm=4      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x4D: /* 0Fh 13h 4Dh MOVLPS sse(r/m),sse(reg) mod=1 reg=1 rm=5      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x4E: /* 0Fh 13h 4Eh MOVLPS sse(r/m),sse(reg) mod=1 reg=1 rm=6      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x4F: /* 0Fh 13h 4Fh MOVLPS sse(r/m),sse(reg) mod=1 reg=1 rm=7      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x50: /* 0Fh 13h 50h MOVLPS sse(r/m),sse(reg) mod=1 reg=2 rm=0      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x51: /* 0Fh 13h 51h MOVLPS sse(r/m),sse(reg) mod=1 reg=2 rm=1      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x52: /* 0Fh 13h 52h MOVLPS sse(r/m),sse(reg) mod=1 reg=2 rm=2      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x53: /* 0Fh 13h 53h MOVLPS sse(r/m),sse(reg) mod=1 reg=2 rm=3      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x54: /* 0Fh 13h 54h MOVLPS sse(r/m),sse(reg) mod=1 reg=2 rm=4      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x55: /* 0Fh 13h 55h MOVLPS sse(r/m),sse(reg) mod=1 reg=2 rm=5      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x56: /* 0Fh 13h 56h MOVLPS sse(r/m),sse(reg) mod=1 reg=2 rm=6      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x57: /* 0Fh 13h 57h MOVLPS sse(r/m),sse(reg) mod=1 reg=2 rm=7      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x58: /* 0Fh 13h 58h MOVLPS sse(r/m),sse(reg) mod=1 reg=3 rm=0      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x59: /* 0Fh 13h 59h MOVLPS sse(r/m),sse(reg) mod=1 reg=3 rm=1      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x5A: /* 0Fh 13h 5Ah MOVLPS sse(r/m),sse(reg) mod=1 reg=3 rm=2      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x5B: /* 0Fh 13h 5Bh MOVLPS sse(r/m),sse(reg) mod=1 reg=3 rm=3      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x5C: /* 0Fh 13h 5Ch MOVLPS sse(r/m),sse(reg) mod=1 reg=3 rm=4      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x5D: /* 0Fh 13h 5Dh MOVLPS sse(r/m),sse(reg) mod=1 reg=3 rm=5      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x5E: /* 0Fh 13h 5Eh MOVLPS sse(r/m),sse(reg) mod=1 reg=3 rm=6      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x5F: /* 0Fh 13h 5Fh MOVLPS sse(r/m),sse(reg) mod=1 reg=3 rm=7      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x60: /* 0Fh 13h 60h MOVLPS sse(r/m),sse(reg) mod=1 reg=4 rm=0      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x61: /* 0Fh 13h 61h MOVLPS sse(r/m),sse(reg) mod=1 reg=4 rm=1      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x62: /* 0Fh 13h 62h MOVLPS sse(r/m),sse(reg) mod=1 reg=4 rm=2      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x63: /* 0Fh 13h 63h MOVLPS sse(r/m),sse(reg) mod=1 reg=4 rm=3      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x64: /* 0Fh 13h 64h MOVLPS sse(r/m),sse(reg) mod=1 reg=4 rm=4      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x65: /* 0Fh 13h 65h MOVLPS sse(r/m),sse(reg) mod=1 reg=4 rm=5      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x66: /* 0Fh 13h 66h MOVLPS sse(r/m),sse(reg) mod=1 reg=4 rm=6      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x67: /* 0Fh 13h 67h MOVLPS sse(r/m),sse(reg) mod=1 reg=4 rm=7      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x68: /* 0Fh 13h 68h MOVLPS sse(r/m),sse(reg) mod=1 reg=5 rm=0      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x69: /* 0Fh 13h 69h MOVLPS sse(r/m),sse(reg) mod=1 reg=5 rm=1      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x6A: /* 0Fh 13h 6Ah MOVLPS sse(r/m),sse(reg) mod=1 reg=5 rm=2      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x6B: /* 0Fh 13h 6Bh MOVLPS sse(r/m),sse(reg) mod=1 reg=5 rm=3      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x6C: /* 0Fh 13h 6Ch MOVLPS sse(r/m),sse(reg) mod=1 reg=5 rm=4      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x6D: /* 0Fh 13h 6Dh MOVLPS sse(r/m),sse(reg) mod=1 reg=5 rm=5      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x6E: /* 0Fh 13h 6Eh MOVLPS sse(r/m),sse(reg) mod=1 reg=5 rm=6      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x6F: /* 0Fh 13h 6Fh MOVLPS sse(r/m),sse(reg) mod=1 reg=5 rm=7      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x70: /* 0Fh 13h 70h MOVLPS sse(r/m),sse(reg) mod=1 reg=6 rm=0      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x71: /* 0Fh 13h 71h MOVLPS sse(r/m),sse(reg) mod=1 reg=6 rm=1      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x72: /* 0Fh 13h 72h MOVLPS sse(r/m),sse(reg) mod=1 reg=6 rm=2      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x73: /* 0Fh 13h 73h MOVLPS sse(r/m),sse(reg) mod=1 reg=6 rm=3      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x74: /* 0Fh 13h 74h MOVLPS sse(r/m),sse(reg) mod=1 reg=6 rm=4      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x75: /* 0Fh 13h 75h MOVLPS sse(r/m),sse(reg) mod=1 reg=6 rm=5      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x76: /* 0Fh 13h 76h MOVLPS sse(r/m),sse(reg) mod=1 reg=6 rm=6      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x77: /* 0Fh 13h 77h MOVLPS sse(r/m),sse(reg) mod=1 reg=6 rm=7      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x78: /* 0Fh 13h 78h MOVLPS sse(r/m),sse(reg) mod=1 reg=7 rm=0      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x79: /* 0Fh 13h 79h MOVLPS sse(r/m),sse(reg) mod=1 reg=7 rm=1      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x7A: /* 0Fh 13h 7Ah MOVLPS sse(r/m),sse(reg) mod=1 reg=7 rm=2      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x7B: /* 0Fh 13h 7Bh MOVLPS sse(r/m),sse(reg) mod=1 reg=7 rm=3      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x7C: /* 0Fh 13h 7Ch MOVLPS sse(r/m),sse(reg) mod=1 reg=7 rm=4      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x7D: /* 0Fh 13h 7Dh MOVLPS sse(r/m),sse(reg) mod=1 reg=7 rm=5      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x7E: /* 0Fh 13h 7Eh MOVLPS sse(r/m),sse(reg) mod=1 reg=7 rm=6      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x7F: /* 0Fh 13h 7Fh MOVLPS sse(r/m),sse(reg) mod=1 reg=7 rm=7      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x80: /* 0Fh 13h 80h MOVLPS sse(r/m),sse(reg) mod=2 reg=0 rm=0      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x81: /* 0Fh 13h 81h MOVLPS sse(r/m),sse(reg) mod=2 reg=0 rm=1      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x82: /* 0Fh 13h 82h MOVLPS sse(r/m),sse(reg) mod=2 reg=0 rm=2      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x83: /* 0Fh 13h 83h MOVLPS sse(r/m),sse(reg) mod=2 reg=0 rm=3      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x84: /* 0Fh 13h 84h MOVLPS sse(r/m),sse(reg) mod=2 reg=0 rm=4      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x85: /* 0Fh 13h 85h MOVLPS sse(r/m),sse(reg) mod=2 reg=0 rm=5      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x86: /* 0Fh 13h 86h MOVLPS sse(r/m),sse(reg) mod=2 reg=0 rm=6      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x87: /* 0Fh 13h 87h MOVLPS sse(r/m),sse(reg) mod=2 reg=0 rm=7      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x88: /* 0Fh 13h 88h MOVLPS sse(r/m),sse(reg) mod=2 reg=1 rm=0      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x89: /* 0Fh 13h 89h MOVLPS sse(r/m),sse(reg) mod=2 reg=1 rm=1      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x8A: /* 0Fh 13h 8Ah MOVLPS sse(r/m),sse(reg) mod=2 reg=1 rm=2      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x8B: /* 0Fh 13h 8Bh MOVLPS sse(r/m),sse(reg) mod=2 reg=1 rm=3      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x8C: /* 0Fh 13h 8Ch MOVLPS sse(r/m),sse(reg) mod=2 reg=1 rm=4      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x8D: /* 0Fh 13h 8Dh MOVLPS sse(r/m),sse(reg) mod=2 reg=1 rm=5      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x8E: /* 0Fh 13h 8Eh MOVLPS sse(r/m),sse(reg) mod=2 reg=1 rm=6      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x8F: /* 0Fh 13h 8Fh MOVLPS sse(r/m),sse(reg) mod=2 reg=1 rm=7      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x90: /* 0Fh 13h 90h MOVLPS sse(r/m),sse(reg) mod=2 reg=2 rm=0      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x91: /* 0Fh 13h 91h MOVLPS sse(r/m),sse(reg) mod=2 reg=2 rm=1      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x92: /* 0Fh 13h 92h MOVLPS sse(r/m),sse(reg) mod=2 reg=2 rm=2      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x93: /* 0Fh 13h 93h MOVLPS sse(r/m),sse(reg) mod=2 reg=2 rm=3      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x94: /* 0Fh 13h 94h MOVLPS sse(r/m),sse(reg) mod=2 reg=2 rm=4      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x95: /* 0Fh 13h 95h MOVLPS sse(r/m),sse(reg) mod=2 reg=2 rm=5      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x96: /* 0Fh 13h 96h MOVLPS sse(r/m),sse(reg) mod=2 reg=2 rm=6      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x97: /* 0Fh 13h 97h MOVLPS sse(r/m),sse(reg) mod=2 reg=2 rm=7      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x98: /* 0Fh 13h 98h MOVLPS sse(r/m),sse(reg) mod=2 reg=3 rm=0      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x99: /* 0Fh 13h 99h MOVLPS sse(r/m),sse(reg) mod=2 reg=3 rm=1      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x9A: /* 0Fh 13h 9Ah MOVLPS sse(r/m),sse(reg) mod=2 reg=3 rm=2      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x9B: /* 0Fh 13h 9Bh MOVLPS sse(r/m),sse(reg) mod=2 reg=3 rm=3      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x9C: /* 0Fh 13h 9Ch MOVLPS sse(r/m),sse(reg) mod=2 reg=3 rm=4      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x9D: /* 0Fh 13h 9Dh MOVLPS sse(r/m),sse(reg) mod=2 reg=3 rm=5      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x9E: /* 0Fh 13h 9Eh MOVLPS sse(r/m),sse(reg) mod=2 reg=3 rm=6      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0x9F: /* 0Fh 13h 9Fh MOVLPS sse(r/m),sse(reg) mod=2 reg=3 rm=7      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0xA0: /* 0Fh 13h A0h MOVLPS sse(r/m),sse(reg) mod=2 reg=4 rm=0      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0xA1: /* 0Fh 13h A1h MOVLPS sse(r/m),sse(reg) mod=2 reg=4 rm=1      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0xA2: /* 0Fh 13h A2h MOVLPS sse(r/m),sse(reg) mod=2 reg=4 rm=2      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0xA3: /* 0Fh 13h A3h MOVLPS sse(r/m),sse(reg) mod=2 reg=4 rm=3      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0xA4: /* 0Fh 13h A4h MOVLPS sse(r/m),sse(reg) mod=2 reg=4 rm=4      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0xA5: /* 0Fh 13h A5h MOVLPS sse(r/m),sse(reg) mod=2 reg=4 rm=5      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0xA6: /* 0Fh 13h A6h MOVLPS sse(r/m),sse(reg) mod=2 reg=4 rm=6      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0xA7: /* 0Fh 13h A7h MOVLPS sse(r/m),sse(reg) mod=2 reg=4 rm=7      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0xA8: /* 0Fh 13h A8h MOVLPS sse(r/m),sse(reg) mod=2 reg=5 rm=0      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0xA9: /* 0Fh 13h A9h MOVLPS sse(r/m),sse(reg) mod=2 reg=5 rm=1      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0xAA: /* 0Fh 13h AAh MOVLPS sse(r/m),sse(reg) mod=2 reg=5 rm=2      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0xAB: /* 0Fh 13h ABh MOVLPS sse(r/m),sse(reg) mod=2 reg=5 rm=3      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0xAC: /* 0Fh 13h ACh MOVLPS sse(r/m),sse(reg) mod=2 reg=5 rm=4      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0xAD: /* 0Fh 13h ADh MOVLPS sse(r/m),sse(reg) mod=2 reg=5 rm=5      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0xAE: /* 0Fh 13h AEh MOVLPS sse(r/m),sse(reg) mod=2 reg=5 rm=6      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0xAF: /* 0Fh 13h AFh MOVLPS sse(r/m),sse(reg) mod=2 reg=5 rm=7      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0xB0: /* 0Fh 13h B0h MOVLPS sse(r/m),sse(reg) mod=2 reg=6 rm=0      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0xB1: /* 0Fh 13h B1h MOVLPS sse(r/m),sse(reg) mod=2 reg=6 rm=1      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0xB2: /* 0Fh 13h B2h MOVLPS sse(r/m),sse(reg) mod=2 reg=6 rm=2      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0xB3: /* 0Fh 13h B3h MOVLPS sse(r/m),sse(reg) mod=2 reg=6 rm=3      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0xB4: /* 0Fh 13h B4h MOVLPS sse(r/m),sse(reg) mod=2 reg=6 rm=4      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0xB5: /* 0Fh 13h B5h MOVLPS sse(r/m),sse(reg) mod=2 reg=6 rm=5      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0xB6: /* 0Fh 13h B6h MOVLPS sse(r/m),sse(reg) mod=2 reg=6 rm=6      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0xB7: /* 0Fh 13h B7h MOVLPS sse(r/m),sse(reg) mod=2 reg=6 rm=7      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0xB8: /* 0Fh 13h B8h MOVLPS sse(r/m),sse(reg) mod=2 reg=7 rm=0      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0xB9: /* 0Fh 13h B9h MOVLPS sse(r/m),sse(reg) mod=2 reg=7 rm=1      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0xBA: /* 0Fh 13h BAh MOVLPS sse(r/m),sse(reg) mod=2 reg=7 rm=2      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0xBB: /* 0Fh 13h BBh MOVLPS sse(r/m),sse(reg) mod=2 reg=7 rm=3      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0xBC: /* 0Fh 13h BCh MOVLPS sse(r/m),sse(reg) mod=2 reg=7 rm=4      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0xBD: /* 0Fh 13h BDh MOVLPS sse(r/m),sse(reg) mod=2 reg=7 rm=5      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0xBE: /* 0Fh 13h BEh MOVLPS sse(r/m),sse(reg) mod=2 reg=7 rm=6      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                    case 0xBF: /* 0Fh 13h BFh MOVLPS sse(r/m),sse(reg) mod=2 reg=7 rm=7      spec: 0x0F 0x13 mod/reg/rm mod!=3 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVLPS %s,XMM%u",IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""),mrm.reg());
                        break;
                    /* opcode 0Fh 13h C0h  not defined */
                    /* opcode 0Fh 13h C1h  not defined */
                    /* opcode 0Fh 13h C2h  not defined */
                    /* opcode 0Fh 13h C3h  not defined */
                    /* opcode 0Fh 13h C4h  not defined */
                    /* opcode 0Fh 13h C5h  not defined */
                    /* opcode 0Fh 13h C6h  not defined */
                    /* opcode 0Fh 13h C7h  not defined */
                    /* opcode 0Fh 13h C8h  not defined */
                    /* opcode 0Fh 13h C9h  not defined */
                    /* opcode 0Fh 13h CAh  not defined */
                    /* opcode 0Fh 13h CBh  not defined */
                    /* opcode 0Fh 13h CCh  not defined */
                    /* opcode 0Fh 13h CDh  not defined */
                    /* opcode 0Fh 13h CEh  not defined */
                    /* opcode 0Fh 13h CFh  not defined */
                    /* opcode 0Fh 13h D0h  not defined */
                    /* opcode 0Fh 13h D1h  not defined */
                    /* opcode 0Fh 13h D2h  not defined */
                    /* opcode 0Fh 13h D3h  not defined */
                    /* opcode 0Fh 13h D4h  not defined */
                    /* opcode 0Fh 13h D5h  not defined */
                    /* opcode 0Fh 13h D6h  not defined */
                    /* opcode 0Fh 13h D7h  not defined */
                    /* opcode 0Fh 13h D8h  not defined */
                    /* opcode 0Fh 13h D9h  not defined */
                    /* opcode 0Fh 13h DAh  not defined */
                    /* opcode 0Fh 13h DBh  not defined */
                    /* opcode 0Fh 13h DCh  not defined */
                    /* opcode 0Fh 13h DDh  not defined */
                    /* opcode 0Fh 13h DEh  not defined */
                    /* opcode 0Fh 13h DFh  not defined */
                    /* opcode 0Fh 13h E0h  not defined */
                    /* opcode 0Fh 13h E1h  not defined */
                    /* opcode 0Fh 13h E2h  not defined */
                    /* opcode 0Fh 13h E3h  not defined */
                    /* opcode 0Fh 13h E4h  not defined */
                    /* opcode 0Fh 13h E5h  not defined */
                    /* opcode 0Fh 13h E6h  not defined */
                    /* opcode 0Fh 13h E7h  not defined */
                    /* opcode 0Fh 13h E8h  not defined */
                    /* opcode 0Fh 13h E9h  not defined */
                    /* opcode 0Fh 13h EAh  not defined */
                    /* opcode 0Fh 13h EBh  not defined */
                    /* opcode 0Fh 13h ECh  not defined */
                    /* opcode 0Fh 13h EDh  not defined */
                    /* opcode 0Fh 13h EEh  not defined */
                    /* opcode 0Fh 13h EFh  not defined */
                    /* opcode 0Fh 13h F0h  not defined */
                    /* opcode 0Fh 13h F1h  not defined */
                    /* opcode 0Fh 13h F2h  not defined */
                    /* opcode 0Fh 13h F3h  not defined */
                    /* opcode 0Fh 13h F4h  not defined */
                    /* opcode 0Fh 13h F5h  not defined */
                    /* opcode 0Fh 13h F6h  not defined */
                    /* opcode 0Fh 13h F7h  not defined */
                    /* opcode 0Fh 13h F8h  not defined */
                    /* opcode 0Fh 13h F9h  not defined */
                    /* opcode 0Fh 13h FAh  not defined */
                    /* opcode 0Fh 13h FBh  not defined */
                    /* opcode 0Fh 13h FCh  not defined */
                    /* opcode 0Fh 13h FDh  not defined */
                    /* opcode 0Fh 13h FEh  not defined */
                    /* opcode 0Fh 13h FFh  not defined */
                    default:
                        goto _x86decode_illegal_opcode;
                };
/* End of opcodes starting with 0Fh 13h */
                break;
            case 0x14: /* 0Fh 14h UNPCKLPS sse(reg),sse(r/m)      spec: 0x0F 0x14 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"UNPCKLPS XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                break;
            case 0x15: /* 0Fh 15h UNPCKHPS sse(reg),sse(r/m)      spec: 0x0F 0x15 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"UNPCKHPS XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                break;
            case 0x16: /* 0Fh 16h        spec:  */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                _x86decode_begin_code32_addr32_opcode_parse_0F16:
/* Opcodes starting with 0Fh 16h */
                switch (mrm.byte) {
                    case 0x00: /* 0Fh 16h 00h MOVHPS sse(reg),sse(r/m) mod=0 reg=0 rm=0      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x01: /* 0Fh 16h 01h MOVHPS sse(reg),sse(r/m) mod=0 reg=0 rm=1      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x02: /* 0Fh 16h 02h MOVHPS sse(reg),sse(r/m) mod=0 reg=0 rm=2      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x03: /* 0Fh 16h 03h MOVHPS sse(reg),sse(r/m) mod=0 reg=0 rm=3      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x04: /* 0Fh 16h 04h MOVHPS sse(reg),sse(r/m) mod=0 reg=0 rm=4      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x05: /* 0Fh 16h 05h MOVHPS sse(reg),sse(r/m) mod=0 reg=0 rm=5      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x06: /* 0Fh 16h 06h MOVHPS sse(reg),sse(r/m) mod=0 reg=0 rm=6      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x07: /* 0Fh 16h 07h MOVHPS sse(reg),sse(r/m) mod=0 reg=0 rm=7      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x08: /* 0Fh 16h 08h MOVHPS sse(reg),sse(r/m) mod=0 reg=1 rm=0      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x09: /* 0Fh 16h 09h MOVHPS sse(reg),sse(r/m) mod=0 reg=1 rm=1      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x0A: /* 0Fh 16h 0Ah MOVHPS sse(reg),sse(r/m) mod=0 reg=1 rm=2      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x0B: /* 0Fh 16h 0Bh MOVHPS sse(reg),sse(r/m) mod=0 reg=1 rm=3      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x0C: /* 0Fh 16h 0Ch MOVHPS sse(reg),sse(r/m) mod=0 reg=1 rm=4      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x0D: /* 0Fh 16h 0Dh MOVHPS sse(reg),sse(r/m) mod=0 reg=1 rm=5      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x0E: /* 0Fh 16h 0Eh MOVHPS sse(reg),sse(r/m) mod=0 reg=1 rm=6      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x0F: /* 0Fh 16h 0Fh MOVHPS sse(reg),sse(r/m) mod=0 reg=1 rm=7      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x10: /* 0Fh 16h 10h MOVHPS sse(reg),sse(r/m) mod=0 reg=2 rm=0      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x11: /* 0Fh 16h 11h MOVHPS sse(reg),sse(r/m) mod=0 reg=2 rm=1      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x12: /* 0Fh 16h 12h MOVHPS sse(reg),sse(r/m) mod=0 reg=2 rm=2      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x13: /* 0Fh 16h 13h MOVHPS sse(reg),sse(r/m) mod=0 reg=2 rm=3      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x14: /* 0Fh 16h 14h MOVHPS sse(reg),sse(r/m) mod=0 reg=2 rm=4      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x15: /* 0Fh 16h 15h MOVHPS sse(reg),sse(r/m) mod=0 reg=2 rm=5      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x16: /* 0Fh 16h 16h MOVHPS sse(reg),sse(r/m) mod=0 reg=2 rm=6      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x17: /* 0Fh 16h 17h MOVHPS sse(reg),sse(r/m) mod=0 reg=2 rm=7      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x18: /* 0Fh 16h 18h MOVHPS sse(reg),sse(r/m) mod=0 reg=3 rm=0      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x19: /* 0Fh 16h 19h MOVHPS sse(reg),sse(r/m) mod=0 reg=3 rm=1      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x1A: /* 0Fh 16h 1Ah MOVHPS sse(reg),sse(r/m) mod=0 reg=3 rm=2      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x1B: /* 0Fh 16h 1Bh MOVHPS sse(reg),sse(r/m) mod=0 reg=3 rm=3      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x1C: /* 0Fh 16h 1Ch MOVHPS sse(reg),sse(r/m) mod=0 reg=3 rm=4      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x1D: /* 0Fh 16h 1Dh MOVHPS sse(reg),sse(r/m) mod=0 reg=3 rm=5      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x1E: /* 0Fh 16h 1Eh MOVHPS sse(reg),sse(r/m) mod=0 reg=3 rm=6      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x1F: /* 0Fh 16h 1Fh MOVHPS sse(reg),sse(r/m) mod=0 reg=3 rm=7      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x20: /* 0Fh 16h 20h MOVHPS sse(reg),sse(r/m) mod=0 reg=4 rm=0      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x21: /* 0Fh 16h 21h MOVHPS sse(reg),sse(r/m) mod=0 reg=4 rm=1      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x22: /* 0Fh 16h 22h MOVHPS sse(reg),sse(r/m) mod=0 reg=4 rm=2      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x23: /* 0Fh 16h 23h MOVHPS sse(reg),sse(r/m) mod=0 reg=4 rm=3      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x24: /* 0Fh 16h 24h MOVHPS sse(reg),sse(r/m) mod=0 reg=4 rm=4      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x25: /* 0Fh 16h 25h MOVHPS sse(reg),sse(r/m) mod=0 reg=4 rm=5      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x26: /* 0Fh 16h 26h MOVHPS sse(reg),sse(r/m) mod=0 reg=4 rm=6      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x27: /* 0Fh 16h 27h MOVHPS sse(reg),sse(r/m) mod=0 reg=4 rm=7      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x28: /* 0Fh 16h 28h MOVHPS sse(reg),sse(r/m) mod=0 reg=5 rm=0      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x29: /* 0Fh 16h 29h MOVHPS sse(reg),sse(r/m) mod=0 reg=5 rm=1      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x2A: /* 0Fh 16h 2Ah MOVHPS sse(reg),sse(r/m) mod=0 reg=5 rm=2      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x2B: /* 0Fh 16h 2Bh MOVHPS sse(reg),sse(r/m) mod=0 reg=5 rm=3      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x2C: /* 0Fh 16h 2Ch MOVHPS sse(reg),sse(r/m) mod=0 reg=5 rm=4      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x2D: /* 0Fh 16h 2Dh MOVHPS sse(reg),sse(r/m) mod=0 reg=5 rm=5      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x2E: /* 0Fh 16h 2Eh MOVHPS sse(reg),sse(r/m) mod=0 reg=5 rm=6      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x2F: /* 0Fh 16h 2Fh MOVHPS sse(reg),sse(r/m) mod=0 reg=5 rm=7      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x30: /* 0Fh 16h 30h MOVHPS sse(reg),sse(r/m) mod=0 reg=6 rm=0      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x31: /* 0Fh 16h 31h MOVHPS sse(reg),sse(r/m) mod=0 reg=6 rm=1      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x32: /* 0Fh 16h 32h MOVHPS sse(reg),sse(r/m) mod=0 reg=6 rm=2      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x33: /* 0Fh 16h 33h MOVHPS sse(reg),sse(r/m) mod=0 reg=6 rm=3      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x34: /* 0Fh 16h 34h MOVHPS sse(reg),sse(r/m) mod=0 reg=6 rm=4      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x35: /* 0Fh 16h 35h MOVHPS sse(reg),sse(r/m) mod=0 reg=6 rm=5      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x36: /* 0Fh 16h 36h MOVHPS sse(reg),sse(r/m) mod=0 reg=6 rm=6      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x37: /* 0Fh 16h 37h MOVHPS sse(reg),sse(r/m) mod=0 reg=6 rm=7      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x38: /* 0Fh 16h 38h MOVHPS sse(reg),sse(r/m) mod=0 reg=7 rm=0      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x39: /* 0Fh 16h 39h MOVHPS sse(reg),sse(r/m) mod=0 reg=7 rm=1      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x3A: /* 0Fh 16h 3Ah MOVHPS sse(reg),sse(r/m) mod=0 reg=7 rm=2      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x3B: /* 0Fh 16h 3Bh MOVHPS sse(reg),sse(r/m) mod=0 reg=7 rm=3      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x3C: /* 0Fh 16h 3Ch MOVHPS sse(reg),sse(r/m) mod=0 reg=7 rm=4      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x3D: /* 0Fh 16h 3Dh MOVHPS sse(reg),sse(r/m) mod=0 reg=7 rm=5      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x3E: /* 0Fh 16h 3Eh MOVHPS sse(reg),sse(r/m) mod=0 reg=7 rm=6      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x3F: /* 0Fh 16h 3Fh MOVHPS sse(reg),sse(r/m) mod=0 reg=7 rm=7      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x40: /* 0Fh 16h 40h MOVHPS sse(reg),sse(r/m) mod=1 reg=0 rm=0      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x41: /* 0Fh 16h 41h MOVHPS sse(reg),sse(r/m) mod=1 reg=0 rm=1      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x42: /* 0Fh 16h 42h MOVHPS sse(reg),sse(r/m) mod=1 reg=0 rm=2      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x43: /* 0Fh 16h 43h MOVHPS sse(reg),sse(r/m) mod=1 reg=0 rm=3      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x44: /* 0Fh 16h 44h MOVHPS sse(reg),sse(r/m) mod=1 reg=0 rm=4      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x45: /* 0Fh 16h 45h MOVHPS sse(reg),sse(r/m) mod=1 reg=0 rm=5      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x46: /* 0Fh 16h 46h MOVHPS sse(reg),sse(r/m) mod=1 reg=0 rm=6      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x47: /* 0Fh 16h 47h MOVHPS sse(reg),sse(r/m) mod=1 reg=0 rm=7      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x48: /* 0Fh 16h 48h MOVHPS sse(reg),sse(r/m) mod=1 reg=1 rm=0      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x49: /* 0Fh 16h 49h MOVHPS sse(reg),sse(r/m) mod=1 reg=1 rm=1      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x4A: /* 0Fh 16h 4Ah MOVHPS sse(reg),sse(r/m) mod=1 reg=1 rm=2      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x4B: /* 0Fh 16h 4Bh MOVHPS sse(reg),sse(r/m) mod=1 reg=1 rm=3      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x4C: /* 0Fh 16h 4Ch MOVHPS sse(reg),sse(r/m) mod=1 reg=1 rm=4      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x4D: /* 0Fh 16h 4Dh MOVHPS sse(reg),sse(r/m) mod=1 reg=1 rm=5      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x4E: /* 0Fh 16h 4Eh MOVHPS sse(reg),sse(r/m) mod=1 reg=1 rm=6      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x4F: /* 0Fh 16h 4Fh MOVHPS sse(reg),sse(r/m) mod=1 reg=1 rm=7      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x50: /* 0Fh 16h 50h MOVHPS sse(reg),sse(r/m) mod=1 reg=2 rm=0      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x51: /* 0Fh 16h 51h MOVHPS sse(reg),sse(r/m) mod=1 reg=2 rm=1      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x52: /* 0Fh 16h 52h MOVHPS sse(reg),sse(r/m) mod=1 reg=2 rm=2      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x53: /* 0Fh 16h 53h MOVHPS sse(reg),sse(r/m) mod=1 reg=2 rm=3      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x54: /* 0Fh 16h 54h MOVHPS sse(reg),sse(r/m) mod=1 reg=2 rm=4      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x55: /* 0Fh 16h 55h MOVHPS sse(reg),sse(r/m) mod=1 reg=2 rm=5      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x56: /* 0Fh 16h 56h MOVHPS sse(reg),sse(r/m) mod=1 reg=2 rm=6      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x57: /* 0Fh 16h 57h MOVHPS sse(reg),sse(r/m) mod=1 reg=2 rm=7      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x58: /* 0Fh 16h 58h MOVHPS sse(reg),sse(r/m) mod=1 reg=3 rm=0      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x59: /* 0Fh 16h 59h MOVHPS sse(reg),sse(r/m) mod=1 reg=3 rm=1      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x5A: /* 0Fh 16h 5Ah MOVHPS sse(reg),sse(r/m) mod=1 reg=3 rm=2      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x5B: /* 0Fh 16h 5Bh MOVHPS sse(reg),sse(r/m) mod=1 reg=3 rm=3      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x5C: /* 0Fh 16h 5Ch MOVHPS sse(reg),sse(r/m) mod=1 reg=3 rm=4      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x5D: /* 0Fh 16h 5Dh MOVHPS sse(reg),sse(r/m) mod=1 reg=3 rm=5      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x5E: /* 0Fh 16h 5Eh MOVHPS sse(reg),sse(r/m) mod=1 reg=3 rm=6      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x5F: /* 0Fh 16h 5Fh MOVHPS sse(reg),sse(r/m) mod=1 reg=3 rm=7      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x60: /* 0Fh 16h 60h MOVHPS sse(reg),sse(r/m) mod=1 reg=4 rm=0      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x61: /* 0Fh 16h 61h MOVHPS sse(reg),sse(r/m) mod=1 reg=4 rm=1      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x62: /* 0Fh 16h 62h MOVHPS sse(reg),sse(r/m) mod=1 reg=4 rm=2      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x63: /* 0Fh 16h 63h MOVHPS sse(reg),sse(r/m) mod=1 reg=4 rm=3      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x64: /* 0Fh 16h 64h MOVHPS sse(reg),sse(r/m) mod=1 reg=4 rm=4      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x65: /* 0Fh 16h 65h MOVHPS sse(reg),sse(r/m) mod=1 reg=4 rm=5      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x66: /* 0Fh 16h 66h MOVHPS sse(reg),sse(r/m) mod=1 reg=4 rm=6      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x67: /* 0Fh 16h 67h MOVHPS sse(reg),sse(r/m) mod=1 reg=4 rm=7      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x68: /* 0Fh 16h 68h MOVHPS sse(reg),sse(r/m) mod=1 reg=5 rm=0      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x69: /* 0Fh 16h 69h MOVHPS sse(reg),sse(r/m) mod=1 reg=5 rm=1      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x6A: /* 0Fh 16h 6Ah MOVHPS sse(reg),sse(r/m) mod=1 reg=5 rm=2      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x6B: /* 0Fh 16h 6Bh MOVHPS sse(reg),sse(r/m) mod=1 reg=5 rm=3      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x6C: /* 0Fh 16h 6Ch MOVHPS sse(reg),sse(r/m) mod=1 reg=5 rm=4      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x6D: /* 0Fh 16h 6Dh MOVHPS sse(reg),sse(r/m) mod=1 reg=5 rm=5      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x6E: /* 0Fh 16h 6Eh MOVHPS sse(reg),sse(r/m) mod=1 reg=5 rm=6      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x6F: /* 0Fh 16h 6Fh MOVHPS sse(reg),sse(r/m) mod=1 reg=5 rm=7      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x70: /* 0Fh 16h 70h MOVHPS sse(reg),sse(r/m) mod=1 reg=6 rm=0      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x71: /* 0Fh 16h 71h MOVHPS sse(reg),sse(r/m) mod=1 reg=6 rm=1      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x72: /* 0Fh 16h 72h MOVHPS sse(reg),sse(r/m) mod=1 reg=6 rm=2      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x73: /* 0Fh 16h 73h MOVHPS sse(reg),sse(r/m) mod=1 reg=6 rm=3      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x74: /* 0Fh 16h 74h MOVHPS sse(reg),sse(r/m) mod=1 reg=6 rm=4      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x75: /* 0Fh 16h 75h MOVHPS sse(reg),sse(r/m) mod=1 reg=6 rm=5      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x76: /* 0Fh 16h 76h MOVHPS sse(reg),sse(r/m) mod=1 reg=6 rm=6      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x77: /* 0Fh 16h 77h MOVHPS sse(reg),sse(r/m) mod=1 reg=6 rm=7      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x78: /* 0Fh 16h 78h MOVHPS sse(reg),sse(r/m) mod=1 reg=7 rm=0      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x79: /* 0Fh 16h 79h MOVHPS sse(reg),sse(r/m) mod=1 reg=7 rm=1      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x7A: /* 0Fh 16h 7Ah MOVHPS sse(reg),sse(r/m) mod=1 reg=7 rm=2      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x7B: /* 0Fh 16h 7Bh MOVHPS sse(reg),sse(r/m) mod=1 reg=7 rm=3      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x7C: /* 0Fh 16h 7Ch MOVHPS sse(reg),sse(r/m) mod=1 reg=7 rm=4      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x7D: /* 0Fh 16h 7Dh MOVHPS sse(reg),sse(r/m) mod=1 reg=7 rm=5      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x7E: /* 0Fh 16h 7Eh MOVHPS sse(reg),sse(r/m) mod=1 reg=7 rm=6      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x7F: /* 0Fh 16h 7Fh MOVHPS sse(reg),sse(r/m) mod=1 reg=7 rm=7      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x80: /* 0Fh 16h 80h MOVHPS sse(reg),sse(r/m) mod=2 reg=0 rm=0      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x81: /* 0Fh 16h 81h MOVHPS sse(reg),sse(r/m) mod=2 reg=0 rm=1      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x82: /* 0Fh 16h 82h MOVHPS sse(reg),sse(r/m) mod=2 reg=0 rm=2      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x83: /* 0Fh 16h 83h MOVHPS sse(reg),sse(r/m) mod=2 reg=0 rm=3      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x84: /* 0Fh 16h 84h MOVHPS sse(reg),sse(r/m) mod=2 reg=0 rm=4      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x85: /* 0Fh 16h 85h MOVHPS sse(reg),sse(r/m) mod=2 reg=0 rm=5      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x86: /* 0Fh 16h 86h MOVHPS sse(reg),sse(r/m) mod=2 reg=0 rm=6      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x87: /* 0Fh 16h 87h MOVHPS sse(reg),sse(r/m) mod=2 reg=0 rm=7      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x88: /* 0Fh 16h 88h MOVHPS sse(reg),sse(r/m) mod=2 reg=1 rm=0      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x89: /* 0Fh 16h 89h MOVHPS sse(reg),sse(r/m) mod=2 reg=1 rm=1      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x8A: /* 0Fh 16h 8Ah MOVHPS sse(reg),sse(r/m) mod=2 reg=1 rm=2      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x8B: /* 0Fh 16h 8Bh MOVHPS sse(reg),sse(r/m) mod=2 reg=1 rm=3      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x8C: /* 0Fh 16h 8Ch MOVHPS sse(reg),sse(r/m) mod=2 reg=1 rm=4      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x8D: /* 0Fh 16h 8Dh MOVHPS sse(reg),sse(r/m) mod=2 reg=1 rm=5      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x8E: /* 0Fh 16h 8Eh MOVHPS sse(reg),sse(r/m) mod=2 reg=1 rm=6      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x8F: /* 0Fh 16h 8Fh MOVHPS sse(reg),sse(r/m) mod=2 reg=1 rm=7      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x90: /* 0Fh 16h 90h MOVHPS sse(reg),sse(r/m) mod=2 reg=2 rm=0      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x91: /* 0Fh 16h 91h MOVHPS sse(reg),sse(r/m) mod=2 reg=2 rm=1      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x92: /* 0Fh 16h 92h MOVHPS sse(reg),sse(r/m) mod=2 reg=2 rm=2      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x93: /* 0Fh 16h 93h MOVHPS sse(reg),sse(r/m) mod=2 reg=2 rm=3      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x94: /* 0Fh 16h 94h MOVHPS sse(reg),sse(r/m) mod=2 reg=2 rm=4      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x95: /* 0Fh 16h 95h MOVHPS sse(reg),sse(r/m) mod=2 reg=2 rm=5      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x96: /* 0Fh 16h 96h MOVHPS sse(reg),sse(r/m) mod=2 reg=2 rm=6      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x97: /* 0Fh 16h 97h MOVHPS sse(reg),sse(r/m) mod=2 reg=2 rm=7      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x98: /* 0Fh 16h 98h MOVHPS sse(reg),sse(r/m) mod=2 reg=3 rm=0      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x99: /* 0Fh 16h 99h MOVHPS sse(reg),sse(r/m) mod=2 reg=3 rm=1      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x9A: /* 0Fh 16h 9Ah MOVHPS sse(reg),sse(r/m) mod=2 reg=3 rm=2      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x9B: /* 0Fh 16h 9Bh MOVHPS sse(reg),sse(r/m) mod=2 reg=3 rm=3      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x9C: /* 0Fh 16h 9Ch MOVHPS sse(reg),sse(r/m) mod=2 reg=3 rm=4      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x9D: /* 0Fh 16h 9Dh MOVHPS sse(reg),sse(r/m) mod=2 reg=3 rm=5      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x9E: /* 0Fh 16h 9Eh MOVHPS sse(reg),sse(r/m) mod=2 reg=3 rm=6      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0x9F: /* 0Fh 16h 9Fh MOVHPS sse(reg),sse(r/m) mod=2 reg=3 rm=7      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0xA0: /* 0Fh 16h A0h MOVHPS sse(reg),sse(r/m) mod=2 reg=4 rm=0      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0xA1: /* 0Fh 16h A1h MOVHPS sse(reg),sse(r/m) mod=2 reg=4 rm=1      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0xA2: /* 0Fh 16h A2h MOVHPS sse(reg),sse(r/m) mod=2 reg=4 rm=2      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0xA3: /* 0Fh 16h A3h MOVHPS sse(reg),sse(r/m) mod=2 reg=4 rm=3      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0xA4: /* 0Fh 16h A4h MOVHPS sse(reg),sse(r/m) mod=2 reg=4 rm=4      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0xA5: /* 0Fh 16h A5h MOVHPS sse(reg),sse(r/m) mod=2 reg=4 rm=5      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0xA6: /* 0Fh 16h A6h MOVHPS sse(reg),sse(r/m) mod=2 reg=4 rm=6      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0xA7: /* 0Fh 16h A7h MOVHPS sse(reg),sse(r/m) mod=2 reg=4 rm=7      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0xA8: /* 0Fh 16h A8h MOVHPS sse(reg),sse(r/m) mod=2 reg=5 rm=0      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0xA9: /* 0Fh 16h A9h MOVHPS sse(reg),sse(r/m) mod=2 reg=5 rm=1      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0xAA: /* 0Fh 16h AAh MOVHPS sse(reg),sse(r/m) mod=2 reg=5 rm=2      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0xAB: /* 0Fh 16h ABh MOVHPS sse(reg),sse(r/m) mod=2 reg=5 rm=3      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0xAC: /* 0Fh 16h ACh MOVHPS sse(reg),sse(r/m) mod=2 reg=5 rm=4      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0xAD: /* 0Fh 16h ADh MOVHPS sse(reg),sse(r/m) mod=2 reg=5 rm=5      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0xAE: /* 0Fh 16h AEh MOVHPS sse(reg),sse(r/m) mod=2 reg=5 rm=6      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0xAF: /* 0Fh 16h AFh MOVHPS sse(reg),sse(r/m) mod=2 reg=5 rm=7      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0xB0: /* 0Fh 16h B0h MOVHPS sse(reg),sse(r/m) mod=2 reg=6 rm=0      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0xB1: /* 0Fh 16h B1h MOVHPS sse(reg),sse(r/m) mod=2 reg=6 rm=1      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0xB2: /* 0Fh 16h B2h MOVHPS sse(reg),sse(r/m) mod=2 reg=6 rm=2      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0xB3: /* 0Fh 16h B3h MOVHPS sse(reg),sse(r/m) mod=2 reg=6 rm=3      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0xB4: /* 0Fh 16h B4h MOVHPS sse(reg),sse(r/m) mod=2 reg=6 rm=4      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0xB5: /* 0Fh 16h B5h MOVHPS sse(reg),sse(r/m) mod=2 reg=6 rm=5      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0xB6: /* 0Fh 16h B6h MOVHPS sse(reg),sse(r/m) mod=2 reg=6 rm=6      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0xB7: /* 0Fh 16h B7h MOVHPS sse(reg),sse(r/m) mod=2 reg=6 rm=7      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0xB8: /* 0Fh 16h B8h MOVHPS sse(reg),sse(r/m) mod=2 reg=7 rm=0      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0xB9: /* 0Fh 16h B9h MOVHPS sse(reg),sse(r/m) mod=2 reg=7 rm=1      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0xBA: /* 0Fh 16h BAh MOVHPS sse(reg),sse(r/m) mod=2 reg=7 rm=2      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0xBB: /* 0Fh 16h BBh MOVHPS sse(reg),sse(r/m) mod=2 reg=7 rm=3      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0xBC: /* 0Fh 16h BCh MOVHPS sse(reg),sse(r/m) mod=2 reg=7 rm=4      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0xBD: /* 0Fh 16h BDh MOVHPS sse(reg),sse(r/m) mod=2 reg=7 rm=5      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0xBE: /* 0Fh 16h BEh MOVHPS sse(reg),sse(r/m) mod=2 reg=7 rm=6      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                    case 0xBF: /* 0Fh 16h BFh MOVHPS sse(reg),sse(r/m) mod=2 reg=7 rm=7      spec: 0x0F 0x16 mod/reg/rm mod!=3 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVHPS XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                        break;
                    case 0xC0: /* 0Fh 16h C0h MOVLHPS sse(reg),sse(r/m) mod=3 reg=0 rm=0      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xC1: /* 0Fh 16h C1h MOVLHPS sse(reg),sse(r/m) mod=3 reg=0 rm=1      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xC2: /* 0Fh 16h C2h MOVLHPS sse(reg),sse(r/m) mod=3 reg=0 rm=2      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xC3: /* 0Fh 16h C3h MOVLHPS sse(reg),sse(r/m) mod=3 reg=0 rm=3      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xC4: /* 0Fh 16h C4h MOVLHPS sse(reg),sse(r/m) mod=3 reg=0 rm=4      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xC5: /* 0Fh 16h C5h MOVLHPS sse(reg),sse(r/m) mod=3 reg=0 rm=5      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xC6: /* 0Fh 16h C6h MOVLHPS sse(reg),sse(r/m) mod=3 reg=0 rm=6      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xC7: /* 0Fh 16h C7h MOVLHPS sse(reg),sse(r/m) mod=3 reg=0 rm=7      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xC8: /* 0Fh 16h C8h MOVLHPS sse(reg),sse(r/m) mod=3 reg=1 rm=0      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xC9: /* 0Fh 16h C9h MOVLHPS sse(reg),sse(r/m) mod=3 reg=1 rm=1      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xCA: /* 0Fh 16h CAh MOVLHPS sse(reg),sse(r/m) mod=3 reg=1 rm=2      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xCB: /* 0Fh 16h CBh MOVLHPS sse(reg),sse(r/m) mod=3 reg=1 rm=3      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xCC: /* 0Fh 16h CCh MOVLHPS sse(reg),sse(r/m) mod=3 reg=1 rm=4      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xCD: /* 0Fh 16h CDh MOVLHPS sse(reg),sse(r/m) mod=3 reg=1 rm=5      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xCE: /* 0Fh 16h CEh MOVLHPS sse(reg),sse(r/m) mod=3 reg=1 rm=6      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xCF: /* 0Fh 16h CFh MOVLHPS sse(reg),sse(r/m) mod=3 reg=1 rm=7      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xD0: /* 0Fh 16h D0h MOVLHPS sse(reg),sse(r/m) mod=3 reg=2 rm=0      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xD1: /* 0Fh 16h D1h MOVLHPS sse(reg),sse(r/m) mod=3 reg=2 rm=1      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xD2: /* 0Fh 16h D2h MOVLHPS sse(reg),sse(r/m) mod=3 reg=2 rm=2      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xD3: /* 0Fh 16h D3h MOVLHPS sse(reg),sse(r/m) mod=3 reg=2 rm=3      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xD4: /* 0Fh 16h D4h MOVLHPS sse(reg),sse(r/m) mod=3 reg=2 rm=4      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xD5: /* 0Fh 16h D5h MOVLHPS sse(reg),sse(r/m) mod=3 reg=2 rm=5      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xD6: /* 0Fh 16h D6h MOVLHPS sse(reg),sse(r/m) mod=3 reg=2 rm=6      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xD7: /* 0Fh 16h D7h MOVLHPS sse(reg),sse(r/m) mod=3 reg=2 rm=7      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xD8: /* 0Fh 16h D8h MOVLHPS sse(reg),sse(r/m) mod=3 reg=3 rm=0      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xD9: /* 0Fh 16h D9h MOVLHPS sse(reg),sse(r/m) mod=3 reg=3 rm=1      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xDA: /* 0Fh 16h DAh MOVLHPS sse(reg),sse(r/m) mod=3 reg=3 rm=2      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xDB: /* 0Fh 16h DBh MOVLHPS sse(reg),sse(r/m) mod=3 reg=3 rm=3      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xDC: /* 0Fh 16h DCh MOVLHPS sse(reg),sse(r/m) mod=3 reg=3 rm=4      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xDD: /* 0Fh 16h DDh MOVLHPS sse(reg),sse(r/m) mod=3 reg=3 rm=5      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xDE: /* 0Fh 16h DEh MOVLHPS sse(reg),sse(r/m) mod=3 reg=3 rm=6      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xDF: /* 0Fh 16h DFh MOVLHPS sse(reg),sse(r/m) mod=3 reg=3 rm=7      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xE0: /* 0Fh 16h E0h MOVLHPS sse(reg),sse(r/m) mod=3 reg=4 rm=0      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xE1: /* 0Fh 16h E1h MOVLHPS sse(reg),sse(r/m) mod=3 reg=4 rm=1      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xE2: /* 0Fh 16h E2h MOVLHPS sse(reg),sse(r/m) mod=3 reg=4 rm=2      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xE3: /* 0Fh 16h E3h MOVLHPS sse(reg),sse(r/m) mod=3 reg=4 rm=3      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xE4: /* 0Fh 16h E4h MOVLHPS sse(reg),sse(r/m) mod=3 reg=4 rm=4      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xE5: /* 0Fh 16h E5h MOVLHPS sse(reg),sse(r/m) mod=3 reg=4 rm=5      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xE6: /* 0Fh 16h E6h MOVLHPS sse(reg),sse(r/m) mod=3 reg=4 rm=6      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xE7: /* 0Fh 16h E7h MOVLHPS sse(reg),sse(r/m) mod=3 reg=4 rm=7      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xE8: /* 0Fh 16h E8h MOVLHPS sse(reg),sse(r/m) mod=3 reg=5 rm=0      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xE9: /* 0Fh 16h E9h MOVLHPS sse(reg),sse(r/m) mod=3 reg=5 rm=1      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xEA: /* 0Fh 16h EAh MOVLHPS sse(reg),sse(r/m) mod=3 reg=5 rm=2      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xEB: /* 0Fh 16h EBh MOVLHPS sse(reg),sse(r/m) mod=3 reg=5 rm=3      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xEC: /* 0Fh 16h ECh MOVLHPS sse(reg),sse(r/m) mod=3 reg=5 rm=4      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xED: /* 0Fh 16h EDh MOVLHPS sse(reg),sse(r/m) mod=3 reg=5 rm=5      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xEE: /* 0Fh 16h EEh MOVLHPS sse(reg),sse(r/m) mod=3 reg=5 rm=6      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xEF: /* 0Fh 16h EFh MOVLHPS sse(reg),sse(r/m) mod=3 reg=5 rm=7      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xF0: /* 0Fh 16h F0h MOVLHPS sse(reg),sse(r/m) mod=3 reg=6 rm=0      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xF1: /* 0Fh 16h F1h MOVLHPS sse(reg),sse(r/m) mod=3 reg=6 rm=1      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xF2: /* 0Fh 16h F2h MOVLHPS sse(reg),sse(r/m) mod=3 reg=6 rm=2      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xF3: /* 0Fh 16h F3h MOVLHPS sse(reg),sse(r/m) mod=3 reg=6 rm=3      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xF4: /* 0Fh 16h F4h MOVLHPS sse(reg),sse(r/m) mod=3 reg=6 rm=4      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xF5: /* 0Fh 16h F5h MOVLHPS sse(reg),sse(r/m) mod=3 reg=6 rm=5      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xF6: /* 0Fh 16h F6h MOVLHPS sse(reg),sse(r/m) mod=3 reg=6 rm=6      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xF7: /* 0Fh 16h F7h MOVLHPS sse(reg),sse(r/m) mod=3 reg=6 rm=7      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xF8: /* 0Fh 16h F8h MOVLHPS sse(reg),sse(r/m) mod=3 reg=7 rm=0      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xF9: /* 0Fh 16h F9h MOVLHPS sse(reg),sse(r/m) mod=3 reg=7 rm=1      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xFA: /* 0Fh 16h FAh MOVLHPS sse(reg),sse(r/m) mod=3 reg=7 rm=2      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xFB: /* 0Fh 16h FBh MOVLHPS sse(reg),sse(r/m) mod=3 reg=7 rm=3      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xFC: /* 0Fh 16h FCh MOVLHPS sse(reg),sse(r/m) mod=3 reg=7 rm=4      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xFD: /* 0Fh 16h FDh MOVLHPS sse(reg),sse(r/m) mod=3 reg=7 rm=5      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xFE: /* 0Fh 16h FEh MOVLHPS sse(reg),sse(r/m) mod=3 reg=7 rm=6      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                    case 0xFF: /* 0Fh 16h FFh MOVLHPS sse(reg),sse(r/m) mod=3 reg=7 rm=7      spec: 0x0F 0x16 mod/reg/rm mod==3 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVLHPS XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                        break;
                    default:
                        goto _x86decode_illegal_opcode;
                };
/* End of opcodes starting with 0Fh 16h */
                break;
            case 0x17: /* 0Fh 17h        spec:  */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                _x86decode_begin_code32_addr32_opcode_parse_0F17:
/* Opcodes starting with 0Fh 17h */
                switch (mrm.byte) {
                    case 0x00: /* 0Fh 17h 00h MOVHPS sse(r/m),sse(reg) mod=0 reg=0 rm=0      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x01: /* 0Fh 17h 01h MOVHPS sse(r/m),sse(reg) mod=0 reg=0 rm=1      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x02: /* 0Fh 17h 02h MOVHPS sse(r/m),sse(reg) mod=0 reg=0 rm=2      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x03: /* 0Fh 17h 03h MOVHPS sse(r/m),sse(reg) mod=0 reg=0 rm=3      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x04: /* 0Fh 17h 04h MOVHPS sse(r/m),sse(reg) mod=0 reg=0 rm=4      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x05: /* 0Fh 17h 05h MOVHPS sse(r/m),sse(reg) mod=0 reg=0 rm=5      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x06: /* 0Fh 17h 06h MOVHPS sse(r/m),sse(reg) mod=0 reg=0 rm=6      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x07: /* 0Fh 17h 07h MOVHPS sse(r/m),sse(reg) mod=0 reg=0 rm=7      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x08: /* 0Fh 17h 08h MOVHPS sse(r/m),sse(reg) mod=0 reg=1 rm=0      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x09: /* 0Fh 17h 09h MOVHPS sse(r/m),sse(reg) mod=0 reg=1 rm=1      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x0A: /* 0Fh 17h 0Ah MOVHPS sse(r/m),sse(reg) mod=0 reg=1 rm=2      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x0B: /* 0Fh 17h 0Bh MOVHPS sse(r/m),sse(reg) mod=0 reg=1 rm=3      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x0C: /* 0Fh 17h 0Ch MOVHPS sse(r/m),sse(reg) mod=0 reg=1 rm=4      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x0D: /* 0Fh 17h 0Dh MOVHPS sse(r/m),sse(reg) mod=0 reg=1 rm=5      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x0E: /* 0Fh 17h 0Eh MOVHPS sse(r/m),sse(reg) mod=0 reg=1 rm=6      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x0F: /* 0Fh 17h 0Fh MOVHPS sse(r/m),sse(reg) mod=0 reg=1 rm=7      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x10: /* 0Fh 17h 10h MOVHPS sse(r/m),sse(reg) mod=0 reg=2 rm=0      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x11: /* 0Fh 17h 11h MOVHPS sse(r/m),sse(reg) mod=0 reg=2 rm=1      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x12: /* 0Fh 17h 12h MOVHPS sse(r/m),sse(reg) mod=0 reg=2 rm=2      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x13: /* 0Fh 17h 13h MOVHPS sse(r/m),sse(reg) mod=0 reg=2 rm=3      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x14: /* 0Fh 17h 14h MOVHPS sse(r/m),sse(reg) mod=0 reg=2 rm=4      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x15: /* 0Fh 17h 15h MOVHPS sse(r/m),sse(reg) mod=0 reg=2 rm=5      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x16: /* 0Fh 17h 16h MOVHPS sse(r/m),sse(reg) mod=0 reg=2 rm=6      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x17: /* 0Fh 17h 17h MOVHPS sse(r/m),sse(reg) mod=0 reg=2 rm=7      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x18: /* 0Fh 17h 18h MOVHPS sse(r/m),sse(reg) mod=0 reg=3 rm=0      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x19: /* 0Fh 17h 19h MOVHPS sse(r/m),sse(reg) mod=0 reg=3 rm=1      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x1A: /* 0Fh 17h 1Ah MOVHPS sse(r/m),sse(reg) mod=0 reg=3 rm=2      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x1B: /* 0Fh 17h 1Bh MOVHPS sse(r/m),sse(reg) mod=0 reg=3 rm=3      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x1C: /* 0Fh 17h 1Ch MOVHPS sse(r/m),sse(reg) mod=0 reg=3 rm=4      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x1D: /* 0Fh 17h 1Dh MOVHPS sse(r/m),sse(reg) mod=0 reg=3 rm=5      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x1E: /* 0Fh 17h 1Eh MOVHPS sse(r/m),sse(reg) mod=0 reg=3 rm=6      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x1F: /* 0Fh 17h 1Fh MOVHPS sse(r/m),sse(reg) mod=0 reg=3 rm=7      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x20: /* 0Fh 17h 20h MOVHPS sse(r/m),sse(reg) mod=0 reg=4 rm=0      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x21: /* 0Fh 17h 21h MOVHPS sse(r/m),sse(reg) mod=0 reg=4 rm=1      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x22: /* 0Fh 17h 22h MOVHPS sse(r/m),sse(reg) mod=0 reg=4 rm=2      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x23: /* 0Fh 17h 23h MOVHPS sse(r/m),sse(reg) mod=0 reg=4 rm=3      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x24: /* 0Fh 17h 24h MOVHPS sse(r/m),sse(reg) mod=0 reg=4 rm=4      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x25: /* 0Fh 17h 25h MOVHPS sse(r/m),sse(reg) mod=0 reg=4 rm=5      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x26: /* 0Fh 17h 26h MOVHPS sse(r/m),sse(reg) mod=0 reg=4 rm=6      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x27: /* 0Fh 17h 27h MOVHPS sse(r/m),sse(reg) mod=0 reg=4 rm=7      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x28: /* 0Fh 17h 28h MOVHPS sse(r/m),sse(reg) mod=0 reg=5 rm=0      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x29: /* 0Fh 17h 29h MOVHPS sse(r/m),sse(reg) mod=0 reg=5 rm=1      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x2A: /* 0Fh 17h 2Ah MOVHPS sse(r/m),sse(reg) mod=0 reg=5 rm=2      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x2B: /* 0Fh 17h 2Bh MOVHPS sse(r/m),sse(reg) mod=0 reg=5 rm=3      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x2C: /* 0Fh 17h 2Ch MOVHPS sse(r/m),sse(reg) mod=0 reg=5 rm=4      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x2D: /* 0Fh 17h 2Dh MOVHPS sse(r/m),sse(reg) mod=0 reg=5 rm=5      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x2E: /* 0Fh 17h 2Eh MOVHPS sse(r/m),sse(reg) mod=0 reg=5 rm=6      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x2F: /* 0Fh 17h 2Fh MOVHPS sse(r/m),sse(reg) mod=0 reg=5 rm=7      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x30: /* 0Fh 17h 30h MOVHPS sse(r/m),sse(reg) mod=0 reg=6 rm=0      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x31: /* 0Fh 17h 31h MOVHPS sse(r/m),sse(reg) mod=0 reg=6 rm=1      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x32: /* 0Fh 17h 32h MOVHPS sse(r/m),sse(reg) mod=0 reg=6 rm=2      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x33: /* 0Fh 17h 33h MOVHPS sse(r/m),sse(reg) mod=0 reg=6 rm=3      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x34: /* 0Fh 17h 34h MOVHPS sse(r/m),sse(reg) mod=0 reg=6 rm=4      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x35: /* 0Fh 17h 35h MOVHPS sse(r/m),sse(reg) mod=0 reg=6 rm=5      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x36: /* 0Fh 17h 36h MOVHPS sse(r/m),sse(reg) mod=0 reg=6 rm=6      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x37: /* 0Fh 17h 37h MOVHPS sse(r/m),sse(reg) mod=0 reg=6 rm=7      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x38: /* 0Fh 17h 38h MOVHPS sse(r/m),sse(reg) mod=0 reg=7 rm=0      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x39: /* 0Fh 17h 39h MOVHPS sse(r/m),sse(reg) mod=0 reg=7 rm=1      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x3A: /* 0Fh 17h 3Ah MOVHPS sse(r/m),sse(reg) mod=0 reg=7 rm=2      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x3B: /* 0Fh 17h 3Bh MOVHPS sse(r/m),sse(reg) mod=0 reg=7 rm=3      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x3C: /* 0Fh 17h 3Ch MOVHPS sse(r/m),sse(reg) mod=0 reg=7 rm=4      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x3D: /* 0Fh 17h 3Dh MOVHPS sse(r/m),sse(reg) mod=0 reg=7 rm=5      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x3E: /* 0Fh 17h 3Eh MOVHPS sse(r/m),sse(reg) mod=0 reg=7 rm=6      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x3F: /* 0Fh 17h 3Fh MOVHPS sse(r/m),sse(reg) mod=0 reg=7 rm=7      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x40: /* 0Fh 17h 40h MOVHPS sse(r/m),sse(reg) mod=1 reg=0 rm=0      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x41: /* 0Fh 17h 41h MOVHPS sse(r/m),sse(reg) mod=1 reg=0 rm=1      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x42: /* 0Fh 17h 42h MOVHPS sse(r/m),sse(reg) mod=1 reg=0 rm=2      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x43: /* 0Fh 17h 43h MOVHPS sse(r/m),sse(reg) mod=1 reg=0 rm=3      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x44: /* 0Fh 17h 44h MOVHPS sse(r/m),sse(reg) mod=1 reg=0 rm=4      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x45: /* 0Fh 17h 45h MOVHPS sse(r/m),sse(reg) mod=1 reg=0 rm=5      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x46: /* 0Fh 17h 46h MOVHPS sse(r/m),sse(reg) mod=1 reg=0 rm=6      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x47: /* 0Fh 17h 47h MOVHPS sse(r/m),sse(reg) mod=1 reg=0 rm=7      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x48: /* 0Fh 17h 48h MOVHPS sse(r/m),sse(reg) mod=1 reg=1 rm=0      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x49: /* 0Fh 17h 49h MOVHPS sse(r/m),sse(reg) mod=1 reg=1 rm=1      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x4A: /* 0Fh 17h 4Ah MOVHPS sse(r/m),sse(reg) mod=1 reg=1 rm=2      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x4B: /* 0Fh 17h 4Bh MOVHPS sse(r/m),sse(reg) mod=1 reg=1 rm=3      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x4C: /* 0Fh 17h 4Ch MOVHPS sse(r/m),sse(reg) mod=1 reg=1 rm=4      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x4D: /* 0Fh 17h 4Dh MOVHPS sse(r/m),sse(reg) mod=1 reg=1 rm=5      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x4E: /* 0Fh 17h 4Eh MOVHPS sse(r/m),sse(reg) mod=1 reg=1 rm=6      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x4F: /* 0Fh 17h 4Fh MOVHPS sse(r/m),sse(reg) mod=1 reg=1 rm=7      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x50: /* 0Fh 17h 50h MOVHPS sse(r/m),sse(reg) mod=1 reg=2 rm=0      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x51: /* 0Fh 17h 51h MOVHPS sse(r/m),sse(reg) mod=1 reg=2 rm=1      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x52: /* 0Fh 17h 52h MOVHPS sse(r/m),sse(reg) mod=1 reg=2 rm=2      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x53: /* 0Fh 17h 53h MOVHPS sse(r/m),sse(reg) mod=1 reg=2 rm=3      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x54: /* 0Fh 17h 54h MOVHPS sse(r/m),sse(reg) mod=1 reg=2 rm=4      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x55: /* 0Fh 17h 55h MOVHPS sse(r/m),sse(reg) mod=1 reg=2 rm=5      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x56: /* 0Fh 17h 56h MOVHPS sse(r/m),sse(reg) mod=1 reg=2 rm=6      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x57: /* 0Fh 17h 57h MOVHPS sse(r/m),sse(reg) mod=1 reg=2 rm=7      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x58: /* 0Fh 17h 58h MOVHPS sse(r/m),sse(reg) mod=1 reg=3 rm=0      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x59: /* 0Fh 17h 59h MOVHPS sse(r/m),sse(reg) mod=1 reg=3 rm=1      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x5A: /* 0Fh 17h 5Ah MOVHPS sse(r/m),sse(reg) mod=1 reg=3 rm=2      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x5B: /* 0Fh 17h 5Bh MOVHPS sse(r/m),sse(reg) mod=1 reg=3 rm=3      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x5C: /* 0Fh 17h 5Ch MOVHPS sse(r/m),sse(reg) mod=1 reg=3 rm=4      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x5D: /* 0Fh 17h 5Dh MOVHPS sse(r/m),sse(reg) mod=1 reg=3 rm=5      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x5E: /* 0Fh 17h 5Eh MOVHPS sse(r/m),sse(reg) mod=1 reg=3 rm=6      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x5F: /* 0Fh 17h 5Fh MOVHPS sse(r/m),sse(reg) mod=1 reg=3 rm=7      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x60: /* 0Fh 17h 60h MOVHPS sse(r/m),sse(reg) mod=1 reg=4 rm=0      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x61: /* 0Fh 17h 61h MOVHPS sse(r/m),sse(reg) mod=1 reg=4 rm=1      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x62: /* 0Fh 17h 62h MOVHPS sse(r/m),sse(reg) mod=1 reg=4 rm=2      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x63: /* 0Fh 17h 63h MOVHPS sse(r/m),sse(reg) mod=1 reg=4 rm=3      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x64: /* 0Fh 17h 64h MOVHPS sse(r/m),sse(reg) mod=1 reg=4 rm=4      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x65: /* 0Fh 17h 65h MOVHPS sse(r/m),sse(reg) mod=1 reg=4 rm=5      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x66: /* 0Fh 17h 66h MOVHPS sse(r/m),sse(reg) mod=1 reg=4 rm=6      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x67: /* 0Fh 17h 67h MOVHPS sse(r/m),sse(reg) mod=1 reg=4 rm=7      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x68: /* 0Fh 17h 68h MOVHPS sse(r/m),sse(reg) mod=1 reg=5 rm=0      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x69: /* 0Fh 17h 69h MOVHPS sse(r/m),sse(reg) mod=1 reg=5 rm=1      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x6A: /* 0Fh 17h 6Ah MOVHPS sse(r/m),sse(reg) mod=1 reg=5 rm=2      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x6B: /* 0Fh 17h 6Bh MOVHPS sse(r/m),sse(reg) mod=1 reg=5 rm=3      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x6C: /* 0Fh 17h 6Ch MOVHPS sse(r/m),sse(reg) mod=1 reg=5 rm=4      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x6D: /* 0Fh 17h 6Dh MOVHPS sse(r/m),sse(reg) mod=1 reg=5 rm=5      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x6E: /* 0Fh 17h 6Eh MOVHPS sse(r/m),sse(reg) mod=1 reg=5 rm=6      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x6F: /* 0Fh 17h 6Fh MOVHPS sse(r/m),sse(reg) mod=1 reg=5 rm=7      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x70: /* 0Fh 17h 70h MOVHPS sse(r/m),sse(reg) mod=1 reg=6 rm=0      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x71: /* 0Fh 17h 71h MOVHPS sse(r/m),sse(reg) mod=1 reg=6 rm=1      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x72: /* 0Fh 17h 72h MOVHPS sse(r/m),sse(reg) mod=1 reg=6 rm=2      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x73: /* 0Fh 17h 73h MOVHPS sse(r/m),sse(reg) mod=1 reg=6 rm=3      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x74: /* 0Fh 17h 74h MOVHPS sse(r/m),sse(reg) mod=1 reg=6 rm=4      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x75: /* 0Fh 17h 75h MOVHPS sse(r/m),sse(reg) mod=1 reg=6 rm=5      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x76: /* 0Fh 17h 76h MOVHPS sse(r/m),sse(reg) mod=1 reg=6 rm=6      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x77: /* 0Fh 17h 77h MOVHPS sse(r/m),sse(reg) mod=1 reg=6 rm=7      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x78: /* 0Fh 17h 78h MOVHPS sse(r/m),sse(reg) mod=1 reg=7 rm=0      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x79: /* 0Fh 17h 79h MOVHPS sse(r/m),sse(reg) mod=1 reg=7 rm=1      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x7A: /* 0Fh 17h 7Ah MOVHPS sse(r/m),sse(reg) mod=1 reg=7 rm=2      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x7B: /* 0Fh 17h 7Bh MOVHPS sse(r/m),sse(reg) mod=1 reg=7 rm=3      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x7C: /* 0Fh 17h 7Ch MOVHPS sse(r/m),sse(reg) mod=1 reg=7 rm=4      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x7D: /* 0Fh 17h 7Dh MOVHPS sse(r/m),sse(reg) mod=1 reg=7 rm=5      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x7E: /* 0Fh 17h 7Eh MOVHPS sse(r/m),sse(reg) mod=1 reg=7 rm=6      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x7F: /* 0Fh 17h 7Fh MOVHPS sse(r/m),sse(reg) mod=1 reg=7 rm=7      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x80: /* 0Fh 17h 80h MOVHPS sse(r/m),sse(reg) mod=2 reg=0 rm=0      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x81: /* 0Fh 17h 81h MOVHPS sse(r/m),sse(reg) mod=2 reg=0 rm=1      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x82: /* 0Fh 17h 82h MOVHPS sse(r/m),sse(reg) mod=2 reg=0 rm=2      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x83: /* 0Fh 17h 83h MOVHPS sse(r/m),sse(reg) mod=2 reg=0 rm=3      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x84: /* 0Fh 17h 84h MOVHPS sse(r/m),sse(reg) mod=2 reg=0 rm=4      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x85: /* 0Fh 17h 85h MOVHPS sse(r/m),sse(reg) mod=2 reg=0 rm=5      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x86: /* 0Fh 17h 86h MOVHPS sse(r/m),sse(reg) mod=2 reg=0 rm=6      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x87: /* 0Fh 17h 87h MOVHPS sse(r/m),sse(reg) mod=2 reg=0 rm=7      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x88: /* 0Fh 17h 88h MOVHPS sse(r/m),sse(reg) mod=2 reg=1 rm=0      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x89: /* 0Fh 17h 89h MOVHPS sse(r/m),sse(reg) mod=2 reg=1 rm=1      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x8A: /* 0Fh 17h 8Ah MOVHPS sse(r/m),sse(reg) mod=2 reg=1 rm=2      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x8B: /* 0Fh 17h 8Bh MOVHPS sse(r/m),sse(reg) mod=2 reg=1 rm=3      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x8C: /* 0Fh 17h 8Ch MOVHPS sse(r/m),sse(reg) mod=2 reg=1 rm=4      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x8D: /* 0Fh 17h 8Dh MOVHPS sse(r/m),sse(reg) mod=2 reg=1 rm=5      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x8E: /* 0Fh 17h 8Eh MOVHPS sse(r/m),sse(reg) mod=2 reg=1 rm=6      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x8F: /* 0Fh 17h 8Fh MOVHPS sse(r/m),sse(reg) mod=2 reg=1 rm=7      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x90: /* 0Fh 17h 90h MOVHPS sse(r/m),sse(reg) mod=2 reg=2 rm=0      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x91: /* 0Fh 17h 91h MOVHPS sse(r/m),sse(reg) mod=2 reg=2 rm=1      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x92: /* 0Fh 17h 92h MOVHPS sse(r/m),sse(reg) mod=2 reg=2 rm=2      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x93: /* 0Fh 17h 93h MOVHPS sse(r/m),sse(reg) mod=2 reg=2 rm=3      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x94: /* 0Fh 17h 94h MOVHPS sse(r/m),sse(reg) mod=2 reg=2 rm=4      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x95: /* 0Fh 17h 95h MOVHPS sse(r/m),sse(reg) mod=2 reg=2 rm=5      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x96: /* 0Fh 17h 96h MOVHPS sse(r/m),sse(reg) mod=2 reg=2 rm=6      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x97: /* 0Fh 17h 97h MOVHPS sse(r/m),sse(reg) mod=2 reg=2 rm=7      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x98: /* 0Fh 17h 98h MOVHPS sse(r/m),sse(reg) mod=2 reg=3 rm=0      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x99: /* 0Fh 17h 99h MOVHPS sse(r/m),sse(reg) mod=2 reg=3 rm=1      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x9A: /* 0Fh 17h 9Ah MOVHPS sse(r/m),sse(reg) mod=2 reg=3 rm=2      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x9B: /* 0Fh 17h 9Bh MOVHPS sse(r/m),sse(reg) mod=2 reg=3 rm=3      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x9C: /* 0Fh 17h 9Ch MOVHPS sse(r/m),sse(reg) mod=2 reg=3 rm=4      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x9D: /* 0Fh 17h 9Dh MOVHPS sse(r/m),sse(reg) mod=2 reg=3 rm=5      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x9E: /* 0Fh 17h 9Eh MOVHPS sse(r/m),sse(reg) mod=2 reg=3 rm=6      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0x9F: /* 0Fh 17h 9Fh MOVHPS sse(r/m),sse(reg) mod=2 reg=3 rm=7      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0xA0: /* 0Fh 17h A0h MOVHPS sse(r/m),sse(reg) mod=2 reg=4 rm=0      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0xA1: /* 0Fh 17h A1h MOVHPS sse(r/m),sse(reg) mod=2 reg=4 rm=1      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0xA2: /* 0Fh 17h A2h MOVHPS sse(r/m),sse(reg) mod=2 reg=4 rm=2      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0xA3: /* 0Fh 17h A3h MOVHPS sse(r/m),sse(reg) mod=2 reg=4 rm=3      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0xA4: /* 0Fh 17h A4h MOVHPS sse(r/m),sse(reg) mod=2 reg=4 rm=4      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0xA5: /* 0Fh 17h A5h MOVHPS sse(r/m),sse(reg) mod=2 reg=4 rm=5      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0xA6: /* 0Fh 17h A6h MOVHPS sse(r/m),sse(reg) mod=2 reg=4 rm=6      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0xA7: /* 0Fh 17h A7h MOVHPS sse(r/m),sse(reg) mod=2 reg=4 rm=7      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0xA8: /* 0Fh 17h A8h MOVHPS sse(r/m),sse(reg) mod=2 reg=5 rm=0      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0xA9: /* 0Fh 17h A9h MOVHPS sse(r/m),sse(reg) mod=2 reg=5 rm=1      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0xAA: /* 0Fh 17h AAh MOVHPS sse(r/m),sse(reg) mod=2 reg=5 rm=2      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0xAB: /* 0Fh 17h ABh MOVHPS sse(r/m),sse(reg) mod=2 reg=5 rm=3      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0xAC: /* 0Fh 17h ACh MOVHPS sse(r/m),sse(reg) mod=2 reg=5 rm=4      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0xAD: /* 0Fh 17h ADh MOVHPS sse(r/m),sse(reg) mod=2 reg=5 rm=5      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0xAE: /* 0Fh 17h AEh MOVHPS sse(r/m),sse(reg) mod=2 reg=5 rm=6      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0xAF: /* 0Fh 17h AFh MOVHPS sse(r/m),sse(reg) mod=2 reg=5 rm=7      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0xB0: /* 0Fh 17h B0h MOVHPS sse(r/m),sse(reg) mod=2 reg=6 rm=0      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0xB1: /* 0Fh 17h B1h MOVHPS sse(r/m),sse(reg) mod=2 reg=6 rm=1      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0xB2: /* 0Fh 17h B2h MOVHPS sse(r/m),sse(reg) mod=2 reg=6 rm=2      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0xB3: /* 0Fh 17h B3h MOVHPS sse(r/m),sse(reg) mod=2 reg=6 rm=3      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0xB4: /* 0Fh 17h B4h MOVHPS sse(r/m),sse(reg) mod=2 reg=6 rm=4      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0xB5: /* 0Fh 17h B5h MOVHPS sse(r/m),sse(reg) mod=2 reg=6 rm=5      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0xB6: /* 0Fh 17h B6h MOVHPS sse(r/m),sse(reg) mod=2 reg=6 rm=6      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0xB7: /* 0Fh 17h B7h MOVHPS sse(r/m),sse(reg) mod=2 reg=6 rm=7      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0xB8: /* 0Fh 17h B8h MOVHPS sse(r/m),sse(reg) mod=2 reg=7 rm=0      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0xB9: /* 0Fh 17h B9h MOVHPS sse(r/m),sse(reg) mod=2 reg=7 rm=1      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0xBA: /* 0Fh 17h BAh MOVHPS sse(r/m),sse(reg) mod=2 reg=7 rm=2      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0xBB: /* 0Fh 17h BBh MOVHPS sse(r/m),sse(reg) mod=2 reg=7 rm=3      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0xBC: /* 0Fh 17h BCh MOVHPS sse(r/m),sse(reg) mod=2 reg=7 rm=4      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0xBD: /* 0Fh 17h BDh MOVHPS sse(r/m),sse(reg) mod=2 reg=7 rm=5      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0xBE: /* 0Fh 17h BEh MOVHPS sse(r/m),sse(reg) mod=2 reg=7 rm=6      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                    case 0xBF: /* 0Fh 17h BFh MOVHPS sse(r/m),sse(reg) mod=2 reg=7 rm=7      spec: 0x0F 0x17 mod/reg/rm mod!=3 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVHPS %s,XMM%u",IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""),mrm.reg());
                        break;
                    /* opcode 0Fh 17h C0h  not defined */
                    /* opcode 0Fh 17h C1h  not defined */
                    /* opcode 0Fh 17h C2h  not defined */
                    /* opcode 0Fh 17h C3h  not defined */
                    /* opcode 0Fh 17h C4h  not defined */
                    /* opcode 0Fh 17h C5h  not defined */
                    /* opcode 0Fh 17h C6h  not defined */
                    /* opcode 0Fh 17h C7h  not defined */
                    /* opcode 0Fh 17h C8h  not defined */
                    /* opcode 0Fh 17h C9h  not defined */
                    /* opcode 0Fh 17h CAh  not defined */
                    /* opcode 0Fh 17h CBh  not defined */
                    /* opcode 0Fh 17h CCh  not defined */
                    /* opcode 0Fh 17h CDh  not defined */
                    /* opcode 0Fh 17h CEh  not defined */
                    /* opcode 0Fh 17h CFh  not defined */
                    /* opcode 0Fh 17h D0h  not defined */
                    /* opcode 0Fh 17h D1h  not defined */
                    /* opcode 0Fh 17h D2h  not defined */
                    /* opcode 0Fh 17h D3h  not defined */
                    /* opcode 0Fh 17h D4h  not defined */
                    /* opcode 0Fh 17h D5h  not defined */
                    /* opcode 0Fh 17h D6h  not defined */
                    /* opcode 0Fh 17h D7h  not defined */
                    /* opcode 0Fh 17h D8h  not defined */
                    /* opcode 0Fh 17h D9h  not defined */
                    /* opcode 0Fh 17h DAh  not defined */
                    /* opcode 0Fh 17h DBh  not defined */
                    /* opcode 0Fh 17h DCh  not defined */
                    /* opcode 0Fh 17h DDh  not defined */
                    /* opcode 0Fh 17h DEh  not defined */
                    /* opcode 0Fh 17h DFh  not defined */
                    /* opcode 0Fh 17h E0h  not defined */
                    /* opcode 0Fh 17h E1h  not defined */
                    /* opcode 0Fh 17h E2h  not defined */
                    /* opcode 0Fh 17h E3h  not defined */
                    /* opcode 0Fh 17h E4h  not defined */
                    /* opcode 0Fh 17h E5h  not defined */
                    /* opcode 0Fh 17h E6h  not defined */
                    /* opcode 0Fh 17h E7h  not defined */
                    /* opcode 0Fh 17h E8h  not defined */
                    /* opcode 0Fh 17h E9h  not defined */
                    /* opcode 0Fh 17h EAh  not defined */
                    /* opcode 0Fh 17h EBh  not defined */
                    /* opcode 0Fh 17h ECh  not defined */
                    /* opcode 0Fh 17h EDh  not defined */
                    /* opcode 0Fh 17h EEh  not defined */
                    /* opcode 0Fh 17h EFh  not defined */
                    /* opcode 0Fh 17h F0h  not defined */
                    /* opcode 0Fh 17h F1h  not defined */
                    /* opcode 0Fh 17h F2h  not defined */
                    /* opcode 0Fh 17h F3h  not defined */
                    /* opcode 0Fh 17h F4h  not defined */
                    /* opcode 0Fh 17h F5h  not defined */
                    /* opcode 0Fh 17h F6h  not defined */
                    /* opcode 0Fh 17h F7h  not defined */
                    /* opcode 0Fh 17h F8h  not defined */
                    /* opcode 0Fh 17h F9h  not defined */
                    /* opcode 0Fh 17h FAh  not defined */
                    /* opcode 0Fh 17h FBh  not defined */
                    /* opcode 0Fh 17h FCh  not defined */
                    /* opcode 0Fh 17h FDh  not defined */
                    /* opcode 0Fh 17h FEh  not defined */
                    /* opcode 0Fh 17h FFh  not defined */
                    default:
                        goto _x86decode_illegal_opcode;
                };
/* End of opcodes starting with 0Fh 17h */
                break;
            case 0x18: /* 0Fh 18h        spec:  */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                _x86decode_begin_code32_addr32_opcode_parse_0F18:
/* Opcodes starting with 0Fh 18h */
                switch (mrm.byte) {
                    case 0x00: /* 0Fh 18h 00h PREFETCHNTA b(r/m) mod=0 reg=0 rm=0      spec: 0x0F 0x18 mod/reg/rm /0 mod!=3 */
                    case 0x01: /* 0Fh 18h 01h PREFETCHNTA b(r/m) mod=0 reg=0 rm=1      spec: 0x0F 0x18 mod/reg/rm /0 mod!=3 */
                    case 0x02: /* 0Fh 18h 02h PREFETCHNTA b(r/m) mod=0 reg=0 rm=2      spec: 0x0F 0x18 mod/reg/rm /0 mod!=3 */
                    case 0x03: /* 0Fh 18h 03h PREFETCHNTA b(r/m) mod=0 reg=0 rm=3      spec: 0x0F 0x18 mod/reg/rm /0 mod!=3 */
                    case 0x04: /* 0Fh 18h 04h PREFETCHNTA b(r/m) mod=0 reg=0 rm=4      spec: 0x0F 0x18 mod/reg/rm /0 mod!=3 */
                    case 0x05: /* 0Fh 18h 05h PREFETCHNTA b(r/m) mod=0 reg=0 rm=5      spec: 0x0F 0x18 mod/reg/rm /0 mod!=3 */
                    case 0x06: /* 0Fh 18h 06h PREFETCHNTA b(r/m) mod=0 reg=0 rm=6      spec: 0x0F 0x18 mod/reg/rm /0 mod!=3 */
                    case 0x07: /* 0Fh 18h 07h PREFETCHNTA b(r/m) mod=0 reg=0 rm=7      spec: 0x0F 0x18 mod/reg/rm /0 mod!=3 */
                    case 0x40: /* 0Fh 18h 40h PREFETCHNTA b(r/m) mod=1 reg=0 rm=0      spec: 0x0F 0x18 mod/reg/rm /0 mod!=3 */
                    case 0x41: /* 0Fh 18h 41h PREFETCHNTA b(r/m) mod=1 reg=0 rm=1      spec: 0x0F 0x18 mod/reg/rm /0 mod!=3 */
                    case 0x42: /* 0Fh 18h 42h PREFETCHNTA b(r/m) mod=1 reg=0 rm=2      spec: 0x0F 0x18 mod/reg/rm /0 mod!=3 */
                    case 0x43: /* 0Fh 18h 43h PREFETCHNTA b(r/m) mod=1 reg=0 rm=3      spec: 0x0F 0x18 mod/reg/rm /0 mod!=3 */
                    case 0x44: /* 0Fh 18h 44h PREFETCHNTA b(r/m) mod=1 reg=0 rm=4      spec: 0x0F 0x18 mod/reg/rm /0 mod!=3 */
                    case 0x45: /* 0Fh 18h 45h PREFETCHNTA b(r/m) mod=1 reg=0 rm=5      spec: 0x0F 0x18 mod/reg/rm /0 mod!=3 */
                    case 0x46: /* 0Fh 18h 46h PREFETCHNTA b(r/m) mod=1 reg=0 rm=6      spec: 0x0F 0x18 mod/reg/rm /0 mod!=3 */
                    case 0x47: /* 0Fh 18h 47h PREFETCHNTA b(r/m) mod=1 reg=0 rm=7      spec: 0x0F 0x18 mod/reg/rm /0 mod!=3 */
                    case 0x80: /* 0Fh 18h 80h PREFETCHNTA b(r/m) mod=2 reg=0 rm=0      spec: 0x0F 0x18 mod/reg/rm /0 mod!=3 */
                    case 0x81: /* 0Fh 18h 81h PREFETCHNTA b(r/m) mod=2 reg=0 rm=1      spec: 0x0F 0x18 mod/reg/rm /0 mod!=3 */
                    case 0x82: /* 0Fh 18h 82h PREFETCHNTA b(r/m) mod=2 reg=0 rm=2      spec: 0x0F 0x18 mod/reg/rm /0 mod!=3 */
                    case 0x83: /* 0Fh 18h 83h PREFETCHNTA b(r/m) mod=2 reg=0 rm=3      spec: 0x0F 0x18 mod/reg/rm /0 mod!=3 */
                    case 0x84: /* 0Fh 18h 84h PREFETCHNTA b(r/m) mod=2 reg=0 rm=4      spec: 0x0F 0x18 mod/reg/rm /0 mod!=3 */
                    case 0x85: /* 0Fh 18h 85h PREFETCHNTA b(r/m) mod=2 reg=0 rm=5      spec: 0x0F 0x18 mod/reg/rm /0 mod!=3 */
                    case 0x86: /* 0Fh 18h 86h PREFETCHNTA b(r/m) mod=2 reg=0 rm=6      spec: 0x0F 0x18 mod/reg/rm /0 mod!=3 */
                    case 0x87: /* 0Fh 18h 87h PREFETCHNTA b(r/m) mod=2 reg=0 rm=7      spec: 0x0F 0x18 mod/reg/rm /0 mod!=3 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PREFETCHNTA %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                        break;
                    case 0x08: /* 0Fh 18h 08h PREFETCHT0 b(r/m) mod=0 reg=1 rm=0      spec: 0x0F 0x18 mod/reg/rm /1 mod!=3 */
                    case 0x09: /* 0Fh 18h 09h PREFETCHT0 b(r/m) mod=0 reg=1 rm=1      spec: 0x0F 0x18 mod/reg/rm /1 mod!=3 */
                    case 0x0A: /* 0Fh 18h 0Ah PREFETCHT0 b(r/m) mod=0 reg=1 rm=2      spec: 0x0F 0x18 mod/reg/rm /1 mod!=3 */
                    case 0x0B: /* 0Fh 18h 0Bh PREFETCHT0 b(r/m) mod=0 reg=1 rm=3      spec: 0x0F 0x18 mod/reg/rm /1 mod!=3 */
                    case 0x0C: /* 0Fh 18h 0Ch PREFETCHT0 b(r/m) mod=0 reg=1 rm=4      spec: 0x0F 0x18 mod/reg/rm /1 mod!=3 */
                    case 0x0D: /* 0Fh 18h 0Dh PREFETCHT0 b(r/m) mod=0 reg=1 rm=5      spec: 0x0F 0x18 mod/reg/rm /1 mod!=3 */
                    case 0x0E: /* 0Fh 18h 0Eh PREFETCHT0 b(r/m) mod=0 reg=1 rm=6      spec: 0x0F 0x18 mod/reg/rm /1 mod!=3 */
                    case 0x0F: /* 0Fh 18h 0Fh PREFETCHT0 b(r/m) mod=0 reg=1 rm=7      spec: 0x0F 0x18 mod/reg/rm /1 mod!=3 */
                    case 0x48: /* 0Fh 18h 48h PREFETCHT0 b(r/m) mod=1 reg=1 rm=0      spec: 0x0F 0x18 mod/reg/rm /1 mod!=3 */
                    case 0x49: /* 0Fh 18h 49h PREFETCHT0 b(r/m) mod=1 reg=1 rm=1      spec: 0x0F 0x18 mod/reg/rm /1 mod!=3 */
                    case 0x4A: /* 0Fh 18h 4Ah PREFETCHT0 b(r/m) mod=1 reg=1 rm=2      spec: 0x0F 0x18 mod/reg/rm /1 mod!=3 */
                    case 0x4B: /* 0Fh 18h 4Bh PREFETCHT0 b(r/m) mod=1 reg=1 rm=3      spec: 0x0F 0x18 mod/reg/rm /1 mod!=3 */
                    case 0x4C: /* 0Fh 18h 4Ch PREFETCHT0 b(r/m) mod=1 reg=1 rm=4      spec: 0x0F 0x18 mod/reg/rm /1 mod!=3 */
                    case 0x4D: /* 0Fh 18h 4Dh PREFETCHT0 b(r/m) mod=1 reg=1 rm=5      spec: 0x0F 0x18 mod/reg/rm /1 mod!=3 */
                    case 0x4E: /* 0Fh 18h 4Eh PREFETCHT0 b(r/m) mod=1 reg=1 rm=6      spec: 0x0F 0x18 mod/reg/rm /1 mod!=3 */
                    case 0x4F: /* 0Fh 18h 4Fh PREFETCHT0 b(r/m) mod=1 reg=1 rm=7      spec: 0x0F 0x18 mod/reg/rm /1 mod!=3 */
                    case 0x88: /* 0Fh 18h 88h PREFETCHT0 b(r/m) mod=2 reg=1 rm=0      spec: 0x0F 0x18 mod/reg/rm /1 mod!=3 */
                    case 0x89: /* 0Fh 18h 89h PREFETCHT0 b(r/m) mod=2 reg=1 rm=1      spec: 0x0F 0x18 mod/reg/rm /1 mod!=3 */
                    case 0x8A: /* 0Fh 18h 8Ah PREFETCHT0 b(r/m) mod=2 reg=1 rm=2      spec: 0x0F 0x18 mod/reg/rm /1 mod!=3 */
                    case 0x8B: /* 0Fh 18h 8Bh PREFETCHT0 b(r/m) mod=2 reg=1 rm=3      spec: 0x0F 0x18 mod/reg/rm /1 mod!=3 */
                    case 0x8C: /* 0Fh 18h 8Ch PREFETCHT0 b(r/m) mod=2 reg=1 rm=4      spec: 0x0F 0x18 mod/reg/rm /1 mod!=3 */
                    case 0x8D: /* 0Fh 18h 8Dh PREFETCHT0 b(r/m) mod=2 reg=1 rm=5      spec: 0x0F 0x18 mod/reg/rm /1 mod!=3 */
                    case 0x8E: /* 0Fh 18h 8Eh PREFETCHT0 b(r/m) mod=2 reg=1 rm=6      spec: 0x0F 0x18 mod/reg/rm /1 mod!=3 */
                    case 0x8F: /* 0Fh 18h 8Fh PREFETCHT0 b(r/m) mod=2 reg=1 rm=7      spec: 0x0F 0x18 mod/reg/rm /1 mod!=3 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PREFETCHT0 %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                        break;
                    case 0x10: /* 0Fh 18h 10h PREFETCHT1 b(r/m) mod=0 reg=2 rm=0      spec: 0x0F 0x18 mod/reg/rm /2 mod!=3 */
                    case 0x11: /* 0Fh 18h 11h PREFETCHT1 b(r/m) mod=0 reg=2 rm=1      spec: 0x0F 0x18 mod/reg/rm /2 mod!=3 */
                    case 0x12: /* 0Fh 18h 12h PREFETCHT1 b(r/m) mod=0 reg=2 rm=2      spec: 0x0F 0x18 mod/reg/rm /2 mod!=3 */
                    case 0x13: /* 0Fh 18h 13h PREFETCHT1 b(r/m) mod=0 reg=2 rm=3      spec: 0x0F 0x18 mod/reg/rm /2 mod!=3 */
                    case 0x14: /* 0Fh 18h 14h PREFETCHT1 b(r/m) mod=0 reg=2 rm=4      spec: 0x0F 0x18 mod/reg/rm /2 mod!=3 */
                    case 0x15: /* 0Fh 18h 15h PREFETCHT1 b(r/m) mod=0 reg=2 rm=5      spec: 0x0F 0x18 mod/reg/rm /2 mod!=3 */
                    case 0x16: /* 0Fh 18h 16h PREFETCHT1 b(r/m) mod=0 reg=2 rm=6      spec: 0x0F 0x18 mod/reg/rm /2 mod!=3 */
                    case 0x17: /* 0Fh 18h 17h PREFETCHT1 b(r/m) mod=0 reg=2 rm=7      spec: 0x0F 0x18 mod/reg/rm /2 mod!=3 */
                    case 0x50: /* 0Fh 18h 50h PREFETCHT1 b(r/m) mod=1 reg=2 rm=0      spec: 0x0F 0x18 mod/reg/rm /2 mod!=3 */
                    case 0x51: /* 0Fh 18h 51h PREFETCHT1 b(r/m) mod=1 reg=2 rm=1      spec: 0x0F 0x18 mod/reg/rm /2 mod!=3 */
                    case 0x52: /* 0Fh 18h 52h PREFETCHT1 b(r/m) mod=1 reg=2 rm=2      spec: 0x0F 0x18 mod/reg/rm /2 mod!=3 */
                    case 0x53: /* 0Fh 18h 53h PREFETCHT1 b(r/m) mod=1 reg=2 rm=3      spec: 0x0F 0x18 mod/reg/rm /2 mod!=3 */
                    case 0x54: /* 0Fh 18h 54h PREFETCHT1 b(r/m) mod=1 reg=2 rm=4      spec: 0x0F 0x18 mod/reg/rm /2 mod!=3 */
                    case 0x55: /* 0Fh 18h 55h PREFETCHT1 b(r/m) mod=1 reg=2 rm=5      spec: 0x0F 0x18 mod/reg/rm /2 mod!=3 */
                    case 0x56: /* 0Fh 18h 56h PREFETCHT1 b(r/m) mod=1 reg=2 rm=6      spec: 0x0F 0x18 mod/reg/rm /2 mod!=3 */
                    case 0x57: /* 0Fh 18h 57h PREFETCHT1 b(r/m) mod=1 reg=2 rm=7      spec: 0x0F 0x18 mod/reg/rm /2 mod!=3 */
                    case 0x90: /* 0Fh 18h 90h PREFETCHT1 b(r/m) mod=2 reg=2 rm=0      spec: 0x0F 0x18 mod/reg/rm /2 mod!=3 */
                    case 0x91: /* 0Fh 18h 91h PREFETCHT1 b(r/m) mod=2 reg=2 rm=1      spec: 0x0F 0x18 mod/reg/rm /2 mod!=3 */
                    case 0x92: /* 0Fh 18h 92h PREFETCHT1 b(r/m) mod=2 reg=2 rm=2      spec: 0x0F 0x18 mod/reg/rm /2 mod!=3 */
                    case 0x93: /* 0Fh 18h 93h PREFETCHT1 b(r/m) mod=2 reg=2 rm=3      spec: 0x0F 0x18 mod/reg/rm /2 mod!=3 */
                    case 0x94: /* 0Fh 18h 94h PREFETCHT1 b(r/m) mod=2 reg=2 rm=4      spec: 0x0F 0x18 mod/reg/rm /2 mod!=3 */
                    case 0x95: /* 0Fh 18h 95h PREFETCHT1 b(r/m) mod=2 reg=2 rm=5      spec: 0x0F 0x18 mod/reg/rm /2 mod!=3 */
                    case 0x96: /* 0Fh 18h 96h PREFETCHT1 b(r/m) mod=2 reg=2 rm=6      spec: 0x0F 0x18 mod/reg/rm /2 mod!=3 */
                    case 0x97: /* 0Fh 18h 97h PREFETCHT1 b(r/m) mod=2 reg=2 rm=7      spec: 0x0F 0x18 mod/reg/rm /2 mod!=3 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PREFETCHT1 %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                        break;
                    case 0x18: /* 0Fh 18h 18h PREFETCHT2 b(r/m) mod=0 reg=3 rm=0      spec: 0x0F 0x18 mod/reg/rm /3 mod!=3 */
                    case 0x19: /* 0Fh 18h 19h PREFETCHT2 b(r/m) mod=0 reg=3 rm=1      spec: 0x0F 0x18 mod/reg/rm /3 mod!=3 */
                    case 0x1A: /* 0Fh 18h 1Ah PREFETCHT2 b(r/m) mod=0 reg=3 rm=2      spec: 0x0F 0x18 mod/reg/rm /3 mod!=3 */
                    case 0x1B: /* 0Fh 18h 1Bh PREFETCHT2 b(r/m) mod=0 reg=3 rm=3      spec: 0x0F 0x18 mod/reg/rm /3 mod!=3 */
                    case 0x1C: /* 0Fh 18h 1Ch PREFETCHT2 b(r/m) mod=0 reg=3 rm=4      spec: 0x0F 0x18 mod/reg/rm /3 mod!=3 */
                    case 0x1D: /* 0Fh 18h 1Dh PREFETCHT2 b(r/m) mod=0 reg=3 rm=5      spec: 0x0F 0x18 mod/reg/rm /3 mod!=3 */
                    case 0x1E: /* 0Fh 18h 1Eh PREFETCHT2 b(r/m) mod=0 reg=3 rm=6      spec: 0x0F 0x18 mod/reg/rm /3 mod!=3 */
                    case 0x1F: /* 0Fh 18h 1Fh PREFETCHT2 b(r/m) mod=0 reg=3 rm=7      spec: 0x0F 0x18 mod/reg/rm /3 mod!=3 */
                    case 0x58: /* 0Fh 18h 58h PREFETCHT2 b(r/m) mod=1 reg=3 rm=0      spec: 0x0F 0x18 mod/reg/rm /3 mod!=3 */
                    case 0x59: /* 0Fh 18h 59h PREFETCHT2 b(r/m) mod=1 reg=3 rm=1      spec: 0x0F 0x18 mod/reg/rm /3 mod!=3 */
                    case 0x5A: /* 0Fh 18h 5Ah PREFETCHT2 b(r/m) mod=1 reg=3 rm=2      spec: 0x0F 0x18 mod/reg/rm /3 mod!=3 */
                    case 0x5B: /* 0Fh 18h 5Bh PREFETCHT2 b(r/m) mod=1 reg=3 rm=3      spec: 0x0F 0x18 mod/reg/rm /3 mod!=3 */
                    case 0x5C: /* 0Fh 18h 5Ch PREFETCHT2 b(r/m) mod=1 reg=3 rm=4      spec: 0x0F 0x18 mod/reg/rm /3 mod!=3 */
                    case 0x5D: /* 0Fh 18h 5Dh PREFETCHT2 b(r/m) mod=1 reg=3 rm=5      spec: 0x0F 0x18 mod/reg/rm /3 mod!=3 */
                    case 0x5E: /* 0Fh 18h 5Eh PREFETCHT2 b(r/m) mod=1 reg=3 rm=6      spec: 0x0F 0x18 mod/reg/rm /3 mod!=3 */
                    case 0x5F: /* 0Fh 18h 5Fh PREFETCHT2 b(r/m) mod=1 reg=3 rm=7      spec: 0x0F 0x18 mod/reg/rm /3 mod!=3 */
                    case 0x98: /* 0Fh 18h 98h PREFETCHT2 b(r/m) mod=2 reg=3 rm=0      spec: 0x0F 0x18 mod/reg/rm /3 mod!=3 */
                    case 0x99: /* 0Fh 18h 99h PREFETCHT2 b(r/m) mod=2 reg=3 rm=1      spec: 0x0F 0x18 mod/reg/rm /3 mod!=3 */
                    case 0x9A: /* 0Fh 18h 9Ah PREFETCHT2 b(r/m) mod=2 reg=3 rm=2      spec: 0x0F 0x18 mod/reg/rm /3 mod!=3 */
                    case 0x9B: /* 0Fh 18h 9Bh PREFETCHT2 b(r/m) mod=2 reg=3 rm=3      spec: 0x0F 0x18 mod/reg/rm /3 mod!=3 */
                    case 0x9C: /* 0Fh 18h 9Ch PREFETCHT2 b(r/m) mod=2 reg=3 rm=4      spec: 0x0F 0x18 mod/reg/rm /3 mod!=3 */
                    case 0x9D: /* 0Fh 18h 9Dh PREFETCHT2 b(r/m) mod=2 reg=3 rm=5      spec: 0x0F 0x18 mod/reg/rm /3 mod!=3 */
                    case 0x9E: /* 0Fh 18h 9Eh PREFETCHT2 b(r/m) mod=2 reg=3 rm=6      spec: 0x0F 0x18 mod/reg/rm /3 mod!=3 */
                    case 0x9F: /* 0Fh 18h 9Fh PREFETCHT2 b(r/m) mod=2 reg=3 rm=7      spec: 0x0F 0x18 mod/reg/rm /3 mod!=3 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PREFETCHT2 %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                        break;
                    /* opcode 0Fh 18h 20h  not defined */
                    /* opcode 0Fh 18h 21h  not defined */
                    /* opcode 0Fh 18h 22h  not defined */
                    /* opcode 0Fh 18h 23h  not defined */
                    /* opcode 0Fh 18h 24h  not defined */
                    /* opcode 0Fh 18h 25h  not defined */
                    /* opcode 0Fh 18h 26h  not defined */
                    /* opcode 0Fh 18h 27h  not defined */
                    /* opcode 0Fh 18h 28h  not defined */
                    /* opcode 0Fh 18h 29h  not defined */
                    /* opcode 0Fh 18h 2Ah  not defined */
                    /* opcode 0Fh 18h 2Bh  not defined */
                    /* opcode 0Fh 18h 2Ch  not defined */
                    /* opcode 0Fh 18h 2Dh  not defined */
                    /* opcode 0Fh 18h 2Eh  not defined */
                    /* opcode 0Fh 18h 2Fh  not defined */
                    /* opcode 0Fh 18h 30h  not defined */
                    /* opcode 0Fh 18h 31h  not defined */
                    /* opcode 0Fh 18h 32h  not defined */
                    /* opcode 0Fh 18h 33h  not defined */
                    /* opcode 0Fh 18h 34h  not defined */
                    /* opcode 0Fh 18h 35h  not defined */
                    /* opcode 0Fh 18h 36h  not defined */
                    /* opcode 0Fh 18h 37h  not defined */
                    /* opcode 0Fh 18h 38h  not defined */
                    /* opcode 0Fh 18h 39h  not defined */
                    /* opcode 0Fh 18h 3Ah  not defined */
                    /* opcode 0Fh 18h 3Bh  not defined */
                    /* opcode 0Fh 18h 3Ch  not defined */
                    /* opcode 0Fh 18h 3Dh  not defined */
                    /* opcode 0Fh 18h 3Eh  not defined */
                    /* opcode 0Fh 18h 3Fh  not defined */
                    /* opcode 0Fh 18h 60h  not defined */
                    /* opcode 0Fh 18h 61h  not defined */
                    /* opcode 0Fh 18h 62h  not defined */
                    /* opcode 0Fh 18h 63h  not defined */
                    /* opcode 0Fh 18h 64h  not defined */
                    /* opcode 0Fh 18h 65h  not defined */
                    /* opcode 0Fh 18h 66h  not defined */
                    /* opcode 0Fh 18h 67h  not defined */
                    /* opcode 0Fh 18h 68h  not defined */
                    /* opcode 0Fh 18h 69h  not defined */
                    /* opcode 0Fh 18h 6Ah  not defined */
                    /* opcode 0Fh 18h 6Bh  not defined */
                    /* opcode 0Fh 18h 6Ch  not defined */
                    /* opcode 0Fh 18h 6Dh  not defined */
                    /* opcode 0Fh 18h 6Eh  not defined */
                    /* opcode 0Fh 18h 6Fh  not defined */
                    /* opcode 0Fh 18h 70h  not defined */
                    /* opcode 0Fh 18h 71h  not defined */
                    /* opcode 0Fh 18h 72h  not defined */
                    /* opcode 0Fh 18h 73h  not defined */
                    /* opcode 0Fh 18h 74h  not defined */
                    /* opcode 0Fh 18h 75h  not defined */
                    /* opcode 0Fh 18h 76h  not defined */
                    /* opcode 0Fh 18h 77h  not defined */
                    /* opcode 0Fh 18h 78h  not defined */
                    /* opcode 0Fh 18h 79h  not defined */
                    /* opcode 0Fh 18h 7Ah  not defined */
                    /* opcode 0Fh 18h 7Bh  not defined */
                    /* opcode 0Fh 18h 7Ch  not defined */
                    /* opcode 0Fh 18h 7Dh  not defined */
                    /* opcode 0Fh 18h 7Eh  not defined */
                    /* opcode 0Fh 18h 7Fh  not defined */
                    /* opcode 0Fh 18h A0h  not defined */
                    /* opcode 0Fh 18h A1h  not defined */
                    /* opcode 0Fh 18h A2h  not defined */
                    /* opcode 0Fh 18h A3h  not defined */
                    /* opcode 0Fh 18h A4h  not defined */
                    /* opcode 0Fh 18h A5h  not defined */
                    /* opcode 0Fh 18h A6h  not defined */
                    /* opcode 0Fh 18h A7h  not defined */
                    /* opcode 0Fh 18h A8h  not defined */
                    /* opcode 0Fh 18h A9h  not defined */
                    /* opcode 0Fh 18h AAh  not defined */
                    /* opcode 0Fh 18h ABh  not defined */
                    /* opcode 0Fh 18h ACh  not defined */
                    /* opcode 0Fh 18h ADh  not defined */
                    /* opcode 0Fh 18h AEh  not defined */
                    /* opcode 0Fh 18h AFh  not defined */
                    /* opcode 0Fh 18h B0h  not defined */
                    /* opcode 0Fh 18h B1h  not defined */
                    /* opcode 0Fh 18h B2h  not defined */
                    /* opcode 0Fh 18h B3h  not defined */
                    /* opcode 0Fh 18h B4h  not defined */
                    /* opcode 0Fh 18h B5h  not defined */
                    /* opcode 0Fh 18h B6h  not defined */
                    /* opcode 0Fh 18h B7h  not defined */
                    /* opcode 0Fh 18h B8h  not defined */
                    /* opcode 0Fh 18h B9h  not defined */
                    /* opcode 0Fh 18h BAh  not defined */
                    /* opcode 0Fh 18h BBh  not defined */
                    /* opcode 0Fh 18h BCh  not defined */
                    /* opcode 0Fh 18h BDh  not defined */
                    /* opcode 0Fh 18h BEh  not defined */
                    /* opcode 0Fh 18h BFh  not defined */
                    /* opcode 0Fh 18h C0h  not defined */
                    /* opcode 0Fh 18h C1h  not defined */
                    /* opcode 0Fh 18h C2h  not defined */
                    /* opcode 0Fh 18h C3h  not defined */
                    /* opcode 0Fh 18h C4h  not defined */
                    /* opcode 0Fh 18h C5h  not defined */
                    /* opcode 0Fh 18h C6h  not defined */
                    /* opcode 0Fh 18h C7h  not defined */
                    /* opcode 0Fh 18h C8h  not defined */
                    /* opcode 0Fh 18h C9h  not defined */
                    /* opcode 0Fh 18h CAh  not defined */
                    /* opcode 0Fh 18h CBh  not defined */
                    /* opcode 0Fh 18h CCh  not defined */
                    /* opcode 0Fh 18h CDh  not defined */
                    /* opcode 0Fh 18h CEh  not defined */
                    /* opcode 0Fh 18h CFh  not defined */
                    /* opcode 0Fh 18h D0h  not defined */
                    /* opcode 0Fh 18h D1h  not defined */
                    /* opcode 0Fh 18h D2h  not defined */
                    /* opcode 0Fh 18h D3h  not defined */
                    /* opcode 0Fh 18h D4h  not defined */
                    /* opcode 0Fh 18h D5h  not defined */
                    /* opcode 0Fh 18h D6h  not defined */
                    /* opcode 0Fh 18h D7h  not defined */
                    /* opcode 0Fh 18h D8h  not defined */
                    /* opcode 0Fh 18h D9h  not defined */
                    /* opcode 0Fh 18h DAh  not defined */
                    /* opcode 0Fh 18h DBh  not defined */
                    /* opcode 0Fh 18h DCh  not defined */
                    /* opcode 0Fh 18h DDh  not defined */
                    /* opcode 0Fh 18h DEh  not defined */
                    /* opcode 0Fh 18h DFh  not defined */
                    /* opcode 0Fh 18h E0h  not defined */
                    /* opcode 0Fh 18h E1h  not defined */
                    /* opcode 0Fh 18h E2h  not defined */
                    /* opcode 0Fh 18h E3h  not defined */
                    /* opcode 0Fh 18h E4h  not defined */
                    /* opcode 0Fh 18h E5h  not defined */
                    /* opcode 0Fh 18h E6h  not defined */
                    /* opcode 0Fh 18h E7h  not defined */
                    /* opcode 0Fh 18h E8h  not defined */
                    /* opcode 0Fh 18h E9h  not defined */
                    /* opcode 0Fh 18h EAh  not defined */
                    /* opcode 0Fh 18h EBh  not defined */
                    /* opcode 0Fh 18h ECh  not defined */
                    /* opcode 0Fh 18h EDh  not defined */
                    /* opcode 0Fh 18h EEh  not defined */
                    /* opcode 0Fh 18h EFh  not defined */
                    /* opcode 0Fh 18h F0h  not defined */
                    /* opcode 0Fh 18h F1h  not defined */
                    /* opcode 0Fh 18h F2h  not defined */
                    /* opcode 0Fh 18h F3h  not defined */
                    /* opcode 0Fh 18h F4h  not defined */
                    /* opcode 0Fh 18h F5h  not defined */
                    /* opcode 0Fh 18h F6h  not defined */
                    /* opcode 0Fh 18h F7h  not defined */
                    /* opcode 0Fh 18h F8h  not defined */
                    /* opcode 0Fh 18h F9h  not defined */
                    /* opcode 0Fh 18h FAh  not defined */
                    /* opcode 0Fh 18h FBh  not defined */
                    /* opcode 0Fh 18h FCh  not defined */
                    /* opcode 0Fh 18h FDh  not defined */
                    /* opcode 0Fh 18h FEh  not defined */
                    /* opcode 0Fh 18h FFh  not defined */
                    default:
                        goto _x86decode_illegal_opcode;
                };
/* End of opcodes starting with 0Fh 18h */
                break;
            /* opcode 0Fh 19h  not defined */
            /* opcode 0Fh 1Ah  not defined */
            /* opcode 0Fh 1Bh  not defined */
            /* opcode 0Fh 1Ch  not defined */
            /* opcode 0Fh 1Dh  not defined */
            /* opcode 0Fh 1Eh  not defined */
            case 0x1F: /* 0Fh 1Fh        spec:  */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                _x86decode_begin_code32_addr32_opcode_parse_0F1F:
/* Opcodes starting with 0Fh 1Fh */
                switch (mrm.reg()) {
                    case 0: /* 0Fh 1Fh 00h NOP b(r/m) reg=0      spec: 0x0F 0x1F mod/reg/rm /0 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"NOP %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                        break;
                    /* reg 1 not defined */
                    /* reg 2 not defined */
                    /* reg 3 not defined */
                    /* reg 4 not defined */
                    /* reg 5 not defined */
                    /* reg 6 not defined */
                    /* reg 7 not defined */
                    default:
                        goto _x86decode_illegal_opcode;
                };
/* End of opcodes starting with 0Fh 1Fh */
                break;
            case 0x20: /* 0Fh 20h        spec:  */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                _x86decode_begin_code32_addr32_opcode_parse_0F20:
/* Opcodes starting with 0Fh 20h */
                switch (mrm.byte) {
                    /* opcode 0Fh 20h 00h  not defined */
                    /* opcode 0Fh 20h 01h  not defined */
                    /* opcode 0Fh 20h 02h  not defined */
                    /* opcode 0Fh 20h 03h  not defined */
                    /* opcode 0Fh 20h 04h  not defined */
                    /* opcode 0Fh 20h 05h  not defined */
                    /* opcode 0Fh 20h 06h  not defined */
                    /* opcode 0Fh 20h 07h  not defined */
                    /* opcode 0Fh 20h 08h  not defined */
                    /* opcode 0Fh 20h 09h  not defined */
                    /* opcode 0Fh 20h 0Ah  not defined */
                    /* opcode 0Fh 20h 0Bh  not defined */
                    /* opcode 0Fh 20h 0Ch  not defined */
                    /* opcode 0Fh 20h 0Dh  not defined */
                    /* opcode 0Fh 20h 0Eh  not defined */
                    /* opcode 0Fh 20h 0Fh  not defined */
                    /* opcode 0Fh 20h 10h  not defined */
                    /* opcode 0Fh 20h 11h  not defined */
                    /* opcode 0Fh 20h 12h  not defined */
                    /* opcode 0Fh 20h 13h  not defined */
                    /* opcode 0Fh 20h 14h  not defined */
                    /* opcode 0Fh 20h 15h  not defined */
                    /* opcode 0Fh 20h 16h  not defined */
                    /* opcode 0Fh 20h 17h  not defined */
                    /* opcode 0Fh 20h 18h  not defined */
                    /* opcode 0Fh 20h 19h  not defined */
                    /* opcode 0Fh 20h 1Ah  not defined */
                    /* opcode 0Fh 20h 1Bh  not defined */
                    /* opcode 0Fh 20h 1Ch  not defined */
                    /* opcode 0Fh 20h 1Dh  not defined */
                    /* opcode 0Fh 20h 1Eh  not defined */
                    /* opcode 0Fh 20h 1Fh  not defined */
                    /* opcode 0Fh 20h 20h  not defined */
                    /* opcode 0Fh 20h 21h  not defined */
                    /* opcode 0Fh 20h 22h  not defined */
                    /* opcode 0Fh 20h 23h  not defined */
                    /* opcode 0Fh 20h 24h  not defined */
                    /* opcode 0Fh 20h 25h  not defined */
                    /* opcode 0Fh 20h 26h  not defined */
                    /* opcode 0Fh 20h 27h  not defined */
                    /* opcode 0Fh 20h 28h  not defined */
                    /* opcode 0Fh 20h 29h  not defined */
                    /* opcode 0Fh 20h 2Ah  not defined */
                    /* opcode 0Fh 20h 2Bh  not defined */
                    /* opcode 0Fh 20h 2Ch  not defined */
                    /* opcode 0Fh 20h 2Dh  not defined */
                    /* opcode 0Fh 20h 2Eh  not defined */
                    /* opcode 0Fh 20h 2Fh  not defined */
                    /* opcode 0Fh 20h 30h  not defined */
                    /* opcode 0Fh 20h 31h  not defined */
                    /* opcode 0Fh 20h 32h  not defined */
                    /* opcode 0Fh 20h 33h  not defined */
                    /* opcode 0Fh 20h 34h  not defined */
                    /* opcode 0Fh 20h 35h  not defined */
                    /* opcode 0Fh 20h 36h  not defined */
                    /* opcode 0Fh 20h 37h  not defined */
                    /* opcode 0Fh 20h 38h  not defined */
                    /* opcode 0Fh 20h 39h  not defined */
                    /* opcode 0Fh 20h 3Ah  not defined */
                    /* opcode 0Fh 20h 3Bh  not defined */
                    /* opcode 0Fh 20h 3Ch  not defined */
                    /* opcode 0Fh 20h 3Dh  not defined */
                    /* opcode 0Fh 20h 3Eh  not defined */
                    /* opcode 0Fh 20h 3Fh  not defined */
                    /* opcode 0Fh 20h 40h  not defined */
                    /* opcode 0Fh 20h 41h  not defined */
                    /* opcode 0Fh 20h 42h  not defined */
                    /* opcode 0Fh 20h 43h  not defined */
                    /* opcode 0Fh 20h 44h  not defined */
                    /* opcode 0Fh 20h 45h  not defined */
                    /* opcode 0Fh 20h 46h  not defined */
                    /* opcode 0Fh 20h 47h  not defined */
                    /* opcode 0Fh 20h 48h  not defined */
                    /* opcode 0Fh 20h 49h  not defined */
                    /* opcode 0Fh 20h 4Ah  not defined */
                    /* opcode 0Fh 20h 4Bh  not defined */
                    /* opcode 0Fh 20h 4Ch  not defined */
                    /* opcode 0Fh 20h 4Dh  not defined */
                    /* opcode 0Fh 20h 4Eh  not defined */
                    /* opcode 0Fh 20h 4Fh  not defined */
                    /* opcode 0Fh 20h 50h  not defined */
                    /* opcode 0Fh 20h 51h  not defined */
                    /* opcode 0Fh 20h 52h  not defined */
                    /* opcode 0Fh 20h 53h  not defined */
                    /* opcode 0Fh 20h 54h  not defined */
                    /* opcode 0Fh 20h 55h  not defined */
                    /* opcode 0Fh 20h 56h  not defined */
                    /* opcode 0Fh 20h 57h  not defined */
                    /* opcode 0Fh 20h 58h  not defined */
                    /* opcode 0Fh 20h 59h  not defined */
                    /* opcode 0Fh 20h 5Ah  not defined */
                    /* opcode 0Fh 20h 5Bh  not defined */
                    /* opcode 0Fh 20h 5Ch  not defined */
                    /* opcode 0Fh 20h 5Dh  not defined */
                    /* opcode 0Fh 20h 5Eh  not defined */
                    /* opcode 0Fh 20h 5Fh  not defined */
                    /* opcode 0Fh 20h 60h  not defined */
                    /* opcode 0Fh 20h 61h  not defined */
                    /* opcode 0Fh 20h 62h  not defined */
                    /* opcode 0Fh 20h 63h  not defined */
                    /* opcode 0Fh 20h 64h  not defined */
                    /* opcode 0Fh 20h 65h  not defined */
                    /* opcode 0Fh 20h 66h  not defined */
                    /* opcode 0Fh 20h 67h  not defined */
                    /* opcode 0Fh 20h 68h  not defined */
                    /* opcode 0Fh 20h 69h  not defined */
                    /* opcode 0Fh 20h 6Ah  not defined */
                    /* opcode 0Fh 20h 6Bh  not defined */
                    /* opcode 0Fh 20h 6Ch  not defined */
                    /* opcode 0Fh 20h 6Dh  not defined */
                    /* opcode 0Fh 20h 6Eh  not defined */
                    /* opcode 0Fh 20h 6Fh  not defined */
                    /* opcode 0Fh 20h 70h  not defined */
                    /* opcode 0Fh 20h 71h  not defined */
                    /* opcode 0Fh 20h 72h  not defined */
                    /* opcode 0Fh 20h 73h  not defined */
                    /* opcode 0Fh 20h 74h  not defined */
                    /* opcode 0Fh 20h 75h  not defined */
                    /* opcode 0Fh 20h 76h  not defined */
                    /* opcode 0Fh 20h 77h  not defined */
                    /* opcode 0Fh 20h 78h  not defined */
                    /* opcode 0Fh 20h 79h  not defined */
                    /* opcode 0Fh 20h 7Ah  not defined */
                    /* opcode 0Fh 20h 7Bh  not defined */
                    /* opcode 0Fh 20h 7Ch  not defined */
                    /* opcode 0Fh 20h 7Dh  not defined */
                    /* opcode 0Fh 20h 7Eh  not defined */
                    /* opcode 0Fh 20h 7Fh  not defined */
                    /* opcode 0Fh 20h 80h  not defined */
                    /* opcode 0Fh 20h 81h  not defined */
                    /* opcode 0Fh 20h 82h  not defined */
                    /* opcode 0Fh 20h 83h  not defined */
                    /* opcode 0Fh 20h 84h  not defined */
                    /* opcode 0Fh 20h 85h  not defined */
                    /* opcode 0Fh 20h 86h  not defined */
                    /* opcode 0Fh 20h 87h  not defined */
                    /* opcode 0Fh 20h 88h  not defined */
                    /* opcode 0Fh 20h 89h  not defined */
                    /* opcode 0Fh 20h 8Ah  not defined */
                    /* opcode 0Fh 20h 8Bh  not defined */
                    /* opcode 0Fh 20h 8Ch  not defined */
                    /* opcode 0Fh 20h 8Dh  not defined */
                    /* opcode 0Fh 20h 8Eh  not defined */
                    /* opcode 0Fh 20h 8Fh  not defined */
                    /* opcode 0Fh 20h 90h  not defined */
                    /* opcode 0Fh 20h 91h  not defined */
                    /* opcode 0Fh 20h 92h  not defined */
                    /* opcode 0Fh 20h 93h  not defined */
                    /* opcode 0Fh 20h 94h  not defined */
                    /* opcode 0Fh 20h 95h  not defined */
                    /* opcode 0Fh 20h 96h  not defined */
                    /* opcode 0Fh 20h 97h  not defined */
                    /* opcode 0Fh 20h 98h  not defined */
                    /* opcode 0Fh 20h 99h  not defined */
                    /* opcode 0Fh 20h 9Ah  not defined */
                    /* opcode 0Fh 20h 9Bh  not defined */
                    /* opcode 0Fh 20h 9Ch  not defined */
                    /* opcode 0Fh 20h 9Dh  not defined */
                    /* opcode 0Fh 20h 9Eh  not defined */
                    /* opcode 0Fh 20h 9Fh  not defined */
                    /* opcode 0Fh 20h A0h  not defined */
                    /* opcode 0Fh 20h A1h  not defined */
                    /* opcode 0Fh 20h A2h  not defined */
                    /* opcode 0Fh 20h A3h  not defined */
                    /* opcode 0Fh 20h A4h  not defined */
                    /* opcode 0Fh 20h A5h  not defined */
                    /* opcode 0Fh 20h A6h  not defined */
                    /* opcode 0Fh 20h A7h  not defined */
                    /* opcode 0Fh 20h A8h  not defined */
                    /* opcode 0Fh 20h A9h  not defined */
                    /* opcode 0Fh 20h AAh  not defined */
                    /* opcode 0Fh 20h ABh  not defined */
                    /* opcode 0Fh 20h ACh  not defined */
                    /* opcode 0Fh 20h ADh  not defined */
                    /* opcode 0Fh 20h AEh  not defined */
                    /* opcode 0Fh 20h AFh  not defined */
                    /* opcode 0Fh 20h B0h  not defined */
                    /* opcode 0Fh 20h B1h  not defined */
                    /* opcode 0Fh 20h B2h  not defined */
                    /* opcode 0Fh 20h B3h  not defined */
                    /* opcode 0Fh 20h B4h  not defined */
                    /* opcode 0Fh 20h B5h  not defined */
                    /* opcode 0Fh 20h B6h  not defined */
                    /* opcode 0Fh 20h B7h  not defined */
                    /* opcode 0Fh 20h B8h  not defined */
                    /* opcode 0Fh 20h B9h  not defined */
                    /* opcode 0Fh 20h BAh  not defined */
                    /* opcode 0Fh 20h BBh  not defined */
                    /* opcode 0Fh 20h BCh  not defined */
                    /* opcode 0Fh 20h BDh  not defined */
                    /* opcode 0Fh 20h BEh  not defined */
                    /* opcode 0Fh 20h BFh  not defined */
                    case 0xC0: /* 0Fh 20h C0h MOVd w32(r/m),cr(reg) mod=3 reg=0 rm=0      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xC1: /* 0Fh 20h C1h MOVd w32(r/m),cr(reg) mod=3 reg=0 rm=1      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xC2: /* 0Fh 20h C2h MOVd w32(r/m),cr(reg) mod=3 reg=0 rm=2      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xC3: /* 0Fh 20h C3h MOVd w32(r/m),cr(reg) mod=3 reg=0 rm=3      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xC4: /* 0Fh 20h C4h MOVd w32(r/m),cr(reg) mod=3 reg=0 rm=4      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xC5: /* 0Fh 20h C5h MOVd w32(r/m),cr(reg) mod=3 reg=0 rm=5      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xC6: /* 0Fh 20h C6h MOVd w32(r/m),cr(reg) mod=3 reg=0 rm=6      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xC7: /* 0Fh 20h C7h MOVd w32(r/m),cr(reg) mod=3 reg=0 rm=7      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xC8: /* 0Fh 20h C8h MOVd w32(r/m),cr(reg) mod=3 reg=1 rm=0      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xC9: /* 0Fh 20h C9h MOVd w32(r/m),cr(reg) mod=3 reg=1 rm=1      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xCA: /* 0Fh 20h CAh MOVd w32(r/m),cr(reg) mod=3 reg=1 rm=2      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xCB: /* 0Fh 20h CBh MOVd w32(r/m),cr(reg) mod=3 reg=1 rm=3      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xCC: /* 0Fh 20h CCh MOVd w32(r/m),cr(reg) mod=3 reg=1 rm=4      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xCD: /* 0Fh 20h CDh MOVd w32(r/m),cr(reg) mod=3 reg=1 rm=5      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xCE: /* 0Fh 20h CEh MOVd w32(r/m),cr(reg) mod=3 reg=1 rm=6      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xCF: /* 0Fh 20h CFh MOVd w32(r/m),cr(reg) mod=3 reg=1 rm=7      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xD0: /* 0Fh 20h D0h MOVd w32(r/m),cr(reg) mod=3 reg=2 rm=0      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xD1: /* 0Fh 20h D1h MOVd w32(r/m),cr(reg) mod=3 reg=2 rm=1      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xD2: /* 0Fh 20h D2h MOVd w32(r/m),cr(reg) mod=3 reg=2 rm=2      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xD3: /* 0Fh 20h D3h MOVd w32(r/m),cr(reg) mod=3 reg=2 rm=3      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xD4: /* 0Fh 20h D4h MOVd w32(r/m),cr(reg) mod=3 reg=2 rm=4      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xD5: /* 0Fh 20h D5h MOVd w32(r/m),cr(reg) mod=3 reg=2 rm=5      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xD6: /* 0Fh 20h D6h MOVd w32(r/m),cr(reg) mod=3 reg=2 rm=6      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xD7: /* 0Fh 20h D7h MOVd w32(r/m),cr(reg) mod=3 reg=2 rm=7      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xD8: /* 0Fh 20h D8h MOVd w32(r/m),cr(reg) mod=3 reg=3 rm=0      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xD9: /* 0Fh 20h D9h MOVd w32(r/m),cr(reg) mod=3 reg=3 rm=1      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xDA: /* 0Fh 20h DAh MOVd w32(r/m),cr(reg) mod=3 reg=3 rm=2      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xDB: /* 0Fh 20h DBh MOVd w32(r/m),cr(reg) mod=3 reg=3 rm=3      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xDC: /* 0Fh 20h DCh MOVd w32(r/m),cr(reg) mod=3 reg=3 rm=4      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xDD: /* 0Fh 20h DDh MOVd w32(r/m),cr(reg) mod=3 reg=3 rm=5      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xDE: /* 0Fh 20h DEh MOVd w32(r/m),cr(reg) mod=3 reg=3 rm=6      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xDF: /* 0Fh 20h DFh MOVd w32(r/m),cr(reg) mod=3 reg=3 rm=7      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xE0: /* 0Fh 20h E0h MOVd w32(r/m),cr(reg) mod=3 reg=4 rm=0      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xE1: /* 0Fh 20h E1h MOVd w32(r/m),cr(reg) mod=3 reg=4 rm=1      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xE2: /* 0Fh 20h E2h MOVd w32(r/m),cr(reg) mod=3 reg=4 rm=2      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xE3: /* 0Fh 20h E3h MOVd w32(r/m),cr(reg) mod=3 reg=4 rm=3      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xE4: /* 0Fh 20h E4h MOVd w32(r/m),cr(reg) mod=3 reg=4 rm=4      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xE5: /* 0Fh 20h E5h MOVd w32(r/m),cr(reg) mod=3 reg=4 rm=5      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xE6: /* 0Fh 20h E6h MOVd w32(r/m),cr(reg) mod=3 reg=4 rm=6      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xE7: /* 0Fh 20h E7h MOVd w32(r/m),cr(reg) mod=3 reg=4 rm=7      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xE8: /* 0Fh 20h E8h MOVd w32(r/m),cr(reg) mod=3 reg=5 rm=0      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xE9: /* 0Fh 20h E9h MOVd w32(r/m),cr(reg) mod=3 reg=5 rm=1      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xEA: /* 0Fh 20h EAh MOVd w32(r/m),cr(reg) mod=3 reg=5 rm=2      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xEB: /* 0Fh 20h EBh MOVd w32(r/m),cr(reg) mod=3 reg=5 rm=3      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xEC: /* 0Fh 20h ECh MOVd w32(r/m),cr(reg) mod=3 reg=5 rm=4      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xED: /* 0Fh 20h EDh MOVd w32(r/m),cr(reg) mod=3 reg=5 rm=5      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xEE: /* 0Fh 20h EEh MOVd w32(r/m),cr(reg) mod=3 reg=5 rm=6      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xEF: /* 0Fh 20h EFh MOVd w32(r/m),cr(reg) mod=3 reg=5 rm=7      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xF0: /* 0Fh 20h F0h MOVd w32(r/m),cr(reg) mod=3 reg=6 rm=0      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xF1: /* 0Fh 20h F1h MOVd w32(r/m),cr(reg) mod=3 reg=6 rm=1      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xF2: /* 0Fh 20h F2h MOVd w32(r/m),cr(reg) mod=3 reg=6 rm=2      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xF3: /* 0Fh 20h F3h MOVd w32(r/m),cr(reg) mod=3 reg=6 rm=3      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xF4: /* 0Fh 20h F4h MOVd w32(r/m),cr(reg) mod=3 reg=6 rm=4      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xF5: /* 0Fh 20h F5h MOVd w32(r/m),cr(reg) mod=3 reg=6 rm=5      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xF6: /* 0Fh 20h F6h MOVd w32(r/m),cr(reg) mod=3 reg=6 rm=6      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xF7: /* 0Fh 20h F7h MOVd w32(r/m),cr(reg) mod=3 reg=6 rm=7      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xF8: /* 0Fh 20h F8h MOVd w32(r/m),cr(reg) mod=3 reg=7 rm=0      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xF9: /* 0Fh 20h F9h MOVd w32(r/m),cr(reg) mod=3 reg=7 rm=1      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xFA: /* 0Fh 20h FAh MOVd w32(r/m),cr(reg) mod=3 reg=7 rm=2      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xFB: /* 0Fh 20h FBh MOVd w32(r/m),cr(reg) mod=3 reg=7 rm=3      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xFC: /* 0Fh 20h FCh MOVd w32(r/m),cr(reg) mod=3 reg=7 rm=4      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xFD: /* 0Fh 20h FDh MOVd w32(r/m),cr(reg) mod=3 reg=7 rm=5      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xFE: /* 0Fh 20h FEh MOVd w32(r/m),cr(reg) mod=3 reg=7 rm=6      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                    case 0xFF: /* 0Fh 20h FFh MOVd w32(r/m),cr(reg) mod=3 reg=7 rm=7      spec: 0x0F 0x20 mod/reg/rm mod==3 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVd %s,CR%u",IPDecPrint32(mrm,sib,disp,4,RC_REG,"w32"),mrm.reg());
                        break;
                    default:
                        goto _x86decode_illegal_opcode;
                };
/* End of opcodes starting with 0Fh 20h */
                break;
            case 0x21: /* 0Fh 21h        spec:  */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                _x86decode_begin_code32_addr32_opcode_parse_0F21:
/* Opcodes starting with 0Fh 21h */
                switch (mrm.byte) {
                    /* opcode 0Fh 21h 00h  not defined */
                    /* opcode 0Fh 21h 01h  not defined */
                    /* opcode 0Fh 21h 02h  not defined */
                    /* opcode 0Fh 21h 03h  not defined */
                    /* opcode 0Fh 21h 04h  not defined */
                    /* opcode 0Fh 21h 05h  not defined */
                    /* opcode 0Fh 21h 06h  not defined */
                    /* opcode 0Fh 21h 07h  not defined */
                    /* opcode 0Fh 21h 08h  not defined */
                    /* opcode 0Fh 21h 09h  not defined */
                    /* opcode 0Fh 21h 0Ah  not defined */
                    /* opcode 0Fh 21h 0Bh  not defined */
                    /* opcode 0Fh 21h 0Ch  not defined */
                    /* opcode 0Fh 21h 0Dh  not defined */
                    /* opcode 0Fh 21h 0Eh  not defined */
                    /* opcode 0Fh 21h 0Fh  not defined */
                    /* opcode 0Fh 21h 10h  not defined */
                    /* opcode 0Fh 21h 11h  not defined */
                    /* opcode 0Fh 21h 12h  not defined */
                    /* opcode 0Fh 21h 13h  not defined */
                    /* opcode 0Fh 21h 14h  not defined */
                    /* opcode 0Fh 21h 15h  not defined */
                    /* opcode 0Fh 21h 16h  not defined */
                    /* opcode 0Fh 21h 17h  not defined */
                    /* opcode 0Fh 21h 18h  not defined */
                    /* opcode 0Fh 21h 19h  not defined */
                    /* opcode 0Fh 21h 1Ah  not defined */
                    /* opcode 0Fh 21h 1Bh  not defined */
                    /* opcode 0Fh 21h 1Ch  not defined */
                    /* opcode 0Fh 21h 1Dh  not defined */
                    /* opcode 0Fh 21h 1Eh  not defined */
                    /* opcode 0Fh 21h 1Fh  not defined */
                    /* opcode 0Fh 21h 20h  not defined */
                    /* opcode 0Fh 21h 21h  not defined */
                    /* opcode 0Fh 21h 22h  not defined */
                    /* opcode 0Fh 21h 23h  not defined */
                    /* opcode 0Fh 21h 24h  not defined */
                    /* opcode 0Fh 21h 25h  not defined */
                    /* opcode 0Fh 21h 26h  not defined */
                    /* opcode 0Fh 21h 27h  not defined */
                    /* opcode 0Fh 21h 28h  not defined */
                    /* opcode 0Fh 21h 29h  not defined */
                    /* opcode 0Fh 21h 2Ah  not defined */
                    /* opcode 0Fh 21h 2Bh  not defined */
                    /* opcode 0Fh 21h 2Ch  not defined */
                    /* opcode 0Fh 21h 2Dh  not defined */
                    /* opcode 0Fh 21h 2Eh  not defined */
                    /* opcode 0Fh 21h 2Fh  not defined */
                    /* opcode 0Fh 21h 30h  not defined */
                    /* opcode 0Fh 21h 31h  not defined */
                    /* opcode 0Fh 21h 32h  not defined */
                    /* opcode 0Fh 21h 33h  not defined */
                    /* opcode 0Fh 21h 34h  not defined */
                    /* opcode 0Fh 21h 35h  not defined */
                    /* opcode 0Fh 21h 36h  not defined */
                    /* opcode 0Fh 21h 37h  not defined */
                    /* opcode 0Fh 21h 38h  not defined */
                    /* opcode 0Fh 21h 39h  not defined */
                    /* opcode 0Fh 21h 3Ah  not defined */
                    /* opcode 0Fh 21h 3Bh  not defined */
                    /* opcode 0Fh 21h 3Ch  not defined */
                    /* opcode 0Fh 21h 3Dh  not defined */
                    /* opcode 0Fh 21h 3Eh  not defined */
                    /* opcode 0Fh 21h 3Fh  not defined */
                    /* opcode 0Fh 21h 40h  not defined */
                    /* opcode 0Fh 21h 41h  not defined */
                    /* opcode 0Fh 21h 42h  not defined */
                    /* opcode 0Fh 21h 43h  not defined */
                    /* opcode 0Fh 21h 44h  not defined */
                    /* opcode 0Fh 21h 45h  not defined */
                    /* opcode 0Fh 21h 46h  not defined */
                    /* opcode 0Fh 21h 47h  not defined */
                    /* opcode 0Fh 21h 48h  not defined */
                    /* opcode 0Fh 21h 49h  not defined */
                    /* opcode 0Fh 21h 4Ah  not defined */
                    /* opcode 0Fh 21h 4Bh  not defined */
                    /* opcode 0Fh 21h 4Ch  not defined */
                    /* opcode 0Fh 21h 4Dh  not defined */
                    /* opcode 0Fh 21h 4Eh  not defined */
                    /* opcode 0Fh 21h 4Fh  not defined */
                    /* opcode 0Fh 21h 50h  not defined */
                    /* opcode 0Fh 21h 51h  not defined */
                    /* opcode 0Fh 21h 52h  not defined */
                    /* opcode 0Fh 21h 53h  not defined */
                    /* opcode 0Fh 21h 54h  not defined */
                    /* opcode 0Fh 21h 55h  not defined */
                    /* opcode 0Fh 21h 56h  not defined */
                    /* opcode 0Fh 21h 57h  not defined */
                    /* opcode 0Fh 21h 58h  not defined */
                    /* opcode 0Fh 21h 59h  not defined */
                    /* opcode 0Fh 21h 5Ah  not defined */
                    /* opcode 0Fh 21h 5Bh  not defined */
                    /* opcode 0Fh 21h 5Ch  not defined */
                    /* opcode 0Fh 21h 5Dh  not defined */
                    /* opcode 0Fh 21h 5Eh  not defined */
                    /* opcode 0Fh 21h 5Fh  not defined */
                    /* opcode 0Fh 21h 60h  not defined */
                    /* opcode 0Fh 21h 61h  not defined */
                    /* opcode 0Fh 21h 62h  not defined */
                    /* opcode 0Fh 21h 63h  not defined */
                    /* opcode 0Fh 21h 64h  not defined */
                    /* opcode 0Fh 21h 65h  not defined */
                    /* opcode 0Fh 21h 66h  not defined */
                    /* opcode 0Fh 21h 67h  not defined */
                    /* opcode 0Fh 21h 68h  not defined */
                    /* opcode 0Fh 21h 69h  not defined */
                    /* opcode 0Fh 21h 6Ah  not defined */
                    /* opcode 0Fh 21h 6Bh  not defined */
                    /* opcode 0Fh 21h 6Ch  not defined */
                    /* opcode 0Fh 21h 6Dh  not defined */
                    /* opcode 0Fh 21h 6Eh  not defined */
                    /* opcode 0Fh 21h 6Fh  not defined */
                    /* opcode 0Fh 21h 70h  not defined */
                    /* opcode 0Fh 21h 71h  not defined */
                    /* opcode 0Fh 21h 72h  not defined */
                    /* opcode 0Fh 21h 73h  not defined */
                    /* opcode 0Fh 21h 74h  not defined */
                    /* opcode 0Fh 21h 75h  not defined */
                    /* opcode 0Fh 21h 76h  not defined */
                    /* opcode 0Fh 21h 77h  not defined */
                    /* opcode 0Fh 21h 78h  not defined */
                    /* opcode 0Fh 21h 79h  not defined */
                    /* opcode 0Fh 21h 7Ah  not defined */
                    /* opcode 0Fh 21h 7Bh  not defined */
                    /* opcode 0Fh 21h 7Ch  not defined */
                    /* opcode 0Fh 21h 7Dh  not defined */
                    /* opcode 0Fh 21h 7Eh  not defined */
                    /* opcode 0Fh 21h 7Fh  not defined */
                    /* opcode 0Fh 21h 80h  not defined */
                    /* opcode 0Fh 21h 81h  not defined */
                    /* opcode 0Fh 21h 82h  not defined */
                    /* opcode 0Fh 21h 83h  not defined */
                    /* opcode 0Fh 21h 84h  not defined */
                    /* opcode 0Fh 21h 85h  not defined */
                    /* opcode 0Fh 21h 86h  not defined */
                    /* opcode 0Fh 21h 87h  not defined */
                    /* opcode 0Fh 21h 88h  not defined */
                    /* opcode 0Fh 21h 89h  not defined */
                    /* opcode 0Fh 21h 8Ah  not defined */
                    /* opcode 0Fh 21h 8Bh  not defined */
                    /* opcode 0Fh 21h 8Ch  not defined */
                    /* opcode 0Fh 21h 8Dh  not defined */
                    /* opcode 0Fh 21h 8Eh  not defined */
                    /* opcode 0Fh 21h 8Fh  not defined */
                    /* opcode 0Fh 21h 90h  not defined */
                    /* opcode 0Fh 21h 91h  not defined */
                    /* opcode 0Fh 21h 92h  not defined */
                    /* opcode 0Fh 21h 93h  not defined */
                    /* opcode 0Fh 21h 94h  not defined */
                    /* opcode 0Fh 21h 95h  not defined */
                    /* opcode 0Fh 21h 96h  not defined */
                    /* opcode 0Fh 21h 97h  not defined */
                    /* opcode 0Fh 21h 98h  not defined */
                    /* opcode 0Fh 21h 99h  not defined */
                    /* opcode 0Fh 21h 9Ah  not defined */
                    /* opcode 0Fh 21h 9Bh  not defined */
                    /* opcode 0Fh 21h 9Ch  not defined */
                    /* opcode 0Fh 21h 9Dh  not defined */
                    /* opcode 0Fh 21h 9Eh  not defined */
                    /* opcode 0Fh 21h 9Fh  not defined */
                    /* opcode 0Fh 21h A0h  not defined */
                    /* opcode 0Fh 21h A1h  not defined */
                    /* opcode 0Fh 21h A2h  not defined */
                    /* opcode 0Fh 21h A3h  not defined */
                    /* opcode 0Fh 21h A4h  not defined */
                    /* opcode 0Fh 21h A5h  not defined */
                    /* opcode 0Fh 21h A6h  not defined */
                    /* opcode 0Fh 21h A7h  not defined */
                    /* opcode 0Fh 21h A8h  not defined */
                    /* opcode 0Fh 21h A9h  not defined */
                    /* opcode 0Fh 21h AAh  not defined */
                    /* opcode 0Fh 21h ABh  not defined */
                    /* opcode 0Fh 21h ACh  not defined */
                    /* opcode 0Fh 21h ADh  not defined */
                    /* opcode 0Fh 21h AEh  not defined */
                    /* opcode 0Fh 21h AFh  not defined */
                    /* opcode 0Fh 21h B0h  not defined */
                    /* opcode 0Fh 21h B1h  not defined */
                    /* opcode 0Fh 21h B2h  not defined */
                    /* opcode 0Fh 21h B3h  not defined */
                    /* opcode 0Fh 21h B4h  not defined */
                    /* opcode 0Fh 21h B5h  not defined */
                    /* opcode 0Fh 21h B6h  not defined */
                    /* opcode 0Fh 21h B7h  not defined */
                    /* opcode 0Fh 21h B8h  not defined */
                    /* opcode 0Fh 21h B9h  not defined */
                    /* opcode 0Fh 21h BAh  not defined */
                    /* opcode 0Fh 21h BBh  not defined */
                    /* opcode 0Fh 21h BCh  not defined */
                    /* opcode 0Fh 21h BDh  not defined */
                    /* opcode 0Fh 21h BEh  not defined */
                    /* opcode 0Fh 21h BFh  not defined */
                    case 0xC0: /* 0Fh 21h C0h MOVd w32(r/m),dr(reg) mod=3 reg=0 rm=0      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xC1: /* 0Fh 21h C1h MOVd w32(r/m),dr(reg) mod=3 reg=0 rm=1      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xC2: /* 0Fh 21h C2h MOVd w32(r/m),dr(reg) mod=3 reg=0 rm=2      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xC3: /* 0Fh 21h C3h MOVd w32(r/m),dr(reg) mod=3 reg=0 rm=3      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xC4: /* 0Fh 21h C4h MOVd w32(r/m),dr(reg) mod=3 reg=0 rm=4      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xC5: /* 0Fh 21h C5h MOVd w32(r/m),dr(reg) mod=3 reg=0 rm=5      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xC6: /* 0Fh 21h C6h MOVd w32(r/m),dr(reg) mod=3 reg=0 rm=6      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xC7: /* 0Fh 21h C7h MOVd w32(r/m),dr(reg) mod=3 reg=0 rm=7      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xC8: /* 0Fh 21h C8h MOVd w32(r/m),dr(reg) mod=3 reg=1 rm=0      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xC9: /* 0Fh 21h C9h MOVd w32(r/m),dr(reg) mod=3 reg=1 rm=1      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xCA: /* 0Fh 21h CAh MOVd w32(r/m),dr(reg) mod=3 reg=1 rm=2      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xCB: /* 0Fh 21h CBh MOVd w32(r/m),dr(reg) mod=3 reg=1 rm=3      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xCC: /* 0Fh 21h CCh MOVd w32(r/m),dr(reg) mod=3 reg=1 rm=4      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xCD: /* 0Fh 21h CDh MOVd w32(r/m),dr(reg) mod=3 reg=1 rm=5      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xCE: /* 0Fh 21h CEh MOVd w32(r/m),dr(reg) mod=3 reg=1 rm=6      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xCF: /* 0Fh 21h CFh MOVd w32(r/m),dr(reg) mod=3 reg=1 rm=7      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xD0: /* 0Fh 21h D0h MOVd w32(r/m),dr(reg) mod=3 reg=2 rm=0      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xD1: /* 0Fh 21h D1h MOVd w32(r/m),dr(reg) mod=3 reg=2 rm=1      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xD2: /* 0Fh 21h D2h MOVd w32(r/m),dr(reg) mod=3 reg=2 rm=2      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xD3: /* 0Fh 21h D3h MOVd w32(r/m),dr(reg) mod=3 reg=2 rm=3      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xD4: /* 0Fh 21h D4h MOVd w32(r/m),dr(reg) mod=3 reg=2 rm=4      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xD5: /* 0Fh 21h D5h MOVd w32(r/m),dr(reg) mod=3 reg=2 rm=5      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xD6: /* 0Fh 21h D6h MOVd w32(r/m),dr(reg) mod=3 reg=2 rm=6      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xD7: /* 0Fh 21h D7h MOVd w32(r/m),dr(reg) mod=3 reg=2 rm=7      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xD8: /* 0Fh 21h D8h MOVd w32(r/m),dr(reg) mod=3 reg=3 rm=0      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xD9: /* 0Fh 21h D9h MOVd w32(r/m),dr(reg) mod=3 reg=3 rm=1      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xDA: /* 0Fh 21h DAh MOVd w32(r/m),dr(reg) mod=3 reg=3 rm=2      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xDB: /* 0Fh 21h DBh MOVd w32(r/m),dr(reg) mod=3 reg=3 rm=3      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xDC: /* 0Fh 21h DCh MOVd w32(r/m),dr(reg) mod=3 reg=3 rm=4      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xDD: /* 0Fh 21h DDh MOVd w32(r/m),dr(reg) mod=3 reg=3 rm=5      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xDE: /* 0Fh 21h DEh MOVd w32(r/m),dr(reg) mod=3 reg=3 rm=6      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xDF: /* 0Fh 21h DFh MOVd w32(r/m),dr(reg) mod=3 reg=3 rm=7      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xE0: /* 0Fh 21h E0h MOVd w32(r/m),dr(reg) mod=3 reg=4 rm=0      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xE1: /* 0Fh 21h E1h MOVd w32(r/m),dr(reg) mod=3 reg=4 rm=1      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xE2: /* 0Fh 21h E2h MOVd w32(r/m),dr(reg) mod=3 reg=4 rm=2      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xE3: /* 0Fh 21h E3h MOVd w32(r/m),dr(reg) mod=3 reg=4 rm=3      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xE4: /* 0Fh 21h E4h MOVd w32(r/m),dr(reg) mod=3 reg=4 rm=4      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xE5: /* 0Fh 21h E5h MOVd w32(r/m),dr(reg) mod=3 reg=4 rm=5      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xE6: /* 0Fh 21h E6h MOVd w32(r/m),dr(reg) mod=3 reg=4 rm=6      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xE7: /* 0Fh 21h E7h MOVd w32(r/m),dr(reg) mod=3 reg=4 rm=7      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xE8: /* 0Fh 21h E8h MOVd w32(r/m),dr(reg) mod=3 reg=5 rm=0      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xE9: /* 0Fh 21h E9h MOVd w32(r/m),dr(reg) mod=3 reg=5 rm=1      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xEA: /* 0Fh 21h EAh MOVd w32(r/m),dr(reg) mod=3 reg=5 rm=2      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xEB: /* 0Fh 21h EBh MOVd w32(r/m),dr(reg) mod=3 reg=5 rm=3      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xEC: /* 0Fh 21h ECh MOVd w32(r/m),dr(reg) mod=3 reg=5 rm=4      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xED: /* 0Fh 21h EDh MOVd w32(r/m),dr(reg) mod=3 reg=5 rm=5      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xEE: /* 0Fh 21h EEh MOVd w32(r/m),dr(reg) mod=3 reg=5 rm=6      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xEF: /* 0Fh 21h EFh MOVd w32(r/m),dr(reg) mod=3 reg=5 rm=7      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xF0: /* 0Fh 21h F0h MOVd w32(r/m),dr(reg) mod=3 reg=6 rm=0      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xF1: /* 0Fh 21h F1h MOVd w32(r/m),dr(reg) mod=3 reg=6 rm=1      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xF2: /* 0Fh 21h F2h MOVd w32(r/m),dr(reg) mod=3 reg=6 rm=2      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xF3: /* 0Fh 21h F3h MOVd w32(r/m),dr(reg) mod=3 reg=6 rm=3      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xF4: /* 0Fh 21h F4h MOVd w32(r/m),dr(reg) mod=3 reg=6 rm=4      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xF5: /* 0Fh 21h F5h MOVd w32(r/m),dr(reg) mod=3 reg=6 rm=5      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xF6: /* 0Fh 21h F6h MOVd w32(r/m),dr(reg) mod=3 reg=6 rm=6      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xF7: /* 0Fh 21h F7h MOVd w32(r/m),dr(reg) mod=3 reg=6 rm=7      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xF8: /* 0Fh 21h F8h MOVd w32(r/m),dr(reg) mod=3 reg=7 rm=0      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xF9: /* 0Fh 21h F9h MOVd w32(r/m),dr(reg) mod=3 reg=7 rm=1      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xFA: /* 0Fh 21h FAh MOVd w32(r/m),dr(reg) mod=3 reg=7 rm=2      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xFB: /* 0Fh 21h FBh MOVd w32(r/m),dr(reg) mod=3 reg=7 rm=3      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xFC: /* 0Fh 21h FCh MOVd w32(r/m),dr(reg) mod=3 reg=7 rm=4      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xFD: /* 0Fh 21h FDh MOVd w32(r/m),dr(reg) mod=3 reg=7 rm=5      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xFE: /* 0Fh 21h FEh MOVd w32(r/m),dr(reg) mod=3 reg=7 rm=6      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                    case 0xFF: /* 0Fh 21h FFh MOVd w32(r/m),dr(reg) mod=3 reg=7 rm=7      spec: 0x0F 0x21 mod/reg/rm mod==3 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVd %s,DR%u",IPDecPrint32(mrm,sib,disp,4,RC_REG,"w32"),mrm.reg());
                        break;
                    default:
                        goto _x86decode_illegal_opcode;
                };
/* End of opcodes starting with 0Fh 21h */
                break;
            case 0x22: /* 0Fh 22h        spec:  */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                _x86decode_begin_code32_addr32_opcode_parse_0F22:
/* Opcodes starting with 0Fh 22h */
                switch (mrm.byte) {
                    /* opcode 0Fh 22h 00h  not defined */
                    /* opcode 0Fh 22h 01h  not defined */
                    /* opcode 0Fh 22h 02h  not defined */
                    /* opcode 0Fh 22h 03h  not defined */
                    /* opcode 0Fh 22h 04h  not defined */
                    /* opcode 0Fh 22h 05h  not defined */
                    /* opcode 0Fh 22h 06h  not defined */
                    /* opcode 0Fh 22h 07h  not defined */
                    /* opcode 0Fh 22h 08h  not defined */
                    /* opcode 0Fh 22h 09h  not defined */
                    /* opcode 0Fh 22h 0Ah  not defined */
                    /* opcode 0Fh 22h 0Bh  not defined */
                    /* opcode 0Fh 22h 0Ch  not defined */
                    /* opcode 0Fh 22h 0Dh  not defined */
                    /* opcode 0Fh 22h 0Eh  not defined */
                    /* opcode 0Fh 22h 0Fh  not defined */
                    /* opcode 0Fh 22h 10h  not defined */
                    /* opcode 0Fh 22h 11h  not defined */
                    /* opcode 0Fh 22h 12h  not defined */
                    /* opcode 0Fh 22h 13h  not defined */
                    /* opcode 0Fh 22h 14h  not defined */
                    /* opcode 0Fh 22h 15h  not defined */
                    /* opcode 0Fh 22h 16h  not defined */
                    /* opcode 0Fh 22h 17h  not defined */
                    /* opcode 0Fh 22h 18h  not defined */
                    /* opcode 0Fh 22h 19h  not defined */
                    /* opcode 0Fh 22h 1Ah  not defined */
                    /* opcode 0Fh 22h 1Bh  not defined */
                    /* opcode 0Fh 22h 1Ch  not defined */
                    /* opcode 0Fh 22h 1Dh  not defined */
                    /* opcode 0Fh 22h 1Eh  not defined */
                    /* opcode 0Fh 22h 1Fh  not defined */
                    /* opcode 0Fh 22h 20h  not defined */
                    /* opcode 0Fh 22h 21h  not defined */
                    /* opcode 0Fh 22h 22h  not defined */
                    /* opcode 0Fh 22h 23h  not defined */
                    /* opcode 0Fh 22h 24h  not defined */
                    /* opcode 0Fh 22h 25h  not defined */
                    /* opcode 0Fh 22h 26h  not defined */
                    /* opcode 0Fh 22h 27h  not defined */
                    /* opcode 0Fh 22h 28h  not defined */
                    /* opcode 0Fh 22h 29h  not defined */
                    /* opcode 0Fh 22h 2Ah  not defined */
                    /* opcode 0Fh 22h 2Bh  not defined */
                    /* opcode 0Fh 22h 2Ch  not defined */
                    /* opcode 0Fh 22h 2Dh  not defined */
                    /* opcode 0Fh 22h 2Eh  not defined */
                    /* opcode 0Fh 22h 2Fh  not defined */
                    /* opcode 0Fh 22h 30h  not defined */
                    /* opcode 0Fh 22h 31h  not defined */
                    /* opcode 0Fh 22h 32h  not defined */
                    /* opcode 0Fh 22h 33h  not defined */
                    /* opcode 0Fh 22h 34h  not defined */
                    /* opcode 0Fh 22h 35h  not defined */
                    /* opcode 0Fh 22h 36h  not defined */
                    /* opcode 0Fh 22h 37h  not defined */
                    /* opcode 0Fh 22h 38h  not defined */
                    /* opcode 0Fh 22h 39h  not defined */
                    /* opcode 0Fh 22h 3Ah  not defined */
                    /* opcode 0Fh 22h 3Bh  not defined */
                    /* opcode 0Fh 22h 3Ch  not defined */
                    /* opcode 0Fh 22h 3Dh  not defined */
                    /* opcode 0Fh 22h 3Eh  not defined */
                    /* opcode 0Fh 22h 3Fh  not defined */
                    /* opcode 0Fh 22h 40h  not defined */
                    /* opcode 0Fh 22h 41h  not defined */
                    /* opcode 0Fh 22h 42h  not defined */
                    /* opcode 0Fh 22h 43h  not defined */
                    /* opcode 0Fh 22h 44h  not defined */
                    /* opcode 0Fh 22h 45h  not defined */
                    /* opcode 0Fh 22h 46h  not defined */
                    /* opcode 0Fh 22h 47h  not defined */
                    /* opcode 0Fh 22h 48h  not defined */
                    /* opcode 0Fh 22h 49h  not defined */
                    /* opcode 0Fh 22h 4Ah  not defined */
                    /* opcode 0Fh 22h 4Bh  not defined */
                    /* opcode 0Fh 22h 4Ch  not defined */
                    /* opcode 0Fh 22h 4Dh  not defined */
                    /* opcode 0Fh 22h 4Eh  not defined */
                    /* opcode 0Fh 22h 4Fh  not defined */
                    /* opcode 0Fh 22h 50h  not defined */
                    /* opcode 0Fh 22h 51h  not defined */
                    /* opcode 0Fh 22h 52h  not defined */
                    /* opcode 0Fh 22h 53h  not defined */
                    /* opcode 0Fh 22h 54h  not defined */
                    /* opcode 0Fh 22h 55h  not defined */
                    /* opcode 0Fh 22h 56h  not defined */
                    /* opcode 0Fh 22h 57h  not defined */
                    /* opcode 0Fh 22h 58h  not defined */
                    /* opcode 0Fh 22h 59h  not defined */
                    /* opcode 0Fh 22h 5Ah  not defined */
                    /* opcode 0Fh 22h 5Bh  not defined */
                    /* opcode 0Fh 22h 5Ch  not defined */
                    /* opcode 0Fh 22h 5Dh  not defined */
                    /* opcode 0Fh 22h 5Eh  not defined */
                    /* opcode 0Fh 22h 5Fh  not defined */
                    /* opcode 0Fh 22h 60h  not defined */
                    /* opcode 0Fh 22h 61h  not defined */
                    /* opcode 0Fh 22h 62h  not defined */
                    /* opcode 0Fh 22h 63h  not defined */
                    /* opcode 0Fh 22h 64h  not defined */
                    /* opcode 0Fh 22h 65h  not defined */
                    /* opcode 0Fh 22h 66h  not defined */
                    /* opcode 0Fh 22h 67h  not defined */
                    /* opcode 0Fh 22h 68h  not defined */
                    /* opcode 0Fh 22h 69h  not defined */
                    /* opcode 0Fh 22h 6Ah  not defined */
                    /* opcode 0Fh 22h 6Bh  not defined */
                    /* opcode 0Fh 22h 6Ch  not defined */
                    /* opcode 0Fh 22h 6Dh  not defined */
                    /* opcode 0Fh 22h 6Eh  not defined */
                    /* opcode 0Fh 22h 6Fh  not defined */
                    /* opcode 0Fh 22h 70h  not defined */
                    /* opcode 0Fh 22h 71h  not defined */
                    /* opcode 0Fh 22h 72h  not defined */
                    /* opcode 0Fh 22h 73h  not defined */
                    /* opcode 0Fh 22h 74h  not defined */
                    /* opcode 0Fh 22h 75h  not defined */
                    /* opcode 0Fh 22h 76h  not defined */
                    /* opcode 0Fh 22h 77h  not defined */
                    /* opcode 0Fh 22h 78h  not defined */
                    /* opcode 0Fh 22h 79h  not defined */
                    /* opcode 0Fh 22h 7Ah  not defined */
                    /* opcode 0Fh 22h 7Bh  not defined */
                    /* opcode 0Fh 22h 7Ch  not defined */
                    /* opcode 0Fh 22h 7Dh  not defined */
                    /* opcode 0Fh 22h 7Eh  not defined */
                    /* opcode 0Fh 22h 7Fh  not defined */
                    /* opcode 0Fh 22h 80h  not defined */
                    /* opcode 0Fh 22h 81h  not defined */
                    /* opcode 0Fh 22h 82h  not defined */
                    /* opcode 0Fh 22h 83h  not defined */
                    /* opcode 0Fh 22h 84h  not defined */
                    /* opcode 0Fh 22h 85h  not defined */
                    /* opcode 0Fh 22h 86h  not defined */
                    /* opcode 0Fh 22h 87h  not defined */
                    /* opcode 0Fh 22h 88h  not defined */
                    /* opcode 0Fh 22h 89h  not defined */
                    /* opcode 0Fh 22h 8Ah  not defined */
                    /* opcode 0Fh 22h 8Bh  not defined */
                    /* opcode 0Fh 22h 8Ch  not defined */
                    /* opcode 0Fh 22h 8Dh  not defined */
                    /* opcode 0Fh 22h 8Eh  not defined */
                    /* opcode 0Fh 22h 8Fh  not defined */
                    /* opcode 0Fh 22h 90h  not defined */
                    /* opcode 0Fh 22h 91h  not defined */
                    /* opcode 0Fh 22h 92h  not defined */
                    /* opcode 0Fh 22h 93h  not defined */
                    /* opcode 0Fh 22h 94h  not defined */
                    /* opcode 0Fh 22h 95h  not defined */
                    /* opcode 0Fh 22h 96h  not defined */
                    /* opcode 0Fh 22h 97h  not defined */
                    /* opcode 0Fh 22h 98h  not defined */
                    /* opcode 0Fh 22h 99h  not defined */
                    /* opcode 0Fh 22h 9Ah  not defined */
                    /* opcode 0Fh 22h 9Bh  not defined */
                    /* opcode 0Fh 22h 9Ch  not defined */
                    /* opcode 0Fh 22h 9Dh  not defined */
                    /* opcode 0Fh 22h 9Eh  not defined */
                    /* opcode 0Fh 22h 9Fh  not defined */
                    /* opcode 0Fh 22h A0h  not defined */
                    /* opcode 0Fh 22h A1h  not defined */
                    /* opcode 0Fh 22h A2h  not defined */
                    /* opcode 0Fh 22h A3h  not defined */
                    /* opcode 0Fh 22h A4h  not defined */
                    /* opcode 0Fh 22h A5h  not defined */
                    /* opcode 0Fh 22h A6h  not defined */
                    /* opcode 0Fh 22h A7h  not defined */
                    /* opcode 0Fh 22h A8h  not defined */
                    /* opcode 0Fh 22h A9h  not defined */
                    /* opcode 0Fh 22h AAh  not defined */
                    /* opcode 0Fh 22h ABh  not defined */
                    /* opcode 0Fh 22h ACh  not defined */
                    /* opcode 0Fh 22h ADh  not defined */
                    /* opcode 0Fh 22h AEh  not defined */
                    /* opcode 0Fh 22h AFh  not defined */
                    /* opcode 0Fh 22h B0h  not defined */
                    /* opcode 0Fh 22h B1h  not defined */
                    /* opcode 0Fh 22h B2h  not defined */
                    /* opcode 0Fh 22h B3h  not defined */
                    /* opcode 0Fh 22h B4h  not defined */
                    /* opcode 0Fh 22h B5h  not defined */
                    /* opcode 0Fh 22h B6h  not defined */
                    /* opcode 0Fh 22h B7h  not defined */
                    /* opcode 0Fh 22h B8h  not defined */
                    /* opcode 0Fh 22h B9h  not defined */
                    /* opcode 0Fh 22h BAh  not defined */
                    /* opcode 0Fh 22h BBh  not defined */
                    /* opcode 0Fh 22h BCh  not defined */
                    /* opcode 0Fh 22h BDh  not defined */
                    /* opcode 0Fh 22h BEh  not defined */
                    /* opcode 0Fh 22h BFh  not defined */
                    case 0xC0: /* 0Fh 22h C0h MOVd cr(reg),w32(r/m) mod=3 reg=0 rm=0      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xC1: /* 0Fh 22h C1h MOVd cr(reg),w32(r/m) mod=3 reg=0 rm=1      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xC2: /* 0Fh 22h C2h MOVd cr(reg),w32(r/m) mod=3 reg=0 rm=2      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xC3: /* 0Fh 22h C3h MOVd cr(reg),w32(r/m) mod=3 reg=0 rm=3      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xC4: /* 0Fh 22h C4h MOVd cr(reg),w32(r/m) mod=3 reg=0 rm=4      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xC5: /* 0Fh 22h C5h MOVd cr(reg),w32(r/m) mod=3 reg=0 rm=5      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xC6: /* 0Fh 22h C6h MOVd cr(reg),w32(r/m) mod=3 reg=0 rm=6      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xC7: /* 0Fh 22h C7h MOVd cr(reg),w32(r/m) mod=3 reg=0 rm=7      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xC8: /* 0Fh 22h C8h MOVd cr(reg),w32(r/m) mod=3 reg=1 rm=0      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xC9: /* 0Fh 22h C9h MOVd cr(reg),w32(r/m) mod=3 reg=1 rm=1      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xCA: /* 0Fh 22h CAh MOVd cr(reg),w32(r/m) mod=3 reg=1 rm=2      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xCB: /* 0Fh 22h CBh MOVd cr(reg),w32(r/m) mod=3 reg=1 rm=3      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xCC: /* 0Fh 22h CCh MOVd cr(reg),w32(r/m) mod=3 reg=1 rm=4      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xCD: /* 0Fh 22h CDh MOVd cr(reg),w32(r/m) mod=3 reg=1 rm=5      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xCE: /* 0Fh 22h CEh MOVd cr(reg),w32(r/m) mod=3 reg=1 rm=6      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xCF: /* 0Fh 22h CFh MOVd cr(reg),w32(r/m) mod=3 reg=1 rm=7      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xD0: /* 0Fh 22h D0h MOVd cr(reg),w32(r/m) mod=3 reg=2 rm=0      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xD1: /* 0Fh 22h D1h MOVd cr(reg),w32(r/m) mod=3 reg=2 rm=1      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xD2: /* 0Fh 22h D2h MOVd cr(reg),w32(r/m) mod=3 reg=2 rm=2      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xD3: /* 0Fh 22h D3h MOVd cr(reg),w32(r/m) mod=3 reg=2 rm=3      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xD4: /* 0Fh 22h D4h MOVd cr(reg),w32(r/m) mod=3 reg=2 rm=4      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xD5: /* 0Fh 22h D5h MOVd cr(reg),w32(r/m) mod=3 reg=2 rm=5      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xD6: /* 0Fh 22h D6h MOVd cr(reg),w32(r/m) mod=3 reg=2 rm=6      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xD7: /* 0Fh 22h D7h MOVd cr(reg),w32(r/m) mod=3 reg=2 rm=7      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xD8: /* 0Fh 22h D8h MOVd cr(reg),w32(r/m) mod=3 reg=3 rm=0      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xD9: /* 0Fh 22h D9h MOVd cr(reg),w32(r/m) mod=3 reg=3 rm=1      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xDA: /* 0Fh 22h DAh MOVd cr(reg),w32(r/m) mod=3 reg=3 rm=2      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xDB: /* 0Fh 22h DBh MOVd cr(reg),w32(r/m) mod=3 reg=3 rm=3      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xDC: /* 0Fh 22h DCh MOVd cr(reg),w32(r/m) mod=3 reg=3 rm=4      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xDD: /* 0Fh 22h DDh MOVd cr(reg),w32(r/m) mod=3 reg=3 rm=5      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xDE: /* 0Fh 22h DEh MOVd cr(reg),w32(r/m) mod=3 reg=3 rm=6      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xDF: /* 0Fh 22h DFh MOVd cr(reg),w32(r/m) mod=3 reg=3 rm=7      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xE0: /* 0Fh 22h E0h MOVd cr(reg),w32(r/m) mod=3 reg=4 rm=0      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xE1: /* 0Fh 22h E1h MOVd cr(reg),w32(r/m) mod=3 reg=4 rm=1      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xE2: /* 0Fh 22h E2h MOVd cr(reg),w32(r/m) mod=3 reg=4 rm=2      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xE3: /* 0Fh 22h E3h MOVd cr(reg),w32(r/m) mod=3 reg=4 rm=3      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xE4: /* 0Fh 22h E4h MOVd cr(reg),w32(r/m) mod=3 reg=4 rm=4      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xE5: /* 0Fh 22h E5h MOVd cr(reg),w32(r/m) mod=3 reg=4 rm=5      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xE6: /* 0Fh 22h E6h MOVd cr(reg),w32(r/m) mod=3 reg=4 rm=6      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xE7: /* 0Fh 22h E7h MOVd cr(reg),w32(r/m) mod=3 reg=4 rm=7      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xE8: /* 0Fh 22h E8h MOVd cr(reg),w32(r/m) mod=3 reg=5 rm=0      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xE9: /* 0Fh 22h E9h MOVd cr(reg),w32(r/m) mod=3 reg=5 rm=1      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xEA: /* 0Fh 22h EAh MOVd cr(reg),w32(r/m) mod=3 reg=5 rm=2      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xEB: /* 0Fh 22h EBh MOVd cr(reg),w32(r/m) mod=3 reg=5 rm=3      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xEC: /* 0Fh 22h ECh MOVd cr(reg),w32(r/m) mod=3 reg=5 rm=4      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xED: /* 0Fh 22h EDh MOVd cr(reg),w32(r/m) mod=3 reg=5 rm=5      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xEE: /* 0Fh 22h EEh MOVd cr(reg),w32(r/m) mod=3 reg=5 rm=6      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xEF: /* 0Fh 22h EFh MOVd cr(reg),w32(r/m) mod=3 reg=5 rm=7      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xF0: /* 0Fh 22h F0h MOVd cr(reg),w32(r/m) mod=3 reg=6 rm=0      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xF1: /* 0Fh 22h F1h MOVd cr(reg),w32(r/m) mod=3 reg=6 rm=1      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xF2: /* 0Fh 22h F2h MOVd cr(reg),w32(r/m) mod=3 reg=6 rm=2      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xF3: /* 0Fh 22h F3h MOVd cr(reg),w32(r/m) mod=3 reg=6 rm=3      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xF4: /* 0Fh 22h F4h MOVd cr(reg),w32(r/m) mod=3 reg=6 rm=4      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xF5: /* 0Fh 22h F5h MOVd cr(reg),w32(r/m) mod=3 reg=6 rm=5      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xF6: /* 0Fh 22h F6h MOVd cr(reg),w32(r/m) mod=3 reg=6 rm=6      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xF7: /* 0Fh 22h F7h MOVd cr(reg),w32(r/m) mod=3 reg=6 rm=7      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xF8: /* 0Fh 22h F8h MOVd cr(reg),w32(r/m) mod=3 reg=7 rm=0      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xF9: /* 0Fh 22h F9h MOVd cr(reg),w32(r/m) mod=3 reg=7 rm=1      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xFA: /* 0Fh 22h FAh MOVd cr(reg),w32(r/m) mod=3 reg=7 rm=2      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xFB: /* 0Fh 22h FBh MOVd cr(reg),w32(r/m) mod=3 reg=7 rm=3      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xFC: /* 0Fh 22h FCh MOVd cr(reg),w32(r/m) mod=3 reg=7 rm=4      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xFD: /* 0Fh 22h FDh MOVd cr(reg),w32(r/m) mod=3 reg=7 rm=5      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xFE: /* 0Fh 22h FEh MOVd cr(reg),w32(r/m) mod=3 reg=7 rm=6      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                    case 0xFF: /* 0Fh 22h FFh MOVd cr(reg),w32(r/m) mod=3 reg=7 rm=7      spec: 0x0F 0x22 mod/reg/rm mod==3 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVd CR%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,4,RC_REG,"w32"));
                        break;
                    default:
                        goto _x86decode_illegal_opcode;
                };
/* End of opcodes starting with 0Fh 22h */
                break;
            case 0x23: /* 0Fh 23h        spec:  */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                _x86decode_begin_code32_addr32_opcode_parse_0F23:
/* Opcodes starting with 0Fh 23h */
                switch (mrm.byte) {
                    /* opcode 0Fh 23h 00h  not defined */
                    /* opcode 0Fh 23h 01h  not defined */
                    /* opcode 0Fh 23h 02h  not defined */
                    /* opcode 0Fh 23h 03h  not defined */
                    /* opcode 0Fh 23h 04h  not defined */
                    /* opcode 0Fh 23h 05h  not defined */
                    /* opcode 0Fh 23h 06h  not defined */
                    /* opcode 0Fh 23h 07h  not defined */
                    /* opcode 0Fh 23h 08h  not defined */
                    /* opcode 0Fh 23h 09h  not defined */
                    /* opcode 0Fh 23h 0Ah  not defined */
                    /* opcode 0Fh 23h 0Bh  not defined */
                    /* opcode 0Fh 23h 0Ch  not defined */
                    /* opcode 0Fh 23h 0Dh  not defined */
                    /* opcode 0Fh 23h 0Eh  not defined */
                    /* opcode 0Fh 23h 0Fh  not defined */
                    /* opcode 0Fh 23h 10h  not defined */
                    /* opcode 0Fh 23h 11h  not defined */
                    /* opcode 0Fh 23h 12h  not defined */
                    /* opcode 0Fh 23h 13h  not defined */
                    /* opcode 0Fh 23h 14h  not defined */
                    /* opcode 0Fh 23h 15h  not defined */
                    /* opcode 0Fh 23h 16h  not defined */
                    /* opcode 0Fh 23h 17h  not defined */
                    /* opcode 0Fh 23h 18h  not defined */
                    /* opcode 0Fh 23h 19h  not defined */
                    /* opcode 0Fh 23h 1Ah  not defined */
                    /* opcode 0Fh 23h 1Bh  not defined */
                    /* opcode 0Fh 23h 1Ch  not defined */
                    /* opcode 0Fh 23h 1Dh  not defined */
                    /* opcode 0Fh 23h 1Eh  not defined */
                    /* opcode 0Fh 23h 1Fh  not defined */
                    /* opcode 0Fh 23h 20h  not defined */
                    /* opcode 0Fh 23h 21h  not defined */
                    /* opcode 0Fh 23h 22h  not defined */
                    /* opcode 0Fh 23h 23h  not defined */
                    /* opcode 0Fh 23h 24h  not defined */
                    /* opcode 0Fh 23h 25h  not defined */
                    /* opcode 0Fh 23h 26h  not defined */
                    /* opcode 0Fh 23h 27h  not defined */
                    /* opcode 0Fh 23h 28h  not defined */
                    /* opcode 0Fh 23h 29h  not defined */
                    /* opcode 0Fh 23h 2Ah  not defined */
                    /* opcode 0Fh 23h 2Bh  not defined */
                    /* opcode 0Fh 23h 2Ch  not defined */
                    /* opcode 0Fh 23h 2Dh  not defined */
                    /* opcode 0Fh 23h 2Eh  not defined */
                    /* opcode 0Fh 23h 2Fh  not defined */
                    /* opcode 0Fh 23h 30h  not defined */
                    /* opcode 0Fh 23h 31h  not defined */
                    /* opcode 0Fh 23h 32h  not defined */
                    /* opcode 0Fh 23h 33h  not defined */
                    /* opcode 0Fh 23h 34h  not defined */
                    /* opcode 0Fh 23h 35h  not defined */
                    /* opcode 0Fh 23h 36h  not defined */
                    /* opcode 0Fh 23h 37h  not defined */
                    /* opcode 0Fh 23h 38h  not defined */
                    /* opcode 0Fh 23h 39h  not defined */
                    /* opcode 0Fh 23h 3Ah  not defined */
                    /* opcode 0Fh 23h 3Bh  not defined */
                    /* opcode 0Fh 23h 3Ch  not defined */
                    /* opcode 0Fh 23h 3Dh  not defined */
                    /* opcode 0Fh 23h 3Eh  not defined */
                    /* opcode 0Fh 23h 3Fh  not defined */
                    /* opcode 0Fh 23h 40h  not defined */
                    /* opcode 0Fh 23h 41h  not defined */
                    /* opcode 0Fh 23h 42h  not defined */
                    /* opcode 0Fh 23h 43h  not defined */
                    /* opcode 0Fh 23h 44h  not defined */
                    /* opcode 0Fh 23h 45h  not defined */
                    /* opcode 0Fh 23h 46h  not defined */
                    /* opcode 0Fh 23h 47h  not defined */
                    /* opcode 0Fh 23h 48h  not defined */
                    /* opcode 0Fh 23h 49h  not defined */
                    /* opcode 0Fh 23h 4Ah  not defined */
                    /* opcode 0Fh 23h 4Bh  not defined */
                    /* opcode 0Fh 23h 4Ch  not defined */
                    /* opcode 0Fh 23h 4Dh  not defined */
                    /* opcode 0Fh 23h 4Eh  not defined */
                    /* opcode 0Fh 23h 4Fh  not defined */
                    /* opcode 0Fh 23h 50h  not defined */
                    /* opcode 0Fh 23h 51h  not defined */
                    /* opcode 0Fh 23h 52h  not defined */
                    /* opcode 0Fh 23h 53h  not defined */
                    /* opcode 0Fh 23h 54h  not defined */
                    /* opcode 0Fh 23h 55h  not defined */
                    /* opcode 0Fh 23h 56h  not defined */
                    /* opcode 0Fh 23h 57h  not defined */
                    /* opcode 0Fh 23h 58h  not defined */
                    /* opcode 0Fh 23h 59h  not defined */
                    /* opcode 0Fh 23h 5Ah  not defined */
                    /* opcode 0Fh 23h 5Bh  not defined */
                    /* opcode 0Fh 23h 5Ch  not defined */
                    /* opcode 0Fh 23h 5Dh  not defined */
                    /* opcode 0Fh 23h 5Eh  not defined */
                    /* opcode 0Fh 23h 5Fh  not defined */
                    /* opcode 0Fh 23h 60h  not defined */
                    /* opcode 0Fh 23h 61h  not defined */
                    /* opcode 0Fh 23h 62h  not defined */
                    /* opcode 0Fh 23h 63h  not defined */
                    /* opcode 0Fh 23h 64h  not defined */
                    /* opcode 0Fh 23h 65h  not defined */
                    /* opcode 0Fh 23h 66h  not defined */
                    /* opcode 0Fh 23h 67h  not defined */
                    /* opcode 0Fh 23h 68h  not defined */
                    /* opcode 0Fh 23h 69h  not defined */
                    /* opcode 0Fh 23h 6Ah  not defined */
                    /* opcode 0Fh 23h 6Bh  not defined */
                    /* opcode 0Fh 23h 6Ch  not defined */
                    /* opcode 0Fh 23h 6Dh  not defined */
                    /* opcode 0Fh 23h 6Eh  not defined */
                    /* opcode 0Fh 23h 6Fh  not defined */
                    /* opcode 0Fh 23h 70h  not defined */
                    /* opcode 0Fh 23h 71h  not defined */
                    /* opcode 0Fh 23h 72h  not defined */
                    /* opcode 0Fh 23h 73h  not defined */
                    /* opcode 0Fh 23h 74h  not defined */
                    /* opcode 0Fh 23h 75h  not defined */
                    /* opcode 0Fh 23h 76h  not defined */
                    /* opcode 0Fh 23h 77h  not defined */
                    /* opcode 0Fh 23h 78h  not defined */
                    /* opcode 0Fh 23h 79h  not defined */
                    /* opcode 0Fh 23h 7Ah  not defined */
                    /* opcode 0Fh 23h 7Bh  not defined */
                    /* opcode 0Fh 23h 7Ch  not defined */
                    /* opcode 0Fh 23h 7Dh  not defined */
                    /* opcode 0Fh 23h 7Eh  not defined */
                    /* opcode 0Fh 23h 7Fh  not defined */
                    /* opcode 0Fh 23h 80h  not defined */
                    /* opcode 0Fh 23h 81h  not defined */
                    /* opcode 0Fh 23h 82h  not defined */
                    /* opcode 0Fh 23h 83h  not defined */
                    /* opcode 0Fh 23h 84h  not defined */
                    /* opcode 0Fh 23h 85h  not defined */
                    /* opcode 0Fh 23h 86h  not defined */
                    /* opcode 0Fh 23h 87h  not defined */
                    /* opcode 0Fh 23h 88h  not defined */
                    /* opcode 0Fh 23h 89h  not defined */
                    /* opcode 0Fh 23h 8Ah  not defined */
                    /* opcode 0Fh 23h 8Bh  not defined */
                    /* opcode 0Fh 23h 8Ch  not defined */
                    /* opcode 0Fh 23h 8Dh  not defined */
                    /* opcode 0Fh 23h 8Eh  not defined */
                    /* opcode 0Fh 23h 8Fh  not defined */
                    /* opcode 0Fh 23h 90h  not defined */
                    /* opcode 0Fh 23h 91h  not defined */
                    /* opcode 0Fh 23h 92h  not defined */
                    /* opcode 0Fh 23h 93h  not defined */
                    /* opcode 0Fh 23h 94h  not defined */
                    /* opcode 0Fh 23h 95h  not defined */
                    /* opcode 0Fh 23h 96h  not defined */
                    /* opcode 0Fh 23h 97h  not defined */
                    /* opcode 0Fh 23h 98h  not defined */
                    /* opcode 0Fh 23h 99h  not defined */
                    /* opcode 0Fh 23h 9Ah  not defined */
                    /* opcode 0Fh 23h 9Bh  not defined */
                    /* opcode 0Fh 23h 9Ch  not defined */
                    /* opcode 0Fh 23h 9Dh  not defined */
                    /* opcode 0Fh 23h 9Eh  not defined */
                    /* opcode 0Fh 23h 9Fh  not defined */
                    /* opcode 0Fh 23h A0h  not defined */
                    /* opcode 0Fh 23h A1h  not defined */
                    /* opcode 0Fh 23h A2h  not defined */
                    /* opcode 0Fh 23h A3h  not defined */
                    /* opcode 0Fh 23h A4h  not defined */
                    /* opcode 0Fh 23h A5h  not defined */
                    /* opcode 0Fh 23h A6h  not defined */
                    /* opcode 0Fh 23h A7h  not defined */
                    /* opcode 0Fh 23h A8h  not defined */
                    /* opcode 0Fh 23h A9h  not defined */
                    /* opcode 0Fh 23h AAh  not defined */
                    /* opcode 0Fh 23h ABh  not defined */
                    /* opcode 0Fh 23h ACh  not defined */
                    /* opcode 0Fh 23h ADh  not defined */
                    /* opcode 0Fh 23h AEh  not defined */
                    /* opcode 0Fh 23h AFh  not defined */
                    /* opcode 0Fh 23h B0h  not defined */
                    /* opcode 0Fh 23h B1h  not defined */
                    /* opcode 0Fh 23h B2h  not defined */
                    /* opcode 0Fh 23h B3h  not defined */
                    /* opcode 0Fh 23h B4h  not defined */
                    /* opcode 0Fh 23h B5h  not defined */
                    /* opcode 0Fh 23h B6h  not defined */
                    /* opcode 0Fh 23h B7h  not defined */
                    /* opcode 0Fh 23h B8h  not defined */
                    /* opcode 0Fh 23h B9h  not defined */
                    /* opcode 0Fh 23h BAh  not defined */
                    /* opcode 0Fh 23h BBh  not defined */
                    /* opcode 0Fh 23h BCh  not defined */
                    /* opcode 0Fh 23h BDh  not defined */
                    /* opcode 0Fh 23h BEh  not defined */
                    /* opcode 0Fh 23h BFh  not defined */
                    case 0xC0: /* 0Fh 23h C0h MOVd dr(reg),w32(r/m) mod=3 reg=0 rm=0      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xC1: /* 0Fh 23h C1h MOVd dr(reg),w32(r/m) mod=3 reg=0 rm=1      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xC2: /* 0Fh 23h C2h MOVd dr(reg),w32(r/m) mod=3 reg=0 rm=2      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xC3: /* 0Fh 23h C3h MOVd dr(reg),w32(r/m) mod=3 reg=0 rm=3      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xC4: /* 0Fh 23h C4h MOVd dr(reg),w32(r/m) mod=3 reg=0 rm=4      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xC5: /* 0Fh 23h C5h MOVd dr(reg),w32(r/m) mod=3 reg=0 rm=5      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xC6: /* 0Fh 23h C6h MOVd dr(reg),w32(r/m) mod=3 reg=0 rm=6      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xC7: /* 0Fh 23h C7h MOVd dr(reg),w32(r/m) mod=3 reg=0 rm=7      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xC8: /* 0Fh 23h C8h MOVd dr(reg),w32(r/m) mod=3 reg=1 rm=0      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xC9: /* 0Fh 23h C9h MOVd dr(reg),w32(r/m) mod=3 reg=1 rm=1      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xCA: /* 0Fh 23h CAh MOVd dr(reg),w32(r/m) mod=3 reg=1 rm=2      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xCB: /* 0Fh 23h CBh MOVd dr(reg),w32(r/m) mod=3 reg=1 rm=3      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xCC: /* 0Fh 23h CCh MOVd dr(reg),w32(r/m) mod=3 reg=1 rm=4      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xCD: /* 0Fh 23h CDh MOVd dr(reg),w32(r/m) mod=3 reg=1 rm=5      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xCE: /* 0Fh 23h CEh MOVd dr(reg),w32(r/m) mod=3 reg=1 rm=6      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xCF: /* 0Fh 23h CFh MOVd dr(reg),w32(r/m) mod=3 reg=1 rm=7      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xD0: /* 0Fh 23h D0h MOVd dr(reg),w32(r/m) mod=3 reg=2 rm=0      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xD1: /* 0Fh 23h D1h MOVd dr(reg),w32(r/m) mod=3 reg=2 rm=1      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xD2: /* 0Fh 23h D2h MOVd dr(reg),w32(r/m) mod=3 reg=2 rm=2      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xD3: /* 0Fh 23h D3h MOVd dr(reg),w32(r/m) mod=3 reg=2 rm=3      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xD4: /* 0Fh 23h D4h MOVd dr(reg),w32(r/m) mod=3 reg=2 rm=4      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xD5: /* 0Fh 23h D5h MOVd dr(reg),w32(r/m) mod=3 reg=2 rm=5      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xD6: /* 0Fh 23h D6h MOVd dr(reg),w32(r/m) mod=3 reg=2 rm=6      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xD7: /* 0Fh 23h D7h MOVd dr(reg),w32(r/m) mod=3 reg=2 rm=7      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xD8: /* 0Fh 23h D8h MOVd dr(reg),w32(r/m) mod=3 reg=3 rm=0      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xD9: /* 0Fh 23h D9h MOVd dr(reg),w32(r/m) mod=3 reg=3 rm=1      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xDA: /* 0Fh 23h DAh MOVd dr(reg),w32(r/m) mod=3 reg=3 rm=2      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xDB: /* 0Fh 23h DBh MOVd dr(reg),w32(r/m) mod=3 reg=3 rm=3      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xDC: /* 0Fh 23h DCh MOVd dr(reg),w32(r/m) mod=3 reg=3 rm=4      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xDD: /* 0Fh 23h DDh MOVd dr(reg),w32(r/m) mod=3 reg=3 rm=5      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xDE: /* 0Fh 23h DEh MOVd dr(reg),w32(r/m) mod=3 reg=3 rm=6      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xDF: /* 0Fh 23h DFh MOVd dr(reg),w32(r/m) mod=3 reg=3 rm=7      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xE0: /* 0Fh 23h E0h MOVd dr(reg),w32(r/m) mod=3 reg=4 rm=0      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xE1: /* 0Fh 23h E1h MOVd dr(reg),w32(r/m) mod=3 reg=4 rm=1      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xE2: /* 0Fh 23h E2h MOVd dr(reg),w32(r/m) mod=3 reg=4 rm=2      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xE3: /* 0Fh 23h E3h MOVd dr(reg),w32(r/m) mod=3 reg=4 rm=3      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xE4: /* 0Fh 23h E4h MOVd dr(reg),w32(r/m) mod=3 reg=4 rm=4      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xE5: /* 0Fh 23h E5h MOVd dr(reg),w32(r/m) mod=3 reg=4 rm=5      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xE6: /* 0Fh 23h E6h MOVd dr(reg),w32(r/m) mod=3 reg=4 rm=6      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xE7: /* 0Fh 23h E7h MOVd dr(reg),w32(r/m) mod=3 reg=4 rm=7      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xE8: /* 0Fh 23h E8h MOVd dr(reg),w32(r/m) mod=3 reg=5 rm=0      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xE9: /* 0Fh 23h E9h MOVd dr(reg),w32(r/m) mod=3 reg=5 rm=1      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xEA: /* 0Fh 23h EAh MOVd dr(reg),w32(r/m) mod=3 reg=5 rm=2      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xEB: /* 0Fh 23h EBh MOVd dr(reg),w32(r/m) mod=3 reg=5 rm=3      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xEC: /* 0Fh 23h ECh MOVd dr(reg),w32(r/m) mod=3 reg=5 rm=4      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xED: /* 0Fh 23h EDh MOVd dr(reg),w32(r/m) mod=3 reg=5 rm=5      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xEE: /* 0Fh 23h EEh MOVd dr(reg),w32(r/m) mod=3 reg=5 rm=6      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xEF: /* 0Fh 23h EFh MOVd dr(reg),w32(r/m) mod=3 reg=5 rm=7      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xF0: /* 0Fh 23h F0h MOVd dr(reg),w32(r/m) mod=3 reg=6 rm=0      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xF1: /* 0Fh 23h F1h MOVd dr(reg),w32(r/m) mod=3 reg=6 rm=1      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xF2: /* 0Fh 23h F2h MOVd dr(reg),w32(r/m) mod=3 reg=6 rm=2      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xF3: /* 0Fh 23h F3h MOVd dr(reg),w32(r/m) mod=3 reg=6 rm=3      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xF4: /* 0Fh 23h F4h MOVd dr(reg),w32(r/m) mod=3 reg=6 rm=4      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xF5: /* 0Fh 23h F5h MOVd dr(reg),w32(r/m) mod=3 reg=6 rm=5      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xF6: /* 0Fh 23h F6h MOVd dr(reg),w32(r/m) mod=3 reg=6 rm=6      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xF7: /* 0Fh 23h F7h MOVd dr(reg),w32(r/m) mod=3 reg=6 rm=7      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xF8: /* 0Fh 23h F8h MOVd dr(reg),w32(r/m) mod=3 reg=7 rm=0      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xF9: /* 0Fh 23h F9h MOVd dr(reg),w32(r/m) mod=3 reg=7 rm=1      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xFA: /* 0Fh 23h FAh MOVd dr(reg),w32(r/m) mod=3 reg=7 rm=2      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xFB: /* 0Fh 23h FBh MOVd dr(reg),w32(r/m) mod=3 reg=7 rm=3      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xFC: /* 0Fh 23h FCh MOVd dr(reg),w32(r/m) mod=3 reg=7 rm=4      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xFD: /* 0Fh 23h FDh MOVd dr(reg),w32(r/m) mod=3 reg=7 rm=5      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xFE: /* 0Fh 23h FEh MOVd dr(reg),w32(r/m) mod=3 reg=7 rm=6      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                    case 0xFF: /* 0Fh 23h FFh MOVd dr(reg),w32(r/m) mod=3 reg=7 rm=7      spec: 0x0F 0x23 mod/reg/rm mod==3 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVd DR%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,4,RC_REG,"w32"));
                        break;
                    default:
                        goto _x86decode_illegal_opcode;
                };
/* End of opcodes starting with 0Fh 23h */
                break;
            /* opcode 0Fh 24h  not defined */
            /* opcode 0Fh 25h  not defined */
            /* opcode 0Fh 26h  not defined */
            /* opcode 0Fh 27h  not defined */
            case 0x28: /* 0Fh 28h MOVAPS sse(reg),sse(r/m)      spec: 0x0F 0x28 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVAPS XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                break;
            case 0x29: /* 0Fh 29h MOVAPS sse(r/m),sse(reg)      spec: 0x0F 0x29 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVAPS %s,XMM%u",IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""),mrm.reg());
                break;
            case 0x2A: /* 0Fh 2Ah CVTPI2PS sse(reg),mmx(r/m)      spec: 0x0F 0x2A mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CVTPI2PS XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                break;
            case 0x2B: /* 0Fh 2Bh        spec:  */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                _x86decode_begin_code32_addr32_opcode_parse_0F2B:
/* Opcodes starting with 0Fh 2Bh */
                switch (mrm.byte) {
                    case 0x00: /* 0Fh 2Bh 00h MOVNTPS sse(r/m),sse(reg) mod=0 reg=0 rm=0      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x01: /* 0Fh 2Bh 01h MOVNTPS sse(r/m),sse(reg) mod=0 reg=0 rm=1      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x02: /* 0Fh 2Bh 02h MOVNTPS sse(r/m),sse(reg) mod=0 reg=0 rm=2      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x03: /* 0Fh 2Bh 03h MOVNTPS sse(r/m),sse(reg) mod=0 reg=0 rm=3      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x04: /* 0Fh 2Bh 04h MOVNTPS sse(r/m),sse(reg) mod=0 reg=0 rm=4      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x05: /* 0Fh 2Bh 05h MOVNTPS sse(r/m),sse(reg) mod=0 reg=0 rm=5      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x06: /* 0Fh 2Bh 06h MOVNTPS sse(r/m),sse(reg) mod=0 reg=0 rm=6      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x07: /* 0Fh 2Bh 07h MOVNTPS sse(r/m),sse(reg) mod=0 reg=0 rm=7      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x08: /* 0Fh 2Bh 08h MOVNTPS sse(r/m),sse(reg) mod=0 reg=1 rm=0      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x09: /* 0Fh 2Bh 09h MOVNTPS sse(r/m),sse(reg) mod=0 reg=1 rm=1      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x0A: /* 0Fh 2Bh 0Ah MOVNTPS sse(r/m),sse(reg) mod=0 reg=1 rm=2      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x0B: /* 0Fh 2Bh 0Bh MOVNTPS sse(r/m),sse(reg) mod=0 reg=1 rm=3      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x0C: /* 0Fh 2Bh 0Ch MOVNTPS sse(r/m),sse(reg) mod=0 reg=1 rm=4      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x0D: /* 0Fh 2Bh 0Dh MOVNTPS sse(r/m),sse(reg) mod=0 reg=1 rm=5      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x0E: /* 0Fh 2Bh 0Eh MOVNTPS sse(r/m),sse(reg) mod=0 reg=1 rm=6      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x0F: /* 0Fh 2Bh 0Fh MOVNTPS sse(r/m),sse(reg) mod=0 reg=1 rm=7      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x10: /* 0Fh 2Bh 10h MOVNTPS sse(r/m),sse(reg) mod=0 reg=2 rm=0      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x11: /* 0Fh 2Bh 11h MOVNTPS sse(r/m),sse(reg) mod=0 reg=2 rm=1      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x12: /* 0Fh 2Bh 12h MOVNTPS sse(r/m),sse(reg) mod=0 reg=2 rm=2      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x13: /* 0Fh 2Bh 13h MOVNTPS sse(r/m),sse(reg) mod=0 reg=2 rm=3      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x14: /* 0Fh 2Bh 14h MOVNTPS sse(r/m),sse(reg) mod=0 reg=2 rm=4      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x15: /* 0Fh 2Bh 15h MOVNTPS sse(r/m),sse(reg) mod=0 reg=2 rm=5      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x16: /* 0Fh 2Bh 16h MOVNTPS sse(r/m),sse(reg) mod=0 reg=2 rm=6      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x17: /* 0Fh 2Bh 17h MOVNTPS sse(r/m),sse(reg) mod=0 reg=2 rm=7      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x18: /* 0Fh 2Bh 18h MOVNTPS sse(r/m),sse(reg) mod=0 reg=3 rm=0      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x19: /* 0Fh 2Bh 19h MOVNTPS sse(r/m),sse(reg) mod=0 reg=3 rm=1      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x1A: /* 0Fh 2Bh 1Ah MOVNTPS sse(r/m),sse(reg) mod=0 reg=3 rm=2      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x1B: /* 0Fh 2Bh 1Bh MOVNTPS sse(r/m),sse(reg) mod=0 reg=3 rm=3      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x1C: /* 0Fh 2Bh 1Ch MOVNTPS sse(r/m),sse(reg) mod=0 reg=3 rm=4      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x1D: /* 0Fh 2Bh 1Dh MOVNTPS sse(r/m),sse(reg) mod=0 reg=3 rm=5      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x1E: /* 0Fh 2Bh 1Eh MOVNTPS sse(r/m),sse(reg) mod=0 reg=3 rm=6      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x1F: /* 0Fh 2Bh 1Fh MOVNTPS sse(r/m),sse(reg) mod=0 reg=3 rm=7      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x20: /* 0Fh 2Bh 20h MOVNTPS sse(r/m),sse(reg) mod=0 reg=4 rm=0      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x21: /* 0Fh 2Bh 21h MOVNTPS sse(r/m),sse(reg) mod=0 reg=4 rm=1      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x22: /* 0Fh 2Bh 22h MOVNTPS sse(r/m),sse(reg) mod=0 reg=4 rm=2      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x23: /* 0Fh 2Bh 23h MOVNTPS sse(r/m),sse(reg) mod=0 reg=4 rm=3      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x24: /* 0Fh 2Bh 24h MOVNTPS sse(r/m),sse(reg) mod=0 reg=4 rm=4      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x25: /* 0Fh 2Bh 25h MOVNTPS sse(r/m),sse(reg) mod=0 reg=4 rm=5      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x26: /* 0Fh 2Bh 26h MOVNTPS sse(r/m),sse(reg) mod=0 reg=4 rm=6      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x27: /* 0Fh 2Bh 27h MOVNTPS sse(r/m),sse(reg) mod=0 reg=4 rm=7      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x28: /* 0Fh 2Bh 28h MOVNTPS sse(r/m),sse(reg) mod=0 reg=5 rm=0      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x29: /* 0Fh 2Bh 29h MOVNTPS sse(r/m),sse(reg) mod=0 reg=5 rm=1      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x2A: /* 0Fh 2Bh 2Ah MOVNTPS sse(r/m),sse(reg) mod=0 reg=5 rm=2      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x2B: /* 0Fh 2Bh 2Bh MOVNTPS sse(r/m),sse(reg) mod=0 reg=5 rm=3      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x2C: /* 0Fh 2Bh 2Ch MOVNTPS sse(r/m),sse(reg) mod=0 reg=5 rm=4      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x2D: /* 0Fh 2Bh 2Dh MOVNTPS sse(r/m),sse(reg) mod=0 reg=5 rm=5      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x2E: /* 0Fh 2Bh 2Eh MOVNTPS sse(r/m),sse(reg) mod=0 reg=5 rm=6      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x2F: /* 0Fh 2Bh 2Fh MOVNTPS sse(r/m),sse(reg) mod=0 reg=5 rm=7      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x30: /* 0Fh 2Bh 30h MOVNTPS sse(r/m),sse(reg) mod=0 reg=6 rm=0      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x31: /* 0Fh 2Bh 31h MOVNTPS sse(r/m),sse(reg) mod=0 reg=6 rm=1      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x32: /* 0Fh 2Bh 32h MOVNTPS sse(r/m),sse(reg) mod=0 reg=6 rm=2      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x33: /* 0Fh 2Bh 33h MOVNTPS sse(r/m),sse(reg) mod=0 reg=6 rm=3      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x34: /* 0Fh 2Bh 34h MOVNTPS sse(r/m),sse(reg) mod=0 reg=6 rm=4      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x35: /* 0Fh 2Bh 35h MOVNTPS sse(r/m),sse(reg) mod=0 reg=6 rm=5      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x36: /* 0Fh 2Bh 36h MOVNTPS sse(r/m),sse(reg) mod=0 reg=6 rm=6      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x37: /* 0Fh 2Bh 37h MOVNTPS sse(r/m),sse(reg) mod=0 reg=6 rm=7      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x38: /* 0Fh 2Bh 38h MOVNTPS sse(r/m),sse(reg) mod=0 reg=7 rm=0      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x39: /* 0Fh 2Bh 39h MOVNTPS sse(r/m),sse(reg) mod=0 reg=7 rm=1      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x3A: /* 0Fh 2Bh 3Ah MOVNTPS sse(r/m),sse(reg) mod=0 reg=7 rm=2      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x3B: /* 0Fh 2Bh 3Bh MOVNTPS sse(r/m),sse(reg) mod=0 reg=7 rm=3      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x3C: /* 0Fh 2Bh 3Ch MOVNTPS sse(r/m),sse(reg) mod=0 reg=7 rm=4      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x3D: /* 0Fh 2Bh 3Dh MOVNTPS sse(r/m),sse(reg) mod=0 reg=7 rm=5      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x3E: /* 0Fh 2Bh 3Eh MOVNTPS sse(r/m),sse(reg) mod=0 reg=7 rm=6      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x3F: /* 0Fh 2Bh 3Fh MOVNTPS sse(r/m),sse(reg) mod=0 reg=7 rm=7      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x40: /* 0Fh 2Bh 40h MOVNTPS sse(r/m),sse(reg) mod=1 reg=0 rm=0      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x41: /* 0Fh 2Bh 41h MOVNTPS sse(r/m),sse(reg) mod=1 reg=0 rm=1      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x42: /* 0Fh 2Bh 42h MOVNTPS sse(r/m),sse(reg) mod=1 reg=0 rm=2      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x43: /* 0Fh 2Bh 43h MOVNTPS sse(r/m),sse(reg) mod=1 reg=0 rm=3      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x44: /* 0Fh 2Bh 44h MOVNTPS sse(r/m),sse(reg) mod=1 reg=0 rm=4      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x45: /* 0Fh 2Bh 45h MOVNTPS sse(r/m),sse(reg) mod=1 reg=0 rm=5      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x46: /* 0Fh 2Bh 46h MOVNTPS sse(r/m),sse(reg) mod=1 reg=0 rm=6      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x47: /* 0Fh 2Bh 47h MOVNTPS sse(r/m),sse(reg) mod=1 reg=0 rm=7      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x48: /* 0Fh 2Bh 48h MOVNTPS sse(r/m),sse(reg) mod=1 reg=1 rm=0      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x49: /* 0Fh 2Bh 49h MOVNTPS sse(r/m),sse(reg) mod=1 reg=1 rm=1      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x4A: /* 0Fh 2Bh 4Ah MOVNTPS sse(r/m),sse(reg) mod=1 reg=1 rm=2      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x4B: /* 0Fh 2Bh 4Bh MOVNTPS sse(r/m),sse(reg) mod=1 reg=1 rm=3      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x4C: /* 0Fh 2Bh 4Ch MOVNTPS sse(r/m),sse(reg) mod=1 reg=1 rm=4      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x4D: /* 0Fh 2Bh 4Dh MOVNTPS sse(r/m),sse(reg) mod=1 reg=1 rm=5      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x4E: /* 0Fh 2Bh 4Eh MOVNTPS sse(r/m),sse(reg) mod=1 reg=1 rm=6      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x4F: /* 0Fh 2Bh 4Fh MOVNTPS sse(r/m),sse(reg) mod=1 reg=1 rm=7      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x50: /* 0Fh 2Bh 50h MOVNTPS sse(r/m),sse(reg) mod=1 reg=2 rm=0      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x51: /* 0Fh 2Bh 51h MOVNTPS sse(r/m),sse(reg) mod=1 reg=2 rm=1      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x52: /* 0Fh 2Bh 52h MOVNTPS sse(r/m),sse(reg) mod=1 reg=2 rm=2      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x53: /* 0Fh 2Bh 53h MOVNTPS sse(r/m),sse(reg) mod=1 reg=2 rm=3      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x54: /* 0Fh 2Bh 54h MOVNTPS sse(r/m),sse(reg) mod=1 reg=2 rm=4      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x55: /* 0Fh 2Bh 55h MOVNTPS sse(r/m),sse(reg) mod=1 reg=2 rm=5      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x56: /* 0Fh 2Bh 56h MOVNTPS sse(r/m),sse(reg) mod=1 reg=2 rm=6      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x57: /* 0Fh 2Bh 57h MOVNTPS sse(r/m),sse(reg) mod=1 reg=2 rm=7      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x58: /* 0Fh 2Bh 58h MOVNTPS sse(r/m),sse(reg) mod=1 reg=3 rm=0      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x59: /* 0Fh 2Bh 59h MOVNTPS sse(r/m),sse(reg) mod=1 reg=3 rm=1      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x5A: /* 0Fh 2Bh 5Ah MOVNTPS sse(r/m),sse(reg) mod=1 reg=3 rm=2      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x5B: /* 0Fh 2Bh 5Bh MOVNTPS sse(r/m),sse(reg) mod=1 reg=3 rm=3      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x5C: /* 0Fh 2Bh 5Ch MOVNTPS sse(r/m),sse(reg) mod=1 reg=3 rm=4      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x5D: /* 0Fh 2Bh 5Dh MOVNTPS sse(r/m),sse(reg) mod=1 reg=3 rm=5      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x5E: /* 0Fh 2Bh 5Eh MOVNTPS sse(r/m),sse(reg) mod=1 reg=3 rm=6      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x5F: /* 0Fh 2Bh 5Fh MOVNTPS sse(r/m),sse(reg) mod=1 reg=3 rm=7      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x60: /* 0Fh 2Bh 60h MOVNTPS sse(r/m),sse(reg) mod=1 reg=4 rm=0      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x61: /* 0Fh 2Bh 61h MOVNTPS sse(r/m),sse(reg) mod=1 reg=4 rm=1      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x62: /* 0Fh 2Bh 62h MOVNTPS sse(r/m),sse(reg) mod=1 reg=4 rm=2      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x63: /* 0Fh 2Bh 63h MOVNTPS sse(r/m),sse(reg) mod=1 reg=4 rm=3      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x64: /* 0Fh 2Bh 64h MOVNTPS sse(r/m),sse(reg) mod=1 reg=4 rm=4      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x65: /* 0Fh 2Bh 65h MOVNTPS sse(r/m),sse(reg) mod=1 reg=4 rm=5      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x66: /* 0Fh 2Bh 66h MOVNTPS sse(r/m),sse(reg) mod=1 reg=4 rm=6      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x67: /* 0Fh 2Bh 67h MOVNTPS sse(r/m),sse(reg) mod=1 reg=4 rm=7      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x68: /* 0Fh 2Bh 68h MOVNTPS sse(r/m),sse(reg) mod=1 reg=5 rm=0      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x69: /* 0Fh 2Bh 69h MOVNTPS sse(r/m),sse(reg) mod=1 reg=5 rm=1      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x6A: /* 0Fh 2Bh 6Ah MOVNTPS sse(r/m),sse(reg) mod=1 reg=5 rm=2      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x6B: /* 0Fh 2Bh 6Bh MOVNTPS sse(r/m),sse(reg) mod=1 reg=5 rm=3      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x6C: /* 0Fh 2Bh 6Ch MOVNTPS sse(r/m),sse(reg) mod=1 reg=5 rm=4      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x6D: /* 0Fh 2Bh 6Dh MOVNTPS sse(r/m),sse(reg) mod=1 reg=5 rm=5      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x6E: /* 0Fh 2Bh 6Eh MOVNTPS sse(r/m),sse(reg) mod=1 reg=5 rm=6      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x6F: /* 0Fh 2Bh 6Fh MOVNTPS sse(r/m),sse(reg) mod=1 reg=5 rm=7      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x70: /* 0Fh 2Bh 70h MOVNTPS sse(r/m),sse(reg) mod=1 reg=6 rm=0      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x71: /* 0Fh 2Bh 71h MOVNTPS sse(r/m),sse(reg) mod=1 reg=6 rm=1      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x72: /* 0Fh 2Bh 72h MOVNTPS sse(r/m),sse(reg) mod=1 reg=6 rm=2      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x73: /* 0Fh 2Bh 73h MOVNTPS sse(r/m),sse(reg) mod=1 reg=6 rm=3      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x74: /* 0Fh 2Bh 74h MOVNTPS sse(r/m),sse(reg) mod=1 reg=6 rm=4      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x75: /* 0Fh 2Bh 75h MOVNTPS sse(r/m),sse(reg) mod=1 reg=6 rm=5      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x76: /* 0Fh 2Bh 76h MOVNTPS sse(r/m),sse(reg) mod=1 reg=6 rm=6      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x77: /* 0Fh 2Bh 77h MOVNTPS sse(r/m),sse(reg) mod=1 reg=6 rm=7      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x78: /* 0Fh 2Bh 78h MOVNTPS sse(r/m),sse(reg) mod=1 reg=7 rm=0      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x79: /* 0Fh 2Bh 79h MOVNTPS sse(r/m),sse(reg) mod=1 reg=7 rm=1      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x7A: /* 0Fh 2Bh 7Ah MOVNTPS sse(r/m),sse(reg) mod=1 reg=7 rm=2      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x7B: /* 0Fh 2Bh 7Bh MOVNTPS sse(r/m),sse(reg) mod=1 reg=7 rm=3      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x7C: /* 0Fh 2Bh 7Ch MOVNTPS sse(r/m),sse(reg) mod=1 reg=7 rm=4      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x7D: /* 0Fh 2Bh 7Dh MOVNTPS sse(r/m),sse(reg) mod=1 reg=7 rm=5      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x7E: /* 0Fh 2Bh 7Eh MOVNTPS sse(r/m),sse(reg) mod=1 reg=7 rm=6      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x7F: /* 0Fh 2Bh 7Fh MOVNTPS sse(r/m),sse(reg) mod=1 reg=7 rm=7      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x80: /* 0Fh 2Bh 80h MOVNTPS sse(r/m),sse(reg) mod=2 reg=0 rm=0      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x81: /* 0Fh 2Bh 81h MOVNTPS sse(r/m),sse(reg) mod=2 reg=0 rm=1      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x82: /* 0Fh 2Bh 82h MOVNTPS sse(r/m),sse(reg) mod=2 reg=0 rm=2      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x83: /* 0Fh 2Bh 83h MOVNTPS sse(r/m),sse(reg) mod=2 reg=0 rm=3      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x84: /* 0Fh 2Bh 84h MOVNTPS sse(r/m),sse(reg) mod=2 reg=0 rm=4      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x85: /* 0Fh 2Bh 85h MOVNTPS sse(r/m),sse(reg) mod=2 reg=0 rm=5      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x86: /* 0Fh 2Bh 86h MOVNTPS sse(r/m),sse(reg) mod=2 reg=0 rm=6      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x87: /* 0Fh 2Bh 87h MOVNTPS sse(r/m),sse(reg) mod=2 reg=0 rm=7      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x88: /* 0Fh 2Bh 88h MOVNTPS sse(r/m),sse(reg) mod=2 reg=1 rm=0      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x89: /* 0Fh 2Bh 89h MOVNTPS sse(r/m),sse(reg) mod=2 reg=1 rm=1      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x8A: /* 0Fh 2Bh 8Ah MOVNTPS sse(r/m),sse(reg) mod=2 reg=1 rm=2      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x8B: /* 0Fh 2Bh 8Bh MOVNTPS sse(r/m),sse(reg) mod=2 reg=1 rm=3      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x8C: /* 0Fh 2Bh 8Ch MOVNTPS sse(r/m),sse(reg) mod=2 reg=1 rm=4      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x8D: /* 0Fh 2Bh 8Dh MOVNTPS sse(r/m),sse(reg) mod=2 reg=1 rm=5      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x8E: /* 0Fh 2Bh 8Eh MOVNTPS sse(r/m),sse(reg) mod=2 reg=1 rm=6      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x8F: /* 0Fh 2Bh 8Fh MOVNTPS sse(r/m),sse(reg) mod=2 reg=1 rm=7      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x90: /* 0Fh 2Bh 90h MOVNTPS sse(r/m),sse(reg) mod=2 reg=2 rm=0      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x91: /* 0Fh 2Bh 91h MOVNTPS sse(r/m),sse(reg) mod=2 reg=2 rm=1      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x92: /* 0Fh 2Bh 92h MOVNTPS sse(r/m),sse(reg) mod=2 reg=2 rm=2      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x93: /* 0Fh 2Bh 93h MOVNTPS sse(r/m),sse(reg) mod=2 reg=2 rm=3      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x94: /* 0Fh 2Bh 94h MOVNTPS sse(r/m),sse(reg) mod=2 reg=2 rm=4      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x95: /* 0Fh 2Bh 95h MOVNTPS sse(r/m),sse(reg) mod=2 reg=2 rm=5      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x96: /* 0Fh 2Bh 96h MOVNTPS sse(r/m),sse(reg) mod=2 reg=2 rm=6      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x97: /* 0Fh 2Bh 97h MOVNTPS sse(r/m),sse(reg) mod=2 reg=2 rm=7      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x98: /* 0Fh 2Bh 98h MOVNTPS sse(r/m),sse(reg) mod=2 reg=3 rm=0      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x99: /* 0Fh 2Bh 99h MOVNTPS sse(r/m),sse(reg) mod=2 reg=3 rm=1      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x9A: /* 0Fh 2Bh 9Ah MOVNTPS sse(r/m),sse(reg) mod=2 reg=3 rm=2      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x9B: /* 0Fh 2Bh 9Bh MOVNTPS sse(r/m),sse(reg) mod=2 reg=3 rm=3      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x9C: /* 0Fh 2Bh 9Ch MOVNTPS sse(r/m),sse(reg) mod=2 reg=3 rm=4      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x9D: /* 0Fh 2Bh 9Dh MOVNTPS sse(r/m),sse(reg) mod=2 reg=3 rm=5      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x9E: /* 0Fh 2Bh 9Eh MOVNTPS sse(r/m),sse(reg) mod=2 reg=3 rm=6      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0x9F: /* 0Fh 2Bh 9Fh MOVNTPS sse(r/m),sse(reg) mod=2 reg=3 rm=7      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0xA0: /* 0Fh 2Bh A0h MOVNTPS sse(r/m),sse(reg) mod=2 reg=4 rm=0      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0xA1: /* 0Fh 2Bh A1h MOVNTPS sse(r/m),sse(reg) mod=2 reg=4 rm=1      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0xA2: /* 0Fh 2Bh A2h MOVNTPS sse(r/m),sse(reg) mod=2 reg=4 rm=2      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0xA3: /* 0Fh 2Bh A3h MOVNTPS sse(r/m),sse(reg) mod=2 reg=4 rm=3      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0xA4: /* 0Fh 2Bh A4h MOVNTPS sse(r/m),sse(reg) mod=2 reg=4 rm=4      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0xA5: /* 0Fh 2Bh A5h MOVNTPS sse(r/m),sse(reg) mod=2 reg=4 rm=5      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0xA6: /* 0Fh 2Bh A6h MOVNTPS sse(r/m),sse(reg) mod=2 reg=4 rm=6      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0xA7: /* 0Fh 2Bh A7h MOVNTPS sse(r/m),sse(reg) mod=2 reg=4 rm=7      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0xA8: /* 0Fh 2Bh A8h MOVNTPS sse(r/m),sse(reg) mod=2 reg=5 rm=0      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0xA9: /* 0Fh 2Bh A9h MOVNTPS sse(r/m),sse(reg) mod=2 reg=5 rm=1      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0xAA: /* 0Fh 2Bh AAh MOVNTPS sse(r/m),sse(reg) mod=2 reg=5 rm=2      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0xAB: /* 0Fh 2Bh ABh MOVNTPS sse(r/m),sse(reg) mod=2 reg=5 rm=3      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0xAC: /* 0Fh 2Bh ACh MOVNTPS sse(r/m),sse(reg) mod=2 reg=5 rm=4      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0xAD: /* 0Fh 2Bh ADh MOVNTPS sse(r/m),sse(reg) mod=2 reg=5 rm=5      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0xAE: /* 0Fh 2Bh AEh MOVNTPS sse(r/m),sse(reg) mod=2 reg=5 rm=6      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0xAF: /* 0Fh 2Bh AFh MOVNTPS sse(r/m),sse(reg) mod=2 reg=5 rm=7      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0xB0: /* 0Fh 2Bh B0h MOVNTPS sse(r/m),sse(reg) mod=2 reg=6 rm=0      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0xB1: /* 0Fh 2Bh B1h MOVNTPS sse(r/m),sse(reg) mod=2 reg=6 rm=1      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0xB2: /* 0Fh 2Bh B2h MOVNTPS sse(r/m),sse(reg) mod=2 reg=6 rm=2      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0xB3: /* 0Fh 2Bh B3h MOVNTPS sse(r/m),sse(reg) mod=2 reg=6 rm=3      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0xB4: /* 0Fh 2Bh B4h MOVNTPS sse(r/m),sse(reg) mod=2 reg=6 rm=4      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0xB5: /* 0Fh 2Bh B5h MOVNTPS sse(r/m),sse(reg) mod=2 reg=6 rm=5      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0xB6: /* 0Fh 2Bh B6h MOVNTPS sse(r/m),sse(reg) mod=2 reg=6 rm=6      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0xB7: /* 0Fh 2Bh B7h MOVNTPS sse(r/m),sse(reg) mod=2 reg=6 rm=7      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0xB8: /* 0Fh 2Bh B8h MOVNTPS sse(r/m),sse(reg) mod=2 reg=7 rm=0      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0xB9: /* 0Fh 2Bh B9h MOVNTPS sse(r/m),sse(reg) mod=2 reg=7 rm=1      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0xBA: /* 0Fh 2Bh BAh MOVNTPS sse(r/m),sse(reg) mod=2 reg=7 rm=2      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0xBB: /* 0Fh 2Bh BBh MOVNTPS sse(r/m),sse(reg) mod=2 reg=7 rm=3      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0xBC: /* 0Fh 2Bh BCh MOVNTPS sse(r/m),sse(reg) mod=2 reg=7 rm=4      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0xBD: /* 0Fh 2Bh BDh MOVNTPS sse(r/m),sse(reg) mod=2 reg=7 rm=5      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0xBE: /* 0Fh 2Bh BEh MOVNTPS sse(r/m),sse(reg) mod=2 reg=7 rm=6      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                    case 0xBF: /* 0Fh 2Bh BFh MOVNTPS sse(r/m),sse(reg) mod=2 reg=7 rm=7      spec: 0x0F 0x2B mod/reg/rm mod!=3 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVNTPS %s,XMM%u",IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""),mrm.reg());
                        break;
                    /* opcode 0Fh 2Bh C0h  not defined */
                    /* opcode 0Fh 2Bh C1h  not defined */
                    /* opcode 0Fh 2Bh C2h  not defined */
                    /* opcode 0Fh 2Bh C3h  not defined */
                    /* opcode 0Fh 2Bh C4h  not defined */
                    /* opcode 0Fh 2Bh C5h  not defined */
                    /* opcode 0Fh 2Bh C6h  not defined */
                    /* opcode 0Fh 2Bh C7h  not defined */
                    /* opcode 0Fh 2Bh C8h  not defined */
                    /* opcode 0Fh 2Bh C9h  not defined */
                    /* opcode 0Fh 2Bh CAh  not defined */
                    /* opcode 0Fh 2Bh CBh  not defined */
                    /* opcode 0Fh 2Bh CCh  not defined */
                    /* opcode 0Fh 2Bh CDh  not defined */
                    /* opcode 0Fh 2Bh CEh  not defined */
                    /* opcode 0Fh 2Bh CFh  not defined */
                    /* opcode 0Fh 2Bh D0h  not defined */
                    /* opcode 0Fh 2Bh D1h  not defined */
                    /* opcode 0Fh 2Bh D2h  not defined */
                    /* opcode 0Fh 2Bh D3h  not defined */
                    /* opcode 0Fh 2Bh D4h  not defined */
                    /* opcode 0Fh 2Bh D5h  not defined */
                    /* opcode 0Fh 2Bh D6h  not defined */
                    /* opcode 0Fh 2Bh D7h  not defined */
                    /* opcode 0Fh 2Bh D8h  not defined */
                    /* opcode 0Fh 2Bh D9h  not defined */
                    /* opcode 0Fh 2Bh DAh  not defined */
                    /* opcode 0Fh 2Bh DBh  not defined */
                    /* opcode 0Fh 2Bh DCh  not defined */
                    /* opcode 0Fh 2Bh DDh  not defined */
                    /* opcode 0Fh 2Bh DEh  not defined */
                    /* opcode 0Fh 2Bh DFh  not defined */
                    /* opcode 0Fh 2Bh E0h  not defined */
                    /* opcode 0Fh 2Bh E1h  not defined */
                    /* opcode 0Fh 2Bh E2h  not defined */
                    /* opcode 0Fh 2Bh E3h  not defined */
                    /* opcode 0Fh 2Bh E4h  not defined */
                    /* opcode 0Fh 2Bh E5h  not defined */
                    /* opcode 0Fh 2Bh E6h  not defined */
                    /* opcode 0Fh 2Bh E7h  not defined */
                    /* opcode 0Fh 2Bh E8h  not defined */
                    /* opcode 0Fh 2Bh E9h  not defined */
                    /* opcode 0Fh 2Bh EAh  not defined */
                    /* opcode 0Fh 2Bh EBh  not defined */
                    /* opcode 0Fh 2Bh ECh  not defined */
                    /* opcode 0Fh 2Bh EDh  not defined */
                    /* opcode 0Fh 2Bh EEh  not defined */
                    /* opcode 0Fh 2Bh EFh  not defined */
                    /* opcode 0Fh 2Bh F0h  not defined */
                    /* opcode 0Fh 2Bh F1h  not defined */
                    /* opcode 0Fh 2Bh F2h  not defined */
                    /* opcode 0Fh 2Bh F3h  not defined */
                    /* opcode 0Fh 2Bh F4h  not defined */
                    /* opcode 0Fh 2Bh F5h  not defined */
                    /* opcode 0Fh 2Bh F6h  not defined */
                    /* opcode 0Fh 2Bh F7h  not defined */
                    /* opcode 0Fh 2Bh F8h  not defined */
                    /* opcode 0Fh 2Bh F9h  not defined */
                    /* opcode 0Fh 2Bh FAh  not defined */
                    /* opcode 0Fh 2Bh FBh  not defined */
                    /* opcode 0Fh 2Bh FCh  not defined */
                    /* opcode 0Fh 2Bh FDh  not defined */
                    /* opcode 0Fh 2Bh FEh  not defined */
                    /* opcode 0Fh 2Bh FFh  not defined */
                    default:
                        goto _x86decode_illegal_opcode;
                };
/* End of opcodes starting with 0Fh 2Bh */
                break;
            case 0x2C: /* 0Fh 2Ch CVTTPS2PI mmx(reg),sse(r/m)      spec: 0x0F 0x2C mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CVTTPS2PI MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                break;
            case 0x2D: /* 0Fh 2Dh CVTPS2PI mmx(reg),sse(r/m)      spec: 0x0F 0x2D mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CVTPS2PI MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                break;
            case 0x2E: /* 0Fh 2Eh UCOMISS sse(reg),sse(r/m)      spec: 0x0F 0x2E mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"UCOMISS XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                break;
            case 0x2F: /* 0Fh 2Fh COMISS sse(reg),sse(r/m)      spec: 0x0F 0x2F mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"COMISS XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                break;
            case 0x30: /* 0Fh 30h WRMSR       spec: 0x0F 0x30 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"WRMSR");
                break;
            case 0x31: /* 0Fh 31h RDTSC       spec: 0x0F 0x31 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"RDTSC");
                break;
            case 0x32: /* 0Fh 32h RDMSR       spec: 0x0F 0x32 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"RDMSR");
                break;
            case 0x33: /* 0Fh 33h RDPMC       spec: 0x0F 0x33 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"RDPMC");
                break;
            case 0x34: /* 0Fh 34h SYSENTER       spec: 0x0F 0x34 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SYSENTER");
                break;
            case 0x35: /* 0Fh 35h SYSEXIT       spec: 0x0F 0x35 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SYSEXIT");
                break;
            /* opcode 0Fh 36h  not defined */
            case 0x37: /* 0Fh 37h GETSEC       spec: 0x0F 0x37 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"GETSEC");
                break;
            case 0x38: /* 0Fh 38h        spec:  */
/* Opcodes starting with 0Fh 38h */
                op=IPFB();
                _x86decode_begin_code32_addr32_opcode_parse_0F38:
                switch (op) {
                    case 0x00: /* 0Fh 38h 00h PSHUFB mmx(reg),mmx(r/m)      spec: 0x0F 0x38 0x00 mod/reg/rm */
                        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSHUFB MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                        break;
                    case 0x01: /* 0Fh 38h 01h PHADDW mmx(reg),mmx(r/m)      spec: 0x0F 0x38 0x01 mod/reg/rm */
                        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PHADDW MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                        break;
                    case 0x02: /* 0Fh 38h 02h PHADDD mmx(reg),mmx(r/m)      spec: 0x0F 0x38 0x02 mod/reg/rm */
                        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PHADDD MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                        break;
                    case 0x03: /* 0Fh 38h 03h PHADDSW mmx(reg),mmx(r/m)      spec: 0x0F 0x38 0x03 mod/reg/rm */
                        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PHADDSW MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                        break;
                    case 0x04: /* 0Fh 38h 04h PMADDUBSW mmx(reg),mmx(r/m)      spec: 0x0F 0x38 0x04 mod/reg/rm */
                        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PMADDUBSW MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                        break;
                    case 0x05: /* 0Fh 38h 05h PHSUBW mmx(reg),mmx(r/m)      spec: 0x0F 0x38 0x05 mod/reg/rm */
                        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PHSUBW MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                        break;
                    case 0x06: /* 0Fh 38h 06h PHSUBD mmx(reg),mmx(r/m)      spec: 0x0F 0x38 0x06 mod/reg/rm */
                        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PHSUBD MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                        break;
                    case 0x07: /* 0Fh 38h 07h PHSUBSW mmx(reg),mmx(r/m)      spec: 0x0F 0x38 0x07 mod/reg/rm */
                        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PHSUBSW MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                        break;
                    case 0x08: /* 0Fh 38h 08h PSIGNB mmx(reg),mmx(r/m)      spec: 0x0F 0x38 0x08 mod/reg/rm */
                        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSIGNB MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                        break;
                    case 0x09: /* 0Fh 38h 09h PSIGNW mmx(reg),mmx(r/m)      spec: 0x0F 0x38 0x09 mod/reg/rm */
                        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSIGNW MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                        break;
                    case 0x0A: /* 0Fh 38h 0Ah PSIGND mmx(reg),mmx(r/m)      spec: 0x0F 0x38 0x0A mod/reg/rm */
                        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSIGND MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                        break;
                    case 0x0B: /* 0Fh 38h 0Bh PMULHRSW mmx(reg),mmx(r/m)      spec: 0x0F 0x38 0x0B mod/reg/rm */
                        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PMULHRSW MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                        break;
                    /* opcode 0Fh 38h 0Ch  not defined */
                    /* opcode 0Fh 38h 0Dh  not defined */
                    /* opcode 0Fh 38h 0Eh  not defined */
                    /* opcode 0Fh 38h 0Fh  not defined */
                    /* opcode 0Fh 38h 10h  not defined */
                    /* opcode 0Fh 38h 11h  not defined */
                    /* opcode 0Fh 38h 12h  not defined */
                    /* opcode 0Fh 38h 13h  not defined */
                    /* opcode 0Fh 38h 14h  not defined */
                    /* opcode 0Fh 38h 15h  not defined */
                    /* opcode 0Fh 38h 16h  not defined */
                    /* opcode 0Fh 38h 17h  not defined */
                    /* opcode 0Fh 38h 18h  not defined */
                    /* opcode 0Fh 38h 19h  not defined */
                    /* opcode 0Fh 38h 1Ah  not defined */
                    /* opcode 0Fh 38h 1Bh  not defined */
                    case 0x1C: /* 0Fh 38h 1Ch PABSB mmx(reg),mmx(r/m)      spec: 0x0F 0x38 0x1C mod/reg/rm */
                        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PABSB MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                        break;
                    case 0x1D: /* 0Fh 38h 1Dh PABSW mmx(reg),mmx(r/m)      spec: 0x0F 0x38 0x1D mod/reg/rm */
                        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PABSW MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                        break;
                    case 0x1E: /* 0Fh 38h 1Eh PABSD mmx(reg),mmx(r/m)      spec: 0x0F 0x38 0x1E mod/reg/rm */
                        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PABSD MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                        break;
                    /* opcode 0Fh 38h 1Fh  not defined */
                    /* opcode 0Fh 38h 20h  not defined */
                    /* opcode 0Fh 38h 21h  not defined */
                    /* opcode 0Fh 38h 22h  not defined */
                    /* opcode 0Fh 38h 23h  not defined */
                    /* opcode 0Fh 38h 24h  not defined */
                    /* opcode 0Fh 38h 25h  not defined */
                    /* opcode 0Fh 38h 26h  not defined */
                    /* opcode 0Fh 38h 27h  not defined */
                    /* opcode 0Fh 38h 28h  not defined */
                    /* opcode 0Fh 38h 29h  not defined */
                    /* opcode 0Fh 38h 2Ah  not defined */
                    /* opcode 0Fh 38h 2Bh  not defined */
                    /* opcode 0Fh 38h 2Ch  not defined */
                    /* opcode 0Fh 38h 2Dh  not defined */
                    /* opcode 0Fh 38h 2Eh  not defined */
                    /* opcode 0Fh 38h 2Fh  not defined */
                    /* opcode 0Fh 38h 30h  not defined */
                    /* opcode 0Fh 38h 31h  not defined */
                    /* opcode 0Fh 38h 32h  not defined */
                    /* opcode 0Fh 38h 33h  not defined */
                    /* opcode 0Fh 38h 34h  not defined */
                    /* opcode 0Fh 38h 35h  not defined */
                    /* opcode 0Fh 38h 36h  not defined */
                    /* opcode 0Fh 38h 37h  not defined */
                    /* opcode 0Fh 38h 38h  not defined */
                    /* opcode 0Fh 38h 39h  not defined */
                    /* opcode 0Fh 38h 3Ah  not defined */
                    /* opcode 0Fh 38h 3Bh  not defined */
                    /* opcode 0Fh 38h 3Ch  not defined */
                    /* opcode 0Fh 38h 3Dh  not defined */
                    /* opcode 0Fh 38h 3Eh  not defined */
                    /* opcode 0Fh 38h 3Fh  not defined */
                    /* opcode 0Fh 38h 40h  not defined */
                    /* opcode 0Fh 38h 41h  not defined */
                    /* opcode 0Fh 38h 42h  not defined */
                    /* opcode 0Fh 38h 43h  not defined */
                    /* opcode 0Fh 38h 44h  not defined */
                    /* opcode 0Fh 38h 45h  not defined */
                    /* opcode 0Fh 38h 46h  not defined */
                    /* opcode 0Fh 38h 47h  not defined */
                    /* opcode 0Fh 38h 48h  not defined */
                    /* opcode 0Fh 38h 49h  not defined */
                    /* opcode 0Fh 38h 4Ah  not defined */
                    /* opcode 0Fh 38h 4Bh  not defined */
                    /* opcode 0Fh 38h 4Ch  not defined */
                    /* opcode 0Fh 38h 4Dh  not defined */
                    /* opcode 0Fh 38h 4Eh  not defined */
                    /* opcode 0Fh 38h 4Fh  not defined */
                    /* opcode 0Fh 38h 50h  not defined */
                    /* opcode 0Fh 38h 51h  not defined */
                    /* opcode 0Fh 38h 52h  not defined */
                    /* opcode 0Fh 38h 53h  not defined */
                    /* opcode 0Fh 38h 54h  not defined */
                    /* opcode 0Fh 38h 55h  not defined */
                    /* opcode 0Fh 38h 56h  not defined */
                    /* opcode 0Fh 38h 57h  not defined */
                    /* opcode 0Fh 38h 58h  not defined */
                    /* opcode 0Fh 38h 59h  not defined */
                    /* opcode 0Fh 38h 5Ah  not defined */
                    /* opcode 0Fh 38h 5Bh  not defined */
                    /* opcode 0Fh 38h 5Ch  not defined */
                    /* opcode 0Fh 38h 5Dh  not defined */
                    /* opcode 0Fh 38h 5Eh  not defined */
                    /* opcode 0Fh 38h 5Fh  not defined */
                    /* opcode 0Fh 38h 60h  not defined */
                    /* opcode 0Fh 38h 61h  not defined */
                    /* opcode 0Fh 38h 62h  not defined */
                    /* opcode 0Fh 38h 63h  not defined */
                    /* opcode 0Fh 38h 64h  not defined */
                    /* opcode 0Fh 38h 65h  not defined */
                    /* opcode 0Fh 38h 66h  not defined */
                    /* opcode 0Fh 38h 67h  not defined */
                    /* opcode 0Fh 38h 68h  not defined */
                    /* opcode 0Fh 38h 69h  not defined */
                    /* opcode 0Fh 38h 6Ah  not defined */
                    /* opcode 0Fh 38h 6Bh  not defined */
                    /* opcode 0Fh 38h 6Ch  not defined */
                    /* opcode 0Fh 38h 6Dh  not defined */
                    /* opcode 0Fh 38h 6Eh  not defined */
                    /* opcode 0Fh 38h 6Fh  not defined */
                    /* opcode 0Fh 38h 70h  not defined */
                    /* opcode 0Fh 38h 71h  not defined */
                    /* opcode 0Fh 38h 72h  not defined */
                    /* opcode 0Fh 38h 73h  not defined */
                    /* opcode 0Fh 38h 74h  not defined */
                    /* opcode 0Fh 38h 75h  not defined */
                    /* opcode 0Fh 38h 76h  not defined */
                    /* opcode 0Fh 38h 77h  not defined */
                    /* opcode 0Fh 38h 78h  not defined */
                    /* opcode 0Fh 38h 79h  not defined */
                    /* opcode 0Fh 38h 7Ah  not defined */
                    /* opcode 0Fh 38h 7Bh  not defined */
                    /* opcode 0Fh 38h 7Ch  not defined */
                    /* opcode 0Fh 38h 7Dh  not defined */
                    /* opcode 0Fh 38h 7Eh  not defined */
                    /* opcode 0Fh 38h 7Fh  not defined */
                    /* opcode 0Fh 38h 80h  not defined */
                    /* opcode 0Fh 38h 81h  not defined */
                    /* opcode 0Fh 38h 82h  not defined */
                    /* opcode 0Fh 38h 83h  not defined */
                    /* opcode 0Fh 38h 84h  not defined */
                    /* opcode 0Fh 38h 85h  not defined */
                    /* opcode 0Fh 38h 86h  not defined */
                    /* opcode 0Fh 38h 87h  not defined */
                    /* opcode 0Fh 38h 88h  not defined */
                    /* opcode 0Fh 38h 89h  not defined */
                    /* opcode 0Fh 38h 8Ah  not defined */
                    /* opcode 0Fh 38h 8Bh  not defined */
                    /* opcode 0Fh 38h 8Ch  not defined */
                    /* opcode 0Fh 38h 8Dh  not defined */
                    /* opcode 0Fh 38h 8Eh  not defined */
                    /* opcode 0Fh 38h 8Fh  not defined */
                    /* opcode 0Fh 38h 90h  not defined */
                    /* opcode 0Fh 38h 91h  not defined */
                    /* opcode 0Fh 38h 92h  not defined */
                    /* opcode 0Fh 38h 93h  not defined */
                    /* opcode 0Fh 38h 94h  not defined */
                    /* opcode 0Fh 38h 95h  not defined */
                    /* opcode 0Fh 38h 96h  not defined */
                    /* opcode 0Fh 38h 97h  not defined */
                    /* opcode 0Fh 38h 98h  not defined */
                    /* opcode 0Fh 38h 99h  not defined */
                    /* opcode 0Fh 38h 9Ah  not defined */
                    /* opcode 0Fh 38h 9Bh  not defined */
                    /* opcode 0Fh 38h 9Ch  not defined */
                    /* opcode 0Fh 38h 9Dh  not defined */
                    /* opcode 0Fh 38h 9Eh  not defined */
                    /* opcode 0Fh 38h 9Fh  not defined */
                    /* opcode 0Fh 38h A0h  not defined */
                    /* opcode 0Fh 38h A1h  not defined */
                    /* opcode 0Fh 38h A2h  not defined */
                    /* opcode 0Fh 38h A3h  not defined */
                    /* opcode 0Fh 38h A4h  not defined */
                    /* opcode 0Fh 38h A5h  not defined */
                    /* opcode 0Fh 38h A6h  not defined */
                    /* opcode 0Fh 38h A7h  not defined */
                    /* opcode 0Fh 38h A8h  not defined */
                    /* opcode 0Fh 38h A9h  not defined */
                    /* opcode 0Fh 38h AAh  not defined */
                    /* opcode 0Fh 38h ABh  not defined */
                    /* opcode 0Fh 38h ACh  not defined */
                    /* opcode 0Fh 38h ADh  not defined */
                    /* opcode 0Fh 38h AEh  not defined */
                    /* opcode 0Fh 38h AFh  not defined */
                    /* opcode 0Fh 38h B0h  not defined */
                    /* opcode 0Fh 38h B1h  not defined */
                    /* opcode 0Fh 38h B2h  not defined */
                    /* opcode 0Fh 38h B3h  not defined */
                    /* opcode 0Fh 38h B4h  not defined */
                    /* opcode 0Fh 38h B5h  not defined */
                    /* opcode 0Fh 38h B6h  not defined */
                    /* opcode 0Fh 38h B7h  not defined */
                    /* opcode 0Fh 38h B8h  not defined */
                    /* opcode 0Fh 38h B9h  not defined */
                    /* opcode 0Fh 38h BAh  not defined */
                    /* opcode 0Fh 38h BBh  not defined */
                    /* opcode 0Fh 38h BCh  not defined */
                    /* opcode 0Fh 38h BDh  not defined */
                    /* opcode 0Fh 38h BEh  not defined */
                    /* opcode 0Fh 38h BFh  not defined */
                    /* opcode 0Fh 38h C0h  not defined */
                    /* opcode 0Fh 38h C1h  not defined */
                    /* opcode 0Fh 38h C2h  not defined */
                    /* opcode 0Fh 38h C3h  not defined */
                    /* opcode 0Fh 38h C4h  not defined */
                    /* opcode 0Fh 38h C5h  not defined */
                    /* opcode 0Fh 38h C6h  not defined */
                    /* opcode 0Fh 38h C7h  not defined */
                    /* opcode 0Fh 38h C8h  not defined */
                    /* opcode 0Fh 38h C9h  not defined */
                    /* opcode 0Fh 38h CAh  not defined */
                    /* opcode 0Fh 38h CBh  not defined */
                    /* opcode 0Fh 38h CCh  not defined */
                    /* opcode 0Fh 38h CDh  not defined */
                    /* opcode 0Fh 38h CEh  not defined */
                    /* opcode 0Fh 38h CFh  not defined */
                    /* opcode 0Fh 38h D0h  not defined */
                    /* opcode 0Fh 38h D1h  not defined */
                    /* opcode 0Fh 38h D2h  not defined */
                    /* opcode 0Fh 38h D3h  not defined */
                    /* opcode 0Fh 38h D4h  not defined */
                    /* opcode 0Fh 38h D5h  not defined */
                    /* opcode 0Fh 38h D6h  not defined */
                    /* opcode 0Fh 38h D7h  not defined */
                    /* opcode 0Fh 38h D8h  not defined */
                    /* opcode 0Fh 38h D9h  not defined */
                    /* opcode 0Fh 38h DAh  not defined */
                    /* opcode 0Fh 38h DBh  not defined */
                    /* opcode 0Fh 38h DCh  not defined */
                    /* opcode 0Fh 38h DDh  not defined */
                    /* opcode 0Fh 38h DEh  not defined */
                    /* opcode 0Fh 38h DFh  not defined */
                    /* opcode 0Fh 38h E0h  not defined */
                    /* opcode 0Fh 38h E1h  not defined */
                    /* opcode 0Fh 38h E2h  not defined */
                    /* opcode 0Fh 38h E3h  not defined */
                    /* opcode 0Fh 38h E4h  not defined */
                    /* opcode 0Fh 38h E5h  not defined */
                    /* opcode 0Fh 38h E6h  not defined */
                    /* opcode 0Fh 38h E7h  not defined */
                    /* opcode 0Fh 38h E8h  not defined */
                    /* opcode 0Fh 38h E9h  not defined */
                    /* opcode 0Fh 38h EAh  not defined */
                    /* opcode 0Fh 38h EBh  not defined */
                    /* opcode 0Fh 38h ECh  not defined */
                    /* opcode 0Fh 38h EDh  not defined */
                    /* opcode 0Fh 38h EEh  not defined */
                    /* opcode 0Fh 38h EFh  not defined */
                    case 0xF0: /* 0Fh 38h F0h        spec:  */
                        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                        _x86decode_begin_code32_addr32_opcode_parse_0F38F0:
/* Opcodes starting with 0Fh 38h F0h */
                        switch (mrm.byte) {
                            case 0x00: /* 0Fh 38h F0h 00h MOVBE w(reg),w(r/m) mod=0 reg=0 rm=0      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x01: /* 0Fh 38h F0h 01h MOVBE w(reg),w(r/m) mod=0 reg=0 rm=1      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x02: /* 0Fh 38h F0h 02h MOVBE w(reg),w(r/m) mod=0 reg=0 rm=2      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x03: /* 0Fh 38h F0h 03h MOVBE w(reg),w(r/m) mod=0 reg=0 rm=3      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x04: /* 0Fh 38h F0h 04h MOVBE w(reg),w(r/m) mod=0 reg=0 rm=4      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x05: /* 0Fh 38h F0h 05h MOVBE w(reg),w(r/m) mod=0 reg=0 rm=5      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x06: /* 0Fh 38h F0h 06h MOVBE w(reg),w(r/m) mod=0 reg=0 rm=6      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x07: /* 0Fh 38h F0h 07h MOVBE w(reg),w(r/m) mod=0 reg=0 rm=7      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x08: /* 0Fh 38h F0h 08h MOVBE w(reg),w(r/m) mod=0 reg=1 rm=0      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x09: /* 0Fh 38h F0h 09h MOVBE w(reg),w(r/m) mod=0 reg=1 rm=1      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x0A: /* 0Fh 38h F0h 0Ah MOVBE w(reg),w(r/m) mod=0 reg=1 rm=2      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x0B: /* 0Fh 38h F0h 0Bh MOVBE w(reg),w(r/m) mod=0 reg=1 rm=3      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x0C: /* 0Fh 38h F0h 0Ch MOVBE w(reg),w(r/m) mod=0 reg=1 rm=4      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x0D: /* 0Fh 38h F0h 0Dh MOVBE w(reg),w(r/m) mod=0 reg=1 rm=5      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x0E: /* 0Fh 38h F0h 0Eh MOVBE w(reg),w(r/m) mod=0 reg=1 rm=6      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x0F: /* 0Fh 38h F0h 0Fh MOVBE w(reg),w(r/m) mod=0 reg=1 rm=7      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x10: /* 0Fh 38h F0h 10h MOVBE w(reg),w(r/m) mod=0 reg=2 rm=0      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x11: /* 0Fh 38h F0h 11h MOVBE w(reg),w(r/m) mod=0 reg=2 rm=1      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x12: /* 0Fh 38h F0h 12h MOVBE w(reg),w(r/m) mod=0 reg=2 rm=2      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x13: /* 0Fh 38h F0h 13h MOVBE w(reg),w(r/m) mod=0 reg=2 rm=3      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x14: /* 0Fh 38h F0h 14h MOVBE w(reg),w(r/m) mod=0 reg=2 rm=4      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x15: /* 0Fh 38h F0h 15h MOVBE w(reg),w(r/m) mod=0 reg=2 rm=5      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x16: /* 0Fh 38h F0h 16h MOVBE w(reg),w(r/m) mod=0 reg=2 rm=6      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x17: /* 0Fh 38h F0h 17h MOVBE w(reg),w(r/m) mod=0 reg=2 rm=7      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x18: /* 0Fh 38h F0h 18h MOVBE w(reg),w(r/m) mod=0 reg=3 rm=0      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x19: /* 0Fh 38h F0h 19h MOVBE w(reg),w(r/m) mod=0 reg=3 rm=1      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x1A: /* 0Fh 38h F0h 1Ah MOVBE w(reg),w(r/m) mod=0 reg=3 rm=2      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x1B: /* 0Fh 38h F0h 1Bh MOVBE w(reg),w(r/m) mod=0 reg=3 rm=3      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x1C: /* 0Fh 38h F0h 1Ch MOVBE w(reg),w(r/m) mod=0 reg=3 rm=4      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x1D: /* 0Fh 38h F0h 1Dh MOVBE w(reg),w(r/m) mod=0 reg=3 rm=5      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x1E: /* 0Fh 38h F0h 1Eh MOVBE w(reg),w(r/m) mod=0 reg=3 rm=6      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x1F: /* 0Fh 38h F0h 1Fh MOVBE w(reg),w(r/m) mod=0 reg=3 rm=7      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x20: /* 0Fh 38h F0h 20h MOVBE w(reg),w(r/m) mod=0 reg=4 rm=0      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x21: /* 0Fh 38h F0h 21h MOVBE w(reg),w(r/m) mod=0 reg=4 rm=1      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x22: /* 0Fh 38h F0h 22h MOVBE w(reg),w(r/m) mod=0 reg=4 rm=2      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x23: /* 0Fh 38h F0h 23h MOVBE w(reg),w(r/m) mod=0 reg=4 rm=3      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x24: /* 0Fh 38h F0h 24h MOVBE w(reg),w(r/m) mod=0 reg=4 rm=4      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x25: /* 0Fh 38h F0h 25h MOVBE w(reg),w(r/m) mod=0 reg=4 rm=5      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x26: /* 0Fh 38h F0h 26h MOVBE w(reg),w(r/m) mod=0 reg=4 rm=6      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x27: /* 0Fh 38h F0h 27h MOVBE w(reg),w(r/m) mod=0 reg=4 rm=7      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x28: /* 0Fh 38h F0h 28h MOVBE w(reg),w(r/m) mod=0 reg=5 rm=0      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x29: /* 0Fh 38h F0h 29h MOVBE w(reg),w(r/m) mod=0 reg=5 rm=1      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x2A: /* 0Fh 38h F0h 2Ah MOVBE w(reg),w(r/m) mod=0 reg=5 rm=2      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x2B: /* 0Fh 38h F0h 2Bh MOVBE w(reg),w(r/m) mod=0 reg=5 rm=3      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x2C: /* 0Fh 38h F0h 2Ch MOVBE w(reg),w(r/m) mod=0 reg=5 rm=4      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x2D: /* 0Fh 38h F0h 2Dh MOVBE w(reg),w(r/m) mod=0 reg=5 rm=5      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x2E: /* 0Fh 38h F0h 2Eh MOVBE w(reg),w(r/m) mod=0 reg=5 rm=6      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x2F: /* 0Fh 38h F0h 2Fh MOVBE w(reg),w(r/m) mod=0 reg=5 rm=7      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x30: /* 0Fh 38h F0h 30h MOVBE w(reg),w(r/m) mod=0 reg=6 rm=0      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x31: /* 0Fh 38h F0h 31h MOVBE w(reg),w(r/m) mod=0 reg=6 rm=1      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x32: /* 0Fh 38h F0h 32h MOVBE w(reg),w(r/m) mod=0 reg=6 rm=2      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x33: /* 0Fh 38h F0h 33h MOVBE w(reg),w(r/m) mod=0 reg=6 rm=3      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x34: /* 0Fh 38h F0h 34h MOVBE w(reg),w(r/m) mod=0 reg=6 rm=4      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x35: /* 0Fh 38h F0h 35h MOVBE w(reg),w(r/m) mod=0 reg=6 rm=5      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x36: /* 0Fh 38h F0h 36h MOVBE w(reg),w(r/m) mod=0 reg=6 rm=6      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x37: /* 0Fh 38h F0h 37h MOVBE w(reg),w(r/m) mod=0 reg=6 rm=7      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x38: /* 0Fh 38h F0h 38h MOVBE w(reg),w(r/m) mod=0 reg=7 rm=0      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x39: /* 0Fh 38h F0h 39h MOVBE w(reg),w(r/m) mod=0 reg=7 rm=1      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x3A: /* 0Fh 38h F0h 3Ah MOVBE w(reg),w(r/m) mod=0 reg=7 rm=2      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x3B: /* 0Fh 38h F0h 3Bh MOVBE w(reg),w(r/m) mod=0 reg=7 rm=3      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x3C: /* 0Fh 38h F0h 3Ch MOVBE w(reg),w(r/m) mod=0 reg=7 rm=4      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x3D: /* 0Fh 38h F0h 3Dh MOVBE w(reg),w(r/m) mod=0 reg=7 rm=5      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x3E: /* 0Fh 38h F0h 3Eh MOVBE w(reg),w(r/m) mod=0 reg=7 rm=6      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x3F: /* 0Fh 38h F0h 3Fh MOVBE w(reg),w(r/m) mod=0 reg=7 rm=7      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x40: /* 0Fh 38h F0h 40h MOVBE w(reg),w(r/m) mod=1 reg=0 rm=0      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x41: /* 0Fh 38h F0h 41h MOVBE w(reg),w(r/m) mod=1 reg=0 rm=1      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x42: /* 0Fh 38h F0h 42h MOVBE w(reg),w(r/m) mod=1 reg=0 rm=2      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x43: /* 0Fh 38h F0h 43h MOVBE w(reg),w(r/m) mod=1 reg=0 rm=3      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x44: /* 0Fh 38h F0h 44h MOVBE w(reg),w(r/m) mod=1 reg=0 rm=4      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x45: /* 0Fh 38h F0h 45h MOVBE w(reg),w(r/m) mod=1 reg=0 rm=5      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x46: /* 0Fh 38h F0h 46h MOVBE w(reg),w(r/m) mod=1 reg=0 rm=6      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x47: /* 0Fh 38h F0h 47h MOVBE w(reg),w(r/m) mod=1 reg=0 rm=7      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x48: /* 0Fh 38h F0h 48h MOVBE w(reg),w(r/m) mod=1 reg=1 rm=0      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x49: /* 0Fh 38h F0h 49h MOVBE w(reg),w(r/m) mod=1 reg=1 rm=1      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x4A: /* 0Fh 38h F0h 4Ah MOVBE w(reg),w(r/m) mod=1 reg=1 rm=2      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x4B: /* 0Fh 38h F0h 4Bh MOVBE w(reg),w(r/m) mod=1 reg=1 rm=3      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x4C: /* 0Fh 38h F0h 4Ch MOVBE w(reg),w(r/m) mod=1 reg=1 rm=4      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x4D: /* 0Fh 38h F0h 4Dh MOVBE w(reg),w(r/m) mod=1 reg=1 rm=5      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x4E: /* 0Fh 38h F0h 4Eh MOVBE w(reg),w(r/m) mod=1 reg=1 rm=6      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x4F: /* 0Fh 38h F0h 4Fh MOVBE w(reg),w(r/m) mod=1 reg=1 rm=7      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x50: /* 0Fh 38h F0h 50h MOVBE w(reg),w(r/m) mod=1 reg=2 rm=0      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x51: /* 0Fh 38h F0h 51h MOVBE w(reg),w(r/m) mod=1 reg=2 rm=1      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x52: /* 0Fh 38h F0h 52h MOVBE w(reg),w(r/m) mod=1 reg=2 rm=2      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x53: /* 0Fh 38h F0h 53h MOVBE w(reg),w(r/m) mod=1 reg=2 rm=3      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x54: /* 0Fh 38h F0h 54h MOVBE w(reg),w(r/m) mod=1 reg=2 rm=4      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x55: /* 0Fh 38h F0h 55h MOVBE w(reg),w(r/m) mod=1 reg=2 rm=5      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x56: /* 0Fh 38h F0h 56h MOVBE w(reg),w(r/m) mod=1 reg=2 rm=6      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x57: /* 0Fh 38h F0h 57h MOVBE w(reg),w(r/m) mod=1 reg=2 rm=7      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x58: /* 0Fh 38h F0h 58h MOVBE w(reg),w(r/m) mod=1 reg=3 rm=0      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x59: /* 0Fh 38h F0h 59h MOVBE w(reg),w(r/m) mod=1 reg=3 rm=1      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x5A: /* 0Fh 38h F0h 5Ah MOVBE w(reg),w(r/m) mod=1 reg=3 rm=2      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x5B: /* 0Fh 38h F0h 5Bh MOVBE w(reg),w(r/m) mod=1 reg=3 rm=3      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x5C: /* 0Fh 38h F0h 5Ch MOVBE w(reg),w(r/m) mod=1 reg=3 rm=4      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x5D: /* 0Fh 38h F0h 5Dh MOVBE w(reg),w(r/m) mod=1 reg=3 rm=5      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x5E: /* 0Fh 38h F0h 5Eh MOVBE w(reg),w(r/m) mod=1 reg=3 rm=6      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x5F: /* 0Fh 38h F0h 5Fh MOVBE w(reg),w(r/m) mod=1 reg=3 rm=7      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x60: /* 0Fh 38h F0h 60h MOVBE w(reg),w(r/m) mod=1 reg=4 rm=0      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x61: /* 0Fh 38h F0h 61h MOVBE w(reg),w(r/m) mod=1 reg=4 rm=1      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x62: /* 0Fh 38h F0h 62h MOVBE w(reg),w(r/m) mod=1 reg=4 rm=2      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x63: /* 0Fh 38h F0h 63h MOVBE w(reg),w(r/m) mod=1 reg=4 rm=3      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x64: /* 0Fh 38h F0h 64h MOVBE w(reg),w(r/m) mod=1 reg=4 rm=4      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x65: /* 0Fh 38h F0h 65h MOVBE w(reg),w(r/m) mod=1 reg=4 rm=5      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x66: /* 0Fh 38h F0h 66h MOVBE w(reg),w(r/m) mod=1 reg=4 rm=6      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x67: /* 0Fh 38h F0h 67h MOVBE w(reg),w(r/m) mod=1 reg=4 rm=7      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x68: /* 0Fh 38h F0h 68h MOVBE w(reg),w(r/m) mod=1 reg=5 rm=0      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x69: /* 0Fh 38h F0h 69h MOVBE w(reg),w(r/m) mod=1 reg=5 rm=1      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x6A: /* 0Fh 38h F0h 6Ah MOVBE w(reg),w(r/m) mod=1 reg=5 rm=2      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x6B: /* 0Fh 38h F0h 6Bh MOVBE w(reg),w(r/m) mod=1 reg=5 rm=3      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x6C: /* 0Fh 38h F0h 6Ch MOVBE w(reg),w(r/m) mod=1 reg=5 rm=4      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x6D: /* 0Fh 38h F0h 6Dh MOVBE w(reg),w(r/m) mod=1 reg=5 rm=5      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x6E: /* 0Fh 38h F0h 6Eh MOVBE w(reg),w(r/m) mod=1 reg=5 rm=6      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x6F: /* 0Fh 38h F0h 6Fh MOVBE w(reg),w(r/m) mod=1 reg=5 rm=7      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x70: /* 0Fh 38h F0h 70h MOVBE w(reg),w(r/m) mod=1 reg=6 rm=0      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x71: /* 0Fh 38h F0h 71h MOVBE w(reg),w(r/m) mod=1 reg=6 rm=1      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x72: /* 0Fh 38h F0h 72h MOVBE w(reg),w(r/m) mod=1 reg=6 rm=2      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x73: /* 0Fh 38h F0h 73h MOVBE w(reg),w(r/m) mod=1 reg=6 rm=3      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x74: /* 0Fh 38h F0h 74h MOVBE w(reg),w(r/m) mod=1 reg=6 rm=4      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x75: /* 0Fh 38h F0h 75h MOVBE w(reg),w(r/m) mod=1 reg=6 rm=5      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x76: /* 0Fh 38h F0h 76h MOVBE w(reg),w(r/m) mod=1 reg=6 rm=6      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x77: /* 0Fh 38h F0h 77h MOVBE w(reg),w(r/m) mod=1 reg=6 rm=7      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x78: /* 0Fh 38h F0h 78h MOVBE w(reg),w(r/m) mod=1 reg=7 rm=0      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x79: /* 0Fh 38h F0h 79h MOVBE w(reg),w(r/m) mod=1 reg=7 rm=1      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x7A: /* 0Fh 38h F0h 7Ah MOVBE w(reg),w(r/m) mod=1 reg=7 rm=2      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x7B: /* 0Fh 38h F0h 7Bh MOVBE w(reg),w(r/m) mod=1 reg=7 rm=3      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x7C: /* 0Fh 38h F0h 7Ch MOVBE w(reg),w(r/m) mod=1 reg=7 rm=4      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x7D: /* 0Fh 38h F0h 7Dh MOVBE w(reg),w(r/m) mod=1 reg=7 rm=5      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x7E: /* 0Fh 38h F0h 7Eh MOVBE w(reg),w(r/m) mod=1 reg=7 rm=6      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x7F: /* 0Fh 38h F0h 7Fh MOVBE w(reg),w(r/m) mod=1 reg=7 rm=7      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x80: /* 0Fh 38h F0h 80h MOVBE w(reg),w(r/m) mod=2 reg=0 rm=0      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x81: /* 0Fh 38h F0h 81h MOVBE w(reg),w(r/m) mod=2 reg=0 rm=1      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x82: /* 0Fh 38h F0h 82h MOVBE w(reg),w(r/m) mod=2 reg=0 rm=2      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x83: /* 0Fh 38h F0h 83h MOVBE w(reg),w(r/m) mod=2 reg=0 rm=3      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x84: /* 0Fh 38h F0h 84h MOVBE w(reg),w(r/m) mod=2 reg=0 rm=4      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x85: /* 0Fh 38h F0h 85h MOVBE w(reg),w(r/m) mod=2 reg=0 rm=5      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x86: /* 0Fh 38h F0h 86h MOVBE w(reg),w(r/m) mod=2 reg=0 rm=6      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x87: /* 0Fh 38h F0h 87h MOVBE w(reg),w(r/m) mod=2 reg=0 rm=7      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x88: /* 0Fh 38h F0h 88h MOVBE w(reg),w(r/m) mod=2 reg=1 rm=0      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x89: /* 0Fh 38h F0h 89h MOVBE w(reg),w(r/m) mod=2 reg=1 rm=1      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x8A: /* 0Fh 38h F0h 8Ah MOVBE w(reg),w(r/m) mod=2 reg=1 rm=2      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x8B: /* 0Fh 38h F0h 8Bh MOVBE w(reg),w(r/m) mod=2 reg=1 rm=3      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x8C: /* 0Fh 38h F0h 8Ch MOVBE w(reg),w(r/m) mod=2 reg=1 rm=4      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x8D: /* 0Fh 38h F0h 8Dh MOVBE w(reg),w(r/m) mod=2 reg=1 rm=5      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x8E: /* 0Fh 38h F0h 8Eh MOVBE w(reg),w(r/m) mod=2 reg=1 rm=6      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x8F: /* 0Fh 38h F0h 8Fh MOVBE w(reg),w(r/m) mod=2 reg=1 rm=7      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x90: /* 0Fh 38h F0h 90h MOVBE w(reg),w(r/m) mod=2 reg=2 rm=0      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x91: /* 0Fh 38h F0h 91h MOVBE w(reg),w(r/m) mod=2 reg=2 rm=1      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x92: /* 0Fh 38h F0h 92h MOVBE w(reg),w(r/m) mod=2 reg=2 rm=2      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x93: /* 0Fh 38h F0h 93h MOVBE w(reg),w(r/m) mod=2 reg=2 rm=3      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x94: /* 0Fh 38h F0h 94h MOVBE w(reg),w(r/m) mod=2 reg=2 rm=4      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x95: /* 0Fh 38h F0h 95h MOVBE w(reg),w(r/m) mod=2 reg=2 rm=5      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x96: /* 0Fh 38h F0h 96h MOVBE w(reg),w(r/m) mod=2 reg=2 rm=6      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x97: /* 0Fh 38h F0h 97h MOVBE w(reg),w(r/m) mod=2 reg=2 rm=7      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x98: /* 0Fh 38h F0h 98h MOVBE w(reg),w(r/m) mod=2 reg=3 rm=0      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x99: /* 0Fh 38h F0h 99h MOVBE w(reg),w(r/m) mod=2 reg=3 rm=1      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x9A: /* 0Fh 38h F0h 9Ah MOVBE w(reg),w(r/m) mod=2 reg=3 rm=2      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x9B: /* 0Fh 38h F0h 9Bh MOVBE w(reg),w(r/m) mod=2 reg=3 rm=3      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x9C: /* 0Fh 38h F0h 9Ch MOVBE w(reg),w(r/m) mod=2 reg=3 rm=4      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x9D: /* 0Fh 38h F0h 9Dh MOVBE w(reg),w(r/m) mod=2 reg=3 rm=5      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x9E: /* 0Fh 38h F0h 9Eh MOVBE w(reg),w(r/m) mod=2 reg=3 rm=6      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0x9F: /* 0Fh 38h F0h 9Fh MOVBE w(reg),w(r/m) mod=2 reg=3 rm=7      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0xA0: /* 0Fh 38h F0h A0h MOVBE w(reg),w(r/m) mod=2 reg=4 rm=0      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0xA1: /* 0Fh 38h F0h A1h MOVBE w(reg),w(r/m) mod=2 reg=4 rm=1      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0xA2: /* 0Fh 38h F0h A2h MOVBE w(reg),w(r/m) mod=2 reg=4 rm=2      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0xA3: /* 0Fh 38h F0h A3h MOVBE w(reg),w(r/m) mod=2 reg=4 rm=3      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0xA4: /* 0Fh 38h F0h A4h MOVBE w(reg),w(r/m) mod=2 reg=4 rm=4      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0xA5: /* 0Fh 38h F0h A5h MOVBE w(reg),w(r/m) mod=2 reg=4 rm=5      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0xA6: /* 0Fh 38h F0h A6h MOVBE w(reg),w(r/m) mod=2 reg=4 rm=6      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0xA7: /* 0Fh 38h F0h A7h MOVBE w(reg),w(r/m) mod=2 reg=4 rm=7      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0xA8: /* 0Fh 38h F0h A8h MOVBE w(reg),w(r/m) mod=2 reg=5 rm=0      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0xA9: /* 0Fh 38h F0h A9h MOVBE w(reg),w(r/m) mod=2 reg=5 rm=1      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0xAA: /* 0Fh 38h F0h AAh MOVBE w(reg),w(r/m) mod=2 reg=5 rm=2      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0xAB: /* 0Fh 38h F0h ABh MOVBE w(reg),w(r/m) mod=2 reg=5 rm=3      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0xAC: /* 0Fh 38h F0h ACh MOVBE w(reg),w(r/m) mod=2 reg=5 rm=4      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0xAD: /* 0Fh 38h F0h ADh MOVBE w(reg),w(r/m) mod=2 reg=5 rm=5      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0xAE: /* 0Fh 38h F0h AEh MOVBE w(reg),w(r/m) mod=2 reg=5 rm=6      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0xAF: /* 0Fh 38h F0h AFh MOVBE w(reg),w(r/m) mod=2 reg=5 rm=7      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0xB0: /* 0Fh 38h F0h B0h MOVBE w(reg),w(r/m) mod=2 reg=6 rm=0      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0xB1: /* 0Fh 38h F0h B1h MOVBE w(reg),w(r/m) mod=2 reg=6 rm=1      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0xB2: /* 0Fh 38h F0h B2h MOVBE w(reg),w(r/m) mod=2 reg=6 rm=2      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0xB3: /* 0Fh 38h F0h B3h MOVBE w(reg),w(r/m) mod=2 reg=6 rm=3      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0xB4: /* 0Fh 38h F0h B4h MOVBE w(reg),w(r/m) mod=2 reg=6 rm=4      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0xB5: /* 0Fh 38h F0h B5h MOVBE w(reg),w(r/m) mod=2 reg=6 rm=5      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0xB6: /* 0Fh 38h F0h B6h MOVBE w(reg),w(r/m) mod=2 reg=6 rm=6      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0xB7: /* 0Fh 38h F0h B7h MOVBE w(reg),w(r/m) mod=2 reg=6 rm=7      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0xB8: /* 0Fh 38h F0h B8h MOVBE w(reg),w(r/m) mod=2 reg=7 rm=0      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0xB9: /* 0Fh 38h F0h B9h MOVBE w(reg),w(r/m) mod=2 reg=7 rm=1      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0xBA: /* 0Fh 38h F0h BAh MOVBE w(reg),w(r/m) mod=2 reg=7 rm=2      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0xBB: /* 0Fh 38h F0h BBh MOVBE w(reg),w(r/m) mod=2 reg=7 rm=3      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0xBC: /* 0Fh 38h F0h BCh MOVBE w(reg),w(r/m) mod=2 reg=7 rm=4      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0xBD: /* 0Fh 38h F0h BDh MOVBE w(reg),w(r/m) mod=2 reg=7 rm=5      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0xBE: /* 0Fh 38h F0h BEh MOVBE w(reg),w(r/m) mod=2 reg=7 rm=6      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                            case 0xBF: /* 0Fh 38h F0h BFh MOVBE w(reg),w(r/m) mod=2 reg=7 rm=7      spec: 0x0F 0x38 0xF0 mod/reg/rm mod!=3 */
                                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVBE %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                                break;
                            /* opcode 0Fh 38h F0h C0h  not defined */
                            /* opcode 0Fh 38h F0h C1h  not defined */
                            /* opcode 0Fh 38h F0h C2h  not defined */
                            /* opcode 0Fh 38h F0h C3h  not defined */
                            /* opcode 0Fh 38h F0h C4h  not defined */
                            /* opcode 0Fh 38h F0h C5h  not defined */
                            /* opcode 0Fh 38h F0h C6h  not defined */
                            /* opcode 0Fh 38h F0h C7h  not defined */
                            /* opcode 0Fh 38h F0h C8h  not defined */
                            /* opcode 0Fh 38h F0h C9h  not defined */
                            /* opcode 0Fh 38h F0h CAh  not defined */
                            /* opcode 0Fh 38h F0h CBh  not defined */
                            /* opcode 0Fh 38h F0h CCh  not defined */
                            /* opcode 0Fh 38h F0h CDh  not defined */
                            /* opcode 0Fh 38h F0h CEh  not defined */
                            /* opcode 0Fh 38h F0h CFh  not defined */
                            /* opcode 0Fh 38h F0h D0h  not defined */
                            /* opcode 0Fh 38h F0h D1h  not defined */
                            /* opcode 0Fh 38h F0h D2h  not defined */
                            /* opcode 0Fh 38h F0h D3h  not defined */
                            /* opcode 0Fh 38h F0h D4h  not defined */
                            /* opcode 0Fh 38h F0h D5h  not defined */
                            /* opcode 0Fh 38h F0h D6h  not defined */
                            /* opcode 0Fh 38h F0h D7h  not defined */
                            /* opcode 0Fh 38h F0h D8h  not defined */
                            /* opcode 0Fh 38h F0h D9h  not defined */
                            /* opcode 0Fh 38h F0h DAh  not defined */
                            /* opcode 0Fh 38h F0h DBh  not defined */
                            /* opcode 0Fh 38h F0h DCh  not defined */
                            /* opcode 0Fh 38h F0h DDh  not defined */
                            /* opcode 0Fh 38h F0h DEh  not defined */
                            /* opcode 0Fh 38h F0h DFh  not defined */
                            /* opcode 0Fh 38h F0h E0h  not defined */
                            /* opcode 0Fh 38h F0h E1h  not defined */
                            /* opcode 0Fh 38h F0h E2h  not defined */
                            /* opcode 0Fh 38h F0h E3h  not defined */
                            /* opcode 0Fh 38h F0h E4h  not defined */
                            /* opcode 0Fh 38h F0h E5h  not defined */
                            /* opcode 0Fh 38h F0h E6h  not defined */
                            /* opcode 0Fh 38h F0h E7h  not defined */
                            /* opcode 0Fh 38h F0h E8h  not defined */
                            /* opcode 0Fh 38h F0h E9h  not defined */
                            /* opcode 0Fh 38h F0h EAh  not defined */
                            /* opcode 0Fh 38h F0h EBh  not defined */
                            /* opcode 0Fh 38h F0h ECh  not defined */
                            /* opcode 0Fh 38h F0h EDh  not defined */
                            /* opcode 0Fh 38h F0h EEh  not defined */
                            /* opcode 0Fh 38h F0h EFh  not defined */
                            /* opcode 0Fh 38h F0h F0h  not defined */
                            /* opcode 0Fh 38h F0h F1h  not defined */
                            /* opcode 0Fh 38h F0h F2h  not defined */
                            /* opcode 0Fh 38h F0h F3h  not defined */
                            /* opcode 0Fh 38h F0h F4h  not defined */
                            /* opcode 0Fh 38h F0h F5h  not defined */
                            /* opcode 0Fh 38h F0h F6h  not defined */
                            /* opcode 0Fh 38h F0h F7h  not defined */
                            /* opcode 0Fh 38h F0h F8h  not defined */
                            /* opcode 0Fh 38h F0h F9h  not defined */
                            /* opcode 0Fh 38h F0h FAh  not defined */
                            /* opcode 0Fh 38h F0h FBh  not defined */
                            /* opcode 0Fh 38h F0h FCh  not defined */
                            /* opcode 0Fh 38h F0h FDh  not defined */
                            /* opcode 0Fh 38h F0h FEh  not defined */
                            /* opcode 0Fh 38h F0h FFh  not defined */
                            default:
                                goto _x86decode_illegal_opcode;
                        };
/* End of opcodes starting with 0Fh 38h F0h */
                        break;
                    case 0xF1: /* 0Fh 38h F1h        spec:  */
                        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                        _x86decode_begin_code32_addr32_opcode_parse_0F38F1:
/* Opcodes starting with 0Fh 38h F1h */
                        switch (mrm.byte) {
                            case 0x00: /* 0Fh 38h F1h 00h MOVBE w(r/m),w(reg) mod=0 reg=0 rm=0      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x01: /* 0Fh 38h F1h 01h MOVBE w(r/m),w(reg) mod=0 reg=0 rm=1      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x02: /* 0Fh 38h F1h 02h MOVBE w(r/m),w(reg) mod=0 reg=0 rm=2      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x03: /* 0Fh 38h F1h 03h MOVBE w(r/m),w(reg) mod=0 reg=0 rm=3      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x04: /* 0Fh 38h F1h 04h MOVBE w(r/m),w(reg) mod=0 reg=0 rm=4      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x05: /* 0Fh 38h F1h 05h MOVBE w(r/m),w(reg) mod=0 reg=0 rm=5      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x06: /* 0Fh 38h F1h 06h MOVBE w(r/m),w(reg) mod=0 reg=0 rm=6      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x07: /* 0Fh 38h F1h 07h MOVBE w(r/m),w(reg) mod=0 reg=0 rm=7      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x08: /* 0Fh 38h F1h 08h MOVBE w(r/m),w(reg) mod=0 reg=1 rm=0      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x09: /* 0Fh 38h F1h 09h MOVBE w(r/m),w(reg) mod=0 reg=1 rm=1      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x0A: /* 0Fh 38h F1h 0Ah MOVBE w(r/m),w(reg) mod=0 reg=1 rm=2      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x0B: /* 0Fh 38h F1h 0Bh MOVBE w(r/m),w(reg) mod=0 reg=1 rm=3      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x0C: /* 0Fh 38h F1h 0Ch MOVBE w(r/m),w(reg) mod=0 reg=1 rm=4      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x0D: /* 0Fh 38h F1h 0Dh MOVBE w(r/m),w(reg) mod=0 reg=1 rm=5      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x0E: /* 0Fh 38h F1h 0Eh MOVBE w(r/m),w(reg) mod=0 reg=1 rm=6      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x0F: /* 0Fh 38h F1h 0Fh MOVBE w(r/m),w(reg) mod=0 reg=1 rm=7      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x10: /* 0Fh 38h F1h 10h MOVBE w(r/m),w(reg) mod=0 reg=2 rm=0      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x11: /* 0Fh 38h F1h 11h MOVBE w(r/m),w(reg) mod=0 reg=2 rm=1      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x12: /* 0Fh 38h F1h 12h MOVBE w(r/m),w(reg) mod=0 reg=2 rm=2      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x13: /* 0Fh 38h F1h 13h MOVBE w(r/m),w(reg) mod=0 reg=2 rm=3      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x14: /* 0Fh 38h F1h 14h MOVBE w(r/m),w(reg) mod=0 reg=2 rm=4      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x15: /* 0Fh 38h F1h 15h MOVBE w(r/m),w(reg) mod=0 reg=2 rm=5      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x16: /* 0Fh 38h F1h 16h MOVBE w(r/m),w(reg) mod=0 reg=2 rm=6      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x17: /* 0Fh 38h F1h 17h MOVBE w(r/m),w(reg) mod=0 reg=2 rm=7      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x18: /* 0Fh 38h F1h 18h MOVBE w(r/m),w(reg) mod=0 reg=3 rm=0      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x19: /* 0Fh 38h F1h 19h MOVBE w(r/m),w(reg) mod=0 reg=3 rm=1      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x1A: /* 0Fh 38h F1h 1Ah MOVBE w(r/m),w(reg) mod=0 reg=3 rm=2      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x1B: /* 0Fh 38h F1h 1Bh MOVBE w(r/m),w(reg) mod=0 reg=3 rm=3      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x1C: /* 0Fh 38h F1h 1Ch MOVBE w(r/m),w(reg) mod=0 reg=3 rm=4      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x1D: /* 0Fh 38h F1h 1Dh MOVBE w(r/m),w(reg) mod=0 reg=3 rm=5      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x1E: /* 0Fh 38h F1h 1Eh MOVBE w(r/m),w(reg) mod=0 reg=3 rm=6      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x1F: /* 0Fh 38h F1h 1Fh MOVBE w(r/m),w(reg) mod=0 reg=3 rm=7      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x20: /* 0Fh 38h F1h 20h MOVBE w(r/m),w(reg) mod=0 reg=4 rm=0      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x21: /* 0Fh 38h F1h 21h MOVBE w(r/m),w(reg) mod=0 reg=4 rm=1      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x22: /* 0Fh 38h F1h 22h MOVBE w(r/m),w(reg) mod=0 reg=4 rm=2      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x23: /* 0Fh 38h F1h 23h MOVBE w(r/m),w(reg) mod=0 reg=4 rm=3      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x24: /* 0Fh 38h F1h 24h MOVBE w(r/m),w(reg) mod=0 reg=4 rm=4      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x25: /* 0Fh 38h F1h 25h MOVBE w(r/m),w(reg) mod=0 reg=4 rm=5      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x26: /* 0Fh 38h F1h 26h MOVBE w(r/m),w(reg) mod=0 reg=4 rm=6      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x27: /* 0Fh 38h F1h 27h MOVBE w(r/m),w(reg) mod=0 reg=4 rm=7      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x28: /* 0Fh 38h F1h 28h MOVBE w(r/m),w(reg) mod=0 reg=5 rm=0      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x29: /* 0Fh 38h F1h 29h MOVBE w(r/m),w(reg) mod=0 reg=5 rm=1      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x2A: /* 0Fh 38h F1h 2Ah MOVBE w(r/m),w(reg) mod=0 reg=5 rm=2      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x2B: /* 0Fh 38h F1h 2Bh MOVBE w(r/m),w(reg) mod=0 reg=5 rm=3      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x2C: /* 0Fh 38h F1h 2Ch MOVBE w(r/m),w(reg) mod=0 reg=5 rm=4      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x2D: /* 0Fh 38h F1h 2Dh MOVBE w(r/m),w(reg) mod=0 reg=5 rm=5      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x2E: /* 0Fh 38h F1h 2Eh MOVBE w(r/m),w(reg) mod=0 reg=5 rm=6      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x2F: /* 0Fh 38h F1h 2Fh MOVBE w(r/m),w(reg) mod=0 reg=5 rm=7      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x30: /* 0Fh 38h F1h 30h MOVBE w(r/m),w(reg) mod=0 reg=6 rm=0      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x31: /* 0Fh 38h F1h 31h MOVBE w(r/m),w(reg) mod=0 reg=6 rm=1      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x32: /* 0Fh 38h F1h 32h MOVBE w(r/m),w(reg) mod=0 reg=6 rm=2      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x33: /* 0Fh 38h F1h 33h MOVBE w(r/m),w(reg) mod=0 reg=6 rm=3      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x34: /* 0Fh 38h F1h 34h MOVBE w(r/m),w(reg) mod=0 reg=6 rm=4      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x35: /* 0Fh 38h F1h 35h MOVBE w(r/m),w(reg) mod=0 reg=6 rm=5      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x36: /* 0Fh 38h F1h 36h MOVBE w(r/m),w(reg) mod=0 reg=6 rm=6      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x37: /* 0Fh 38h F1h 37h MOVBE w(r/m),w(reg) mod=0 reg=6 rm=7      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x38: /* 0Fh 38h F1h 38h MOVBE w(r/m),w(reg) mod=0 reg=7 rm=0      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x39: /* 0Fh 38h F1h 39h MOVBE w(r/m),w(reg) mod=0 reg=7 rm=1      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x3A: /* 0Fh 38h F1h 3Ah MOVBE w(r/m),w(reg) mod=0 reg=7 rm=2      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x3B: /* 0Fh 38h F1h 3Bh MOVBE w(r/m),w(reg) mod=0 reg=7 rm=3      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x3C: /* 0Fh 38h F1h 3Ch MOVBE w(r/m),w(reg) mod=0 reg=7 rm=4      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x3D: /* 0Fh 38h F1h 3Dh MOVBE w(r/m),w(reg) mod=0 reg=7 rm=5      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x3E: /* 0Fh 38h F1h 3Eh MOVBE w(r/m),w(reg) mod=0 reg=7 rm=6      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x3F: /* 0Fh 38h F1h 3Fh MOVBE w(r/m),w(reg) mod=0 reg=7 rm=7      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x40: /* 0Fh 38h F1h 40h MOVBE w(r/m),w(reg) mod=1 reg=0 rm=0      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x41: /* 0Fh 38h F1h 41h MOVBE w(r/m),w(reg) mod=1 reg=0 rm=1      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x42: /* 0Fh 38h F1h 42h MOVBE w(r/m),w(reg) mod=1 reg=0 rm=2      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x43: /* 0Fh 38h F1h 43h MOVBE w(r/m),w(reg) mod=1 reg=0 rm=3      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x44: /* 0Fh 38h F1h 44h MOVBE w(r/m),w(reg) mod=1 reg=0 rm=4      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x45: /* 0Fh 38h F1h 45h MOVBE w(r/m),w(reg) mod=1 reg=0 rm=5      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x46: /* 0Fh 38h F1h 46h MOVBE w(r/m),w(reg) mod=1 reg=0 rm=6      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x47: /* 0Fh 38h F1h 47h MOVBE w(r/m),w(reg) mod=1 reg=0 rm=7      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x48: /* 0Fh 38h F1h 48h MOVBE w(r/m),w(reg) mod=1 reg=1 rm=0      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x49: /* 0Fh 38h F1h 49h MOVBE w(r/m),w(reg) mod=1 reg=1 rm=1      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x4A: /* 0Fh 38h F1h 4Ah MOVBE w(r/m),w(reg) mod=1 reg=1 rm=2      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x4B: /* 0Fh 38h F1h 4Bh MOVBE w(r/m),w(reg) mod=1 reg=1 rm=3      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x4C: /* 0Fh 38h F1h 4Ch MOVBE w(r/m),w(reg) mod=1 reg=1 rm=4      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x4D: /* 0Fh 38h F1h 4Dh MOVBE w(r/m),w(reg) mod=1 reg=1 rm=5      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x4E: /* 0Fh 38h F1h 4Eh MOVBE w(r/m),w(reg) mod=1 reg=1 rm=6      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x4F: /* 0Fh 38h F1h 4Fh MOVBE w(r/m),w(reg) mod=1 reg=1 rm=7      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x50: /* 0Fh 38h F1h 50h MOVBE w(r/m),w(reg) mod=1 reg=2 rm=0      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x51: /* 0Fh 38h F1h 51h MOVBE w(r/m),w(reg) mod=1 reg=2 rm=1      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x52: /* 0Fh 38h F1h 52h MOVBE w(r/m),w(reg) mod=1 reg=2 rm=2      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x53: /* 0Fh 38h F1h 53h MOVBE w(r/m),w(reg) mod=1 reg=2 rm=3      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x54: /* 0Fh 38h F1h 54h MOVBE w(r/m),w(reg) mod=1 reg=2 rm=4      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x55: /* 0Fh 38h F1h 55h MOVBE w(r/m),w(reg) mod=1 reg=2 rm=5      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x56: /* 0Fh 38h F1h 56h MOVBE w(r/m),w(reg) mod=1 reg=2 rm=6      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x57: /* 0Fh 38h F1h 57h MOVBE w(r/m),w(reg) mod=1 reg=2 rm=7      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x58: /* 0Fh 38h F1h 58h MOVBE w(r/m),w(reg) mod=1 reg=3 rm=0      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x59: /* 0Fh 38h F1h 59h MOVBE w(r/m),w(reg) mod=1 reg=3 rm=1      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x5A: /* 0Fh 38h F1h 5Ah MOVBE w(r/m),w(reg) mod=1 reg=3 rm=2      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x5B: /* 0Fh 38h F1h 5Bh MOVBE w(r/m),w(reg) mod=1 reg=3 rm=3      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x5C: /* 0Fh 38h F1h 5Ch MOVBE w(r/m),w(reg) mod=1 reg=3 rm=4      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x5D: /* 0Fh 38h F1h 5Dh MOVBE w(r/m),w(reg) mod=1 reg=3 rm=5      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x5E: /* 0Fh 38h F1h 5Eh MOVBE w(r/m),w(reg) mod=1 reg=3 rm=6      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x5F: /* 0Fh 38h F1h 5Fh MOVBE w(r/m),w(reg) mod=1 reg=3 rm=7      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x60: /* 0Fh 38h F1h 60h MOVBE w(r/m),w(reg) mod=1 reg=4 rm=0      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x61: /* 0Fh 38h F1h 61h MOVBE w(r/m),w(reg) mod=1 reg=4 rm=1      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x62: /* 0Fh 38h F1h 62h MOVBE w(r/m),w(reg) mod=1 reg=4 rm=2      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x63: /* 0Fh 38h F1h 63h MOVBE w(r/m),w(reg) mod=1 reg=4 rm=3      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x64: /* 0Fh 38h F1h 64h MOVBE w(r/m),w(reg) mod=1 reg=4 rm=4      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x65: /* 0Fh 38h F1h 65h MOVBE w(r/m),w(reg) mod=1 reg=4 rm=5      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x66: /* 0Fh 38h F1h 66h MOVBE w(r/m),w(reg) mod=1 reg=4 rm=6      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x67: /* 0Fh 38h F1h 67h MOVBE w(r/m),w(reg) mod=1 reg=4 rm=7      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x68: /* 0Fh 38h F1h 68h MOVBE w(r/m),w(reg) mod=1 reg=5 rm=0      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x69: /* 0Fh 38h F1h 69h MOVBE w(r/m),w(reg) mod=1 reg=5 rm=1      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x6A: /* 0Fh 38h F1h 6Ah MOVBE w(r/m),w(reg) mod=1 reg=5 rm=2      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x6B: /* 0Fh 38h F1h 6Bh MOVBE w(r/m),w(reg) mod=1 reg=5 rm=3      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x6C: /* 0Fh 38h F1h 6Ch MOVBE w(r/m),w(reg) mod=1 reg=5 rm=4      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x6D: /* 0Fh 38h F1h 6Dh MOVBE w(r/m),w(reg) mod=1 reg=5 rm=5      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x6E: /* 0Fh 38h F1h 6Eh MOVBE w(r/m),w(reg) mod=1 reg=5 rm=6      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x6F: /* 0Fh 38h F1h 6Fh MOVBE w(r/m),w(reg) mod=1 reg=5 rm=7      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x70: /* 0Fh 38h F1h 70h MOVBE w(r/m),w(reg) mod=1 reg=6 rm=0      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x71: /* 0Fh 38h F1h 71h MOVBE w(r/m),w(reg) mod=1 reg=6 rm=1      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x72: /* 0Fh 38h F1h 72h MOVBE w(r/m),w(reg) mod=1 reg=6 rm=2      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x73: /* 0Fh 38h F1h 73h MOVBE w(r/m),w(reg) mod=1 reg=6 rm=3      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x74: /* 0Fh 38h F1h 74h MOVBE w(r/m),w(reg) mod=1 reg=6 rm=4      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x75: /* 0Fh 38h F1h 75h MOVBE w(r/m),w(reg) mod=1 reg=6 rm=5      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x76: /* 0Fh 38h F1h 76h MOVBE w(r/m),w(reg) mod=1 reg=6 rm=6      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x77: /* 0Fh 38h F1h 77h MOVBE w(r/m),w(reg) mod=1 reg=6 rm=7      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x78: /* 0Fh 38h F1h 78h MOVBE w(r/m),w(reg) mod=1 reg=7 rm=0      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x79: /* 0Fh 38h F1h 79h MOVBE w(r/m),w(reg) mod=1 reg=7 rm=1      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x7A: /* 0Fh 38h F1h 7Ah MOVBE w(r/m),w(reg) mod=1 reg=7 rm=2      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x7B: /* 0Fh 38h F1h 7Bh MOVBE w(r/m),w(reg) mod=1 reg=7 rm=3      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x7C: /* 0Fh 38h F1h 7Ch MOVBE w(r/m),w(reg) mod=1 reg=7 rm=4      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x7D: /* 0Fh 38h F1h 7Dh MOVBE w(r/m),w(reg) mod=1 reg=7 rm=5      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x7E: /* 0Fh 38h F1h 7Eh MOVBE w(r/m),w(reg) mod=1 reg=7 rm=6      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x7F: /* 0Fh 38h F1h 7Fh MOVBE w(r/m),w(reg) mod=1 reg=7 rm=7      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x80: /* 0Fh 38h F1h 80h MOVBE w(r/m),w(reg) mod=2 reg=0 rm=0      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x81: /* 0Fh 38h F1h 81h MOVBE w(r/m),w(reg) mod=2 reg=0 rm=1      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x82: /* 0Fh 38h F1h 82h MOVBE w(r/m),w(reg) mod=2 reg=0 rm=2      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x83: /* 0Fh 38h F1h 83h MOVBE w(r/m),w(reg) mod=2 reg=0 rm=3      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x84: /* 0Fh 38h F1h 84h MOVBE w(r/m),w(reg) mod=2 reg=0 rm=4      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x85: /* 0Fh 38h F1h 85h MOVBE w(r/m),w(reg) mod=2 reg=0 rm=5      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x86: /* 0Fh 38h F1h 86h MOVBE w(r/m),w(reg) mod=2 reg=0 rm=6      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x87: /* 0Fh 38h F1h 87h MOVBE w(r/m),w(reg) mod=2 reg=0 rm=7      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x88: /* 0Fh 38h F1h 88h MOVBE w(r/m),w(reg) mod=2 reg=1 rm=0      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x89: /* 0Fh 38h F1h 89h MOVBE w(r/m),w(reg) mod=2 reg=1 rm=1      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x8A: /* 0Fh 38h F1h 8Ah MOVBE w(r/m),w(reg) mod=2 reg=1 rm=2      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x8B: /* 0Fh 38h F1h 8Bh MOVBE w(r/m),w(reg) mod=2 reg=1 rm=3      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x8C: /* 0Fh 38h F1h 8Ch MOVBE w(r/m),w(reg) mod=2 reg=1 rm=4      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x8D: /* 0Fh 38h F1h 8Dh MOVBE w(r/m),w(reg) mod=2 reg=1 rm=5      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x8E: /* 0Fh 38h F1h 8Eh MOVBE w(r/m),w(reg) mod=2 reg=1 rm=6      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x8F: /* 0Fh 38h F1h 8Fh MOVBE w(r/m),w(reg) mod=2 reg=1 rm=7      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x90: /* 0Fh 38h F1h 90h MOVBE w(r/m),w(reg) mod=2 reg=2 rm=0      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x91: /* 0Fh 38h F1h 91h MOVBE w(r/m),w(reg) mod=2 reg=2 rm=1      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x92: /* 0Fh 38h F1h 92h MOVBE w(r/m),w(reg) mod=2 reg=2 rm=2      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x93: /* 0Fh 38h F1h 93h MOVBE w(r/m),w(reg) mod=2 reg=2 rm=3      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x94: /* 0Fh 38h F1h 94h MOVBE w(r/m),w(reg) mod=2 reg=2 rm=4      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x95: /* 0Fh 38h F1h 95h MOVBE w(r/m),w(reg) mod=2 reg=2 rm=5      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x96: /* 0Fh 38h F1h 96h MOVBE w(r/m),w(reg) mod=2 reg=2 rm=6      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x97: /* 0Fh 38h F1h 97h MOVBE w(r/m),w(reg) mod=2 reg=2 rm=7      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x98: /* 0Fh 38h F1h 98h MOVBE w(r/m),w(reg) mod=2 reg=3 rm=0      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x99: /* 0Fh 38h F1h 99h MOVBE w(r/m),w(reg) mod=2 reg=3 rm=1      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x9A: /* 0Fh 38h F1h 9Ah MOVBE w(r/m),w(reg) mod=2 reg=3 rm=2      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x9B: /* 0Fh 38h F1h 9Bh MOVBE w(r/m),w(reg) mod=2 reg=3 rm=3      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x9C: /* 0Fh 38h F1h 9Ch MOVBE w(r/m),w(reg) mod=2 reg=3 rm=4      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x9D: /* 0Fh 38h F1h 9Dh MOVBE w(r/m),w(reg) mod=2 reg=3 rm=5      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x9E: /* 0Fh 38h F1h 9Eh MOVBE w(r/m),w(reg) mod=2 reg=3 rm=6      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0x9F: /* 0Fh 38h F1h 9Fh MOVBE w(r/m),w(reg) mod=2 reg=3 rm=7      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0xA0: /* 0Fh 38h F1h A0h MOVBE w(r/m),w(reg) mod=2 reg=4 rm=0      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0xA1: /* 0Fh 38h F1h A1h MOVBE w(r/m),w(reg) mod=2 reg=4 rm=1      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0xA2: /* 0Fh 38h F1h A2h MOVBE w(r/m),w(reg) mod=2 reg=4 rm=2      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0xA3: /* 0Fh 38h F1h A3h MOVBE w(r/m),w(reg) mod=2 reg=4 rm=3      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0xA4: /* 0Fh 38h F1h A4h MOVBE w(r/m),w(reg) mod=2 reg=4 rm=4      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0xA5: /* 0Fh 38h F1h A5h MOVBE w(r/m),w(reg) mod=2 reg=4 rm=5      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0xA6: /* 0Fh 38h F1h A6h MOVBE w(r/m),w(reg) mod=2 reg=4 rm=6      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0xA7: /* 0Fh 38h F1h A7h MOVBE w(r/m),w(reg) mod=2 reg=4 rm=7      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0xA8: /* 0Fh 38h F1h A8h MOVBE w(r/m),w(reg) mod=2 reg=5 rm=0      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0xA9: /* 0Fh 38h F1h A9h MOVBE w(r/m),w(reg) mod=2 reg=5 rm=1      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0xAA: /* 0Fh 38h F1h AAh MOVBE w(r/m),w(reg) mod=2 reg=5 rm=2      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0xAB: /* 0Fh 38h F1h ABh MOVBE w(r/m),w(reg) mod=2 reg=5 rm=3      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0xAC: /* 0Fh 38h F1h ACh MOVBE w(r/m),w(reg) mod=2 reg=5 rm=4      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0xAD: /* 0Fh 38h F1h ADh MOVBE w(r/m),w(reg) mod=2 reg=5 rm=5      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0xAE: /* 0Fh 38h F1h AEh MOVBE w(r/m),w(reg) mod=2 reg=5 rm=6      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0xAF: /* 0Fh 38h F1h AFh MOVBE w(r/m),w(reg) mod=2 reg=5 rm=7      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0xB0: /* 0Fh 38h F1h B0h MOVBE w(r/m),w(reg) mod=2 reg=6 rm=0      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0xB1: /* 0Fh 38h F1h B1h MOVBE w(r/m),w(reg) mod=2 reg=6 rm=1      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0xB2: /* 0Fh 38h F1h B2h MOVBE w(r/m),w(reg) mod=2 reg=6 rm=2      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0xB3: /* 0Fh 38h F1h B3h MOVBE w(r/m),w(reg) mod=2 reg=6 rm=3      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0xB4: /* 0Fh 38h F1h B4h MOVBE w(r/m),w(reg) mod=2 reg=6 rm=4      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0xB5: /* 0Fh 38h F1h B5h MOVBE w(r/m),w(reg) mod=2 reg=6 rm=5      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0xB6: /* 0Fh 38h F1h B6h MOVBE w(r/m),w(reg) mod=2 reg=6 rm=6      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0xB7: /* 0Fh 38h F1h B7h MOVBE w(r/m),w(reg) mod=2 reg=6 rm=7      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0xB8: /* 0Fh 38h F1h B8h MOVBE w(r/m),w(reg) mod=2 reg=7 rm=0      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0xB9: /* 0Fh 38h F1h B9h MOVBE w(r/m),w(reg) mod=2 reg=7 rm=1      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0xBA: /* 0Fh 38h F1h BAh MOVBE w(r/m),w(reg) mod=2 reg=7 rm=2      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0xBB: /* 0Fh 38h F1h BBh MOVBE w(r/m),w(reg) mod=2 reg=7 rm=3      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0xBC: /* 0Fh 38h F1h BCh MOVBE w(r/m),w(reg) mod=2 reg=7 rm=4      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0xBD: /* 0Fh 38h F1h BDh MOVBE w(r/m),w(reg) mod=2 reg=7 rm=5      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0xBE: /* 0Fh 38h F1h BEh MOVBE w(r/m),w(reg) mod=2 reg=7 rm=6      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                            case 0xBF: /* 0Fh 38h F1h BFh MOVBE w(r/m),w(reg) mod=2 reg=7 rm=7      spec: 0x0F 0x38 0xF1 mod/reg/rm mod!=3 */
                                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVBE %s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[4][mrm.reg()]);
                                break;
                            /* opcode 0Fh 38h F1h C0h  not defined */
                            /* opcode 0Fh 38h F1h C1h  not defined */
                            /* opcode 0Fh 38h F1h C2h  not defined */
                            /* opcode 0Fh 38h F1h C3h  not defined */
                            /* opcode 0Fh 38h F1h C4h  not defined */
                            /* opcode 0Fh 38h F1h C5h  not defined */
                            /* opcode 0Fh 38h F1h C6h  not defined */
                            /* opcode 0Fh 38h F1h C7h  not defined */
                            /* opcode 0Fh 38h F1h C8h  not defined */
                            /* opcode 0Fh 38h F1h C9h  not defined */
                            /* opcode 0Fh 38h F1h CAh  not defined */
                            /* opcode 0Fh 38h F1h CBh  not defined */
                            /* opcode 0Fh 38h F1h CCh  not defined */
                            /* opcode 0Fh 38h F1h CDh  not defined */
                            /* opcode 0Fh 38h F1h CEh  not defined */
                            /* opcode 0Fh 38h F1h CFh  not defined */
                            /* opcode 0Fh 38h F1h D0h  not defined */
                            /* opcode 0Fh 38h F1h D1h  not defined */
                            /* opcode 0Fh 38h F1h D2h  not defined */
                            /* opcode 0Fh 38h F1h D3h  not defined */
                            /* opcode 0Fh 38h F1h D4h  not defined */
                            /* opcode 0Fh 38h F1h D5h  not defined */
                            /* opcode 0Fh 38h F1h D6h  not defined */
                            /* opcode 0Fh 38h F1h D7h  not defined */
                            /* opcode 0Fh 38h F1h D8h  not defined */
                            /* opcode 0Fh 38h F1h D9h  not defined */
                            /* opcode 0Fh 38h F1h DAh  not defined */
                            /* opcode 0Fh 38h F1h DBh  not defined */
                            /* opcode 0Fh 38h F1h DCh  not defined */
                            /* opcode 0Fh 38h F1h DDh  not defined */
                            /* opcode 0Fh 38h F1h DEh  not defined */
                            /* opcode 0Fh 38h F1h DFh  not defined */
                            /* opcode 0Fh 38h F1h E0h  not defined */
                            /* opcode 0Fh 38h F1h E1h  not defined */
                            /* opcode 0Fh 38h F1h E2h  not defined */
                            /* opcode 0Fh 38h F1h E3h  not defined */
                            /* opcode 0Fh 38h F1h E4h  not defined */
                            /* opcode 0Fh 38h F1h E5h  not defined */
                            /* opcode 0Fh 38h F1h E6h  not defined */
                            /* opcode 0Fh 38h F1h E7h  not defined */
                            /* opcode 0Fh 38h F1h E8h  not defined */
                            /* opcode 0Fh 38h F1h E9h  not defined */
                            /* opcode 0Fh 38h F1h EAh  not defined */
                            /* opcode 0Fh 38h F1h EBh  not defined */
                            /* opcode 0Fh 38h F1h ECh  not defined */
                            /* opcode 0Fh 38h F1h EDh  not defined */
                            /* opcode 0Fh 38h F1h EEh  not defined */
                            /* opcode 0Fh 38h F1h EFh  not defined */
                            /* opcode 0Fh 38h F1h F0h  not defined */
                            /* opcode 0Fh 38h F1h F1h  not defined */
                            /* opcode 0Fh 38h F1h F2h  not defined */
                            /* opcode 0Fh 38h F1h F3h  not defined */
                            /* opcode 0Fh 38h F1h F4h  not defined */
                            /* opcode 0Fh 38h F1h F5h  not defined */
                            /* opcode 0Fh 38h F1h F6h  not defined */
                            /* opcode 0Fh 38h F1h F7h  not defined */
                            /* opcode 0Fh 38h F1h F8h  not defined */
                            /* opcode 0Fh 38h F1h F9h  not defined */
                            /* opcode 0Fh 38h F1h FAh  not defined */
                            /* opcode 0Fh 38h F1h FBh  not defined */
                            /* opcode 0Fh 38h F1h FCh  not defined */
                            /* opcode 0Fh 38h F1h FDh  not defined */
                            /* opcode 0Fh 38h F1h FEh  not defined */
                            /* opcode 0Fh 38h F1h FFh  not defined */
                            default:
                                goto _x86decode_illegal_opcode;
                        };
/* End of opcodes starting with 0Fh 38h F1h */
                        break;
                    /* opcode 0Fh 38h F2h  not defined */
                    /* opcode 0Fh 38h F3h  not defined */
                    /* opcode 0Fh 38h F4h  not defined */
                    /* opcode 0Fh 38h F5h  not defined */
                    /* opcode 0Fh 38h F6h  not defined */
                    /* opcode 0Fh 38h F7h  not defined */
                    /* opcode 0Fh 38h F8h  not defined */
                    /* opcode 0Fh 38h F9h  not defined */
                    /* opcode 0Fh 38h FAh  not defined */
                    /* opcode 0Fh 38h FBh  not defined */
                    /* opcode 0Fh 38h FCh  not defined */
                    /* opcode 0Fh 38h FDh  not defined */
                    /* opcode 0Fh 38h FEh  not defined */
                    /* opcode 0Fh 38h FFh  not defined */
                    default:
                        goto _x86decode_illegal_opcode;
                };
/* End of opcodes starting with 0Fh 38h */
                break;
            /* opcode 0Fh 39h  not defined */
            case 0x3A: /* 0Fh 3Ah        spec:  */
/* Opcodes starting with 0Fh 3Ah */
                op=IPFB();
                _x86decode_begin_code32_addr32_opcode_parse_0F3A:
                switch (op) {
                    /* opcode 0Fh 3Ah 00h  not defined */
                    /* opcode 0Fh 3Ah 01h  not defined */
                    /* opcode 0Fh 3Ah 02h  not defined */
                    /* opcode 0Fh 3Ah 03h  not defined */
                    /* opcode 0Fh 3Ah 04h  not defined */
                    /* opcode 0Fh 3Ah 05h  not defined */
                    /* opcode 0Fh 3Ah 06h  not defined */
                    /* opcode 0Fh 3Ah 07h  not defined */
                    /* opcode 0Fh 3Ah 08h  not defined */
                    /* opcode 0Fh 3Ah 09h  not defined */
                    /* opcode 0Fh 3Ah 0Ah  not defined */
                    /* opcode 0Fh 3Ah 0Bh  not defined */
                    /* opcode 0Fh 3Ah 0Ch  not defined */
                    /* opcode 0Fh 3Ah 0Dh  not defined */
                    /* opcode 0Fh 3Ah 0Eh  not defined */
                    case 0x0F: /* 0Fh 3Ah 0Fh PALIGNR mmx(reg),mmx(r/m),i      spec: 0x0F 0x3A 0x0F mod/reg/rm ib */
                        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                        imm=IPFB();
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PALIGNR MM%u,%s,0x%02lX",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""),(unsigned long)((uint32_t)imm));
                        break;
                    /* opcode 0Fh 3Ah 10h  not defined */
                    /* opcode 0Fh 3Ah 11h  not defined */
                    /* opcode 0Fh 3Ah 12h  not defined */
                    /* opcode 0Fh 3Ah 13h  not defined */
                    /* opcode 0Fh 3Ah 14h  not defined */
                    /* opcode 0Fh 3Ah 15h  not defined */
                    /* opcode 0Fh 3Ah 16h  not defined */
                    /* opcode 0Fh 3Ah 17h  not defined */
                    /* opcode 0Fh 3Ah 18h  not defined */
                    /* opcode 0Fh 3Ah 19h  not defined */
                    /* opcode 0Fh 3Ah 1Ah  not defined */
                    /* opcode 0Fh 3Ah 1Bh  not defined */
                    /* opcode 0Fh 3Ah 1Ch  not defined */
                    /* opcode 0Fh 3Ah 1Dh  not defined */
                    /* opcode 0Fh 3Ah 1Eh  not defined */
                    /* opcode 0Fh 3Ah 1Fh  not defined */
                    /* opcode 0Fh 3Ah 20h  not defined */
                    /* opcode 0Fh 3Ah 21h  not defined */
                    /* opcode 0Fh 3Ah 22h  not defined */
                    /* opcode 0Fh 3Ah 23h  not defined */
                    /* opcode 0Fh 3Ah 24h  not defined */
                    /* opcode 0Fh 3Ah 25h  not defined */
                    /* opcode 0Fh 3Ah 26h  not defined */
                    /* opcode 0Fh 3Ah 27h  not defined */
                    /* opcode 0Fh 3Ah 28h  not defined */
                    /* opcode 0Fh 3Ah 29h  not defined */
                    /* opcode 0Fh 3Ah 2Ah  not defined */
                    /* opcode 0Fh 3Ah 2Bh  not defined */
                    /* opcode 0Fh 3Ah 2Ch  not defined */
                    /* opcode 0Fh 3Ah 2Dh  not defined */
                    /* opcode 0Fh 3Ah 2Eh  not defined */
                    /* opcode 0Fh 3Ah 2Fh  not defined */
                    /* opcode 0Fh 3Ah 30h  not defined */
                    /* opcode 0Fh 3Ah 31h  not defined */
                    /* opcode 0Fh 3Ah 32h  not defined */
                    /* opcode 0Fh 3Ah 33h  not defined */
                    /* opcode 0Fh 3Ah 34h  not defined */
                    /* opcode 0Fh 3Ah 35h  not defined */
                    /* opcode 0Fh 3Ah 36h  not defined */
                    /* opcode 0Fh 3Ah 37h  not defined */
                    /* opcode 0Fh 3Ah 38h  not defined */
                    /* opcode 0Fh 3Ah 39h  not defined */
                    /* opcode 0Fh 3Ah 3Ah  not defined */
                    /* opcode 0Fh 3Ah 3Bh  not defined */
                    /* opcode 0Fh 3Ah 3Ch  not defined */
                    /* opcode 0Fh 3Ah 3Dh  not defined */
                    /* opcode 0Fh 3Ah 3Eh  not defined */
                    /* opcode 0Fh 3Ah 3Fh  not defined */
                    /* opcode 0Fh 3Ah 40h  not defined */
                    /* opcode 0Fh 3Ah 41h  not defined */
                    /* opcode 0Fh 3Ah 42h  not defined */
                    /* opcode 0Fh 3Ah 43h  not defined */
                    /* opcode 0Fh 3Ah 44h  not defined */
                    /* opcode 0Fh 3Ah 45h  not defined */
                    /* opcode 0Fh 3Ah 46h  not defined */
                    /* opcode 0Fh 3Ah 47h  not defined */
                    /* opcode 0Fh 3Ah 48h  not defined */
                    /* opcode 0Fh 3Ah 49h  not defined */
                    /* opcode 0Fh 3Ah 4Ah  not defined */
                    /* opcode 0Fh 3Ah 4Bh  not defined */
                    /* opcode 0Fh 3Ah 4Ch  not defined */
                    /* opcode 0Fh 3Ah 4Dh  not defined */
                    /* opcode 0Fh 3Ah 4Eh  not defined */
                    /* opcode 0Fh 3Ah 4Fh  not defined */
                    /* opcode 0Fh 3Ah 50h  not defined */
                    /* opcode 0Fh 3Ah 51h  not defined */
                    /* opcode 0Fh 3Ah 52h  not defined */
                    /* opcode 0Fh 3Ah 53h  not defined */
                    /* opcode 0Fh 3Ah 54h  not defined */
                    /* opcode 0Fh 3Ah 55h  not defined */
                    /* opcode 0Fh 3Ah 56h  not defined */
                    /* opcode 0Fh 3Ah 57h  not defined */
                    /* opcode 0Fh 3Ah 58h  not defined */
                    /* opcode 0Fh 3Ah 59h  not defined */
                    /* opcode 0Fh 3Ah 5Ah  not defined */
                    /* opcode 0Fh 3Ah 5Bh  not defined */
                    /* opcode 0Fh 3Ah 5Ch  not defined */
                    /* opcode 0Fh 3Ah 5Dh  not defined */
                    /* opcode 0Fh 3Ah 5Eh  not defined */
                    /* opcode 0Fh 3Ah 5Fh  not defined */
                    /* opcode 0Fh 3Ah 60h  not defined */
                    /* opcode 0Fh 3Ah 61h  not defined */
                    /* opcode 0Fh 3Ah 62h  not defined */
                    /* opcode 0Fh 3Ah 63h  not defined */
                    /* opcode 0Fh 3Ah 64h  not defined */
                    /* opcode 0Fh 3Ah 65h  not defined */
                    /* opcode 0Fh 3Ah 66h  not defined */
                    /* opcode 0Fh 3Ah 67h  not defined */
                    /* opcode 0Fh 3Ah 68h  not defined */
                    /* opcode 0Fh 3Ah 69h  not defined */
                    /* opcode 0Fh 3Ah 6Ah  not defined */
                    /* opcode 0Fh 3Ah 6Bh  not defined */
                    /* opcode 0Fh 3Ah 6Ch  not defined */
                    /* opcode 0Fh 3Ah 6Dh  not defined */
                    /* opcode 0Fh 3Ah 6Eh  not defined */
                    /* opcode 0Fh 3Ah 6Fh  not defined */
                    /* opcode 0Fh 3Ah 70h  not defined */
                    /* opcode 0Fh 3Ah 71h  not defined */
                    /* opcode 0Fh 3Ah 72h  not defined */
                    /* opcode 0Fh 3Ah 73h  not defined */
                    /* opcode 0Fh 3Ah 74h  not defined */
                    /* opcode 0Fh 3Ah 75h  not defined */
                    /* opcode 0Fh 3Ah 76h  not defined */
                    /* opcode 0Fh 3Ah 77h  not defined */
                    /* opcode 0Fh 3Ah 78h  not defined */
                    /* opcode 0Fh 3Ah 79h  not defined */
                    /* opcode 0Fh 3Ah 7Ah  not defined */
                    /* opcode 0Fh 3Ah 7Bh  not defined */
                    /* opcode 0Fh 3Ah 7Ch  not defined */
                    /* opcode 0Fh 3Ah 7Dh  not defined */
                    /* opcode 0Fh 3Ah 7Eh  not defined */
                    /* opcode 0Fh 3Ah 7Fh  not defined */
                    /* opcode 0Fh 3Ah 80h  not defined */
                    /* opcode 0Fh 3Ah 81h  not defined */
                    /* opcode 0Fh 3Ah 82h  not defined */
                    /* opcode 0Fh 3Ah 83h  not defined */
                    /* opcode 0Fh 3Ah 84h  not defined */
                    /* opcode 0Fh 3Ah 85h  not defined */
                    /* opcode 0Fh 3Ah 86h  not defined */
                    /* opcode 0Fh 3Ah 87h  not defined */
                    /* opcode 0Fh 3Ah 88h  not defined */
                    /* opcode 0Fh 3Ah 89h  not defined */
                    /* opcode 0Fh 3Ah 8Ah  not defined */
                    /* opcode 0Fh 3Ah 8Bh  not defined */
                    /* opcode 0Fh 3Ah 8Ch  not defined */
                    /* opcode 0Fh 3Ah 8Dh  not defined */
                    /* opcode 0Fh 3Ah 8Eh  not defined */
                    /* opcode 0Fh 3Ah 8Fh  not defined */
                    /* opcode 0Fh 3Ah 90h  not defined */
                    /* opcode 0Fh 3Ah 91h  not defined */
                    /* opcode 0Fh 3Ah 92h  not defined */
                    /* opcode 0Fh 3Ah 93h  not defined */
                    /* opcode 0Fh 3Ah 94h  not defined */
                    /* opcode 0Fh 3Ah 95h  not defined */
                    /* opcode 0Fh 3Ah 96h  not defined */
                    /* opcode 0Fh 3Ah 97h  not defined */
                    /* opcode 0Fh 3Ah 98h  not defined */
                    /* opcode 0Fh 3Ah 99h  not defined */
                    /* opcode 0Fh 3Ah 9Ah  not defined */
                    /* opcode 0Fh 3Ah 9Bh  not defined */
                    /* opcode 0Fh 3Ah 9Ch  not defined */
                    /* opcode 0Fh 3Ah 9Dh  not defined */
                    /* opcode 0Fh 3Ah 9Eh  not defined */
                    /* opcode 0Fh 3Ah 9Fh  not defined */
                    /* opcode 0Fh 3Ah A0h  not defined */
                    /* opcode 0Fh 3Ah A1h  not defined */
                    /* opcode 0Fh 3Ah A2h  not defined */
                    /* opcode 0Fh 3Ah A3h  not defined */
                    /* opcode 0Fh 3Ah A4h  not defined */
                    /* opcode 0Fh 3Ah A5h  not defined */
                    /* opcode 0Fh 3Ah A6h  not defined */
                    /* opcode 0Fh 3Ah A7h  not defined */
                    /* opcode 0Fh 3Ah A8h  not defined */
                    /* opcode 0Fh 3Ah A9h  not defined */
                    /* opcode 0Fh 3Ah AAh  not defined */
                    /* opcode 0Fh 3Ah ABh  not defined */
                    /* opcode 0Fh 3Ah ACh  not defined */
                    /* opcode 0Fh 3Ah ADh  not defined */
                    /* opcode 0Fh 3Ah AEh  not defined */
                    /* opcode 0Fh 3Ah AFh  not defined */
                    /* opcode 0Fh 3Ah B0h  not defined */
                    /* opcode 0Fh 3Ah B1h  not defined */
                    /* opcode 0Fh 3Ah B2h  not defined */
                    /* opcode 0Fh 3Ah B3h  not defined */
                    /* opcode 0Fh 3Ah B4h  not defined */
                    /* opcode 0Fh 3Ah B5h  not defined */
                    /* opcode 0Fh 3Ah B6h  not defined */
                    /* opcode 0Fh 3Ah B7h  not defined */
                    /* opcode 0Fh 3Ah B8h  not defined */
                    /* opcode 0Fh 3Ah B9h  not defined */
                    /* opcode 0Fh 3Ah BAh  not defined */
                    /* opcode 0Fh 3Ah BBh  not defined */
                    /* opcode 0Fh 3Ah BCh  not defined */
                    /* opcode 0Fh 3Ah BDh  not defined */
                    /* opcode 0Fh 3Ah BEh  not defined */
                    /* opcode 0Fh 3Ah BFh  not defined */
                    /* opcode 0Fh 3Ah C0h  not defined */
                    /* opcode 0Fh 3Ah C1h  not defined */
                    /* opcode 0Fh 3Ah C2h  not defined */
                    /* opcode 0Fh 3Ah C3h  not defined */
                    /* opcode 0Fh 3Ah C4h  not defined */
                    /* opcode 0Fh 3Ah C5h  not defined */
                    /* opcode 0Fh 3Ah C6h  not defined */
                    /* opcode 0Fh 3Ah C7h  not defined */
                    /* opcode 0Fh 3Ah C8h  not defined */
                    /* opcode 0Fh 3Ah C9h  not defined */
                    /* opcode 0Fh 3Ah CAh  not defined */
                    /* opcode 0Fh 3Ah CBh  not defined */
                    /* opcode 0Fh 3Ah CCh  not defined */
                    /* opcode 0Fh 3Ah CDh  not defined */
                    /* opcode 0Fh 3Ah CEh  not defined */
                    /* opcode 0Fh 3Ah CFh  not defined */
                    /* opcode 0Fh 3Ah D0h  not defined */
                    /* opcode 0Fh 3Ah D1h  not defined */
                    /* opcode 0Fh 3Ah D2h  not defined */
                    /* opcode 0Fh 3Ah D3h  not defined */
                    /* opcode 0Fh 3Ah D4h  not defined */
                    /* opcode 0Fh 3Ah D5h  not defined */
                    /* opcode 0Fh 3Ah D6h  not defined */
                    /* opcode 0Fh 3Ah D7h  not defined */
                    /* opcode 0Fh 3Ah D8h  not defined */
                    /* opcode 0Fh 3Ah D9h  not defined */
                    /* opcode 0Fh 3Ah DAh  not defined */
                    /* opcode 0Fh 3Ah DBh  not defined */
                    /* opcode 0Fh 3Ah DCh  not defined */
                    /* opcode 0Fh 3Ah DDh  not defined */
                    /* opcode 0Fh 3Ah DEh  not defined */
                    /* opcode 0Fh 3Ah DFh  not defined */
                    /* opcode 0Fh 3Ah E0h  not defined */
                    /* opcode 0Fh 3Ah E1h  not defined */
                    /* opcode 0Fh 3Ah E2h  not defined */
                    /* opcode 0Fh 3Ah E3h  not defined */
                    /* opcode 0Fh 3Ah E4h  not defined */
                    /* opcode 0Fh 3Ah E5h  not defined */
                    /* opcode 0Fh 3Ah E6h  not defined */
                    /* opcode 0Fh 3Ah E7h  not defined */
                    /* opcode 0Fh 3Ah E8h  not defined */
                    /* opcode 0Fh 3Ah E9h  not defined */
                    /* opcode 0Fh 3Ah EAh  not defined */
                    /* opcode 0Fh 3Ah EBh  not defined */
                    /* opcode 0Fh 3Ah ECh  not defined */
                    /* opcode 0Fh 3Ah EDh  not defined */
                    /* opcode 0Fh 3Ah EEh  not defined */
                    /* opcode 0Fh 3Ah EFh  not defined */
                    /* opcode 0Fh 3Ah F0h  not defined */
                    /* opcode 0Fh 3Ah F1h  not defined */
                    /* opcode 0Fh 3Ah F2h  not defined */
                    /* opcode 0Fh 3Ah F3h  not defined */
                    /* opcode 0Fh 3Ah F4h  not defined */
                    /* opcode 0Fh 3Ah F5h  not defined */
                    /* opcode 0Fh 3Ah F6h  not defined */
                    /* opcode 0Fh 3Ah F7h  not defined */
                    /* opcode 0Fh 3Ah F8h  not defined */
                    /* opcode 0Fh 3Ah F9h  not defined */
                    /* opcode 0Fh 3Ah FAh  not defined */
                    /* opcode 0Fh 3Ah FBh  not defined */
                    /* opcode 0Fh 3Ah FCh  not defined */
                    /* opcode 0Fh 3Ah FDh  not defined */
                    /* opcode 0Fh 3Ah FEh  not defined */
                    /* opcode 0Fh 3Ah FFh  not defined */
                    default:
                        goto _x86decode_illegal_opcode;
                };
/* End of opcodes starting with 0Fh 3Ah */
                break;
            /* opcode 0Fh 3Bh  not defined */
            /* opcode 0Fh 3Ch  not defined */
            /* opcode 0Fh 3Dh  not defined */
            /* opcode 0Fh 3Eh  not defined */
            /* opcode 0Fh 3Fh  not defined */
            case 0x40: /* 0Fh 40h CMOVO w(reg),w(r/m)      spec: 0x0F 0x40 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CMOVO %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 0x41: /* 0Fh 41h CMOVNO w(reg),w(r/m)      spec: 0x0F 0x41 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CMOVNO %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 0x42: /* 0Fh 42h CMOVB w(reg),w(r/m)      spec: 0x0F 0x42 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CMOVB %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 0x43: /* 0Fh 43h CMOVNB w(reg),w(r/m)      spec: 0x0F 0x43 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CMOVNB %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 0x44: /* 0Fh 44h CMOVZ w(reg),w(r/m)      spec: 0x0F 0x44 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CMOVZ %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 0x45: /* 0Fh 45h CMOVNZ w(reg),w(r/m)      spec: 0x0F 0x45 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CMOVNZ %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 0x46: /* 0Fh 46h CMOVBE w(reg),w(r/m)      spec: 0x0F 0x46 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CMOVBE %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 0x47: /* 0Fh 47h CMOVNBE w(reg),w(r/m)      spec: 0x0F 0x47 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CMOVNBE %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 0x48: /* 0Fh 48h CMOVS w(reg),w(r/m)      spec: 0x0F 0x48 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CMOVS %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 0x49: /* 0Fh 49h CMOVNS w(reg),w(r/m)      spec: 0x0F 0x49 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CMOVNS %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 0x4A: /* 0Fh 4Ah CMOVP w(reg),w(r/m)      spec: 0x0F 0x4A mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CMOVP %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 0x4B: /* 0Fh 4Bh CMOVNP w(reg),w(r/m)      spec: 0x0F 0x4B mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CMOVNP %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 0x4C: /* 0Fh 4Ch CMOVL w(reg),w(r/m)      spec: 0x0F 0x4C mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CMOVL %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 0x4D: /* 0Fh 4Dh CMOVNL w(reg),w(r/m)      spec: 0x0F 0x4D mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CMOVNL %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 0x4E: /* 0Fh 4Eh CMOVLE w(reg),w(r/m)      spec: 0x0F 0x4E mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CMOVLE %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 0x4F: /* 0Fh 4Fh CMOVNLE w(reg),w(r/m)      spec: 0x0F 0x4F mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CMOVNLE %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 0x50: /* 0Fh 50h        spec:  */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                _x86decode_begin_code32_addr32_opcode_parse_0F50:
/* Opcodes starting with 0Fh 50h */
                switch (mrm.byte) {
                    /* opcode 0Fh 50h 00h  not defined */
                    /* opcode 0Fh 50h 01h  not defined */
                    /* opcode 0Fh 50h 02h  not defined */
                    /* opcode 0Fh 50h 03h  not defined */
                    /* opcode 0Fh 50h 04h  not defined */
                    /* opcode 0Fh 50h 05h  not defined */
                    /* opcode 0Fh 50h 06h  not defined */
                    /* opcode 0Fh 50h 07h  not defined */
                    /* opcode 0Fh 50h 08h  not defined */
                    /* opcode 0Fh 50h 09h  not defined */
                    /* opcode 0Fh 50h 0Ah  not defined */
                    /* opcode 0Fh 50h 0Bh  not defined */
                    /* opcode 0Fh 50h 0Ch  not defined */
                    /* opcode 0Fh 50h 0Dh  not defined */
                    /* opcode 0Fh 50h 0Eh  not defined */
                    /* opcode 0Fh 50h 0Fh  not defined */
                    /* opcode 0Fh 50h 10h  not defined */
                    /* opcode 0Fh 50h 11h  not defined */
                    /* opcode 0Fh 50h 12h  not defined */
                    /* opcode 0Fh 50h 13h  not defined */
                    /* opcode 0Fh 50h 14h  not defined */
                    /* opcode 0Fh 50h 15h  not defined */
                    /* opcode 0Fh 50h 16h  not defined */
                    /* opcode 0Fh 50h 17h  not defined */
                    /* opcode 0Fh 50h 18h  not defined */
                    /* opcode 0Fh 50h 19h  not defined */
                    /* opcode 0Fh 50h 1Ah  not defined */
                    /* opcode 0Fh 50h 1Bh  not defined */
                    /* opcode 0Fh 50h 1Ch  not defined */
                    /* opcode 0Fh 50h 1Dh  not defined */
                    /* opcode 0Fh 50h 1Eh  not defined */
                    /* opcode 0Fh 50h 1Fh  not defined */
                    /* opcode 0Fh 50h 20h  not defined */
                    /* opcode 0Fh 50h 21h  not defined */
                    /* opcode 0Fh 50h 22h  not defined */
                    /* opcode 0Fh 50h 23h  not defined */
                    /* opcode 0Fh 50h 24h  not defined */
                    /* opcode 0Fh 50h 25h  not defined */
                    /* opcode 0Fh 50h 26h  not defined */
                    /* opcode 0Fh 50h 27h  not defined */
                    /* opcode 0Fh 50h 28h  not defined */
                    /* opcode 0Fh 50h 29h  not defined */
                    /* opcode 0Fh 50h 2Ah  not defined */
                    /* opcode 0Fh 50h 2Bh  not defined */
                    /* opcode 0Fh 50h 2Ch  not defined */
                    /* opcode 0Fh 50h 2Dh  not defined */
                    /* opcode 0Fh 50h 2Eh  not defined */
                    /* opcode 0Fh 50h 2Fh  not defined */
                    /* opcode 0Fh 50h 30h  not defined */
                    /* opcode 0Fh 50h 31h  not defined */
                    /* opcode 0Fh 50h 32h  not defined */
                    /* opcode 0Fh 50h 33h  not defined */
                    /* opcode 0Fh 50h 34h  not defined */
                    /* opcode 0Fh 50h 35h  not defined */
                    /* opcode 0Fh 50h 36h  not defined */
                    /* opcode 0Fh 50h 37h  not defined */
                    /* opcode 0Fh 50h 38h  not defined */
                    /* opcode 0Fh 50h 39h  not defined */
                    /* opcode 0Fh 50h 3Ah  not defined */
                    /* opcode 0Fh 50h 3Bh  not defined */
                    /* opcode 0Fh 50h 3Ch  not defined */
                    /* opcode 0Fh 50h 3Dh  not defined */
                    /* opcode 0Fh 50h 3Eh  not defined */
                    /* opcode 0Fh 50h 3Fh  not defined */
                    /* opcode 0Fh 50h 40h  not defined */
                    /* opcode 0Fh 50h 41h  not defined */
                    /* opcode 0Fh 50h 42h  not defined */
                    /* opcode 0Fh 50h 43h  not defined */
                    /* opcode 0Fh 50h 44h  not defined */
                    /* opcode 0Fh 50h 45h  not defined */
                    /* opcode 0Fh 50h 46h  not defined */
                    /* opcode 0Fh 50h 47h  not defined */
                    /* opcode 0Fh 50h 48h  not defined */
                    /* opcode 0Fh 50h 49h  not defined */
                    /* opcode 0Fh 50h 4Ah  not defined */
                    /* opcode 0Fh 50h 4Bh  not defined */
                    /* opcode 0Fh 50h 4Ch  not defined */
                    /* opcode 0Fh 50h 4Dh  not defined */
                    /* opcode 0Fh 50h 4Eh  not defined */
                    /* opcode 0Fh 50h 4Fh  not defined */
                    /* opcode 0Fh 50h 50h  not defined */
                    /* opcode 0Fh 50h 51h  not defined */
                    /* opcode 0Fh 50h 52h  not defined */
                    /* opcode 0Fh 50h 53h  not defined */
                    /* opcode 0Fh 50h 54h  not defined */
                    /* opcode 0Fh 50h 55h  not defined */
                    /* opcode 0Fh 50h 56h  not defined */
                    /* opcode 0Fh 50h 57h  not defined */
                    /* opcode 0Fh 50h 58h  not defined */
                    /* opcode 0Fh 50h 59h  not defined */
                    /* opcode 0Fh 50h 5Ah  not defined */
                    /* opcode 0Fh 50h 5Bh  not defined */
                    /* opcode 0Fh 50h 5Ch  not defined */
                    /* opcode 0Fh 50h 5Dh  not defined */
                    /* opcode 0Fh 50h 5Eh  not defined */
                    /* opcode 0Fh 50h 5Fh  not defined */
                    /* opcode 0Fh 50h 60h  not defined */
                    /* opcode 0Fh 50h 61h  not defined */
                    /* opcode 0Fh 50h 62h  not defined */
                    /* opcode 0Fh 50h 63h  not defined */
                    /* opcode 0Fh 50h 64h  not defined */
                    /* opcode 0Fh 50h 65h  not defined */
                    /* opcode 0Fh 50h 66h  not defined */
                    /* opcode 0Fh 50h 67h  not defined */
                    /* opcode 0Fh 50h 68h  not defined */
                    /* opcode 0Fh 50h 69h  not defined */
                    /* opcode 0Fh 50h 6Ah  not defined */
                    /* opcode 0Fh 50h 6Bh  not defined */
                    /* opcode 0Fh 50h 6Ch  not defined */
                    /* opcode 0Fh 50h 6Dh  not defined */
                    /* opcode 0Fh 50h 6Eh  not defined */
                    /* opcode 0Fh 50h 6Fh  not defined */
                    /* opcode 0Fh 50h 70h  not defined */
                    /* opcode 0Fh 50h 71h  not defined */
                    /* opcode 0Fh 50h 72h  not defined */
                    /* opcode 0Fh 50h 73h  not defined */
                    /* opcode 0Fh 50h 74h  not defined */
                    /* opcode 0Fh 50h 75h  not defined */
                    /* opcode 0Fh 50h 76h  not defined */
                    /* opcode 0Fh 50h 77h  not defined */
                    /* opcode 0Fh 50h 78h  not defined */
                    /* opcode 0Fh 50h 79h  not defined */
                    /* opcode 0Fh 50h 7Ah  not defined */
                    /* opcode 0Fh 50h 7Bh  not defined */
                    /* opcode 0Fh 50h 7Ch  not defined */
                    /* opcode 0Fh 50h 7Dh  not defined */
                    /* opcode 0Fh 50h 7Eh  not defined */
                    /* opcode 0Fh 50h 7Fh  not defined */
                    /* opcode 0Fh 50h 80h  not defined */
                    /* opcode 0Fh 50h 81h  not defined */
                    /* opcode 0Fh 50h 82h  not defined */
                    /* opcode 0Fh 50h 83h  not defined */
                    /* opcode 0Fh 50h 84h  not defined */
                    /* opcode 0Fh 50h 85h  not defined */
                    /* opcode 0Fh 50h 86h  not defined */
                    /* opcode 0Fh 50h 87h  not defined */
                    /* opcode 0Fh 50h 88h  not defined */
                    /* opcode 0Fh 50h 89h  not defined */
                    /* opcode 0Fh 50h 8Ah  not defined */
                    /* opcode 0Fh 50h 8Bh  not defined */
                    /* opcode 0Fh 50h 8Ch  not defined */
                    /* opcode 0Fh 50h 8Dh  not defined */
                    /* opcode 0Fh 50h 8Eh  not defined */
                    /* opcode 0Fh 50h 8Fh  not defined */
                    /* opcode 0Fh 50h 90h  not defined */
                    /* opcode 0Fh 50h 91h  not defined */
                    /* opcode 0Fh 50h 92h  not defined */
                    /* opcode 0Fh 50h 93h  not defined */
                    /* opcode 0Fh 50h 94h  not defined */
                    /* opcode 0Fh 50h 95h  not defined */
                    /* opcode 0Fh 50h 96h  not defined */
                    /* opcode 0Fh 50h 97h  not defined */
                    /* opcode 0Fh 50h 98h  not defined */
                    /* opcode 0Fh 50h 99h  not defined */
                    /* opcode 0Fh 50h 9Ah  not defined */
                    /* opcode 0Fh 50h 9Bh  not defined */
                    /* opcode 0Fh 50h 9Ch  not defined */
                    /* opcode 0Fh 50h 9Dh  not defined */
                    /* opcode 0Fh 50h 9Eh  not defined */
                    /* opcode 0Fh 50h 9Fh  not defined */
                    /* opcode 0Fh 50h A0h  not defined */
                    /* opcode 0Fh 50h A1h  not defined */
                    /* opcode 0Fh 50h A2h  not defined */
                    /* opcode 0Fh 50h A3h  not defined */
                    /* opcode 0Fh 50h A4h  not defined */
                    /* opcode 0Fh 50h A5h  not defined */
                    /* opcode 0Fh 50h A6h  not defined */
                    /* opcode 0Fh 50h A7h  not defined */
                    /* opcode 0Fh 50h A8h  not defined */
                    /* opcode 0Fh 50h A9h  not defined */
                    /* opcode 0Fh 50h AAh  not defined */
                    /* opcode 0Fh 50h ABh  not defined */
                    /* opcode 0Fh 50h ACh  not defined */
                    /* opcode 0Fh 50h ADh  not defined */
                    /* opcode 0Fh 50h AEh  not defined */
                    /* opcode 0Fh 50h AFh  not defined */
                    /* opcode 0Fh 50h B0h  not defined */
                    /* opcode 0Fh 50h B1h  not defined */
                    /* opcode 0Fh 50h B2h  not defined */
                    /* opcode 0Fh 50h B3h  not defined */
                    /* opcode 0Fh 50h B4h  not defined */
                    /* opcode 0Fh 50h B5h  not defined */
                    /* opcode 0Fh 50h B6h  not defined */
                    /* opcode 0Fh 50h B7h  not defined */
                    /* opcode 0Fh 50h B8h  not defined */
                    /* opcode 0Fh 50h B9h  not defined */
                    /* opcode 0Fh 50h BAh  not defined */
                    /* opcode 0Fh 50h BBh  not defined */
                    /* opcode 0Fh 50h BCh  not defined */
                    /* opcode 0Fh 50h BDh  not defined */
                    /* opcode 0Fh 50h BEh  not defined */
                    /* opcode 0Fh 50h BFh  not defined */
                    case 0xC0: /* 0Fh 50h C0h MOVMSKPS w32(reg),sse(r/m) mod=3 reg=0 rm=0      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xC1: /* 0Fh 50h C1h MOVMSKPS w32(reg),sse(r/m) mod=3 reg=0 rm=1      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xC2: /* 0Fh 50h C2h MOVMSKPS w32(reg),sse(r/m) mod=3 reg=0 rm=2      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xC3: /* 0Fh 50h C3h MOVMSKPS w32(reg),sse(r/m) mod=3 reg=0 rm=3      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xC4: /* 0Fh 50h C4h MOVMSKPS w32(reg),sse(r/m) mod=3 reg=0 rm=4      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xC5: /* 0Fh 50h C5h MOVMSKPS w32(reg),sse(r/m) mod=3 reg=0 rm=5      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xC6: /* 0Fh 50h C6h MOVMSKPS w32(reg),sse(r/m) mod=3 reg=0 rm=6      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xC7: /* 0Fh 50h C7h MOVMSKPS w32(reg),sse(r/m) mod=3 reg=0 rm=7      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xC8: /* 0Fh 50h C8h MOVMSKPS w32(reg),sse(r/m) mod=3 reg=1 rm=0      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xC9: /* 0Fh 50h C9h MOVMSKPS w32(reg),sse(r/m) mod=3 reg=1 rm=1      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xCA: /* 0Fh 50h CAh MOVMSKPS w32(reg),sse(r/m) mod=3 reg=1 rm=2      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xCB: /* 0Fh 50h CBh MOVMSKPS w32(reg),sse(r/m) mod=3 reg=1 rm=3      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xCC: /* 0Fh 50h CCh MOVMSKPS w32(reg),sse(r/m) mod=3 reg=1 rm=4      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xCD: /* 0Fh 50h CDh MOVMSKPS w32(reg),sse(r/m) mod=3 reg=1 rm=5      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xCE: /* 0Fh 50h CEh MOVMSKPS w32(reg),sse(r/m) mod=3 reg=1 rm=6      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xCF: /* 0Fh 50h CFh MOVMSKPS w32(reg),sse(r/m) mod=3 reg=1 rm=7      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xD0: /* 0Fh 50h D0h MOVMSKPS w32(reg),sse(r/m) mod=3 reg=2 rm=0      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xD1: /* 0Fh 50h D1h MOVMSKPS w32(reg),sse(r/m) mod=3 reg=2 rm=1      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xD2: /* 0Fh 50h D2h MOVMSKPS w32(reg),sse(r/m) mod=3 reg=2 rm=2      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xD3: /* 0Fh 50h D3h MOVMSKPS w32(reg),sse(r/m) mod=3 reg=2 rm=3      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xD4: /* 0Fh 50h D4h MOVMSKPS w32(reg),sse(r/m) mod=3 reg=2 rm=4      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xD5: /* 0Fh 50h D5h MOVMSKPS w32(reg),sse(r/m) mod=3 reg=2 rm=5      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xD6: /* 0Fh 50h D6h MOVMSKPS w32(reg),sse(r/m) mod=3 reg=2 rm=6      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xD7: /* 0Fh 50h D7h MOVMSKPS w32(reg),sse(r/m) mod=3 reg=2 rm=7      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xD8: /* 0Fh 50h D8h MOVMSKPS w32(reg),sse(r/m) mod=3 reg=3 rm=0      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xD9: /* 0Fh 50h D9h MOVMSKPS w32(reg),sse(r/m) mod=3 reg=3 rm=1      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xDA: /* 0Fh 50h DAh MOVMSKPS w32(reg),sse(r/m) mod=3 reg=3 rm=2      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xDB: /* 0Fh 50h DBh MOVMSKPS w32(reg),sse(r/m) mod=3 reg=3 rm=3      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xDC: /* 0Fh 50h DCh MOVMSKPS w32(reg),sse(r/m) mod=3 reg=3 rm=4      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xDD: /* 0Fh 50h DDh MOVMSKPS w32(reg),sse(r/m) mod=3 reg=3 rm=5      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xDE: /* 0Fh 50h DEh MOVMSKPS w32(reg),sse(r/m) mod=3 reg=3 rm=6      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xDF: /* 0Fh 50h DFh MOVMSKPS w32(reg),sse(r/m) mod=3 reg=3 rm=7      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xE0: /* 0Fh 50h E0h MOVMSKPS w32(reg),sse(r/m) mod=3 reg=4 rm=0      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xE1: /* 0Fh 50h E1h MOVMSKPS w32(reg),sse(r/m) mod=3 reg=4 rm=1      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xE2: /* 0Fh 50h E2h MOVMSKPS w32(reg),sse(r/m) mod=3 reg=4 rm=2      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xE3: /* 0Fh 50h E3h MOVMSKPS w32(reg),sse(r/m) mod=3 reg=4 rm=3      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xE4: /* 0Fh 50h E4h MOVMSKPS w32(reg),sse(r/m) mod=3 reg=4 rm=4      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xE5: /* 0Fh 50h E5h MOVMSKPS w32(reg),sse(r/m) mod=3 reg=4 rm=5      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xE6: /* 0Fh 50h E6h MOVMSKPS w32(reg),sse(r/m) mod=3 reg=4 rm=6      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xE7: /* 0Fh 50h E7h MOVMSKPS w32(reg),sse(r/m) mod=3 reg=4 rm=7      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xE8: /* 0Fh 50h E8h MOVMSKPS w32(reg),sse(r/m) mod=3 reg=5 rm=0      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xE9: /* 0Fh 50h E9h MOVMSKPS w32(reg),sse(r/m) mod=3 reg=5 rm=1      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xEA: /* 0Fh 50h EAh MOVMSKPS w32(reg),sse(r/m) mod=3 reg=5 rm=2      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xEB: /* 0Fh 50h EBh MOVMSKPS w32(reg),sse(r/m) mod=3 reg=5 rm=3      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xEC: /* 0Fh 50h ECh MOVMSKPS w32(reg),sse(r/m) mod=3 reg=5 rm=4      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xED: /* 0Fh 50h EDh MOVMSKPS w32(reg),sse(r/m) mod=3 reg=5 rm=5      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xEE: /* 0Fh 50h EEh MOVMSKPS w32(reg),sse(r/m) mod=3 reg=5 rm=6      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xEF: /* 0Fh 50h EFh MOVMSKPS w32(reg),sse(r/m) mod=3 reg=5 rm=7      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xF0: /* 0Fh 50h F0h MOVMSKPS w32(reg),sse(r/m) mod=3 reg=6 rm=0      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xF1: /* 0Fh 50h F1h MOVMSKPS w32(reg),sse(r/m) mod=3 reg=6 rm=1      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xF2: /* 0Fh 50h F2h MOVMSKPS w32(reg),sse(r/m) mod=3 reg=6 rm=2      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xF3: /* 0Fh 50h F3h MOVMSKPS w32(reg),sse(r/m) mod=3 reg=6 rm=3      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xF4: /* 0Fh 50h F4h MOVMSKPS w32(reg),sse(r/m) mod=3 reg=6 rm=4      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xF5: /* 0Fh 50h F5h MOVMSKPS w32(reg),sse(r/m) mod=3 reg=6 rm=5      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xF6: /* 0Fh 50h F6h MOVMSKPS w32(reg),sse(r/m) mod=3 reg=6 rm=6      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xF7: /* 0Fh 50h F7h MOVMSKPS w32(reg),sse(r/m) mod=3 reg=6 rm=7      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xF8: /* 0Fh 50h F8h MOVMSKPS w32(reg),sse(r/m) mod=3 reg=7 rm=0      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xF9: /* 0Fh 50h F9h MOVMSKPS w32(reg),sse(r/m) mod=3 reg=7 rm=1      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xFA: /* 0Fh 50h FAh MOVMSKPS w32(reg),sse(r/m) mod=3 reg=7 rm=2      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xFB: /* 0Fh 50h FBh MOVMSKPS w32(reg),sse(r/m) mod=3 reg=7 rm=3      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xFC: /* 0Fh 50h FCh MOVMSKPS w32(reg),sse(r/m) mod=3 reg=7 rm=4      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xFD: /* 0Fh 50h FDh MOVMSKPS w32(reg),sse(r/m) mod=3 reg=7 rm=5      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xFE: /* 0Fh 50h FEh MOVMSKPS w32(reg),sse(r/m) mod=3 reg=7 rm=6      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                    case 0xFF: /* 0Fh 50h FFh MOVMSKPS w32(reg),sse(r/m) mod=3 reg=7 rm=7      spec: 0x0F 0x50 mod/reg/rm mod==3 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVMSKPS %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                        break;
                    default:
                        goto _x86decode_illegal_opcode;
                };
/* End of opcodes starting with 0Fh 50h */
                break;
            case 0x51: /* 0Fh 51h SQRTPS sse(reg),sse(r/m)      spec: 0x0F 0x51 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SQRTPS XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                break;
            case 0x52: /* 0Fh 52h RSQRTPS sse(reg),sse(r/m)      spec: 0x0F 0x52 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"RSQRTPS XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                break;
            case 0x53: /* 0Fh 53h RCPPS sse(reg),sse(r/m)      spec: 0x0F 0x53 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"RCPPS XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                break;
            case 0x54: /* 0Fh 54h ANDPS sse(reg),sse(r/m)      spec: 0x0F 0x54 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ANDPS XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                break;
            case 0x55: /* 0Fh 55h ANDNPS sse(reg),sse(r/m)      spec: 0x0F 0x55 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ANDNPS XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                break;
            case 0x56: /* 0Fh 56h ORPS sse(reg),sse(r/m)      spec: 0x0F 0x56 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ORPS XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                break;
            case 0x57: /* 0Fh 57h XORPS sse(reg),sse(r/m)      spec: 0x0F 0x57 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"XORPS XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                break;
            case 0x58: /* 0Fh 58h ADDPS sse(reg),sse(r/m)      spec: 0x0F 0x58 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ADDPS XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                break;
            case 0x59: /* 0Fh 59h MULPS sse(reg),sse(r/m)      spec: 0x0F 0x59 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MULPS XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                break;
            case 0x5A: /* 0Fh 5Ah CVTPS2PD sse(reg),sse(r/m)      spec: 0x0F 0x5A mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CVTPS2PD XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                break;
            case 0x5B: /* 0Fh 5Bh CVTDQ2PS sse(reg),sse(r/m)      spec: 0x0F 0x5B mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CVTDQ2PS XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                break;
            case 0x5C: /* 0Fh 5Ch SUBPS sse(reg),sse(r/m)      spec: 0x0F 0x5C mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SUBPS XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                break;
            case 0x5D: /* 0Fh 5Dh MINPS sse(reg),sse(r/m)      spec: 0x0F 0x5D mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MINPS XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                break;
            case 0x5E: /* 0Fh 5Eh DIVPS sse(reg),sse(r/m)      spec: 0x0F 0x5E mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"DIVPS XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                break;
            case 0x5F: /* 0Fh 5Fh MAXPS sse(reg),sse(r/m)      spec: 0x0F 0x5F mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MAXPS XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                break;
            case 0x60: /* 0Fh 60h PUNPCKLBW mmx(reg),mmx(r/m)      spec: 0x0F 0x60 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PUNPCKLBW MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                break;
            case 0x61: /* 0Fh 61h PUNPCKLWD mmx(reg),mmx(r/m)      spec: 0x0F 0x61 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PUNPCKLWD MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                break;
            case 0x62: /* 0Fh 62h PUNPCKLWQ mmx(reg),mmx(r/m)      spec: 0x0F 0x62 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PUNPCKLWQ MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                break;
            case 0x63: /* 0Fh 63h PACKSSWB mmx(reg),mmx(r/m)      spec: 0x0F 0x63 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PACKSSWB MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                break;
            case 0x64: /* 0Fh 64h PCMPGTB mmx(reg),mmx(r/m)      spec: 0x0F 0x64 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PCMPGTB MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                break;
            case 0x65: /* 0Fh 65h PCMPGTW mmx(reg),mmx(r/m)      spec: 0x0F 0x65 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PCMPGTW MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                break;
            case 0x66: /* 0Fh 66h PCMPGTD mmx(reg),mmx(r/m)      spec: 0x0F 0x66 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PCMPGTD MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                break;
            case 0x67: /* 0Fh 67h PACKUSWB mmx(reg),mmx(r/m)      spec: 0x0F 0x67 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PACKUSWB MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                break;
            case 0x68: /* 0Fh 68h PUNPCKHBW mmx(reg),mmx(r/m)      spec: 0x0F 0x68 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PUNPCKHBW MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                break;
            case 0x69: /* 0Fh 69h PUNPCKHWD mmx(reg),mmx(r/m)      spec: 0x0F 0x69 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PUNPCKHWD MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                break;
            case 0x6A: /* 0Fh 6Ah PUNPCKHDQ mmx(reg),mmx(r/m)      spec: 0x0F 0x6A mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PUNPCKHDQ MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                break;
            case 0x6B: /* 0Fh 6Bh PACKSSDW mmx(reg),mmx(r/m)      spec: 0x0F 0x6B mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PACKSSDW MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                break;
            /* opcode 0Fh 6Ch  not defined */
            /* opcode 0Fh 6Dh  not defined */
            case 0x6E: /* 0Fh 6Eh MOVD mmx(reg),w32(r/m)      spec: 0x0F 0x6E mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVD MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,4,RC_REG,"w32"));
                break;
            case 0x6F: /* 0Fh 6Fh MOVQ mmx(reg),mmx(r/m)      spec: 0x0F 0x6F mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVQ MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                break;
            case 0x70: /* 0Fh 70h PSHUFW mmx(reg),mmx(r/m)      spec: 0x0F 0x70 mod/reg/rm ib */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                imm=IPFB();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSHUFW MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                break;
            case 0x71: /* 0Fh 71h        spec:  */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                _x86decode_begin_code32_addr32_opcode_parse_0F71:
/* Opcodes starting with 0Fh 71h */
                switch (mrm.reg()) {
                    /* reg 0 not defined */
                    /* reg 1 not defined */
                    case 2: /* 0Fh 71h 10h PSRLW mmx(r/m),i reg=2      spec: 0x0F 0x71 mod/reg/rm /2 ib */
                        imm=IPFB();
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSRLW %s,0x%02lX",IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""),(unsigned long)((uint32_t)imm));
                        break;
                    /* reg 3 not defined */
                    case 4: /* 0Fh 71h 20h PSRAW mmx(r/m),i reg=4      spec: 0x0F 0x71 mod/reg/rm /4 ib */
                        imm=IPFB();
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSRAW %s,0x%02lX",IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""),(unsigned long)((uint32_t)imm));
                        break;
                    /* reg 5 not defined */
                    case 6: /* 0Fh 71h 30h PSLLW mmx(r/m),i reg=6      spec: 0x0F 0x71 mod/reg/rm /6 ib */
                        imm=IPFB();
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSLLW %s,0x%02lX",IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""),(unsigned long)((uint32_t)imm));
                        break;
                    /* reg 7 not defined */
                    default:
                        goto _x86decode_illegal_opcode;
                };
/* End of opcodes starting with 0Fh 71h */
                break;
            case 0x72: /* 0Fh 72h        spec:  */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                _x86decode_begin_code32_addr32_opcode_parse_0F72:
/* Opcodes starting with 0Fh 72h */
                switch (mrm.reg()) {
                    /* reg 0 not defined */
                    /* reg 1 not defined */
                    case 2: /* 0Fh 72h 10h PSRLD mmx(r/m),i reg=2      spec: 0x0F 0x72 mod/reg/rm /2 ib */
                        imm=IPFB();
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSRLD %s,0x%02lX",IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""),(unsigned long)((uint32_t)imm));
                        break;
                    /* reg 3 not defined */
                    case 4: /* 0Fh 72h 20h PSRAD mmx(r/m),i reg=4      spec: 0x0F 0x72 mod/reg/rm /4 ib */
                        imm=IPFB();
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSRAD %s,0x%02lX",IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""),(unsigned long)((uint32_t)imm));
                        break;
                    /* reg 5 not defined */
                    case 6: /* 0Fh 72h 30h PSLLD mmx(r/m),i reg=6      spec: 0x0F 0x72 mod/reg/rm /6 ib */
                        imm=IPFB();
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSLLD %s,0x%02lX",IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""),(unsigned long)((uint32_t)imm));
                        break;
                    /* reg 7 not defined */
                    default:
                        goto _x86decode_illegal_opcode;
                };
/* End of opcodes starting with 0Fh 72h */
                break;
            case 0x73: /* 0Fh 73h        spec:  */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                _x86decode_begin_code32_addr32_opcode_parse_0F73:
/* Opcodes starting with 0Fh 73h */
                switch (mrm.reg()) {
                    /* reg 0 not defined */
                    /* reg 1 not defined */
                    case 2: /* 0Fh 73h 10h PSRLQ mmx(r/m),i reg=2      spec: 0x0F 0x73 mod/reg/rm /2 ib */
                        imm=IPFB();
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSRLQ %s,0x%02lX",IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""),(unsigned long)((uint32_t)imm));
                        break;
                    /* reg 3 not defined */
                    /* reg 4 not defined */
                    /* reg 5 not defined */
                    case 6: /* 0Fh 73h 30h PSLLQ mmx(r/m),i reg=6      spec: 0x0F 0x73 mod/reg/rm /6 ib */
                        imm=IPFB();
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSLLQ %s,0x%02lX",IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""),(unsigned long)((uint32_t)imm));
                        break;
                    /* reg 7 not defined */
                    default:
                        goto _x86decode_illegal_opcode;
                };
/* End of opcodes starting with 0Fh 73h */
                break;
            case 0x74: /* 0Fh 74h PCMPEQB mmx(reg),mmx(r/m)      spec: 0x0F 0x74 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PCMPEQB MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                break;
            case 0x75: /* 0Fh 75h PCMPEQW mmx(reg),mmx(r/m)      spec: 0x0F 0x75 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PCMPEQW MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                break;
            case 0x76: /* 0Fh 76h PCMPEQD mmx(reg),mmx(r/m)      spec: 0x0F 0x76 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PCMPEQD MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                break;
            case 0x77: /* 0Fh 77h EMMS       spec: 0x0F 0x77 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"EMMS");
                break;
            case 0x78: /* 0Fh 78h VMREAD w(r/m),w(reg)      spec: 0x0F 0x78 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VMREAD %s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[4][mrm.reg()]);
                break;
            case 0x79: /* 0Fh 79h VMWRITE w(reg),w(r/m)      spec: 0x0F 0x79 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VMWRITE %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            /* opcode 0Fh 7Ah  not defined */
            /* opcode 0Fh 7Bh  not defined */
            /* opcode 0Fh 7Ch  not defined */
            /* opcode 0Fh 7Dh  not defined */
            case 0x7E: /* 0Fh 7Eh MOVD w32(r/m),mmx(reg)      spec: 0x0F 0x7E mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVD %s,MM%u",IPDecPrint32(mrm,sib,disp,4,RC_REG,"w32"),mrm.reg());
                break;
            case 0x7F: /* 0Fh 7Fh MOVQ mmx(r/m),mmx(reg)      spec: 0x0F 0x7F mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVQ %s,MM%u",IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""),mrm.reg());
                break;
            case 0x80: /* 0Fh 80h JO w(i+ip)      spec: 0x0F 0x80 iws */
                imm=IPFcodeWsigned();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JO 0x%08lX",(unsigned long)((uint32_t)(imm+IPval())));
                break;
            case 0x81: /* 0Fh 81h JNO w(i+ip)      spec: 0x0F 0x81 iws */
                imm=IPFcodeWsigned();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JNO 0x%08lX",(unsigned long)((uint32_t)(imm+IPval())));
                break;
            case 0x82: /* 0Fh 82h JB w(i+ip)      spec: 0x0F 0x82 iws */
                imm=IPFcodeWsigned();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JB 0x%08lX",(unsigned long)((uint32_t)(imm+IPval())));
                break;
            case 0x83: /* 0Fh 83h JNB w(i+ip)      spec: 0x0F 0x83 iws */
                imm=IPFcodeWsigned();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JNB 0x%08lX",(unsigned long)((uint32_t)(imm+IPval())));
                break;
            case 0x84: /* 0Fh 84h JZ w(i+ip)      spec: 0x0F 0x84 iws */
                imm=IPFcodeWsigned();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JZ 0x%08lX",(unsigned long)((uint32_t)(imm+IPval())));
                break;
            case 0x85: /* 0Fh 85h JNZ w(i+ip)      spec: 0x0F 0x85 iws */
                imm=IPFcodeWsigned();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JNZ 0x%08lX",(unsigned long)((uint32_t)(imm+IPval())));
                break;
            case 0x86: /* 0Fh 86h JBE w(i+ip)      spec: 0x0F 0x86 iws */
                imm=IPFcodeWsigned();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JBE 0x%08lX",(unsigned long)((uint32_t)(imm+IPval())));
                break;
            case 0x87: /* 0Fh 87h JA w(i+ip)      spec: 0x0F 0x87 iws */
                imm=IPFcodeWsigned();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JA 0x%08lX",(unsigned long)((uint32_t)(imm+IPval())));
                break;
            case 0x88: /* 0Fh 88h JS w(i+ip)      spec: 0x0F 0x88 iws */
                imm=IPFcodeWsigned();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JS 0x%08lX",(unsigned long)((uint32_t)(imm+IPval())));
                break;
            case 0x89: /* 0Fh 89h JNS w(i+ip)      spec: 0x0F 0x89 iws */
                imm=IPFcodeWsigned();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JNS 0x%08lX",(unsigned long)((uint32_t)(imm+IPval())));
                break;
            case 0x8A: /* 0Fh 8Ah JPE w(i+ip)      spec: 0x0F 0x8A iws */
                imm=IPFcodeWsigned();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JPE 0x%08lX",(unsigned long)((uint32_t)(imm+IPval())));
                break;
            case 0x8B: /* 0Fh 8Bh JPO w(i+ip)      spec: 0x0F 0x8B iws */
                imm=IPFcodeWsigned();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JPO 0x%08lX",(unsigned long)((uint32_t)(imm+IPval())));
                break;
            case 0x8C: /* 0Fh 8Ch JL w(i+ip)      spec: 0x0F 0x8C iws */
                imm=IPFcodeWsigned();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JL 0x%08lX",(unsigned long)((uint32_t)(imm+IPval())));
                break;
            case 0x8D: /* 0Fh 8Dh JGE w(i+ip)      spec: 0x0F 0x8D iws */
                imm=IPFcodeWsigned();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JGE 0x%08lX",(unsigned long)((uint32_t)(imm+IPval())));
                break;
            case 0x8E: /* 0Fh 8Eh JLE w(i+ip)      spec: 0x0F 0x8E iws */
                imm=IPFcodeWsigned();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JLE 0x%08lX",(unsigned long)((uint32_t)(imm+IPval())));
                break;
            case 0x8F: /* 0Fh 8Fh JG w(i+ip)      spec: 0x0F 0x8F iws */
                imm=IPFcodeWsigned();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JG 0x%08lX",(unsigned long)((uint32_t)(imm+IPval())));
                break;
            case 0x90: /* 0Fh 90h SETO b(r/m)      spec: 0x0F 0x90 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SETO %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 0x91: /* 0Fh 91h SETNO b(r/m)      spec: 0x0F 0x91 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SETNO %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 0x92: /* 0Fh 92h SETB b(r/m)      spec: 0x0F 0x92 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SETB %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 0x93: /* 0Fh 93h SETNB b(r/m)      spec: 0x0F 0x93 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SETNB %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 0x94: /* 0Fh 94h SETZ b(r/m)      spec: 0x0F 0x94 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SETZ %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 0x95: /* 0Fh 95h SETNZ b(r/m)      spec: 0x0F 0x95 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SETNZ %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 0x96: /* 0Fh 96h SETBE b(r/m)      spec: 0x0F 0x96 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SETBE %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 0x97: /* 0Fh 97h SETA b(r/m)      spec: 0x0F 0x97 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SETA %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 0x98: /* 0Fh 98h SETS b(r/m)      spec: 0x0F 0x98 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SETS %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 0x99: /* 0Fh 99h SETNS b(r/m)      spec: 0x0F 0x99 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SETNS %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 0x9A: /* 0Fh 9Ah SETPE b(r/m)      spec: 0x0F 0x9A mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SETPE %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 0x9B: /* 0Fh 9Bh SETPO b(r/m)      spec: 0x0F 0x9B mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SETPO %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 0x9C: /* 0Fh 9Ch SETL b(r/m)      spec: 0x0F 0x9C mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SETL %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 0x9D: /* 0Fh 9Dh SETGE b(r/m)      spec: 0x0F 0x9D mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SETGE %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 0x9E: /* 0Fh 9Eh SETLE b(r/m)      spec: 0x0F 0x9E mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SETLE %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 0x9F: /* 0Fh 9Fh SETG b(r/m)      spec: 0x0F 0x9F mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SETG %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 0xA0: /* 0Fh A0h PUSHd w(fs)      spec: 0x0F 0xA0 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PUSHd %s",CPUsregs_80386[4]);
                break;
            case 0xA1: /* 0Fh A1h POPd w(fs)      spec: 0x0F 0xA1 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"POPd %s",CPUsregs_80386[4]);
                break;
            case 0xA2: /* 0Fh A2h CPUID       spec: 0x0F 0xA2 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CPUID");
                break;
            case 0xA3: /* 0Fh A3h BTd w(r/m),w(reg)      spec: 0x0F 0xA3 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"BTd %s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[4][mrm.reg()]);
                break;
            case 0xA4: /* 0Fh A4h SHLDd w(r/m),w(reg),i      spec: 0x0F 0xA4 mod/reg/rm ib */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                imm=IPFB();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SHLDd %s,%s,0x%02lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[4][mrm.reg()],(unsigned long)((uint32_t)imm));
                break;
            case 0xA5: /* 0Fh A5h SHLDd w(r/m),w(reg),b(c)      spec: 0x0F 0xA5 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SHLDd %s,%s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[4][mrm.reg()],CPUregsN[1][1]);
                break;
            /* opcode 0Fh A6h  not defined */
            /* opcode 0Fh A7h  not defined */
            case 0xA8: /* 0Fh A8h PUSHd w(gs)      spec: 0x0F 0xA8 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PUSHd %s",CPUsregs_80386[5]);
                break;
            case 0xA9: /* 0Fh A9h POPd w(gs)      spec: 0x0F 0xA9 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"POPd %s",CPUsregs_80386[5]);
                break;
            case 0xAA: /* 0Fh AAh RSM       spec: 0x0F 0xAA */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"RSM");
                break;
            case 0xAB: /* 0Fh ABh BTSd w(r/m),w(reg)      spec: 0x0F 0xAB mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"BTSd %s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[4][mrm.reg()]);
                break;
            case 0xAC: /* 0Fh ACh SHRDd w(r/m),w(reg),i      spec: 0x0F 0xAC mod/reg/rm ib */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                imm=IPFB();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SHRDd %s,%s,0x%02lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[4][mrm.reg()],(unsigned long)((uint32_t)imm));
                break;
            case 0xAD: /* 0Fh ADh SHRDd w(r/m),w(reg),b(c)      spec: 0x0F 0xAD mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SHRDd %s,%s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[4][mrm.reg()],CPUregsN[1][1]);
                break;
            case 0xAE: /* 0Fh AEh        spec:  */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                _x86decode_begin_code32_addr32_opcode_parse_0FAE:
/* Opcodes starting with 0Fh AEh */
                switch (mrm.byte) {
                    case 0x00: /* 0Fh AEh 00h FXSAVE b(r/m) mod=0 reg=0 rm=0      spec: 0x0F 0xAE mod/reg/rm /0 */
                    case 0x01: /* 0Fh AEh 01h FXSAVE b(r/m) mod=0 reg=0 rm=1      spec: 0x0F 0xAE mod/reg/rm /0 */
                    case 0x02: /* 0Fh AEh 02h FXSAVE b(r/m) mod=0 reg=0 rm=2      spec: 0x0F 0xAE mod/reg/rm /0 */
                    case 0x03: /* 0Fh AEh 03h FXSAVE b(r/m) mod=0 reg=0 rm=3      spec: 0x0F 0xAE mod/reg/rm /0 */
                    case 0x04: /* 0Fh AEh 04h FXSAVE b(r/m) mod=0 reg=0 rm=4      spec: 0x0F 0xAE mod/reg/rm /0 */
                    case 0x05: /* 0Fh AEh 05h FXSAVE b(r/m) mod=0 reg=0 rm=5      spec: 0x0F 0xAE mod/reg/rm /0 */
                    case 0x06: /* 0Fh AEh 06h FXSAVE b(r/m) mod=0 reg=0 rm=6      spec: 0x0F 0xAE mod/reg/rm /0 */
                    case 0x07: /* 0Fh AEh 07h FXSAVE b(r/m) mod=0 reg=0 rm=7      spec: 0x0F 0xAE mod/reg/rm /0 */
                    case 0x40: /* 0Fh AEh 40h FXSAVE b(r/m) mod=1 reg=0 rm=0      spec: 0x0F 0xAE mod/reg/rm /0 */
                    case 0x41: /* 0Fh AEh 41h FXSAVE b(r/m) mod=1 reg=0 rm=1      spec: 0x0F 0xAE mod/reg/rm /0 */
                    case 0x42: /* 0Fh AEh 42h FXSAVE b(r/m) mod=1 reg=0 rm=2      spec: 0x0F 0xAE mod/reg/rm /0 */
                    case 0x43: /* 0Fh AEh 43h FXSAVE b(r/m) mod=1 reg=0 rm=3      spec: 0x0F 0xAE mod/reg/rm /0 */
                    case 0x44: /* 0Fh AEh 44h FXSAVE b(r/m) mod=1 reg=0 rm=4      spec: 0x0F 0xAE mod/reg/rm /0 */
                    case 0x45: /* 0Fh AEh 45h FXSAVE b(r/m) mod=1 reg=0 rm=5      spec: 0x0F 0xAE mod/reg/rm /0 */
                    case 0x46: /* 0Fh AEh 46h FXSAVE b(r/m) mod=1 reg=0 rm=6      spec: 0x0F 0xAE mod/reg/rm /0 */
                    case 0x47: /* 0Fh AEh 47h FXSAVE b(r/m) mod=1 reg=0 rm=7      spec: 0x0F 0xAE mod/reg/rm /0 */
                    case 0x80: /* 0Fh AEh 80h FXSAVE b(r/m) mod=2 reg=0 rm=0      spec: 0x0F 0xAE mod/reg/rm /0 */
                    case 0x81: /* 0Fh AEh 81h FXSAVE b(r/m) mod=2 reg=0 rm=1      spec: 0x0F 0xAE mod/reg/rm /0 */
                    case 0x82: /* 0Fh AEh 82h FXSAVE b(r/m) mod=2 reg=0 rm=2      spec: 0x0F 0xAE mod/reg/rm /0 */
                    case 0x83: /* 0Fh AEh 83h FXSAVE b(r/m) mod=2 reg=0 rm=3      spec: 0x0F 0xAE mod/reg/rm /0 */
                    case 0x84: /* 0Fh AEh 84h FXSAVE b(r/m) mod=2 reg=0 rm=4      spec: 0x0F 0xAE mod/reg/rm /0 */
                    case 0x85: /* 0Fh AEh 85h FXSAVE b(r/m) mod=2 reg=0 rm=5      spec: 0x0F 0xAE mod/reg/rm /0 */
                    case 0x86: /* 0Fh AEh 86h FXSAVE b(r/m) mod=2 reg=0 rm=6      spec: 0x0F 0xAE mod/reg/rm /0 */
                    case 0x87: /* 0Fh AEh 87h FXSAVE b(r/m) mod=2 reg=0 rm=7      spec: 0x0F 0xAE mod/reg/rm /0 */
                    case 0xC0: /* 0Fh AEh C0h FXSAVE b(r/m) mod=3 reg=0 rm=0      spec: 0x0F 0xAE mod/reg/rm /0 */
                    case 0xC1: /* 0Fh AEh C1h FXSAVE b(r/m) mod=3 reg=0 rm=1      spec: 0x0F 0xAE mod/reg/rm /0 */
                    case 0xC2: /* 0Fh AEh C2h FXSAVE b(r/m) mod=3 reg=0 rm=2      spec: 0x0F 0xAE mod/reg/rm /0 */
                    case 0xC3: /* 0Fh AEh C3h FXSAVE b(r/m) mod=3 reg=0 rm=3      spec: 0x0F 0xAE mod/reg/rm /0 */
                    case 0xC4: /* 0Fh AEh C4h FXSAVE b(r/m) mod=3 reg=0 rm=4      spec: 0x0F 0xAE mod/reg/rm /0 */
                    case 0xC5: /* 0Fh AEh C5h FXSAVE b(r/m) mod=3 reg=0 rm=5      spec: 0x0F 0xAE mod/reg/rm /0 */
                    case 0xC6: /* 0Fh AEh C6h FXSAVE b(r/m) mod=3 reg=0 rm=6      spec: 0x0F 0xAE mod/reg/rm /0 */
                    case 0xC7: /* 0Fh AEh C7h FXSAVE b(r/m) mod=3 reg=0 rm=7      spec: 0x0F 0xAE mod/reg/rm /0 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FXSAVE %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                        break;
                    case 0x08: /* 0Fh AEh 08h FXRSTOR b(r/m) mod=0 reg=1 rm=0      spec: 0x0F 0xAE mod/reg/rm /1 */
                    case 0x09: /* 0Fh AEh 09h FXRSTOR b(r/m) mod=0 reg=1 rm=1      spec: 0x0F 0xAE mod/reg/rm /1 */
                    case 0x0A: /* 0Fh AEh 0Ah FXRSTOR b(r/m) mod=0 reg=1 rm=2      spec: 0x0F 0xAE mod/reg/rm /1 */
                    case 0x0B: /* 0Fh AEh 0Bh FXRSTOR b(r/m) mod=0 reg=1 rm=3      spec: 0x0F 0xAE mod/reg/rm /1 */
                    case 0x0C: /* 0Fh AEh 0Ch FXRSTOR b(r/m) mod=0 reg=1 rm=4      spec: 0x0F 0xAE mod/reg/rm /1 */
                    case 0x0D: /* 0Fh AEh 0Dh FXRSTOR b(r/m) mod=0 reg=1 rm=5      spec: 0x0F 0xAE mod/reg/rm /1 */
                    case 0x0E: /* 0Fh AEh 0Eh FXRSTOR b(r/m) mod=0 reg=1 rm=6      spec: 0x0F 0xAE mod/reg/rm /1 */
                    case 0x0F: /* 0Fh AEh 0Fh FXRSTOR b(r/m) mod=0 reg=1 rm=7      spec: 0x0F 0xAE mod/reg/rm /1 */
                    case 0x48: /* 0Fh AEh 48h FXRSTOR b(r/m) mod=1 reg=1 rm=0      spec: 0x0F 0xAE mod/reg/rm /1 */
                    case 0x49: /* 0Fh AEh 49h FXRSTOR b(r/m) mod=1 reg=1 rm=1      spec: 0x0F 0xAE mod/reg/rm /1 */
                    case 0x4A: /* 0Fh AEh 4Ah FXRSTOR b(r/m) mod=1 reg=1 rm=2      spec: 0x0F 0xAE mod/reg/rm /1 */
                    case 0x4B: /* 0Fh AEh 4Bh FXRSTOR b(r/m) mod=1 reg=1 rm=3      spec: 0x0F 0xAE mod/reg/rm /1 */
                    case 0x4C: /* 0Fh AEh 4Ch FXRSTOR b(r/m) mod=1 reg=1 rm=4      spec: 0x0F 0xAE mod/reg/rm /1 */
                    case 0x4D: /* 0Fh AEh 4Dh FXRSTOR b(r/m) mod=1 reg=1 rm=5      spec: 0x0F 0xAE mod/reg/rm /1 */
                    case 0x4E: /* 0Fh AEh 4Eh FXRSTOR b(r/m) mod=1 reg=1 rm=6      spec: 0x0F 0xAE mod/reg/rm /1 */
                    case 0x4F: /* 0Fh AEh 4Fh FXRSTOR b(r/m) mod=1 reg=1 rm=7      spec: 0x0F 0xAE mod/reg/rm /1 */
                    case 0x88: /* 0Fh AEh 88h FXRSTOR b(r/m) mod=2 reg=1 rm=0      spec: 0x0F 0xAE mod/reg/rm /1 */
                    case 0x89: /* 0Fh AEh 89h FXRSTOR b(r/m) mod=2 reg=1 rm=1      spec: 0x0F 0xAE mod/reg/rm /1 */
                    case 0x8A: /* 0Fh AEh 8Ah FXRSTOR b(r/m) mod=2 reg=1 rm=2      spec: 0x0F 0xAE mod/reg/rm /1 */
                    case 0x8B: /* 0Fh AEh 8Bh FXRSTOR b(r/m) mod=2 reg=1 rm=3      spec: 0x0F 0xAE mod/reg/rm /1 */
                    case 0x8C: /* 0Fh AEh 8Ch FXRSTOR b(r/m) mod=2 reg=1 rm=4      spec: 0x0F 0xAE mod/reg/rm /1 */
                    case 0x8D: /* 0Fh AEh 8Dh FXRSTOR b(r/m) mod=2 reg=1 rm=5      spec: 0x0F 0xAE mod/reg/rm /1 */
                    case 0x8E: /* 0Fh AEh 8Eh FXRSTOR b(r/m) mod=2 reg=1 rm=6      spec: 0x0F 0xAE mod/reg/rm /1 */
                    case 0x8F: /* 0Fh AEh 8Fh FXRSTOR b(r/m) mod=2 reg=1 rm=7      spec: 0x0F 0xAE mod/reg/rm /1 */
                    case 0xC8: /* 0Fh AEh C8h FXRSTOR b(r/m) mod=3 reg=1 rm=0      spec: 0x0F 0xAE mod/reg/rm /1 */
                    case 0xC9: /* 0Fh AEh C9h FXRSTOR b(r/m) mod=3 reg=1 rm=1      spec: 0x0F 0xAE mod/reg/rm /1 */
                    case 0xCA: /* 0Fh AEh CAh FXRSTOR b(r/m) mod=3 reg=1 rm=2      spec: 0x0F 0xAE mod/reg/rm /1 */
                    case 0xCB: /* 0Fh AEh CBh FXRSTOR b(r/m) mod=3 reg=1 rm=3      spec: 0x0F 0xAE mod/reg/rm /1 */
                    case 0xCC: /* 0Fh AEh CCh FXRSTOR b(r/m) mod=3 reg=1 rm=4      spec: 0x0F 0xAE mod/reg/rm /1 */
                    case 0xCD: /* 0Fh AEh CDh FXRSTOR b(r/m) mod=3 reg=1 rm=5      spec: 0x0F 0xAE mod/reg/rm /1 */
                    case 0xCE: /* 0Fh AEh CEh FXRSTOR b(r/m) mod=3 reg=1 rm=6      spec: 0x0F 0xAE mod/reg/rm /1 */
                    case 0xCF: /* 0Fh AEh CFh FXRSTOR b(r/m) mod=3 reg=1 rm=7      spec: 0x0F 0xAE mod/reg/rm /1 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FXRSTOR %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                        break;
                    case 0x10: /* 0Fh AEh 10h LDMXCSR w(r/m) mod=0 reg=2 rm=0      spec: 0x0F 0xAE mod/reg/rm /2 mod!=3 */
                    case 0x11: /* 0Fh AEh 11h LDMXCSR w(r/m) mod=0 reg=2 rm=1      spec: 0x0F 0xAE mod/reg/rm /2 mod!=3 */
                    case 0x12: /* 0Fh AEh 12h LDMXCSR w(r/m) mod=0 reg=2 rm=2      spec: 0x0F 0xAE mod/reg/rm /2 mod!=3 */
                    case 0x13: /* 0Fh AEh 13h LDMXCSR w(r/m) mod=0 reg=2 rm=3      spec: 0x0F 0xAE mod/reg/rm /2 mod!=3 */
                    case 0x14: /* 0Fh AEh 14h LDMXCSR w(r/m) mod=0 reg=2 rm=4      spec: 0x0F 0xAE mod/reg/rm /2 mod!=3 */
                    case 0x15: /* 0Fh AEh 15h LDMXCSR w(r/m) mod=0 reg=2 rm=5      spec: 0x0F 0xAE mod/reg/rm /2 mod!=3 */
                    case 0x16: /* 0Fh AEh 16h LDMXCSR w(r/m) mod=0 reg=2 rm=6      spec: 0x0F 0xAE mod/reg/rm /2 mod!=3 */
                    case 0x17: /* 0Fh AEh 17h LDMXCSR w(r/m) mod=0 reg=2 rm=7      spec: 0x0F 0xAE mod/reg/rm /2 mod!=3 */
                    case 0x50: /* 0Fh AEh 50h LDMXCSR w(r/m) mod=1 reg=2 rm=0      spec: 0x0F 0xAE mod/reg/rm /2 mod!=3 */
                    case 0x51: /* 0Fh AEh 51h LDMXCSR w(r/m) mod=1 reg=2 rm=1      spec: 0x0F 0xAE mod/reg/rm /2 mod!=3 */
                    case 0x52: /* 0Fh AEh 52h LDMXCSR w(r/m) mod=1 reg=2 rm=2      spec: 0x0F 0xAE mod/reg/rm /2 mod!=3 */
                    case 0x53: /* 0Fh AEh 53h LDMXCSR w(r/m) mod=1 reg=2 rm=3      spec: 0x0F 0xAE mod/reg/rm /2 mod!=3 */
                    case 0x54: /* 0Fh AEh 54h LDMXCSR w(r/m) mod=1 reg=2 rm=4      spec: 0x0F 0xAE mod/reg/rm /2 mod!=3 */
                    case 0x55: /* 0Fh AEh 55h LDMXCSR w(r/m) mod=1 reg=2 rm=5      spec: 0x0F 0xAE mod/reg/rm /2 mod!=3 */
                    case 0x56: /* 0Fh AEh 56h LDMXCSR w(r/m) mod=1 reg=2 rm=6      spec: 0x0F 0xAE mod/reg/rm /2 mod!=3 */
                    case 0x57: /* 0Fh AEh 57h LDMXCSR w(r/m) mod=1 reg=2 rm=7      spec: 0x0F 0xAE mod/reg/rm /2 mod!=3 */
                    case 0x90: /* 0Fh AEh 90h LDMXCSR w(r/m) mod=2 reg=2 rm=0      spec: 0x0F 0xAE mod/reg/rm /2 mod!=3 */
                    case 0x91: /* 0Fh AEh 91h LDMXCSR w(r/m) mod=2 reg=2 rm=1      spec: 0x0F 0xAE mod/reg/rm /2 mod!=3 */
                    case 0x92: /* 0Fh AEh 92h LDMXCSR w(r/m) mod=2 reg=2 rm=2      spec: 0x0F 0xAE mod/reg/rm /2 mod!=3 */
                    case 0x93: /* 0Fh AEh 93h LDMXCSR w(r/m) mod=2 reg=2 rm=3      spec: 0x0F 0xAE mod/reg/rm /2 mod!=3 */
                    case 0x94: /* 0Fh AEh 94h LDMXCSR w(r/m) mod=2 reg=2 rm=4      spec: 0x0F 0xAE mod/reg/rm /2 mod!=3 */
                    case 0x95: /* 0Fh AEh 95h LDMXCSR w(r/m) mod=2 reg=2 rm=5      spec: 0x0F 0xAE mod/reg/rm /2 mod!=3 */
                    case 0x96: /* 0Fh AEh 96h LDMXCSR w(r/m) mod=2 reg=2 rm=6      spec: 0x0F 0xAE mod/reg/rm /2 mod!=3 */
                    case 0x97: /* 0Fh AEh 97h LDMXCSR w(r/m) mod=2 reg=2 rm=7      spec: 0x0F 0xAE mod/reg/rm /2 mod!=3 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"LDMXCSR %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                        break;
                    case 0x18: /* 0Fh AEh 18h STMXCSR w(r/m) mod=0 reg=3 rm=0      spec: 0x0F 0xAE mod/reg/rm /3 mod!=3 */
                    case 0x19: /* 0Fh AEh 19h STMXCSR w(r/m) mod=0 reg=3 rm=1      spec: 0x0F 0xAE mod/reg/rm /3 mod!=3 */
                    case 0x1A: /* 0Fh AEh 1Ah STMXCSR w(r/m) mod=0 reg=3 rm=2      spec: 0x0F 0xAE mod/reg/rm /3 mod!=3 */
                    case 0x1B: /* 0Fh AEh 1Bh STMXCSR w(r/m) mod=0 reg=3 rm=3      spec: 0x0F 0xAE mod/reg/rm /3 mod!=3 */
                    case 0x1C: /* 0Fh AEh 1Ch STMXCSR w(r/m) mod=0 reg=3 rm=4      spec: 0x0F 0xAE mod/reg/rm /3 mod!=3 */
                    case 0x1D: /* 0Fh AEh 1Dh STMXCSR w(r/m) mod=0 reg=3 rm=5      spec: 0x0F 0xAE mod/reg/rm /3 mod!=3 */
                    case 0x1E: /* 0Fh AEh 1Eh STMXCSR w(r/m) mod=0 reg=3 rm=6      spec: 0x0F 0xAE mod/reg/rm /3 mod!=3 */
                    case 0x1F: /* 0Fh AEh 1Fh STMXCSR w(r/m) mod=0 reg=3 rm=7      spec: 0x0F 0xAE mod/reg/rm /3 mod!=3 */
                    case 0x58: /* 0Fh AEh 58h STMXCSR w(r/m) mod=1 reg=3 rm=0      spec: 0x0F 0xAE mod/reg/rm /3 mod!=3 */
                    case 0x59: /* 0Fh AEh 59h STMXCSR w(r/m) mod=1 reg=3 rm=1      spec: 0x0F 0xAE mod/reg/rm /3 mod!=3 */
                    case 0x5A: /* 0Fh AEh 5Ah STMXCSR w(r/m) mod=1 reg=3 rm=2      spec: 0x0F 0xAE mod/reg/rm /3 mod!=3 */
                    case 0x5B: /* 0Fh AEh 5Bh STMXCSR w(r/m) mod=1 reg=3 rm=3      spec: 0x0F 0xAE mod/reg/rm /3 mod!=3 */
                    case 0x5C: /* 0Fh AEh 5Ch STMXCSR w(r/m) mod=1 reg=3 rm=4      spec: 0x0F 0xAE mod/reg/rm /3 mod!=3 */
                    case 0x5D: /* 0Fh AEh 5Dh STMXCSR w(r/m) mod=1 reg=3 rm=5      spec: 0x0F 0xAE mod/reg/rm /3 mod!=3 */
                    case 0x5E: /* 0Fh AEh 5Eh STMXCSR w(r/m) mod=1 reg=3 rm=6      spec: 0x0F 0xAE mod/reg/rm /3 mod!=3 */
                    case 0x5F: /* 0Fh AEh 5Fh STMXCSR w(r/m) mod=1 reg=3 rm=7      spec: 0x0F 0xAE mod/reg/rm /3 mod!=3 */
                    case 0x98: /* 0Fh AEh 98h STMXCSR w(r/m) mod=2 reg=3 rm=0      spec: 0x0F 0xAE mod/reg/rm /3 mod!=3 */
                    case 0x99: /* 0Fh AEh 99h STMXCSR w(r/m) mod=2 reg=3 rm=1      spec: 0x0F 0xAE mod/reg/rm /3 mod!=3 */
                    case 0x9A: /* 0Fh AEh 9Ah STMXCSR w(r/m) mod=2 reg=3 rm=2      spec: 0x0F 0xAE mod/reg/rm /3 mod!=3 */
                    case 0x9B: /* 0Fh AEh 9Bh STMXCSR w(r/m) mod=2 reg=3 rm=3      spec: 0x0F 0xAE mod/reg/rm /3 mod!=3 */
                    case 0x9C: /* 0Fh AEh 9Ch STMXCSR w(r/m) mod=2 reg=3 rm=4      spec: 0x0F 0xAE mod/reg/rm /3 mod!=3 */
                    case 0x9D: /* 0Fh AEh 9Dh STMXCSR w(r/m) mod=2 reg=3 rm=5      spec: 0x0F 0xAE mod/reg/rm /3 mod!=3 */
                    case 0x9E: /* 0Fh AEh 9Eh STMXCSR w(r/m) mod=2 reg=3 rm=6      spec: 0x0F 0xAE mod/reg/rm /3 mod!=3 */
                    case 0x9F: /* 0Fh AEh 9Fh STMXCSR w(r/m) mod=2 reg=3 rm=7      spec: 0x0F 0xAE mod/reg/rm /3 mod!=3 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"STMXCSR %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                        break;
                    case 0x20: /* 0Fh AEh 20h XSAVE b(r/m) mod=0 reg=4 rm=0      spec: 0x0F 0xAE mod/reg/rm /4 */
                    case 0x21: /* 0Fh AEh 21h XSAVE b(r/m) mod=0 reg=4 rm=1      spec: 0x0F 0xAE mod/reg/rm /4 */
                    case 0x22: /* 0Fh AEh 22h XSAVE b(r/m) mod=0 reg=4 rm=2      spec: 0x0F 0xAE mod/reg/rm /4 */
                    case 0x23: /* 0Fh AEh 23h XSAVE b(r/m) mod=0 reg=4 rm=3      spec: 0x0F 0xAE mod/reg/rm /4 */
                    case 0x24: /* 0Fh AEh 24h XSAVE b(r/m) mod=0 reg=4 rm=4      spec: 0x0F 0xAE mod/reg/rm /4 */
                    case 0x25: /* 0Fh AEh 25h XSAVE b(r/m) mod=0 reg=4 rm=5      spec: 0x0F 0xAE mod/reg/rm /4 */
                    case 0x26: /* 0Fh AEh 26h XSAVE b(r/m) mod=0 reg=4 rm=6      spec: 0x0F 0xAE mod/reg/rm /4 */
                    case 0x27: /* 0Fh AEh 27h XSAVE b(r/m) mod=0 reg=4 rm=7      spec: 0x0F 0xAE mod/reg/rm /4 */
                    case 0x60: /* 0Fh AEh 60h XSAVE b(r/m) mod=1 reg=4 rm=0      spec: 0x0F 0xAE mod/reg/rm /4 */
                    case 0x61: /* 0Fh AEh 61h XSAVE b(r/m) mod=1 reg=4 rm=1      spec: 0x0F 0xAE mod/reg/rm /4 */
                    case 0x62: /* 0Fh AEh 62h XSAVE b(r/m) mod=1 reg=4 rm=2      spec: 0x0F 0xAE mod/reg/rm /4 */
                    case 0x63: /* 0Fh AEh 63h XSAVE b(r/m) mod=1 reg=4 rm=3      spec: 0x0F 0xAE mod/reg/rm /4 */
                    case 0x64: /* 0Fh AEh 64h XSAVE b(r/m) mod=1 reg=4 rm=4      spec: 0x0F 0xAE mod/reg/rm /4 */
                    case 0x65: /* 0Fh AEh 65h XSAVE b(r/m) mod=1 reg=4 rm=5      spec: 0x0F 0xAE mod/reg/rm /4 */
                    case 0x66: /* 0Fh AEh 66h XSAVE b(r/m) mod=1 reg=4 rm=6      spec: 0x0F 0xAE mod/reg/rm /4 */
                    case 0x67: /* 0Fh AEh 67h XSAVE b(r/m) mod=1 reg=4 rm=7      spec: 0x0F 0xAE mod/reg/rm /4 */
                    case 0xA0: /* 0Fh AEh A0h XSAVE b(r/m) mod=2 reg=4 rm=0      spec: 0x0F 0xAE mod/reg/rm /4 */
                    case 0xA1: /* 0Fh AEh A1h XSAVE b(r/m) mod=2 reg=4 rm=1      spec: 0x0F 0xAE mod/reg/rm /4 */
                    case 0xA2: /* 0Fh AEh A2h XSAVE b(r/m) mod=2 reg=4 rm=2      spec: 0x0F 0xAE mod/reg/rm /4 */
                    case 0xA3: /* 0Fh AEh A3h XSAVE b(r/m) mod=2 reg=4 rm=3      spec: 0x0F 0xAE mod/reg/rm /4 */
                    case 0xA4: /* 0Fh AEh A4h XSAVE b(r/m) mod=2 reg=4 rm=4      spec: 0x0F 0xAE mod/reg/rm /4 */
                    case 0xA5: /* 0Fh AEh A5h XSAVE b(r/m) mod=2 reg=4 rm=5      spec: 0x0F 0xAE mod/reg/rm /4 */
                    case 0xA6: /* 0Fh AEh A6h XSAVE b(r/m) mod=2 reg=4 rm=6      spec: 0x0F 0xAE mod/reg/rm /4 */
                    case 0xA7: /* 0Fh AEh A7h XSAVE b(r/m) mod=2 reg=4 rm=7      spec: 0x0F 0xAE mod/reg/rm /4 */
                    case 0xE0: /* 0Fh AEh E0h XSAVE b(r/m) mod=3 reg=4 rm=0      spec: 0x0F 0xAE mod/reg/rm /4 */
                    case 0xE1: /* 0Fh AEh E1h XSAVE b(r/m) mod=3 reg=4 rm=1      spec: 0x0F 0xAE mod/reg/rm /4 */
                    case 0xE2: /* 0Fh AEh E2h XSAVE b(r/m) mod=3 reg=4 rm=2      spec: 0x0F 0xAE mod/reg/rm /4 */
                    case 0xE3: /* 0Fh AEh E3h XSAVE b(r/m) mod=3 reg=4 rm=3      spec: 0x0F 0xAE mod/reg/rm /4 */
                    case 0xE4: /* 0Fh AEh E4h XSAVE b(r/m) mod=3 reg=4 rm=4      spec: 0x0F 0xAE mod/reg/rm /4 */
                    case 0xE5: /* 0Fh AEh E5h XSAVE b(r/m) mod=3 reg=4 rm=5      spec: 0x0F 0xAE mod/reg/rm /4 */
                    case 0xE6: /* 0Fh AEh E6h XSAVE b(r/m) mod=3 reg=4 rm=6      spec: 0x0F 0xAE mod/reg/rm /4 */
                    case 0xE7: /* 0Fh AEh E7h XSAVE b(r/m) mod=3 reg=4 rm=7      spec: 0x0F 0xAE mod/reg/rm /4 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"XSAVE %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                        break;
                    case 0x28: /* 0Fh AEh 28h XRSTOR b(r/m) mod=0 reg=5 rm=0      spec: 0x0F 0xAE mod/reg/rm /5 mod!=3 */
                    case 0x29: /* 0Fh AEh 29h XRSTOR b(r/m) mod=0 reg=5 rm=1      spec: 0x0F 0xAE mod/reg/rm /5 mod!=3 */
                    case 0x2A: /* 0Fh AEh 2Ah XRSTOR b(r/m) mod=0 reg=5 rm=2      spec: 0x0F 0xAE mod/reg/rm /5 mod!=3 */
                    case 0x2B: /* 0Fh AEh 2Bh XRSTOR b(r/m) mod=0 reg=5 rm=3      spec: 0x0F 0xAE mod/reg/rm /5 mod!=3 */
                    case 0x2C: /* 0Fh AEh 2Ch XRSTOR b(r/m) mod=0 reg=5 rm=4      spec: 0x0F 0xAE mod/reg/rm /5 mod!=3 */
                    case 0x2D: /* 0Fh AEh 2Dh XRSTOR b(r/m) mod=0 reg=5 rm=5      spec: 0x0F 0xAE mod/reg/rm /5 mod!=3 */
                    case 0x2E: /* 0Fh AEh 2Eh XRSTOR b(r/m) mod=0 reg=5 rm=6      spec: 0x0F 0xAE mod/reg/rm /5 mod!=3 */
                    case 0x2F: /* 0Fh AEh 2Fh XRSTOR b(r/m) mod=0 reg=5 rm=7      spec: 0x0F 0xAE mod/reg/rm /5 mod!=3 */
                    case 0x68: /* 0Fh AEh 68h XRSTOR b(r/m) mod=1 reg=5 rm=0      spec: 0x0F 0xAE mod/reg/rm /5 mod!=3 */
                    case 0x69: /* 0Fh AEh 69h XRSTOR b(r/m) mod=1 reg=5 rm=1      spec: 0x0F 0xAE mod/reg/rm /5 mod!=3 */
                    case 0x6A: /* 0Fh AEh 6Ah XRSTOR b(r/m) mod=1 reg=5 rm=2      spec: 0x0F 0xAE mod/reg/rm /5 mod!=3 */
                    case 0x6B: /* 0Fh AEh 6Bh XRSTOR b(r/m) mod=1 reg=5 rm=3      spec: 0x0F 0xAE mod/reg/rm /5 mod!=3 */
                    case 0x6C: /* 0Fh AEh 6Ch XRSTOR b(r/m) mod=1 reg=5 rm=4      spec: 0x0F 0xAE mod/reg/rm /5 mod!=3 */
                    case 0x6D: /* 0Fh AEh 6Dh XRSTOR b(r/m) mod=1 reg=5 rm=5      spec: 0x0F 0xAE mod/reg/rm /5 mod!=3 */
                    case 0x6E: /* 0Fh AEh 6Eh XRSTOR b(r/m) mod=1 reg=5 rm=6      spec: 0x0F 0xAE mod/reg/rm /5 mod!=3 */
                    case 0x6F: /* 0Fh AEh 6Fh XRSTOR b(r/m) mod=1 reg=5 rm=7      spec: 0x0F 0xAE mod/reg/rm /5 mod!=3 */
                    case 0xA8: /* 0Fh AEh A8h XRSTOR b(r/m) mod=2 reg=5 rm=0      spec: 0x0F 0xAE mod/reg/rm /5 mod!=3 */
                    case 0xA9: /* 0Fh AEh A9h XRSTOR b(r/m) mod=2 reg=5 rm=1      spec: 0x0F 0xAE mod/reg/rm /5 mod!=3 */
                    case 0xAA: /* 0Fh AEh AAh XRSTOR b(r/m) mod=2 reg=5 rm=2      spec: 0x0F 0xAE mod/reg/rm /5 mod!=3 */
                    case 0xAB: /* 0Fh AEh ABh XRSTOR b(r/m) mod=2 reg=5 rm=3      spec: 0x0F 0xAE mod/reg/rm /5 mod!=3 */
                    case 0xAC: /* 0Fh AEh ACh XRSTOR b(r/m) mod=2 reg=5 rm=4      spec: 0x0F 0xAE mod/reg/rm /5 mod!=3 */
                    case 0xAD: /* 0Fh AEh ADh XRSTOR b(r/m) mod=2 reg=5 rm=5      spec: 0x0F 0xAE mod/reg/rm /5 mod!=3 */
                    case 0xAE: /* 0Fh AEh AEh XRSTOR b(r/m) mod=2 reg=5 rm=6      spec: 0x0F 0xAE mod/reg/rm /5 mod!=3 */
                    case 0xAF: /* 0Fh AEh AFh XRSTOR b(r/m) mod=2 reg=5 rm=7      spec: 0x0F 0xAE mod/reg/rm /5 mod!=3 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"XRSTOR %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                        break;
                    /* opcode 0Fh AEh 30h  not defined */
                    /* opcode 0Fh AEh 31h  not defined */
                    /* opcode 0Fh AEh 32h  not defined */
                    /* opcode 0Fh AEh 33h  not defined */
                    /* opcode 0Fh AEh 34h  not defined */
                    /* opcode 0Fh AEh 35h  not defined */
                    /* opcode 0Fh AEh 36h  not defined */
                    /* opcode 0Fh AEh 37h  not defined */
                    case 0x38: /* 0Fh AEh 38h CLFLUSH b(r/m) mod=0 reg=7 rm=0      spec: 0x0F 0xAE mod/reg/rm /7 mod!=3 */
                    case 0x39: /* 0Fh AEh 39h CLFLUSH b(r/m) mod=0 reg=7 rm=1      spec: 0x0F 0xAE mod/reg/rm /7 mod!=3 */
                    case 0x3A: /* 0Fh AEh 3Ah CLFLUSH b(r/m) mod=0 reg=7 rm=2      spec: 0x0F 0xAE mod/reg/rm /7 mod!=3 */
                    case 0x3B: /* 0Fh AEh 3Bh CLFLUSH b(r/m) mod=0 reg=7 rm=3      spec: 0x0F 0xAE mod/reg/rm /7 mod!=3 */
                    case 0x3C: /* 0Fh AEh 3Ch CLFLUSH b(r/m) mod=0 reg=7 rm=4      spec: 0x0F 0xAE mod/reg/rm /7 mod!=3 */
                    case 0x3D: /* 0Fh AEh 3Dh CLFLUSH b(r/m) mod=0 reg=7 rm=5      spec: 0x0F 0xAE mod/reg/rm /7 mod!=3 */
                    case 0x3E: /* 0Fh AEh 3Eh CLFLUSH b(r/m) mod=0 reg=7 rm=6      spec: 0x0F 0xAE mod/reg/rm /7 mod!=3 */
                    case 0x3F: /* 0Fh AEh 3Fh CLFLUSH b(r/m) mod=0 reg=7 rm=7      spec: 0x0F 0xAE mod/reg/rm /7 mod!=3 */
                    case 0x78: /* 0Fh AEh 78h CLFLUSH b(r/m) mod=1 reg=7 rm=0      spec: 0x0F 0xAE mod/reg/rm /7 mod!=3 */
                    case 0x79: /* 0Fh AEh 79h CLFLUSH b(r/m) mod=1 reg=7 rm=1      spec: 0x0F 0xAE mod/reg/rm /7 mod!=3 */
                    case 0x7A: /* 0Fh AEh 7Ah CLFLUSH b(r/m) mod=1 reg=7 rm=2      spec: 0x0F 0xAE mod/reg/rm /7 mod!=3 */
                    case 0x7B: /* 0Fh AEh 7Bh CLFLUSH b(r/m) mod=1 reg=7 rm=3      spec: 0x0F 0xAE mod/reg/rm /7 mod!=3 */
                    case 0x7C: /* 0Fh AEh 7Ch CLFLUSH b(r/m) mod=1 reg=7 rm=4      spec: 0x0F 0xAE mod/reg/rm /7 mod!=3 */
                    case 0x7D: /* 0Fh AEh 7Dh CLFLUSH b(r/m) mod=1 reg=7 rm=5      spec: 0x0F 0xAE mod/reg/rm /7 mod!=3 */
                    case 0x7E: /* 0Fh AEh 7Eh CLFLUSH b(r/m) mod=1 reg=7 rm=6      spec: 0x0F 0xAE mod/reg/rm /7 mod!=3 */
                    case 0x7F: /* 0Fh AEh 7Fh CLFLUSH b(r/m) mod=1 reg=7 rm=7      spec: 0x0F 0xAE mod/reg/rm /7 mod!=3 */
                    case 0xB8: /* 0Fh AEh B8h CLFLUSH b(r/m) mod=2 reg=7 rm=0      spec: 0x0F 0xAE mod/reg/rm /7 mod!=3 */
                    case 0xB9: /* 0Fh AEh B9h CLFLUSH b(r/m) mod=2 reg=7 rm=1      spec: 0x0F 0xAE mod/reg/rm /7 mod!=3 */
                    case 0xBA: /* 0Fh AEh BAh CLFLUSH b(r/m) mod=2 reg=7 rm=2      spec: 0x0F 0xAE mod/reg/rm /7 mod!=3 */
                    case 0xBB: /* 0Fh AEh BBh CLFLUSH b(r/m) mod=2 reg=7 rm=3      spec: 0x0F 0xAE mod/reg/rm /7 mod!=3 */
                    case 0xBC: /* 0Fh AEh BCh CLFLUSH b(r/m) mod=2 reg=7 rm=4      spec: 0x0F 0xAE mod/reg/rm /7 mod!=3 */
                    case 0xBD: /* 0Fh AEh BDh CLFLUSH b(r/m) mod=2 reg=7 rm=5      spec: 0x0F 0xAE mod/reg/rm /7 mod!=3 */
                    case 0xBE: /* 0Fh AEh BEh CLFLUSH b(r/m) mod=2 reg=7 rm=6      spec: 0x0F 0xAE mod/reg/rm /7 mod!=3 */
                    case 0xBF: /* 0Fh AEh BFh CLFLUSH b(r/m) mod=2 reg=7 rm=7      spec: 0x0F 0xAE mod/reg/rm /7 mod!=3 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CLFLUSH %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                        break;
                    /* opcode 0Fh AEh 70h  not defined */
                    /* opcode 0Fh AEh 71h  not defined */
                    /* opcode 0Fh AEh 72h  not defined */
                    /* opcode 0Fh AEh 73h  not defined */
                    /* opcode 0Fh AEh 74h  not defined */
                    /* opcode 0Fh AEh 75h  not defined */
                    /* opcode 0Fh AEh 76h  not defined */
                    /* opcode 0Fh AEh 77h  not defined */
                    /* opcode 0Fh AEh B0h  not defined */
                    /* opcode 0Fh AEh B1h  not defined */
                    /* opcode 0Fh AEh B2h  not defined */
                    /* opcode 0Fh AEh B3h  not defined */
                    /* opcode 0Fh AEh B4h  not defined */
                    /* opcode 0Fh AEh B5h  not defined */
                    /* opcode 0Fh AEh B6h  not defined */
                    /* opcode 0Fh AEh B7h  not defined */
                    /* opcode 0Fh AEh D0h  not defined */
                    /* opcode 0Fh AEh D1h  not defined */
                    /* opcode 0Fh AEh D2h  not defined */
                    /* opcode 0Fh AEh D3h  not defined */
                    /* opcode 0Fh AEh D4h  not defined */
                    /* opcode 0Fh AEh D5h  not defined */
                    /* opcode 0Fh AEh D6h  not defined */
                    /* opcode 0Fh AEh D7h  not defined */
                    /* opcode 0Fh AEh D8h  not defined */
                    /* opcode 0Fh AEh D9h  not defined */
                    /* opcode 0Fh AEh DAh  not defined */
                    /* opcode 0Fh AEh DBh  not defined */
                    /* opcode 0Fh AEh DCh  not defined */
                    /* opcode 0Fh AEh DDh  not defined */
                    /* opcode 0Fh AEh DEh  not defined */
                    /* opcode 0Fh AEh DFh  not defined */
                    case 0xE8: /* 0Fh AEh E8h LFENCE  mod=3 reg=5 rm=0      spec: 0x0F 0xAE mod/reg/rm /5 mod==3 */
                    case 0xE9: /* 0Fh AEh E9h LFENCE  mod=3 reg=5 rm=1      spec: 0x0F 0xAE mod/reg/rm /5 mod==3 */
                    case 0xEA: /* 0Fh AEh EAh LFENCE  mod=3 reg=5 rm=2      spec: 0x0F 0xAE mod/reg/rm /5 mod==3 */
                    case 0xEB: /* 0Fh AEh EBh LFENCE  mod=3 reg=5 rm=3      spec: 0x0F 0xAE mod/reg/rm /5 mod==3 */
                    case 0xEC: /* 0Fh AEh ECh LFENCE  mod=3 reg=5 rm=4      spec: 0x0F 0xAE mod/reg/rm /5 mod==3 */
                    case 0xED: /* 0Fh AEh EDh LFENCE  mod=3 reg=5 rm=5      spec: 0x0F 0xAE mod/reg/rm /5 mod==3 */
                    case 0xEE: /* 0Fh AEh EEh LFENCE  mod=3 reg=5 rm=6      spec: 0x0F 0xAE mod/reg/rm /5 mod==3 */
                    case 0xEF: /* 0Fh AEh EFh LFENCE  mod=3 reg=5 rm=7      spec: 0x0F 0xAE mod/reg/rm /5 mod==3 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"LFENCE");
                        break;
                    case 0xF0: /* 0Fh AEh F0h MFENCE  mod=3 reg=6 rm=0      spec: 0x0F 0xAE mod/reg/rm /6 mod==3 */
                    case 0xF1: /* 0Fh AEh F1h MFENCE  mod=3 reg=6 rm=1      spec: 0x0F 0xAE mod/reg/rm /6 mod==3 */
                    case 0xF2: /* 0Fh AEh F2h MFENCE  mod=3 reg=6 rm=2      spec: 0x0F 0xAE mod/reg/rm /6 mod==3 */
                    case 0xF3: /* 0Fh AEh F3h MFENCE  mod=3 reg=6 rm=3      spec: 0x0F 0xAE mod/reg/rm /6 mod==3 */
                    case 0xF4: /* 0Fh AEh F4h MFENCE  mod=3 reg=6 rm=4      spec: 0x0F 0xAE mod/reg/rm /6 mod==3 */
                    case 0xF5: /* 0Fh AEh F5h MFENCE  mod=3 reg=6 rm=5      spec: 0x0F 0xAE mod/reg/rm /6 mod==3 */
                    case 0xF6: /* 0Fh AEh F6h MFENCE  mod=3 reg=6 rm=6      spec: 0x0F 0xAE mod/reg/rm /6 mod==3 */
                    case 0xF7: /* 0Fh AEh F7h MFENCE  mod=3 reg=6 rm=7      spec: 0x0F 0xAE mod/reg/rm /6 mod==3 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MFENCE");
                        break;
                    case 0xF8: /* 0Fh AEh F8h SFENCE  mod=3 reg=7 rm=0      spec: 0x0F 0xAE mod/reg/rm /7 mod==3 */
                    case 0xF9: /* 0Fh AEh F9h SFENCE  mod=3 reg=7 rm=1      spec: 0x0F 0xAE mod/reg/rm /7 mod==3 */
                    case 0xFA: /* 0Fh AEh FAh SFENCE  mod=3 reg=7 rm=2      spec: 0x0F 0xAE mod/reg/rm /7 mod==3 */
                    case 0xFB: /* 0Fh AEh FBh SFENCE  mod=3 reg=7 rm=3      spec: 0x0F 0xAE mod/reg/rm /7 mod==3 */
                    case 0xFC: /* 0Fh AEh FCh SFENCE  mod=3 reg=7 rm=4      spec: 0x0F 0xAE mod/reg/rm /7 mod==3 */
                    case 0xFD: /* 0Fh AEh FDh SFENCE  mod=3 reg=7 rm=5      spec: 0x0F 0xAE mod/reg/rm /7 mod==3 */
                    case 0xFE: /* 0Fh AEh FEh SFENCE  mod=3 reg=7 rm=6      spec: 0x0F 0xAE mod/reg/rm /7 mod==3 */
                    case 0xFF: /* 0Fh AEh FFh SFENCE  mod=3 reg=7 rm=7      spec: 0x0F 0xAE mod/reg/rm /7 mod==3 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SFENCE");
                        break;
                    default:
                        goto _x86decode_illegal_opcode;
                };
/* End of opcodes starting with 0Fh AEh */
                break;
            case 0xAF: /* 0Fh AFh IMULd w(reg),w(r/m)      spec: 0x0F 0xAF mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"IMULd %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 0xB0: /* 0Fh B0h CMPXCHGb b(r/m),b(reg)      spec: 0x0F 0xB0 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CMPXCHGb %s,%s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),CPUregsN[1][mrm.reg()]);
                break;
            case 0xB1: /* 0Fh B1h CMPXCHGd w(r/m),w(reg)      spec: 0x0F 0xB1 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CMPXCHGd %s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[4][mrm.reg()]);
                break;
            case 0xB2: /* 0Fh B2h LSSd w(reg),w(r/m)      spec: 0x0F 0xB2 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"LSSd %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 0xB3: /* 0Fh B3h BTRd w(r/m),w(reg)      spec: 0x0F 0xB3 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"BTRd %s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[4][mrm.reg()]);
                break;
            case 0xB4: /* 0Fh B4h LFSd w(reg),w(r/m)      spec: 0x0F 0xB4 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"LFSd %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 0xB5: /* 0Fh B5h LGSd w(reg),w(r/m)      spec: 0x0F 0xB5 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"LGSd %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 0xB6: /* 0Fh B6h MOVZXb w(reg),b(r/m)      spec: 0x0F 0xB6 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVZXb %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 0xB7: /* 0Fh B7h MOVZXd w(reg),w16(r/m)      spec: 0x0F 0xB7 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVZXd %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,2,RC_REG,"w16"));
                break;
            /* opcode 0Fh B8h  not defined */
            case 0xBA: /* 0Fh BAh        spec:  */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                _x86decode_begin_code32_addr32_opcode_parse_0FBA:
/* Opcodes starting with 0Fh BAh */
                switch (mrm.reg()) {
                    /* reg 0 not defined */
                    /* reg 1 not defined */
                    /* reg 2 not defined */
                    /* reg 3 not defined */
                    case 4: /* 0Fh BAh 20h BTd w(r/m),i reg=4      spec: 0x0F 0xBA mod/reg/rm /4 ib */
                        imm=IPFB();
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"BTd %s,0x%02lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
                        break;
                    case 5: /* 0Fh BAh 28h BTSd w(r/m),i reg=5      spec: 0x0F 0xBA mod/reg/rm /5 ib */
                        imm=IPFB();
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"BTSd %s,0x%02lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
                        break;
                    case 6: /* 0Fh BAh 30h BTRd w(r/m),i reg=6      spec: 0x0F 0xBA mod/reg/rm /6 ib */
                        imm=IPFB();
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"BTRd %s,0x%02lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
                        break;
                    case 7: /* 0Fh BAh 38h BTCd w(r/m),i reg=7      spec: 0x0F 0xBA mod/reg/rm /7 ib */
                        imm=IPFB();
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"BTCd %s,0x%02lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
                        break;
                    default:
                        goto _x86decode_illegal_opcode;
                };
/* End of opcodes starting with 0Fh BAh */
                break;
            case 0xBB: /* 0Fh BBh BTCd w(r/m),w(reg)      spec: 0x0F 0xBB mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"BTCd %s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[4][mrm.reg()]);
                break;
            case 0xBC: /* 0Fh BCh BSFd w(reg),w(r/m)      spec: 0x0F 0xBC mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"BSFd %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 0xBD: /* 0Fh BDh BSRd w(reg),w(r/m)      spec: 0x0F 0xBD mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"BSRd %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 0xBE: /* 0Fh BEh MOVSXb w(reg),b(r/m)      spec: 0x0F 0xBE mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVSXb %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 0xBF: /* 0Fh BFh MOVSXd w(reg),w16(r/m)      spec: 0x0F 0xBF mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVSXd %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,2,RC_REG,"w16"));
                break;
            case 0xC0: /* 0Fh C0h XADDb b(r/m),b(reg)      spec: 0x0F 0xC0 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"XADDb %s,%s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),CPUregsN[1][mrm.reg()]);
                break;
            case 0xC1: /* 0Fh C1h XADDd w(r/m),w(reg)      spec: 0x0F 0xC1 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"XADDd %s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[4][mrm.reg()]);
                break;
            case 0xC2: /* 0Fh C2h CMPPS sse(reg),sse(r/m),i      spec: 0x0F 0xC2 mod/reg/rm ib */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                imm=IPFB();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CMPPS XMM%u,%s,0x%02lX",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""),(unsigned long)((uint32_t)imm));
                break;
            case 0xC3: /* 0Fh C3h        spec:  */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                _x86decode_begin_code32_addr32_opcode_parse_0FC3:
/* Opcodes starting with 0Fh C3h */
                switch (mrm.byte) {
                    case 0x00: /* 0Fh C3h 00h MOVNTI w32(r/m),w32(reg) mod=0 reg=0 rm=0      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x01: /* 0Fh C3h 01h MOVNTI w32(r/m),w32(reg) mod=0 reg=0 rm=1      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x02: /* 0Fh C3h 02h MOVNTI w32(r/m),w32(reg) mod=0 reg=0 rm=2      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x03: /* 0Fh C3h 03h MOVNTI w32(r/m),w32(reg) mod=0 reg=0 rm=3      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x04: /* 0Fh C3h 04h MOVNTI w32(r/m),w32(reg) mod=0 reg=0 rm=4      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x05: /* 0Fh C3h 05h MOVNTI w32(r/m),w32(reg) mod=0 reg=0 rm=5      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x06: /* 0Fh C3h 06h MOVNTI w32(r/m),w32(reg) mod=0 reg=0 rm=6      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x07: /* 0Fh C3h 07h MOVNTI w32(r/m),w32(reg) mod=0 reg=0 rm=7      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x08: /* 0Fh C3h 08h MOVNTI w32(r/m),w32(reg) mod=0 reg=1 rm=0      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x09: /* 0Fh C3h 09h MOVNTI w32(r/m),w32(reg) mod=0 reg=1 rm=1      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x0A: /* 0Fh C3h 0Ah MOVNTI w32(r/m),w32(reg) mod=0 reg=1 rm=2      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x0B: /* 0Fh C3h 0Bh MOVNTI w32(r/m),w32(reg) mod=0 reg=1 rm=3      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x0C: /* 0Fh C3h 0Ch MOVNTI w32(r/m),w32(reg) mod=0 reg=1 rm=4      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x0D: /* 0Fh C3h 0Dh MOVNTI w32(r/m),w32(reg) mod=0 reg=1 rm=5      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x0E: /* 0Fh C3h 0Eh MOVNTI w32(r/m),w32(reg) mod=0 reg=1 rm=6      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x0F: /* 0Fh C3h 0Fh MOVNTI w32(r/m),w32(reg) mod=0 reg=1 rm=7      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x10: /* 0Fh C3h 10h MOVNTI w32(r/m),w32(reg) mod=0 reg=2 rm=0      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x11: /* 0Fh C3h 11h MOVNTI w32(r/m),w32(reg) mod=0 reg=2 rm=1      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x12: /* 0Fh C3h 12h MOVNTI w32(r/m),w32(reg) mod=0 reg=2 rm=2      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x13: /* 0Fh C3h 13h MOVNTI w32(r/m),w32(reg) mod=0 reg=2 rm=3      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x14: /* 0Fh C3h 14h MOVNTI w32(r/m),w32(reg) mod=0 reg=2 rm=4      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x15: /* 0Fh C3h 15h MOVNTI w32(r/m),w32(reg) mod=0 reg=2 rm=5      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x16: /* 0Fh C3h 16h MOVNTI w32(r/m),w32(reg) mod=0 reg=2 rm=6      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x17: /* 0Fh C3h 17h MOVNTI w32(r/m),w32(reg) mod=0 reg=2 rm=7      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x18: /* 0Fh C3h 18h MOVNTI w32(r/m),w32(reg) mod=0 reg=3 rm=0      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x19: /* 0Fh C3h 19h MOVNTI w32(r/m),w32(reg) mod=0 reg=3 rm=1      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x1A: /* 0Fh C3h 1Ah MOVNTI w32(r/m),w32(reg) mod=0 reg=3 rm=2      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x1B: /* 0Fh C3h 1Bh MOVNTI w32(r/m),w32(reg) mod=0 reg=3 rm=3      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x1C: /* 0Fh C3h 1Ch MOVNTI w32(r/m),w32(reg) mod=0 reg=3 rm=4      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x1D: /* 0Fh C3h 1Dh MOVNTI w32(r/m),w32(reg) mod=0 reg=3 rm=5      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x1E: /* 0Fh C3h 1Eh MOVNTI w32(r/m),w32(reg) mod=0 reg=3 rm=6      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x1F: /* 0Fh C3h 1Fh MOVNTI w32(r/m),w32(reg) mod=0 reg=3 rm=7      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x20: /* 0Fh C3h 20h MOVNTI w32(r/m),w32(reg) mod=0 reg=4 rm=0      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x21: /* 0Fh C3h 21h MOVNTI w32(r/m),w32(reg) mod=0 reg=4 rm=1      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x22: /* 0Fh C3h 22h MOVNTI w32(r/m),w32(reg) mod=0 reg=4 rm=2      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x23: /* 0Fh C3h 23h MOVNTI w32(r/m),w32(reg) mod=0 reg=4 rm=3      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x24: /* 0Fh C3h 24h MOVNTI w32(r/m),w32(reg) mod=0 reg=4 rm=4      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x25: /* 0Fh C3h 25h MOVNTI w32(r/m),w32(reg) mod=0 reg=4 rm=5      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x26: /* 0Fh C3h 26h MOVNTI w32(r/m),w32(reg) mod=0 reg=4 rm=6      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x27: /* 0Fh C3h 27h MOVNTI w32(r/m),w32(reg) mod=0 reg=4 rm=7      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x28: /* 0Fh C3h 28h MOVNTI w32(r/m),w32(reg) mod=0 reg=5 rm=0      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x29: /* 0Fh C3h 29h MOVNTI w32(r/m),w32(reg) mod=0 reg=5 rm=1      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x2A: /* 0Fh C3h 2Ah MOVNTI w32(r/m),w32(reg) mod=0 reg=5 rm=2      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x2B: /* 0Fh C3h 2Bh MOVNTI w32(r/m),w32(reg) mod=0 reg=5 rm=3      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x2C: /* 0Fh C3h 2Ch MOVNTI w32(r/m),w32(reg) mod=0 reg=5 rm=4      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x2D: /* 0Fh C3h 2Dh MOVNTI w32(r/m),w32(reg) mod=0 reg=5 rm=5      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x2E: /* 0Fh C3h 2Eh MOVNTI w32(r/m),w32(reg) mod=0 reg=5 rm=6      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x2F: /* 0Fh C3h 2Fh MOVNTI w32(r/m),w32(reg) mod=0 reg=5 rm=7      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x30: /* 0Fh C3h 30h MOVNTI w32(r/m),w32(reg) mod=0 reg=6 rm=0      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x31: /* 0Fh C3h 31h MOVNTI w32(r/m),w32(reg) mod=0 reg=6 rm=1      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x32: /* 0Fh C3h 32h MOVNTI w32(r/m),w32(reg) mod=0 reg=6 rm=2      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x33: /* 0Fh C3h 33h MOVNTI w32(r/m),w32(reg) mod=0 reg=6 rm=3      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x34: /* 0Fh C3h 34h MOVNTI w32(r/m),w32(reg) mod=0 reg=6 rm=4      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x35: /* 0Fh C3h 35h MOVNTI w32(r/m),w32(reg) mod=0 reg=6 rm=5      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x36: /* 0Fh C3h 36h MOVNTI w32(r/m),w32(reg) mod=0 reg=6 rm=6      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x37: /* 0Fh C3h 37h MOVNTI w32(r/m),w32(reg) mod=0 reg=6 rm=7      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x38: /* 0Fh C3h 38h MOVNTI w32(r/m),w32(reg) mod=0 reg=7 rm=0      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x39: /* 0Fh C3h 39h MOVNTI w32(r/m),w32(reg) mod=0 reg=7 rm=1      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x3A: /* 0Fh C3h 3Ah MOVNTI w32(r/m),w32(reg) mod=0 reg=7 rm=2      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x3B: /* 0Fh C3h 3Bh MOVNTI w32(r/m),w32(reg) mod=0 reg=7 rm=3      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x3C: /* 0Fh C3h 3Ch MOVNTI w32(r/m),w32(reg) mod=0 reg=7 rm=4      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x3D: /* 0Fh C3h 3Dh MOVNTI w32(r/m),w32(reg) mod=0 reg=7 rm=5      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x3E: /* 0Fh C3h 3Eh MOVNTI w32(r/m),w32(reg) mod=0 reg=7 rm=6      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x3F: /* 0Fh C3h 3Fh MOVNTI w32(r/m),w32(reg) mod=0 reg=7 rm=7      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x40: /* 0Fh C3h 40h MOVNTI w32(r/m),w32(reg) mod=1 reg=0 rm=0      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x41: /* 0Fh C3h 41h MOVNTI w32(r/m),w32(reg) mod=1 reg=0 rm=1      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x42: /* 0Fh C3h 42h MOVNTI w32(r/m),w32(reg) mod=1 reg=0 rm=2      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x43: /* 0Fh C3h 43h MOVNTI w32(r/m),w32(reg) mod=1 reg=0 rm=3      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x44: /* 0Fh C3h 44h MOVNTI w32(r/m),w32(reg) mod=1 reg=0 rm=4      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x45: /* 0Fh C3h 45h MOVNTI w32(r/m),w32(reg) mod=1 reg=0 rm=5      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x46: /* 0Fh C3h 46h MOVNTI w32(r/m),w32(reg) mod=1 reg=0 rm=6      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x47: /* 0Fh C3h 47h MOVNTI w32(r/m),w32(reg) mod=1 reg=0 rm=7      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x48: /* 0Fh C3h 48h MOVNTI w32(r/m),w32(reg) mod=1 reg=1 rm=0      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x49: /* 0Fh C3h 49h MOVNTI w32(r/m),w32(reg) mod=1 reg=1 rm=1      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x4A: /* 0Fh C3h 4Ah MOVNTI w32(r/m),w32(reg) mod=1 reg=1 rm=2      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x4B: /* 0Fh C3h 4Bh MOVNTI w32(r/m),w32(reg) mod=1 reg=1 rm=3      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x4C: /* 0Fh C3h 4Ch MOVNTI w32(r/m),w32(reg) mod=1 reg=1 rm=4      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x4D: /* 0Fh C3h 4Dh MOVNTI w32(r/m),w32(reg) mod=1 reg=1 rm=5      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x4E: /* 0Fh C3h 4Eh MOVNTI w32(r/m),w32(reg) mod=1 reg=1 rm=6      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x4F: /* 0Fh C3h 4Fh MOVNTI w32(r/m),w32(reg) mod=1 reg=1 rm=7      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x50: /* 0Fh C3h 50h MOVNTI w32(r/m),w32(reg) mod=1 reg=2 rm=0      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x51: /* 0Fh C3h 51h MOVNTI w32(r/m),w32(reg) mod=1 reg=2 rm=1      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x52: /* 0Fh C3h 52h MOVNTI w32(r/m),w32(reg) mod=1 reg=2 rm=2      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x53: /* 0Fh C3h 53h MOVNTI w32(r/m),w32(reg) mod=1 reg=2 rm=3      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x54: /* 0Fh C3h 54h MOVNTI w32(r/m),w32(reg) mod=1 reg=2 rm=4      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x55: /* 0Fh C3h 55h MOVNTI w32(r/m),w32(reg) mod=1 reg=2 rm=5      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x56: /* 0Fh C3h 56h MOVNTI w32(r/m),w32(reg) mod=1 reg=2 rm=6      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x57: /* 0Fh C3h 57h MOVNTI w32(r/m),w32(reg) mod=1 reg=2 rm=7      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x58: /* 0Fh C3h 58h MOVNTI w32(r/m),w32(reg) mod=1 reg=3 rm=0      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x59: /* 0Fh C3h 59h MOVNTI w32(r/m),w32(reg) mod=1 reg=3 rm=1      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x5A: /* 0Fh C3h 5Ah MOVNTI w32(r/m),w32(reg) mod=1 reg=3 rm=2      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x5B: /* 0Fh C3h 5Bh MOVNTI w32(r/m),w32(reg) mod=1 reg=3 rm=3      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x5C: /* 0Fh C3h 5Ch MOVNTI w32(r/m),w32(reg) mod=1 reg=3 rm=4      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x5D: /* 0Fh C3h 5Dh MOVNTI w32(r/m),w32(reg) mod=1 reg=3 rm=5      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x5E: /* 0Fh C3h 5Eh MOVNTI w32(r/m),w32(reg) mod=1 reg=3 rm=6      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x5F: /* 0Fh C3h 5Fh MOVNTI w32(r/m),w32(reg) mod=1 reg=3 rm=7      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x60: /* 0Fh C3h 60h MOVNTI w32(r/m),w32(reg) mod=1 reg=4 rm=0      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x61: /* 0Fh C3h 61h MOVNTI w32(r/m),w32(reg) mod=1 reg=4 rm=1      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x62: /* 0Fh C3h 62h MOVNTI w32(r/m),w32(reg) mod=1 reg=4 rm=2      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x63: /* 0Fh C3h 63h MOVNTI w32(r/m),w32(reg) mod=1 reg=4 rm=3      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x64: /* 0Fh C3h 64h MOVNTI w32(r/m),w32(reg) mod=1 reg=4 rm=4      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x65: /* 0Fh C3h 65h MOVNTI w32(r/m),w32(reg) mod=1 reg=4 rm=5      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x66: /* 0Fh C3h 66h MOVNTI w32(r/m),w32(reg) mod=1 reg=4 rm=6      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x67: /* 0Fh C3h 67h MOVNTI w32(r/m),w32(reg) mod=1 reg=4 rm=7      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x68: /* 0Fh C3h 68h MOVNTI w32(r/m),w32(reg) mod=1 reg=5 rm=0      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x69: /* 0Fh C3h 69h MOVNTI w32(r/m),w32(reg) mod=1 reg=5 rm=1      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x6A: /* 0Fh C3h 6Ah MOVNTI w32(r/m),w32(reg) mod=1 reg=5 rm=2      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x6B: /* 0Fh C3h 6Bh MOVNTI w32(r/m),w32(reg) mod=1 reg=5 rm=3      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x6C: /* 0Fh C3h 6Ch MOVNTI w32(r/m),w32(reg) mod=1 reg=5 rm=4      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x6D: /* 0Fh C3h 6Dh MOVNTI w32(r/m),w32(reg) mod=1 reg=5 rm=5      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x6E: /* 0Fh C3h 6Eh MOVNTI w32(r/m),w32(reg) mod=1 reg=5 rm=6      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x6F: /* 0Fh C3h 6Fh MOVNTI w32(r/m),w32(reg) mod=1 reg=5 rm=7      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x70: /* 0Fh C3h 70h MOVNTI w32(r/m),w32(reg) mod=1 reg=6 rm=0      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x71: /* 0Fh C3h 71h MOVNTI w32(r/m),w32(reg) mod=1 reg=6 rm=1      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x72: /* 0Fh C3h 72h MOVNTI w32(r/m),w32(reg) mod=1 reg=6 rm=2      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x73: /* 0Fh C3h 73h MOVNTI w32(r/m),w32(reg) mod=1 reg=6 rm=3      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x74: /* 0Fh C3h 74h MOVNTI w32(r/m),w32(reg) mod=1 reg=6 rm=4      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x75: /* 0Fh C3h 75h MOVNTI w32(r/m),w32(reg) mod=1 reg=6 rm=5      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x76: /* 0Fh C3h 76h MOVNTI w32(r/m),w32(reg) mod=1 reg=6 rm=6      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x77: /* 0Fh C3h 77h MOVNTI w32(r/m),w32(reg) mod=1 reg=6 rm=7      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x78: /* 0Fh C3h 78h MOVNTI w32(r/m),w32(reg) mod=1 reg=7 rm=0      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x79: /* 0Fh C3h 79h MOVNTI w32(r/m),w32(reg) mod=1 reg=7 rm=1      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x7A: /* 0Fh C3h 7Ah MOVNTI w32(r/m),w32(reg) mod=1 reg=7 rm=2      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x7B: /* 0Fh C3h 7Bh MOVNTI w32(r/m),w32(reg) mod=1 reg=7 rm=3      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x7C: /* 0Fh C3h 7Ch MOVNTI w32(r/m),w32(reg) mod=1 reg=7 rm=4      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x7D: /* 0Fh C3h 7Dh MOVNTI w32(r/m),w32(reg) mod=1 reg=7 rm=5      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x7E: /* 0Fh C3h 7Eh MOVNTI w32(r/m),w32(reg) mod=1 reg=7 rm=6      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x7F: /* 0Fh C3h 7Fh MOVNTI w32(r/m),w32(reg) mod=1 reg=7 rm=7      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x80: /* 0Fh C3h 80h MOVNTI w32(r/m),w32(reg) mod=2 reg=0 rm=0      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x81: /* 0Fh C3h 81h MOVNTI w32(r/m),w32(reg) mod=2 reg=0 rm=1      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x82: /* 0Fh C3h 82h MOVNTI w32(r/m),w32(reg) mod=2 reg=0 rm=2      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x83: /* 0Fh C3h 83h MOVNTI w32(r/m),w32(reg) mod=2 reg=0 rm=3      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x84: /* 0Fh C3h 84h MOVNTI w32(r/m),w32(reg) mod=2 reg=0 rm=4      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x85: /* 0Fh C3h 85h MOVNTI w32(r/m),w32(reg) mod=2 reg=0 rm=5      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x86: /* 0Fh C3h 86h MOVNTI w32(r/m),w32(reg) mod=2 reg=0 rm=6      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x87: /* 0Fh C3h 87h MOVNTI w32(r/m),w32(reg) mod=2 reg=0 rm=7      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x88: /* 0Fh C3h 88h MOVNTI w32(r/m),w32(reg) mod=2 reg=1 rm=0      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x89: /* 0Fh C3h 89h MOVNTI w32(r/m),w32(reg) mod=2 reg=1 rm=1      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x8A: /* 0Fh C3h 8Ah MOVNTI w32(r/m),w32(reg) mod=2 reg=1 rm=2      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x8B: /* 0Fh C3h 8Bh MOVNTI w32(r/m),w32(reg) mod=2 reg=1 rm=3      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x8C: /* 0Fh C3h 8Ch MOVNTI w32(r/m),w32(reg) mod=2 reg=1 rm=4      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x8D: /* 0Fh C3h 8Dh MOVNTI w32(r/m),w32(reg) mod=2 reg=1 rm=5      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x8E: /* 0Fh C3h 8Eh MOVNTI w32(r/m),w32(reg) mod=2 reg=1 rm=6      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x8F: /* 0Fh C3h 8Fh MOVNTI w32(r/m),w32(reg) mod=2 reg=1 rm=7      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x90: /* 0Fh C3h 90h MOVNTI w32(r/m),w32(reg) mod=2 reg=2 rm=0      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x91: /* 0Fh C3h 91h MOVNTI w32(r/m),w32(reg) mod=2 reg=2 rm=1      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x92: /* 0Fh C3h 92h MOVNTI w32(r/m),w32(reg) mod=2 reg=2 rm=2      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x93: /* 0Fh C3h 93h MOVNTI w32(r/m),w32(reg) mod=2 reg=2 rm=3      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x94: /* 0Fh C3h 94h MOVNTI w32(r/m),w32(reg) mod=2 reg=2 rm=4      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x95: /* 0Fh C3h 95h MOVNTI w32(r/m),w32(reg) mod=2 reg=2 rm=5      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x96: /* 0Fh C3h 96h MOVNTI w32(r/m),w32(reg) mod=2 reg=2 rm=6      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x97: /* 0Fh C3h 97h MOVNTI w32(r/m),w32(reg) mod=2 reg=2 rm=7      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x98: /* 0Fh C3h 98h MOVNTI w32(r/m),w32(reg) mod=2 reg=3 rm=0      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x99: /* 0Fh C3h 99h MOVNTI w32(r/m),w32(reg) mod=2 reg=3 rm=1      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x9A: /* 0Fh C3h 9Ah MOVNTI w32(r/m),w32(reg) mod=2 reg=3 rm=2      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x9B: /* 0Fh C3h 9Bh MOVNTI w32(r/m),w32(reg) mod=2 reg=3 rm=3      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x9C: /* 0Fh C3h 9Ch MOVNTI w32(r/m),w32(reg) mod=2 reg=3 rm=4      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x9D: /* 0Fh C3h 9Dh MOVNTI w32(r/m),w32(reg) mod=2 reg=3 rm=5      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x9E: /* 0Fh C3h 9Eh MOVNTI w32(r/m),w32(reg) mod=2 reg=3 rm=6      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0x9F: /* 0Fh C3h 9Fh MOVNTI w32(r/m),w32(reg) mod=2 reg=3 rm=7      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0xA0: /* 0Fh C3h A0h MOVNTI w32(r/m),w32(reg) mod=2 reg=4 rm=0      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0xA1: /* 0Fh C3h A1h MOVNTI w32(r/m),w32(reg) mod=2 reg=4 rm=1      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0xA2: /* 0Fh C3h A2h MOVNTI w32(r/m),w32(reg) mod=2 reg=4 rm=2      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0xA3: /* 0Fh C3h A3h MOVNTI w32(r/m),w32(reg) mod=2 reg=4 rm=3      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0xA4: /* 0Fh C3h A4h MOVNTI w32(r/m),w32(reg) mod=2 reg=4 rm=4      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0xA5: /* 0Fh C3h A5h MOVNTI w32(r/m),w32(reg) mod=2 reg=4 rm=5      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0xA6: /* 0Fh C3h A6h MOVNTI w32(r/m),w32(reg) mod=2 reg=4 rm=6      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0xA7: /* 0Fh C3h A7h MOVNTI w32(r/m),w32(reg) mod=2 reg=4 rm=7      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0xA8: /* 0Fh C3h A8h MOVNTI w32(r/m),w32(reg) mod=2 reg=5 rm=0      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0xA9: /* 0Fh C3h A9h MOVNTI w32(r/m),w32(reg) mod=2 reg=5 rm=1      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0xAA: /* 0Fh C3h AAh MOVNTI w32(r/m),w32(reg) mod=2 reg=5 rm=2      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0xAB: /* 0Fh C3h ABh MOVNTI w32(r/m),w32(reg) mod=2 reg=5 rm=3      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0xAC: /* 0Fh C3h ACh MOVNTI w32(r/m),w32(reg) mod=2 reg=5 rm=4      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0xAD: /* 0Fh C3h ADh MOVNTI w32(r/m),w32(reg) mod=2 reg=5 rm=5      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0xAE: /* 0Fh C3h AEh MOVNTI w32(r/m),w32(reg) mod=2 reg=5 rm=6      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0xAF: /* 0Fh C3h AFh MOVNTI w32(r/m),w32(reg) mod=2 reg=5 rm=7      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0xB0: /* 0Fh C3h B0h MOVNTI w32(r/m),w32(reg) mod=2 reg=6 rm=0      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0xB1: /* 0Fh C3h B1h MOVNTI w32(r/m),w32(reg) mod=2 reg=6 rm=1      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0xB2: /* 0Fh C3h B2h MOVNTI w32(r/m),w32(reg) mod=2 reg=6 rm=2      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0xB3: /* 0Fh C3h B3h MOVNTI w32(r/m),w32(reg) mod=2 reg=6 rm=3      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0xB4: /* 0Fh C3h B4h MOVNTI w32(r/m),w32(reg) mod=2 reg=6 rm=4      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0xB5: /* 0Fh C3h B5h MOVNTI w32(r/m),w32(reg) mod=2 reg=6 rm=5      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0xB6: /* 0Fh C3h B6h MOVNTI w32(r/m),w32(reg) mod=2 reg=6 rm=6      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0xB7: /* 0Fh C3h B7h MOVNTI w32(r/m),w32(reg) mod=2 reg=6 rm=7      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0xB8: /* 0Fh C3h B8h MOVNTI w32(r/m),w32(reg) mod=2 reg=7 rm=0      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0xB9: /* 0Fh C3h B9h MOVNTI w32(r/m),w32(reg) mod=2 reg=7 rm=1      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0xBA: /* 0Fh C3h BAh MOVNTI w32(r/m),w32(reg) mod=2 reg=7 rm=2      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0xBB: /* 0Fh C3h BBh MOVNTI w32(r/m),w32(reg) mod=2 reg=7 rm=3      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0xBC: /* 0Fh C3h BCh MOVNTI w32(r/m),w32(reg) mod=2 reg=7 rm=4      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0xBD: /* 0Fh C3h BDh MOVNTI w32(r/m),w32(reg) mod=2 reg=7 rm=5      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0xBE: /* 0Fh C3h BEh MOVNTI w32(r/m),w32(reg) mod=2 reg=7 rm=6      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                    case 0xBF: /* 0Fh C3h BFh MOVNTI w32(r/m),w32(reg) mod=2 reg=7 rm=7      spec: 0x0F 0xC3 mod/reg/rm mod!=3 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVNTI %s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"w32"),CPUregsN[4][mrm.reg()]);
                        break;
                    /* opcode 0Fh C3h C0h  not defined */
                    /* opcode 0Fh C3h C1h  not defined */
                    /* opcode 0Fh C3h C2h  not defined */
                    /* opcode 0Fh C3h C3h  not defined */
                    /* opcode 0Fh C3h C4h  not defined */
                    /* opcode 0Fh C3h C5h  not defined */
                    /* opcode 0Fh C3h C6h  not defined */
                    /* opcode 0Fh C3h C7h  not defined */
                    /* opcode 0Fh C3h C8h  not defined */
                    /* opcode 0Fh C3h C9h  not defined */
                    /* opcode 0Fh C3h CAh  not defined */
                    /* opcode 0Fh C3h CBh  not defined */
                    /* opcode 0Fh C3h CCh  not defined */
                    /* opcode 0Fh C3h CDh  not defined */
                    /* opcode 0Fh C3h CEh  not defined */
                    /* opcode 0Fh C3h CFh  not defined */
                    /* opcode 0Fh C3h D0h  not defined */
                    /* opcode 0Fh C3h D1h  not defined */
                    /* opcode 0Fh C3h D2h  not defined */
                    /* opcode 0Fh C3h D3h  not defined */
                    /* opcode 0Fh C3h D4h  not defined */
                    /* opcode 0Fh C3h D5h  not defined */
                    /* opcode 0Fh C3h D6h  not defined */
                    /* opcode 0Fh C3h D7h  not defined */
                    /* opcode 0Fh C3h D8h  not defined */
                    /* opcode 0Fh C3h D9h  not defined */
                    /* opcode 0Fh C3h DAh  not defined */
                    /* opcode 0Fh C3h DBh  not defined */
                    /* opcode 0Fh C3h DCh  not defined */
                    /* opcode 0Fh C3h DDh  not defined */
                    /* opcode 0Fh C3h DEh  not defined */
                    /* opcode 0Fh C3h DFh  not defined */
                    /* opcode 0Fh C3h E0h  not defined */
                    /* opcode 0Fh C3h E1h  not defined */
                    /* opcode 0Fh C3h E2h  not defined */
                    /* opcode 0Fh C3h E3h  not defined */
                    /* opcode 0Fh C3h E4h  not defined */
                    /* opcode 0Fh C3h E5h  not defined */
                    /* opcode 0Fh C3h E6h  not defined */
                    /* opcode 0Fh C3h E7h  not defined */
                    /* opcode 0Fh C3h E8h  not defined */
                    /* opcode 0Fh C3h E9h  not defined */
                    /* opcode 0Fh C3h EAh  not defined */
                    /* opcode 0Fh C3h EBh  not defined */
                    /* opcode 0Fh C3h ECh  not defined */
                    /* opcode 0Fh C3h EDh  not defined */
                    /* opcode 0Fh C3h EEh  not defined */
                    /* opcode 0Fh C3h EFh  not defined */
                    /* opcode 0Fh C3h F0h  not defined */
                    /* opcode 0Fh C3h F1h  not defined */
                    /* opcode 0Fh C3h F2h  not defined */
                    /* opcode 0Fh C3h F3h  not defined */
                    /* opcode 0Fh C3h F4h  not defined */
                    /* opcode 0Fh C3h F5h  not defined */
                    /* opcode 0Fh C3h F6h  not defined */
                    /* opcode 0Fh C3h F7h  not defined */
                    /* opcode 0Fh C3h F8h  not defined */
                    /* opcode 0Fh C3h F9h  not defined */
                    /* opcode 0Fh C3h FAh  not defined */
                    /* opcode 0Fh C3h FBh  not defined */
                    /* opcode 0Fh C3h FCh  not defined */
                    /* opcode 0Fh C3h FDh  not defined */
                    /* opcode 0Fh C3h FEh  not defined */
                    /* opcode 0Fh C3h FFh  not defined */
                    default:
                        goto _x86decode_illegal_opcode;
                };
/* End of opcodes starting with 0Fh C3h */
                break;
            case 0xC4: /* 0Fh C4h        spec:  */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                _x86decode_begin_code32_addr32_opcode_parse_0FC4:
/* Opcodes starting with 0Fh C4h */
                switch (mrm.byte) {
                    case 0x00: /* 0Fh C4h 00h PINSRW mmx(reg),w16(r/m),i mod=0 reg=0 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x01: /* 0Fh C4h 01h PINSRW mmx(reg),w16(r/m),i mod=0 reg=0 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x02: /* 0Fh C4h 02h PINSRW mmx(reg),w16(r/m),i mod=0 reg=0 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x03: /* 0Fh C4h 03h PINSRW mmx(reg),w16(r/m),i mod=0 reg=0 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x04: /* 0Fh C4h 04h PINSRW mmx(reg),w16(r/m),i mod=0 reg=0 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x05: /* 0Fh C4h 05h PINSRW mmx(reg),w16(r/m),i mod=0 reg=0 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x06: /* 0Fh C4h 06h PINSRW mmx(reg),w16(r/m),i mod=0 reg=0 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x07: /* 0Fh C4h 07h PINSRW mmx(reg),w16(r/m),i mod=0 reg=0 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x08: /* 0Fh C4h 08h PINSRW mmx(reg),w16(r/m),i mod=0 reg=1 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x09: /* 0Fh C4h 09h PINSRW mmx(reg),w16(r/m),i mod=0 reg=1 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x0A: /* 0Fh C4h 0Ah PINSRW mmx(reg),w16(r/m),i mod=0 reg=1 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x0B: /* 0Fh C4h 0Bh PINSRW mmx(reg),w16(r/m),i mod=0 reg=1 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x0C: /* 0Fh C4h 0Ch PINSRW mmx(reg),w16(r/m),i mod=0 reg=1 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x0D: /* 0Fh C4h 0Dh PINSRW mmx(reg),w16(r/m),i mod=0 reg=1 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x0E: /* 0Fh C4h 0Eh PINSRW mmx(reg),w16(r/m),i mod=0 reg=1 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x0F: /* 0Fh C4h 0Fh PINSRW mmx(reg),w16(r/m),i mod=0 reg=1 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x10: /* 0Fh C4h 10h PINSRW mmx(reg),w16(r/m),i mod=0 reg=2 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x11: /* 0Fh C4h 11h PINSRW mmx(reg),w16(r/m),i mod=0 reg=2 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x12: /* 0Fh C4h 12h PINSRW mmx(reg),w16(r/m),i mod=0 reg=2 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x13: /* 0Fh C4h 13h PINSRW mmx(reg),w16(r/m),i mod=0 reg=2 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x14: /* 0Fh C4h 14h PINSRW mmx(reg),w16(r/m),i mod=0 reg=2 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x15: /* 0Fh C4h 15h PINSRW mmx(reg),w16(r/m),i mod=0 reg=2 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x16: /* 0Fh C4h 16h PINSRW mmx(reg),w16(r/m),i mod=0 reg=2 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x17: /* 0Fh C4h 17h PINSRW mmx(reg),w16(r/m),i mod=0 reg=2 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x18: /* 0Fh C4h 18h PINSRW mmx(reg),w16(r/m),i mod=0 reg=3 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x19: /* 0Fh C4h 19h PINSRW mmx(reg),w16(r/m),i mod=0 reg=3 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x1A: /* 0Fh C4h 1Ah PINSRW mmx(reg),w16(r/m),i mod=0 reg=3 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x1B: /* 0Fh C4h 1Bh PINSRW mmx(reg),w16(r/m),i mod=0 reg=3 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x1C: /* 0Fh C4h 1Ch PINSRW mmx(reg),w16(r/m),i mod=0 reg=3 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x1D: /* 0Fh C4h 1Dh PINSRW mmx(reg),w16(r/m),i mod=0 reg=3 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x1E: /* 0Fh C4h 1Eh PINSRW mmx(reg),w16(r/m),i mod=0 reg=3 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x1F: /* 0Fh C4h 1Fh PINSRW mmx(reg),w16(r/m),i mod=0 reg=3 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x20: /* 0Fh C4h 20h PINSRW mmx(reg),w16(r/m),i mod=0 reg=4 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x21: /* 0Fh C4h 21h PINSRW mmx(reg),w16(r/m),i mod=0 reg=4 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x22: /* 0Fh C4h 22h PINSRW mmx(reg),w16(r/m),i mod=0 reg=4 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x23: /* 0Fh C4h 23h PINSRW mmx(reg),w16(r/m),i mod=0 reg=4 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x24: /* 0Fh C4h 24h PINSRW mmx(reg),w16(r/m),i mod=0 reg=4 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x25: /* 0Fh C4h 25h PINSRW mmx(reg),w16(r/m),i mod=0 reg=4 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x26: /* 0Fh C4h 26h PINSRW mmx(reg),w16(r/m),i mod=0 reg=4 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x27: /* 0Fh C4h 27h PINSRW mmx(reg),w16(r/m),i mod=0 reg=4 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x28: /* 0Fh C4h 28h PINSRW mmx(reg),w16(r/m),i mod=0 reg=5 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x29: /* 0Fh C4h 29h PINSRW mmx(reg),w16(r/m),i mod=0 reg=5 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x2A: /* 0Fh C4h 2Ah PINSRW mmx(reg),w16(r/m),i mod=0 reg=5 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x2B: /* 0Fh C4h 2Bh PINSRW mmx(reg),w16(r/m),i mod=0 reg=5 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x2C: /* 0Fh C4h 2Ch PINSRW mmx(reg),w16(r/m),i mod=0 reg=5 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x2D: /* 0Fh C4h 2Dh PINSRW mmx(reg),w16(r/m),i mod=0 reg=5 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x2E: /* 0Fh C4h 2Eh PINSRW mmx(reg),w16(r/m),i mod=0 reg=5 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x2F: /* 0Fh C4h 2Fh PINSRW mmx(reg),w16(r/m),i mod=0 reg=5 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x30: /* 0Fh C4h 30h PINSRW mmx(reg),w16(r/m),i mod=0 reg=6 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x31: /* 0Fh C4h 31h PINSRW mmx(reg),w16(r/m),i mod=0 reg=6 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x32: /* 0Fh C4h 32h PINSRW mmx(reg),w16(r/m),i mod=0 reg=6 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x33: /* 0Fh C4h 33h PINSRW mmx(reg),w16(r/m),i mod=0 reg=6 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x34: /* 0Fh C4h 34h PINSRW mmx(reg),w16(r/m),i mod=0 reg=6 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x35: /* 0Fh C4h 35h PINSRW mmx(reg),w16(r/m),i mod=0 reg=6 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x36: /* 0Fh C4h 36h PINSRW mmx(reg),w16(r/m),i mod=0 reg=6 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x37: /* 0Fh C4h 37h PINSRW mmx(reg),w16(r/m),i mod=0 reg=6 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x38: /* 0Fh C4h 38h PINSRW mmx(reg),w16(r/m),i mod=0 reg=7 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x39: /* 0Fh C4h 39h PINSRW mmx(reg),w16(r/m),i mod=0 reg=7 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x3A: /* 0Fh C4h 3Ah PINSRW mmx(reg),w16(r/m),i mod=0 reg=7 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x3B: /* 0Fh C4h 3Bh PINSRW mmx(reg),w16(r/m),i mod=0 reg=7 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x3C: /* 0Fh C4h 3Ch PINSRW mmx(reg),w16(r/m),i mod=0 reg=7 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x3D: /* 0Fh C4h 3Dh PINSRW mmx(reg),w16(r/m),i mod=0 reg=7 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x3E: /* 0Fh C4h 3Eh PINSRW mmx(reg),w16(r/m),i mod=0 reg=7 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x3F: /* 0Fh C4h 3Fh PINSRW mmx(reg),w16(r/m),i mod=0 reg=7 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x40: /* 0Fh C4h 40h PINSRW mmx(reg),w16(r/m),i mod=1 reg=0 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x41: /* 0Fh C4h 41h PINSRW mmx(reg),w16(r/m),i mod=1 reg=0 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x42: /* 0Fh C4h 42h PINSRW mmx(reg),w16(r/m),i mod=1 reg=0 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x43: /* 0Fh C4h 43h PINSRW mmx(reg),w16(r/m),i mod=1 reg=0 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x44: /* 0Fh C4h 44h PINSRW mmx(reg),w16(r/m),i mod=1 reg=0 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x45: /* 0Fh C4h 45h PINSRW mmx(reg),w16(r/m),i mod=1 reg=0 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x46: /* 0Fh C4h 46h PINSRW mmx(reg),w16(r/m),i mod=1 reg=0 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x47: /* 0Fh C4h 47h PINSRW mmx(reg),w16(r/m),i mod=1 reg=0 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x48: /* 0Fh C4h 48h PINSRW mmx(reg),w16(r/m),i mod=1 reg=1 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x49: /* 0Fh C4h 49h PINSRW mmx(reg),w16(r/m),i mod=1 reg=1 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x4A: /* 0Fh C4h 4Ah PINSRW mmx(reg),w16(r/m),i mod=1 reg=1 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x4B: /* 0Fh C4h 4Bh PINSRW mmx(reg),w16(r/m),i mod=1 reg=1 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x4C: /* 0Fh C4h 4Ch PINSRW mmx(reg),w16(r/m),i mod=1 reg=1 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x4D: /* 0Fh C4h 4Dh PINSRW mmx(reg),w16(r/m),i mod=1 reg=1 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x4E: /* 0Fh C4h 4Eh PINSRW mmx(reg),w16(r/m),i mod=1 reg=1 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x4F: /* 0Fh C4h 4Fh PINSRW mmx(reg),w16(r/m),i mod=1 reg=1 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x50: /* 0Fh C4h 50h PINSRW mmx(reg),w16(r/m),i mod=1 reg=2 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x51: /* 0Fh C4h 51h PINSRW mmx(reg),w16(r/m),i mod=1 reg=2 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x52: /* 0Fh C4h 52h PINSRW mmx(reg),w16(r/m),i mod=1 reg=2 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x53: /* 0Fh C4h 53h PINSRW mmx(reg),w16(r/m),i mod=1 reg=2 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x54: /* 0Fh C4h 54h PINSRW mmx(reg),w16(r/m),i mod=1 reg=2 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x55: /* 0Fh C4h 55h PINSRW mmx(reg),w16(r/m),i mod=1 reg=2 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x56: /* 0Fh C4h 56h PINSRW mmx(reg),w16(r/m),i mod=1 reg=2 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x57: /* 0Fh C4h 57h PINSRW mmx(reg),w16(r/m),i mod=1 reg=2 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x58: /* 0Fh C4h 58h PINSRW mmx(reg),w16(r/m),i mod=1 reg=3 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x59: /* 0Fh C4h 59h PINSRW mmx(reg),w16(r/m),i mod=1 reg=3 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x5A: /* 0Fh C4h 5Ah PINSRW mmx(reg),w16(r/m),i mod=1 reg=3 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x5B: /* 0Fh C4h 5Bh PINSRW mmx(reg),w16(r/m),i mod=1 reg=3 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x5C: /* 0Fh C4h 5Ch PINSRW mmx(reg),w16(r/m),i mod=1 reg=3 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x5D: /* 0Fh C4h 5Dh PINSRW mmx(reg),w16(r/m),i mod=1 reg=3 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x5E: /* 0Fh C4h 5Eh PINSRW mmx(reg),w16(r/m),i mod=1 reg=3 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x5F: /* 0Fh C4h 5Fh PINSRW mmx(reg),w16(r/m),i mod=1 reg=3 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x60: /* 0Fh C4h 60h PINSRW mmx(reg),w16(r/m),i mod=1 reg=4 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x61: /* 0Fh C4h 61h PINSRW mmx(reg),w16(r/m),i mod=1 reg=4 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x62: /* 0Fh C4h 62h PINSRW mmx(reg),w16(r/m),i mod=1 reg=4 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x63: /* 0Fh C4h 63h PINSRW mmx(reg),w16(r/m),i mod=1 reg=4 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x64: /* 0Fh C4h 64h PINSRW mmx(reg),w16(r/m),i mod=1 reg=4 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x65: /* 0Fh C4h 65h PINSRW mmx(reg),w16(r/m),i mod=1 reg=4 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x66: /* 0Fh C4h 66h PINSRW mmx(reg),w16(r/m),i mod=1 reg=4 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x67: /* 0Fh C4h 67h PINSRW mmx(reg),w16(r/m),i mod=1 reg=4 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x68: /* 0Fh C4h 68h PINSRW mmx(reg),w16(r/m),i mod=1 reg=5 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x69: /* 0Fh C4h 69h PINSRW mmx(reg),w16(r/m),i mod=1 reg=5 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x6A: /* 0Fh C4h 6Ah PINSRW mmx(reg),w16(r/m),i mod=1 reg=5 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x6B: /* 0Fh C4h 6Bh PINSRW mmx(reg),w16(r/m),i mod=1 reg=5 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x6C: /* 0Fh C4h 6Ch PINSRW mmx(reg),w16(r/m),i mod=1 reg=5 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x6D: /* 0Fh C4h 6Dh PINSRW mmx(reg),w16(r/m),i mod=1 reg=5 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x6E: /* 0Fh C4h 6Eh PINSRW mmx(reg),w16(r/m),i mod=1 reg=5 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x6F: /* 0Fh C4h 6Fh PINSRW mmx(reg),w16(r/m),i mod=1 reg=5 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x70: /* 0Fh C4h 70h PINSRW mmx(reg),w16(r/m),i mod=1 reg=6 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x71: /* 0Fh C4h 71h PINSRW mmx(reg),w16(r/m),i mod=1 reg=6 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x72: /* 0Fh C4h 72h PINSRW mmx(reg),w16(r/m),i mod=1 reg=6 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x73: /* 0Fh C4h 73h PINSRW mmx(reg),w16(r/m),i mod=1 reg=6 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x74: /* 0Fh C4h 74h PINSRW mmx(reg),w16(r/m),i mod=1 reg=6 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x75: /* 0Fh C4h 75h PINSRW mmx(reg),w16(r/m),i mod=1 reg=6 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x76: /* 0Fh C4h 76h PINSRW mmx(reg),w16(r/m),i mod=1 reg=6 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x77: /* 0Fh C4h 77h PINSRW mmx(reg),w16(r/m),i mod=1 reg=6 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x78: /* 0Fh C4h 78h PINSRW mmx(reg),w16(r/m),i mod=1 reg=7 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x79: /* 0Fh C4h 79h PINSRW mmx(reg),w16(r/m),i mod=1 reg=7 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x7A: /* 0Fh C4h 7Ah PINSRW mmx(reg),w16(r/m),i mod=1 reg=7 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x7B: /* 0Fh C4h 7Bh PINSRW mmx(reg),w16(r/m),i mod=1 reg=7 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x7C: /* 0Fh C4h 7Ch PINSRW mmx(reg),w16(r/m),i mod=1 reg=7 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x7D: /* 0Fh C4h 7Dh PINSRW mmx(reg),w16(r/m),i mod=1 reg=7 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x7E: /* 0Fh C4h 7Eh PINSRW mmx(reg),w16(r/m),i mod=1 reg=7 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x7F: /* 0Fh C4h 7Fh PINSRW mmx(reg),w16(r/m),i mod=1 reg=7 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x80: /* 0Fh C4h 80h PINSRW mmx(reg),w16(r/m),i mod=2 reg=0 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x81: /* 0Fh C4h 81h PINSRW mmx(reg),w16(r/m),i mod=2 reg=0 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x82: /* 0Fh C4h 82h PINSRW mmx(reg),w16(r/m),i mod=2 reg=0 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x83: /* 0Fh C4h 83h PINSRW mmx(reg),w16(r/m),i mod=2 reg=0 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x84: /* 0Fh C4h 84h PINSRW mmx(reg),w16(r/m),i mod=2 reg=0 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x85: /* 0Fh C4h 85h PINSRW mmx(reg),w16(r/m),i mod=2 reg=0 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x86: /* 0Fh C4h 86h PINSRW mmx(reg),w16(r/m),i mod=2 reg=0 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x87: /* 0Fh C4h 87h PINSRW mmx(reg),w16(r/m),i mod=2 reg=0 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x88: /* 0Fh C4h 88h PINSRW mmx(reg),w16(r/m),i mod=2 reg=1 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x89: /* 0Fh C4h 89h PINSRW mmx(reg),w16(r/m),i mod=2 reg=1 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x8A: /* 0Fh C4h 8Ah PINSRW mmx(reg),w16(r/m),i mod=2 reg=1 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x8B: /* 0Fh C4h 8Bh PINSRW mmx(reg),w16(r/m),i mod=2 reg=1 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x8C: /* 0Fh C4h 8Ch PINSRW mmx(reg),w16(r/m),i mod=2 reg=1 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x8D: /* 0Fh C4h 8Dh PINSRW mmx(reg),w16(r/m),i mod=2 reg=1 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x8E: /* 0Fh C4h 8Eh PINSRW mmx(reg),w16(r/m),i mod=2 reg=1 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x8F: /* 0Fh C4h 8Fh PINSRW mmx(reg),w16(r/m),i mod=2 reg=1 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x90: /* 0Fh C4h 90h PINSRW mmx(reg),w16(r/m),i mod=2 reg=2 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x91: /* 0Fh C4h 91h PINSRW mmx(reg),w16(r/m),i mod=2 reg=2 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x92: /* 0Fh C4h 92h PINSRW mmx(reg),w16(r/m),i mod=2 reg=2 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x93: /* 0Fh C4h 93h PINSRW mmx(reg),w16(r/m),i mod=2 reg=2 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x94: /* 0Fh C4h 94h PINSRW mmx(reg),w16(r/m),i mod=2 reg=2 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x95: /* 0Fh C4h 95h PINSRW mmx(reg),w16(r/m),i mod=2 reg=2 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x96: /* 0Fh C4h 96h PINSRW mmx(reg),w16(r/m),i mod=2 reg=2 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x97: /* 0Fh C4h 97h PINSRW mmx(reg),w16(r/m),i mod=2 reg=2 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x98: /* 0Fh C4h 98h PINSRW mmx(reg),w16(r/m),i mod=2 reg=3 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x99: /* 0Fh C4h 99h PINSRW mmx(reg),w16(r/m),i mod=2 reg=3 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x9A: /* 0Fh C4h 9Ah PINSRW mmx(reg),w16(r/m),i mod=2 reg=3 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x9B: /* 0Fh C4h 9Bh PINSRW mmx(reg),w16(r/m),i mod=2 reg=3 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x9C: /* 0Fh C4h 9Ch PINSRW mmx(reg),w16(r/m),i mod=2 reg=3 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x9D: /* 0Fh C4h 9Dh PINSRW mmx(reg),w16(r/m),i mod=2 reg=3 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x9E: /* 0Fh C4h 9Eh PINSRW mmx(reg),w16(r/m),i mod=2 reg=3 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0x9F: /* 0Fh C4h 9Fh PINSRW mmx(reg),w16(r/m),i mod=2 reg=3 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0xA0: /* 0Fh C4h A0h PINSRW mmx(reg),w16(r/m),i mod=2 reg=4 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0xA1: /* 0Fh C4h A1h PINSRW mmx(reg),w16(r/m),i mod=2 reg=4 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0xA2: /* 0Fh C4h A2h PINSRW mmx(reg),w16(r/m),i mod=2 reg=4 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0xA3: /* 0Fh C4h A3h PINSRW mmx(reg),w16(r/m),i mod=2 reg=4 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0xA4: /* 0Fh C4h A4h PINSRW mmx(reg),w16(r/m),i mod=2 reg=4 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0xA5: /* 0Fh C4h A5h PINSRW mmx(reg),w16(r/m),i mod=2 reg=4 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0xA6: /* 0Fh C4h A6h PINSRW mmx(reg),w16(r/m),i mod=2 reg=4 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0xA7: /* 0Fh C4h A7h PINSRW mmx(reg),w16(r/m),i mod=2 reg=4 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0xA8: /* 0Fh C4h A8h PINSRW mmx(reg),w16(r/m),i mod=2 reg=5 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0xA9: /* 0Fh C4h A9h PINSRW mmx(reg),w16(r/m),i mod=2 reg=5 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0xAA: /* 0Fh C4h AAh PINSRW mmx(reg),w16(r/m),i mod=2 reg=5 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0xAB: /* 0Fh C4h ABh PINSRW mmx(reg),w16(r/m),i mod=2 reg=5 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0xAC: /* 0Fh C4h ACh PINSRW mmx(reg),w16(r/m),i mod=2 reg=5 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0xAD: /* 0Fh C4h ADh PINSRW mmx(reg),w16(r/m),i mod=2 reg=5 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0xAE: /* 0Fh C4h AEh PINSRW mmx(reg),w16(r/m),i mod=2 reg=5 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0xAF: /* 0Fh C4h AFh PINSRW mmx(reg),w16(r/m),i mod=2 reg=5 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0xB0: /* 0Fh C4h B0h PINSRW mmx(reg),w16(r/m),i mod=2 reg=6 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0xB1: /* 0Fh C4h B1h PINSRW mmx(reg),w16(r/m),i mod=2 reg=6 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0xB2: /* 0Fh C4h B2h PINSRW mmx(reg),w16(r/m),i mod=2 reg=6 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0xB3: /* 0Fh C4h B3h PINSRW mmx(reg),w16(r/m),i mod=2 reg=6 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0xB4: /* 0Fh C4h B4h PINSRW mmx(reg),w16(r/m),i mod=2 reg=6 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0xB5: /* 0Fh C4h B5h PINSRW mmx(reg),w16(r/m),i mod=2 reg=6 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0xB6: /* 0Fh C4h B6h PINSRW mmx(reg),w16(r/m),i mod=2 reg=6 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0xB7: /* 0Fh C4h B7h PINSRW mmx(reg),w16(r/m),i mod=2 reg=6 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0xB8: /* 0Fh C4h B8h PINSRW mmx(reg),w16(r/m),i mod=2 reg=7 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0xB9: /* 0Fh C4h B9h PINSRW mmx(reg),w16(r/m),i mod=2 reg=7 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0xBA: /* 0Fh C4h BAh PINSRW mmx(reg),w16(r/m),i mod=2 reg=7 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0xBB: /* 0Fh C4h BBh PINSRW mmx(reg),w16(r/m),i mod=2 reg=7 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0xBC: /* 0Fh C4h BCh PINSRW mmx(reg),w16(r/m),i mod=2 reg=7 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0xBD: /* 0Fh C4h BDh PINSRW mmx(reg),w16(r/m),i mod=2 reg=7 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0xBE: /* 0Fh C4h BEh PINSRW mmx(reg),w16(r/m),i mod=2 reg=7 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                    case 0xBF: /* 0Fh C4h BFh PINSRW mmx(reg),w16(r/m),i mod=2 reg=7 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 */
                        imm=IPFB();
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PINSRW MM%u,%s,0x%02lX",mrm.reg(),IPDecPrint32(mrm,sib,disp,2,RC_REG,"w16"),(unsigned long)((uint32_t)imm));
                        break;
                    case 0xC0: /* 0Fh C4h C0h PINSRW mmx(reg),w32(r/m),i mod=3 reg=0 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xC1: /* 0Fh C4h C1h PINSRW mmx(reg),w32(r/m),i mod=3 reg=0 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xC2: /* 0Fh C4h C2h PINSRW mmx(reg),w32(r/m),i mod=3 reg=0 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xC3: /* 0Fh C4h C3h PINSRW mmx(reg),w32(r/m),i mod=3 reg=0 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xC4: /* 0Fh C4h C4h PINSRW mmx(reg),w32(r/m),i mod=3 reg=0 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xC5: /* 0Fh C4h C5h PINSRW mmx(reg),w32(r/m),i mod=3 reg=0 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xC6: /* 0Fh C4h C6h PINSRW mmx(reg),w32(r/m),i mod=3 reg=0 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xC7: /* 0Fh C4h C7h PINSRW mmx(reg),w32(r/m),i mod=3 reg=0 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xC8: /* 0Fh C4h C8h PINSRW mmx(reg),w32(r/m),i mod=3 reg=1 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xC9: /* 0Fh C4h C9h PINSRW mmx(reg),w32(r/m),i mod=3 reg=1 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xCA: /* 0Fh C4h CAh PINSRW mmx(reg),w32(r/m),i mod=3 reg=1 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xCB: /* 0Fh C4h CBh PINSRW mmx(reg),w32(r/m),i mod=3 reg=1 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xCC: /* 0Fh C4h CCh PINSRW mmx(reg),w32(r/m),i mod=3 reg=1 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xCD: /* 0Fh C4h CDh PINSRW mmx(reg),w32(r/m),i mod=3 reg=1 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xCE: /* 0Fh C4h CEh PINSRW mmx(reg),w32(r/m),i mod=3 reg=1 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xCF: /* 0Fh C4h CFh PINSRW mmx(reg),w32(r/m),i mod=3 reg=1 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xD0: /* 0Fh C4h D0h PINSRW mmx(reg),w32(r/m),i mod=3 reg=2 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xD1: /* 0Fh C4h D1h PINSRW mmx(reg),w32(r/m),i mod=3 reg=2 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xD2: /* 0Fh C4h D2h PINSRW mmx(reg),w32(r/m),i mod=3 reg=2 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xD3: /* 0Fh C4h D3h PINSRW mmx(reg),w32(r/m),i mod=3 reg=2 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xD4: /* 0Fh C4h D4h PINSRW mmx(reg),w32(r/m),i mod=3 reg=2 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xD5: /* 0Fh C4h D5h PINSRW mmx(reg),w32(r/m),i mod=3 reg=2 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xD6: /* 0Fh C4h D6h PINSRW mmx(reg),w32(r/m),i mod=3 reg=2 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xD7: /* 0Fh C4h D7h PINSRW mmx(reg),w32(r/m),i mod=3 reg=2 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xD8: /* 0Fh C4h D8h PINSRW mmx(reg),w32(r/m),i mod=3 reg=3 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xD9: /* 0Fh C4h D9h PINSRW mmx(reg),w32(r/m),i mod=3 reg=3 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xDA: /* 0Fh C4h DAh PINSRW mmx(reg),w32(r/m),i mod=3 reg=3 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xDB: /* 0Fh C4h DBh PINSRW mmx(reg),w32(r/m),i mod=3 reg=3 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xDC: /* 0Fh C4h DCh PINSRW mmx(reg),w32(r/m),i mod=3 reg=3 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xDD: /* 0Fh C4h DDh PINSRW mmx(reg),w32(r/m),i mod=3 reg=3 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xDE: /* 0Fh C4h DEh PINSRW mmx(reg),w32(r/m),i mod=3 reg=3 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xDF: /* 0Fh C4h DFh PINSRW mmx(reg),w32(r/m),i mod=3 reg=3 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xE0: /* 0Fh C4h E0h PINSRW mmx(reg),w32(r/m),i mod=3 reg=4 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xE1: /* 0Fh C4h E1h PINSRW mmx(reg),w32(r/m),i mod=3 reg=4 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xE2: /* 0Fh C4h E2h PINSRW mmx(reg),w32(r/m),i mod=3 reg=4 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xE3: /* 0Fh C4h E3h PINSRW mmx(reg),w32(r/m),i mod=3 reg=4 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xE4: /* 0Fh C4h E4h PINSRW mmx(reg),w32(r/m),i mod=3 reg=4 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xE5: /* 0Fh C4h E5h PINSRW mmx(reg),w32(r/m),i mod=3 reg=4 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xE6: /* 0Fh C4h E6h PINSRW mmx(reg),w32(r/m),i mod=3 reg=4 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xE7: /* 0Fh C4h E7h PINSRW mmx(reg),w32(r/m),i mod=3 reg=4 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xE8: /* 0Fh C4h E8h PINSRW mmx(reg),w32(r/m),i mod=3 reg=5 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xE9: /* 0Fh C4h E9h PINSRW mmx(reg),w32(r/m),i mod=3 reg=5 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xEA: /* 0Fh C4h EAh PINSRW mmx(reg),w32(r/m),i mod=3 reg=5 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xEB: /* 0Fh C4h EBh PINSRW mmx(reg),w32(r/m),i mod=3 reg=5 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xEC: /* 0Fh C4h ECh PINSRW mmx(reg),w32(r/m),i mod=3 reg=5 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xED: /* 0Fh C4h EDh PINSRW mmx(reg),w32(r/m),i mod=3 reg=5 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xEE: /* 0Fh C4h EEh PINSRW mmx(reg),w32(r/m),i mod=3 reg=5 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xEF: /* 0Fh C4h EFh PINSRW mmx(reg),w32(r/m),i mod=3 reg=5 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xF0: /* 0Fh C4h F0h PINSRW mmx(reg),w32(r/m),i mod=3 reg=6 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xF1: /* 0Fh C4h F1h PINSRW mmx(reg),w32(r/m),i mod=3 reg=6 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xF2: /* 0Fh C4h F2h PINSRW mmx(reg),w32(r/m),i mod=3 reg=6 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xF3: /* 0Fh C4h F3h PINSRW mmx(reg),w32(r/m),i mod=3 reg=6 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xF4: /* 0Fh C4h F4h PINSRW mmx(reg),w32(r/m),i mod=3 reg=6 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xF5: /* 0Fh C4h F5h PINSRW mmx(reg),w32(r/m),i mod=3 reg=6 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xF6: /* 0Fh C4h F6h PINSRW mmx(reg),w32(r/m),i mod=3 reg=6 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xF7: /* 0Fh C4h F7h PINSRW mmx(reg),w32(r/m),i mod=3 reg=6 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xF8: /* 0Fh C4h F8h PINSRW mmx(reg),w32(r/m),i mod=3 reg=7 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xF9: /* 0Fh C4h F9h PINSRW mmx(reg),w32(r/m),i mod=3 reg=7 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xFA: /* 0Fh C4h FAh PINSRW mmx(reg),w32(r/m),i mod=3 reg=7 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xFB: /* 0Fh C4h FBh PINSRW mmx(reg),w32(r/m),i mod=3 reg=7 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xFC: /* 0Fh C4h FCh PINSRW mmx(reg),w32(r/m),i mod=3 reg=7 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xFD: /* 0Fh C4h FDh PINSRW mmx(reg),w32(r/m),i mod=3 reg=7 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xFE: /* 0Fh C4h FEh PINSRW mmx(reg),w32(r/m),i mod=3 reg=7 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                    case 0xFF: /* 0Fh C4h FFh PINSRW mmx(reg),w32(r/m),i mod=3 reg=7 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 */
                        imm=IPFB();
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PINSRW MM%u,%s,0x%02lX",mrm.reg(),IPDecPrint32(mrm,sib,disp,4,RC_REG,"w32"),(unsigned long)((uint32_t)imm));
                        break;
                    default:
                        goto _x86decode_illegal_opcode;
                };
/* End of opcodes starting with 0Fh C4h */
                break;
            case 0xC5: /* 0Fh C5h        spec:  */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                _x86decode_begin_code32_addr32_opcode_parse_0FC5:
/* Opcodes starting with 0Fh C5h */
                switch (mrm.byte) {
                    /* opcode 0Fh C5h 00h  not defined */
                    /* opcode 0Fh C5h 01h  not defined */
                    /* opcode 0Fh C5h 02h  not defined */
                    /* opcode 0Fh C5h 03h  not defined */
                    /* opcode 0Fh C5h 04h  not defined */
                    /* opcode 0Fh C5h 05h  not defined */
                    /* opcode 0Fh C5h 06h  not defined */
                    /* opcode 0Fh C5h 07h  not defined */
                    /* opcode 0Fh C5h 08h  not defined */
                    /* opcode 0Fh C5h 09h  not defined */
                    /* opcode 0Fh C5h 0Ah  not defined */
                    /* opcode 0Fh C5h 0Bh  not defined */
                    /* opcode 0Fh C5h 0Ch  not defined */
                    /* opcode 0Fh C5h 0Dh  not defined */
                    /* opcode 0Fh C5h 0Eh  not defined */
                    /* opcode 0Fh C5h 0Fh  not defined */
                    /* opcode 0Fh C5h 10h  not defined */
                    /* opcode 0Fh C5h 11h  not defined */
                    /* opcode 0Fh C5h 12h  not defined */
                    /* opcode 0Fh C5h 13h  not defined */
                    /* opcode 0Fh C5h 14h  not defined */
                    /* opcode 0Fh C5h 15h  not defined */
                    /* opcode 0Fh C5h 16h  not defined */
                    /* opcode 0Fh C5h 17h  not defined */
                    /* opcode 0Fh C5h 18h  not defined */
                    /* opcode 0Fh C5h 19h  not defined */
                    /* opcode 0Fh C5h 1Ah  not defined */
                    /* opcode 0Fh C5h 1Bh  not defined */
                    /* opcode 0Fh C5h 1Ch  not defined */
                    /* opcode 0Fh C5h 1Dh  not defined */
                    /* opcode 0Fh C5h 1Eh  not defined */
                    /* opcode 0Fh C5h 1Fh  not defined */
                    /* opcode 0Fh C5h 20h  not defined */
                    /* opcode 0Fh C5h 21h  not defined */
                    /* opcode 0Fh C5h 22h  not defined */
                    /* opcode 0Fh C5h 23h  not defined */
                    /* opcode 0Fh C5h 24h  not defined */
                    /* opcode 0Fh C5h 25h  not defined */
                    /* opcode 0Fh C5h 26h  not defined */
                    /* opcode 0Fh C5h 27h  not defined */
                    /* opcode 0Fh C5h 28h  not defined */
                    /* opcode 0Fh C5h 29h  not defined */
                    /* opcode 0Fh C5h 2Ah  not defined */
                    /* opcode 0Fh C5h 2Bh  not defined */
                    /* opcode 0Fh C5h 2Ch  not defined */
                    /* opcode 0Fh C5h 2Dh  not defined */
                    /* opcode 0Fh C5h 2Eh  not defined */
                    /* opcode 0Fh C5h 2Fh  not defined */
                    /* opcode 0Fh C5h 30h  not defined */
                    /* opcode 0Fh C5h 31h  not defined */
                    /* opcode 0Fh C5h 32h  not defined */
                    /* opcode 0Fh C5h 33h  not defined */
                    /* opcode 0Fh C5h 34h  not defined */
                    /* opcode 0Fh C5h 35h  not defined */
                    /* opcode 0Fh C5h 36h  not defined */
                    /* opcode 0Fh C5h 37h  not defined */
                    /* opcode 0Fh C5h 38h  not defined */
                    /* opcode 0Fh C5h 39h  not defined */
                    /* opcode 0Fh C5h 3Ah  not defined */
                    /* opcode 0Fh C5h 3Bh  not defined */
                    /* opcode 0Fh C5h 3Ch  not defined */
                    /* opcode 0Fh C5h 3Dh  not defined */
                    /* opcode 0Fh C5h 3Eh  not defined */
                    /* opcode 0Fh C5h 3Fh  not defined */
                    /* opcode 0Fh C5h 40h  not defined */
                    /* opcode 0Fh C5h 41h  not defined */
                    /* opcode 0Fh C5h 42h  not defined */
                    /* opcode 0Fh C5h 43h  not defined */
                    /* opcode 0Fh C5h 44h  not defined */
                    /* opcode 0Fh C5h 45h  not defined */
                    /* opcode 0Fh C5h 46h  not defined */
                    /* opcode 0Fh C5h 47h  not defined */
                    /* opcode 0Fh C5h 48h  not defined */
                    /* opcode 0Fh C5h 49h  not defined */
                    /* opcode 0Fh C5h 4Ah  not defined */
                    /* opcode 0Fh C5h 4Bh  not defined */
                    /* opcode 0Fh C5h 4Ch  not defined */
                    /* opcode 0Fh C5h 4Dh  not defined */
                    /* opcode 0Fh C5h 4Eh  not defined */
                    /* opcode 0Fh C5h 4Fh  not defined */
                    /* opcode 0Fh C5h 50h  not defined */
                    /* opcode 0Fh C5h 51h  not defined */
                    /* opcode 0Fh C5h 52h  not defined */
                    /* opcode 0Fh C5h 53h  not defined */
                    /* opcode 0Fh C5h 54h  not defined */
                    /* opcode 0Fh C5h 55h  not defined */
                    /* opcode 0Fh C5h 56h  not defined */
                    /* opcode 0Fh C5h 57h  not defined */
                    /* opcode 0Fh C5h 58h  not defined */
                    /* opcode 0Fh C5h 59h  not defined */
                    /* opcode 0Fh C5h 5Ah  not defined */
                    /* opcode 0Fh C5h 5Bh  not defined */
                    /* opcode 0Fh C5h 5Ch  not defined */
                    /* opcode 0Fh C5h 5Dh  not defined */
                    /* opcode 0Fh C5h 5Eh  not defined */
                    /* opcode 0Fh C5h 5Fh  not defined */
                    /* opcode 0Fh C5h 60h  not defined */
                    /* opcode 0Fh C5h 61h  not defined */
                    /* opcode 0Fh C5h 62h  not defined */
                    /* opcode 0Fh C5h 63h  not defined */
                    /* opcode 0Fh C5h 64h  not defined */
                    /* opcode 0Fh C5h 65h  not defined */
                    /* opcode 0Fh C5h 66h  not defined */
                    /* opcode 0Fh C5h 67h  not defined */
                    /* opcode 0Fh C5h 68h  not defined */
                    /* opcode 0Fh C5h 69h  not defined */
                    /* opcode 0Fh C5h 6Ah  not defined */
                    /* opcode 0Fh C5h 6Bh  not defined */
                    /* opcode 0Fh C5h 6Ch  not defined */
                    /* opcode 0Fh C5h 6Dh  not defined */
                    /* opcode 0Fh C5h 6Eh  not defined */
                    /* opcode 0Fh C5h 6Fh  not defined */
                    /* opcode 0Fh C5h 70h  not defined */
                    /* opcode 0Fh C5h 71h  not defined */
                    /* opcode 0Fh C5h 72h  not defined */
                    /* opcode 0Fh C5h 73h  not defined */
                    /* opcode 0Fh C5h 74h  not defined */
                    /* opcode 0Fh C5h 75h  not defined */
                    /* opcode 0Fh C5h 76h  not defined */
                    /* opcode 0Fh C5h 77h  not defined */
                    /* opcode 0Fh C5h 78h  not defined */
                    /* opcode 0Fh C5h 79h  not defined */
                    /* opcode 0Fh C5h 7Ah  not defined */
                    /* opcode 0Fh C5h 7Bh  not defined */
                    /* opcode 0Fh C5h 7Ch  not defined */
                    /* opcode 0Fh C5h 7Dh  not defined */
                    /* opcode 0Fh C5h 7Eh  not defined */
                    /* opcode 0Fh C5h 7Fh  not defined */
                    /* opcode 0Fh C5h 80h  not defined */
                    /* opcode 0Fh C5h 81h  not defined */
                    /* opcode 0Fh C5h 82h  not defined */
                    /* opcode 0Fh C5h 83h  not defined */
                    /* opcode 0Fh C5h 84h  not defined */
                    /* opcode 0Fh C5h 85h  not defined */
                    /* opcode 0Fh C5h 86h  not defined */
                    /* opcode 0Fh C5h 87h  not defined */
                    /* opcode 0Fh C5h 88h  not defined */
                    /* opcode 0Fh C5h 89h  not defined */
                    /* opcode 0Fh C5h 8Ah  not defined */
                    /* opcode 0Fh C5h 8Bh  not defined */
                    /* opcode 0Fh C5h 8Ch  not defined */
                    /* opcode 0Fh C5h 8Dh  not defined */
                    /* opcode 0Fh C5h 8Eh  not defined */
                    /* opcode 0Fh C5h 8Fh  not defined */
                    /* opcode 0Fh C5h 90h  not defined */
                    /* opcode 0Fh C5h 91h  not defined */
                    /* opcode 0Fh C5h 92h  not defined */
                    /* opcode 0Fh C5h 93h  not defined */
                    /* opcode 0Fh C5h 94h  not defined */
                    /* opcode 0Fh C5h 95h  not defined */
                    /* opcode 0Fh C5h 96h  not defined */
                    /* opcode 0Fh C5h 97h  not defined */
                    /* opcode 0Fh C5h 98h  not defined */
                    /* opcode 0Fh C5h 99h  not defined */
                    /* opcode 0Fh C5h 9Ah  not defined */
                    /* opcode 0Fh C5h 9Bh  not defined */
                    /* opcode 0Fh C5h 9Ch  not defined */
                    /* opcode 0Fh C5h 9Dh  not defined */
                    /* opcode 0Fh C5h 9Eh  not defined */
                    /* opcode 0Fh C5h 9Fh  not defined */
                    /* opcode 0Fh C5h A0h  not defined */
                    /* opcode 0Fh C5h A1h  not defined */
                    /* opcode 0Fh C5h A2h  not defined */
                    /* opcode 0Fh C5h A3h  not defined */
                    /* opcode 0Fh C5h A4h  not defined */
                    /* opcode 0Fh C5h A5h  not defined */
                    /* opcode 0Fh C5h A6h  not defined */
                    /* opcode 0Fh C5h A7h  not defined */
                    /* opcode 0Fh C5h A8h  not defined */
                    /* opcode 0Fh C5h A9h  not defined */
                    /* opcode 0Fh C5h AAh  not defined */
                    /* opcode 0Fh C5h ABh  not defined */
                    /* opcode 0Fh C5h ACh  not defined */
                    /* opcode 0Fh C5h ADh  not defined */
                    /* opcode 0Fh C5h AEh  not defined */
                    /* opcode 0Fh C5h AFh  not defined */
                    /* opcode 0Fh C5h B0h  not defined */
                    /* opcode 0Fh C5h B1h  not defined */
                    /* opcode 0Fh C5h B2h  not defined */
                    /* opcode 0Fh C5h B3h  not defined */
                    /* opcode 0Fh C5h B4h  not defined */
                    /* opcode 0Fh C5h B5h  not defined */
                    /* opcode 0Fh C5h B6h  not defined */
                    /* opcode 0Fh C5h B7h  not defined */
                    /* opcode 0Fh C5h B8h  not defined */
                    /* opcode 0Fh C5h B9h  not defined */
                    /* opcode 0Fh C5h BAh  not defined */
                    /* opcode 0Fh C5h BBh  not defined */
                    /* opcode 0Fh C5h BCh  not defined */
                    /* opcode 0Fh C5h BDh  not defined */
                    /* opcode 0Fh C5h BEh  not defined */
                    /* opcode 0Fh C5h BFh  not defined */
                    case 0xC0: /* 0Fh C5h C0h PEXTRW w32(reg),mmx(r/m),i mod=3 reg=0 rm=0      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xC1: /* 0Fh C5h C1h PEXTRW w32(reg),mmx(r/m),i mod=3 reg=0 rm=1      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xC2: /* 0Fh C5h C2h PEXTRW w32(reg),mmx(r/m),i mod=3 reg=0 rm=2      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xC3: /* 0Fh C5h C3h PEXTRW w32(reg),mmx(r/m),i mod=3 reg=0 rm=3      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xC4: /* 0Fh C5h C4h PEXTRW w32(reg),mmx(r/m),i mod=3 reg=0 rm=4      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xC5: /* 0Fh C5h C5h PEXTRW w32(reg),mmx(r/m),i mod=3 reg=0 rm=5      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xC6: /* 0Fh C5h C6h PEXTRW w32(reg),mmx(r/m),i mod=3 reg=0 rm=6      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xC7: /* 0Fh C5h C7h PEXTRW w32(reg),mmx(r/m),i mod=3 reg=0 rm=7      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xC8: /* 0Fh C5h C8h PEXTRW w32(reg),mmx(r/m),i mod=3 reg=1 rm=0      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xC9: /* 0Fh C5h C9h PEXTRW w32(reg),mmx(r/m),i mod=3 reg=1 rm=1      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xCA: /* 0Fh C5h CAh PEXTRW w32(reg),mmx(r/m),i mod=3 reg=1 rm=2      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xCB: /* 0Fh C5h CBh PEXTRW w32(reg),mmx(r/m),i mod=3 reg=1 rm=3      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xCC: /* 0Fh C5h CCh PEXTRW w32(reg),mmx(r/m),i mod=3 reg=1 rm=4      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xCD: /* 0Fh C5h CDh PEXTRW w32(reg),mmx(r/m),i mod=3 reg=1 rm=5      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xCE: /* 0Fh C5h CEh PEXTRW w32(reg),mmx(r/m),i mod=3 reg=1 rm=6      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xCF: /* 0Fh C5h CFh PEXTRW w32(reg),mmx(r/m),i mod=3 reg=1 rm=7      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xD0: /* 0Fh C5h D0h PEXTRW w32(reg),mmx(r/m),i mod=3 reg=2 rm=0      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xD1: /* 0Fh C5h D1h PEXTRW w32(reg),mmx(r/m),i mod=3 reg=2 rm=1      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xD2: /* 0Fh C5h D2h PEXTRW w32(reg),mmx(r/m),i mod=3 reg=2 rm=2      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xD3: /* 0Fh C5h D3h PEXTRW w32(reg),mmx(r/m),i mod=3 reg=2 rm=3      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xD4: /* 0Fh C5h D4h PEXTRW w32(reg),mmx(r/m),i mod=3 reg=2 rm=4      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xD5: /* 0Fh C5h D5h PEXTRW w32(reg),mmx(r/m),i mod=3 reg=2 rm=5      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xD6: /* 0Fh C5h D6h PEXTRW w32(reg),mmx(r/m),i mod=3 reg=2 rm=6      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xD7: /* 0Fh C5h D7h PEXTRW w32(reg),mmx(r/m),i mod=3 reg=2 rm=7      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xD8: /* 0Fh C5h D8h PEXTRW w32(reg),mmx(r/m),i mod=3 reg=3 rm=0      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xD9: /* 0Fh C5h D9h PEXTRW w32(reg),mmx(r/m),i mod=3 reg=3 rm=1      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xDA: /* 0Fh C5h DAh PEXTRW w32(reg),mmx(r/m),i mod=3 reg=3 rm=2      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xDB: /* 0Fh C5h DBh PEXTRW w32(reg),mmx(r/m),i mod=3 reg=3 rm=3      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xDC: /* 0Fh C5h DCh PEXTRW w32(reg),mmx(r/m),i mod=3 reg=3 rm=4      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xDD: /* 0Fh C5h DDh PEXTRW w32(reg),mmx(r/m),i mod=3 reg=3 rm=5      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xDE: /* 0Fh C5h DEh PEXTRW w32(reg),mmx(r/m),i mod=3 reg=3 rm=6      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xDF: /* 0Fh C5h DFh PEXTRW w32(reg),mmx(r/m),i mod=3 reg=3 rm=7      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xE0: /* 0Fh C5h E0h PEXTRW w32(reg),mmx(r/m),i mod=3 reg=4 rm=0      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xE1: /* 0Fh C5h E1h PEXTRW w32(reg),mmx(r/m),i mod=3 reg=4 rm=1      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xE2: /* 0Fh C5h E2h PEXTRW w32(reg),mmx(r/m),i mod=3 reg=4 rm=2      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xE3: /* 0Fh C5h E3h PEXTRW w32(reg),mmx(r/m),i mod=3 reg=4 rm=3      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xE4: /* 0Fh C5h E4h PEXTRW w32(reg),mmx(r/m),i mod=3 reg=4 rm=4      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xE5: /* 0Fh C5h E5h PEXTRW w32(reg),mmx(r/m),i mod=3 reg=4 rm=5      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xE6: /* 0Fh C5h E6h PEXTRW w32(reg),mmx(r/m),i mod=3 reg=4 rm=6      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xE7: /* 0Fh C5h E7h PEXTRW w32(reg),mmx(r/m),i mod=3 reg=4 rm=7      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xE8: /* 0Fh C5h E8h PEXTRW w32(reg),mmx(r/m),i mod=3 reg=5 rm=0      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xE9: /* 0Fh C5h E9h PEXTRW w32(reg),mmx(r/m),i mod=3 reg=5 rm=1      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xEA: /* 0Fh C5h EAh PEXTRW w32(reg),mmx(r/m),i mod=3 reg=5 rm=2      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xEB: /* 0Fh C5h EBh PEXTRW w32(reg),mmx(r/m),i mod=3 reg=5 rm=3      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xEC: /* 0Fh C5h ECh PEXTRW w32(reg),mmx(r/m),i mod=3 reg=5 rm=4      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xED: /* 0Fh C5h EDh PEXTRW w32(reg),mmx(r/m),i mod=3 reg=5 rm=5      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xEE: /* 0Fh C5h EEh PEXTRW w32(reg),mmx(r/m),i mod=3 reg=5 rm=6      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xEF: /* 0Fh C5h EFh PEXTRW w32(reg),mmx(r/m),i mod=3 reg=5 rm=7      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xF0: /* 0Fh C5h F0h PEXTRW w32(reg),mmx(r/m),i mod=3 reg=6 rm=0      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xF1: /* 0Fh C5h F1h PEXTRW w32(reg),mmx(r/m),i mod=3 reg=6 rm=1      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xF2: /* 0Fh C5h F2h PEXTRW w32(reg),mmx(r/m),i mod=3 reg=6 rm=2      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xF3: /* 0Fh C5h F3h PEXTRW w32(reg),mmx(r/m),i mod=3 reg=6 rm=3      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xF4: /* 0Fh C5h F4h PEXTRW w32(reg),mmx(r/m),i mod=3 reg=6 rm=4      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xF5: /* 0Fh C5h F5h PEXTRW w32(reg),mmx(r/m),i mod=3 reg=6 rm=5      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xF6: /* 0Fh C5h F6h PEXTRW w32(reg),mmx(r/m),i mod=3 reg=6 rm=6      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xF7: /* 0Fh C5h F7h PEXTRW w32(reg),mmx(r/m),i mod=3 reg=6 rm=7      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xF8: /* 0Fh C5h F8h PEXTRW w32(reg),mmx(r/m),i mod=3 reg=7 rm=0      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xF9: /* 0Fh C5h F9h PEXTRW w32(reg),mmx(r/m),i mod=3 reg=7 rm=1      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xFA: /* 0Fh C5h FAh PEXTRW w32(reg),mmx(r/m),i mod=3 reg=7 rm=2      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xFB: /* 0Fh C5h FBh PEXTRW w32(reg),mmx(r/m),i mod=3 reg=7 rm=3      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xFC: /* 0Fh C5h FCh PEXTRW w32(reg),mmx(r/m),i mod=3 reg=7 rm=4      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xFD: /* 0Fh C5h FDh PEXTRW w32(reg),mmx(r/m),i mod=3 reg=7 rm=5      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xFE: /* 0Fh C5h FEh PEXTRW w32(reg),mmx(r/m),i mod=3 reg=7 rm=6      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                    case 0xFF: /* 0Fh C5h FFh PEXTRW w32(reg),mmx(r/m),i mod=3 reg=7 rm=7      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 */
                        imm=IPFB();
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PEXTRW %s,%s,0x%02lX",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""),(unsigned long)((uint32_t)imm));
                        break;
                    default:
                        goto _x86decode_illegal_opcode;
                };
/* End of opcodes starting with 0Fh C5h */
                break;
            case 0xC6: /* 0Fh C6h SHUFPS sse(reg),sse(r/m),i      spec: 0x0F 0xC6 mod/reg/rm ib */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                imm=IPFB();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SHUFPS XMM%u,%s,0x%02lX",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""),(unsigned long)((uint32_t)imm));
                break;
            case 0xC7: /* 0Fh C7h        spec:  */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                _x86decode_begin_code32_addr32_opcode_parse_0FC7:
/* Opcodes starting with 0Fh C7h */
                switch (mrm.byte) {
                    /* opcode 0Fh C7h 00h  not defined */
                    /* opcode 0Fh C7h 01h  not defined */
                    /* opcode 0Fh C7h 02h  not defined */
                    /* opcode 0Fh C7h 03h  not defined */
                    /* opcode 0Fh C7h 04h  not defined */
                    /* opcode 0Fh C7h 05h  not defined */
                    /* opcode 0Fh C7h 06h  not defined */
                    /* opcode 0Fh C7h 07h  not defined */
                    case 0x08: /* 0Fh C7h 08h CMPXCHG8Bb b(r/m) mod=0 reg=1 rm=0      spec: 0x0F 0xC7 mod/reg/rm /1 mod!=3 */
                    case 0x09: /* 0Fh C7h 09h CMPXCHG8Bb b(r/m) mod=0 reg=1 rm=1      spec: 0x0F 0xC7 mod/reg/rm /1 mod!=3 */
                    case 0x0A: /* 0Fh C7h 0Ah CMPXCHG8Bb b(r/m) mod=0 reg=1 rm=2      spec: 0x0F 0xC7 mod/reg/rm /1 mod!=3 */
                    case 0x0B: /* 0Fh C7h 0Bh CMPXCHG8Bb b(r/m) mod=0 reg=1 rm=3      spec: 0x0F 0xC7 mod/reg/rm /1 mod!=3 */
                    case 0x0C: /* 0Fh C7h 0Ch CMPXCHG8Bb b(r/m) mod=0 reg=1 rm=4      spec: 0x0F 0xC7 mod/reg/rm /1 mod!=3 */
                    case 0x0D: /* 0Fh C7h 0Dh CMPXCHG8Bb b(r/m) mod=0 reg=1 rm=5      spec: 0x0F 0xC7 mod/reg/rm /1 mod!=3 */
                    case 0x0E: /* 0Fh C7h 0Eh CMPXCHG8Bb b(r/m) mod=0 reg=1 rm=6      spec: 0x0F 0xC7 mod/reg/rm /1 mod!=3 */
                    case 0x0F: /* 0Fh C7h 0Fh CMPXCHG8Bb b(r/m) mod=0 reg=1 rm=7      spec: 0x0F 0xC7 mod/reg/rm /1 mod!=3 */
                    case 0x48: /* 0Fh C7h 48h CMPXCHG8Bb b(r/m) mod=1 reg=1 rm=0      spec: 0x0F 0xC7 mod/reg/rm /1 mod!=3 */
                    case 0x49: /* 0Fh C7h 49h CMPXCHG8Bb b(r/m) mod=1 reg=1 rm=1      spec: 0x0F 0xC7 mod/reg/rm /1 mod!=3 */
                    case 0x4A: /* 0Fh C7h 4Ah CMPXCHG8Bb b(r/m) mod=1 reg=1 rm=2      spec: 0x0F 0xC7 mod/reg/rm /1 mod!=3 */
                    case 0x4B: /* 0Fh C7h 4Bh CMPXCHG8Bb b(r/m) mod=1 reg=1 rm=3      spec: 0x0F 0xC7 mod/reg/rm /1 mod!=3 */
                    case 0x4C: /* 0Fh C7h 4Ch CMPXCHG8Bb b(r/m) mod=1 reg=1 rm=4      spec: 0x0F 0xC7 mod/reg/rm /1 mod!=3 */
                    case 0x4D: /* 0Fh C7h 4Dh CMPXCHG8Bb b(r/m) mod=1 reg=1 rm=5      spec: 0x0F 0xC7 mod/reg/rm /1 mod!=3 */
                    case 0x4E: /* 0Fh C7h 4Eh CMPXCHG8Bb b(r/m) mod=1 reg=1 rm=6      spec: 0x0F 0xC7 mod/reg/rm /1 mod!=3 */
                    case 0x4F: /* 0Fh C7h 4Fh CMPXCHG8Bb b(r/m) mod=1 reg=1 rm=7      spec: 0x0F 0xC7 mod/reg/rm /1 mod!=3 */
                    case 0x88: /* 0Fh C7h 88h CMPXCHG8Bb b(r/m) mod=2 reg=1 rm=0      spec: 0x0F 0xC7 mod/reg/rm /1 mod!=3 */
                    case 0x89: /* 0Fh C7h 89h CMPXCHG8Bb b(r/m) mod=2 reg=1 rm=1      spec: 0x0F 0xC7 mod/reg/rm /1 mod!=3 */
                    case 0x8A: /* 0Fh C7h 8Ah CMPXCHG8Bb b(r/m) mod=2 reg=1 rm=2      spec: 0x0F 0xC7 mod/reg/rm /1 mod!=3 */
                    case 0x8B: /* 0Fh C7h 8Bh CMPXCHG8Bb b(r/m) mod=2 reg=1 rm=3      spec: 0x0F 0xC7 mod/reg/rm /1 mod!=3 */
                    case 0x8C: /* 0Fh C7h 8Ch CMPXCHG8Bb b(r/m) mod=2 reg=1 rm=4      spec: 0x0F 0xC7 mod/reg/rm /1 mod!=3 */
                    case 0x8D: /* 0Fh C7h 8Dh CMPXCHG8Bb b(r/m) mod=2 reg=1 rm=5      spec: 0x0F 0xC7 mod/reg/rm /1 mod!=3 */
                    case 0x8E: /* 0Fh C7h 8Eh CMPXCHG8Bb b(r/m) mod=2 reg=1 rm=6      spec: 0x0F 0xC7 mod/reg/rm /1 mod!=3 */
                    case 0x8F: /* 0Fh C7h 8Fh CMPXCHG8Bb b(r/m) mod=2 reg=1 rm=7      spec: 0x0F 0xC7 mod/reg/rm /1 mod!=3 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CMPXCHG8Bb %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                        break;
                    /* opcode 0Fh C7h 10h  not defined */
                    /* opcode 0Fh C7h 11h  not defined */
                    /* opcode 0Fh C7h 12h  not defined */
                    /* opcode 0Fh C7h 13h  not defined */
                    /* opcode 0Fh C7h 14h  not defined */
                    /* opcode 0Fh C7h 15h  not defined */
                    /* opcode 0Fh C7h 16h  not defined */
                    /* opcode 0Fh C7h 17h  not defined */
                    /* opcode 0Fh C7h 18h  not defined */
                    /* opcode 0Fh C7h 19h  not defined */
                    /* opcode 0Fh C7h 1Ah  not defined */
                    /* opcode 0Fh C7h 1Bh  not defined */
                    /* opcode 0Fh C7h 1Ch  not defined */
                    /* opcode 0Fh C7h 1Dh  not defined */
                    /* opcode 0Fh C7h 1Eh  not defined */
                    /* opcode 0Fh C7h 1Fh  not defined */
                    /* opcode 0Fh C7h 20h  not defined */
                    /* opcode 0Fh C7h 21h  not defined */
                    /* opcode 0Fh C7h 22h  not defined */
                    /* opcode 0Fh C7h 23h  not defined */
                    /* opcode 0Fh C7h 24h  not defined */
                    /* opcode 0Fh C7h 25h  not defined */
                    /* opcode 0Fh C7h 26h  not defined */
                    /* opcode 0Fh C7h 27h  not defined */
                    /* opcode 0Fh C7h 28h  not defined */
                    /* opcode 0Fh C7h 29h  not defined */
                    /* opcode 0Fh C7h 2Ah  not defined */
                    /* opcode 0Fh C7h 2Bh  not defined */
                    /* opcode 0Fh C7h 2Ch  not defined */
                    /* opcode 0Fh C7h 2Dh  not defined */
                    /* opcode 0Fh C7h 2Eh  not defined */
                    /* opcode 0Fh C7h 2Fh  not defined */
                    case 0x30: /* 0Fh C7h 30h VMPTRLD w64(r/m) mod=0 reg=6 rm=0      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 */
                    case 0x31: /* 0Fh C7h 31h VMPTRLD w64(r/m) mod=0 reg=6 rm=1      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 */
                    case 0x32: /* 0Fh C7h 32h VMPTRLD w64(r/m) mod=0 reg=6 rm=2      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 */
                    case 0x33: /* 0Fh C7h 33h VMPTRLD w64(r/m) mod=0 reg=6 rm=3      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 */
                    case 0x34: /* 0Fh C7h 34h VMPTRLD w64(r/m) mod=0 reg=6 rm=4      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 */
                    case 0x35: /* 0Fh C7h 35h VMPTRLD w64(r/m) mod=0 reg=6 rm=5      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 */
                    case 0x36: /* 0Fh C7h 36h VMPTRLD w64(r/m) mod=0 reg=6 rm=6      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 */
                    case 0x37: /* 0Fh C7h 37h VMPTRLD w64(r/m) mod=0 reg=6 rm=7      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 */
                    case 0x70: /* 0Fh C7h 70h VMPTRLD w64(r/m) mod=1 reg=6 rm=0      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 */
                    case 0x71: /* 0Fh C7h 71h VMPTRLD w64(r/m) mod=1 reg=6 rm=1      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 */
                    case 0x72: /* 0Fh C7h 72h VMPTRLD w64(r/m) mod=1 reg=6 rm=2      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 */
                    case 0x73: /* 0Fh C7h 73h VMPTRLD w64(r/m) mod=1 reg=6 rm=3      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 */
                    case 0x74: /* 0Fh C7h 74h VMPTRLD w64(r/m) mod=1 reg=6 rm=4      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 */
                    case 0x75: /* 0Fh C7h 75h VMPTRLD w64(r/m) mod=1 reg=6 rm=5      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 */
                    case 0x76: /* 0Fh C7h 76h VMPTRLD w64(r/m) mod=1 reg=6 rm=6      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 */
                    case 0x77: /* 0Fh C7h 77h VMPTRLD w64(r/m) mod=1 reg=6 rm=7      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 */
                    case 0xB0: /* 0Fh C7h B0h VMPTRLD w64(r/m) mod=2 reg=6 rm=0      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 */
                    case 0xB1: /* 0Fh C7h B1h VMPTRLD w64(r/m) mod=2 reg=6 rm=1      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 */
                    case 0xB2: /* 0Fh C7h B2h VMPTRLD w64(r/m) mod=2 reg=6 rm=2      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 */
                    case 0xB3: /* 0Fh C7h B3h VMPTRLD w64(r/m) mod=2 reg=6 rm=3      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 */
                    case 0xB4: /* 0Fh C7h B4h VMPTRLD w64(r/m) mod=2 reg=6 rm=4      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 */
                    case 0xB5: /* 0Fh C7h B5h VMPTRLD w64(r/m) mod=2 reg=6 rm=5      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 */
                    case 0xB6: /* 0Fh C7h B6h VMPTRLD w64(r/m) mod=2 reg=6 rm=6      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 */
                    case 0xB7: /* 0Fh C7h B7h VMPTRLD w64(r/m) mod=2 reg=6 rm=7      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VMPTRLD %s",IPDecPrint32(mrm,sib,disp,8,RC_REG,"w64"));
                        break;
                    case 0x38: /* 0Fh C7h 38h VMPTRST w64(r/m) mod=0 reg=7 rm=0      spec: 0x0F 0xC7 mod/reg/rm /7 mod!=3 */
                    case 0x39: /* 0Fh C7h 39h VMPTRST w64(r/m) mod=0 reg=7 rm=1      spec: 0x0F 0xC7 mod/reg/rm /7 mod!=3 */
                    case 0x3A: /* 0Fh C7h 3Ah VMPTRST w64(r/m) mod=0 reg=7 rm=2      spec: 0x0F 0xC7 mod/reg/rm /7 mod!=3 */
                    case 0x3B: /* 0Fh C7h 3Bh VMPTRST w64(r/m) mod=0 reg=7 rm=3      spec: 0x0F 0xC7 mod/reg/rm /7 mod!=3 */
                    case 0x3C: /* 0Fh C7h 3Ch VMPTRST w64(r/m) mod=0 reg=7 rm=4      spec: 0x0F 0xC7 mod/reg/rm /7 mod!=3 */
                    case 0x3D: /* 0Fh C7h 3Dh VMPTRST w64(r/m) mod=0 reg=7 rm=5      spec: 0x0F 0xC7 mod/reg/rm /7 mod!=3 */
                    case 0x3E: /* 0Fh C7h 3Eh VMPTRST w64(r/m) mod=0 reg=7 rm=6      spec: 0x0F 0xC7 mod/reg/rm /7 mod!=3 */
                    case 0x3F: /* 0Fh C7h 3Fh VMPTRST w64(r/m) mod=0 reg=7 rm=7      spec: 0x0F 0xC7 mod/reg/rm /7 mod!=3 */
                    case 0x78: /* 0Fh C7h 78h VMPTRST w64(r/m) mod=1 reg=7 rm=0      spec: 0x0F 0xC7 mod/reg/rm /7 mod!=3 */
                    case 0x79: /* 0Fh C7h 79h VMPTRST w64(r/m) mod=1 reg=7 rm=1      spec: 0x0F 0xC7 mod/reg/rm /7 mod!=3 */
                    case 0x7A: /* 0Fh C7h 7Ah VMPTRST w64(r/m) mod=1 reg=7 rm=2      spec: 0x0F 0xC7 mod/reg/rm /7 mod!=3 */
                    case 0x7B: /* 0Fh C7h 7Bh VMPTRST w64(r/m) mod=1 reg=7 rm=3      spec: 0x0F 0xC7 mod/reg/rm /7 mod!=3 */
                    case 0x7C: /* 0Fh C7h 7Ch VMPTRST w64(r/m) mod=1 reg=7 rm=4      spec: 0x0F 0xC7 mod/reg/rm /7 mod!=3 */
                    case 0x7D: /* 0Fh C7h 7Dh VMPTRST w64(r/m) mod=1 reg=7 rm=5      spec: 0x0F 0xC7 mod/reg/rm /7 mod!=3 */
                    case 0x7E: /* 0Fh C7h 7Eh VMPTRST w64(r/m) mod=1 reg=7 rm=6      spec: 0x0F 0xC7 mod/reg/rm /7 mod!=3 */
                    case 0x7F: /* 0Fh C7h 7Fh VMPTRST w64(r/m) mod=1 reg=7 rm=7      spec: 0x0F 0xC7 mod/reg/rm /7 mod!=3 */
                    case 0xB8: /* 0Fh C7h B8h VMPTRST w64(r/m) mod=2 reg=7 rm=0      spec: 0x0F 0xC7 mod/reg/rm /7 mod!=3 */
                    case 0xB9: /* 0Fh C7h B9h VMPTRST w64(r/m) mod=2 reg=7 rm=1      spec: 0x0F 0xC7 mod/reg/rm /7 mod!=3 */
                    case 0xBA: /* 0Fh C7h BAh VMPTRST w64(r/m) mod=2 reg=7 rm=2      spec: 0x0F 0xC7 mod/reg/rm /7 mod!=3 */
                    case 0xBB: /* 0Fh C7h BBh VMPTRST w64(r/m) mod=2 reg=7 rm=3      spec: 0x0F 0xC7 mod/reg/rm /7 mod!=3 */
                    case 0xBC: /* 0Fh C7h BCh VMPTRST w64(r/m) mod=2 reg=7 rm=4      spec: 0x0F 0xC7 mod/reg/rm /7 mod!=3 */
                    case 0xBD: /* 0Fh C7h BDh VMPTRST w64(r/m) mod=2 reg=7 rm=5      spec: 0x0F 0xC7 mod/reg/rm /7 mod!=3 */
                    case 0xBE: /* 0Fh C7h BEh VMPTRST w64(r/m) mod=2 reg=7 rm=6      spec: 0x0F 0xC7 mod/reg/rm /7 mod!=3 */
                    case 0xBF: /* 0Fh C7h BFh VMPTRST w64(r/m) mod=2 reg=7 rm=7      spec: 0x0F 0xC7 mod/reg/rm /7 mod!=3 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VMPTRST %s",IPDecPrint32(mrm,sib,disp,8,RC_REG,"w64"));
                        break;
                    /* opcode 0Fh C7h 40h  not defined */
                    /* opcode 0Fh C7h 41h  not defined */
                    /* opcode 0Fh C7h 42h  not defined */
                    /* opcode 0Fh C7h 43h  not defined */
                    /* opcode 0Fh C7h 44h  not defined */
                    /* opcode 0Fh C7h 45h  not defined */
                    /* opcode 0Fh C7h 46h  not defined */
                    /* opcode 0Fh C7h 47h  not defined */
                    /* opcode 0Fh C7h 50h  not defined */
                    /* opcode 0Fh C7h 51h  not defined */
                    /* opcode 0Fh C7h 52h  not defined */
                    /* opcode 0Fh C7h 53h  not defined */
                    /* opcode 0Fh C7h 54h  not defined */
                    /* opcode 0Fh C7h 55h  not defined */
                    /* opcode 0Fh C7h 56h  not defined */
                    /* opcode 0Fh C7h 57h  not defined */
                    /* opcode 0Fh C7h 58h  not defined */
                    /* opcode 0Fh C7h 59h  not defined */
                    /* opcode 0Fh C7h 5Ah  not defined */
                    /* opcode 0Fh C7h 5Bh  not defined */
                    /* opcode 0Fh C7h 5Ch  not defined */
                    /* opcode 0Fh C7h 5Dh  not defined */
                    /* opcode 0Fh C7h 5Eh  not defined */
                    /* opcode 0Fh C7h 5Fh  not defined */
                    /* opcode 0Fh C7h 60h  not defined */
                    /* opcode 0Fh C7h 61h  not defined */
                    /* opcode 0Fh C7h 62h  not defined */
                    /* opcode 0Fh C7h 63h  not defined */
                    /* opcode 0Fh C7h 64h  not defined */
                    /* opcode 0Fh C7h 65h  not defined */
                    /* opcode 0Fh C7h 66h  not defined */
                    /* opcode 0Fh C7h 67h  not defined */
                    /* opcode 0Fh C7h 68h  not defined */
                    /* opcode 0Fh C7h 69h  not defined */
                    /* opcode 0Fh C7h 6Ah  not defined */
                    /* opcode 0Fh C7h 6Bh  not defined */
                    /* opcode 0Fh C7h 6Ch  not defined */
                    /* opcode 0Fh C7h 6Dh  not defined */
                    /* opcode 0Fh C7h 6Eh  not defined */
                    /* opcode 0Fh C7h 6Fh  not defined */
                    /* opcode 0Fh C7h 80h  not defined */
                    /* opcode 0Fh C7h 81h  not defined */
                    /* opcode 0Fh C7h 82h  not defined */
                    /* opcode 0Fh C7h 83h  not defined */
                    /* opcode 0Fh C7h 84h  not defined */
                    /* opcode 0Fh C7h 85h  not defined */
                    /* opcode 0Fh C7h 86h  not defined */
                    /* opcode 0Fh C7h 87h  not defined */
                    /* opcode 0Fh C7h 90h  not defined */
                    /* opcode 0Fh C7h 91h  not defined */
                    /* opcode 0Fh C7h 92h  not defined */
                    /* opcode 0Fh C7h 93h  not defined */
                    /* opcode 0Fh C7h 94h  not defined */
                    /* opcode 0Fh C7h 95h  not defined */
                    /* opcode 0Fh C7h 96h  not defined */
                    /* opcode 0Fh C7h 97h  not defined */
                    /* opcode 0Fh C7h 98h  not defined */
                    /* opcode 0Fh C7h 99h  not defined */
                    /* opcode 0Fh C7h 9Ah  not defined */
                    /* opcode 0Fh C7h 9Bh  not defined */
                    /* opcode 0Fh C7h 9Ch  not defined */
                    /* opcode 0Fh C7h 9Dh  not defined */
                    /* opcode 0Fh C7h 9Eh  not defined */
                    /* opcode 0Fh C7h 9Fh  not defined */
                    /* opcode 0Fh C7h A0h  not defined */
                    /* opcode 0Fh C7h A1h  not defined */
                    /* opcode 0Fh C7h A2h  not defined */
                    /* opcode 0Fh C7h A3h  not defined */
                    /* opcode 0Fh C7h A4h  not defined */
                    /* opcode 0Fh C7h A5h  not defined */
                    /* opcode 0Fh C7h A6h  not defined */
                    /* opcode 0Fh C7h A7h  not defined */
                    /* opcode 0Fh C7h A8h  not defined */
                    /* opcode 0Fh C7h A9h  not defined */
                    /* opcode 0Fh C7h AAh  not defined */
                    /* opcode 0Fh C7h ABh  not defined */
                    /* opcode 0Fh C7h ACh  not defined */
                    /* opcode 0Fh C7h ADh  not defined */
                    /* opcode 0Fh C7h AEh  not defined */
                    /* opcode 0Fh C7h AFh  not defined */
                    /* opcode 0Fh C7h C0h  not defined */
                    /* opcode 0Fh C7h C1h  not defined */
                    /* opcode 0Fh C7h C2h  not defined */
                    /* opcode 0Fh C7h C3h  not defined */
                    /* opcode 0Fh C7h C4h  not defined */
                    /* opcode 0Fh C7h C5h  not defined */
                    /* opcode 0Fh C7h C6h  not defined */
                    /* opcode 0Fh C7h C7h  not defined */
                    /* opcode 0Fh C7h C8h  not defined */
                    /* opcode 0Fh C7h C9h  not defined */
                    /* opcode 0Fh C7h CAh  not defined */
                    /* opcode 0Fh C7h CBh  not defined */
                    /* opcode 0Fh C7h CCh  not defined */
                    /* opcode 0Fh C7h CDh  not defined */
                    /* opcode 0Fh C7h CEh  not defined */
                    /* opcode 0Fh C7h CFh  not defined */
                    /* opcode 0Fh C7h D0h  not defined */
                    /* opcode 0Fh C7h D1h  not defined */
                    /* opcode 0Fh C7h D2h  not defined */
                    /* opcode 0Fh C7h D3h  not defined */
                    /* opcode 0Fh C7h D4h  not defined */
                    /* opcode 0Fh C7h D5h  not defined */
                    /* opcode 0Fh C7h D6h  not defined */
                    /* opcode 0Fh C7h D7h  not defined */
                    /* opcode 0Fh C7h D8h  not defined */
                    /* opcode 0Fh C7h D9h  not defined */
                    /* opcode 0Fh C7h DAh  not defined */
                    /* opcode 0Fh C7h DBh  not defined */
                    /* opcode 0Fh C7h DCh  not defined */
                    /* opcode 0Fh C7h DDh  not defined */
                    /* opcode 0Fh C7h DEh  not defined */
                    /* opcode 0Fh C7h DFh  not defined */
                    /* opcode 0Fh C7h E0h  not defined */
                    /* opcode 0Fh C7h E1h  not defined */
                    /* opcode 0Fh C7h E2h  not defined */
                    /* opcode 0Fh C7h E3h  not defined */
                    /* opcode 0Fh C7h E4h  not defined */
                    /* opcode 0Fh C7h E5h  not defined */
                    /* opcode 0Fh C7h E6h  not defined */
                    /* opcode 0Fh C7h E7h  not defined */
                    /* opcode 0Fh C7h E8h  not defined */
                    /* opcode 0Fh C7h E9h  not defined */
                    /* opcode 0Fh C7h EAh  not defined */
                    /* opcode 0Fh C7h EBh  not defined */
                    /* opcode 0Fh C7h ECh  not defined */
                    /* opcode 0Fh C7h EDh  not defined */
                    /* opcode 0Fh C7h EEh  not defined */
                    /* opcode 0Fh C7h EFh  not defined */
                    /* opcode 0Fh C7h F0h  not defined */
                    /* opcode 0Fh C7h F1h  not defined */
                    /* opcode 0Fh C7h F2h  not defined */
                    /* opcode 0Fh C7h F3h  not defined */
                    /* opcode 0Fh C7h F4h  not defined */
                    /* opcode 0Fh C7h F5h  not defined */
                    /* opcode 0Fh C7h F6h  not defined */
                    /* opcode 0Fh C7h F7h  not defined */
                    /* opcode 0Fh C7h F8h  not defined */
                    /* opcode 0Fh C7h F9h  not defined */
                    /* opcode 0Fh C7h FAh  not defined */
                    /* opcode 0Fh C7h FBh  not defined */
                    /* opcode 0Fh C7h FCh  not defined */
                    /* opcode 0Fh C7h FDh  not defined */
                    /* opcode 0Fh C7h FEh  not defined */
                    /* opcode 0Fh C7h FFh  not defined */
                    default:
                        goto _x86decode_illegal_opcode;
                };
/* End of opcodes starting with 0Fh C7h */
                break;
            case 0xC8: /* 0Fh C8h BSWAPd w(reg) reg=0      spec: 0x0F range(0xC8,0xCF) reg=op02 */
            case 0xC9: /* 0Fh C9h BSWAPd w(reg) reg=1      spec: 0x0F range(0xC8,0xCF) reg=op02 */
            case 0xCA: /* 0Fh CAh BSWAPd w(reg) reg=2      spec: 0x0F range(0xC8,0xCF) reg=op02 */
            case 0xCB: /* 0Fh CBh BSWAPd w(reg) reg=3      spec: 0x0F range(0xC8,0xCF) reg=op02 */
            case 0xCC: /* 0Fh CCh BSWAPd w(reg) reg=4      spec: 0x0F range(0xC8,0xCF) reg=op02 */
            case 0xCD: /* 0Fh CDh BSWAPd w(reg) reg=5      spec: 0x0F range(0xC8,0xCF) reg=op02 */
            case 0xCE: /* 0Fh CEh BSWAPd w(reg) reg=6      spec: 0x0F range(0xC8,0xCF) reg=op02 */
            case 0xCF: /* 0Fh CFh BSWAPd w(reg) reg=7      spec: 0x0F range(0xC8,0xCF) reg=op02 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"BSWAPd %s",CPUregsN[4][op&7]);
                break;
            /* opcode 0Fh D0h  not defined */
            case 0xD1: /* 0Fh D1h PSRLW mmx(reg),mmx(r/m)      spec: 0x0F 0xD1 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSRLW MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                break;
            case 0xD2: /* 0Fh D2h PSRLD mmx(reg),mmx(r/m)      spec: 0x0F 0xD2 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSRLD MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                break;
            case 0xD3: /* 0Fh D3h PSRLQ mmx(reg),mmx(r/m)      spec: 0x0F 0xD3 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSRLQ MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                break;
            case 0xD4: /* 0Fh D4h PADDQ mmx(reg),mmx(r/m)      spec: 0x0F 0xD4 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PADDQ MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                break;
            case 0xD5: /* 0Fh D5h PMULLW mmx(reg),mmx(r/m)      spec: 0x0F 0xD5 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PMULLW MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                break;
            /* opcode 0Fh D6h  not defined */
            case 0xD7: /* 0Fh D7h        spec:  */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                _x86decode_begin_code32_addr32_opcode_parse_0FD7:
/* Opcodes starting with 0Fh D7h */
                switch (mrm.byte) {
                    /* opcode 0Fh D7h 00h  not defined */
                    /* opcode 0Fh D7h 01h  not defined */
                    /* opcode 0Fh D7h 02h  not defined */
                    /* opcode 0Fh D7h 03h  not defined */
                    /* opcode 0Fh D7h 04h  not defined */
                    /* opcode 0Fh D7h 05h  not defined */
                    /* opcode 0Fh D7h 06h  not defined */
                    /* opcode 0Fh D7h 07h  not defined */
                    /* opcode 0Fh D7h 08h  not defined */
                    /* opcode 0Fh D7h 09h  not defined */
                    /* opcode 0Fh D7h 0Ah  not defined */
                    /* opcode 0Fh D7h 0Bh  not defined */
                    /* opcode 0Fh D7h 0Ch  not defined */
                    /* opcode 0Fh D7h 0Dh  not defined */
                    /* opcode 0Fh D7h 0Eh  not defined */
                    /* opcode 0Fh D7h 0Fh  not defined */
                    /* opcode 0Fh D7h 10h  not defined */
                    /* opcode 0Fh D7h 11h  not defined */
                    /* opcode 0Fh D7h 12h  not defined */
                    /* opcode 0Fh D7h 13h  not defined */
                    /* opcode 0Fh D7h 14h  not defined */
                    /* opcode 0Fh D7h 15h  not defined */
                    /* opcode 0Fh D7h 16h  not defined */
                    /* opcode 0Fh D7h 17h  not defined */
                    /* opcode 0Fh D7h 18h  not defined */
                    /* opcode 0Fh D7h 19h  not defined */
                    /* opcode 0Fh D7h 1Ah  not defined */
                    /* opcode 0Fh D7h 1Bh  not defined */
                    /* opcode 0Fh D7h 1Ch  not defined */
                    /* opcode 0Fh D7h 1Dh  not defined */
                    /* opcode 0Fh D7h 1Eh  not defined */
                    /* opcode 0Fh D7h 1Fh  not defined */
                    /* opcode 0Fh D7h 20h  not defined */
                    /* opcode 0Fh D7h 21h  not defined */
                    /* opcode 0Fh D7h 22h  not defined */
                    /* opcode 0Fh D7h 23h  not defined */
                    /* opcode 0Fh D7h 24h  not defined */
                    /* opcode 0Fh D7h 25h  not defined */
                    /* opcode 0Fh D7h 26h  not defined */
                    /* opcode 0Fh D7h 27h  not defined */
                    /* opcode 0Fh D7h 28h  not defined */
                    /* opcode 0Fh D7h 29h  not defined */
                    /* opcode 0Fh D7h 2Ah  not defined */
                    /* opcode 0Fh D7h 2Bh  not defined */
                    /* opcode 0Fh D7h 2Ch  not defined */
                    /* opcode 0Fh D7h 2Dh  not defined */
                    /* opcode 0Fh D7h 2Eh  not defined */
                    /* opcode 0Fh D7h 2Fh  not defined */
                    /* opcode 0Fh D7h 30h  not defined */
                    /* opcode 0Fh D7h 31h  not defined */
                    /* opcode 0Fh D7h 32h  not defined */
                    /* opcode 0Fh D7h 33h  not defined */
                    /* opcode 0Fh D7h 34h  not defined */
                    /* opcode 0Fh D7h 35h  not defined */
                    /* opcode 0Fh D7h 36h  not defined */
                    /* opcode 0Fh D7h 37h  not defined */
                    /* opcode 0Fh D7h 38h  not defined */
                    /* opcode 0Fh D7h 39h  not defined */
                    /* opcode 0Fh D7h 3Ah  not defined */
                    /* opcode 0Fh D7h 3Bh  not defined */
                    /* opcode 0Fh D7h 3Ch  not defined */
                    /* opcode 0Fh D7h 3Dh  not defined */
                    /* opcode 0Fh D7h 3Eh  not defined */
                    /* opcode 0Fh D7h 3Fh  not defined */
                    /* opcode 0Fh D7h 40h  not defined */
                    /* opcode 0Fh D7h 41h  not defined */
                    /* opcode 0Fh D7h 42h  not defined */
                    /* opcode 0Fh D7h 43h  not defined */
                    /* opcode 0Fh D7h 44h  not defined */
                    /* opcode 0Fh D7h 45h  not defined */
                    /* opcode 0Fh D7h 46h  not defined */
                    /* opcode 0Fh D7h 47h  not defined */
                    /* opcode 0Fh D7h 48h  not defined */
                    /* opcode 0Fh D7h 49h  not defined */
                    /* opcode 0Fh D7h 4Ah  not defined */
                    /* opcode 0Fh D7h 4Bh  not defined */
                    /* opcode 0Fh D7h 4Ch  not defined */
                    /* opcode 0Fh D7h 4Dh  not defined */
                    /* opcode 0Fh D7h 4Eh  not defined */
                    /* opcode 0Fh D7h 4Fh  not defined */
                    /* opcode 0Fh D7h 50h  not defined */
                    /* opcode 0Fh D7h 51h  not defined */
                    /* opcode 0Fh D7h 52h  not defined */
                    /* opcode 0Fh D7h 53h  not defined */
                    /* opcode 0Fh D7h 54h  not defined */
                    /* opcode 0Fh D7h 55h  not defined */
                    /* opcode 0Fh D7h 56h  not defined */
                    /* opcode 0Fh D7h 57h  not defined */
                    /* opcode 0Fh D7h 58h  not defined */
                    /* opcode 0Fh D7h 59h  not defined */
                    /* opcode 0Fh D7h 5Ah  not defined */
                    /* opcode 0Fh D7h 5Bh  not defined */
                    /* opcode 0Fh D7h 5Ch  not defined */
                    /* opcode 0Fh D7h 5Dh  not defined */
                    /* opcode 0Fh D7h 5Eh  not defined */
                    /* opcode 0Fh D7h 5Fh  not defined */
                    /* opcode 0Fh D7h 60h  not defined */
                    /* opcode 0Fh D7h 61h  not defined */
                    /* opcode 0Fh D7h 62h  not defined */
                    /* opcode 0Fh D7h 63h  not defined */
                    /* opcode 0Fh D7h 64h  not defined */
                    /* opcode 0Fh D7h 65h  not defined */
                    /* opcode 0Fh D7h 66h  not defined */
                    /* opcode 0Fh D7h 67h  not defined */
                    /* opcode 0Fh D7h 68h  not defined */
                    /* opcode 0Fh D7h 69h  not defined */
                    /* opcode 0Fh D7h 6Ah  not defined */
                    /* opcode 0Fh D7h 6Bh  not defined */
                    /* opcode 0Fh D7h 6Ch  not defined */
                    /* opcode 0Fh D7h 6Dh  not defined */
                    /* opcode 0Fh D7h 6Eh  not defined */
                    /* opcode 0Fh D7h 6Fh  not defined */
                    /* opcode 0Fh D7h 70h  not defined */
                    /* opcode 0Fh D7h 71h  not defined */
                    /* opcode 0Fh D7h 72h  not defined */
                    /* opcode 0Fh D7h 73h  not defined */
                    /* opcode 0Fh D7h 74h  not defined */
                    /* opcode 0Fh D7h 75h  not defined */
                    /* opcode 0Fh D7h 76h  not defined */
                    /* opcode 0Fh D7h 77h  not defined */
                    /* opcode 0Fh D7h 78h  not defined */
                    /* opcode 0Fh D7h 79h  not defined */
                    /* opcode 0Fh D7h 7Ah  not defined */
                    /* opcode 0Fh D7h 7Bh  not defined */
                    /* opcode 0Fh D7h 7Ch  not defined */
                    /* opcode 0Fh D7h 7Dh  not defined */
                    /* opcode 0Fh D7h 7Eh  not defined */
                    /* opcode 0Fh D7h 7Fh  not defined */
                    /* opcode 0Fh D7h 80h  not defined */
                    /* opcode 0Fh D7h 81h  not defined */
                    /* opcode 0Fh D7h 82h  not defined */
                    /* opcode 0Fh D7h 83h  not defined */
                    /* opcode 0Fh D7h 84h  not defined */
                    /* opcode 0Fh D7h 85h  not defined */
                    /* opcode 0Fh D7h 86h  not defined */
                    /* opcode 0Fh D7h 87h  not defined */
                    /* opcode 0Fh D7h 88h  not defined */
                    /* opcode 0Fh D7h 89h  not defined */
                    /* opcode 0Fh D7h 8Ah  not defined */
                    /* opcode 0Fh D7h 8Bh  not defined */
                    /* opcode 0Fh D7h 8Ch  not defined */
                    /* opcode 0Fh D7h 8Dh  not defined */
                    /* opcode 0Fh D7h 8Eh  not defined */
                    /* opcode 0Fh D7h 8Fh  not defined */
                    /* opcode 0Fh D7h 90h  not defined */
                    /* opcode 0Fh D7h 91h  not defined */
                    /* opcode 0Fh D7h 92h  not defined */
                    /* opcode 0Fh D7h 93h  not defined */
                    /* opcode 0Fh D7h 94h  not defined */
                    /* opcode 0Fh D7h 95h  not defined */
                    /* opcode 0Fh D7h 96h  not defined */
                    /* opcode 0Fh D7h 97h  not defined */
                    /* opcode 0Fh D7h 98h  not defined */
                    /* opcode 0Fh D7h 99h  not defined */
                    /* opcode 0Fh D7h 9Ah  not defined */
                    /* opcode 0Fh D7h 9Bh  not defined */
                    /* opcode 0Fh D7h 9Ch  not defined */
                    /* opcode 0Fh D7h 9Dh  not defined */
                    /* opcode 0Fh D7h 9Eh  not defined */
                    /* opcode 0Fh D7h 9Fh  not defined */
                    /* opcode 0Fh D7h A0h  not defined */
                    /* opcode 0Fh D7h A1h  not defined */
                    /* opcode 0Fh D7h A2h  not defined */
                    /* opcode 0Fh D7h A3h  not defined */
                    /* opcode 0Fh D7h A4h  not defined */
                    /* opcode 0Fh D7h A5h  not defined */
                    /* opcode 0Fh D7h A6h  not defined */
                    /* opcode 0Fh D7h A7h  not defined */
                    /* opcode 0Fh D7h A8h  not defined */
                    /* opcode 0Fh D7h A9h  not defined */
                    /* opcode 0Fh D7h AAh  not defined */
                    /* opcode 0Fh D7h ABh  not defined */
                    /* opcode 0Fh D7h ACh  not defined */
                    /* opcode 0Fh D7h ADh  not defined */
                    /* opcode 0Fh D7h AEh  not defined */
                    /* opcode 0Fh D7h AFh  not defined */
                    /* opcode 0Fh D7h B0h  not defined */
                    /* opcode 0Fh D7h B1h  not defined */
                    /* opcode 0Fh D7h B2h  not defined */
                    /* opcode 0Fh D7h B3h  not defined */
                    /* opcode 0Fh D7h B4h  not defined */
                    /* opcode 0Fh D7h B5h  not defined */
                    /* opcode 0Fh D7h B6h  not defined */
                    /* opcode 0Fh D7h B7h  not defined */
                    /* opcode 0Fh D7h B8h  not defined */
                    /* opcode 0Fh D7h B9h  not defined */
                    /* opcode 0Fh D7h BAh  not defined */
                    /* opcode 0Fh D7h BBh  not defined */
                    /* opcode 0Fh D7h BCh  not defined */
                    /* opcode 0Fh D7h BDh  not defined */
                    /* opcode 0Fh D7h BEh  not defined */
                    /* opcode 0Fh D7h BFh  not defined */
                    case 0xC0: /* 0Fh D7h C0h PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=0 rm=0      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xC1: /* 0Fh D7h C1h PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=0 rm=1      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xC2: /* 0Fh D7h C2h PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=0 rm=2      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xC3: /* 0Fh D7h C3h PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=0 rm=3      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xC4: /* 0Fh D7h C4h PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=0 rm=4      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xC5: /* 0Fh D7h C5h PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=0 rm=5      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xC6: /* 0Fh D7h C6h PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=0 rm=6      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xC7: /* 0Fh D7h C7h PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=0 rm=7      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xC8: /* 0Fh D7h C8h PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=1 rm=0      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xC9: /* 0Fh D7h C9h PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=1 rm=1      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xCA: /* 0Fh D7h CAh PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=1 rm=2      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xCB: /* 0Fh D7h CBh PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=1 rm=3      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xCC: /* 0Fh D7h CCh PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=1 rm=4      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xCD: /* 0Fh D7h CDh PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=1 rm=5      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xCE: /* 0Fh D7h CEh PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=1 rm=6      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xCF: /* 0Fh D7h CFh PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=1 rm=7      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xD0: /* 0Fh D7h D0h PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=2 rm=0      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xD1: /* 0Fh D7h D1h PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=2 rm=1      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xD2: /* 0Fh D7h D2h PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=2 rm=2      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xD3: /* 0Fh D7h D3h PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=2 rm=3      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xD4: /* 0Fh D7h D4h PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=2 rm=4      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xD5: /* 0Fh D7h D5h PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=2 rm=5      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xD6: /* 0Fh D7h D6h PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=2 rm=6      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xD7: /* 0Fh D7h D7h PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=2 rm=7      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xD8: /* 0Fh D7h D8h PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=3 rm=0      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xD9: /* 0Fh D7h D9h PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=3 rm=1      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xDA: /* 0Fh D7h DAh PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=3 rm=2      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xDB: /* 0Fh D7h DBh PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=3 rm=3      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xDC: /* 0Fh D7h DCh PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=3 rm=4      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xDD: /* 0Fh D7h DDh PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=3 rm=5      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xDE: /* 0Fh D7h DEh PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=3 rm=6      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xDF: /* 0Fh D7h DFh PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=3 rm=7      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xE0: /* 0Fh D7h E0h PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=4 rm=0      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xE1: /* 0Fh D7h E1h PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=4 rm=1      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xE2: /* 0Fh D7h E2h PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=4 rm=2      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xE3: /* 0Fh D7h E3h PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=4 rm=3      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xE4: /* 0Fh D7h E4h PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=4 rm=4      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xE5: /* 0Fh D7h E5h PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=4 rm=5      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xE6: /* 0Fh D7h E6h PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=4 rm=6      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xE7: /* 0Fh D7h E7h PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=4 rm=7      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xE8: /* 0Fh D7h E8h PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=5 rm=0      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xE9: /* 0Fh D7h E9h PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=5 rm=1      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xEA: /* 0Fh D7h EAh PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=5 rm=2      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xEB: /* 0Fh D7h EBh PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=5 rm=3      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xEC: /* 0Fh D7h ECh PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=5 rm=4      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xED: /* 0Fh D7h EDh PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=5 rm=5      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xEE: /* 0Fh D7h EEh PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=5 rm=6      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xEF: /* 0Fh D7h EFh PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=5 rm=7      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xF0: /* 0Fh D7h F0h PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=6 rm=0      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xF1: /* 0Fh D7h F1h PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=6 rm=1      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xF2: /* 0Fh D7h F2h PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=6 rm=2      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xF3: /* 0Fh D7h F3h PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=6 rm=3      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xF4: /* 0Fh D7h F4h PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=6 rm=4      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xF5: /* 0Fh D7h F5h PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=6 rm=5      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xF6: /* 0Fh D7h F6h PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=6 rm=6      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xF7: /* 0Fh D7h F7h PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=6 rm=7      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xF8: /* 0Fh D7h F8h PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=7 rm=0      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xF9: /* 0Fh D7h F9h PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=7 rm=1      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xFA: /* 0Fh D7h FAh PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=7 rm=2      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xFB: /* 0Fh D7h FBh PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=7 rm=3      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xFC: /* 0Fh D7h FCh PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=7 rm=4      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xFD: /* 0Fh D7h FDh PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=7 rm=5      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xFE: /* 0Fh D7h FEh PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=7 rm=6      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                    case 0xFF: /* 0Fh D7h FFh PMOVMSKB w32(reg),mmx(r/m) mod=3 reg=7 rm=7      spec: 0x0F 0xD7 mod/reg/rm mod==3 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PMOVMSKB %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                        break;
                    default:
                        goto _x86decode_illegal_opcode;
                };
/* End of opcodes starting with 0Fh D7h */
                break;
            case 0xD8: /* 0Fh D8h PSUBUSB mmx(reg),mmx(r/m)      spec: 0x0F 0xD8 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSUBUSB MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                break;
            case 0xD9: /* 0Fh D9h PSUBUSW mmx(reg),mmx(r/m)      spec: 0x0F 0xD9 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSUBUSW MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                break;
            case 0xDA: /* 0Fh DAh PMINUB mmx(reg),mmx(r/m)      spec: 0x0F 0xDA mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PMINUB MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                break;
            case 0xDB: /* 0Fh DBh PAND mmx(reg),mmx(r/m)      spec: 0x0F 0xDB mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PAND MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                break;
            case 0xDC: /* 0Fh DCh PADDUSB mmx(reg),mmx(r/m)      spec: 0x0F 0xDC mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PADDUSB MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                break;
            case 0xDD: /* 0Fh DDh PADDUSW mmx(reg),mmx(r/m)      spec: 0x0F 0xDD mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PADDUSW MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                break;
            case 0xDE: /* 0Fh DEh PMAXUB mmx(reg),mmx(r/m)      spec: 0x0F 0xDE mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PMAXUB MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                break;
            case 0xDF: /* 0Fh DFh PANDN mmx(reg),mmx(r/m)      spec: 0x0F 0xDF mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PANDN MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                break;
            case 0xE0: /* 0Fh E0h PAVGB mmx(reg),mmx(r/m)      spec: 0x0F 0xE0 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PAVGB MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                break;
            case 0xE1: /* 0Fh E1h PSRAW mmx(reg),mmx(r/m)      spec: 0x0F 0xE1 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSRAW MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                break;
            case 0xE2: /* 0Fh E2h PSRAD mmx(reg),mmx(r/m)      spec: 0x0F 0xE2 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSRAD MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                break;
            case 0xE3: /* 0Fh E3h PAVGW mmx(reg),mmx(r/m)      spec: 0x0F 0xE3 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PAVGW MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                break;
            case 0xE4: /* 0Fh E4h PMULHUW mmx(reg),mmx(r/m)      spec: 0x0F 0xE4 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PMULHUW MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                break;
            case 0xE5: /* 0Fh E5h PMULHW mmx(reg),mmx(r/m)      spec: 0x0F 0xE5 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PMULHW MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                break;
            /* opcode 0Fh E6h  not defined */
            case 0xE7: /* 0Fh E7h        spec:  */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                _x86decode_begin_code32_addr32_opcode_parse_0FE7:
/* Opcodes starting with 0Fh E7h */
                switch (mrm.byte) {
                    case 0x00: /* 0Fh E7h 00h MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=0 rm=0      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x01: /* 0Fh E7h 01h MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=0 rm=1      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x02: /* 0Fh E7h 02h MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=0 rm=2      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x03: /* 0Fh E7h 03h MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=0 rm=3      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x04: /* 0Fh E7h 04h MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=0 rm=4      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x05: /* 0Fh E7h 05h MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=0 rm=5      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x06: /* 0Fh E7h 06h MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=0 rm=6      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x07: /* 0Fh E7h 07h MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=0 rm=7      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x08: /* 0Fh E7h 08h MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=1 rm=0      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x09: /* 0Fh E7h 09h MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=1 rm=1      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x0A: /* 0Fh E7h 0Ah MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=1 rm=2      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x0B: /* 0Fh E7h 0Bh MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=1 rm=3      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x0C: /* 0Fh E7h 0Ch MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=1 rm=4      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x0D: /* 0Fh E7h 0Dh MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=1 rm=5      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x0E: /* 0Fh E7h 0Eh MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=1 rm=6      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x0F: /* 0Fh E7h 0Fh MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=1 rm=7      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x10: /* 0Fh E7h 10h MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=2 rm=0      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x11: /* 0Fh E7h 11h MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=2 rm=1      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x12: /* 0Fh E7h 12h MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=2 rm=2      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x13: /* 0Fh E7h 13h MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=2 rm=3      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x14: /* 0Fh E7h 14h MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=2 rm=4      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x15: /* 0Fh E7h 15h MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=2 rm=5      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x16: /* 0Fh E7h 16h MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=2 rm=6      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x17: /* 0Fh E7h 17h MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=2 rm=7      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x18: /* 0Fh E7h 18h MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=3 rm=0      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x19: /* 0Fh E7h 19h MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=3 rm=1      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x1A: /* 0Fh E7h 1Ah MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=3 rm=2      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x1B: /* 0Fh E7h 1Bh MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=3 rm=3      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x1C: /* 0Fh E7h 1Ch MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=3 rm=4      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x1D: /* 0Fh E7h 1Dh MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=3 rm=5      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x1E: /* 0Fh E7h 1Eh MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=3 rm=6      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x1F: /* 0Fh E7h 1Fh MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=3 rm=7      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x20: /* 0Fh E7h 20h MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=4 rm=0      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x21: /* 0Fh E7h 21h MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=4 rm=1      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x22: /* 0Fh E7h 22h MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=4 rm=2      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x23: /* 0Fh E7h 23h MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=4 rm=3      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x24: /* 0Fh E7h 24h MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=4 rm=4      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x25: /* 0Fh E7h 25h MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=4 rm=5      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x26: /* 0Fh E7h 26h MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=4 rm=6      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x27: /* 0Fh E7h 27h MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=4 rm=7      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x28: /* 0Fh E7h 28h MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=5 rm=0      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x29: /* 0Fh E7h 29h MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=5 rm=1      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x2A: /* 0Fh E7h 2Ah MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=5 rm=2      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x2B: /* 0Fh E7h 2Bh MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=5 rm=3      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x2C: /* 0Fh E7h 2Ch MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=5 rm=4      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x2D: /* 0Fh E7h 2Dh MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=5 rm=5      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x2E: /* 0Fh E7h 2Eh MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=5 rm=6      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x2F: /* 0Fh E7h 2Fh MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=5 rm=7      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x30: /* 0Fh E7h 30h MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=6 rm=0      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x31: /* 0Fh E7h 31h MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=6 rm=1      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x32: /* 0Fh E7h 32h MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=6 rm=2      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x33: /* 0Fh E7h 33h MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=6 rm=3      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x34: /* 0Fh E7h 34h MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=6 rm=4      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x35: /* 0Fh E7h 35h MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=6 rm=5      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x36: /* 0Fh E7h 36h MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=6 rm=6      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x37: /* 0Fh E7h 37h MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=6 rm=7      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x38: /* 0Fh E7h 38h MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=7 rm=0      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x39: /* 0Fh E7h 39h MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=7 rm=1      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x3A: /* 0Fh E7h 3Ah MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=7 rm=2      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x3B: /* 0Fh E7h 3Bh MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=7 rm=3      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x3C: /* 0Fh E7h 3Ch MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=7 rm=4      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x3D: /* 0Fh E7h 3Dh MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=7 rm=5      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x3E: /* 0Fh E7h 3Eh MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=7 rm=6      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x3F: /* 0Fh E7h 3Fh MOVNTQ mmx(r/m),mmx(reg) mod=0 reg=7 rm=7      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x40: /* 0Fh E7h 40h MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=0 rm=0      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x41: /* 0Fh E7h 41h MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=0 rm=1      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x42: /* 0Fh E7h 42h MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=0 rm=2      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x43: /* 0Fh E7h 43h MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=0 rm=3      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x44: /* 0Fh E7h 44h MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=0 rm=4      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x45: /* 0Fh E7h 45h MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=0 rm=5      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x46: /* 0Fh E7h 46h MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=0 rm=6      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x47: /* 0Fh E7h 47h MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=0 rm=7      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x48: /* 0Fh E7h 48h MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=1 rm=0      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x49: /* 0Fh E7h 49h MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=1 rm=1      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x4A: /* 0Fh E7h 4Ah MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=1 rm=2      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x4B: /* 0Fh E7h 4Bh MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=1 rm=3      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x4C: /* 0Fh E7h 4Ch MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=1 rm=4      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x4D: /* 0Fh E7h 4Dh MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=1 rm=5      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x4E: /* 0Fh E7h 4Eh MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=1 rm=6      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x4F: /* 0Fh E7h 4Fh MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=1 rm=7      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x50: /* 0Fh E7h 50h MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=2 rm=0      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x51: /* 0Fh E7h 51h MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=2 rm=1      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x52: /* 0Fh E7h 52h MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=2 rm=2      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x53: /* 0Fh E7h 53h MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=2 rm=3      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x54: /* 0Fh E7h 54h MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=2 rm=4      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x55: /* 0Fh E7h 55h MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=2 rm=5      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x56: /* 0Fh E7h 56h MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=2 rm=6      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x57: /* 0Fh E7h 57h MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=2 rm=7      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x58: /* 0Fh E7h 58h MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=3 rm=0      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x59: /* 0Fh E7h 59h MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=3 rm=1      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x5A: /* 0Fh E7h 5Ah MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=3 rm=2      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x5B: /* 0Fh E7h 5Bh MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=3 rm=3      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x5C: /* 0Fh E7h 5Ch MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=3 rm=4      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x5D: /* 0Fh E7h 5Dh MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=3 rm=5      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x5E: /* 0Fh E7h 5Eh MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=3 rm=6      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x5F: /* 0Fh E7h 5Fh MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=3 rm=7      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x60: /* 0Fh E7h 60h MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=4 rm=0      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x61: /* 0Fh E7h 61h MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=4 rm=1      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x62: /* 0Fh E7h 62h MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=4 rm=2      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x63: /* 0Fh E7h 63h MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=4 rm=3      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x64: /* 0Fh E7h 64h MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=4 rm=4      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x65: /* 0Fh E7h 65h MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=4 rm=5      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x66: /* 0Fh E7h 66h MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=4 rm=6      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x67: /* 0Fh E7h 67h MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=4 rm=7      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x68: /* 0Fh E7h 68h MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=5 rm=0      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x69: /* 0Fh E7h 69h MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=5 rm=1      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x6A: /* 0Fh E7h 6Ah MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=5 rm=2      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x6B: /* 0Fh E7h 6Bh MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=5 rm=3      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x6C: /* 0Fh E7h 6Ch MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=5 rm=4      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x6D: /* 0Fh E7h 6Dh MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=5 rm=5      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x6E: /* 0Fh E7h 6Eh MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=5 rm=6      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x6F: /* 0Fh E7h 6Fh MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=5 rm=7      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x70: /* 0Fh E7h 70h MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=6 rm=0      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x71: /* 0Fh E7h 71h MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=6 rm=1      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x72: /* 0Fh E7h 72h MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=6 rm=2      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x73: /* 0Fh E7h 73h MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=6 rm=3      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x74: /* 0Fh E7h 74h MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=6 rm=4      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x75: /* 0Fh E7h 75h MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=6 rm=5      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x76: /* 0Fh E7h 76h MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=6 rm=6      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x77: /* 0Fh E7h 77h MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=6 rm=7      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x78: /* 0Fh E7h 78h MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=7 rm=0      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x79: /* 0Fh E7h 79h MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=7 rm=1      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x7A: /* 0Fh E7h 7Ah MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=7 rm=2      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x7B: /* 0Fh E7h 7Bh MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=7 rm=3      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x7C: /* 0Fh E7h 7Ch MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=7 rm=4      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x7D: /* 0Fh E7h 7Dh MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=7 rm=5      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x7E: /* 0Fh E7h 7Eh MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=7 rm=6      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x7F: /* 0Fh E7h 7Fh MOVNTQ mmx(r/m),mmx(reg) mod=1 reg=7 rm=7      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x80: /* 0Fh E7h 80h MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=0 rm=0      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x81: /* 0Fh E7h 81h MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=0 rm=1      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x82: /* 0Fh E7h 82h MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=0 rm=2      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x83: /* 0Fh E7h 83h MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=0 rm=3      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x84: /* 0Fh E7h 84h MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=0 rm=4      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x85: /* 0Fh E7h 85h MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=0 rm=5      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x86: /* 0Fh E7h 86h MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=0 rm=6      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x87: /* 0Fh E7h 87h MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=0 rm=7      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x88: /* 0Fh E7h 88h MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=1 rm=0      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x89: /* 0Fh E7h 89h MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=1 rm=1      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x8A: /* 0Fh E7h 8Ah MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=1 rm=2      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x8B: /* 0Fh E7h 8Bh MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=1 rm=3      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x8C: /* 0Fh E7h 8Ch MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=1 rm=4      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x8D: /* 0Fh E7h 8Dh MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=1 rm=5      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x8E: /* 0Fh E7h 8Eh MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=1 rm=6      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x8F: /* 0Fh E7h 8Fh MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=1 rm=7      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x90: /* 0Fh E7h 90h MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=2 rm=0      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x91: /* 0Fh E7h 91h MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=2 rm=1      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x92: /* 0Fh E7h 92h MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=2 rm=2      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x93: /* 0Fh E7h 93h MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=2 rm=3      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x94: /* 0Fh E7h 94h MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=2 rm=4      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x95: /* 0Fh E7h 95h MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=2 rm=5      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x96: /* 0Fh E7h 96h MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=2 rm=6      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x97: /* 0Fh E7h 97h MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=2 rm=7      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x98: /* 0Fh E7h 98h MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=3 rm=0      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x99: /* 0Fh E7h 99h MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=3 rm=1      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x9A: /* 0Fh E7h 9Ah MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=3 rm=2      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x9B: /* 0Fh E7h 9Bh MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=3 rm=3      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x9C: /* 0Fh E7h 9Ch MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=3 rm=4      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x9D: /* 0Fh E7h 9Dh MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=3 rm=5      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x9E: /* 0Fh E7h 9Eh MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=3 rm=6      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0x9F: /* 0Fh E7h 9Fh MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=3 rm=7      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0xA0: /* 0Fh E7h A0h MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=4 rm=0      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0xA1: /* 0Fh E7h A1h MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=4 rm=1      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0xA2: /* 0Fh E7h A2h MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=4 rm=2      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0xA3: /* 0Fh E7h A3h MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=4 rm=3      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0xA4: /* 0Fh E7h A4h MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=4 rm=4      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0xA5: /* 0Fh E7h A5h MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=4 rm=5      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0xA6: /* 0Fh E7h A6h MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=4 rm=6      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0xA7: /* 0Fh E7h A7h MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=4 rm=7      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0xA8: /* 0Fh E7h A8h MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=5 rm=0      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0xA9: /* 0Fh E7h A9h MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=5 rm=1      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0xAA: /* 0Fh E7h AAh MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=5 rm=2      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0xAB: /* 0Fh E7h ABh MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=5 rm=3      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0xAC: /* 0Fh E7h ACh MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=5 rm=4      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0xAD: /* 0Fh E7h ADh MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=5 rm=5      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0xAE: /* 0Fh E7h AEh MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=5 rm=6      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0xAF: /* 0Fh E7h AFh MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=5 rm=7      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0xB0: /* 0Fh E7h B0h MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=6 rm=0      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0xB1: /* 0Fh E7h B1h MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=6 rm=1      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0xB2: /* 0Fh E7h B2h MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=6 rm=2      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0xB3: /* 0Fh E7h B3h MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=6 rm=3      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0xB4: /* 0Fh E7h B4h MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=6 rm=4      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0xB5: /* 0Fh E7h B5h MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=6 rm=5      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0xB6: /* 0Fh E7h B6h MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=6 rm=6      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0xB7: /* 0Fh E7h B7h MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=6 rm=7      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0xB8: /* 0Fh E7h B8h MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=7 rm=0      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0xB9: /* 0Fh E7h B9h MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=7 rm=1      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0xBA: /* 0Fh E7h BAh MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=7 rm=2      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0xBB: /* 0Fh E7h BBh MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=7 rm=3      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0xBC: /* 0Fh E7h BCh MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=7 rm=4      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0xBD: /* 0Fh E7h BDh MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=7 rm=5      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0xBE: /* 0Fh E7h BEh MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=7 rm=6      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                    case 0xBF: /* 0Fh E7h BFh MOVNTQ mmx(r/m),mmx(reg) mod=2 reg=7 rm=7      spec: 0x0F 0xE7 mod/reg/rm mod!=3 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVNTQ %s,MM%u",IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""),mrm.reg());
                        break;
                    /* opcode 0Fh E7h C0h  not defined */
                    /* opcode 0Fh E7h C1h  not defined */
                    /* opcode 0Fh E7h C2h  not defined */
                    /* opcode 0Fh E7h C3h  not defined */
                    /* opcode 0Fh E7h C4h  not defined */
                    /* opcode 0Fh E7h C5h  not defined */
                    /* opcode 0Fh E7h C6h  not defined */
                    /* opcode 0Fh E7h C7h  not defined */
                    /* opcode 0Fh E7h C8h  not defined */
                    /* opcode 0Fh E7h C9h  not defined */
                    /* opcode 0Fh E7h CAh  not defined */
                    /* opcode 0Fh E7h CBh  not defined */
                    /* opcode 0Fh E7h CCh  not defined */
                    /* opcode 0Fh E7h CDh  not defined */
                    /* opcode 0Fh E7h CEh  not defined */
                    /* opcode 0Fh E7h CFh  not defined */
                    /* opcode 0Fh E7h D0h  not defined */
                    /* opcode 0Fh E7h D1h  not defined */
                    /* opcode 0Fh E7h D2h  not defined */
                    /* opcode 0Fh E7h D3h  not defined */
                    /* opcode 0Fh E7h D4h  not defined */
                    /* opcode 0Fh E7h D5h  not defined */
                    /* opcode 0Fh E7h D6h  not defined */
                    /* opcode 0Fh E7h D7h  not defined */
                    /* opcode 0Fh E7h D8h  not defined */
                    /* opcode 0Fh E7h D9h  not defined */
                    /* opcode 0Fh E7h DAh  not defined */
                    /* opcode 0Fh E7h DBh  not defined */
                    /* opcode 0Fh E7h DCh  not defined */
                    /* opcode 0Fh E7h DDh  not defined */
                    /* opcode 0Fh E7h DEh  not defined */
                    /* opcode 0Fh E7h DFh  not defined */
                    /* opcode 0Fh E7h E0h  not defined */
                    /* opcode 0Fh E7h E1h  not defined */
                    /* opcode 0Fh E7h E2h  not defined */
                    /* opcode 0Fh E7h E3h  not defined */
                    /* opcode 0Fh E7h E4h  not defined */
                    /* opcode 0Fh E7h E5h  not defined */
                    /* opcode 0Fh E7h E6h  not defined */
                    /* opcode 0Fh E7h E7h  not defined */
                    /* opcode 0Fh E7h E8h  not defined */
                    /* opcode 0Fh E7h E9h  not defined */
                    /* opcode 0Fh E7h EAh  not defined */
                    /* opcode 0Fh E7h EBh  not defined */
                    /* opcode 0Fh E7h ECh  not defined */
                    /* opcode 0Fh E7h EDh  not defined */
                    /* opcode 0Fh E7h EEh  not defined */
                    /* opcode 0Fh E7h EFh  not defined */
                    /* opcode 0Fh E7h F0h  not defined */
                    /* opcode 0Fh E7h F1h  not defined */
                    /* opcode 0Fh E7h F2h  not defined */
                    /* opcode 0Fh E7h F3h  not defined */
                    /* opcode 0Fh E7h F4h  not defined */
                    /* opcode 0Fh E7h F5h  not defined */
                    /* opcode 0Fh E7h F6h  not defined */
                    /* opcode 0Fh E7h F7h  not defined */
                    /* opcode 0Fh E7h F8h  not defined */
                    /* opcode 0Fh E7h F9h  not defined */
                    /* opcode 0Fh E7h FAh  not defined */
                    /* opcode 0Fh E7h FBh  not defined */
                    /* opcode 0Fh E7h FCh  not defined */
                    /* opcode 0Fh E7h FDh  not defined */
                    /* opcode 0Fh E7h FEh  not defined */
                    /* opcode 0Fh E7h FFh  not defined */
                    default:
                        goto _x86decode_illegal_opcode;
                };
/* End of opcodes starting with 0Fh E7h */
                break;
            case 0xE8: /* 0Fh E8h PSUBSB mmx(reg),mmx(r/m)      spec: 0x0F 0xE8 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSUBSB MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                break;
            case 0xE9: /* 0Fh E9h PSUBSW mmx(reg),mmx(r/m)      spec: 0x0F 0xE9 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSUBSW MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                break;
            case 0xEA: /* 0Fh EAh PMINSW mmx(reg),mmx(r/m)      spec: 0x0F 0xEA mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PMINSW MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                break;
            case 0xEB: /* 0Fh EBh POR mmx(reg),mmx(r/m)      spec: 0x0F 0xEB mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"POR MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                break;
            case 0xEC: /* 0Fh ECh PADDSB mmx(reg),mmx(r/m)      spec: 0x0F 0xEC mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PADDSB MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                break;
            case 0xED: /* 0Fh EDh PADDSW mmx(reg),mmx(r/m)      spec: 0x0F 0xED mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PADDSW MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                break;
            case 0xEE: /* 0Fh EEh PMAXSW mmx(reg),mmx(r/m)      spec: 0x0F 0xEE mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PMAXSW MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                break;
            case 0xEF: /* 0Fh EFh PXOR mmx(reg),mmx(r/m)      spec: 0x0F 0xEF mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PXOR MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                break;
            /* opcode 0Fh F0h  not defined */
            case 0xF1: /* 0Fh F1h PSLLW mmx(reg),mmx(r/m)      spec: 0x0F 0xF1 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSLLW MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                break;
            case 0xF2: /* 0Fh F2h PSLLD mmx(reg),mmx(r/m)      spec: 0x0F 0xF2 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSLLD MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                break;
            case 0xF3: /* 0Fh F3h PSLLQ mmx(reg),mmx(r/m)      spec: 0x0F 0xF3 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSLLQ MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                break;
            case 0xF4: /* 0Fh F4h PMULUDQ mmx(reg),mmx(r/m)      spec: 0x0F 0xF4 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PMULUDQ MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                break;
            case 0xF5: /* 0Fh F5h PMADDWD mmx(reg),mmx(r/m)      spec: 0x0F 0xF5 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PMADDWD MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                break;
            case 0xF6: /* 0Fh F6h PSADBW mmx(reg),mmx(r/m)      spec: 0x0F 0xF6 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSADBW MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                break;
            case 0xF7: /* 0Fh F7h        spec:  */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                _x86decode_begin_code32_addr32_opcode_parse_0FF7:
/* Opcodes starting with 0Fh F7h */
                switch (mrm.byte) {
                    /* opcode 0Fh F7h 00h  not defined */
                    /* opcode 0Fh F7h 01h  not defined */
                    /* opcode 0Fh F7h 02h  not defined */
                    /* opcode 0Fh F7h 03h  not defined */
                    /* opcode 0Fh F7h 04h  not defined */
                    /* opcode 0Fh F7h 05h  not defined */
                    /* opcode 0Fh F7h 06h  not defined */
                    /* opcode 0Fh F7h 07h  not defined */
                    /* opcode 0Fh F7h 08h  not defined */
                    /* opcode 0Fh F7h 09h  not defined */
                    /* opcode 0Fh F7h 0Ah  not defined */
                    /* opcode 0Fh F7h 0Bh  not defined */
                    /* opcode 0Fh F7h 0Ch  not defined */
                    /* opcode 0Fh F7h 0Dh  not defined */
                    /* opcode 0Fh F7h 0Eh  not defined */
                    /* opcode 0Fh F7h 0Fh  not defined */
                    /* opcode 0Fh F7h 10h  not defined */
                    /* opcode 0Fh F7h 11h  not defined */
                    /* opcode 0Fh F7h 12h  not defined */
                    /* opcode 0Fh F7h 13h  not defined */
                    /* opcode 0Fh F7h 14h  not defined */
                    /* opcode 0Fh F7h 15h  not defined */
                    /* opcode 0Fh F7h 16h  not defined */
                    /* opcode 0Fh F7h 17h  not defined */
                    /* opcode 0Fh F7h 18h  not defined */
                    /* opcode 0Fh F7h 19h  not defined */
                    /* opcode 0Fh F7h 1Ah  not defined */
                    /* opcode 0Fh F7h 1Bh  not defined */
                    /* opcode 0Fh F7h 1Ch  not defined */
                    /* opcode 0Fh F7h 1Dh  not defined */
                    /* opcode 0Fh F7h 1Eh  not defined */
                    /* opcode 0Fh F7h 1Fh  not defined */
                    /* opcode 0Fh F7h 20h  not defined */
                    /* opcode 0Fh F7h 21h  not defined */
                    /* opcode 0Fh F7h 22h  not defined */
                    /* opcode 0Fh F7h 23h  not defined */
                    /* opcode 0Fh F7h 24h  not defined */
                    /* opcode 0Fh F7h 25h  not defined */
                    /* opcode 0Fh F7h 26h  not defined */
                    /* opcode 0Fh F7h 27h  not defined */
                    /* opcode 0Fh F7h 28h  not defined */
                    /* opcode 0Fh F7h 29h  not defined */
                    /* opcode 0Fh F7h 2Ah  not defined */
                    /* opcode 0Fh F7h 2Bh  not defined */
                    /* opcode 0Fh F7h 2Ch  not defined */
                    /* opcode 0Fh F7h 2Dh  not defined */
                    /* opcode 0Fh F7h 2Eh  not defined */
                    /* opcode 0Fh F7h 2Fh  not defined */
                    /* opcode 0Fh F7h 30h  not defined */
                    /* opcode 0Fh F7h 31h  not defined */
                    /* opcode 0Fh F7h 32h  not defined */
                    /* opcode 0Fh F7h 33h  not defined */
                    /* opcode 0Fh F7h 34h  not defined */
                    /* opcode 0Fh F7h 35h  not defined */
                    /* opcode 0Fh F7h 36h  not defined */
                    /* opcode 0Fh F7h 37h  not defined */
                    /* opcode 0Fh F7h 38h  not defined */
                    /* opcode 0Fh F7h 39h  not defined */
                    /* opcode 0Fh F7h 3Ah  not defined */
                    /* opcode 0Fh F7h 3Bh  not defined */
                    /* opcode 0Fh F7h 3Ch  not defined */
                    /* opcode 0Fh F7h 3Dh  not defined */
                    /* opcode 0Fh F7h 3Eh  not defined */
                    /* opcode 0Fh F7h 3Fh  not defined */
                    /* opcode 0Fh F7h 40h  not defined */
                    /* opcode 0Fh F7h 41h  not defined */
                    /* opcode 0Fh F7h 42h  not defined */
                    /* opcode 0Fh F7h 43h  not defined */
                    /* opcode 0Fh F7h 44h  not defined */
                    /* opcode 0Fh F7h 45h  not defined */
                    /* opcode 0Fh F7h 46h  not defined */
                    /* opcode 0Fh F7h 47h  not defined */
                    /* opcode 0Fh F7h 48h  not defined */
                    /* opcode 0Fh F7h 49h  not defined */
                    /* opcode 0Fh F7h 4Ah  not defined */
                    /* opcode 0Fh F7h 4Bh  not defined */
                    /* opcode 0Fh F7h 4Ch  not defined */
                    /* opcode 0Fh F7h 4Dh  not defined */
                    /* opcode 0Fh F7h 4Eh  not defined */
                    /* opcode 0Fh F7h 4Fh  not defined */
                    /* opcode 0Fh F7h 50h  not defined */
                    /* opcode 0Fh F7h 51h  not defined */
                    /* opcode 0Fh F7h 52h  not defined */
                    /* opcode 0Fh F7h 53h  not defined */
                    /* opcode 0Fh F7h 54h  not defined */
                    /* opcode 0Fh F7h 55h  not defined */
                    /* opcode 0Fh F7h 56h  not defined */
                    /* opcode 0Fh F7h 57h  not defined */
                    /* opcode 0Fh F7h 58h  not defined */
                    /* opcode 0Fh F7h 59h  not defined */
                    /* opcode 0Fh F7h 5Ah  not defined */
                    /* opcode 0Fh F7h 5Bh  not defined */
                    /* opcode 0Fh F7h 5Ch  not defined */
                    /* opcode 0Fh F7h 5Dh  not defined */
                    /* opcode 0Fh F7h 5Eh  not defined */
                    /* opcode 0Fh F7h 5Fh  not defined */
                    /* opcode 0Fh F7h 60h  not defined */
                    /* opcode 0Fh F7h 61h  not defined */
                    /* opcode 0Fh F7h 62h  not defined */
                    /* opcode 0Fh F7h 63h  not defined */
                    /* opcode 0Fh F7h 64h  not defined */
                    /* opcode 0Fh F7h 65h  not defined */
                    /* opcode 0Fh F7h 66h  not defined */
                    /* opcode 0Fh F7h 67h  not defined */
                    /* opcode 0Fh F7h 68h  not defined */
                    /* opcode 0Fh F7h 69h  not defined */
                    /* opcode 0Fh F7h 6Ah  not defined */
                    /* opcode 0Fh F7h 6Bh  not defined */
                    /* opcode 0Fh F7h 6Ch  not defined */
                    /* opcode 0Fh F7h 6Dh  not defined */
                    /* opcode 0Fh F7h 6Eh  not defined */
                    /* opcode 0Fh F7h 6Fh  not defined */
                    /* opcode 0Fh F7h 70h  not defined */
                    /* opcode 0Fh F7h 71h  not defined */
                    /* opcode 0Fh F7h 72h  not defined */
                    /* opcode 0Fh F7h 73h  not defined */
                    /* opcode 0Fh F7h 74h  not defined */
                    /* opcode 0Fh F7h 75h  not defined */
                    /* opcode 0Fh F7h 76h  not defined */
                    /* opcode 0Fh F7h 77h  not defined */
                    /* opcode 0Fh F7h 78h  not defined */
                    /* opcode 0Fh F7h 79h  not defined */
                    /* opcode 0Fh F7h 7Ah  not defined */
                    /* opcode 0Fh F7h 7Bh  not defined */
                    /* opcode 0Fh F7h 7Ch  not defined */
                    /* opcode 0Fh F7h 7Dh  not defined */
                    /* opcode 0Fh F7h 7Eh  not defined */
                    /* opcode 0Fh F7h 7Fh  not defined */
                    /* opcode 0Fh F7h 80h  not defined */
                    /* opcode 0Fh F7h 81h  not defined */
                    /* opcode 0Fh F7h 82h  not defined */
                    /* opcode 0Fh F7h 83h  not defined */
                    /* opcode 0Fh F7h 84h  not defined */
                    /* opcode 0Fh F7h 85h  not defined */
                    /* opcode 0Fh F7h 86h  not defined */
                    /* opcode 0Fh F7h 87h  not defined */
                    /* opcode 0Fh F7h 88h  not defined */
                    /* opcode 0Fh F7h 89h  not defined */
                    /* opcode 0Fh F7h 8Ah  not defined */
                    /* opcode 0Fh F7h 8Bh  not defined */
                    /* opcode 0Fh F7h 8Ch  not defined */
                    /* opcode 0Fh F7h 8Dh  not defined */
                    /* opcode 0Fh F7h 8Eh  not defined */
                    /* opcode 0Fh F7h 8Fh  not defined */
                    /* opcode 0Fh F7h 90h  not defined */
                    /* opcode 0Fh F7h 91h  not defined */
                    /* opcode 0Fh F7h 92h  not defined */
                    /* opcode 0Fh F7h 93h  not defined */
                    /* opcode 0Fh F7h 94h  not defined */
                    /* opcode 0Fh F7h 95h  not defined */
                    /* opcode 0Fh F7h 96h  not defined */
                    /* opcode 0Fh F7h 97h  not defined */
                    /* opcode 0Fh F7h 98h  not defined */
                    /* opcode 0Fh F7h 99h  not defined */
                    /* opcode 0Fh F7h 9Ah  not defined */
                    /* opcode 0Fh F7h 9Bh  not defined */
                    /* opcode 0Fh F7h 9Ch  not defined */
                    /* opcode 0Fh F7h 9Dh  not defined */
                    /* opcode 0Fh F7h 9Eh  not defined */
                    /* opcode 0Fh F7h 9Fh  not defined */
                    /* opcode 0Fh F7h A0h  not defined */
                    /* opcode 0Fh F7h A1h  not defined */
                    /* opcode 0Fh F7h A2h  not defined */
                    /* opcode 0Fh F7h A3h  not defined */
                    /* opcode 0Fh F7h A4h  not defined */
                    /* opcode 0Fh F7h A5h  not defined */
                    /* opcode 0Fh F7h A6h  not defined */
                    /* opcode 0Fh F7h A7h  not defined */
                    /* opcode 0Fh F7h A8h  not defined */
                    /* opcode 0Fh F7h A9h  not defined */
                    /* opcode 0Fh F7h AAh  not defined */
                    /* opcode 0Fh F7h ABh  not defined */
                    /* opcode 0Fh F7h ACh  not defined */
                    /* opcode 0Fh F7h ADh  not defined */
                    /* opcode 0Fh F7h AEh  not defined */
                    /* opcode 0Fh F7h AFh  not defined */
                    /* opcode 0Fh F7h B0h  not defined */
                    /* opcode 0Fh F7h B1h  not defined */
                    /* opcode 0Fh F7h B2h  not defined */
                    /* opcode 0Fh F7h B3h  not defined */
                    /* opcode 0Fh F7h B4h  not defined */
                    /* opcode 0Fh F7h B5h  not defined */
                    /* opcode 0Fh F7h B6h  not defined */
                    /* opcode 0Fh F7h B7h  not defined */
                    /* opcode 0Fh F7h B8h  not defined */
                    /* opcode 0Fh F7h B9h  not defined */
                    /* opcode 0Fh F7h BAh  not defined */
                    /* opcode 0Fh F7h BBh  not defined */
                    /* opcode 0Fh F7h BCh  not defined */
                    /* opcode 0Fh F7h BDh  not defined */
                    /* opcode 0Fh F7h BEh  not defined */
                    /* opcode 0Fh F7h BFh  not defined */
                    case 0xC0: /* 0Fh F7h C0h MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=0 rm=0      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xC1: /* 0Fh F7h C1h MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=0 rm=1      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xC2: /* 0Fh F7h C2h MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=0 rm=2      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xC3: /* 0Fh F7h C3h MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=0 rm=3      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xC4: /* 0Fh F7h C4h MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=0 rm=4      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xC5: /* 0Fh F7h C5h MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=0 rm=5      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xC6: /* 0Fh F7h C6h MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=0 rm=6      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xC7: /* 0Fh F7h C7h MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=0 rm=7      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xC8: /* 0Fh F7h C8h MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=1 rm=0      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xC9: /* 0Fh F7h C9h MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=1 rm=1      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xCA: /* 0Fh F7h CAh MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=1 rm=2      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xCB: /* 0Fh F7h CBh MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=1 rm=3      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xCC: /* 0Fh F7h CCh MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=1 rm=4      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xCD: /* 0Fh F7h CDh MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=1 rm=5      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xCE: /* 0Fh F7h CEh MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=1 rm=6      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xCF: /* 0Fh F7h CFh MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=1 rm=7      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xD0: /* 0Fh F7h D0h MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=2 rm=0      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xD1: /* 0Fh F7h D1h MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=2 rm=1      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xD2: /* 0Fh F7h D2h MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=2 rm=2      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xD3: /* 0Fh F7h D3h MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=2 rm=3      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xD4: /* 0Fh F7h D4h MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=2 rm=4      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xD5: /* 0Fh F7h D5h MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=2 rm=5      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xD6: /* 0Fh F7h D6h MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=2 rm=6      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xD7: /* 0Fh F7h D7h MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=2 rm=7      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xD8: /* 0Fh F7h D8h MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=3 rm=0      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xD9: /* 0Fh F7h D9h MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=3 rm=1      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xDA: /* 0Fh F7h DAh MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=3 rm=2      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xDB: /* 0Fh F7h DBh MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=3 rm=3      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xDC: /* 0Fh F7h DCh MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=3 rm=4      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xDD: /* 0Fh F7h DDh MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=3 rm=5      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xDE: /* 0Fh F7h DEh MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=3 rm=6      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xDF: /* 0Fh F7h DFh MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=3 rm=7      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xE0: /* 0Fh F7h E0h MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=4 rm=0      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xE1: /* 0Fh F7h E1h MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=4 rm=1      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xE2: /* 0Fh F7h E2h MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=4 rm=2      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xE3: /* 0Fh F7h E3h MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=4 rm=3      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xE4: /* 0Fh F7h E4h MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=4 rm=4      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xE5: /* 0Fh F7h E5h MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=4 rm=5      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xE6: /* 0Fh F7h E6h MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=4 rm=6      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xE7: /* 0Fh F7h E7h MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=4 rm=7      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xE8: /* 0Fh F7h E8h MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=5 rm=0      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xE9: /* 0Fh F7h E9h MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=5 rm=1      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xEA: /* 0Fh F7h EAh MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=5 rm=2      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xEB: /* 0Fh F7h EBh MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=5 rm=3      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xEC: /* 0Fh F7h ECh MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=5 rm=4      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xED: /* 0Fh F7h EDh MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=5 rm=5      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xEE: /* 0Fh F7h EEh MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=5 rm=6      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xEF: /* 0Fh F7h EFh MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=5 rm=7      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xF0: /* 0Fh F7h F0h MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=6 rm=0      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xF1: /* 0Fh F7h F1h MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=6 rm=1      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xF2: /* 0Fh F7h F2h MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=6 rm=2      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xF3: /* 0Fh F7h F3h MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=6 rm=3      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xF4: /* 0Fh F7h F4h MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=6 rm=4      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xF5: /* 0Fh F7h F5h MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=6 rm=5      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xF6: /* 0Fh F7h F6h MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=6 rm=6      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xF7: /* 0Fh F7h F7h MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=6 rm=7      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xF8: /* 0Fh F7h F8h MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=7 rm=0      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xF9: /* 0Fh F7h F9h MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=7 rm=1      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xFA: /* 0Fh F7h FAh MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=7 rm=2      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xFB: /* 0Fh F7h FBh MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=7 rm=3      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xFC: /* 0Fh F7h FCh MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=7 rm=4      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xFD: /* 0Fh F7h FDh MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=7 rm=5      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xFE: /* 0Fh F7h FEh MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=7 rm=6      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                    case 0xFF: /* 0Fh F7h FFh MASKMOVQ mmx(reg),mmx(r/m) mod=3 reg=7 rm=7      spec: 0x0F 0xF7 mod/reg/rm mod==3 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MASKMOVQ MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                        break;
                    default:
                        goto _x86decode_illegal_opcode;
                };
/* End of opcodes starting with 0Fh F7h */
                break;
            case 0xF8: /* 0Fh F8h PSUBB mmx(reg),mmx(r/m)      spec: 0x0F 0xF8 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSUBB MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                break;
            case 0xF9: /* 0Fh F9h PSUBW mmx(reg),mmx(r/m)      spec: 0x0F 0xF9 mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSUBW MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                break;
            case 0xFA: /* 0Fh FAh PSUBD mmx(reg),mmx(r/m)      spec: 0x0F 0xFA mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSUBD MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                break;
            case 0xFB: /* 0Fh FBh PSUBQ mmx(reg),mmx(r/m)      spec: 0x0F 0xFB mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSUBQ MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                break;
            case 0xFC: /* 0Fh FCh PADDB mmx(reg),mmx(r/m)      spec: 0x0F 0xFC mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PADDB MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                break;
            case 0xFD: /* 0Fh FDh PADDW mmx(reg),mmx(r/m)      spec: 0x0F 0xFD mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PADDW MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                break;
            case 0xFE: /* 0Fh FEh PADDD mmx(reg),mmx(r/m)      spec: 0x0F 0xFE mod/reg/rm */
                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PADDD MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                break;
            /* opcode 0Fh FFh  not defined */
            default:
                goto _x86decode_illegal_opcode;
        };
/* End of opcodes starting with 0Fh */
        break;
    case 0x10: /* 10h ADCb b(r/m),b(reg)      spec: 0x10 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ADCb %s,%s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),CPUregsN[1][mrm.reg()]);
        break;
    case 0x11: /* 11h ADCd w(r/m),w(reg)      spec: 0x11 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ADCd %s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[4][mrm.reg()]);
        break;
    case 0x12: /* 12h ADCb b(reg),b(r/m)      spec: 0x12 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ADCb %s,%s",CPUregsN[1][mrm.reg()],IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
        break;
    case 0x13: /* 13h ADCd w(reg),w(r/m)      spec: 0x13 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ADCd %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
        break;
    case 0x14: /* 14h ADCb b(a),i      spec: 0x14 ib */
        imm=IPFB();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ADCb %s,0x%02lX",CPUregsN[1][0],(unsigned long)((uint32_t)imm));
        break;
    case 0x15: /* 15h ADCd w(a),i      spec: 0x15 iw */
        imm=IPFcodeW();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ADCd %s,0x%08lX",CPUregsN[4][0],(unsigned long)((uint32_t)imm));
        break;
    case 0x16: /* 16h PUSHd w(ss)      spec: 0x16 */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PUSHd %s",CPUsregs_80386[2]);
        break;
    case 0x17: /* 17h POPd w(ss)      spec: 0x17 */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"POPd %s",CPUsregs_80386[2]);
        break;
    case 0x18: /* 18h SBBb b(r/m),b(reg)      spec: 0x18 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SBBb %s,%s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),CPUregsN[1][mrm.reg()]);
        break;
    case 0x19: /* 19h SBBd w(r/m),w(reg)      spec: 0x19 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SBBd %s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[4][mrm.reg()]);
        break;
    case 0x1A: /* 1Ah SBBb b(reg),b(r/m)      spec: 0x1A mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SBBb %s,%s",CPUregsN[1][mrm.reg()],IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
        break;
    case 0x1B: /* 1Bh SBBd w(reg),w(r/m)      spec: 0x1B mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SBBd %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
        break;
    case 0x1C: /* 1Ch SBBb b(a),i      spec: 0x1C ib */
        imm=IPFB();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SBBb %s,0x%02lX",CPUregsN[1][0],(unsigned long)((uint32_t)imm));
        break;
    case 0x1D: /* 1Dh SBBd w(a),i      spec: 0x1D iw */
        imm=IPFcodeW();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SBBd %s,0x%08lX",CPUregsN[4][0],(unsigned long)((uint32_t)imm));
        break;
    case 0x1E: /* 1Eh PUSHd w(ds)      spec: 0x1E */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PUSHd %s",CPUsregs_80386[3]);
        break;
    case 0x1F: /* 1Fh POPd w(ds)      spec: 0x1F */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"POPd %s",CPUsregs_80386[3]);
        break;
    case 0x20: /* 20h ANDb b(r/m),b(reg)      spec: 0x20 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ANDb %s,%s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),CPUregsN[1][mrm.reg()]);
        break;
    case 0x21: /* 21h ANDd w(r/m),w(reg)      spec: 0x21 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ANDd %s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[4][mrm.reg()]);
        break;
    case 0x22: /* 22h ANDb b(reg),b(r/m)      spec: 0x22 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ANDb %s,%s",CPUregsN[1][mrm.reg()],IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
        break;
    case 0x23: /* 23h ANDd w(reg),w(r/m)      spec: 0x23 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ANDd %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
        break;
    case 0x24: /* 24h ANDb b(a),i      spec: 0x24 ib */
        imm=IPFB();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ANDb %s,0x%02lX",CPUregsN[1][0],(unsigned long)((uint32_t)imm));
        break;
    case 0x25: /* 25h ANDd w(a),i      spec: 0x25 iw */
        imm=IPFcodeW();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ANDd %s,0x%08lX",CPUregsN[4][0],(unsigned long)((uint32_t)imm));
        break;
    case 0x26: /* 26h ES:       spec: prefix 0x26 segoverride(es) */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ES: ");
        goto _x86decode_after_prefix_code32_addr32;
    case 0x27: /* 27h DAAb       spec: 0x27 */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"DAAb");
        break;
    case 0x28: /* 28h SUBb b(r/m),b(reg)      spec: 0x28 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SUBb %s,%s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),CPUregsN[1][mrm.reg()]);
        break;
    case 0x29: /* 29h SUBd w(r/m),w(reg)      spec: 0x29 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SUBd %s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[4][mrm.reg()]);
        break;
    case 0x2A: /* 2Ah SUBb b(reg),b(r/m)      spec: 0x2A mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SUBb %s,%s",CPUregsN[1][mrm.reg()],IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
        break;
    case 0x2B: /* 2Bh SUBd w(reg),w(r/m)      spec: 0x2B mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SUBd %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
        break;
    case 0x2C: /* 2Ch SUBb b(a),i      spec: 0x2C ib */
        imm=IPFB();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SUBb %s,0x%02lX",CPUregsN[1][0],(unsigned long)((uint32_t)imm));
        break;
    case 0x2D: /* 2Dh SUBd w(a),i      spec: 0x2D iw */
        imm=IPFcodeW();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SUBd %s,0x%08lX",CPUregsN[4][0],(unsigned long)((uint32_t)imm));
        break;
    case 0x2E: /* 2Eh CS:       spec: prefix 0x2E segoverride(cs) */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CS: ");
        goto _x86decode_after_prefix_code32_addr32;
    case 0x2F: /* 2Fh DASb       spec: 0x2F */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"DASb");
        break;
    case 0x30: /* 30h XORb b(r/m),b(reg)      spec: 0x30 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"XORb %s,%s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),CPUregsN[1][mrm.reg()]);
        break;
    case 0x31: /* 31h XORd w(r/m),w(reg)      spec: 0x31 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"XORd %s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[4][mrm.reg()]);
        break;
    case 0x32: /* 32h XORb b(reg),b(r/m)      spec: 0x32 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"XORb %s,%s",CPUregsN[1][mrm.reg()],IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
        break;
    case 0x33: /* 33h XORd w(reg),w(r/m)      spec: 0x33 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"XORd %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
        break;
    case 0x34: /* 34h XORb b(a),i      spec: 0x34 ib */
        imm=IPFB();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"XORb %s,0x%02lX",CPUregsN[1][0],(unsigned long)((uint32_t)imm));
        break;
    case 0x35: /* 35h XORd w(a),i      spec: 0x35 iw */
        imm=IPFcodeW();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"XORd %s,0x%08lX",CPUregsN[4][0],(unsigned long)((uint32_t)imm));
        break;
    case 0x36: /* 36h SS:       spec: prefix 0x36 segoverride(ss) */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SS: ");
        goto _x86decode_after_prefix_code32_addr32;
    case 0x37: /* 37h AAAb       spec: 0x37 */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"AAAb");
        break;
    case 0x38: /* 38h CMPb b(r/m),b(reg)      spec: 0x38 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CMPb %s,%s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),CPUregsN[1][mrm.reg()]);
        break;
    case 0x39: /* 39h CMPd w(r/m),w(reg)      spec: 0x39 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CMPd %s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[4][mrm.reg()]);
        break;
    case 0x3A: /* 3Ah CMPb b(reg),b(r/m)      spec: 0x3A mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CMPb %s,%s",CPUregsN[1][mrm.reg()],IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
        break;
    case 0x3B: /* 3Bh CMPd w(reg),w(r/m)      spec: 0x3B mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CMPd %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
        break;
    case 0x3C: /* 3Ch CMPb b(a),i      spec: 0x3C ib */
        imm=IPFB();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CMPb %s,0x%02lX",CPUregsN[1][0],(unsigned long)((uint32_t)imm));
        break;
    case 0x3D: /* 3Dh CMPd w(a),i      spec: 0x3D iw */
        imm=IPFcodeW();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CMPd %s,0x%08lX",CPUregsN[4][0],(unsigned long)((uint32_t)imm));
        break;
    case 0x3E: /* 3Eh DS:       spec: prefix 0x3E segoverride(ds) */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"DS: ");
        goto _x86decode_after_prefix_code32_addr32;
    case 0x3F: /* 3Fh AASb       spec: 0x3F */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"AASb");
        break;
    case 0x40: /* 40h INCd w(reg) reg=0      spec: range(0x40,0x47) reg=op02 */
    case 0x41: /* 41h INCd w(reg) reg=1      spec: range(0x40,0x47) reg=op02 */
    case 0x42: /* 42h INCd w(reg) reg=2      spec: range(0x40,0x47) reg=op02 */
    case 0x43: /* 43h INCd w(reg) reg=3      spec: range(0x40,0x47) reg=op02 */
    case 0x44: /* 44h INCd w(reg) reg=4      spec: range(0x40,0x47) reg=op02 */
    case 0x45: /* 45h INCd w(reg) reg=5      spec: range(0x40,0x47) reg=op02 */
    case 0x46: /* 46h INCd w(reg) reg=6      spec: range(0x40,0x47) reg=op02 */
    case 0x47: /* 47h INCd w(reg) reg=7      spec: range(0x40,0x47) reg=op02 */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"INCd %s",CPUregsN[4][op&7]);
        break;
    case 0x48: /* 48h DECd w(reg) reg=0      spec: range(0x48,0x4F) reg=op02 */
    case 0x49: /* 49h DECd w(reg) reg=1      spec: range(0x48,0x4F) reg=op02 */
    case 0x4A: /* 4Ah DECd w(reg) reg=2      spec: range(0x48,0x4F) reg=op02 */
    case 0x4B: /* 4Bh DECd w(reg) reg=3      spec: range(0x48,0x4F) reg=op02 */
    case 0x4C: /* 4Ch DECd w(reg) reg=4      spec: range(0x48,0x4F) reg=op02 */
    case 0x4D: /* 4Dh DECd w(reg) reg=5      spec: range(0x48,0x4F) reg=op02 */
    case 0x4E: /* 4Eh DECd w(reg) reg=6      spec: range(0x48,0x4F) reg=op02 */
    case 0x4F: /* 4Fh DECd w(reg) reg=7      spec: range(0x48,0x4F) reg=op02 */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"DECd %s",CPUregsN[4][op&7]);
        break;
    case 0x50: /* 50h PUSHd w(reg) reg=0      spec: range(0x50,0x57) reg=op02 */
    case 0x51: /* 51h PUSHd w(reg) reg=1      spec: range(0x50,0x57) reg=op02 */
    case 0x52: /* 52h PUSHd w(reg) reg=2      spec: range(0x50,0x57) reg=op02 */
    case 0x53: /* 53h PUSHd w(reg) reg=3      spec: range(0x50,0x57) reg=op02 */
    case 0x54: /* 54h PUSHd w(reg) reg=4      spec: range(0x50,0x57) reg=op02 */
    case 0x55: /* 55h PUSHd w(reg) reg=5      spec: range(0x50,0x57) reg=op02 */
    case 0x56: /* 56h PUSHd w(reg) reg=6      spec: range(0x50,0x57) reg=op02 */
    case 0x57: /* 57h PUSHd w(reg) reg=7      spec: range(0x50,0x57) reg=op02 */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PUSHd %s",CPUregsN[4][op&7]);
        break;
    case 0x58: /* 58h POPd w(reg) reg=0      spec: range(0x58,0x5F) reg=op02 */
    case 0x59: /* 59h POPd w(reg) reg=1      spec: range(0x58,0x5F) reg=op02 */
    case 0x5A: /* 5Ah POPd w(reg) reg=2      spec: range(0x58,0x5F) reg=op02 */
    case 0x5B: /* 5Bh POPd w(reg) reg=3      spec: range(0x58,0x5F) reg=op02 */
    case 0x5C: /* 5Ch POPd w(reg) reg=4      spec: range(0x58,0x5F) reg=op02 */
    case 0x5D: /* 5Dh POPd w(reg) reg=5      spec: range(0x58,0x5F) reg=op02 */
    case 0x5E: /* 5Eh POPd w(reg) reg=6      spec: range(0x58,0x5F) reg=op02 */
    case 0x5F: /* 5Fh POPd w(reg) reg=7      spec: range(0x58,0x5F) reg=op02 */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"POPd %s",CPUregsN[4][op&7]);
        break;
    case 0x60: /* 60h PUSHAd       spec: 0x60 */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PUSHAd");
        break;
    case 0x61: /* 61h POPAd       spec: 0x61 */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"POPAd");
        break;
    case 0x62: /* 62h        spec:  */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        _x86decode_begin_code32_addr32_opcode_parse_62:
/* Opcodes starting with 62h */
        switch (mrm.byte) {
            case 0x00: /* 62h 00h BOUNDd w(reg),w(r/m) mod=0 reg=0 rm=0      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x01: /* 62h 01h BOUNDd w(reg),w(r/m) mod=0 reg=0 rm=1      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x02: /* 62h 02h BOUNDd w(reg),w(r/m) mod=0 reg=0 rm=2      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x03: /* 62h 03h BOUNDd w(reg),w(r/m) mod=0 reg=0 rm=3      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x04: /* 62h 04h BOUNDd w(reg),w(r/m) mod=0 reg=0 rm=4      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x05: /* 62h 05h BOUNDd w(reg),w(r/m) mod=0 reg=0 rm=5      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x06: /* 62h 06h BOUNDd w(reg),w(r/m) mod=0 reg=0 rm=6      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x07: /* 62h 07h BOUNDd w(reg),w(r/m) mod=0 reg=0 rm=7      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x08: /* 62h 08h BOUNDd w(reg),w(r/m) mod=0 reg=1 rm=0      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x09: /* 62h 09h BOUNDd w(reg),w(r/m) mod=0 reg=1 rm=1      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x0A: /* 62h 0Ah BOUNDd w(reg),w(r/m) mod=0 reg=1 rm=2      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x0B: /* 62h 0Bh BOUNDd w(reg),w(r/m) mod=0 reg=1 rm=3      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x0C: /* 62h 0Ch BOUNDd w(reg),w(r/m) mod=0 reg=1 rm=4      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x0D: /* 62h 0Dh BOUNDd w(reg),w(r/m) mod=0 reg=1 rm=5      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x0E: /* 62h 0Eh BOUNDd w(reg),w(r/m) mod=0 reg=1 rm=6      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x0F: /* 62h 0Fh BOUNDd w(reg),w(r/m) mod=0 reg=1 rm=7      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x10: /* 62h 10h BOUNDd w(reg),w(r/m) mod=0 reg=2 rm=0      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x11: /* 62h 11h BOUNDd w(reg),w(r/m) mod=0 reg=2 rm=1      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x12: /* 62h 12h BOUNDd w(reg),w(r/m) mod=0 reg=2 rm=2      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x13: /* 62h 13h BOUNDd w(reg),w(r/m) mod=0 reg=2 rm=3      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x14: /* 62h 14h BOUNDd w(reg),w(r/m) mod=0 reg=2 rm=4      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x15: /* 62h 15h BOUNDd w(reg),w(r/m) mod=0 reg=2 rm=5      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x16: /* 62h 16h BOUNDd w(reg),w(r/m) mod=0 reg=2 rm=6      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x17: /* 62h 17h BOUNDd w(reg),w(r/m) mod=0 reg=2 rm=7      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x18: /* 62h 18h BOUNDd w(reg),w(r/m) mod=0 reg=3 rm=0      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x19: /* 62h 19h BOUNDd w(reg),w(r/m) mod=0 reg=3 rm=1      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x1A: /* 62h 1Ah BOUNDd w(reg),w(r/m) mod=0 reg=3 rm=2      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x1B: /* 62h 1Bh BOUNDd w(reg),w(r/m) mod=0 reg=3 rm=3      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x1C: /* 62h 1Ch BOUNDd w(reg),w(r/m) mod=0 reg=3 rm=4      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x1D: /* 62h 1Dh BOUNDd w(reg),w(r/m) mod=0 reg=3 rm=5      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x1E: /* 62h 1Eh BOUNDd w(reg),w(r/m) mod=0 reg=3 rm=6      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x1F: /* 62h 1Fh BOUNDd w(reg),w(r/m) mod=0 reg=3 rm=7      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x20: /* 62h 20h BOUNDd w(reg),w(r/m) mod=0 reg=4 rm=0      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x21: /* 62h 21h BOUNDd w(reg),w(r/m) mod=0 reg=4 rm=1      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x22: /* 62h 22h BOUNDd w(reg),w(r/m) mod=0 reg=4 rm=2      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x23: /* 62h 23h BOUNDd w(reg),w(r/m) mod=0 reg=4 rm=3      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x24: /* 62h 24h BOUNDd w(reg),w(r/m) mod=0 reg=4 rm=4      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x25: /* 62h 25h BOUNDd w(reg),w(r/m) mod=0 reg=4 rm=5      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x26: /* 62h 26h BOUNDd w(reg),w(r/m) mod=0 reg=4 rm=6      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x27: /* 62h 27h BOUNDd w(reg),w(r/m) mod=0 reg=4 rm=7      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x28: /* 62h 28h BOUNDd w(reg),w(r/m) mod=0 reg=5 rm=0      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x29: /* 62h 29h BOUNDd w(reg),w(r/m) mod=0 reg=5 rm=1      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x2A: /* 62h 2Ah BOUNDd w(reg),w(r/m) mod=0 reg=5 rm=2      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x2B: /* 62h 2Bh BOUNDd w(reg),w(r/m) mod=0 reg=5 rm=3      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x2C: /* 62h 2Ch BOUNDd w(reg),w(r/m) mod=0 reg=5 rm=4      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x2D: /* 62h 2Dh BOUNDd w(reg),w(r/m) mod=0 reg=5 rm=5      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x2E: /* 62h 2Eh BOUNDd w(reg),w(r/m) mod=0 reg=5 rm=6      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x2F: /* 62h 2Fh BOUNDd w(reg),w(r/m) mod=0 reg=5 rm=7      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x30: /* 62h 30h BOUNDd w(reg),w(r/m) mod=0 reg=6 rm=0      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x31: /* 62h 31h BOUNDd w(reg),w(r/m) mod=0 reg=6 rm=1      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x32: /* 62h 32h BOUNDd w(reg),w(r/m) mod=0 reg=6 rm=2      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x33: /* 62h 33h BOUNDd w(reg),w(r/m) mod=0 reg=6 rm=3      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x34: /* 62h 34h BOUNDd w(reg),w(r/m) mod=0 reg=6 rm=4      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x35: /* 62h 35h BOUNDd w(reg),w(r/m) mod=0 reg=6 rm=5      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x36: /* 62h 36h BOUNDd w(reg),w(r/m) mod=0 reg=6 rm=6      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x37: /* 62h 37h BOUNDd w(reg),w(r/m) mod=0 reg=6 rm=7      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x38: /* 62h 38h BOUNDd w(reg),w(r/m) mod=0 reg=7 rm=0      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x39: /* 62h 39h BOUNDd w(reg),w(r/m) mod=0 reg=7 rm=1      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x3A: /* 62h 3Ah BOUNDd w(reg),w(r/m) mod=0 reg=7 rm=2      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x3B: /* 62h 3Bh BOUNDd w(reg),w(r/m) mod=0 reg=7 rm=3      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x3C: /* 62h 3Ch BOUNDd w(reg),w(r/m) mod=0 reg=7 rm=4      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x3D: /* 62h 3Dh BOUNDd w(reg),w(r/m) mod=0 reg=7 rm=5      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x3E: /* 62h 3Eh BOUNDd w(reg),w(r/m) mod=0 reg=7 rm=6      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x3F: /* 62h 3Fh BOUNDd w(reg),w(r/m) mod=0 reg=7 rm=7      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x40: /* 62h 40h BOUNDd w(reg),w(r/m) mod=1 reg=0 rm=0      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x41: /* 62h 41h BOUNDd w(reg),w(r/m) mod=1 reg=0 rm=1      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x42: /* 62h 42h BOUNDd w(reg),w(r/m) mod=1 reg=0 rm=2      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x43: /* 62h 43h BOUNDd w(reg),w(r/m) mod=1 reg=0 rm=3      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x44: /* 62h 44h BOUNDd w(reg),w(r/m) mod=1 reg=0 rm=4      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x45: /* 62h 45h BOUNDd w(reg),w(r/m) mod=1 reg=0 rm=5      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x46: /* 62h 46h BOUNDd w(reg),w(r/m) mod=1 reg=0 rm=6      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x47: /* 62h 47h BOUNDd w(reg),w(r/m) mod=1 reg=0 rm=7      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x48: /* 62h 48h BOUNDd w(reg),w(r/m) mod=1 reg=1 rm=0      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x49: /* 62h 49h BOUNDd w(reg),w(r/m) mod=1 reg=1 rm=1      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x4A: /* 62h 4Ah BOUNDd w(reg),w(r/m) mod=1 reg=1 rm=2      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x4B: /* 62h 4Bh BOUNDd w(reg),w(r/m) mod=1 reg=1 rm=3      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x4C: /* 62h 4Ch BOUNDd w(reg),w(r/m) mod=1 reg=1 rm=4      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x4D: /* 62h 4Dh BOUNDd w(reg),w(r/m) mod=1 reg=1 rm=5      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x4E: /* 62h 4Eh BOUNDd w(reg),w(r/m) mod=1 reg=1 rm=6      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x4F: /* 62h 4Fh BOUNDd w(reg),w(r/m) mod=1 reg=1 rm=7      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x50: /* 62h 50h BOUNDd w(reg),w(r/m) mod=1 reg=2 rm=0      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x51: /* 62h 51h BOUNDd w(reg),w(r/m) mod=1 reg=2 rm=1      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x52: /* 62h 52h BOUNDd w(reg),w(r/m) mod=1 reg=2 rm=2      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x53: /* 62h 53h BOUNDd w(reg),w(r/m) mod=1 reg=2 rm=3      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x54: /* 62h 54h BOUNDd w(reg),w(r/m) mod=1 reg=2 rm=4      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x55: /* 62h 55h BOUNDd w(reg),w(r/m) mod=1 reg=2 rm=5      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x56: /* 62h 56h BOUNDd w(reg),w(r/m) mod=1 reg=2 rm=6      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x57: /* 62h 57h BOUNDd w(reg),w(r/m) mod=1 reg=2 rm=7      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x58: /* 62h 58h BOUNDd w(reg),w(r/m) mod=1 reg=3 rm=0      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x59: /* 62h 59h BOUNDd w(reg),w(r/m) mod=1 reg=3 rm=1      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x5A: /* 62h 5Ah BOUNDd w(reg),w(r/m) mod=1 reg=3 rm=2      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x5B: /* 62h 5Bh BOUNDd w(reg),w(r/m) mod=1 reg=3 rm=3      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x5C: /* 62h 5Ch BOUNDd w(reg),w(r/m) mod=1 reg=3 rm=4      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x5D: /* 62h 5Dh BOUNDd w(reg),w(r/m) mod=1 reg=3 rm=5      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x5E: /* 62h 5Eh BOUNDd w(reg),w(r/m) mod=1 reg=3 rm=6      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x5F: /* 62h 5Fh BOUNDd w(reg),w(r/m) mod=1 reg=3 rm=7      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x60: /* 62h 60h BOUNDd w(reg),w(r/m) mod=1 reg=4 rm=0      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x61: /* 62h 61h BOUNDd w(reg),w(r/m) mod=1 reg=4 rm=1      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x62: /* 62h 62h BOUNDd w(reg),w(r/m) mod=1 reg=4 rm=2      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x63: /* 62h 63h BOUNDd w(reg),w(r/m) mod=1 reg=4 rm=3      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x64: /* 62h 64h BOUNDd w(reg),w(r/m) mod=1 reg=4 rm=4      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x65: /* 62h 65h BOUNDd w(reg),w(r/m) mod=1 reg=4 rm=5      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x66: /* 62h 66h BOUNDd w(reg),w(r/m) mod=1 reg=4 rm=6      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x67: /* 62h 67h BOUNDd w(reg),w(r/m) mod=1 reg=4 rm=7      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x68: /* 62h 68h BOUNDd w(reg),w(r/m) mod=1 reg=5 rm=0      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x69: /* 62h 69h BOUNDd w(reg),w(r/m) mod=1 reg=5 rm=1      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x6A: /* 62h 6Ah BOUNDd w(reg),w(r/m) mod=1 reg=5 rm=2      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x6B: /* 62h 6Bh BOUNDd w(reg),w(r/m) mod=1 reg=5 rm=3      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x6C: /* 62h 6Ch BOUNDd w(reg),w(r/m) mod=1 reg=5 rm=4      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x6D: /* 62h 6Dh BOUNDd w(reg),w(r/m) mod=1 reg=5 rm=5      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x6E: /* 62h 6Eh BOUNDd w(reg),w(r/m) mod=1 reg=5 rm=6      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x6F: /* 62h 6Fh BOUNDd w(reg),w(r/m) mod=1 reg=5 rm=7      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x70: /* 62h 70h BOUNDd w(reg),w(r/m) mod=1 reg=6 rm=0      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x71: /* 62h 71h BOUNDd w(reg),w(r/m) mod=1 reg=6 rm=1      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x72: /* 62h 72h BOUNDd w(reg),w(r/m) mod=1 reg=6 rm=2      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x73: /* 62h 73h BOUNDd w(reg),w(r/m) mod=1 reg=6 rm=3      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x74: /* 62h 74h BOUNDd w(reg),w(r/m) mod=1 reg=6 rm=4      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x75: /* 62h 75h BOUNDd w(reg),w(r/m) mod=1 reg=6 rm=5      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x76: /* 62h 76h BOUNDd w(reg),w(r/m) mod=1 reg=6 rm=6      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x77: /* 62h 77h BOUNDd w(reg),w(r/m) mod=1 reg=6 rm=7      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x78: /* 62h 78h BOUNDd w(reg),w(r/m) mod=1 reg=7 rm=0      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x79: /* 62h 79h BOUNDd w(reg),w(r/m) mod=1 reg=7 rm=1      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x7A: /* 62h 7Ah BOUNDd w(reg),w(r/m) mod=1 reg=7 rm=2      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x7B: /* 62h 7Bh BOUNDd w(reg),w(r/m) mod=1 reg=7 rm=3      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x7C: /* 62h 7Ch BOUNDd w(reg),w(r/m) mod=1 reg=7 rm=4      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x7D: /* 62h 7Dh BOUNDd w(reg),w(r/m) mod=1 reg=7 rm=5      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x7E: /* 62h 7Eh BOUNDd w(reg),w(r/m) mod=1 reg=7 rm=6      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x7F: /* 62h 7Fh BOUNDd w(reg),w(r/m) mod=1 reg=7 rm=7      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x80: /* 62h 80h BOUNDd w(reg),w(r/m) mod=2 reg=0 rm=0      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x81: /* 62h 81h BOUNDd w(reg),w(r/m) mod=2 reg=0 rm=1      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x82: /* 62h 82h BOUNDd w(reg),w(r/m) mod=2 reg=0 rm=2      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x83: /* 62h 83h BOUNDd w(reg),w(r/m) mod=2 reg=0 rm=3      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x84: /* 62h 84h BOUNDd w(reg),w(r/m) mod=2 reg=0 rm=4      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x85: /* 62h 85h BOUNDd w(reg),w(r/m) mod=2 reg=0 rm=5      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x86: /* 62h 86h BOUNDd w(reg),w(r/m) mod=2 reg=0 rm=6      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x87: /* 62h 87h BOUNDd w(reg),w(r/m) mod=2 reg=0 rm=7      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x88: /* 62h 88h BOUNDd w(reg),w(r/m) mod=2 reg=1 rm=0      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x89: /* 62h 89h BOUNDd w(reg),w(r/m) mod=2 reg=1 rm=1      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x8A: /* 62h 8Ah BOUNDd w(reg),w(r/m) mod=2 reg=1 rm=2      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x8B: /* 62h 8Bh BOUNDd w(reg),w(r/m) mod=2 reg=1 rm=3      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x8C: /* 62h 8Ch BOUNDd w(reg),w(r/m) mod=2 reg=1 rm=4      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x8D: /* 62h 8Dh BOUNDd w(reg),w(r/m) mod=2 reg=1 rm=5      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x8E: /* 62h 8Eh BOUNDd w(reg),w(r/m) mod=2 reg=1 rm=6      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x8F: /* 62h 8Fh BOUNDd w(reg),w(r/m) mod=2 reg=1 rm=7      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x90: /* 62h 90h BOUNDd w(reg),w(r/m) mod=2 reg=2 rm=0      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x91: /* 62h 91h BOUNDd w(reg),w(r/m) mod=2 reg=2 rm=1      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x92: /* 62h 92h BOUNDd w(reg),w(r/m) mod=2 reg=2 rm=2      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x93: /* 62h 93h BOUNDd w(reg),w(r/m) mod=2 reg=2 rm=3      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x94: /* 62h 94h BOUNDd w(reg),w(r/m) mod=2 reg=2 rm=4      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x95: /* 62h 95h BOUNDd w(reg),w(r/m) mod=2 reg=2 rm=5      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x96: /* 62h 96h BOUNDd w(reg),w(r/m) mod=2 reg=2 rm=6      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x97: /* 62h 97h BOUNDd w(reg),w(r/m) mod=2 reg=2 rm=7      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x98: /* 62h 98h BOUNDd w(reg),w(r/m) mod=2 reg=3 rm=0      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x99: /* 62h 99h BOUNDd w(reg),w(r/m) mod=2 reg=3 rm=1      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x9A: /* 62h 9Ah BOUNDd w(reg),w(r/m) mod=2 reg=3 rm=2      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x9B: /* 62h 9Bh BOUNDd w(reg),w(r/m) mod=2 reg=3 rm=3      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x9C: /* 62h 9Ch BOUNDd w(reg),w(r/m) mod=2 reg=3 rm=4      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x9D: /* 62h 9Dh BOUNDd w(reg),w(r/m) mod=2 reg=3 rm=5      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x9E: /* 62h 9Eh BOUNDd w(reg),w(r/m) mod=2 reg=3 rm=6      spec: 0x62 mod/reg/rm mod!=3 */
            case 0x9F: /* 62h 9Fh BOUNDd w(reg),w(r/m) mod=2 reg=3 rm=7      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xA0: /* 62h A0h BOUNDd w(reg),w(r/m) mod=2 reg=4 rm=0      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xA1: /* 62h A1h BOUNDd w(reg),w(r/m) mod=2 reg=4 rm=1      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xA2: /* 62h A2h BOUNDd w(reg),w(r/m) mod=2 reg=4 rm=2      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xA3: /* 62h A3h BOUNDd w(reg),w(r/m) mod=2 reg=4 rm=3      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xA4: /* 62h A4h BOUNDd w(reg),w(r/m) mod=2 reg=4 rm=4      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xA5: /* 62h A5h BOUNDd w(reg),w(r/m) mod=2 reg=4 rm=5      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xA6: /* 62h A6h BOUNDd w(reg),w(r/m) mod=2 reg=4 rm=6      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xA7: /* 62h A7h BOUNDd w(reg),w(r/m) mod=2 reg=4 rm=7      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xA8: /* 62h A8h BOUNDd w(reg),w(r/m) mod=2 reg=5 rm=0      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xA9: /* 62h A9h BOUNDd w(reg),w(r/m) mod=2 reg=5 rm=1      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xAA: /* 62h AAh BOUNDd w(reg),w(r/m) mod=2 reg=5 rm=2      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xAB: /* 62h ABh BOUNDd w(reg),w(r/m) mod=2 reg=5 rm=3      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xAC: /* 62h ACh BOUNDd w(reg),w(r/m) mod=2 reg=5 rm=4      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xAD: /* 62h ADh BOUNDd w(reg),w(r/m) mod=2 reg=5 rm=5      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xAE: /* 62h AEh BOUNDd w(reg),w(r/m) mod=2 reg=5 rm=6      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xAF: /* 62h AFh BOUNDd w(reg),w(r/m) mod=2 reg=5 rm=7      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xB0: /* 62h B0h BOUNDd w(reg),w(r/m) mod=2 reg=6 rm=0      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xB1: /* 62h B1h BOUNDd w(reg),w(r/m) mod=2 reg=6 rm=1      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xB2: /* 62h B2h BOUNDd w(reg),w(r/m) mod=2 reg=6 rm=2      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xB3: /* 62h B3h BOUNDd w(reg),w(r/m) mod=2 reg=6 rm=3      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xB4: /* 62h B4h BOUNDd w(reg),w(r/m) mod=2 reg=6 rm=4      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xB5: /* 62h B5h BOUNDd w(reg),w(r/m) mod=2 reg=6 rm=5      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xB6: /* 62h B6h BOUNDd w(reg),w(r/m) mod=2 reg=6 rm=6      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xB7: /* 62h B7h BOUNDd w(reg),w(r/m) mod=2 reg=6 rm=7      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xB8: /* 62h B8h BOUNDd w(reg),w(r/m) mod=2 reg=7 rm=0      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xB9: /* 62h B9h BOUNDd w(reg),w(r/m) mod=2 reg=7 rm=1      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xBA: /* 62h BAh BOUNDd w(reg),w(r/m) mod=2 reg=7 rm=2      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xBB: /* 62h BBh BOUNDd w(reg),w(r/m) mod=2 reg=7 rm=3      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xBC: /* 62h BCh BOUNDd w(reg),w(r/m) mod=2 reg=7 rm=4      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xBD: /* 62h BDh BOUNDd w(reg),w(r/m) mod=2 reg=7 rm=5      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xBE: /* 62h BEh BOUNDd w(reg),w(r/m) mod=2 reg=7 rm=6      spec: 0x62 mod/reg/rm mod!=3 */
            case 0xBF: /* 62h BFh BOUNDd w(reg),w(r/m) mod=2 reg=7 rm=7      spec: 0x62 mod/reg/rm mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"BOUNDd %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            /* opcode 62h C0h  not defined */
            /* opcode 62h C1h  not defined */
            /* opcode 62h C2h  not defined */
            /* opcode 62h C3h  not defined */
            /* opcode 62h C4h  not defined */
            /* opcode 62h C5h  not defined */
            /* opcode 62h C6h  not defined */
            /* opcode 62h C7h  not defined */
            /* opcode 62h C8h  not defined */
            /* opcode 62h C9h  not defined */
            /* opcode 62h CAh  not defined */
            /* opcode 62h CBh  not defined */
            /* opcode 62h CCh  not defined */
            /* opcode 62h CDh  not defined */
            /* opcode 62h CEh  not defined */
            /* opcode 62h CFh  not defined */
            /* opcode 62h D0h  not defined */
            /* opcode 62h D1h  not defined */
            /* opcode 62h D2h  not defined */
            /* opcode 62h D3h  not defined */
            /* opcode 62h D4h  not defined */
            /* opcode 62h D5h  not defined */
            /* opcode 62h D6h  not defined */
            /* opcode 62h D7h  not defined */
            /* opcode 62h D8h  not defined */
            /* opcode 62h D9h  not defined */
            /* opcode 62h DAh  not defined */
            /* opcode 62h DBh  not defined */
            /* opcode 62h DCh  not defined */
            /* opcode 62h DDh  not defined */
            /* opcode 62h DEh  not defined */
            /* opcode 62h DFh  not defined */
            /* opcode 62h E0h  not defined */
            /* opcode 62h E1h  not defined */
            /* opcode 62h E2h  not defined */
            /* opcode 62h E3h  not defined */
            /* opcode 62h E4h  not defined */
            /* opcode 62h E5h  not defined */
            /* opcode 62h E6h  not defined */
            /* opcode 62h E7h  not defined */
            /* opcode 62h E8h  not defined */
            /* opcode 62h E9h  not defined */
            /* opcode 62h EAh  not defined */
            /* opcode 62h EBh  not defined */
            /* opcode 62h ECh  not defined */
            /* opcode 62h EDh  not defined */
            /* opcode 62h EEh  not defined */
            /* opcode 62h EFh  not defined */
            /* opcode 62h F0h  not defined */
            /* opcode 62h F1h  not defined */
            /* opcode 62h F2h  not defined */
            /* opcode 62h F3h  not defined */
            /* opcode 62h F4h  not defined */
            /* opcode 62h F5h  not defined */
            /* opcode 62h F6h  not defined */
            /* opcode 62h F7h  not defined */
            /* opcode 62h F8h  not defined */
            /* opcode 62h F9h  not defined */
            /* opcode 62h FAh  not defined */
            /* opcode 62h FBh  not defined */
            /* opcode 62h FCh  not defined */
            /* opcode 62h FDh  not defined */
            /* opcode 62h FEh  not defined */
            /* opcode 62h FFh  not defined */
            default:
                goto _x86decode_illegal_opcode;
        };
/* End of opcodes starting with 62h */
        break;
    case 0x63: /* 63h ARPLd w(r/m),w(reg)      spec: 0x63 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ARPLd %s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[4][mrm.reg()]);
        break;
    /* opcode 64h  not defined */
    /* opcode 65h  not defined */
    case 0x66: /* 66h        spec: 0x66 prefix opsz32 */
        prefix66 ^= 1;
        code32=0; addr32=1;
        /* Mandatory prefix detection */
        op=IPFB();
        if (op == 0x0F) {
/* Opcodes starting with 66h 0Fh */
            op=IPFB();
            _x86decode_begin_code32_addr32_opcode_parse_660F:
            switch (op) {
                /* opcode 66h 0Fh 00h  not defined */
                /* opcode 66h 0Fh 01h  not defined */
                /* opcode 66h 0Fh 02h  not defined */
                /* opcode 66h 0Fh 03h  not defined */
                /* opcode 66h 0Fh 04h  not defined */
                /* opcode 66h 0Fh 05h  not defined */
                /* opcode 66h 0Fh 06h  not defined */
                /* opcode 66h 0Fh 07h  not defined */
                /* opcode 66h 0Fh 08h  not defined */
                /* opcode 66h 0Fh 09h  not defined */
                /* opcode 66h 0Fh 0Ah  not defined */
                /* opcode 66h 0Fh 0Bh  not defined */
                /* opcode 66h 0Fh 0Ch  not defined */
                /* opcode 66h 0Fh 0Dh  not defined */
                /* opcode 66h 0Fh 0Eh  not defined */
                /* opcode 66h 0Fh 0Fh  not defined */
                case 0x10: /* 66h 0Fh 10h MOVUPD sse(reg),sse(r/m)      spec: 0x0F 0x10 mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVUPD XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x11: /* 66h 0Fh 11h MOVUPD sse(r/m),sse(reg)      spec: 0x0F 0x11 mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVUPD %s,XMM%u",IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""),mrm.reg());
                    break;
                case 0x12: /* 66h 0Fh 12h MOVLPD sse(reg),sse(r/m)      spec: 0x0F 0x12 mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVLPD XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x13: /* 66h 0Fh 13h MOVLPD sse(r/m),sse(reg)      spec: 0x0F 0x13 mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVLPD %s,XMM%u",IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""),mrm.reg());
                    break;
                case 0x14: /* 66h 0Fh 14h UNPCKLPD sse(reg),sse(r/m)      spec: 0x0F 0x14 mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"UNPCKLPD XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x15: /* 66h 0Fh 15h UNPCKHPD sse(reg),sse(r/m)      spec: 0x0F 0x15 mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"UNPCKHPD XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x16: /* 66h 0Fh 16h MOVHPD sse(reg),sse(r/m)      spec: 0x0F 0x16 mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVHPD XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x17: /* 66h 0Fh 17h MOVHPD sse(r/m),sse(reg)      spec: 0x0F 0x17 mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVHPD %s,XMM%u",IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""),mrm.reg());
                    break;
                /* opcode 66h 0Fh 18h  not defined */
                /* opcode 66h 0Fh 19h  not defined */
                /* opcode 66h 0Fh 1Ah  not defined */
                /* opcode 66h 0Fh 1Bh  not defined */
                /* opcode 66h 0Fh 1Ch  not defined */
                /* opcode 66h 0Fh 1Dh  not defined */
                /* opcode 66h 0Fh 1Eh  not defined */
                /* opcode 66h 0Fh 1Fh  not defined */
                /* opcode 66h 0Fh 20h  not defined */
                /* opcode 66h 0Fh 21h  not defined */
                /* opcode 66h 0Fh 22h  not defined */
                /* opcode 66h 0Fh 23h  not defined */
                /* opcode 66h 0Fh 24h  not defined */
                /* opcode 66h 0Fh 25h  not defined */
                /* opcode 66h 0Fh 26h  not defined */
                /* opcode 66h 0Fh 27h  not defined */
                case 0x28: /* 66h 0Fh 28h MOVAPD sse(reg),sse(r/m)      spec: 0x0F 0x28 mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVAPD XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x29: /* 66h 0Fh 29h MOVAPD sse(r/m),sse(reg)      spec: 0x0F 0x29 mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVAPD %s,XMM%u",IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""),mrm.reg());
                    break;
                case 0x2A: /* 66h 0Fh 2Ah CVTPI2PD sse(reg),mmx(r/m)      spec: 0x0F 0x2A mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CVTPI2PD XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                    break;
                case 0x2B: /* 66h 0Fh 2Bh MOVNTPD sse(r/m),sse(reg)      spec: 0x0F 0x2B mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVNTPD %s,XMM%u",IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""),mrm.reg());
                    break;
                case 0x2C: /* 66h 0Fh 2Ch CVTTPD2PI mmx(reg),sse(r/m)      spec: 0x0F 0x2C mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CVTTPD2PI MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x2D: /* 66h 0Fh 2Dh CVTPD2PI mmx(reg),sse(r/m)      spec: 0x0F 0x2D mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CVTPD2PI MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x2E: /* 66h 0Fh 2Eh UCOMISD sse(reg),sse(r/m)      spec: 0x0F 0x2E mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"UCOMISD XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x2F: /* 66h 0Fh 2Fh COMISD sse(reg),sse(r/m)      spec: 0x0F 0x2F mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"COMISD XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                /* opcode 66h 0Fh 30h  not defined */
                /* opcode 66h 0Fh 31h  not defined */
                /* opcode 66h 0Fh 32h  not defined */
                /* opcode 66h 0Fh 33h  not defined */
                /* opcode 66h 0Fh 34h  not defined */
                /* opcode 66h 0Fh 35h  not defined */
                /* opcode 66h 0Fh 36h  not defined */
                /* opcode 66h 0Fh 37h  not defined */
                case 0x38: /* 66h 0Fh 38h        spec:  */
/* Opcodes starting with 66h 0Fh 38h */
                    op=IPFB();
                    _x86decode_begin_code32_addr32_opcode_parse_660F38:
                    switch (op) {
                        case 0x00: /* 66h 0Fh 38h 00h PSHUFB sse(reg),sse(r/m)      spec: 0x0F 0x38 0x00 mod/reg/rm mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSHUFB XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                            break;
                        case 0x01: /* 66h 0Fh 38h 01h PHADDW sse(reg),sse(r/m)      spec: 0x0F 0x38 0x01 mod/reg/rm mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PHADDW XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                            break;
                        case 0x02: /* 66h 0Fh 38h 02h PHADDD sse(reg),sse(r/m)      spec: 0x0F 0x38 0x02 mod/reg/rm mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PHADDD XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                            break;
                        case 0x03: /* 66h 0Fh 38h 03h PHADDSW sse(reg),sse(r/m)      spec: 0x0F 0x38 0x03 mod/reg/rm mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PHADDSW XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                            break;
                        case 0x04: /* 66h 0Fh 38h 04h PMADDUBSW sse(reg),sse(r/m)      spec: 0x0F 0x38 0x04 mod/reg/rm mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PMADDUBSW XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                            break;
                        case 0x05: /* 66h 0Fh 38h 05h PHSUBW sse(reg),sse(r/m)      spec: 0x0F 0x38 0x05 mod/reg/rm mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PHSUBW XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                            break;
                        case 0x06: /* 66h 0Fh 38h 06h PHSUBD sse(reg),sse(r/m)      spec: 0x0F 0x38 0x06 mod/reg/rm mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PHSUBD XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                            break;
                        case 0x07: /* 66h 0Fh 38h 07h PHSUBSW sse(reg),sse(r/m)      spec: 0x0F 0x38 0x07 mod/reg/rm mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PHSUBSW XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                            break;
                        case 0x08: /* 66h 0Fh 38h 08h PSIGNB sse(reg),sse(r/m)      spec: 0x0F 0x38 0x08 mod/reg/rm mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSIGNB XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                            break;
                        case 0x09: /* 66h 0Fh 38h 09h PSIGNW sse(reg),sse(r/m)      spec: 0x0F 0x38 0x09 mod/reg/rm mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSIGNW XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                            break;
                        case 0x0A: /* 66h 0Fh 38h 0Ah PSIGND sse(reg),sse(r/m)      spec: 0x0F 0x38 0x0A mod/reg/rm mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSIGND XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                            break;
                        case 0x0B: /* 66h 0Fh 38h 0Bh PMULHRSW sse(reg),sse(r/m)      spec: 0x0F 0x38 0x0B mod/reg/rm mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PMULHRSW XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                            break;
                        /* opcode 66h 0Fh 38h 0Ch  not defined */
                        /* opcode 66h 0Fh 38h 0Dh  not defined */
                        /* opcode 66h 0Fh 38h 0Eh  not defined */
                        /* opcode 66h 0Fh 38h 0Fh  not defined */
                        case 0x10: /* 66h 0Fh 38h 10h PBLENDVB sse(reg),sse(r/m)      spec: 0x0F 0x38 0x10 mod/reg/rm mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PBLENDVB XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                            break;
                        /* opcode 66h 0Fh 38h 11h  not defined */
                        /* opcode 66h 0Fh 38h 12h  not defined */
                        /* opcode 66h 0Fh 38h 13h  not defined */
                        case 0x14: /* 66h 0Fh 38h 14h BLENDVPS sse(reg),sse(r/m)      spec: 0x0F 0x38 0x14 mod/reg/rm mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"BLENDVPS XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                            break;
                        case 0x15: /* 66h 0Fh 38h 15h BLENDVPD sse(reg),sse(r/m)      spec: 0x0F 0x38 0x15 mod/reg/rm mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"BLENDVPD XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                            break;
                        /* opcode 66h 0Fh 38h 16h  not defined */
                        case 0x17: /* 66h 0Fh 38h 17h PTEST sse(reg),sse(r/m)      spec: 0x0F 0x38 0x17 mod/reg/rm mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PTEST XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                            break;
                        /* opcode 66h 0Fh 38h 18h  not defined */
                        /* opcode 66h 0Fh 38h 19h  not defined */
                        /* opcode 66h 0Fh 38h 1Ah  not defined */
                        /* opcode 66h 0Fh 38h 1Bh  not defined */
                        case 0x1C: /* 66h 0Fh 38h 1Ch PABSB sse(reg),sse(r/m)      spec: 0x0F 0x38 0x1C mod/reg/rm mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PABSB XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                            break;
                        case 0x1D: /* 66h 0Fh 38h 1Dh PABSW sse(reg),sse(r/m)      spec: 0x0F 0x38 0x1D mod/reg/rm mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PABSW XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                            break;
                        case 0x1E: /* 66h 0Fh 38h 1Eh PABSD sse(reg),sse(r/m)      spec: 0x0F 0x38 0x1E mod/reg/rm mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PABSD XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                            break;
                        /* opcode 66h 0Fh 38h 1Fh  not defined */
                        case 0x20: /* 66h 0Fh 38h 20h PMOVSXBW sse(reg),sse(r/m)      spec: 0x0F 0x38 0x20 mod/reg/rm mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PMOVSXBW XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                            break;
                        case 0x21: /* 66h 0Fh 38h 21h PMOVSXBD sse(reg),sse(r/m)      spec: 0x0F 0x38 0x21 mod/reg/rm mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PMOVSXBD XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                            break;
                        case 0x22: /* 66h 0Fh 38h 22h PMOVSXBQ sse(reg),sse(r/m)      spec: 0x0F 0x38 0x22 mod/reg/rm mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PMOVSXBQ XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                            break;
                        case 0x23: /* 66h 0Fh 38h 23h PMOVSXWD sse(reg),sse(r/m)      spec: 0x0F 0x38 0x23 mod/reg/rm mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PMOVSXWD XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                            break;
                        case 0x24: /* 66h 0Fh 38h 24h PMOVSXWQ sse(reg),sse(r/m)      spec: 0x0F 0x38 0x24 mod/reg/rm mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PMOVSXWQ XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                            break;
                        case 0x25: /* 66h 0Fh 38h 25h PMOVSXDQ sse(reg),sse(r/m)      spec: 0x0F 0x38 0x25 mod/reg/rm mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PMOVSXDQ XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                            break;
                        /* opcode 66h 0Fh 38h 26h  not defined */
                        /* opcode 66h 0Fh 38h 27h  not defined */
                        case 0x28: /* 66h 0Fh 38h 28h PMULDQ sse(reg),sse(r/m)      spec: 0x0F 0x38 0x28 mod/reg/rm mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PMULDQ XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                            break;
                        case 0x29: /* 66h 0Fh 38h 29h PCMPEQQ sse(reg),sse(r/m)      spec: 0x0F 0x38 0x29 mod/reg/rm mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PCMPEQQ XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                            break;
                        case 0x2A: /* 66h 0Fh 38h 2Ah        spec:  */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            _x86decode_begin_code32_addr32_opcode_parse_660F382A:
/* Opcodes starting with 66h 0Fh 38h 2Ah */
                            switch (mrm.byte) {
                                case 0x00: /* 66h 0Fh 38h 2Ah 00h MOVNTDQA sse(reg),sse(r/m) mod=0 reg=0 rm=0      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x01: /* 66h 0Fh 38h 2Ah 01h MOVNTDQA sse(reg),sse(r/m) mod=0 reg=0 rm=1      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x02: /* 66h 0Fh 38h 2Ah 02h MOVNTDQA sse(reg),sse(r/m) mod=0 reg=0 rm=2      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x03: /* 66h 0Fh 38h 2Ah 03h MOVNTDQA sse(reg),sse(r/m) mod=0 reg=0 rm=3      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x04: /* 66h 0Fh 38h 2Ah 04h MOVNTDQA sse(reg),sse(r/m) mod=0 reg=0 rm=4      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x05: /* 66h 0Fh 38h 2Ah 05h MOVNTDQA sse(reg),sse(r/m) mod=0 reg=0 rm=5      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x06: /* 66h 0Fh 38h 2Ah 06h MOVNTDQA sse(reg),sse(r/m) mod=0 reg=0 rm=6      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x07: /* 66h 0Fh 38h 2Ah 07h MOVNTDQA sse(reg),sse(r/m) mod=0 reg=0 rm=7      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x08: /* 66h 0Fh 38h 2Ah 08h MOVNTDQA sse(reg),sse(r/m) mod=0 reg=1 rm=0      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x09: /* 66h 0Fh 38h 2Ah 09h MOVNTDQA sse(reg),sse(r/m) mod=0 reg=1 rm=1      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x0A: /* 66h 0Fh 38h 2Ah 0Ah MOVNTDQA sse(reg),sse(r/m) mod=0 reg=1 rm=2      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x0B: /* 66h 0Fh 38h 2Ah 0Bh MOVNTDQA sse(reg),sse(r/m) mod=0 reg=1 rm=3      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x0C: /* 66h 0Fh 38h 2Ah 0Ch MOVNTDQA sse(reg),sse(r/m) mod=0 reg=1 rm=4      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x0D: /* 66h 0Fh 38h 2Ah 0Dh MOVNTDQA sse(reg),sse(r/m) mod=0 reg=1 rm=5      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x0E: /* 66h 0Fh 38h 2Ah 0Eh MOVNTDQA sse(reg),sse(r/m) mod=0 reg=1 rm=6      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x0F: /* 66h 0Fh 38h 2Ah 0Fh MOVNTDQA sse(reg),sse(r/m) mod=0 reg=1 rm=7      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x10: /* 66h 0Fh 38h 2Ah 10h MOVNTDQA sse(reg),sse(r/m) mod=0 reg=2 rm=0      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x11: /* 66h 0Fh 38h 2Ah 11h MOVNTDQA sse(reg),sse(r/m) mod=0 reg=2 rm=1      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x12: /* 66h 0Fh 38h 2Ah 12h MOVNTDQA sse(reg),sse(r/m) mod=0 reg=2 rm=2      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x13: /* 66h 0Fh 38h 2Ah 13h MOVNTDQA sse(reg),sse(r/m) mod=0 reg=2 rm=3      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x14: /* 66h 0Fh 38h 2Ah 14h MOVNTDQA sse(reg),sse(r/m) mod=0 reg=2 rm=4      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x15: /* 66h 0Fh 38h 2Ah 15h MOVNTDQA sse(reg),sse(r/m) mod=0 reg=2 rm=5      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x16: /* 66h 0Fh 38h 2Ah 16h MOVNTDQA sse(reg),sse(r/m) mod=0 reg=2 rm=6      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x17: /* 66h 0Fh 38h 2Ah 17h MOVNTDQA sse(reg),sse(r/m) mod=0 reg=2 rm=7      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x18: /* 66h 0Fh 38h 2Ah 18h MOVNTDQA sse(reg),sse(r/m) mod=0 reg=3 rm=0      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x19: /* 66h 0Fh 38h 2Ah 19h MOVNTDQA sse(reg),sse(r/m) mod=0 reg=3 rm=1      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x1A: /* 66h 0Fh 38h 2Ah 1Ah MOVNTDQA sse(reg),sse(r/m) mod=0 reg=3 rm=2      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x1B: /* 66h 0Fh 38h 2Ah 1Bh MOVNTDQA sse(reg),sse(r/m) mod=0 reg=3 rm=3      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x1C: /* 66h 0Fh 38h 2Ah 1Ch MOVNTDQA sse(reg),sse(r/m) mod=0 reg=3 rm=4      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x1D: /* 66h 0Fh 38h 2Ah 1Dh MOVNTDQA sse(reg),sse(r/m) mod=0 reg=3 rm=5      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x1E: /* 66h 0Fh 38h 2Ah 1Eh MOVNTDQA sse(reg),sse(r/m) mod=0 reg=3 rm=6      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x1F: /* 66h 0Fh 38h 2Ah 1Fh MOVNTDQA sse(reg),sse(r/m) mod=0 reg=3 rm=7      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x20: /* 66h 0Fh 38h 2Ah 20h MOVNTDQA sse(reg),sse(r/m) mod=0 reg=4 rm=0      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x21: /* 66h 0Fh 38h 2Ah 21h MOVNTDQA sse(reg),sse(r/m) mod=0 reg=4 rm=1      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x22: /* 66h 0Fh 38h 2Ah 22h MOVNTDQA sse(reg),sse(r/m) mod=0 reg=4 rm=2      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x23: /* 66h 0Fh 38h 2Ah 23h MOVNTDQA sse(reg),sse(r/m) mod=0 reg=4 rm=3      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x24: /* 66h 0Fh 38h 2Ah 24h MOVNTDQA sse(reg),sse(r/m) mod=0 reg=4 rm=4      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x25: /* 66h 0Fh 38h 2Ah 25h MOVNTDQA sse(reg),sse(r/m) mod=0 reg=4 rm=5      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x26: /* 66h 0Fh 38h 2Ah 26h MOVNTDQA sse(reg),sse(r/m) mod=0 reg=4 rm=6      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x27: /* 66h 0Fh 38h 2Ah 27h MOVNTDQA sse(reg),sse(r/m) mod=0 reg=4 rm=7      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x28: /* 66h 0Fh 38h 2Ah 28h MOVNTDQA sse(reg),sse(r/m) mod=0 reg=5 rm=0      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x29: /* 66h 0Fh 38h 2Ah 29h MOVNTDQA sse(reg),sse(r/m) mod=0 reg=5 rm=1      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x2A: /* 66h 0Fh 38h 2Ah 2Ah MOVNTDQA sse(reg),sse(r/m) mod=0 reg=5 rm=2      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x2B: /* 66h 0Fh 38h 2Ah 2Bh MOVNTDQA sse(reg),sse(r/m) mod=0 reg=5 rm=3      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x2C: /* 66h 0Fh 38h 2Ah 2Ch MOVNTDQA sse(reg),sse(r/m) mod=0 reg=5 rm=4      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x2D: /* 66h 0Fh 38h 2Ah 2Dh MOVNTDQA sse(reg),sse(r/m) mod=0 reg=5 rm=5      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x2E: /* 66h 0Fh 38h 2Ah 2Eh MOVNTDQA sse(reg),sse(r/m) mod=0 reg=5 rm=6      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x2F: /* 66h 0Fh 38h 2Ah 2Fh MOVNTDQA sse(reg),sse(r/m) mod=0 reg=5 rm=7      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x30: /* 66h 0Fh 38h 2Ah 30h MOVNTDQA sse(reg),sse(r/m) mod=0 reg=6 rm=0      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x31: /* 66h 0Fh 38h 2Ah 31h MOVNTDQA sse(reg),sse(r/m) mod=0 reg=6 rm=1      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x32: /* 66h 0Fh 38h 2Ah 32h MOVNTDQA sse(reg),sse(r/m) mod=0 reg=6 rm=2      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x33: /* 66h 0Fh 38h 2Ah 33h MOVNTDQA sse(reg),sse(r/m) mod=0 reg=6 rm=3      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x34: /* 66h 0Fh 38h 2Ah 34h MOVNTDQA sse(reg),sse(r/m) mod=0 reg=6 rm=4      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x35: /* 66h 0Fh 38h 2Ah 35h MOVNTDQA sse(reg),sse(r/m) mod=0 reg=6 rm=5      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x36: /* 66h 0Fh 38h 2Ah 36h MOVNTDQA sse(reg),sse(r/m) mod=0 reg=6 rm=6      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x37: /* 66h 0Fh 38h 2Ah 37h MOVNTDQA sse(reg),sse(r/m) mod=0 reg=6 rm=7      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x38: /* 66h 0Fh 38h 2Ah 38h MOVNTDQA sse(reg),sse(r/m) mod=0 reg=7 rm=0      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x39: /* 66h 0Fh 38h 2Ah 39h MOVNTDQA sse(reg),sse(r/m) mod=0 reg=7 rm=1      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x3A: /* 66h 0Fh 38h 2Ah 3Ah MOVNTDQA sse(reg),sse(r/m) mod=0 reg=7 rm=2      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x3B: /* 66h 0Fh 38h 2Ah 3Bh MOVNTDQA sse(reg),sse(r/m) mod=0 reg=7 rm=3      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x3C: /* 66h 0Fh 38h 2Ah 3Ch MOVNTDQA sse(reg),sse(r/m) mod=0 reg=7 rm=4      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x3D: /* 66h 0Fh 38h 2Ah 3Dh MOVNTDQA sse(reg),sse(r/m) mod=0 reg=7 rm=5      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x3E: /* 66h 0Fh 38h 2Ah 3Eh MOVNTDQA sse(reg),sse(r/m) mod=0 reg=7 rm=6      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x3F: /* 66h 0Fh 38h 2Ah 3Fh MOVNTDQA sse(reg),sse(r/m) mod=0 reg=7 rm=7      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x40: /* 66h 0Fh 38h 2Ah 40h MOVNTDQA sse(reg),sse(r/m) mod=1 reg=0 rm=0      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x41: /* 66h 0Fh 38h 2Ah 41h MOVNTDQA sse(reg),sse(r/m) mod=1 reg=0 rm=1      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x42: /* 66h 0Fh 38h 2Ah 42h MOVNTDQA sse(reg),sse(r/m) mod=1 reg=0 rm=2      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x43: /* 66h 0Fh 38h 2Ah 43h MOVNTDQA sse(reg),sse(r/m) mod=1 reg=0 rm=3      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x44: /* 66h 0Fh 38h 2Ah 44h MOVNTDQA sse(reg),sse(r/m) mod=1 reg=0 rm=4      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x45: /* 66h 0Fh 38h 2Ah 45h MOVNTDQA sse(reg),sse(r/m) mod=1 reg=0 rm=5      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x46: /* 66h 0Fh 38h 2Ah 46h MOVNTDQA sse(reg),sse(r/m) mod=1 reg=0 rm=6      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x47: /* 66h 0Fh 38h 2Ah 47h MOVNTDQA sse(reg),sse(r/m) mod=1 reg=0 rm=7      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x48: /* 66h 0Fh 38h 2Ah 48h MOVNTDQA sse(reg),sse(r/m) mod=1 reg=1 rm=0      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x49: /* 66h 0Fh 38h 2Ah 49h MOVNTDQA sse(reg),sse(r/m) mod=1 reg=1 rm=1      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x4A: /* 66h 0Fh 38h 2Ah 4Ah MOVNTDQA sse(reg),sse(r/m) mod=1 reg=1 rm=2      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x4B: /* 66h 0Fh 38h 2Ah 4Bh MOVNTDQA sse(reg),sse(r/m) mod=1 reg=1 rm=3      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x4C: /* 66h 0Fh 38h 2Ah 4Ch MOVNTDQA sse(reg),sse(r/m) mod=1 reg=1 rm=4      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x4D: /* 66h 0Fh 38h 2Ah 4Dh MOVNTDQA sse(reg),sse(r/m) mod=1 reg=1 rm=5      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x4E: /* 66h 0Fh 38h 2Ah 4Eh MOVNTDQA sse(reg),sse(r/m) mod=1 reg=1 rm=6      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x4F: /* 66h 0Fh 38h 2Ah 4Fh MOVNTDQA sse(reg),sse(r/m) mod=1 reg=1 rm=7      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x50: /* 66h 0Fh 38h 2Ah 50h MOVNTDQA sse(reg),sse(r/m) mod=1 reg=2 rm=0      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x51: /* 66h 0Fh 38h 2Ah 51h MOVNTDQA sse(reg),sse(r/m) mod=1 reg=2 rm=1      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x52: /* 66h 0Fh 38h 2Ah 52h MOVNTDQA sse(reg),sse(r/m) mod=1 reg=2 rm=2      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x53: /* 66h 0Fh 38h 2Ah 53h MOVNTDQA sse(reg),sse(r/m) mod=1 reg=2 rm=3      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x54: /* 66h 0Fh 38h 2Ah 54h MOVNTDQA sse(reg),sse(r/m) mod=1 reg=2 rm=4      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x55: /* 66h 0Fh 38h 2Ah 55h MOVNTDQA sse(reg),sse(r/m) mod=1 reg=2 rm=5      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x56: /* 66h 0Fh 38h 2Ah 56h MOVNTDQA sse(reg),sse(r/m) mod=1 reg=2 rm=6      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x57: /* 66h 0Fh 38h 2Ah 57h MOVNTDQA sse(reg),sse(r/m) mod=1 reg=2 rm=7      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x58: /* 66h 0Fh 38h 2Ah 58h MOVNTDQA sse(reg),sse(r/m) mod=1 reg=3 rm=0      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x59: /* 66h 0Fh 38h 2Ah 59h MOVNTDQA sse(reg),sse(r/m) mod=1 reg=3 rm=1      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x5A: /* 66h 0Fh 38h 2Ah 5Ah MOVNTDQA sse(reg),sse(r/m) mod=1 reg=3 rm=2      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x5B: /* 66h 0Fh 38h 2Ah 5Bh MOVNTDQA sse(reg),sse(r/m) mod=1 reg=3 rm=3      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x5C: /* 66h 0Fh 38h 2Ah 5Ch MOVNTDQA sse(reg),sse(r/m) mod=1 reg=3 rm=4      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x5D: /* 66h 0Fh 38h 2Ah 5Dh MOVNTDQA sse(reg),sse(r/m) mod=1 reg=3 rm=5      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x5E: /* 66h 0Fh 38h 2Ah 5Eh MOVNTDQA sse(reg),sse(r/m) mod=1 reg=3 rm=6      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x5F: /* 66h 0Fh 38h 2Ah 5Fh MOVNTDQA sse(reg),sse(r/m) mod=1 reg=3 rm=7      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x60: /* 66h 0Fh 38h 2Ah 60h MOVNTDQA sse(reg),sse(r/m) mod=1 reg=4 rm=0      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x61: /* 66h 0Fh 38h 2Ah 61h MOVNTDQA sse(reg),sse(r/m) mod=1 reg=4 rm=1      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x62: /* 66h 0Fh 38h 2Ah 62h MOVNTDQA sse(reg),sse(r/m) mod=1 reg=4 rm=2      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x63: /* 66h 0Fh 38h 2Ah 63h MOVNTDQA sse(reg),sse(r/m) mod=1 reg=4 rm=3      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x64: /* 66h 0Fh 38h 2Ah 64h MOVNTDQA sse(reg),sse(r/m) mod=1 reg=4 rm=4      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x65: /* 66h 0Fh 38h 2Ah 65h MOVNTDQA sse(reg),sse(r/m) mod=1 reg=4 rm=5      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x66: /* 66h 0Fh 38h 2Ah 66h MOVNTDQA sse(reg),sse(r/m) mod=1 reg=4 rm=6      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x67: /* 66h 0Fh 38h 2Ah 67h MOVNTDQA sse(reg),sse(r/m) mod=1 reg=4 rm=7      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x68: /* 66h 0Fh 38h 2Ah 68h MOVNTDQA sse(reg),sse(r/m) mod=1 reg=5 rm=0      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x69: /* 66h 0Fh 38h 2Ah 69h MOVNTDQA sse(reg),sse(r/m) mod=1 reg=5 rm=1      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x6A: /* 66h 0Fh 38h 2Ah 6Ah MOVNTDQA sse(reg),sse(r/m) mod=1 reg=5 rm=2      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x6B: /* 66h 0Fh 38h 2Ah 6Bh MOVNTDQA sse(reg),sse(r/m) mod=1 reg=5 rm=3      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x6C: /* 66h 0Fh 38h 2Ah 6Ch MOVNTDQA sse(reg),sse(r/m) mod=1 reg=5 rm=4      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x6D: /* 66h 0Fh 38h 2Ah 6Dh MOVNTDQA sse(reg),sse(r/m) mod=1 reg=5 rm=5      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x6E: /* 66h 0Fh 38h 2Ah 6Eh MOVNTDQA sse(reg),sse(r/m) mod=1 reg=5 rm=6      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x6F: /* 66h 0Fh 38h 2Ah 6Fh MOVNTDQA sse(reg),sse(r/m) mod=1 reg=5 rm=7      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x70: /* 66h 0Fh 38h 2Ah 70h MOVNTDQA sse(reg),sse(r/m) mod=1 reg=6 rm=0      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x71: /* 66h 0Fh 38h 2Ah 71h MOVNTDQA sse(reg),sse(r/m) mod=1 reg=6 rm=1      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x72: /* 66h 0Fh 38h 2Ah 72h MOVNTDQA sse(reg),sse(r/m) mod=1 reg=6 rm=2      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x73: /* 66h 0Fh 38h 2Ah 73h MOVNTDQA sse(reg),sse(r/m) mod=1 reg=6 rm=3      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x74: /* 66h 0Fh 38h 2Ah 74h MOVNTDQA sse(reg),sse(r/m) mod=1 reg=6 rm=4      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x75: /* 66h 0Fh 38h 2Ah 75h MOVNTDQA sse(reg),sse(r/m) mod=1 reg=6 rm=5      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x76: /* 66h 0Fh 38h 2Ah 76h MOVNTDQA sse(reg),sse(r/m) mod=1 reg=6 rm=6      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x77: /* 66h 0Fh 38h 2Ah 77h MOVNTDQA sse(reg),sse(r/m) mod=1 reg=6 rm=7      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x78: /* 66h 0Fh 38h 2Ah 78h MOVNTDQA sse(reg),sse(r/m) mod=1 reg=7 rm=0      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x79: /* 66h 0Fh 38h 2Ah 79h MOVNTDQA sse(reg),sse(r/m) mod=1 reg=7 rm=1      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x7A: /* 66h 0Fh 38h 2Ah 7Ah MOVNTDQA sse(reg),sse(r/m) mod=1 reg=7 rm=2      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x7B: /* 66h 0Fh 38h 2Ah 7Bh MOVNTDQA sse(reg),sse(r/m) mod=1 reg=7 rm=3      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x7C: /* 66h 0Fh 38h 2Ah 7Ch MOVNTDQA sse(reg),sse(r/m) mod=1 reg=7 rm=4      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x7D: /* 66h 0Fh 38h 2Ah 7Dh MOVNTDQA sse(reg),sse(r/m) mod=1 reg=7 rm=5      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x7E: /* 66h 0Fh 38h 2Ah 7Eh MOVNTDQA sse(reg),sse(r/m) mod=1 reg=7 rm=6      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x7F: /* 66h 0Fh 38h 2Ah 7Fh MOVNTDQA sse(reg),sse(r/m) mod=1 reg=7 rm=7      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x80: /* 66h 0Fh 38h 2Ah 80h MOVNTDQA sse(reg),sse(r/m) mod=2 reg=0 rm=0      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x81: /* 66h 0Fh 38h 2Ah 81h MOVNTDQA sse(reg),sse(r/m) mod=2 reg=0 rm=1      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x82: /* 66h 0Fh 38h 2Ah 82h MOVNTDQA sse(reg),sse(r/m) mod=2 reg=0 rm=2      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x83: /* 66h 0Fh 38h 2Ah 83h MOVNTDQA sse(reg),sse(r/m) mod=2 reg=0 rm=3      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x84: /* 66h 0Fh 38h 2Ah 84h MOVNTDQA sse(reg),sse(r/m) mod=2 reg=0 rm=4      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x85: /* 66h 0Fh 38h 2Ah 85h MOVNTDQA sse(reg),sse(r/m) mod=2 reg=0 rm=5      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x86: /* 66h 0Fh 38h 2Ah 86h MOVNTDQA sse(reg),sse(r/m) mod=2 reg=0 rm=6      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x87: /* 66h 0Fh 38h 2Ah 87h MOVNTDQA sse(reg),sse(r/m) mod=2 reg=0 rm=7      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x88: /* 66h 0Fh 38h 2Ah 88h MOVNTDQA sse(reg),sse(r/m) mod=2 reg=1 rm=0      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x89: /* 66h 0Fh 38h 2Ah 89h MOVNTDQA sse(reg),sse(r/m) mod=2 reg=1 rm=1      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x8A: /* 66h 0Fh 38h 2Ah 8Ah MOVNTDQA sse(reg),sse(r/m) mod=2 reg=1 rm=2      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x8B: /* 66h 0Fh 38h 2Ah 8Bh MOVNTDQA sse(reg),sse(r/m) mod=2 reg=1 rm=3      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x8C: /* 66h 0Fh 38h 2Ah 8Ch MOVNTDQA sse(reg),sse(r/m) mod=2 reg=1 rm=4      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x8D: /* 66h 0Fh 38h 2Ah 8Dh MOVNTDQA sse(reg),sse(r/m) mod=2 reg=1 rm=5      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x8E: /* 66h 0Fh 38h 2Ah 8Eh MOVNTDQA sse(reg),sse(r/m) mod=2 reg=1 rm=6      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x8F: /* 66h 0Fh 38h 2Ah 8Fh MOVNTDQA sse(reg),sse(r/m) mod=2 reg=1 rm=7      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x90: /* 66h 0Fh 38h 2Ah 90h MOVNTDQA sse(reg),sse(r/m) mod=2 reg=2 rm=0      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x91: /* 66h 0Fh 38h 2Ah 91h MOVNTDQA sse(reg),sse(r/m) mod=2 reg=2 rm=1      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x92: /* 66h 0Fh 38h 2Ah 92h MOVNTDQA sse(reg),sse(r/m) mod=2 reg=2 rm=2      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x93: /* 66h 0Fh 38h 2Ah 93h MOVNTDQA sse(reg),sse(r/m) mod=2 reg=2 rm=3      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x94: /* 66h 0Fh 38h 2Ah 94h MOVNTDQA sse(reg),sse(r/m) mod=2 reg=2 rm=4      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x95: /* 66h 0Fh 38h 2Ah 95h MOVNTDQA sse(reg),sse(r/m) mod=2 reg=2 rm=5      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x96: /* 66h 0Fh 38h 2Ah 96h MOVNTDQA sse(reg),sse(r/m) mod=2 reg=2 rm=6      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x97: /* 66h 0Fh 38h 2Ah 97h MOVNTDQA sse(reg),sse(r/m) mod=2 reg=2 rm=7      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x98: /* 66h 0Fh 38h 2Ah 98h MOVNTDQA sse(reg),sse(r/m) mod=2 reg=3 rm=0      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x99: /* 66h 0Fh 38h 2Ah 99h MOVNTDQA sse(reg),sse(r/m) mod=2 reg=3 rm=1      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x9A: /* 66h 0Fh 38h 2Ah 9Ah MOVNTDQA sse(reg),sse(r/m) mod=2 reg=3 rm=2      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x9B: /* 66h 0Fh 38h 2Ah 9Bh MOVNTDQA sse(reg),sse(r/m) mod=2 reg=3 rm=3      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x9C: /* 66h 0Fh 38h 2Ah 9Ch MOVNTDQA sse(reg),sse(r/m) mod=2 reg=3 rm=4      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x9D: /* 66h 0Fh 38h 2Ah 9Dh MOVNTDQA sse(reg),sse(r/m) mod=2 reg=3 rm=5      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x9E: /* 66h 0Fh 38h 2Ah 9Eh MOVNTDQA sse(reg),sse(r/m) mod=2 reg=3 rm=6      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x9F: /* 66h 0Fh 38h 2Ah 9Fh MOVNTDQA sse(reg),sse(r/m) mod=2 reg=3 rm=7      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xA0: /* 66h 0Fh 38h 2Ah A0h MOVNTDQA sse(reg),sse(r/m) mod=2 reg=4 rm=0      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xA1: /* 66h 0Fh 38h 2Ah A1h MOVNTDQA sse(reg),sse(r/m) mod=2 reg=4 rm=1      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xA2: /* 66h 0Fh 38h 2Ah A2h MOVNTDQA sse(reg),sse(r/m) mod=2 reg=4 rm=2      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xA3: /* 66h 0Fh 38h 2Ah A3h MOVNTDQA sse(reg),sse(r/m) mod=2 reg=4 rm=3      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xA4: /* 66h 0Fh 38h 2Ah A4h MOVNTDQA sse(reg),sse(r/m) mod=2 reg=4 rm=4      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xA5: /* 66h 0Fh 38h 2Ah A5h MOVNTDQA sse(reg),sse(r/m) mod=2 reg=4 rm=5      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xA6: /* 66h 0Fh 38h 2Ah A6h MOVNTDQA sse(reg),sse(r/m) mod=2 reg=4 rm=6      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xA7: /* 66h 0Fh 38h 2Ah A7h MOVNTDQA sse(reg),sse(r/m) mod=2 reg=4 rm=7      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xA8: /* 66h 0Fh 38h 2Ah A8h MOVNTDQA sse(reg),sse(r/m) mod=2 reg=5 rm=0      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xA9: /* 66h 0Fh 38h 2Ah A9h MOVNTDQA sse(reg),sse(r/m) mod=2 reg=5 rm=1      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xAA: /* 66h 0Fh 38h 2Ah AAh MOVNTDQA sse(reg),sse(r/m) mod=2 reg=5 rm=2      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xAB: /* 66h 0Fh 38h 2Ah ABh MOVNTDQA sse(reg),sse(r/m) mod=2 reg=5 rm=3      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xAC: /* 66h 0Fh 38h 2Ah ACh MOVNTDQA sse(reg),sse(r/m) mod=2 reg=5 rm=4      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xAD: /* 66h 0Fh 38h 2Ah ADh MOVNTDQA sse(reg),sse(r/m) mod=2 reg=5 rm=5      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xAE: /* 66h 0Fh 38h 2Ah AEh MOVNTDQA sse(reg),sse(r/m) mod=2 reg=5 rm=6      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xAF: /* 66h 0Fh 38h 2Ah AFh MOVNTDQA sse(reg),sse(r/m) mod=2 reg=5 rm=7      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xB0: /* 66h 0Fh 38h 2Ah B0h MOVNTDQA sse(reg),sse(r/m) mod=2 reg=6 rm=0      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xB1: /* 66h 0Fh 38h 2Ah B1h MOVNTDQA sse(reg),sse(r/m) mod=2 reg=6 rm=1      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xB2: /* 66h 0Fh 38h 2Ah B2h MOVNTDQA sse(reg),sse(r/m) mod=2 reg=6 rm=2      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xB3: /* 66h 0Fh 38h 2Ah B3h MOVNTDQA sse(reg),sse(r/m) mod=2 reg=6 rm=3      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xB4: /* 66h 0Fh 38h 2Ah B4h MOVNTDQA sse(reg),sse(r/m) mod=2 reg=6 rm=4      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xB5: /* 66h 0Fh 38h 2Ah B5h MOVNTDQA sse(reg),sse(r/m) mod=2 reg=6 rm=5      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xB6: /* 66h 0Fh 38h 2Ah B6h MOVNTDQA sse(reg),sse(r/m) mod=2 reg=6 rm=6      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xB7: /* 66h 0Fh 38h 2Ah B7h MOVNTDQA sse(reg),sse(r/m) mod=2 reg=6 rm=7      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xB8: /* 66h 0Fh 38h 2Ah B8h MOVNTDQA sse(reg),sse(r/m) mod=2 reg=7 rm=0      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xB9: /* 66h 0Fh 38h 2Ah B9h MOVNTDQA sse(reg),sse(r/m) mod=2 reg=7 rm=1      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xBA: /* 66h 0Fh 38h 2Ah BAh MOVNTDQA sse(reg),sse(r/m) mod=2 reg=7 rm=2      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xBB: /* 66h 0Fh 38h 2Ah BBh MOVNTDQA sse(reg),sse(r/m) mod=2 reg=7 rm=3      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xBC: /* 66h 0Fh 38h 2Ah BCh MOVNTDQA sse(reg),sse(r/m) mod=2 reg=7 rm=4      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xBD: /* 66h 0Fh 38h 2Ah BDh MOVNTDQA sse(reg),sse(r/m) mod=2 reg=7 rm=5      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xBE: /* 66h 0Fh 38h 2Ah BEh MOVNTDQA sse(reg),sse(r/m) mod=2 reg=7 rm=6      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xBF: /* 66h 0Fh 38h 2Ah BFh MOVNTDQA sse(reg),sse(r/m) mod=2 reg=7 rm=7      spec: 0x0F 0x38 0x2A mod/reg/rm mod!=3 mprefix(0x66) */
                                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVNTDQA XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                                    break;
                                /* opcode 66h 0Fh 38h 2Ah C0h  not defined */
                                /* opcode 66h 0Fh 38h 2Ah C1h  not defined */
                                /* opcode 66h 0Fh 38h 2Ah C2h  not defined */
                                /* opcode 66h 0Fh 38h 2Ah C3h  not defined */
                                /* opcode 66h 0Fh 38h 2Ah C4h  not defined */
                                /* opcode 66h 0Fh 38h 2Ah C5h  not defined */
                                /* opcode 66h 0Fh 38h 2Ah C6h  not defined */
                                /* opcode 66h 0Fh 38h 2Ah C7h  not defined */
                                /* opcode 66h 0Fh 38h 2Ah C8h  not defined */
                                /* opcode 66h 0Fh 38h 2Ah C9h  not defined */
                                /* opcode 66h 0Fh 38h 2Ah CAh  not defined */
                                /* opcode 66h 0Fh 38h 2Ah CBh  not defined */
                                /* opcode 66h 0Fh 38h 2Ah CCh  not defined */
                                /* opcode 66h 0Fh 38h 2Ah CDh  not defined */
                                /* opcode 66h 0Fh 38h 2Ah CEh  not defined */
                                /* opcode 66h 0Fh 38h 2Ah CFh  not defined */
                                /* opcode 66h 0Fh 38h 2Ah D0h  not defined */
                                /* opcode 66h 0Fh 38h 2Ah D1h  not defined */
                                /* opcode 66h 0Fh 38h 2Ah D2h  not defined */
                                /* opcode 66h 0Fh 38h 2Ah D3h  not defined */
                                /* opcode 66h 0Fh 38h 2Ah D4h  not defined */
                                /* opcode 66h 0Fh 38h 2Ah D5h  not defined */
                                /* opcode 66h 0Fh 38h 2Ah D6h  not defined */
                                /* opcode 66h 0Fh 38h 2Ah D7h  not defined */
                                /* opcode 66h 0Fh 38h 2Ah D8h  not defined */
                                /* opcode 66h 0Fh 38h 2Ah D9h  not defined */
                                /* opcode 66h 0Fh 38h 2Ah DAh  not defined */
                                /* opcode 66h 0Fh 38h 2Ah DBh  not defined */
                                /* opcode 66h 0Fh 38h 2Ah DCh  not defined */
                                /* opcode 66h 0Fh 38h 2Ah DDh  not defined */
                                /* opcode 66h 0Fh 38h 2Ah DEh  not defined */
                                /* opcode 66h 0Fh 38h 2Ah DFh  not defined */
                                /* opcode 66h 0Fh 38h 2Ah E0h  not defined */
                                /* opcode 66h 0Fh 38h 2Ah E1h  not defined */
                                /* opcode 66h 0Fh 38h 2Ah E2h  not defined */
                                /* opcode 66h 0Fh 38h 2Ah E3h  not defined */
                                /* opcode 66h 0Fh 38h 2Ah E4h  not defined */
                                /* opcode 66h 0Fh 38h 2Ah E5h  not defined */
                                /* opcode 66h 0Fh 38h 2Ah E6h  not defined */
                                /* opcode 66h 0Fh 38h 2Ah E7h  not defined */
                                /* opcode 66h 0Fh 38h 2Ah E8h  not defined */
                                /* opcode 66h 0Fh 38h 2Ah E9h  not defined */
                                /* opcode 66h 0Fh 38h 2Ah EAh  not defined */
                                /* opcode 66h 0Fh 38h 2Ah EBh  not defined */
                                /* opcode 66h 0Fh 38h 2Ah ECh  not defined */
                                /* opcode 66h 0Fh 38h 2Ah EDh  not defined */
                                /* opcode 66h 0Fh 38h 2Ah EEh  not defined */
                                /* opcode 66h 0Fh 38h 2Ah EFh  not defined */
                                /* opcode 66h 0Fh 38h 2Ah F0h  not defined */
                                /* opcode 66h 0Fh 38h 2Ah F1h  not defined */
                                /* opcode 66h 0Fh 38h 2Ah F2h  not defined */
                                /* opcode 66h 0Fh 38h 2Ah F3h  not defined */
                                /* opcode 66h 0Fh 38h 2Ah F4h  not defined */
                                /* opcode 66h 0Fh 38h 2Ah F5h  not defined */
                                /* opcode 66h 0Fh 38h 2Ah F6h  not defined */
                                /* opcode 66h 0Fh 38h 2Ah F7h  not defined */
                                /* opcode 66h 0Fh 38h 2Ah F8h  not defined */
                                /* opcode 66h 0Fh 38h 2Ah F9h  not defined */
                                /* opcode 66h 0Fh 38h 2Ah FAh  not defined */
                                /* opcode 66h 0Fh 38h 2Ah FBh  not defined */
                                /* opcode 66h 0Fh 38h 2Ah FCh  not defined */
                                /* opcode 66h 0Fh 38h 2Ah FDh  not defined */
                                /* opcode 66h 0Fh 38h 2Ah FEh  not defined */
                                /* opcode 66h 0Fh 38h 2Ah FFh  not defined */
                                default:
                                    goto _x86decode_illegal_opcode; /* non-mandatory fallback does not exist */
                            };
/* End of opcodes starting with 66h 0Fh 38h 2Ah */
                            break;
                        case 0x2B: /* 66h 0Fh 38h 2Bh PACKUSDW sse(reg),sse(r/m)      spec: 0x0F 0x38 0x2B mod/reg/rm mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PACKUSDW XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                            break;
                        /* opcode 66h 0Fh 38h 2Ch  not defined */
                        /* opcode 66h 0Fh 38h 2Dh  not defined */
                        /* opcode 66h 0Fh 38h 2Eh  not defined */
                        /* opcode 66h 0Fh 38h 2Fh  not defined */
                        case 0x30: /* 66h 0Fh 38h 30h PMOVZXBW sse(reg),sse(r/m)      spec: 0x0F 0x38 0x30 mod/reg/rm mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PMOVZXBW XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                            break;
                        case 0x31: /* 66h 0Fh 38h 31h PMOVZXBD sse(reg),sse(r/m)      spec: 0x0F 0x38 0x31 mod/reg/rm mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PMOVZXBD XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                            break;
                        case 0x32: /* 66h 0Fh 38h 32h PMOVZXBQ sse(reg),sse(r/m)      spec: 0x0F 0x38 0x32 mod/reg/rm mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PMOVZXBQ XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                            break;
                        case 0x33: /* 66h 0Fh 38h 33h PMOVZXWD sse(reg),sse(r/m)      spec: 0x0F 0x38 0x33 mod/reg/rm mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PMOVZXWD XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                            break;
                        case 0x34: /* 66h 0Fh 38h 34h PMOVZXWQ sse(reg),sse(r/m)      spec: 0x0F 0x38 0x34 mod/reg/rm mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PMOVZXWQ XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                            break;
                        case 0x35: /* 66h 0Fh 38h 35h PMOVZXDQ sse(reg),sse(r/m)      spec: 0x0F 0x38 0x35 mod/reg/rm mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PMOVZXDQ XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                            break;
                        /* opcode 66h 0Fh 38h 36h  not defined */
                        case 0x37: /* 66h 0Fh 38h 37h PCMPGTQ sse(reg),sse(r/m)      spec: 0x0F 0x38 0x37 mod/reg/rm mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PCMPGTQ XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                            break;
                        case 0x38: /* 66h 0Fh 38h 38h PMINSB sse(reg),sse(r/m)      spec: 0x0F 0x38 0x38 mod/reg/rm mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PMINSB XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                            break;
                        case 0x39: /* 66h 0Fh 38h 39h PMINSD sse(reg),sse(r/m)      spec: 0x0F 0x38 0x39 mod/reg/rm mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PMINSD XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                            break;
                        case 0x3A: /* 66h 0Fh 38h 3Ah PMINUW sse(reg),sse(r/m)      spec: 0x0F 0x38 0x3A mod/reg/rm mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PMINUW XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                            break;
                        case 0x3B: /* 66h 0Fh 38h 3Bh PMINUD sse(reg),sse(r/m)      spec: 0x0F 0x38 0x3B mod/reg/rm mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PMINUD XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                            break;
                        case 0x3C: /* 66h 0Fh 38h 3Ch PMAXSB sse(reg),sse(r/m)      spec: 0x0F 0x38 0x3C mod/reg/rm mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PMAXSB XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                            break;
                        case 0x3D: /* 66h 0Fh 38h 3Dh PMAXSD sse(reg),sse(r/m)      spec: 0x0F 0x38 0x3D mod/reg/rm mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PMAXSD XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                            break;
                        case 0x3E: /* 66h 0Fh 38h 3Eh PMAXUW sse(reg),sse(r/m)      spec: 0x0F 0x38 0x3E mod/reg/rm mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PMAXUW XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                            break;
                        case 0x3F: /* 66h 0Fh 38h 3Fh PMAXUD sse(reg),sse(r/m)      spec: 0x0F 0x38 0x3F mod/reg/rm mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PMAXUD XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                            break;
                        case 0x40: /* 66h 0Fh 38h 40h PMULLD sse(reg),sse(r/m)      spec: 0x0F 0x38 0x40 mod/reg/rm mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PMULLD XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                            break;
                        case 0x41: /* 66h 0Fh 38h 41h PHMINPOSUW sse(reg),sse(r/m)      spec: 0x0F 0x38 0x41 mod/reg/rm mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PHMINPOSUW XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                            break;
                        /* opcode 66h 0Fh 38h 42h  not defined */
                        /* opcode 66h 0Fh 38h 43h  not defined */
                        /* opcode 66h 0Fh 38h 44h  not defined */
                        /* opcode 66h 0Fh 38h 45h  not defined */
                        /* opcode 66h 0Fh 38h 46h  not defined */
                        /* opcode 66h 0Fh 38h 47h  not defined */
                        /* opcode 66h 0Fh 38h 48h  not defined */
                        /* opcode 66h 0Fh 38h 49h  not defined */
                        /* opcode 66h 0Fh 38h 4Ah  not defined */
                        /* opcode 66h 0Fh 38h 4Bh  not defined */
                        /* opcode 66h 0Fh 38h 4Ch  not defined */
                        /* opcode 66h 0Fh 38h 4Dh  not defined */
                        /* opcode 66h 0Fh 38h 4Eh  not defined */
                        /* opcode 66h 0Fh 38h 4Fh  not defined */
                        /* opcode 66h 0Fh 38h 50h  not defined */
                        /* opcode 66h 0Fh 38h 51h  not defined */
                        /* opcode 66h 0Fh 38h 52h  not defined */
                        /* opcode 66h 0Fh 38h 53h  not defined */
                        /* opcode 66h 0Fh 38h 54h  not defined */
                        /* opcode 66h 0Fh 38h 55h  not defined */
                        /* opcode 66h 0Fh 38h 56h  not defined */
                        /* opcode 66h 0Fh 38h 57h  not defined */
                        /* opcode 66h 0Fh 38h 58h  not defined */
                        /* opcode 66h 0Fh 38h 59h  not defined */
                        /* opcode 66h 0Fh 38h 5Ah  not defined */
                        /* opcode 66h 0Fh 38h 5Bh  not defined */
                        /* opcode 66h 0Fh 38h 5Ch  not defined */
                        /* opcode 66h 0Fh 38h 5Dh  not defined */
                        /* opcode 66h 0Fh 38h 5Eh  not defined */
                        /* opcode 66h 0Fh 38h 5Fh  not defined */
                        /* opcode 66h 0Fh 38h 60h  not defined */
                        /* opcode 66h 0Fh 38h 61h  not defined */
                        /* opcode 66h 0Fh 38h 62h  not defined */
                        /* opcode 66h 0Fh 38h 63h  not defined */
                        /* opcode 66h 0Fh 38h 64h  not defined */
                        /* opcode 66h 0Fh 38h 65h  not defined */
                        /* opcode 66h 0Fh 38h 66h  not defined */
                        /* opcode 66h 0Fh 38h 67h  not defined */
                        /* opcode 66h 0Fh 38h 68h  not defined */
                        /* opcode 66h 0Fh 38h 69h  not defined */
                        /* opcode 66h 0Fh 38h 6Ah  not defined */
                        /* opcode 66h 0Fh 38h 6Bh  not defined */
                        /* opcode 66h 0Fh 38h 6Ch  not defined */
                        /* opcode 66h 0Fh 38h 6Dh  not defined */
                        /* opcode 66h 0Fh 38h 6Eh  not defined */
                        /* opcode 66h 0Fh 38h 6Fh  not defined */
                        /* opcode 66h 0Fh 38h 70h  not defined */
                        /* opcode 66h 0Fh 38h 71h  not defined */
                        /* opcode 66h 0Fh 38h 72h  not defined */
                        /* opcode 66h 0Fh 38h 73h  not defined */
                        /* opcode 66h 0Fh 38h 74h  not defined */
                        /* opcode 66h 0Fh 38h 75h  not defined */
                        /* opcode 66h 0Fh 38h 76h  not defined */
                        /* opcode 66h 0Fh 38h 77h  not defined */
                        /* opcode 66h 0Fh 38h 78h  not defined */
                        /* opcode 66h 0Fh 38h 79h  not defined */
                        /* opcode 66h 0Fh 38h 7Ah  not defined */
                        /* opcode 66h 0Fh 38h 7Bh  not defined */
                        /* opcode 66h 0Fh 38h 7Ch  not defined */
                        /* opcode 66h 0Fh 38h 7Dh  not defined */
                        /* opcode 66h 0Fh 38h 7Eh  not defined */
                        /* opcode 66h 0Fh 38h 7Fh  not defined */
                        case 0x80: /* 66h 0Fh 38h 80h        spec:  */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            _x86decode_begin_code32_addr32_opcode_parse_660F3880:
/* Opcodes starting with 66h 0Fh 38h 80h */
                            switch (mrm.byte) {
                                case 0x00: /* 66h 0Fh 38h 80h 00h INVEPT w32(reg),sse(r/m) mod=0 reg=0 rm=0      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x01: /* 66h 0Fh 38h 80h 01h INVEPT w32(reg),sse(r/m) mod=0 reg=0 rm=1      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x02: /* 66h 0Fh 38h 80h 02h INVEPT w32(reg),sse(r/m) mod=0 reg=0 rm=2      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x03: /* 66h 0Fh 38h 80h 03h INVEPT w32(reg),sse(r/m) mod=0 reg=0 rm=3      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x04: /* 66h 0Fh 38h 80h 04h INVEPT w32(reg),sse(r/m) mod=0 reg=0 rm=4      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x05: /* 66h 0Fh 38h 80h 05h INVEPT w32(reg),sse(r/m) mod=0 reg=0 rm=5      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x06: /* 66h 0Fh 38h 80h 06h INVEPT w32(reg),sse(r/m) mod=0 reg=0 rm=6      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x07: /* 66h 0Fh 38h 80h 07h INVEPT w32(reg),sse(r/m) mod=0 reg=0 rm=7      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x08: /* 66h 0Fh 38h 80h 08h INVEPT w32(reg),sse(r/m) mod=0 reg=1 rm=0      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x09: /* 66h 0Fh 38h 80h 09h INVEPT w32(reg),sse(r/m) mod=0 reg=1 rm=1      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x0A: /* 66h 0Fh 38h 80h 0Ah INVEPT w32(reg),sse(r/m) mod=0 reg=1 rm=2      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x0B: /* 66h 0Fh 38h 80h 0Bh INVEPT w32(reg),sse(r/m) mod=0 reg=1 rm=3      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x0C: /* 66h 0Fh 38h 80h 0Ch INVEPT w32(reg),sse(r/m) mod=0 reg=1 rm=4      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x0D: /* 66h 0Fh 38h 80h 0Dh INVEPT w32(reg),sse(r/m) mod=0 reg=1 rm=5      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x0E: /* 66h 0Fh 38h 80h 0Eh INVEPT w32(reg),sse(r/m) mod=0 reg=1 rm=6      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x0F: /* 66h 0Fh 38h 80h 0Fh INVEPT w32(reg),sse(r/m) mod=0 reg=1 rm=7      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x10: /* 66h 0Fh 38h 80h 10h INVEPT w32(reg),sse(r/m) mod=0 reg=2 rm=0      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x11: /* 66h 0Fh 38h 80h 11h INVEPT w32(reg),sse(r/m) mod=0 reg=2 rm=1      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x12: /* 66h 0Fh 38h 80h 12h INVEPT w32(reg),sse(r/m) mod=0 reg=2 rm=2      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x13: /* 66h 0Fh 38h 80h 13h INVEPT w32(reg),sse(r/m) mod=0 reg=2 rm=3      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x14: /* 66h 0Fh 38h 80h 14h INVEPT w32(reg),sse(r/m) mod=0 reg=2 rm=4      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x15: /* 66h 0Fh 38h 80h 15h INVEPT w32(reg),sse(r/m) mod=0 reg=2 rm=5      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x16: /* 66h 0Fh 38h 80h 16h INVEPT w32(reg),sse(r/m) mod=0 reg=2 rm=6      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x17: /* 66h 0Fh 38h 80h 17h INVEPT w32(reg),sse(r/m) mod=0 reg=2 rm=7      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x18: /* 66h 0Fh 38h 80h 18h INVEPT w32(reg),sse(r/m) mod=0 reg=3 rm=0      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x19: /* 66h 0Fh 38h 80h 19h INVEPT w32(reg),sse(r/m) mod=0 reg=3 rm=1      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x1A: /* 66h 0Fh 38h 80h 1Ah INVEPT w32(reg),sse(r/m) mod=0 reg=3 rm=2      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x1B: /* 66h 0Fh 38h 80h 1Bh INVEPT w32(reg),sse(r/m) mod=0 reg=3 rm=3      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x1C: /* 66h 0Fh 38h 80h 1Ch INVEPT w32(reg),sse(r/m) mod=0 reg=3 rm=4      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x1D: /* 66h 0Fh 38h 80h 1Dh INVEPT w32(reg),sse(r/m) mod=0 reg=3 rm=5      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x1E: /* 66h 0Fh 38h 80h 1Eh INVEPT w32(reg),sse(r/m) mod=0 reg=3 rm=6      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x1F: /* 66h 0Fh 38h 80h 1Fh INVEPT w32(reg),sse(r/m) mod=0 reg=3 rm=7      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x20: /* 66h 0Fh 38h 80h 20h INVEPT w32(reg),sse(r/m) mod=0 reg=4 rm=0      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x21: /* 66h 0Fh 38h 80h 21h INVEPT w32(reg),sse(r/m) mod=0 reg=4 rm=1      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x22: /* 66h 0Fh 38h 80h 22h INVEPT w32(reg),sse(r/m) mod=0 reg=4 rm=2      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x23: /* 66h 0Fh 38h 80h 23h INVEPT w32(reg),sse(r/m) mod=0 reg=4 rm=3      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x24: /* 66h 0Fh 38h 80h 24h INVEPT w32(reg),sse(r/m) mod=0 reg=4 rm=4      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x25: /* 66h 0Fh 38h 80h 25h INVEPT w32(reg),sse(r/m) mod=0 reg=4 rm=5      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x26: /* 66h 0Fh 38h 80h 26h INVEPT w32(reg),sse(r/m) mod=0 reg=4 rm=6      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x27: /* 66h 0Fh 38h 80h 27h INVEPT w32(reg),sse(r/m) mod=0 reg=4 rm=7      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x28: /* 66h 0Fh 38h 80h 28h INVEPT w32(reg),sse(r/m) mod=0 reg=5 rm=0      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x29: /* 66h 0Fh 38h 80h 29h INVEPT w32(reg),sse(r/m) mod=0 reg=5 rm=1      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x2A: /* 66h 0Fh 38h 80h 2Ah INVEPT w32(reg),sse(r/m) mod=0 reg=5 rm=2      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x2B: /* 66h 0Fh 38h 80h 2Bh INVEPT w32(reg),sse(r/m) mod=0 reg=5 rm=3      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x2C: /* 66h 0Fh 38h 80h 2Ch INVEPT w32(reg),sse(r/m) mod=0 reg=5 rm=4      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x2D: /* 66h 0Fh 38h 80h 2Dh INVEPT w32(reg),sse(r/m) mod=0 reg=5 rm=5      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x2E: /* 66h 0Fh 38h 80h 2Eh INVEPT w32(reg),sse(r/m) mod=0 reg=5 rm=6      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x2F: /* 66h 0Fh 38h 80h 2Fh INVEPT w32(reg),sse(r/m) mod=0 reg=5 rm=7      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x30: /* 66h 0Fh 38h 80h 30h INVEPT w32(reg),sse(r/m) mod=0 reg=6 rm=0      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x31: /* 66h 0Fh 38h 80h 31h INVEPT w32(reg),sse(r/m) mod=0 reg=6 rm=1      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x32: /* 66h 0Fh 38h 80h 32h INVEPT w32(reg),sse(r/m) mod=0 reg=6 rm=2      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x33: /* 66h 0Fh 38h 80h 33h INVEPT w32(reg),sse(r/m) mod=0 reg=6 rm=3      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x34: /* 66h 0Fh 38h 80h 34h INVEPT w32(reg),sse(r/m) mod=0 reg=6 rm=4      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x35: /* 66h 0Fh 38h 80h 35h INVEPT w32(reg),sse(r/m) mod=0 reg=6 rm=5      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x36: /* 66h 0Fh 38h 80h 36h INVEPT w32(reg),sse(r/m) mod=0 reg=6 rm=6      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x37: /* 66h 0Fh 38h 80h 37h INVEPT w32(reg),sse(r/m) mod=0 reg=6 rm=7      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x38: /* 66h 0Fh 38h 80h 38h INVEPT w32(reg),sse(r/m) mod=0 reg=7 rm=0      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x39: /* 66h 0Fh 38h 80h 39h INVEPT w32(reg),sse(r/m) mod=0 reg=7 rm=1      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x3A: /* 66h 0Fh 38h 80h 3Ah INVEPT w32(reg),sse(r/m) mod=0 reg=7 rm=2      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x3B: /* 66h 0Fh 38h 80h 3Bh INVEPT w32(reg),sse(r/m) mod=0 reg=7 rm=3      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x3C: /* 66h 0Fh 38h 80h 3Ch INVEPT w32(reg),sse(r/m) mod=0 reg=7 rm=4      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x3D: /* 66h 0Fh 38h 80h 3Dh INVEPT w32(reg),sse(r/m) mod=0 reg=7 rm=5      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x3E: /* 66h 0Fh 38h 80h 3Eh INVEPT w32(reg),sse(r/m) mod=0 reg=7 rm=6      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x3F: /* 66h 0Fh 38h 80h 3Fh INVEPT w32(reg),sse(r/m) mod=0 reg=7 rm=7      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x40: /* 66h 0Fh 38h 80h 40h INVEPT w32(reg),sse(r/m) mod=1 reg=0 rm=0      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x41: /* 66h 0Fh 38h 80h 41h INVEPT w32(reg),sse(r/m) mod=1 reg=0 rm=1      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x42: /* 66h 0Fh 38h 80h 42h INVEPT w32(reg),sse(r/m) mod=1 reg=0 rm=2      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x43: /* 66h 0Fh 38h 80h 43h INVEPT w32(reg),sse(r/m) mod=1 reg=0 rm=3      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x44: /* 66h 0Fh 38h 80h 44h INVEPT w32(reg),sse(r/m) mod=1 reg=0 rm=4      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x45: /* 66h 0Fh 38h 80h 45h INVEPT w32(reg),sse(r/m) mod=1 reg=0 rm=5      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x46: /* 66h 0Fh 38h 80h 46h INVEPT w32(reg),sse(r/m) mod=1 reg=0 rm=6      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x47: /* 66h 0Fh 38h 80h 47h INVEPT w32(reg),sse(r/m) mod=1 reg=0 rm=7      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x48: /* 66h 0Fh 38h 80h 48h INVEPT w32(reg),sse(r/m) mod=1 reg=1 rm=0      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x49: /* 66h 0Fh 38h 80h 49h INVEPT w32(reg),sse(r/m) mod=1 reg=1 rm=1      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x4A: /* 66h 0Fh 38h 80h 4Ah INVEPT w32(reg),sse(r/m) mod=1 reg=1 rm=2      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x4B: /* 66h 0Fh 38h 80h 4Bh INVEPT w32(reg),sse(r/m) mod=1 reg=1 rm=3      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x4C: /* 66h 0Fh 38h 80h 4Ch INVEPT w32(reg),sse(r/m) mod=1 reg=1 rm=4      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x4D: /* 66h 0Fh 38h 80h 4Dh INVEPT w32(reg),sse(r/m) mod=1 reg=1 rm=5      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x4E: /* 66h 0Fh 38h 80h 4Eh INVEPT w32(reg),sse(r/m) mod=1 reg=1 rm=6      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x4F: /* 66h 0Fh 38h 80h 4Fh INVEPT w32(reg),sse(r/m) mod=1 reg=1 rm=7      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x50: /* 66h 0Fh 38h 80h 50h INVEPT w32(reg),sse(r/m) mod=1 reg=2 rm=0      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x51: /* 66h 0Fh 38h 80h 51h INVEPT w32(reg),sse(r/m) mod=1 reg=2 rm=1      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x52: /* 66h 0Fh 38h 80h 52h INVEPT w32(reg),sse(r/m) mod=1 reg=2 rm=2      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x53: /* 66h 0Fh 38h 80h 53h INVEPT w32(reg),sse(r/m) mod=1 reg=2 rm=3      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x54: /* 66h 0Fh 38h 80h 54h INVEPT w32(reg),sse(r/m) mod=1 reg=2 rm=4      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x55: /* 66h 0Fh 38h 80h 55h INVEPT w32(reg),sse(r/m) mod=1 reg=2 rm=5      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x56: /* 66h 0Fh 38h 80h 56h INVEPT w32(reg),sse(r/m) mod=1 reg=2 rm=6      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x57: /* 66h 0Fh 38h 80h 57h INVEPT w32(reg),sse(r/m) mod=1 reg=2 rm=7      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x58: /* 66h 0Fh 38h 80h 58h INVEPT w32(reg),sse(r/m) mod=1 reg=3 rm=0      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x59: /* 66h 0Fh 38h 80h 59h INVEPT w32(reg),sse(r/m) mod=1 reg=3 rm=1      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x5A: /* 66h 0Fh 38h 80h 5Ah INVEPT w32(reg),sse(r/m) mod=1 reg=3 rm=2      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x5B: /* 66h 0Fh 38h 80h 5Bh INVEPT w32(reg),sse(r/m) mod=1 reg=3 rm=3      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x5C: /* 66h 0Fh 38h 80h 5Ch INVEPT w32(reg),sse(r/m) mod=1 reg=3 rm=4      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x5D: /* 66h 0Fh 38h 80h 5Dh INVEPT w32(reg),sse(r/m) mod=1 reg=3 rm=5      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x5E: /* 66h 0Fh 38h 80h 5Eh INVEPT w32(reg),sse(r/m) mod=1 reg=3 rm=6      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x5F: /* 66h 0Fh 38h 80h 5Fh INVEPT w32(reg),sse(r/m) mod=1 reg=3 rm=7      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x60: /* 66h 0Fh 38h 80h 60h INVEPT w32(reg),sse(r/m) mod=1 reg=4 rm=0      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x61: /* 66h 0Fh 38h 80h 61h INVEPT w32(reg),sse(r/m) mod=1 reg=4 rm=1      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x62: /* 66h 0Fh 38h 80h 62h INVEPT w32(reg),sse(r/m) mod=1 reg=4 rm=2      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x63: /* 66h 0Fh 38h 80h 63h INVEPT w32(reg),sse(r/m) mod=1 reg=4 rm=3      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x64: /* 66h 0Fh 38h 80h 64h INVEPT w32(reg),sse(r/m) mod=1 reg=4 rm=4      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x65: /* 66h 0Fh 38h 80h 65h INVEPT w32(reg),sse(r/m) mod=1 reg=4 rm=5      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x66: /* 66h 0Fh 38h 80h 66h INVEPT w32(reg),sse(r/m) mod=1 reg=4 rm=6      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x67: /* 66h 0Fh 38h 80h 67h INVEPT w32(reg),sse(r/m) mod=1 reg=4 rm=7      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x68: /* 66h 0Fh 38h 80h 68h INVEPT w32(reg),sse(r/m) mod=1 reg=5 rm=0      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x69: /* 66h 0Fh 38h 80h 69h INVEPT w32(reg),sse(r/m) mod=1 reg=5 rm=1      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x6A: /* 66h 0Fh 38h 80h 6Ah INVEPT w32(reg),sse(r/m) mod=1 reg=5 rm=2      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x6B: /* 66h 0Fh 38h 80h 6Bh INVEPT w32(reg),sse(r/m) mod=1 reg=5 rm=3      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x6C: /* 66h 0Fh 38h 80h 6Ch INVEPT w32(reg),sse(r/m) mod=1 reg=5 rm=4      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x6D: /* 66h 0Fh 38h 80h 6Dh INVEPT w32(reg),sse(r/m) mod=1 reg=5 rm=5      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x6E: /* 66h 0Fh 38h 80h 6Eh INVEPT w32(reg),sse(r/m) mod=1 reg=5 rm=6      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x6F: /* 66h 0Fh 38h 80h 6Fh INVEPT w32(reg),sse(r/m) mod=1 reg=5 rm=7      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x70: /* 66h 0Fh 38h 80h 70h INVEPT w32(reg),sse(r/m) mod=1 reg=6 rm=0      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x71: /* 66h 0Fh 38h 80h 71h INVEPT w32(reg),sse(r/m) mod=1 reg=6 rm=1      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x72: /* 66h 0Fh 38h 80h 72h INVEPT w32(reg),sse(r/m) mod=1 reg=6 rm=2      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x73: /* 66h 0Fh 38h 80h 73h INVEPT w32(reg),sse(r/m) mod=1 reg=6 rm=3      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x74: /* 66h 0Fh 38h 80h 74h INVEPT w32(reg),sse(r/m) mod=1 reg=6 rm=4      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x75: /* 66h 0Fh 38h 80h 75h INVEPT w32(reg),sse(r/m) mod=1 reg=6 rm=5      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x76: /* 66h 0Fh 38h 80h 76h INVEPT w32(reg),sse(r/m) mod=1 reg=6 rm=6      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x77: /* 66h 0Fh 38h 80h 77h INVEPT w32(reg),sse(r/m) mod=1 reg=6 rm=7      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x78: /* 66h 0Fh 38h 80h 78h INVEPT w32(reg),sse(r/m) mod=1 reg=7 rm=0      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x79: /* 66h 0Fh 38h 80h 79h INVEPT w32(reg),sse(r/m) mod=1 reg=7 rm=1      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x7A: /* 66h 0Fh 38h 80h 7Ah INVEPT w32(reg),sse(r/m) mod=1 reg=7 rm=2      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x7B: /* 66h 0Fh 38h 80h 7Bh INVEPT w32(reg),sse(r/m) mod=1 reg=7 rm=3      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x7C: /* 66h 0Fh 38h 80h 7Ch INVEPT w32(reg),sse(r/m) mod=1 reg=7 rm=4      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x7D: /* 66h 0Fh 38h 80h 7Dh INVEPT w32(reg),sse(r/m) mod=1 reg=7 rm=5      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x7E: /* 66h 0Fh 38h 80h 7Eh INVEPT w32(reg),sse(r/m) mod=1 reg=7 rm=6      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x7F: /* 66h 0Fh 38h 80h 7Fh INVEPT w32(reg),sse(r/m) mod=1 reg=7 rm=7      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x80: /* 66h 0Fh 38h 80h 80h INVEPT w32(reg),sse(r/m) mod=2 reg=0 rm=0      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x81: /* 66h 0Fh 38h 80h 81h INVEPT w32(reg),sse(r/m) mod=2 reg=0 rm=1      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x82: /* 66h 0Fh 38h 80h 82h INVEPT w32(reg),sse(r/m) mod=2 reg=0 rm=2      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x83: /* 66h 0Fh 38h 80h 83h INVEPT w32(reg),sse(r/m) mod=2 reg=0 rm=3      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x84: /* 66h 0Fh 38h 80h 84h INVEPT w32(reg),sse(r/m) mod=2 reg=0 rm=4      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x85: /* 66h 0Fh 38h 80h 85h INVEPT w32(reg),sse(r/m) mod=2 reg=0 rm=5      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x86: /* 66h 0Fh 38h 80h 86h INVEPT w32(reg),sse(r/m) mod=2 reg=0 rm=6      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x87: /* 66h 0Fh 38h 80h 87h INVEPT w32(reg),sse(r/m) mod=2 reg=0 rm=7      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x88: /* 66h 0Fh 38h 80h 88h INVEPT w32(reg),sse(r/m) mod=2 reg=1 rm=0      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x89: /* 66h 0Fh 38h 80h 89h INVEPT w32(reg),sse(r/m) mod=2 reg=1 rm=1      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x8A: /* 66h 0Fh 38h 80h 8Ah INVEPT w32(reg),sse(r/m) mod=2 reg=1 rm=2      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x8B: /* 66h 0Fh 38h 80h 8Bh INVEPT w32(reg),sse(r/m) mod=2 reg=1 rm=3      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x8C: /* 66h 0Fh 38h 80h 8Ch INVEPT w32(reg),sse(r/m) mod=2 reg=1 rm=4      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x8D: /* 66h 0Fh 38h 80h 8Dh INVEPT w32(reg),sse(r/m) mod=2 reg=1 rm=5      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x8E: /* 66h 0Fh 38h 80h 8Eh INVEPT w32(reg),sse(r/m) mod=2 reg=1 rm=6      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x8F: /* 66h 0Fh 38h 80h 8Fh INVEPT w32(reg),sse(r/m) mod=2 reg=1 rm=7      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x90: /* 66h 0Fh 38h 80h 90h INVEPT w32(reg),sse(r/m) mod=2 reg=2 rm=0      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x91: /* 66h 0Fh 38h 80h 91h INVEPT w32(reg),sse(r/m) mod=2 reg=2 rm=1      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x92: /* 66h 0Fh 38h 80h 92h INVEPT w32(reg),sse(r/m) mod=2 reg=2 rm=2      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x93: /* 66h 0Fh 38h 80h 93h INVEPT w32(reg),sse(r/m) mod=2 reg=2 rm=3      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x94: /* 66h 0Fh 38h 80h 94h INVEPT w32(reg),sse(r/m) mod=2 reg=2 rm=4      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x95: /* 66h 0Fh 38h 80h 95h INVEPT w32(reg),sse(r/m) mod=2 reg=2 rm=5      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x96: /* 66h 0Fh 38h 80h 96h INVEPT w32(reg),sse(r/m) mod=2 reg=2 rm=6      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x97: /* 66h 0Fh 38h 80h 97h INVEPT w32(reg),sse(r/m) mod=2 reg=2 rm=7      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x98: /* 66h 0Fh 38h 80h 98h INVEPT w32(reg),sse(r/m) mod=2 reg=3 rm=0      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x99: /* 66h 0Fh 38h 80h 99h INVEPT w32(reg),sse(r/m) mod=2 reg=3 rm=1      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x9A: /* 66h 0Fh 38h 80h 9Ah INVEPT w32(reg),sse(r/m) mod=2 reg=3 rm=2      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x9B: /* 66h 0Fh 38h 80h 9Bh INVEPT w32(reg),sse(r/m) mod=2 reg=3 rm=3      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x9C: /* 66h 0Fh 38h 80h 9Ch INVEPT w32(reg),sse(r/m) mod=2 reg=3 rm=4      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x9D: /* 66h 0Fh 38h 80h 9Dh INVEPT w32(reg),sse(r/m) mod=2 reg=3 rm=5      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x9E: /* 66h 0Fh 38h 80h 9Eh INVEPT w32(reg),sse(r/m) mod=2 reg=3 rm=6      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x9F: /* 66h 0Fh 38h 80h 9Fh INVEPT w32(reg),sse(r/m) mod=2 reg=3 rm=7      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xA0: /* 66h 0Fh 38h 80h A0h INVEPT w32(reg),sse(r/m) mod=2 reg=4 rm=0      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xA1: /* 66h 0Fh 38h 80h A1h INVEPT w32(reg),sse(r/m) mod=2 reg=4 rm=1      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xA2: /* 66h 0Fh 38h 80h A2h INVEPT w32(reg),sse(r/m) mod=2 reg=4 rm=2      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xA3: /* 66h 0Fh 38h 80h A3h INVEPT w32(reg),sse(r/m) mod=2 reg=4 rm=3      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xA4: /* 66h 0Fh 38h 80h A4h INVEPT w32(reg),sse(r/m) mod=2 reg=4 rm=4      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xA5: /* 66h 0Fh 38h 80h A5h INVEPT w32(reg),sse(r/m) mod=2 reg=4 rm=5      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xA6: /* 66h 0Fh 38h 80h A6h INVEPT w32(reg),sse(r/m) mod=2 reg=4 rm=6      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xA7: /* 66h 0Fh 38h 80h A7h INVEPT w32(reg),sse(r/m) mod=2 reg=4 rm=7      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xA8: /* 66h 0Fh 38h 80h A8h INVEPT w32(reg),sse(r/m) mod=2 reg=5 rm=0      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xA9: /* 66h 0Fh 38h 80h A9h INVEPT w32(reg),sse(r/m) mod=2 reg=5 rm=1      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xAA: /* 66h 0Fh 38h 80h AAh INVEPT w32(reg),sse(r/m) mod=2 reg=5 rm=2      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xAB: /* 66h 0Fh 38h 80h ABh INVEPT w32(reg),sse(r/m) mod=2 reg=5 rm=3      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xAC: /* 66h 0Fh 38h 80h ACh INVEPT w32(reg),sse(r/m) mod=2 reg=5 rm=4      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xAD: /* 66h 0Fh 38h 80h ADh INVEPT w32(reg),sse(r/m) mod=2 reg=5 rm=5      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xAE: /* 66h 0Fh 38h 80h AEh INVEPT w32(reg),sse(r/m) mod=2 reg=5 rm=6      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xAF: /* 66h 0Fh 38h 80h AFh INVEPT w32(reg),sse(r/m) mod=2 reg=5 rm=7      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xB0: /* 66h 0Fh 38h 80h B0h INVEPT w32(reg),sse(r/m) mod=2 reg=6 rm=0      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xB1: /* 66h 0Fh 38h 80h B1h INVEPT w32(reg),sse(r/m) mod=2 reg=6 rm=1      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xB2: /* 66h 0Fh 38h 80h B2h INVEPT w32(reg),sse(r/m) mod=2 reg=6 rm=2      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xB3: /* 66h 0Fh 38h 80h B3h INVEPT w32(reg),sse(r/m) mod=2 reg=6 rm=3      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xB4: /* 66h 0Fh 38h 80h B4h INVEPT w32(reg),sse(r/m) mod=2 reg=6 rm=4      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xB5: /* 66h 0Fh 38h 80h B5h INVEPT w32(reg),sse(r/m) mod=2 reg=6 rm=5      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xB6: /* 66h 0Fh 38h 80h B6h INVEPT w32(reg),sse(r/m) mod=2 reg=6 rm=6      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xB7: /* 66h 0Fh 38h 80h B7h INVEPT w32(reg),sse(r/m) mod=2 reg=6 rm=7      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xB8: /* 66h 0Fh 38h 80h B8h INVEPT w32(reg),sse(r/m) mod=2 reg=7 rm=0      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xB9: /* 66h 0Fh 38h 80h B9h INVEPT w32(reg),sse(r/m) mod=2 reg=7 rm=1      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xBA: /* 66h 0Fh 38h 80h BAh INVEPT w32(reg),sse(r/m) mod=2 reg=7 rm=2      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xBB: /* 66h 0Fh 38h 80h BBh INVEPT w32(reg),sse(r/m) mod=2 reg=7 rm=3      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xBC: /* 66h 0Fh 38h 80h BCh INVEPT w32(reg),sse(r/m) mod=2 reg=7 rm=4      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xBD: /* 66h 0Fh 38h 80h BDh INVEPT w32(reg),sse(r/m) mod=2 reg=7 rm=5      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xBE: /* 66h 0Fh 38h 80h BEh INVEPT w32(reg),sse(r/m) mod=2 reg=7 rm=6      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xBF: /* 66h 0Fh 38h 80h BFh INVEPT w32(reg),sse(r/m) mod=2 reg=7 rm=7      spec: 0x0F 0x38 0x80 mod/reg/rm mod!=3 mprefix(0x66) */
                                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"INVEPT %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                                    break;
                                /* opcode 66h 0Fh 38h 80h C0h  not defined */
                                /* opcode 66h 0Fh 38h 80h C1h  not defined */
                                /* opcode 66h 0Fh 38h 80h C2h  not defined */
                                /* opcode 66h 0Fh 38h 80h C3h  not defined */
                                /* opcode 66h 0Fh 38h 80h C4h  not defined */
                                /* opcode 66h 0Fh 38h 80h C5h  not defined */
                                /* opcode 66h 0Fh 38h 80h C6h  not defined */
                                /* opcode 66h 0Fh 38h 80h C7h  not defined */
                                /* opcode 66h 0Fh 38h 80h C8h  not defined */
                                /* opcode 66h 0Fh 38h 80h C9h  not defined */
                                /* opcode 66h 0Fh 38h 80h CAh  not defined */
                                /* opcode 66h 0Fh 38h 80h CBh  not defined */
                                /* opcode 66h 0Fh 38h 80h CCh  not defined */
                                /* opcode 66h 0Fh 38h 80h CDh  not defined */
                                /* opcode 66h 0Fh 38h 80h CEh  not defined */
                                /* opcode 66h 0Fh 38h 80h CFh  not defined */
                                /* opcode 66h 0Fh 38h 80h D0h  not defined */
                                /* opcode 66h 0Fh 38h 80h D1h  not defined */
                                /* opcode 66h 0Fh 38h 80h D2h  not defined */
                                /* opcode 66h 0Fh 38h 80h D3h  not defined */
                                /* opcode 66h 0Fh 38h 80h D4h  not defined */
                                /* opcode 66h 0Fh 38h 80h D5h  not defined */
                                /* opcode 66h 0Fh 38h 80h D6h  not defined */
                                /* opcode 66h 0Fh 38h 80h D7h  not defined */
                                /* opcode 66h 0Fh 38h 80h D8h  not defined */
                                /* opcode 66h 0Fh 38h 80h D9h  not defined */
                                /* opcode 66h 0Fh 38h 80h DAh  not defined */
                                /* opcode 66h 0Fh 38h 80h DBh  not defined */
                                /* opcode 66h 0Fh 38h 80h DCh  not defined */
                                /* opcode 66h 0Fh 38h 80h DDh  not defined */
                                /* opcode 66h 0Fh 38h 80h DEh  not defined */
                                /* opcode 66h 0Fh 38h 80h DFh  not defined */
                                /* opcode 66h 0Fh 38h 80h E0h  not defined */
                                /* opcode 66h 0Fh 38h 80h E1h  not defined */
                                /* opcode 66h 0Fh 38h 80h E2h  not defined */
                                /* opcode 66h 0Fh 38h 80h E3h  not defined */
                                /* opcode 66h 0Fh 38h 80h E4h  not defined */
                                /* opcode 66h 0Fh 38h 80h E5h  not defined */
                                /* opcode 66h 0Fh 38h 80h E6h  not defined */
                                /* opcode 66h 0Fh 38h 80h E7h  not defined */
                                /* opcode 66h 0Fh 38h 80h E8h  not defined */
                                /* opcode 66h 0Fh 38h 80h E9h  not defined */
                                /* opcode 66h 0Fh 38h 80h EAh  not defined */
                                /* opcode 66h 0Fh 38h 80h EBh  not defined */
                                /* opcode 66h 0Fh 38h 80h ECh  not defined */
                                /* opcode 66h 0Fh 38h 80h EDh  not defined */
                                /* opcode 66h 0Fh 38h 80h EEh  not defined */
                                /* opcode 66h 0Fh 38h 80h EFh  not defined */
                                /* opcode 66h 0Fh 38h 80h F0h  not defined */
                                /* opcode 66h 0Fh 38h 80h F1h  not defined */
                                /* opcode 66h 0Fh 38h 80h F2h  not defined */
                                /* opcode 66h 0Fh 38h 80h F3h  not defined */
                                /* opcode 66h 0Fh 38h 80h F4h  not defined */
                                /* opcode 66h 0Fh 38h 80h F5h  not defined */
                                /* opcode 66h 0Fh 38h 80h F6h  not defined */
                                /* opcode 66h 0Fh 38h 80h F7h  not defined */
                                /* opcode 66h 0Fh 38h 80h F8h  not defined */
                                /* opcode 66h 0Fh 38h 80h F9h  not defined */
                                /* opcode 66h 0Fh 38h 80h FAh  not defined */
                                /* opcode 66h 0Fh 38h 80h FBh  not defined */
                                /* opcode 66h 0Fh 38h 80h FCh  not defined */
                                /* opcode 66h 0Fh 38h 80h FDh  not defined */
                                /* opcode 66h 0Fh 38h 80h FEh  not defined */
                                /* opcode 66h 0Fh 38h 80h FFh  not defined */
                                default:
                                    goto _x86decode_illegal_opcode; /* non-mandatory fallback does not exist */
                            };
/* End of opcodes starting with 66h 0Fh 38h 80h */
                            break;
                        case 0x81: /* 66h 0Fh 38h 81h        spec:  */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            _x86decode_begin_code32_addr32_opcode_parse_660F3881:
/* Opcodes starting with 66h 0Fh 38h 81h */
                            switch (mrm.byte) {
                                case 0x00: /* 66h 0Fh 38h 81h 00h INVVPID w32(reg),sse(r/m) mod=0 reg=0 rm=0      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x01: /* 66h 0Fh 38h 81h 01h INVVPID w32(reg),sse(r/m) mod=0 reg=0 rm=1      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x02: /* 66h 0Fh 38h 81h 02h INVVPID w32(reg),sse(r/m) mod=0 reg=0 rm=2      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x03: /* 66h 0Fh 38h 81h 03h INVVPID w32(reg),sse(r/m) mod=0 reg=0 rm=3      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x04: /* 66h 0Fh 38h 81h 04h INVVPID w32(reg),sse(r/m) mod=0 reg=0 rm=4      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x05: /* 66h 0Fh 38h 81h 05h INVVPID w32(reg),sse(r/m) mod=0 reg=0 rm=5      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x06: /* 66h 0Fh 38h 81h 06h INVVPID w32(reg),sse(r/m) mod=0 reg=0 rm=6      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x07: /* 66h 0Fh 38h 81h 07h INVVPID w32(reg),sse(r/m) mod=0 reg=0 rm=7      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x08: /* 66h 0Fh 38h 81h 08h INVVPID w32(reg),sse(r/m) mod=0 reg=1 rm=0      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x09: /* 66h 0Fh 38h 81h 09h INVVPID w32(reg),sse(r/m) mod=0 reg=1 rm=1      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x0A: /* 66h 0Fh 38h 81h 0Ah INVVPID w32(reg),sse(r/m) mod=0 reg=1 rm=2      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x0B: /* 66h 0Fh 38h 81h 0Bh INVVPID w32(reg),sse(r/m) mod=0 reg=1 rm=3      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x0C: /* 66h 0Fh 38h 81h 0Ch INVVPID w32(reg),sse(r/m) mod=0 reg=1 rm=4      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x0D: /* 66h 0Fh 38h 81h 0Dh INVVPID w32(reg),sse(r/m) mod=0 reg=1 rm=5      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x0E: /* 66h 0Fh 38h 81h 0Eh INVVPID w32(reg),sse(r/m) mod=0 reg=1 rm=6      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x0F: /* 66h 0Fh 38h 81h 0Fh INVVPID w32(reg),sse(r/m) mod=0 reg=1 rm=7      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x10: /* 66h 0Fh 38h 81h 10h INVVPID w32(reg),sse(r/m) mod=0 reg=2 rm=0      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x11: /* 66h 0Fh 38h 81h 11h INVVPID w32(reg),sse(r/m) mod=0 reg=2 rm=1      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x12: /* 66h 0Fh 38h 81h 12h INVVPID w32(reg),sse(r/m) mod=0 reg=2 rm=2      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x13: /* 66h 0Fh 38h 81h 13h INVVPID w32(reg),sse(r/m) mod=0 reg=2 rm=3      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x14: /* 66h 0Fh 38h 81h 14h INVVPID w32(reg),sse(r/m) mod=0 reg=2 rm=4      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x15: /* 66h 0Fh 38h 81h 15h INVVPID w32(reg),sse(r/m) mod=0 reg=2 rm=5      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x16: /* 66h 0Fh 38h 81h 16h INVVPID w32(reg),sse(r/m) mod=0 reg=2 rm=6      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x17: /* 66h 0Fh 38h 81h 17h INVVPID w32(reg),sse(r/m) mod=0 reg=2 rm=7      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x18: /* 66h 0Fh 38h 81h 18h INVVPID w32(reg),sse(r/m) mod=0 reg=3 rm=0      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x19: /* 66h 0Fh 38h 81h 19h INVVPID w32(reg),sse(r/m) mod=0 reg=3 rm=1      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x1A: /* 66h 0Fh 38h 81h 1Ah INVVPID w32(reg),sse(r/m) mod=0 reg=3 rm=2      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x1B: /* 66h 0Fh 38h 81h 1Bh INVVPID w32(reg),sse(r/m) mod=0 reg=3 rm=3      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x1C: /* 66h 0Fh 38h 81h 1Ch INVVPID w32(reg),sse(r/m) mod=0 reg=3 rm=4      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x1D: /* 66h 0Fh 38h 81h 1Dh INVVPID w32(reg),sse(r/m) mod=0 reg=3 rm=5      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x1E: /* 66h 0Fh 38h 81h 1Eh INVVPID w32(reg),sse(r/m) mod=0 reg=3 rm=6      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x1F: /* 66h 0Fh 38h 81h 1Fh INVVPID w32(reg),sse(r/m) mod=0 reg=3 rm=7      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x20: /* 66h 0Fh 38h 81h 20h INVVPID w32(reg),sse(r/m) mod=0 reg=4 rm=0      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x21: /* 66h 0Fh 38h 81h 21h INVVPID w32(reg),sse(r/m) mod=0 reg=4 rm=1      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x22: /* 66h 0Fh 38h 81h 22h INVVPID w32(reg),sse(r/m) mod=0 reg=4 rm=2      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x23: /* 66h 0Fh 38h 81h 23h INVVPID w32(reg),sse(r/m) mod=0 reg=4 rm=3      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x24: /* 66h 0Fh 38h 81h 24h INVVPID w32(reg),sse(r/m) mod=0 reg=4 rm=4      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x25: /* 66h 0Fh 38h 81h 25h INVVPID w32(reg),sse(r/m) mod=0 reg=4 rm=5      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x26: /* 66h 0Fh 38h 81h 26h INVVPID w32(reg),sse(r/m) mod=0 reg=4 rm=6      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x27: /* 66h 0Fh 38h 81h 27h INVVPID w32(reg),sse(r/m) mod=0 reg=4 rm=7      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x28: /* 66h 0Fh 38h 81h 28h INVVPID w32(reg),sse(r/m) mod=0 reg=5 rm=0      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x29: /* 66h 0Fh 38h 81h 29h INVVPID w32(reg),sse(r/m) mod=0 reg=5 rm=1      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x2A: /* 66h 0Fh 38h 81h 2Ah INVVPID w32(reg),sse(r/m) mod=0 reg=5 rm=2      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x2B: /* 66h 0Fh 38h 81h 2Bh INVVPID w32(reg),sse(r/m) mod=0 reg=5 rm=3      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x2C: /* 66h 0Fh 38h 81h 2Ch INVVPID w32(reg),sse(r/m) mod=0 reg=5 rm=4      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x2D: /* 66h 0Fh 38h 81h 2Dh INVVPID w32(reg),sse(r/m) mod=0 reg=5 rm=5      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x2E: /* 66h 0Fh 38h 81h 2Eh INVVPID w32(reg),sse(r/m) mod=0 reg=5 rm=6      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x2F: /* 66h 0Fh 38h 81h 2Fh INVVPID w32(reg),sse(r/m) mod=0 reg=5 rm=7      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x30: /* 66h 0Fh 38h 81h 30h INVVPID w32(reg),sse(r/m) mod=0 reg=6 rm=0      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x31: /* 66h 0Fh 38h 81h 31h INVVPID w32(reg),sse(r/m) mod=0 reg=6 rm=1      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x32: /* 66h 0Fh 38h 81h 32h INVVPID w32(reg),sse(r/m) mod=0 reg=6 rm=2      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x33: /* 66h 0Fh 38h 81h 33h INVVPID w32(reg),sse(r/m) mod=0 reg=6 rm=3      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x34: /* 66h 0Fh 38h 81h 34h INVVPID w32(reg),sse(r/m) mod=0 reg=6 rm=4      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x35: /* 66h 0Fh 38h 81h 35h INVVPID w32(reg),sse(r/m) mod=0 reg=6 rm=5      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x36: /* 66h 0Fh 38h 81h 36h INVVPID w32(reg),sse(r/m) mod=0 reg=6 rm=6      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x37: /* 66h 0Fh 38h 81h 37h INVVPID w32(reg),sse(r/m) mod=0 reg=6 rm=7      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x38: /* 66h 0Fh 38h 81h 38h INVVPID w32(reg),sse(r/m) mod=0 reg=7 rm=0      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x39: /* 66h 0Fh 38h 81h 39h INVVPID w32(reg),sse(r/m) mod=0 reg=7 rm=1      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x3A: /* 66h 0Fh 38h 81h 3Ah INVVPID w32(reg),sse(r/m) mod=0 reg=7 rm=2      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x3B: /* 66h 0Fh 38h 81h 3Bh INVVPID w32(reg),sse(r/m) mod=0 reg=7 rm=3      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x3C: /* 66h 0Fh 38h 81h 3Ch INVVPID w32(reg),sse(r/m) mod=0 reg=7 rm=4      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x3D: /* 66h 0Fh 38h 81h 3Dh INVVPID w32(reg),sse(r/m) mod=0 reg=7 rm=5      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x3E: /* 66h 0Fh 38h 81h 3Eh INVVPID w32(reg),sse(r/m) mod=0 reg=7 rm=6      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x3F: /* 66h 0Fh 38h 81h 3Fh INVVPID w32(reg),sse(r/m) mod=0 reg=7 rm=7      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x40: /* 66h 0Fh 38h 81h 40h INVVPID w32(reg),sse(r/m) mod=1 reg=0 rm=0      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x41: /* 66h 0Fh 38h 81h 41h INVVPID w32(reg),sse(r/m) mod=1 reg=0 rm=1      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x42: /* 66h 0Fh 38h 81h 42h INVVPID w32(reg),sse(r/m) mod=1 reg=0 rm=2      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x43: /* 66h 0Fh 38h 81h 43h INVVPID w32(reg),sse(r/m) mod=1 reg=0 rm=3      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x44: /* 66h 0Fh 38h 81h 44h INVVPID w32(reg),sse(r/m) mod=1 reg=0 rm=4      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x45: /* 66h 0Fh 38h 81h 45h INVVPID w32(reg),sse(r/m) mod=1 reg=0 rm=5      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x46: /* 66h 0Fh 38h 81h 46h INVVPID w32(reg),sse(r/m) mod=1 reg=0 rm=6      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x47: /* 66h 0Fh 38h 81h 47h INVVPID w32(reg),sse(r/m) mod=1 reg=0 rm=7      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x48: /* 66h 0Fh 38h 81h 48h INVVPID w32(reg),sse(r/m) mod=1 reg=1 rm=0      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x49: /* 66h 0Fh 38h 81h 49h INVVPID w32(reg),sse(r/m) mod=1 reg=1 rm=1      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x4A: /* 66h 0Fh 38h 81h 4Ah INVVPID w32(reg),sse(r/m) mod=1 reg=1 rm=2      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x4B: /* 66h 0Fh 38h 81h 4Bh INVVPID w32(reg),sse(r/m) mod=1 reg=1 rm=3      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x4C: /* 66h 0Fh 38h 81h 4Ch INVVPID w32(reg),sse(r/m) mod=1 reg=1 rm=4      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x4D: /* 66h 0Fh 38h 81h 4Dh INVVPID w32(reg),sse(r/m) mod=1 reg=1 rm=5      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x4E: /* 66h 0Fh 38h 81h 4Eh INVVPID w32(reg),sse(r/m) mod=1 reg=1 rm=6      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x4F: /* 66h 0Fh 38h 81h 4Fh INVVPID w32(reg),sse(r/m) mod=1 reg=1 rm=7      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x50: /* 66h 0Fh 38h 81h 50h INVVPID w32(reg),sse(r/m) mod=1 reg=2 rm=0      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x51: /* 66h 0Fh 38h 81h 51h INVVPID w32(reg),sse(r/m) mod=1 reg=2 rm=1      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x52: /* 66h 0Fh 38h 81h 52h INVVPID w32(reg),sse(r/m) mod=1 reg=2 rm=2      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x53: /* 66h 0Fh 38h 81h 53h INVVPID w32(reg),sse(r/m) mod=1 reg=2 rm=3      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x54: /* 66h 0Fh 38h 81h 54h INVVPID w32(reg),sse(r/m) mod=1 reg=2 rm=4      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x55: /* 66h 0Fh 38h 81h 55h INVVPID w32(reg),sse(r/m) mod=1 reg=2 rm=5      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x56: /* 66h 0Fh 38h 81h 56h INVVPID w32(reg),sse(r/m) mod=1 reg=2 rm=6      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x57: /* 66h 0Fh 38h 81h 57h INVVPID w32(reg),sse(r/m) mod=1 reg=2 rm=7      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x58: /* 66h 0Fh 38h 81h 58h INVVPID w32(reg),sse(r/m) mod=1 reg=3 rm=0      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x59: /* 66h 0Fh 38h 81h 59h INVVPID w32(reg),sse(r/m) mod=1 reg=3 rm=1      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x5A: /* 66h 0Fh 38h 81h 5Ah INVVPID w32(reg),sse(r/m) mod=1 reg=3 rm=2      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x5B: /* 66h 0Fh 38h 81h 5Bh INVVPID w32(reg),sse(r/m) mod=1 reg=3 rm=3      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x5C: /* 66h 0Fh 38h 81h 5Ch INVVPID w32(reg),sse(r/m) mod=1 reg=3 rm=4      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x5D: /* 66h 0Fh 38h 81h 5Dh INVVPID w32(reg),sse(r/m) mod=1 reg=3 rm=5      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x5E: /* 66h 0Fh 38h 81h 5Eh INVVPID w32(reg),sse(r/m) mod=1 reg=3 rm=6      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x5F: /* 66h 0Fh 38h 81h 5Fh INVVPID w32(reg),sse(r/m) mod=1 reg=3 rm=7      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x60: /* 66h 0Fh 38h 81h 60h INVVPID w32(reg),sse(r/m) mod=1 reg=4 rm=0      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x61: /* 66h 0Fh 38h 81h 61h INVVPID w32(reg),sse(r/m) mod=1 reg=4 rm=1      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x62: /* 66h 0Fh 38h 81h 62h INVVPID w32(reg),sse(r/m) mod=1 reg=4 rm=2      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x63: /* 66h 0Fh 38h 81h 63h INVVPID w32(reg),sse(r/m) mod=1 reg=4 rm=3      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x64: /* 66h 0Fh 38h 81h 64h INVVPID w32(reg),sse(r/m) mod=1 reg=4 rm=4      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x65: /* 66h 0Fh 38h 81h 65h INVVPID w32(reg),sse(r/m) mod=1 reg=4 rm=5      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x66: /* 66h 0Fh 38h 81h 66h INVVPID w32(reg),sse(r/m) mod=1 reg=4 rm=6      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x67: /* 66h 0Fh 38h 81h 67h INVVPID w32(reg),sse(r/m) mod=1 reg=4 rm=7      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x68: /* 66h 0Fh 38h 81h 68h INVVPID w32(reg),sse(r/m) mod=1 reg=5 rm=0      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x69: /* 66h 0Fh 38h 81h 69h INVVPID w32(reg),sse(r/m) mod=1 reg=5 rm=1      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x6A: /* 66h 0Fh 38h 81h 6Ah INVVPID w32(reg),sse(r/m) mod=1 reg=5 rm=2      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x6B: /* 66h 0Fh 38h 81h 6Bh INVVPID w32(reg),sse(r/m) mod=1 reg=5 rm=3      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x6C: /* 66h 0Fh 38h 81h 6Ch INVVPID w32(reg),sse(r/m) mod=1 reg=5 rm=4      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x6D: /* 66h 0Fh 38h 81h 6Dh INVVPID w32(reg),sse(r/m) mod=1 reg=5 rm=5      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x6E: /* 66h 0Fh 38h 81h 6Eh INVVPID w32(reg),sse(r/m) mod=1 reg=5 rm=6      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x6F: /* 66h 0Fh 38h 81h 6Fh INVVPID w32(reg),sse(r/m) mod=1 reg=5 rm=7      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x70: /* 66h 0Fh 38h 81h 70h INVVPID w32(reg),sse(r/m) mod=1 reg=6 rm=0      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x71: /* 66h 0Fh 38h 81h 71h INVVPID w32(reg),sse(r/m) mod=1 reg=6 rm=1      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x72: /* 66h 0Fh 38h 81h 72h INVVPID w32(reg),sse(r/m) mod=1 reg=6 rm=2      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x73: /* 66h 0Fh 38h 81h 73h INVVPID w32(reg),sse(r/m) mod=1 reg=6 rm=3      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x74: /* 66h 0Fh 38h 81h 74h INVVPID w32(reg),sse(r/m) mod=1 reg=6 rm=4      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x75: /* 66h 0Fh 38h 81h 75h INVVPID w32(reg),sse(r/m) mod=1 reg=6 rm=5      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x76: /* 66h 0Fh 38h 81h 76h INVVPID w32(reg),sse(r/m) mod=1 reg=6 rm=6      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x77: /* 66h 0Fh 38h 81h 77h INVVPID w32(reg),sse(r/m) mod=1 reg=6 rm=7      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x78: /* 66h 0Fh 38h 81h 78h INVVPID w32(reg),sse(r/m) mod=1 reg=7 rm=0      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x79: /* 66h 0Fh 38h 81h 79h INVVPID w32(reg),sse(r/m) mod=1 reg=7 rm=1      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x7A: /* 66h 0Fh 38h 81h 7Ah INVVPID w32(reg),sse(r/m) mod=1 reg=7 rm=2      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x7B: /* 66h 0Fh 38h 81h 7Bh INVVPID w32(reg),sse(r/m) mod=1 reg=7 rm=3      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x7C: /* 66h 0Fh 38h 81h 7Ch INVVPID w32(reg),sse(r/m) mod=1 reg=7 rm=4      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x7D: /* 66h 0Fh 38h 81h 7Dh INVVPID w32(reg),sse(r/m) mod=1 reg=7 rm=5      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x7E: /* 66h 0Fh 38h 81h 7Eh INVVPID w32(reg),sse(r/m) mod=1 reg=7 rm=6      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x7F: /* 66h 0Fh 38h 81h 7Fh INVVPID w32(reg),sse(r/m) mod=1 reg=7 rm=7      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x80: /* 66h 0Fh 38h 81h 80h INVVPID w32(reg),sse(r/m) mod=2 reg=0 rm=0      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x81: /* 66h 0Fh 38h 81h 81h INVVPID w32(reg),sse(r/m) mod=2 reg=0 rm=1      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x82: /* 66h 0Fh 38h 81h 82h INVVPID w32(reg),sse(r/m) mod=2 reg=0 rm=2      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x83: /* 66h 0Fh 38h 81h 83h INVVPID w32(reg),sse(r/m) mod=2 reg=0 rm=3      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x84: /* 66h 0Fh 38h 81h 84h INVVPID w32(reg),sse(r/m) mod=2 reg=0 rm=4      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x85: /* 66h 0Fh 38h 81h 85h INVVPID w32(reg),sse(r/m) mod=2 reg=0 rm=5      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x86: /* 66h 0Fh 38h 81h 86h INVVPID w32(reg),sse(r/m) mod=2 reg=0 rm=6      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x87: /* 66h 0Fh 38h 81h 87h INVVPID w32(reg),sse(r/m) mod=2 reg=0 rm=7      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x88: /* 66h 0Fh 38h 81h 88h INVVPID w32(reg),sse(r/m) mod=2 reg=1 rm=0      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x89: /* 66h 0Fh 38h 81h 89h INVVPID w32(reg),sse(r/m) mod=2 reg=1 rm=1      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x8A: /* 66h 0Fh 38h 81h 8Ah INVVPID w32(reg),sse(r/m) mod=2 reg=1 rm=2      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x8B: /* 66h 0Fh 38h 81h 8Bh INVVPID w32(reg),sse(r/m) mod=2 reg=1 rm=3      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x8C: /* 66h 0Fh 38h 81h 8Ch INVVPID w32(reg),sse(r/m) mod=2 reg=1 rm=4      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x8D: /* 66h 0Fh 38h 81h 8Dh INVVPID w32(reg),sse(r/m) mod=2 reg=1 rm=5      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x8E: /* 66h 0Fh 38h 81h 8Eh INVVPID w32(reg),sse(r/m) mod=2 reg=1 rm=6      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x8F: /* 66h 0Fh 38h 81h 8Fh INVVPID w32(reg),sse(r/m) mod=2 reg=1 rm=7      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x90: /* 66h 0Fh 38h 81h 90h INVVPID w32(reg),sse(r/m) mod=2 reg=2 rm=0      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x91: /* 66h 0Fh 38h 81h 91h INVVPID w32(reg),sse(r/m) mod=2 reg=2 rm=1      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x92: /* 66h 0Fh 38h 81h 92h INVVPID w32(reg),sse(r/m) mod=2 reg=2 rm=2      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x93: /* 66h 0Fh 38h 81h 93h INVVPID w32(reg),sse(r/m) mod=2 reg=2 rm=3      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x94: /* 66h 0Fh 38h 81h 94h INVVPID w32(reg),sse(r/m) mod=2 reg=2 rm=4      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x95: /* 66h 0Fh 38h 81h 95h INVVPID w32(reg),sse(r/m) mod=2 reg=2 rm=5      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x96: /* 66h 0Fh 38h 81h 96h INVVPID w32(reg),sse(r/m) mod=2 reg=2 rm=6      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x97: /* 66h 0Fh 38h 81h 97h INVVPID w32(reg),sse(r/m) mod=2 reg=2 rm=7      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x98: /* 66h 0Fh 38h 81h 98h INVVPID w32(reg),sse(r/m) mod=2 reg=3 rm=0      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x99: /* 66h 0Fh 38h 81h 99h INVVPID w32(reg),sse(r/m) mod=2 reg=3 rm=1      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x9A: /* 66h 0Fh 38h 81h 9Ah INVVPID w32(reg),sse(r/m) mod=2 reg=3 rm=2      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x9B: /* 66h 0Fh 38h 81h 9Bh INVVPID w32(reg),sse(r/m) mod=2 reg=3 rm=3      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x9C: /* 66h 0Fh 38h 81h 9Ch INVVPID w32(reg),sse(r/m) mod=2 reg=3 rm=4      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x9D: /* 66h 0Fh 38h 81h 9Dh INVVPID w32(reg),sse(r/m) mod=2 reg=3 rm=5      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x9E: /* 66h 0Fh 38h 81h 9Eh INVVPID w32(reg),sse(r/m) mod=2 reg=3 rm=6      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0x9F: /* 66h 0Fh 38h 81h 9Fh INVVPID w32(reg),sse(r/m) mod=2 reg=3 rm=7      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xA0: /* 66h 0Fh 38h 81h A0h INVVPID w32(reg),sse(r/m) mod=2 reg=4 rm=0      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xA1: /* 66h 0Fh 38h 81h A1h INVVPID w32(reg),sse(r/m) mod=2 reg=4 rm=1      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xA2: /* 66h 0Fh 38h 81h A2h INVVPID w32(reg),sse(r/m) mod=2 reg=4 rm=2      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xA3: /* 66h 0Fh 38h 81h A3h INVVPID w32(reg),sse(r/m) mod=2 reg=4 rm=3      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xA4: /* 66h 0Fh 38h 81h A4h INVVPID w32(reg),sse(r/m) mod=2 reg=4 rm=4      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xA5: /* 66h 0Fh 38h 81h A5h INVVPID w32(reg),sse(r/m) mod=2 reg=4 rm=5      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xA6: /* 66h 0Fh 38h 81h A6h INVVPID w32(reg),sse(r/m) mod=2 reg=4 rm=6      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xA7: /* 66h 0Fh 38h 81h A7h INVVPID w32(reg),sse(r/m) mod=2 reg=4 rm=7      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xA8: /* 66h 0Fh 38h 81h A8h INVVPID w32(reg),sse(r/m) mod=2 reg=5 rm=0      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xA9: /* 66h 0Fh 38h 81h A9h INVVPID w32(reg),sse(r/m) mod=2 reg=5 rm=1      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xAA: /* 66h 0Fh 38h 81h AAh INVVPID w32(reg),sse(r/m) mod=2 reg=5 rm=2      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xAB: /* 66h 0Fh 38h 81h ABh INVVPID w32(reg),sse(r/m) mod=2 reg=5 rm=3      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xAC: /* 66h 0Fh 38h 81h ACh INVVPID w32(reg),sse(r/m) mod=2 reg=5 rm=4      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xAD: /* 66h 0Fh 38h 81h ADh INVVPID w32(reg),sse(r/m) mod=2 reg=5 rm=5      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xAE: /* 66h 0Fh 38h 81h AEh INVVPID w32(reg),sse(r/m) mod=2 reg=5 rm=6      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xAF: /* 66h 0Fh 38h 81h AFh INVVPID w32(reg),sse(r/m) mod=2 reg=5 rm=7      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xB0: /* 66h 0Fh 38h 81h B0h INVVPID w32(reg),sse(r/m) mod=2 reg=6 rm=0      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xB1: /* 66h 0Fh 38h 81h B1h INVVPID w32(reg),sse(r/m) mod=2 reg=6 rm=1      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xB2: /* 66h 0Fh 38h 81h B2h INVVPID w32(reg),sse(r/m) mod=2 reg=6 rm=2      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xB3: /* 66h 0Fh 38h 81h B3h INVVPID w32(reg),sse(r/m) mod=2 reg=6 rm=3      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xB4: /* 66h 0Fh 38h 81h B4h INVVPID w32(reg),sse(r/m) mod=2 reg=6 rm=4      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xB5: /* 66h 0Fh 38h 81h B5h INVVPID w32(reg),sse(r/m) mod=2 reg=6 rm=5      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xB6: /* 66h 0Fh 38h 81h B6h INVVPID w32(reg),sse(r/m) mod=2 reg=6 rm=6      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xB7: /* 66h 0Fh 38h 81h B7h INVVPID w32(reg),sse(r/m) mod=2 reg=6 rm=7      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xB8: /* 66h 0Fh 38h 81h B8h INVVPID w32(reg),sse(r/m) mod=2 reg=7 rm=0      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xB9: /* 66h 0Fh 38h 81h B9h INVVPID w32(reg),sse(r/m) mod=2 reg=7 rm=1      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xBA: /* 66h 0Fh 38h 81h BAh INVVPID w32(reg),sse(r/m) mod=2 reg=7 rm=2      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xBB: /* 66h 0Fh 38h 81h BBh INVVPID w32(reg),sse(r/m) mod=2 reg=7 rm=3      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xBC: /* 66h 0Fh 38h 81h BCh INVVPID w32(reg),sse(r/m) mod=2 reg=7 rm=4      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xBD: /* 66h 0Fh 38h 81h BDh INVVPID w32(reg),sse(r/m) mod=2 reg=7 rm=5      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xBE: /* 66h 0Fh 38h 81h BEh INVVPID w32(reg),sse(r/m) mod=2 reg=7 rm=6      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                case 0xBF: /* 66h 0Fh 38h 81h BFh INVVPID w32(reg),sse(r/m) mod=2 reg=7 rm=7      spec: 0x0F 0x38 0x81 mod/reg/rm mod!=3 mprefix(0x66) */
                                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"INVVPID %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                                    break;
                                /* opcode 66h 0Fh 38h 81h C0h  not defined */
                                /* opcode 66h 0Fh 38h 81h C1h  not defined */
                                /* opcode 66h 0Fh 38h 81h C2h  not defined */
                                /* opcode 66h 0Fh 38h 81h C3h  not defined */
                                /* opcode 66h 0Fh 38h 81h C4h  not defined */
                                /* opcode 66h 0Fh 38h 81h C5h  not defined */
                                /* opcode 66h 0Fh 38h 81h C6h  not defined */
                                /* opcode 66h 0Fh 38h 81h C7h  not defined */
                                /* opcode 66h 0Fh 38h 81h C8h  not defined */
                                /* opcode 66h 0Fh 38h 81h C9h  not defined */
                                /* opcode 66h 0Fh 38h 81h CAh  not defined */
                                /* opcode 66h 0Fh 38h 81h CBh  not defined */
                                /* opcode 66h 0Fh 38h 81h CCh  not defined */
                                /* opcode 66h 0Fh 38h 81h CDh  not defined */
                                /* opcode 66h 0Fh 38h 81h CEh  not defined */
                                /* opcode 66h 0Fh 38h 81h CFh  not defined */
                                /* opcode 66h 0Fh 38h 81h D0h  not defined */
                                /* opcode 66h 0Fh 38h 81h D1h  not defined */
                                /* opcode 66h 0Fh 38h 81h D2h  not defined */
                                /* opcode 66h 0Fh 38h 81h D3h  not defined */
                                /* opcode 66h 0Fh 38h 81h D4h  not defined */
                                /* opcode 66h 0Fh 38h 81h D5h  not defined */
                                /* opcode 66h 0Fh 38h 81h D6h  not defined */
                                /* opcode 66h 0Fh 38h 81h D7h  not defined */
                                /* opcode 66h 0Fh 38h 81h D8h  not defined */
                                /* opcode 66h 0Fh 38h 81h D9h  not defined */
                                /* opcode 66h 0Fh 38h 81h DAh  not defined */
                                /* opcode 66h 0Fh 38h 81h DBh  not defined */
                                /* opcode 66h 0Fh 38h 81h DCh  not defined */
                                /* opcode 66h 0Fh 38h 81h DDh  not defined */
                                /* opcode 66h 0Fh 38h 81h DEh  not defined */
                                /* opcode 66h 0Fh 38h 81h DFh  not defined */
                                /* opcode 66h 0Fh 38h 81h E0h  not defined */
                                /* opcode 66h 0Fh 38h 81h E1h  not defined */
                                /* opcode 66h 0Fh 38h 81h E2h  not defined */
                                /* opcode 66h 0Fh 38h 81h E3h  not defined */
                                /* opcode 66h 0Fh 38h 81h E4h  not defined */
                                /* opcode 66h 0Fh 38h 81h E5h  not defined */
                                /* opcode 66h 0Fh 38h 81h E6h  not defined */
                                /* opcode 66h 0Fh 38h 81h E7h  not defined */
                                /* opcode 66h 0Fh 38h 81h E8h  not defined */
                                /* opcode 66h 0Fh 38h 81h E9h  not defined */
                                /* opcode 66h 0Fh 38h 81h EAh  not defined */
                                /* opcode 66h 0Fh 38h 81h EBh  not defined */
                                /* opcode 66h 0Fh 38h 81h ECh  not defined */
                                /* opcode 66h 0Fh 38h 81h EDh  not defined */
                                /* opcode 66h 0Fh 38h 81h EEh  not defined */
                                /* opcode 66h 0Fh 38h 81h EFh  not defined */
                                /* opcode 66h 0Fh 38h 81h F0h  not defined */
                                /* opcode 66h 0Fh 38h 81h F1h  not defined */
                                /* opcode 66h 0Fh 38h 81h F2h  not defined */
                                /* opcode 66h 0Fh 38h 81h F3h  not defined */
                                /* opcode 66h 0Fh 38h 81h F4h  not defined */
                                /* opcode 66h 0Fh 38h 81h F5h  not defined */
                                /* opcode 66h 0Fh 38h 81h F6h  not defined */
                                /* opcode 66h 0Fh 38h 81h F7h  not defined */
                                /* opcode 66h 0Fh 38h 81h F8h  not defined */
                                /* opcode 66h 0Fh 38h 81h F9h  not defined */
                                /* opcode 66h 0Fh 38h 81h FAh  not defined */
                                /* opcode 66h 0Fh 38h 81h FBh  not defined */
                                /* opcode 66h 0Fh 38h 81h FCh  not defined */
                                /* opcode 66h 0Fh 38h 81h FDh  not defined */
                                /* opcode 66h 0Fh 38h 81h FEh  not defined */
                                /* opcode 66h 0Fh 38h 81h FFh  not defined */
                                default:
                                    goto _x86decode_illegal_opcode; /* non-mandatory fallback does not exist */
                            };
/* End of opcodes starting with 66h 0Fh 38h 81h */
                            break;
                        /* opcode 66h 0Fh 38h 82h  not defined */
                        /* opcode 66h 0Fh 38h 83h  not defined */
                        /* opcode 66h 0Fh 38h 84h  not defined */
                        /* opcode 66h 0Fh 38h 85h  not defined */
                        /* opcode 66h 0Fh 38h 86h  not defined */
                        /* opcode 66h 0Fh 38h 87h  not defined */
                        /* opcode 66h 0Fh 38h 88h  not defined */
                        /* opcode 66h 0Fh 38h 89h  not defined */
                        /* opcode 66h 0Fh 38h 8Ah  not defined */
                        /* opcode 66h 0Fh 38h 8Bh  not defined */
                        /* opcode 66h 0Fh 38h 8Ch  not defined */
                        /* opcode 66h 0Fh 38h 8Dh  not defined */
                        /* opcode 66h 0Fh 38h 8Eh  not defined */
                        /* opcode 66h 0Fh 38h 8Fh  not defined */
                        /* opcode 66h 0Fh 38h 90h  not defined */
                        /* opcode 66h 0Fh 38h 91h  not defined */
                        /* opcode 66h 0Fh 38h 92h  not defined */
                        /* opcode 66h 0Fh 38h 93h  not defined */
                        /* opcode 66h 0Fh 38h 94h  not defined */
                        /* opcode 66h 0Fh 38h 95h  not defined */
                        /* opcode 66h 0Fh 38h 96h  not defined */
                        /* opcode 66h 0Fh 38h 97h  not defined */
                        /* opcode 66h 0Fh 38h 98h  not defined */
                        /* opcode 66h 0Fh 38h 99h  not defined */
                        /* opcode 66h 0Fh 38h 9Ah  not defined */
                        /* opcode 66h 0Fh 38h 9Bh  not defined */
                        /* opcode 66h 0Fh 38h 9Ch  not defined */
                        /* opcode 66h 0Fh 38h 9Dh  not defined */
                        /* opcode 66h 0Fh 38h 9Eh  not defined */
                        /* opcode 66h 0Fh 38h 9Fh  not defined */
                        /* opcode 66h 0Fh 38h A0h  not defined */
                        /* opcode 66h 0Fh 38h A1h  not defined */
                        /* opcode 66h 0Fh 38h A2h  not defined */
                        /* opcode 66h 0Fh 38h A3h  not defined */
                        /* opcode 66h 0Fh 38h A4h  not defined */
                        /* opcode 66h 0Fh 38h A5h  not defined */
                        /* opcode 66h 0Fh 38h A6h  not defined */
                        /* opcode 66h 0Fh 38h A7h  not defined */
                        /* opcode 66h 0Fh 38h A8h  not defined */
                        /* opcode 66h 0Fh 38h A9h  not defined */
                        /* opcode 66h 0Fh 38h AAh  not defined */
                        /* opcode 66h 0Fh 38h ABh  not defined */
                        /* opcode 66h 0Fh 38h ACh  not defined */
                        /* opcode 66h 0Fh 38h ADh  not defined */
                        /* opcode 66h 0Fh 38h AEh  not defined */
                        /* opcode 66h 0Fh 38h AFh  not defined */
                        /* opcode 66h 0Fh 38h B0h  not defined */
                        /* opcode 66h 0Fh 38h B1h  not defined */
                        /* opcode 66h 0Fh 38h B2h  not defined */
                        /* opcode 66h 0Fh 38h B3h  not defined */
                        /* opcode 66h 0Fh 38h B4h  not defined */
                        /* opcode 66h 0Fh 38h B5h  not defined */
                        /* opcode 66h 0Fh 38h B6h  not defined */
                        /* opcode 66h 0Fh 38h B7h  not defined */
                        /* opcode 66h 0Fh 38h B8h  not defined */
                        /* opcode 66h 0Fh 38h B9h  not defined */
                        /* opcode 66h 0Fh 38h BAh  not defined */
                        /* opcode 66h 0Fh 38h BBh  not defined */
                        /* opcode 66h 0Fh 38h BCh  not defined */
                        /* opcode 66h 0Fh 38h BDh  not defined */
                        /* opcode 66h 0Fh 38h BEh  not defined */
                        /* opcode 66h 0Fh 38h BFh  not defined */
                        /* opcode 66h 0Fh 38h C0h  not defined */
                        /* opcode 66h 0Fh 38h C1h  not defined */
                        /* opcode 66h 0Fh 38h C2h  not defined */
                        /* opcode 66h 0Fh 38h C3h  not defined */
                        /* opcode 66h 0Fh 38h C4h  not defined */
                        /* opcode 66h 0Fh 38h C5h  not defined */
                        /* opcode 66h 0Fh 38h C6h  not defined */
                        /* opcode 66h 0Fh 38h C7h  not defined */
                        /* opcode 66h 0Fh 38h C8h  not defined */
                        /* opcode 66h 0Fh 38h C9h  not defined */
                        /* opcode 66h 0Fh 38h CAh  not defined */
                        /* opcode 66h 0Fh 38h CBh  not defined */
                        /* opcode 66h 0Fh 38h CCh  not defined */
                        /* opcode 66h 0Fh 38h CDh  not defined */
                        /* opcode 66h 0Fh 38h CEh  not defined */
                        /* opcode 66h 0Fh 38h CFh  not defined */
                        /* opcode 66h 0Fh 38h D0h  not defined */
                        /* opcode 66h 0Fh 38h D1h  not defined */
                        /* opcode 66h 0Fh 38h D2h  not defined */
                        /* opcode 66h 0Fh 38h D3h  not defined */
                        /* opcode 66h 0Fh 38h D4h  not defined */
                        /* opcode 66h 0Fh 38h D5h  not defined */
                        /* opcode 66h 0Fh 38h D6h  not defined */
                        /* opcode 66h 0Fh 38h D7h  not defined */
                        /* opcode 66h 0Fh 38h D8h  not defined */
                        /* opcode 66h 0Fh 38h D9h  not defined */
                        /* opcode 66h 0Fh 38h DAh  not defined */
                        /* opcode 66h 0Fh 38h DBh  not defined */
                        /* opcode 66h 0Fh 38h DCh  not defined */
                        /* opcode 66h 0Fh 38h DDh  not defined */
                        /* opcode 66h 0Fh 38h DEh  not defined */
                        /* opcode 66h 0Fh 38h DFh  not defined */
                        /* opcode 66h 0Fh 38h E0h  not defined */
                        /* opcode 66h 0Fh 38h E1h  not defined */
                        /* opcode 66h 0Fh 38h E2h  not defined */
                        /* opcode 66h 0Fh 38h E3h  not defined */
                        /* opcode 66h 0Fh 38h E4h  not defined */
                        /* opcode 66h 0Fh 38h E5h  not defined */
                        /* opcode 66h 0Fh 38h E6h  not defined */
                        /* opcode 66h 0Fh 38h E7h  not defined */
                        /* opcode 66h 0Fh 38h E8h  not defined */
                        /* opcode 66h 0Fh 38h E9h  not defined */
                        /* opcode 66h 0Fh 38h EAh  not defined */
                        /* opcode 66h 0Fh 38h EBh  not defined */
                        /* opcode 66h 0Fh 38h ECh  not defined */
                        /* opcode 66h 0Fh 38h EDh  not defined */
                        /* opcode 66h 0Fh 38h EEh  not defined */
                        /* opcode 66h 0Fh 38h EFh  not defined */
                        /* opcode 66h 0Fh 38h F0h  not defined */
                        /* opcode 66h 0Fh 38h F1h  not defined */
                        /* opcode 66h 0Fh 38h F2h  not defined */
                        /* opcode 66h 0Fh 38h F3h  not defined */
                        /* opcode 66h 0Fh 38h F4h  not defined */
                        /* opcode 66h 0Fh 38h F5h  not defined */
                        /* opcode 66h 0Fh 38h F6h  not defined */
                        /* opcode 66h 0Fh 38h F7h  not defined */
                        /* opcode 66h 0Fh 38h F8h  not defined */
                        /* opcode 66h 0Fh 38h F9h  not defined */
                        /* opcode 66h 0Fh 38h FAh  not defined */
                        /* opcode 66h 0Fh 38h FBh  not defined */
                        /* opcode 66h 0Fh 38h FCh  not defined */
                        /* opcode 66h 0Fh 38h FDh  not defined */
                        /* opcode 66h 0Fh 38h FEh  not defined */
                        /* opcode 66h 0Fh 38h FFh  not defined */
                        default:
                            goto _x86decode_begin_code32_addr32_opcode_parse_0F38_generic; /* Fall through to normal 0x0F 0x38 opcode handling */
                    };
/* End of opcodes starting with 66h 0Fh 38h */
                    break;
                /* opcode 66h 0Fh 39h  not defined */
                case 0x3A: /* 66h 0Fh 3Ah        spec:  */
/* Opcodes starting with 66h 0Fh 3Ah */
                    op=IPFB();
                    _x86decode_begin_code32_addr32_opcode_parse_660F3A:
                    switch (op) {
                        /* opcode 66h 0Fh 3Ah 00h  not defined */
                        /* opcode 66h 0Fh 3Ah 01h  not defined */
                        /* opcode 66h 0Fh 3Ah 02h  not defined */
                        /* opcode 66h 0Fh 3Ah 03h  not defined */
                        /* opcode 66h 0Fh 3Ah 04h  not defined */
                        /* opcode 66h 0Fh 3Ah 05h  not defined */
                        /* opcode 66h 0Fh 3Ah 06h  not defined */
                        /* opcode 66h 0Fh 3Ah 07h  not defined */
                        case 0x08: /* 66h 0Fh 3Ah 08h ROUNDPS sse(reg),sse(r/m),i      spec: 0x0F 0x3A 0x08 mod/reg/rm ib mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            imm=IPFB();
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ROUNDPS XMM%u,%s,0x%02lX",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""),(unsigned long)((uint32_t)imm));
                            break;
                        case 0x09: /* 66h 0Fh 3Ah 09h ROUNDPD sse(reg),sse(r/m),i      spec: 0x0F 0x3A 0x09 mod/reg/rm ib mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            imm=IPFB();
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ROUNDPD XMM%u,%s,0x%02lX",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""),(unsigned long)((uint32_t)imm));
                            break;
                        case 0x0A: /* 66h 0Fh 3Ah 0Ah ROUNDSS sse(reg),sse(r/m),i      spec: 0x0F 0x3A 0x0A mod/reg/rm ib mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            imm=IPFB();
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ROUNDSS XMM%u,%s,0x%02lX",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""),(unsigned long)((uint32_t)imm));
                            break;
                        case 0x0B: /* 66h 0Fh 3Ah 0Bh ROUNDSD sse(reg),sse(r/m),i      spec: 0x0F 0x3A 0x0B mod/reg/rm ib mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            imm=IPFB();
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ROUNDSD XMM%u,%s,0x%02lX",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""),(unsigned long)((uint32_t)imm));
                            break;
                        case 0x0C: /* 66h 0Fh 3Ah 0Ch BLENDPS sse(reg),sse(r/m),i      spec: 0x0F 0x3A 0x0C mod/reg/rm ib mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            imm=IPFB();
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"BLENDPS XMM%u,%s,0x%02lX",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""),(unsigned long)((uint32_t)imm));
                            break;
                        case 0x0D: /* 66h 0Fh 3Ah 0Dh BLENDPD sse(reg),sse(r/m),i      spec: 0x0F 0x3A 0x0D mod/reg/rm ib mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            imm=IPFB();
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"BLENDPD XMM%u,%s,0x%02lX",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""),(unsigned long)((uint32_t)imm));
                            break;
                        case 0x0E: /* 66h 0Fh 3Ah 0Eh PBLENDW sse(reg),sse(r/m),i      spec: 0x0F 0x3A 0x0E mod/reg/rm ib mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            imm=IPFB();
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PBLENDW XMM%u,%s,0x%02lX",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""),(unsigned long)((uint32_t)imm));
                            break;
                        case 0x0F: /* 66h 0Fh 3Ah 0Fh PALIGNR sse(reg),sse(r/m),i      spec: 0x0F 0x3A 0x0F mod/reg/rm mprefix(0x66) ib */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            imm=IPFB();
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PALIGNR XMM%u,%s,0x%02lX",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""),(unsigned long)((uint32_t)imm));
                            break;
                        /* opcode 66h 0Fh 3Ah 10h  not defined */
                        /* opcode 66h 0Fh 3Ah 11h  not defined */
                        /* opcode 66h 0Fh 3Ah 12h  not defined */
                        /* opcode 66h 0Fh 3Ah 13h  not defined */
                        case 0x14: /* 66h 0Fh 3Ah 14h PEXTRB b(r/m),sse(reg),i      spec: 0x0F 0x3A 0x14 mod/reg/rm ib mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            imm=IPFB();
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PEXTRB %s,XMM%u,0x%02lX",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),mrm.reg(),(unsigned long)((uint32_t)imm));
                            break;
                        case 0x15: /* 66h 0Fh 3Ah 15h PEXTRW w16(r/m),sse(reg),i      spec: 0x0F 0x3A 0x15 mod/reg/rm ib mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            imm=IPFB();
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PEXTRW %s,XMM%u,0x%02lX",IPDecPrint32(mrm,sib,disp,2,RC_REG,"w16"),mrm.reg(),(unsigned long)((uint32_t)imm));
                            break;
                        case 0x16: /* 66h 0Fh 3Ah 16h PEXTRD w32(r/m),sse(reg),i      spec: 0x0F 0x3A 0x16 mod/reg/rm ib mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            imm=IPFB();
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PEXTRD %s,XMM%u,0x%02lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"w32"),mrm.reg(),(unsigned long)((uint32_t)imm));
                            break;
                        case 0x17: /* 66h 0Fh 3Ah 17h EXTRACTPS w32(r/m),sse(reg),i      spec: 0x0F 0x3A 0x17 mod/reg/rm ib mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            imm=IPFB();
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"EXTRACTPS %s,XMM%u,0x%02lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"w32"),mrm.reg(),(unsigned long)((uint32_t)imm));
                            break;
                        /* opcode 66h 0Fh 3Ah 18h  not defined */
                        /* opcode 66h 0Fh 3Ah 19h  not defined */
                        /* opcode 66h 0Fh 3Ah 1Ah  not defined */
                        /* opcode 66h 0Fh 3Ah 1Bh  not defined */
                        /* opcode 66h 0Fh 3Ah 1Ch  not defined */
                        /* opcode 66h 0Fh 3Ah 1Dh  not defined */
                        /* opcode 66h 0Fh 3Ah 1Eh  not defined */
                        /* opcode 66h 0Fh 3Ah 1Fh  not defined */
                        case 0x20: /* 66h 0Fh 3Ah 20h PINSRB sse(reg),b(r/m),i      spec: 0x0F 0x3A 0x20 mod/reg/rm ib mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            imm=IPFB();
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PINSRB XMM%u,%s,0x%02lX",mrm.reg(),IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),(unsigned long)((uint32_t)imm));
                            break;
                        case 0x21: /* 66h 0Fh 3Ah 21h PINSRW sse(reg),w16(r/m),i      spec: 0x0F 0x3A 0x21 mod/reg/rm ib mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            imm=IPFB();
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PINSRW XMM%u,%s,0x%02lX",mrm.reg(),IPDecPrint32(mrm,sib,disp,2,RC_REG,"w16"),(unsigned long)((uint32_t)imm));
                            break;
                        case 0x22: /* 66h 0Fh 3Ah 22h PINSRD sse(reg),w32(r/m),i      spec: 0x0F 0x3A 0x22 mod/reg/rm ib mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            imm=IPFB();
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PINSRD XMM%u,%s,0x%02lX",mrm.reg(),IPDecPrint32(mrm,sib,disp,4,RC_REG,"w32"),(unsigned long)((uint32_t)imm));
                            break;
                        /* opcode 66h 0Fh 3Ah 23h  not defined */
                        /* opcode 66h 0Fh 3Ah 24h  not defined */
                        /* opcode 66h 0Fh 3Ah 25h  not defined */
                        /* opcode 66h 0Fh 3Ah 26h  not defined */
                        /* opcode 66h 0Fh 3Ah 27h  not defined */
                        /* opcode 66h 0Fh 3Ah 28h  not defined */
                        /* opcode 66h 0Fh 3Ah 29h  not defined */
                        /* opcode 66h 0Fh 3Ah 2Ah  not defined */
                        /* opcode 66h 0Fh 3Ah 2Bh  not defined */
                        /* opcode 66h 0Fh 3Ah 2Ch  not defined */
                        /* opcode 66h 0Fh 3Ah 2Dh  not defined */
                        /* opcode 66h 0Fh 3Ah 2Eh  not defined */
                        /* opcode 66h 0Fh 3Ah 2Fh  not defined */
                        /* opcode 66h 0Fh 3Ah 30h  not defined */
                        /* opcode 66h 0Fh 3Ah 31h  not defined */
                        /* opcode 66h 0Fh 3Ah 32h  not defined */
                        /* opcode 66h 0Fh 3Ah 33h  not defined */
                        /* opcode 66h 0Fh 3Ah 34h  not defined */
                        /* opcode 66h 0Fh 3Ah 35h  not defined */
                        /* opcode 66h 0Fh 3Ah 36h  not defined */
                        /* opcode 66h 0Fh 3Ah 37h  not defined */
                        /* opcode 66h 0Fh 3Ah 38h  not defined */
                        /* opcode 66h 0Fh 3Ah 39h  not defined */
                        /* opcode 66h 0Fh 3Ah 3Ah  not defined */
                        /* opcode 66h 0Fh 3Ah 3Bh  not defined */
                        /* opcode 66h 0Fh 3Ah 3Ch  not defined */
                        /* opcode 66h 0Fh 3Ah 3Dh  not defined */
                        /* opcode 66h 0Fh 3Ah 3Eh  not defined */
                        /* opcode 66h 0Fh 3Ah 3Fh  not defined */
                        case 0x40: /* 66h 0Fh 3Ah 40h DPPS sse(reg),sse(r/m),i      spec: 0x0F 0x3A 0x40 mod/reg/rm ib mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            imm=IPFB();
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"DPPS XMM%u,%s,0x%02lX",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""),(unsigned long)((uint32_t)imm));
                            break;
                        case 0x41: /* 66h 0Fh 3Ah 41h DPPD sse(reg),sse(r/m),i      spec: 0x0F 0x3A 0x41 mod/reg/rm ib mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            imm=IPFB();
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"DPPD XMM%u,%s,0x%02lX",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""),(unsigned long)((uint32_t)imm));
                            break;
                        case 0x42: /* 66h 0Fh 3Ah 42h MPSADBW sse(reg),sse(r/m),i      spec: 0x0F 0x3A 0x42 mod/reg/rm ib mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            imm=IPFB();
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MPSADBW XMM%u,%s,0x%02lX",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""),(unsigned long)((uint32_t)imm));
                            break;
                        /* opcode 66h 0Fh 3Ah 43h  not defined */
                        /* opcode 66h 0Fh 3Ah 44h  not defined */
                        /* opcode 66h 0Fh 3Ah 45h  not defined */
                        /* opcode 66h 0Fh 3Ah 46h  not defined */
                        /* opcode 66h 0Fh 3Ah 47h  not defined */
                        /* opcode 66h 0Fh 3Ah 48h  not defined */
                        /* opcode 66h 0Fh 3Ah 49h  not defined */
                        /* opcode 66h 0Fh 3Ah 4Ah  not defined */
                        /* opcode 66h 0Fh 3Ah 4Bh  not defined */
                        /* opcode 66h 0Fh 3Ah 4Ch  not defined */
                        /* opcode 66h 0Fh 3Ah 4Dh  not defined */
                        /* opcode 66h 0Fh 3Ah 4Eh  not defined */
                        /* opcode 66h 0Fh 3Ah 4Fh  not defined */
                        /* opcode 66h 0Fh 3Ah 50h  not defined */
                        /* opcode 66h 0Fh 3Ah 51h  not defined */
                        /* opcode 66h 0Fh 3Ah 52h  not defined */
                        /* opcode 66h 0Fh 3Ah 53h  not defined */
                        /* opcode 66h 0Fh 3Ah 54h  not defined */
                        /* opcode 66h 0Fh 3Ah 55h  not defined */
                        /* opcode 66h 0Fh 3Ah 56h  not defined */
                        /* opcode 66h 0Fh 3Ah 57h  not defined */
                        /* opcode 66h 0Fh 3Ah 58h  not defined */
                        /* opcode 66h 0Fh 3Ah 59h  not defined */
                        /* opcode 66h 0Fh 3Ah 5Ah  not defined */
                        /* opcode 66h 0Fh 3Ah 5Bh  not defined */
                        /* opcode 66h 0Fh 3Ah 5Ch  not defined */
                        /* opcode 66h 0Fh 3Ah 5Dh  not defined */
                        /* opcode 66h 0Fh 3Ah 5Eh  not defined */
                        /* opcode 66h 0Fh 3Ah 5Fh  not defined */
                        case 0x60: /* 66h 0Fh 3Ah 60h PCMPESTRM sse(reg),sse(r/m),i      spec: 0x0F 0x3A 0x60 mod/reg/rm ib mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            imm=IPFB();
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PCMPESTRM XMM%u,%s,0x%02lX",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""),(unsigned long)((uint32_t)imm));
                            break;
                        case 0x61: /* 66h 0Fh 3Ah 61h PCMPESTRI sse(reg),sse(r/m),i      spec: 0x0F 0x3A 0x61 mod/reg/rm ib mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            imm=IPFB();
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PCMPESTRI XMM%u,%s,0x%02lX",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""),(unsigned long)((uint32_t)imm));
                            break;
                        case 0x62: /* 66h 0Fh 3Ah 62h PCMPISTRM sse(reg),sse(r/m),i      spec: 0x0F 0x3A 0x62 mod/reg/rm ib mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            imm=IPFB();
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PCMPISTRM XMM%u,%s,0x%02lX",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""),(unsigned long)((uint32_t)imm));
                            break;
                        case 0x63: /* 66h 0Fh 3Ah 63h PCMPISTRI sse(reg),sse(r/m),i      spec: 0x0F 0x3A 0x63 mod/reg/rm ib mprefix(0x66) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            imm=IPFB();
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PCMPISTRI XMM%u,%s,0x%02lX",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""),(unsigned long)((uint32_t)imm));
                            break;
                        /* opcode 66h 0Fh 3Ah 64h  not defined */
                        /* opcode 66h 0Fh 3Ah 65h  not defined */
                        /* opcode 66h 0Fh 3Ah 66h  not defined */
                        /* opcode 66h 0Fh 3Ah 67h  not defined */
                        /* opcode 66h 0Fh 3Ah 68h  not defined */
                        /* opcode 66h 0Fh 3Ah 69h  not defined */
                        /* opcode 66h 0Fh 3Ah 6Ah  not defined */
                        /* opcode 66h 0Fh 3Ah 6Bh  not defined */
                        /* opcode 66h 0Fh 3Ah 6Ch  not defined */
                        /* opcode 66h 0Fh 3Ah 6Dh  not defined */
                        /* opcode 66h 0Fh 3Ah 6Eh  not defined */
                        /* opcode 66h 0Fh 3Ah 6Fh  not defined */
                        /* opcode 66h 0Fh 3Ah 70h  not defined */
                        /* opcode 66h 0Fh 3Ah 71h  not defined */
                        /* opcode 66h 0Fh 3Ah 72h  not defined */
                        /* opcode 66h 0Fh 3Ah 73h  not defined */
                        /* opcode 66h 0Fh 3Ah 74h  not defined */
                        /* opcode 66h 0Fh 3Ah 75h  not defined */
                        /* opcode 66h 0Fh 3Ah 76h  not defined */
                        /* opcode 66h 0Fh 3Ah 77h  not defined */
                        /* opcode 66h 0Fh 3Ah 78h  not defined */
                        /* opcode 66h 0Fh 3Ah 79h  not defined */
                        /* opcode 66h 0Fh 3Ah 7Ah  not defined */
                        /* opcode 66h 0Fh 3Ah 7Bh  not defined */
                        /* opcode 66h 0Fh 3Ah 7Ch  not defined */
                        /* opcode 66h 0Fh 3Ah 7Dh  not defined */
                        /* opcode 66h 0Fh 3Ah 7Eh  not defined */
                        /* opcode 66h 0Fh 3Ah 7Fh  not defined */
                        /* opcode 66h 0Fh 3Ah 80h  not defined */
                        /* opcode 66h 0Fh 3Ah 81h  not defined */
                        /* opcode 66h 0Fh 3Ah 82h  not defined */
                        /* opcode 66h 0Fh 3Ah 83h  not defined */
                        /* opcode 66h 0Fh 3Ah 84h  not defined */
                        /* opcode 66h 0Fh 3Ah 85h  not defined */
                        /* opcode 66h 0Fh 3Ah 86h  not defined */
                        /* opcode 66h 0Fh 3Ah 87h  not defined */
                        /* opcode 66h 0Fh 3Ah 88h  not defined */
                        /* opcode 66h 0Fh 3Ah 89h  not defined */
                        /* opcode 66h 0Fh 3Ah 8Ah  not defined */
                        /* opcode 66h 0Fh 3Ah 8Bh  not defined */
                        /* opcode 66h 0Fh 3Ah 8Ch  not defined */
                        /* opcode 66h 0Fh 3Ah 8Dh  not defined */
                        /* opcode 66h 0Fh 3Ah 8Eh  not defined */
                        /* opcode 66h 0Fh 3Ah 8Fh  not defined */
                        /* opcode 66h 0Fh 3Ah 90h  not defined */
                        /* opcode 66h 0Fh 3Ah 91h  not defined */
                        /* opcode 66h 0Fh 3Ah 92h  not defined */
                        /* opcode 66h 0Fh 3Ah 93h  not defined */
                        /* opcode 66h 0Fh 3Ah 94h  not defined */
                        /* opcode 66h 0Fh 3Ah 95h  not defined */
                        /* opcode 66h 0Fh 3Ah 96h  not defined */
                        /* opcode 66h 0Fh 3Ah 97h  not defined */
                        /* opcode 66h 0Fh 3Ah 98h  not defined */
                        /* opcode 66h 0Fh 3Ah 99h  not defined */
                        /* opcode 66h 0Fh 3Ah 9Ah  not defined */
                        /* opcode 66h 0Fh 3Ah 9Bh  not defined */
                        /* opcode 66h 0Fh 3Ah 9Ch  not defined */
                        /* opcode 66h 0Fh 3Ah 9Dh  not defined */
                        /* opcode 66h 0Fh 3Ah 9Eh  not defined */
                        /* opcode 66h 0Fh 3Ah 9Fh  not defined */
                        /* opcode 66h 0Fh 3Ah A0h  not defined */
                        /* opcode 66h 0Fh 3Ah A1h  not defined */
                        /* opcode 66h 0Fh 3Ah A2h  not defined */
                        /* opcode 66h 0Fh 3Ah A3h  not defined */
                        /* opcode 66h 0Fh 3Ah A4h  not defined */
                        /* opcode 66h 0Fh 3Ah A5h  not defined */
                        /* opcode 66h 0Fh 3Ah A6h  not defined */
                        /* opcode 66h 0Fh 3Ah A7h  not defined */
                        /* opcode 66h 0Fh 3Ah A8h  not defined */
                        /* opcode 66h 0Fh 3Ah A9h  not defined */
                        /* opcode 66h 0Fh 3Ah AAh  not defined */
                        /* opcode 66h 0Fh 3Ah ABh  not defined */
                        /* opcode 66h 0Fh 3Ah ACh  not defined */
                        /* opcode 66h 0Fh 3Ah ADh  not defined */
                        /* opcode 66h 0Fh 3Ah AEh  not defined */
                        /* opcode 66h 0Fh 3Ah AFh  not defined */
                        /* opcode 66h 0Fh 3Ah B0h  not defined */
                        /* opcode 66h 0Fh 3Ah B1h  not defined */
                        /* opcode 66h 0Fh 3Ah B2h  not defined */
                        /* opcode 66h 0Fh 3Ah B3h  not defined */
                        /* opcode 66h 0Fh 3Ah B4h  not defined */
                        /* opcode 66h 0Fh 3Ah B5h  not defined */
                        /* opcode 66h 0Fh 3Ah B6h  not defined */
                        /* opcode 66h 0Fh 3Ah B7h  not defined */
                        /* opcode 66h 0Fh 3Ah B8h  not defined */
                        /* opcode 66h 0Fh 3Ah B9h  not defined */
                        /* opcode 66h 0Fh 3Ah BAh  not defined */
                        /* opcode 66h 0Fh 3Ah BBh  not defined */
                        /* opcode 66h 0Fh 3Ah BCh  not defined */
                        /* opcode 66h 0Fh 3Ah BDh  not defined */
                        /* opcode 66h 0Fh 3Ah BEh  not defined */
                        /* opcode 66h 0Fh 3Ah BFh  not defined */
                        /* opcode 66h 0Fh 3Ah C0h  not defined */
                        /* opcode 66h 0Fh 3Ah C1h  not defined */
                        /* opcode 66h 0Fh 3Ah C2h  not defined */
                        /* opcode 66h 0Fh 3Ah C3h  not defined */
                        /* opcode 66h 0Fh 3Ah C4h  not defined */
                        /* opcode 66h 0Fh 3Ah C5h  not defined */
                        /* opcode 66h 0Fh 3Ah C6h  not defined */
                        /* opcode 66h 0Fh 3Ah C7h  not defined */
                        /* opcode 66h 0Fh 3Ah C8h  not defined */
                        /* opcode 66h 0Fh 3Ah C9h  not defined */
                        /* opcode 66h 0Fh 3Ah CAh  not defined */
                        /* opcode 66h 0Fh 3Ah CBh  not defined */
                        /* opcode 66h 0Fh 3Ah CCh  not defined */
                        /* opcode 66h 0Fh 3Ah CDh  not defined */
                        /* opcode 66h 0Fh 3Ah CEh  not defined */
                        /* opcode 66h 0Fh 3Ah CFh  not defined */
                        /* opcode 66h 0Fh 3Ah D0h  not defined */
                        /* opcode 66h 0Fh 3Ah D1h  not defined */
                        /* opcode 66h 0Fh 3Ah D2h  not defined */
                        /* opcode 66h 0Fh 3Ah D3h  not defined */
                        /* opcode 66h 0Fh 3Ah D4h  not defined */
                        /* opcode 66h 0Fh 3Ah D5h  not defined */
                        /* opcode 66h 0Fh 3Ah D6h  not defined */
                        /* opcode 66h 0Fh 3Ah D7h  not defined */
                        /* opcode 66h 0Fh 3Ah D8h  not defined */
                        /* opcode 66h 0Fh 3Ah D9h  not defined */
                        /* opcode 66h 0Fh 3Ah DAh  not defined */
                        /* opcode 66h 0Fh 3Ah DBh  not defined */
                        /* opcode 66h 0Fh 3Ah DCh  not defined */
                        /* opcode 66h 0Fh 3Ah DDh  not defined */
                        /* opcode 66h 0Fh 3Ah DEh  not defined */
                        /* opcode 66h 0Fh 3Ah DFh  not defined */
                        /* opcode 66h 0Fh 3Ah E0h  not defined */
                        /* opcode 66h 0Fh 3Ah E1h  not defined */
                        /* opcode 66h 0Fh 3Ah E2h  not defined */
                        /* opcode 66h 0Fh 3Ah E3h  not defined */
                        /* opcode 66h 0Fh 3Ah E4h  not defined */
                        /* opcode 66h 0Fh 3Ah E5h  not defined */
                        /* opcode 66h 0Fh 3Ah E6h  not defined */
                        /* opcode 66h 0Fh 3Ah E7h  not defined */
                        /* opcode 66h 0Fh 3Ah E8h  not defined */
                        /* opcode 66h 0Fh 3Ah E9h  not defined */
                        /* opcode 66h 0Fh 3Ah EAh  not defined */
                        /* opcode 66h 0Fh 3Ah EBh  not defined */
                        /* opcode 66h 0Fh 3Ah ECh  not defined */
                        /* opcode 66h 0Fh 3Ah EDh  not defined */
                        /* opcode 66h 0Fh 3Ah EEh  not defined */
                        /* opcode 66h 0Fh 3Ah EFh  not defined */
                        /* opcode 66h 0Fh 3Ah F0h  not defined */
                        /* opcode 66h 0Fh 3Ah F1h  not defined */
                        /* opcode 66h 0Fh 3Ah F2h  not defined */
                        /* opcode 66h 0Fh 3Ah F3h  not defined */
                        /* opcode 66h 0Fh 3Ah F4h  not defined */
                        /* opcode 66h 0Fh 3Ah F5h  not defined */
                        /* opcode 66h 0Fh 3Ah F6h  not defined */
                        /* opcode 66h 0Fh 3Ah F7h  not defined */
                        /* opcode 66h 0Fh 3Ah F8h  not defined */
                        /* opcode 66h 0Fh 3Ah F9h  not defined */
                        /* opcode 66h 0Fh 3Ah FAh  not defined */
                        /* opcode 66h 0Fh 3Ah FBh  not defined */
                        /* opcode 66h 0Fh 3Ah FCh  not defined */
                        /* opcode 66h 0Fh 3Ah FDh  not defined */
                        /* opcode 66h 0Fh 3Ah FEh  not defined */
                        /* opcode 66h 0Fh 3Ah FFh  not defined */
                        default:
                            goto _x86decode_begin_code32_addr32_opcode_parse_0F3A_generic; /* Fall through to normal 0x0F 0x3A opcode handling */
                    };
/* End of opcodes starting with 66h 0Fh 3Ah */
                    break;
                /* opcode 66h 0Fh 3Bh  not defined */
                /* opcode 66h 0Fh 3Ch  not defined */
                /* opcode 66h 0Fh 3Dh  not defined */
                /* opcode 66h 0Fh 3Eh  not defined */
                /* opcode 66h 0Fh 3Fh  not defined */
                /* opcode 66h 0Fh 40h  not defined */
                /* opcode 66h 0Fh 41h  not defined */
                /* opcode 66h 0Fh 42h  not defined */
                /* opcode 66h 0Fh 43h  not defined */
                /* opcode 66h 0Fh 44h  not defined */
                /* opcode 66h 0Fh 45h  not defined */
                /* opcode 66h 0Fh 46h  not defined */
                /* opcode 66h 0Fh 47h  not defined */
                /* opcode 66h 0Fh 48h  not defined */
                /* opcode 66h 0Fh 49h  not defined */
                /* opcode 66h 0Fh 4Ah  not defined */
                /* opcode 66h 0Fh 4Bh  not defined */
                /* opcode 66h 0Fh 4Ch  not defined */
                /* opcode 66h 0Fh 4Dh  not defined */
                /* opcode 66h 0Fh 4Eh  not defined */
                /* opcode 66h 0Fh 4Fh  not defined */
                case 0x50: /* 66h 0Fh 50h        spec:  */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    _x86decode_begin_code32_addr32_opcode_parse_660F50:
/* Opcodes starting with 66h 0Fh 50h */
                    switch (mrm.byte) {
                        /* opcode 66h 0Fh 50h 00h  not defined */
                        /* opcode 66h 0Fh 50h 01h  not defined */
                        /* opcode 66h 0Fh 50h 02h  not defined */
                        /* opcode 66h 0Fh 50h 03h  not defined */
                        /* opcode 66h 0Fh 50h 04h  not defined */
                        /* opcode 66h 0Fh 50h 05h  not defined */
                        /* opcode 66h 0Fh 50h 06h  not defined */
                        /* opcode 66h 0Fh 50h 07h  not defined */
                        /* opcode 66h 0Fh 50h 08h  not defined */
                        /* opcode 66h 0Fh 50h 09h  not defined */
                        /* opcode 66h 0Fh 50h 0Ah  not defined */
                        /* opcode 66h 0Fh 50h 0Bh  not defined */
                        /* opcode 66h 0Fh 50h 0Ch  not defined */
                        /* opcode 66h 0Fh 50h 0Dh  not defined */
                        /* opcode 66h 0Fh 50h 0Eh  not defined */
                        /* opcode 66h 0Fh 50h 0Fh  not defined */
                        /* opcode 66h 0Fh 50h 10h  not defined */
                        /* opcode 66h 0Fh 50h 11h  not defined */
                        /* opcode 66h 0Fh 50h 12h  not defined */
                        /* opcode 66h 0Fh 50h 13h  not defined */
                        /* opcode 66h 0Fh 50h 14h  not defined */
                        /* opcode 66h 0Fh 50h 15h  not defined */
                        /* opcode 66h 0Fh 50h 16h  not defined */
                        /* opcode 66h 0Fh 50h 17h  not defined */
                        /* opcode 66h 0Fh 50h 18h  not defined */
                        /* opcode 66h 0Fh 50h 19h  not defined */
                        /* opcode 66h 0Fh 50h 1Ah  not defined */
                        /* opcode 66h 0Fh 50h 1Bh  not defined */
                        /* opcode 66h 0Fh 50h 1Ch  not defined */
                        /* opcode 66h 0Fh 50h 1Dh  not defined */
                        /* opcode 66h 0Fh 50h 1Eh  not defined */
                        /* opcode 66h 0Fh 50h 1Fh  not defined */
                        /* opcode 66h 0Fh 50h 20h  not defined */
                        /* opcode 66h 0Fh 50h 21h  not defined */
                        /* opcode 66h 0Fh 50h 22h  not defined */
                        /* opcode 66h 0Fh 50h 23h  not defined */
                        /* opcode 66h 0Fh 50h 24h  not defined */
                        /* opcode 66h 0Fh 50h 25h  not defined */
                        /* opcode 66h 0Fh 50h 26h  not defined */
                        /* opcode 66h 0Fh 50h 27h  not defined */
                        /* opcode 66h 0Fh 50h 28h  not defined */
                        /* opcode 66h 0Fh 50h 29h  not defined */
                        /* opcode 66h 0Fh 50h 2Ah  not defined */
                        /* opcode 66h 0Fh 50h 2Bh  not defined */
                        /* opcode 66h 0Fh 50h 2Ch  not defined */
                        /* opcode 66h 0Fh 50h 2Dh  not defined */
                        /* opcode 66h 0Fh 50h 2Eh  not defined */
                        /* opcode 66h 0Fh 50h 2Fh  not defined */
                        /* opcode 66h 0Fh 50h 30h  not defined */
                        /* opcode 66h 0Fh 50h 31h  not defined */
                        /* opcode 66h 0Fh 50h 32h  not defined */
                        /* opcode 66h 0Fh 50h 33h  not defined */
                        /* opcode 66h 0Fh 50h 34h  not defined */
                        /* opcode 66h 0Fh 50h 35h  not defined */
                        /* opcode 66h 0Fh 50h 36h  not defined */
                        /* opcode 66h 0Fh 50h 37h  not defined */
                        /* opcode 66h 0Fh 50h 38h  not defined */
                        /* opcode 66h 0Fh 50h 39h  not defined */
                        /* opcode 66h 0Fh 50h 3Ah  not defined */
                        /* opcode 66h 0Fh 50h 3Bh  not defined */
                        /* opcode 66h 0Fh 50h 3Ch  not defined */
                        /* opcode 66h 0Fh 50h 3Dh  not defined */
                        /* opcode 66h 0Fh 50h 3Eh  not defined */
                        /* opcode 66h 0Fh 50h 3Fh  not defined */
                        /* opcode 66h 0Fh 50h 40h  not defined */
                        /* opcode 66h 0Fh 50h 41h  not defined */
                        /* opcode 66h 0Fh 50h 42h  not defined */
                        /* opcode 66h 0Fh 50h 43h  not defined */
                        /* opcode 66h 0Fh 50h 44h  not defined */
                        /* opcode 66h 0Fh 50h 45h  not defined */
                        /* opcode 66h 0Fh 50h 46h  not defined */
                        /* opcode 66h 0Fh 50h 47h  not defined */
                        /* opcode 66h 0Fh 50h 48h  not defined */
                        /* opcode 66h 0Fh 50h 49h  not defined */
                        /* opcode 66h 0Fh 50h 4Ah  not defined */
                        /* opcode 66h 0Fh 50h 4Bh  not defined */
                        /* opcode 66h 0Fh 50h 4Ch  not defined */
                        /* opcode 66h 0Fh 50h 4Dh  not defined */
                        /* opcode 66h 0Fh 50h 4Eh  not defined */
                        /* opcode 66h 0Fh 50h 4Fh  not defined */
                        /* opcode 66h 0Fh 50h 50h  not defined */
                        /* opcode 66h 0Fh 50h 51h  not defined */
                        /* opcode 66h 0Fh 50h 52h  not defined */
                        /* opcode 66h 0Fh 50h 53h  not defined */
                        /* opcode 66h 0Fh 50h 54h  not defined */
                        /* opcode 66h 0Fh 50h 55h  not defined */
                        /* opcode 66h 0Fh 50h 56h  not defined */
                        /* opcode 66h 0Fh 50h 57h  not defined */
                        /* opcode 66h 0Fh 50h 58h  not defined */
                        /* opcode 66h 0Fh 50h 59h  not defined */
                        /* opcode 66h 0Fh 50h 5Ah  not defined */
                        /* opcode 66h 0Fh 50h 5Bh  not defined */
                        /* opcode 66h 0Fh 50h 5Ch  not defined */
                        /* opcode 66h 0Fh 50h 5Dh  not defined */
                        /* opcode 66h 0Fh 50h 5Eh  not defined */
                        /* opcode 66h 0Fh 50h 5Fh  not defined */
                        /* opcode 66h 0Fh 50h 60h  not defined */
                        /* opcode 66h 0Fh 50h 61h  not defined */
                        /* opcode 66h 0Fh 50h 62h  not defined */
                        /* opcode 66h 0Fh 50h 63h  not defined */
                        /* opcode 66h 0Fh 50h 64h  not defined */
                        /* opcode 66h 0Fh 50h 65h  not defined */
                        /* opcode 66h 0Fh 50h 66h  not defined */
                        /* opcode 66h 0Fh 50h 67h  not defined */
                        /* opcode 66h 0Fh 50h 68h  not defined */
                        /* opcode 66h 0Fh 50h 69h  not defined */
                        /* opcode 66h 0Fh 50h 6Ah  not defined */
                        /* opcode 66h 0Fh 50h 6Bh  not defined */
                        /* opcode 66h 0Fh 50h 6Ch  not defined */
                        /* opcode 66h 0Fh 50h 6Dh  not defined */
                        /* opcode 66h 0Fh 50h 6Eh  not defined */
                        /* opcode 66h 0Fh 50h 6Fh  not defined */
                        /* opcode 66h 0Fh 50h 70h  not defined */
                        /* opcode 66h 0Fh 50h 71h  not defined */
                        /* opcode 66h 0Fh 50h 72h  not defined */
                        /* opcode 66h 0Fh 50h 73h  not defined */
                        /* opcode 66h 0Fh 50h 74h  not defined */
                        /* opcode 66h 0Fh 50h 75h  not defined */
                        /* opcode 66h 0Fh 50h 76h  not defined */
                        /* opcode 66h 0Fh 50h 77h  not defined */
                        /* opcode 66h 0Fh 50h 78h  not defined */
                        /* opcode 66h 0Fh 50h 79h  not defined */
                        /* opcode 66h 0Fh 50h 7Ah  not defined */
                        /* opcode 66h 0Fh 50h 7Bh  not defined */
                        /* opcode 66h 0Fh 50h 7Ch  not defined */
                        /* opcode 66h 0Fh 50h 7Dh  not defined */
                        /* opcode 66h 0Fh 50h 7Eh  not defined */
                        /* opcode 66h 0Fh 50h 7Fh  not defined */
                        /* opcode 66h 0Fh 50h 80h  not defined */
                        /* opcode 66h 0Fh 50h 81h  not defined */
                        /* opcode 66h 0Fh 50h 82h  not defined */
                        /* opcode 66h 0Fh 50h 83h  not defined */
                        /* opcode 66h 0Fh 50h 84h  not defined */
                        /* opcode 66h 0Fh 50h 85h  not defined */
                        /* opcode 66h 0Fh 50h 86h  not defined */
                        /* opcode 66h 0Fh 50h 87h  not defined */
                        /* opcode 66h 0Fh 50h 88h  not defined */
                        /* opcode 66h 0Fh 50h 89h  not defined */
                        /* opcode 66h 0Fh 50h 8Ah  not defined */
                        /* opcode 66h 0Fh 50h 8Bh  not defined */
                        /* opcode 66h 0Fh 50h 8Ch  not defined */
                        /* opcode 66h 0Fh 50h 8Dh  not defined */
                        /* opcode 66h 0Fh 50h 8Eh  not defined */
                        /* opcode 66h 0Fh 50h 8Fh  not defined */
                        /* opcode 66h 0Fh 50h 90h  not defined */
                        /* opcode 66h 0Fh 50h 91h  not defined */
                        /* opcode 66h 0Fh 50h 92h  not defined */
                        /* opcode 66h 0Fh 50h 93h  not defined */
                        /* opcode 66h 0Fh 50h 94h  not defined */
                        /* opcode 66h 0Fh 50h 95h  not defined */
                        /* opcode 66h 0Fh 50h 96h  not defined */
                        /* opcode 66h 0Fh 50h 97h  not defined */
                        /* opcode 66h 0Fh 50h 98h  not defined */
                        /* opcode 66h 0Fh 50h 99h  not defined */
                        /* opcode 66h 0Fh 50h 9Ah  not defined */
                        /* opcode 66h 0Fh 50h 9Bh  not defined */
                        /* opcode 66h 0Fh 50h 9Ch  not defined */
                        /* opcode 66h 0Fh 50h 9Dh  not defined */
                        /* opcode 66h 0Fh 50h 9Eh  not defined */
                        /* opcode 66h 0Fh 50h 9Fh  not defined */
                        /* opcode 66h 0Fh 50h A0h  not defined */
                        /* opcode 66h 0Fh 50h A1h  not defined */
                        /* opcode 66h 0Fh 50h A2h  not defined */
                        /* opcode 66h 0Fh 50h A3h  not defined */
                        /* opcode 66h 0Fh 50h A4h  not defined */
                        /* opcode 66h 0Fh 50h A5h  not defined */
                        /* opcode 66h 0Fh 50h A6h  not defined */
                        /* opcode 66h 0Fh 50h A7h  not defined */
                        /* opcode 66h 0Fh 50h A8h  not defined */
                        /* opcode 66h 0Fh 50h A9h  not defined */
                        /* opcode 66h 0Fh 50h AAh  not defined */
                        /* opcode 66h 0Fh 50h ABh  not defined */
                        /* opcode 66h 0Fh 50h ACh  not defined */
                        /* opcode 66h 0Fh 50h ADh  not defined */
                        /* opcode 66h 0Fh 50h AEh  not defined */
                        /* opcode 66h 0Fh 50h AFh  not defined */
                        /* opcode 66h 0Fh 50h B0h  not defined */
                        /* opcode 66h 0Fh 50h B1h  not defined */
                        /* opcode 66h 0Fh 50h B2h  not defined */
                        /* opcode 66h 0Fh 50h B3h  not defined */
                        /* opcode 66h 0Fh 50h B4h  not defined */
                        /* opcode 66h 0Fh 50h B5h  not defined */
                        /* opcode 66h 0Fh 50h B6h  not defined */
                        /* opcode 66h 0Fh 50h B7h  not defined */
                        /* opcode 66h 0Fh 50h B8h  not defined */
                        /* opcode 66h 0Fh 50h B9h  not defined */
                        /* opcode 66h 0Fh 50h BAh  not defined */
                        /* opcode 66h 0Fh 50h BBh  not defined */
                        /* opcode 66h 0Fh 50h BCh  not defined */
                        /* opcode 66h 0Fh 50h BDh  not defined */
                        /* opcode 66h 0Fh 50h BEh  not defined */
                        /* opcode 66h 0Fh 50h BFh  not defined */
                        case 0xC0: /* 66h 0Fh 50h C0h MOVMSKPD w32(reg),sse(r/m) mod=3 reg=0 rm=0      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xC1: /* 66h 0Fh 50h C1h MOVMSKPD w32(reg),sse(r/m) mod=3 reg=0 rm=1      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xC2: /* 66h 0Fh 50h C2h MOVMSKPD w32(reg),sse(r/m) mod=3 reg=0 rm=2      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xC3: /* 66h 0Fh 50h C3h MOVMSKPD w32(reg),sse(r/m) mod=3 reg=0 rm=3      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xC4: /* 66h 0Fh 50h C4h MOVMSKPD w32(reg),sse(r/m) mod=3 reg=0 rm=4      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xC5: /* 66h 0Fh 50h C5h MOVMSKPD w32(reg),sse(r/m) mod=3 reg=0 rm=5      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xC6: /* 66h 0Fh 50h C6h MOVMSKPD w32(reg),sse(r/m) mod=3 reg=0 rm=6      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xC7: /* 66h 0Fh 50h C7h MOVMSKPD w32(reg),sse(r/m) mod=3 reg=0 rm=7      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xC8: /* 66h 0Fh 50h C8h MOVMSKPD w32(reg),sse(r/m) mod=3 reg=1 rm=0      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xC9: /* 66h 0Fh 50h C9h MOVMSKPD w32(reg),sse(r/m) mod=3 reg=1 rm=1      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xCA: /* 66h 0Fh 50h CAh MOVMSKPD w32(reg),sse(r/m) mod=3 reg=1 rm=2      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xCB: /* 66h 0Fh 50h CBh MOVMSKPD w32(reg),sse(r/m) mod=3 reg=1 rm=3      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xCC: /* 66h 0Fh 50h CCh MOVMSKPD w32(reg),sse(r/m) mod=3 reg=1 rm=4      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xCD: /* 66h 0Fh 50h CDh MOVMSKPD w32(reg),sse(r/m) mod=3 reg=1 rm=5      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xCE: /* 66h 0Fh 50h CEh MOVMSKPD w32(reg),sse(r/m) mod=3 reg=1 rm=6      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xCF: /* 66h 0Fh 50h CFh MOVMSKPD w32(reg),sse(r/m) mod=3 reg=1 rm=7      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xD0: /* 66h 0Fh 50h D0h MOVMSKPD w32(reg),sse(r/m) mod=3 reg=2 rm=0      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xD1: /* 66h 0Fh 50h D1h MOVMSKPD w32(reg),sse(r/m) mod=3 reg=2 rm=1      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xD2: /* 66h 0Fh 50h D2h MOVMSKPD w32(reg),sse(r/m) mod=3 reg=2 rm=2      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xD3: /* 66h 0Fh 50h D3h MOVMSKPD w32(reg),sse(r/m) mod=3 reg=2 rm=3      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xD4: /* 66h 0Fh 50h D4h MOVMSKPD w32(reg),sse(r/m) mod=3 reg=2 rm=4      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xD5: /* 66h 0Fh 50h D5h MOVMSKPD w32(reg),sse(r/m) mod=3 reg=2 rm=5      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xD6: /* 66h 0Fh 50h D6h MOVMSKPD w32(reg),sse(r/m) mod=3 reg=2 rm=6      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xD7: /* 66h 0Fh 50h D7h MOVMSKPD w32(reg),sse(r/m) mod=3 reg=2 rm=7      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xD8: /* 66h 0Fh 50h D8h MOVMSKPD w32(reg),sse(r/m) mod=3 reg=3 rm=0      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xD9: /* 66h 0Fh 50h D9h MOVMSKPD w32(reg),sse(r/m) mod=3 reg=3 rm=1      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xDA: /* 66h 0Fh 50h DAh MOVMSKPD w32(reg),sse(r/m) mod=3 reg=3 rm=2      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xDB: /* 66h 0Fh 50h DBh MOVMSKPD w32(reg),sse(r/m) mod=3 reg=3 rm=3      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xDC: /* 66h 0Fh 50h DCh MOVMSKPD w32(reg),sse(r/m) mod=3 reg=3 rm=4      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xDD: /* 66h 0Fh 50h DDh MOVMSKPD w32(reg),sse(r/m) mod=3 reg=3 rm=5      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xDE: /* 66h 0Fh 50h DEh MOVMSKPD w32(reg),sse(r/m) mod=3 reg=3 rm=6      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xDF: /* 66h 0Fh 50h DFh MOVMSKPD w32(reg),sse(r/m) mod=3 reg=3 rm=7      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xE0: /* 66h 0Fh 50h E0h MOVMSKPD w32(reg),sse(r/m) mod=3 reg=4 rm=0      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xE1: /* 66h 0Fh 50h E1h MOVMSKPD w32(reg),sse(r/m) mod=3 reg=4 rm=1      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xE2: /* 66h 0Fh 50h E2h MOVMSKPD w32(reg),sse(r/m) mod=3 reg=4 rm=2      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xE3: /* 66h 0Fh 50h E3h MOVMSKPD w32(reg),sse(r/m) mod=3 reg=4 rm=3      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xE4: /* 66h 0Fh 50h E4h MOVMSKPD w32(reg),sse(r/m) mod=3 reg=4 rm=4      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xE5: /* 66h 0Fh 50h E5h MOVMSKPD w32(reg),sse(r/m) mod=3 reg=4 rm=5      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xE6: /* 66h 0Fh 50h E6h MOVMSKPD w32(reg),sse(r/m) mod=3 reg=4 rm=6      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xE7: /* 66h 0Fh 50h E7h MOVMSKPD w32(reg),sse(r/m) mod=3 reg=4 rm=7      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xE8: /* 66h 0Fh 50h E8h MOVMSKPD w32(reg),sse(r/m) mod=3 reg=5 rm=0      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xE9: /* 66h 0Fh 50h E9h MOVMSKPD w32(reg),sse(r/m) mod=3 reg=5 rm=1      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xEA: /* 66h 0Fh 50h EAh MOVMSKPD w32(reg),sse(r/m) mod=3 reg=5 rm=2      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xEB: /* 66h 0Fh 50h EBh MOVMSKPD w32(reg),sse(r/m) mod=3 reg=5 rm=3      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xEC: /* 66h 0Fh 50h ECh MOVMSKPD w32(reg),sse(r/m) mod=3 reg=5 rm=4      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xED: /* 66h 0Fh 50h EDh MOVMSKPD w32(reg),sse(r/m) mod=3 reg=5 rm=5      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xEE: /* 66h 0Fh 50h EEh MOVMSKPD w32(reg),sse(r/m) mod=3 reg=5 rm=6      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xEF: /* 66h 0Fh 50h EFh MOVMSKPD w32(reg),sse(r/m) mod=3 reg=5 rm=7      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xF0: /* 66h 0Fh 50h F0h MOVMSKPD w32(reg),sse(r/m) mod=3 reg=6 rm=0      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xF1: /* 66h 0Fh 50h F1h MOVMSKPD w32(reg),sse(r/m) mod=3 reg=6 rm=1      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xF2: /* 66h 0Fh 50h F2h MOVMSKPD w32(reg),sse(r/m) mod=3 reg=6 rm=2      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xF3: /* 66h 0Fh 50h F3h MOVMSKPD w32(reg),sse(r/m) mod=3 reg=6 rm=3      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xF4: /* 66h 0Fh 50h F4h MOVMSKPD w32(reg),sse(r/m) mod=3 reg=6 rm=4      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xF5: /* 66h 0Fh 50h F5h MOVMSKPD w32(reg),sse(r/m) mod=3 reg=6 rm=5      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xF6: /* 66h 0Fh 50h F6h MOVMSKPD w32(reg),sse(r/m) mod=3 reg=6 rm=6      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xF7: /* 66h 0Fh 50h F7h MOVMSKPD w32(reg),sse(r/m) mod=3 reg=6 rm=7      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xF8: /* 66h 0Fh 50h F8h MOVMSKPD w32(reg),sse(r/m) mod=3 reg=7 rm=0      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xF9: /* 66h 0Fh 50h F9h MOVMSKPD w32(reg),sse(r/m) mod=3 reg=7 rm=1      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xFA: /* 66h 0Fh 50h FAh MOVMSKPD w32(reg),sse(r/m) mod=3 reg=7 rm=2      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xFB: /* 66h 0Fh 50h FBh MOVMSKPD w32(reg),sse(r/m) mod=3 reg=7 rm=3      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xFC: /* 66h 0Fh 50h FCh MOVMSKPD w32(reg),sse(r/m) mod=3 reg=7 rm=4      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xFD: /* 66h 0Fh 50h FDh MOVMSKPD w32(reg),sse(r/m) mod=3 reg=7 rm=5      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xFE: /* 66h 0Fh 50h FEh MOVMSKPD w32(reg),sse(r/m) mod=3 reg=7 rm=6      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xFF: /* 66h 0Fh 50h FFh MOVMSKPD w32(reg),sse(r/m) mod=3 reg=7 rm=7      spec: 0x0F 0x50 mod/reg/rm mprefix(0x66) mod==3 */
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVMSKPD %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                            break;
                        default:
                            goto _x86decode_begin_code32_addr32_opcode_parse_0F50_generic; /* Fall through to normal 0x0F 0x50 opcode handling */
                    };
/* End of opcodes starting with 66h 0Fh 50h */
                    break;
                case 0x51: /* 66h 0Fh 51h SQRTPD sse(reg),sse(r/m)      spec: 0x0F 0x51 mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SQRTPD XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                /* opcode 66h 0Fh 52h  not defined */
                /* opcode 66h 0Fh 53h  not defined */
                case 0x54: /* 66h 0Fh 54h ANDPD sse(reg),sse(r/m)      spec: 0x0F 0x54 mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ANDPD XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x55: /* 66h 0Fh 55h ANDNPD sse(reg),sse(r/m)      spec: 0x0F 0x55 mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ANDNPD XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x56: /* 66h 0Fh 56h ORPD sse(reg),sse(r/m)      spec: 0x0F 0x56 mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ORPD XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x57: /* 66h 0Fh 57h XORPD sse(reg),sse(r/m)      spec: 0x0F 0x57 mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"XORPD XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x58: /* 66h 0Fh 58h ADDPD sse(reg),sse(r/m)      spec: 0x0F 0x58 mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ADDPD XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x59: /* 66h 0Fh 59h MULPD sse(reg),sse(r/m)      spec: 0x0F 0x59 mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MULPD XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x5A: /* 66h 0Fh 5Ah CVTPD2PS sse(reg),sse(r/m)      spec: 0x0F 0x5A mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CVTPD2PS XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x5B: /* 66h 0Fh 5Bh CVTPS2DQ sse(reg),sse(r/m)      spec: 0x0F 0x5B mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CVTPS2DQ XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x5C: /* 66h 0Fh 5Ch SUBPD sse(reg),sse(r/m)      spec: 0x0F 0x5C mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SUBPD XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x5D: /* 66h 0Fh 5Dh MINPD sse(reg),sse(r/m)      spec: 0x0F 0x5D mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MINPD XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x5E: /* 66h 0Fh 5Eh DIVPD sse(reg),sse(r/m)      spec: 0x0F 0x5E mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"DIVPD XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x5F: /* 66h 0Fh 5Fh MAXPD sse(reg),sse(r/m)      spec: 0x0F 0x5F mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MAXPD XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x60: /* 66h 0Fh 60h PUNPCKLBW sse(reg),sse(r/m)      spec: 0x0F 0x60 mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PUNPCKLBW XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x61: /* 66h 0Fh 61h PUNPCKLWD sse(reg),sse(r/m)      spec: 0x0F 0x61 mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PUNPCKLWD XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x62: /* 66h 0Fh 62h PUNPCKLDQ sse(reg),sse(r/m)      spec: 0x0F 0x62 mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PUNPCKLDQ XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x63: /* 66h 0Fh 63h PACKSSWB sse(reg),sse(r/m)      spec: 0x0F 0x63 mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PACKSSWB XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x64: /* 66h 0Fh 64h PCMPGTB sse(reg),sse(r/m)      spec: 0x0F 0x64 mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PCMPGTB XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x65: /* 66h 0Fh 65h PCMPGTW sse(reg),sse(r/m)      spec: 0x0F 0x65 mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PCMPGTW XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x66: /* 66h 0Fh 66h PCMPGTD sse(reg),sse(r/m)      spec: 0x0F 0x66 mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PCMPGTD XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x67: /* 66h 0Fh 67h PACKUSWB sse(reg),sse(r/m)      spec: 0x0F 0x67 mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PACKUSWB XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x68: /* 66h 0Fh 68h PUNPCKHBW sse(reg),sse(r/m)      spec: 0x0F 0x68 mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PUNPCKHBW XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x69: /* 66h 0Fh 69h PUNPCKHWD sse(reg),sse(r/m)      spec: 0x0F 0x69 mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PUNPCKHWD XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x6A: /* 66h 0Fh 6Ah PUNPCKHDQ sse(reg),sse(r/m)      spec: 0x0F 0x6A mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PUNPCKHDQ XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x6B: /* 66h 0Fh 6Bh PACKSSDW sse(reg),sse(r/m)      spec: 0x0F 0x6B mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PACKSSDW XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x6C: /* 66h 0Fh 6Ch PUNPCKLQDQ sse(reg),sse(r/m)      spec: 0x0F 0x6C mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PUNPCKLQDQ XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x6D: /* 66h 0Fh 6Dh PUNPCKHQDQ sse(reg),sse(r/m)      spec: 0x0F 0x6D mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PUNPCKHQDQ XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x6E: /* 66h 0Fh 6Eh MOVD sse(reg),w32(r/m)      spec: 0x0F 0x6E mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVD XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,4,RC_REG,"w32"));
                    break;
                case 0x6F: /* 66h 0Fh 6Fh MOVDQA sse(reg),sse(r/m)      spec: 0x0F 0x6F mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVDQA XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x70: /* 66h 0Fh 70h PSHUFD sse(reg),sse(r/m),i      spec: 0x0F 0x70 mod/reg/rm ib mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    imm=IPFB();
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSHUFD XMM%u,%s,0x%02lX",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""),(unsigned long)((uint32_t)imm));
                    break;
                case 0x71: /* 66h 0Fh 71h        spec:  */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    _x86decode_begin_code32_addr32_opcode_parse_660F71:
/* Opcodes starting with 66h 0Fh 71h */
                    switch (mrm.byte) {
                        /* opcode 66h 0Fh 71h 00h  not defined */
                        /* opcode 66h 0Fh 71h 01h  not defined */
                        /* opcode 66h 0Fh 71h 02h  not defined */
                        /* opcode 66h 0Fh 71h 03h  not defined */
                        /* opcode 66h 0Fh 71h 04h  not defined */
                        /* opcode 66h 0Fh 71h 05h  not defined */
                        /* opcode 66h 0Fh 71h 06h  not defined */
                        /* opcode 66h 0Fh 71h 07h  not defined */
                        /* opcode 66h 0Fh 71h 08h  not defined */
                        /* opcode 66h 0Fh 71h 09h  not defined */
                        /* opcode 66h 0Fh 71h 0Ah  not defined */
                        /* opcode 66h 0Fh 71h 0Bh  not defined */
                        /* opcode 66h 0Fh 71h 0Ch  not defined */
                        /* opcode 66h 0Fh 71h 0Dh  not defined */
                        /* opcode 66h 0Fh 71h 0Eh  not defined */
                        /* opcode 66h 0Fh 71h 0Fh  not defined */
                        /* opcode 66h 0Fh 71h 10h  not defined */
                        /* opcode 66h 0Fh 71h 11h  not defined */
                        /* opcode 66h 0Fh 71h 12h  not defined */
                        /* opcode 66h 0Fh 71h 13h  not defined */
                        /* opcode 66h 0Fh 71h 14h  not defined */
                        /* opcode 66h 0Fh 71h 15h  not defined */
                        /* opcode 66h 0Fh 71h 16h  not defined */
                        /* opcode 66h 0Fh 71h 17h  not defined */
                        /* opcode 66h 0Fh 71h 18h  not defined */
                        /* opcode 66h 0Fh 71h 19h  not defined */
                        /* opcode 66h 0Fh 71h 1Ah  not defined */
                        /* opcode 66h 0Fh 71h 1Bh  not defined */
                        /* opcode 66h 0Fh 71h 1Ch  not defined */
                        /* opcode 66h 0Fh 71h 1Dh  not defined */
                        /* opcode 66h 0Fh 71h 1Eh  not defined */
                        /* opcode 66h 0Fh 71h 1Fh  not defined */
                        /* opcode 66h 0Fh 71h 20h  not defined */
                        /* opcode 66h 0Fh 71h 21h  not defined */
                        /* opcode 66h 0Fh 71h 22h  not defined */
                        /* opcode 66h 0Fh 71h 23h  not defined */
                        /* opcode 66h 0Fh 71h 24h  not defined */
                        /* opcode 66h 0Fh 71h 25h  not defined */
                        /* opcode 66h 0Fh 71h 26h  not defined */
                        /* opcode 66h 0Fh 71h 27h  not defined */
                        /* opcode 66h 0Fh 71h 28h  not defined */
                        /* opcode 66h 0Fh 71h 29h  not defined */
                        /* opcode 66h 0Fh 71h 2Ah  not defined */
                        /* opcode 66h 0Fh 71h 2Bh  not defined */
                        /* opcode 66h 0Fh 71h 2Ch  not defined */
                        /* opcode 66h 0Fh 71h 2Dh  not defined */
                        /* opcode 66h 0Fh 71h 2Eh  not defined */
                        /* opcode 66h 0Fh 71h 2Fh  not defined */
                        /* opcode 66h 0Fh 71h 30h  not defined */
                        /* opcode 66h 0Fh 71h 31h  not defined */
                        /* opcode 66h 0Fh 71h 32h  not defined */
                        /* opcode 66h 0Fh 71h 33h  not defined */
                        /* opcode 66h 0Fh 71h 34h  not defined */
                        /* opcode 66h 0Fh 71h 35h  not defined */
                        /* opcode 66h 0Fh 71h 36h  not defined */
                        /* opcode 66h 0Fh 71h 37h  not defined */
                        /* opcode 66h 0Fh 71h 38h  not defined */
                        /* opcode 66h 0Fh 71h 39h  not defined */
                        /* opcode 66h 0Fh 71h 3Ah  not defined */
                        /* opcode 66h 0Fh 71h 3Bh  not defined */
                        /* opcode 66h 0Fh 71h 3Ch  not defined */
                        /* opcode 66h 0Fh 71h 3Dh  not defined */
                        /* opcode 66h 0Fh 71h 3Eh  not defined */
                        /* opcode 66h 0Fh 71h 3Fh  not defined */
                        /* opcode 66h 0Fh 71h 40h  not defined */
                        /* opcode 66h 0Fh 71h 41h  not defined */
                        /* opcode 66h 0Fh 71h 42h  not defined */
                        /* opcode 66h 0Fh 71h 43h  not defined */
                        /* opcode 66h 0Fh 71h 44h  not defined */
                        /* opcode 66h 0Fh 71h 45h  not defined */
                        /* opcode 66h 0Fh 71h 46h  not defined */
                        /* opcode 66h 0Fh 71h 47h  not defined */
                        /* opcode 66h 0Fh 71h 48h  not defined */
                        /* opcode 66h 0Fh 71h 49h  not defined */
                        /* opcode 66h 0Fh 71h 4Ah  not defined */
                        /* opcode 66h 0Fh 71h 4Bh  not defined */
                        /* opcode 66h 0Fh 71h 4Ch  not defined */
                        /* opcode 66h 0Fh 71h 4Dh  not defined */
                        /* opcode 66h 0Fh 71h 4Eh  not defined */
                        /* opcode 66h 0Fh 71h 4Fh  not defined */
                        /* opcode 66h 0Fh 71h 50h  not defined */
                        /* opcode 66h 0Fh 71h 51h  not defined */
                        /* opcode 66h 0Fh 71h 52h  not defined */
                        /* opcode 66h 0Fh 71h 53h  not defined */
                        /* opcode 66h 0Fh 71h 54h  not defined */
                        /* opcode 66h 0Fh 71h 55h  not defined */
                        /* opcode 66h 0Fh 71h 56h  not defined */
                        /* opcode 66h 0Fh 71h 57h  not defined */
                        /* opcode 66h 0Fh 71h 58h  not defined */
                        /* opcode 66h 0Fh 71h 59h  not defined */
                        /* opcode 66h 0Fh 71h 5Ah  not defined */
                        /* opcode 66h 0Fh 71h 5Bh  not defined */
                        /* opcode 66h 0Fh 71h 5Ch  not defined */
                        /* opcode 66h 0Fh 71h 5Dh  not defined */
                        /* opcode 66h 0Fh 71h 5Eh  not defined */
                        /* opcode 66h 0Fh 71h 5Fh  not defined */
                        /* opcode 66h 0Fh 71h 60h  not defined */
                        /* opcode 66h 0Fh 71h 61h  not defined */
                        /* opcode 66h 0Fh 71h 62h  not defined */
                        /* opcode 66h 0Fh 71h 63h  not defined */
                        /* opcode 66h 0Fh 71h 64h  not defined */
                        /* opcode 66h 0Fh 71h 65h  not defined */
                        /* opcode 66h 0Fh 71h 66h  not defined */
                        /* opcode 66h 0Fh 71h 67h  not defined */
                        /* opcode 66h 0Fh 71h 68h  not defined */
                        /* opcode 66h 0Fh 71h 69h  not defined */
                        /* opcode 66h 0Fh 71h 6Ah  not defined */
                        /* opcode 66h 0Fh 71h 6Bh  not defined */
                        /* opcode 66h 0Fh 71h 6Ch  not defined */
                        /* opcode 66h 0Fh 71h 6Dh  not defined */
                        /* opcode 66h 0Fh 71h 6Eh  not defined */
                        /* opcode 66h 0Fh 71h 6Fh  not defined */
                        /* opcode 66h 0Fh 71h 70h  not defined */
                        /* opcode 66h 0Fh 71h 71h  not defined */
                        /* opcode 66h 0Fh 71h 72h  not defined */
                        /* opcode 66h 0Fh 71h 73h  not defined */
                        /* opcode 66h 0Fh 71h 74h  not defined */
                        /* opcode 66h 0Fh 71h 75h  not defined */
                        /* opcode 66h 0Fh 71h 76h  not defined */
                        /* opcode 66h 0Fh 71h 77h  not defined */
                        /* opcode 66h 0Fh 71h 78h  not defined */
                        /* opcode 66h 0Fh 71h 79h  not defined */
                        /* opcode 66h 0Fh 71h 7Ah  not defined */
                        /* opcode 66h 0Fh 71h 7Bh  not defined */
                        /* opcode 66h 0Fh 71h 7Ch  not defined */
                        /* opcode 66h 0Fh 71h 7Dh  not defined */
                        /* opcode 66h 0Fh 71h 7Eh  not defined */
                        /* opcode 66h 0Fh 71h 7Fh  not defined */
                        /* opcode 66h 0Fh 71h 80h  not defined */
                        /* opcode 66h 0Fh 71h 81h  not defined */
                        /* opcode 66h 0Fh 71h 82h  not defined */
                        /* opcode 66h 0Fh 71h 83h  not defined */
                        /* opcode 66h 0Fh 71h 84h  not defined */
                        /* opcode 66h 0Fh 71h 85h  not defined */
                        /* opcode 66h 0Fh 71h 86h  not defined */
                        /* opcode 66h 0Fh 71h 87h  not defined */
                        /* opcode 66h 0Fh 71h 88h  not defined */
                        /* opcode 66h 0Fh 71h 89h  not defined */
                        /* opcode 66h 0Fh 71h 8Ah  not defined */
                        /* opcode 66h 0Fh 71h 8Bh  not defined */
                        /* opcode 66h 0Fh 71h 8Ch  not defined */
                        /* opcode 66h 0Fh 71h 8Dh  not defined */
                        /* opcode 66h 0Fh 71h 8Eh  not defined */
                        /* opcode 66h 0Fh 71h 8Fh  not defined */
                        /* opcode 66h 0Fh 71h 90h  not defined */
                        /* opcode 66h 0Fh 71h 91h  not defined */
                        /* opcode 66h 0Fh 71h 92h  not defined */
                        /* opcode 66h 0Fh 71h 93h  not defined */
                        /* opcode 66h 0Fh 71h 94h  not defined */
                        /* opcode 66h 0Fh 71h 95h  not defined */
                        /* opcode 66h 0Fh 71h 96h  not defined */
                        /* opcode 66h 0Fh 71h 97h  not defined */
                        /* opcode 66h 0Fh 71h 98h  not defined */
                        /* opcode 66h 0Fh 71h 99h  not defined */
                        /* opcode 66h 0Fh 71h 9Ah  not defined */
                        /* opcode 66h 0Fh 71h 9Bh  not defined */
                        /* opcode 66h 0Fh 71h 9Ch  not defined */
                        /* opcode 66h 0Fh 71h 9Dh  not defined */
                        /* opcode 66h 0Fh 71h 9Eh  not defined */
                        /* opcode 66h 0Fh 71h 9Fh  not defined */
                        /* opcode 66h 0Fh 71h A0h  not defined */
                        /* opcode 66h 0Fh 71h A1h  not defined */
                        /* opcode 66h 0Fh 71h A2h  not defined */
                        /* opcode 66h 0Fh 71h A3h  not defined */
                        /* opcode 66h 0Fh 71h A4h  not defined */
                        /* opcode 66h 0Fh 71h A5h  not defined */
                        /* opcode 66h 0Fh 71h A6h  not defined */
                        /* opcode 66h 0Fh 71h A7h  not defined */
                        /* opcode 66h 0Fh 71h A8h  not defined */
                        /* opcode 66h 0Fh 71h A9h  not defined */
                        /* opcode 66h 0Fh 71h AAh  not defined */
                        /* opcode 66h 0Fh 71h ABh  not defined */
                        /* opcode 66h 0Fh 71h ACh  not defined */
                        /* opcode 66h 0Fh 71h ADh  not defined */
                        /* opcode 66h 0Fh 71h AEh  not defined */
                        /* opcode 66h 0Fh 71h AFh  not defined */
                        /* opcode 66h 0Fh 71h B0h  not defined */
                        /* opcode 66h 0Fh 71h B1h  not defined */
                        /* opcode 66h 0Fh 71h B2h  not defined */
                        /* opcode 66h 0Fh 71h B3h  not defined */
                        /* opcode 66h 0Fh 71h B4h  not defined */
                        /* opcode 66h 0Fh 71h B5h  not defined */
                        /* opcode 66h 0Fh 71h B6h  not defined */
                        /* opcode 66h 0Fh 71h B7h  not defined */
                        /* opcode 66h 0Fh 71h B8h  not defined */
                        /* opcode 66h 0Fh 71h B9h  not defined */
                        /* opcode 66h 0Fh 71h BAh  not defined */
                        /* opcode 66h 0Fh 71h BBh  not defined */
                        /* opcode 66h 0Fh 71h BCh  not defined */
                        /* opcode 66h 0Fh 71h BDh  not defined */
                        /* opcode 66h 0Fh 71h BEh  not defined */
                        /* opcode 66h 0Fh 71h BFh  not defined */
                        /* opcode 66h 0Fh 71h C0h  not defined */
                        /* opcode 66h 0Fh 71h C1h  not defined */
                        /* opcode 66h 0Fh 71h C2h  not defined */
                        /* opcode 66h 0Fh 71h C3h  not defined */
                        /* opcode 66h 0Fh 71h C4h  not defined */
                        /* opcode 66h 0Fh 71h C5h  not defined */
                        /* opcode 66h 0Fh 71h C6h  not defined */
                        /* opcode 66h 0Fh 71h C7h  not defined */
                        /* opcode 66h 0Fh 71h C8h  not defined */
                        /* opcode 66h 0Fh 71h C9h  not defined */
                        /* opcode 66h 0Fh 71h CAh  not defined */
                        /* opcode 66h 0Fh 71h CBh  not defined */
                        /* opcode 66h 0Fh 71h CCh  not defined */
                        /* opcode 66h 0Fh 71h CDh  not defined */
                        /* opcode 66h 0Fh 71h CEh  not defined */
                        /* opcode 66h 0Fh 71h CFh  not defined */
                        case 0xD0: /* 66h 0Fh 71h D0h PSRLW sse(r/m),i mod=3 reg=2 rm=0      spec: 0x0F 0x71 mod/reg/rm /2 ib mprefix(0x66) mod==3 */
                        case 0xD1: /* 66h 0Fh 71h D1h PSRLW sse(r/m),i mod=3 reg=2 rm=1      spec: 0x0F 0x71 mod/reg/rm /2 ib mprefix(0x66) mod==3 */
                        case 0xD2: /* 66h 0Fh 71h D2h PSRLW sse(r/m),i mod=3 reg=2 rm=2      spec: 0x0F 0x71 mod/reg/rm /2 ib mprefix(0x66) mod==3 */
                        case 0xD3: /* 66h 0Fh 71h D3h PSRLW sse(r/m),i mod=3 reg=2 rm=3      spec: 0x0F 0x71 mod/reg/rm /2 ib mprefix(0x66) mod==3 */
                        case 0xD4: /* 66h 0Fh 71h D4h PSRLW sse(r/m),i mod=3 reg=2 rm=4      spec: 0x0F 0x71 mod/reg/rm /2 ib mprefix(0x66) mod==3 */
                        case 0xD5: /* 66h 0Fh 71h D5h PSRLW sse(r/m),i mod=3 reg=2 rm=5      spec: 0x0F 0x71 mod/reg/rm /2 ib mprefix(0x66) mod==3 */
                        case 0xD6: /* 66h 0Fh 71h D6h PSRLW sse(r/m),i mod=3 reg=2 rm=6      spec: 0x0F 0x71 mod/reg/rm /2 ib mprefix(0x66) mod==3 */
                        case 0xD7: /* 66h 0Fh 71h D7h PSRLW sse(r/m),i mod=3 reg=2 rm=7      spec: 0x0F 0x71 mod/reg/rm /2 ib mprefix(0x66) mod==3 */
                            imm=IPFB();
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSRLW %s,0x%02lX",IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""),(unsigned long)((uint32_t)imm));
                            break;
                        /* opcode 66h 0Fh 71h D8h  not defined */
                        /* opcode 66h 0Fh 71h D9h  not defined */
                        /* opcode 66h 0Fh 71h DAh  not defined */
                        /* opcode 66h 0Fh 71h DBh  not defined */
                        /* opcode 66h 0Fh 71h DCh  not defined */
                        /* opcode 66h 0Fh 71h DDh  not defined */
                        /* opcode 66h 0Fh 71h DEh  not defined */
                        /* opcode 66h 0Fh 71h DFh  not defined */
                        case 0xE0: /* 66h 0Fh 71h E0h PSRAW sse(r/m),i mod=3 reg=4 rm=0      spec: 0x0F 0x71 mod/reg/rm /4 ib mprefix(0x66) mod==3 */
                        case 0xE1: /* 66h 0Fh 71h E1h PSRAW sse(r/m),i mod=3 reg=4 rm=1      spec: 0x0F 0x71 mod/reg/rm /4 ib mprefix(0x66) mod==3 */
                        case 0xE2: /* 66h 0Fh 71h E2h PSRAW sse(r/m),i mod=3 reg=4 rm=2      spec: 0x0F 0x71 mod/reg/rm /4 ib mprefix(0x66) mod==3 */
                        case 0xE3: /* 66h 0Fh 71h E3h PSRAW sse(r/m),i mod=3 reg=4 rm=3      spec: 0x0F 0x71 mod/reg/rm /4 ib mprefix(0x66) mod==3 */
                        case 0xE4: /* 66h 0Fh 71h E4h PSRAW sse(r/m),i mod=3 reg=4 rm=4      spec: 0x0F 0x71 mod/reg/rm /4 ib mprefix(0x66) mod==3 */
                        case 0xE5: /* 66h 0Fh 71h E5h PSRAW sse(r/m),i mod=3 reg=4 rm=5      spec: 0x0F 0x71 mod/reg/rm /4 ib mprefix(0x66) mod==3 */
                        case 0xE6: /* 66h 0Fh 71h E6h PSRAW sse(r/m),i mod=3 reg=4 rm=6      spec: 0x0F 0x71 mod/reg/rm /4 ib mprefix(0x66) mod==3 */
                        case 0xE7: /* 66h 0Fh 71h E7h PSRAW sse(r/m),i mod=3 reg=4 rm=7      spec: 0x0F 0x71 mod/reg/rm /4 ib mprefix(0x66) mod==3 */
                            imm=IPFB();
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSRAW %s,0x%02lX",IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""),(unsigned long)((uint32_t)imm));
                            break;
                        /* opcode 66h 0Fh 71h E8h  not defined */
                        /* opcode 66h 0Fh 71h E9h  not defined */
                        /* opcode 66h 0Fh 71h EAh  not defined */
                        /* opcode 66h 0Fh 71h EBh  not defined */
                        /* opcode 66h 0Fh 71h ECh  not defined */
                        /* opcode 66h 0Fh 71h EDh  not defined */
                        /* opcode 66h 0Fh 71h EEh  not defined */
                        /* opcode 66h 0Fh 71h EFh  not defined */
                        case 0xF0: /* 66h 0Fh 71h F0h PSLLW sse(r/m),i mod=3 reg=6 rm=0      spec: 0x0F 0x71 mod/reg/rm /6 ib mprefix(0x66) mod==3 */
                        case 0xF1: /* 66h 0Fh 71h F1h PSLLW sse(r/m),i mod=3 reg=6 rm=1      spec: 0x0F 0x71 mod/reg/rm /6 ib mprefix(0x66) mod==3 */
                        case 0xF2: /* 66h 0Fh 71h F2h PSLLW sse(r/m),i mod=3 reg=6 rm=2      spec: 0x0F 0x71 mod/reg/rm /6 ib mprefix(0x66) mod==3 */
                        case 0xF3: /* 66h 0Fh 71h F3h PSLLW sse(r/m),i mod=3 reg=6 rm=3      spec: 0x0F 0x71 mod/reg/rm /6 ib mprefix(0x66) mod==3 */
                        case 0xF4: /* 66h 0Fh 71h F4h PSLLW sse(r/m),i mod=3 reg=6 rm=4      spec: 0x0F 0x71 mod/reg/rm /6 ib mprefix(0x66) mod==3 */
                        case 0xF5: /* 66h 0Fh 71h F5h PSLLW sse(r/m),i mod=3 reg=6 rm=5      spec: 0x0F 0x71 mod/reg/rm /6 ib mprefix(0x66) mod==3 */
                        case 0xF6: /* 66h 0Fh 71h F6h PSLLW sse(r/m),i mod=3 reg=6 rm=6      spec: 0x0F 0x71 mod/reg/rm /6 ib mprefix(0x66) mod==3 */
                        case 0xF7: /* 66h 0Fh 71h F7h PSLLW sse(r/m),i mod=3 reg=6 rm=7      spec: 0x0F 0x71 mod/reg/rm /6 ib mprefix(0x66) mod==3 */
                            imm=IPFB();
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSLLW %s,0x%02lX",IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""),(unsigned long)((uint32_t)imm));
                            break;
                        /* opcode 66h 0Fh 71h F8h  not defined */
                        /* opcode 66h 0Fh 71h F9h  not defined */
                        /* opcode 66h 0Fh 71h FAh  not defined */
                        /* opcode 66h 0Fh 71h FBh  not defined */
                        /* opcode 66h 0Fh 71h FCh  not defined */
                        /* opcode 66h 0Fh 71h FDh  not defined */
                        /* opcode 66h 0Fh 71h FEh  not defined */
                        /* opcode 66h 0Fh 71h FFh  not defined */
                        default:
                            goto _x86decode_begin_code32_addr32_opcode_parse_0F71_generic; /* Fall through to normal 0x0F 0x71 opcode handling */
                    };
/* End of opcodes starting with 66h 0Fh 71h */
                    break;
                case 0x72: /* 66h 0Fh 72h        spec:  */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    _x86decode_begin_code32_addr32_opcode_parse_660F72:
/* Opcodes starting with 66h 0Fh 72h */
                    switch (mrm.byte) {
                        /* opcode 66h 0Fh 72h 00h  not defined */
                        /* opcode 66h 0Fh 72h 01h  not defined */
                        /* opcode 66h 0Fh 72h 02h  not defined */
                        /* opcode 66h 0Fh 72h 03h  not defined */
                        /* opcode 66h 0Fh 72h 04h  not defined */
                        /* opcode 66h 0Fh 72h 05h  not defined */
                        /* opcode 66h 0Fh 72h 06h  not defined */
                        /* opcode 66h 0Fh 72h 07h  not defined */
                        /* opcode 66h 0Fh 72h 08h  not defined */
                        /* opcode 66h 0Fh 72h 09h  not defined */
                        /* opcode 66h 0Fh 72h 0Ah  not defined */
                        /* opcode 66h 0Fh 72h 0Bh  not defined */
                        /* opcode 66h 0Fh 72h 0Ch  not defined */
                        /* opcode 66h 0Fh 72h 0Dh  not defined */
                        /* opcode 66h 0Fh 72h 0Eh  not defined */
                        /* opcode 66h 0Fh 72h 0Fh  not defined */
                        /* opcode 66h 0Fh 72h 10h  not defined */
                        /* opcode 66h 0Fh 72h 11h  not defined */
                        /* opcode 66h 0Fh 72h 12h  not defined */
                        /* opcode 66h 0Fh 72h 13h  not defined */
                        /* opcode 66h 0Fh 72h 14h  not defined */
                        /* opcode 66h 0Fh 72h 15h  not defined */
                        /* opcode 66h 0Fh 72h 16h  not defined */
                        /* opcode 66h 0Fh 72h 17h  not defined */
                        /* opcode 66h 0Fh 72h 18h  not defined */
                        /* opcode 66h 0Fh 72h 19h  not defined */
                        /* opcode 66h 0Fh 72h 1Ah  not defined */
                        /* opcode 66h 0Fh 72h 1Bh  not defined */
                        /* opcode 66h 0Fh 72h 1Ch  not defined */
                        /* opcode 66h 0Fh 72h 1Dh  not defined */
                        /* opcode 66h 0Fh 72h 1Eh  not defined */
                        /* opcode 66h 0Fh 72h 1Fh  not defined */
                        /* opcode 66h 0Fh 72h 20h  not defined */
                        /* opcode 66h 0Fh 72h 21h  not defined */
                        /* opcode 66h 0Fh 72h 22h  not defined */
                        /* opcode 66h 0Fh 72h 23h  not defined */
                        /* opcode 66h 0Fh 72h 24h  not defined */
                        /* opcode 66h 0Fh 72h 25h  not defined */
                        /* opcode 66h 0Fh 72h 26h  not defined */
                        /* opcode 66h 0Fh 72h 27h  not defined */
                        /* opcode 66h 0Fh 72h 28h  not defined */
                        /* opcode 66h 0Fh 72h 29h  not defined */
                        /* opcode 66h 0Fh 72h 2Ah  not defined */
                        /* opcode 66h 0Fh 72h 2Bh  not defined */
                        /* opcode 66h 0Fh 72h 2Ch  not defined */
                        /* opcode 66h 0Fh 72h 2Dh  not defined */
                        /* opcode 66h 0Fh 72h 2Eh  not defined */
                        /* opcode 66h 0Fh 72h 2Fh  not defined */
                        /* opcode 66h 0Fh 72h 30h  not defined */
                        /* opcode 66h 0Fh 72h 31h  not defined */
                        /* opcode 66h 0Fh 72h 32h  not defined */
                        /* opcode 66h 0Fh 72h 33h  not defined */
                        /* opcode 66h 0Fh 72h 34h  not defined */
                        /* opcode 66h 0Fh 72h 35h  not defined */
                        /* opcode 66h 0Fh 72h 36h  not defined */
                        /* opcode 66h 0Fh 72h 37h  not defined */
                        /* opcode 66h 0Fh 72h 38h  not defined */
                        /* opcode 66h 0Fh 72h 39h  not defined */
                        /* opcode 66h 0Fh 72h 3Ah  not defined */
                        /* opcode 66h 0Fh 72h 3Bh  not defined */
                        /* opcode 66h 0Fh 72h 3Ch  not defined */
                        /* opcode 66h 0Fh 72h 3Dh  not defined */
                        /* opcode 66h 0Fh 72h 3Eh  not defined */
                        /* opcode 66h 0Fh 72h 3Fh  not defined */
                        /* opcode 66h 0Fh 72h 40h  not defined */
                        /* opcode 66h 0Fh 72h 41h  not defined */
                        /* opcode 66h 0Fh 72h 42h  not defined */
                        /* opcode 66h 0Fh 72h 43h  not defined */
                        /* opcode 66h 0Fh 72h 44h  not defined */
                        /* opcode 66h 0Fh 72h 45h  not defined */
                        /* opcode 66h 0Fh 72h 46h  not defined */
                        /* opcode 66h 0Fh 72h 47h  not defined */
                        /* opcode 66h 0Fh 72h 48h  not defined */
                        /* opcode 66h 0Fh 72h 49h  not defined */
                        /* opcode 66h 0Fh 72h 4Ah  not defined */
                        /* opcode 66h 0Fh 72h 4Bh  not defined */
                        /* opcode 66h 0Fh 72h 4Ch  not defined */
                        /* opcode 66h 0Fh 72h 4Dh  not defined */
                        /* opcode 66h 0Fh 72h 4Eh  not defined */
                        /* opcode 66h 0Fh 72h 4Fh  not defined */
                        /* opcode 66h 0Fh 72h 50h  not defined */
                        /* opcode 66h 0Fh 72h 51h  not defined */
                        /* opcode 66h 0Fh 72h 52h  not defined */
                        /* opcode 66h 0Fh 72h 53h  not defined */
                        /* opcode 66h 0Fh 72h 54h  not defined */
                        /* opcode 66h 0Fh 72h 55h  not defined */
                        /* opcode 66h 0Fh 72h 56h  not defined */
                        /* opcode 66h 0Fh 72h 57h  not defined */
                        /* opcode 66h 0Fh 72h 58h  not defined */
                        /* opcode 66h 0Fh 72h 59h  not defined */
                        /* opcode 66h 0Fh 72h 5Ah  not defined */
                        /* opcode 66h 0Fh 72h 5Bh  not defined */
                        /* opcode 66h 0Fh 72h 5Ch  not defined */
                        /* opcode 66h 0Fh 72h 5Dh  not defined */
                        /* opcode 66h 0Fh 72h 5Eh  not defined */
                        /* opcode 66h 0Fh 72h 5Fh  not defined */
                        /* opcode 66h 0Fh 72h 60h  not defined */
                        /* opcode 66h 0Fh 72h 61h  not defined */
                        /* opcode 66h 0Fh 72h 62h  not defined */
                        /* opcode 66h 0Fh 72h 63h  not defined */
                        /* opcode 66h 0Fh 72h 64h  not defined */
                        /* opcode 66h 0Fh 72h 65h  not defined */
                        /* opcode 66h 0Fh 72h 66h  not defined */
                        /* opcode 66h 0Fh 72h 67h  not defined */
                        /* opcode 66h 0Fh 72h 68h  not defined */
                        /* opcode 66h 0Fh 72h 69h  not defined */
                        /* opcode 66h 0Fh 72h 6Ah  not defined */
                        /* opcode 66h 0Fh 72h 6Bh  not defined */
                        /* opcode 66h 0Fh 72h 6Ch  not defined */
                        /* opcode 66h 0Fh 72h 6Dh  not defined */
                        /* opcode 66h 0Fh 72h 6Eh  not defined */
                        /* opcode 66h 0Fh 72h 6Fh  not defined */
                        /* opcode 66h 0Fh 72h 70h  not defined */
                        /* opcode 66h 0Fh 72h 71h  not defined */
                        /* opcode 66h 0Fh 72h 72h  not defined */
                        /* opcode 66h 0Fh 72h 73h  not defined */
                        /* opcode 66h 0Fh 72h 74h  not defined */
                        /* opcode 66h 0Fh 72h 75h  not defined */
                        /* opcode 66h 0Fh 72h 76h  not defined */
                        /* opcode 66h 0Fh 72h 77h  not defined */
                        /* opcode 66h 0Fh 72h 78h  not defined */
                        /* opcode 66h 0Fh 72h 79h  not defined */
                        /* opcode 66h 0Fh 72h 7Ah  not defined */
                        /* opcode 66h 0Fh 72h 7Bh  not defined */
                        /* opcode 66h 0Fh 72h 7Ch  not defined */
                        /* opcode 66h 0Fh 72h 7Dh  not defined */
                        /* opcode 66h 0Fh 72h 7Eh  not defined */
                        /* opcode 66h 0Fh 72h 7Fh  not defined */
                        /* opcode 66h 0Fh 72h 80h  not defined */
                        /* opcode 66h 0Fh 72h 81h  not defined */
                        /* opcode 66h 0Fh 72h 82h  not defined */
                        /* opcode 66h 0Fh 72h 83h  not defined */
                        /* opcode 66h 0Fh 72h 84h  not defined */
                        /* opcode 66h 0Fh 72h 85h  not defined */
                        /* opcode 66h 0Fh 72h 86h  not defined */
                        /* opcode 66h 0Fh 72h 87h  not defined */
                        /* opcode 66h 0Fh 72h 88h  not defined */
                        /* opcode 66h 0Fh 72h 89h  not defined */
                        /* opcode 66h 0Fh 72h 8Ah  not defined */
                        /* opcode 66h 0Fh 72h 8Bh  not defined */
                        /* opcode 66h 0Fh 72h 8Ch  not defined */
                        /* opcode 66h 0Fh 72h 8Dh  not defined */
                        /* opcode 66h 0Fh 72h 8Eh  not defined */
                        /* opcode 66h 0Fh 72h 8Fh  not defined */
                        /* opcode 66h 0Fh 72h 90h  not defined */
                        /* opcode 66h 0Fh 72h 91h  not defined */
                        /* opcode 66h 0Fh 72h 92h  not defined */
                        /* opcode 66h 0Fh 72h 93h  not defined */
                        /* opcode 66h 0Fh 72h 94h  not defined */
                        /* opcode 66h 0Fh 72h 95h  not defined */
                        /* opcode 66h 0Fh 72h 96h  not defined */
                        /* opcode 66h 0Fh 72h 97h  not defined */
                        /* opcode 66h 0Fh 72h 98h  not defined */
                        /* opcode 66h 0Fh 72h 99h  not defined */
                        /* opcode 66h 0Fh 72h 9Ah  not defined */
                        /* opcode 66h 0Fh 72h 9Bh  not defined */
                        /* opcode 66h 0Fh 72h 9Ch  not defined */
                        /* opcode 66h 0Fh 72h 9Dh  not defined */
                        /* opcode 66h 0Fh 72h 9Eh  not defined */
                        /* opcode 66h 0Fh 72h 9Fh  not defined */
                        /* opcode 66h 0Fh 72h A0h  not defined */
                        /* opcode 66h 0Fh 72h A1h  not defined */
                        /* opcode 66h 0Fh 72h A2h  not defined */
                        /* opcode 66h 0Fh 72h A3h  not defined */
                        /* opcode 66h 0Fh 72h A4h  not defined */
                        /* opcode 66h 0Fh 72h A5h  not defined */
                        /* opcode 66h 0Fh 72h A6h  not defined */
                        /* opcode 66h 0Fh 72h A7h  not defined */
                        /* opcode 66h 0Fh 72h A8h  not defined */
                        /* opcode 66h 0Fh 72h A9h  not defined */
                        /* opcode 66h 0Fh 72h AAh  not defined */
                        /* opcode 66h 0Fh 72h ABh  not defined */
                        /* opcode 66h 0Fh 72h ACh  not defined */
                        /* opcode 66h 0Fh 72h ADh  not defined */
                        /* opcode 66h 0Fh 72h AEh  not defined */
                        /* opcode 66h 0Fh 72h AFh  not defined */
                        /* opcode 66h 0Fh 72h B0h  not defined */
                        /* opcode 66h 0Fh 72h B1h  not defined */
                        /* opcode 66h 0Fh 72h B2h  not defined */
                        /* opcode 66h 0Fh 72h B3h  not defined */
                        /* opcode 66h 0Fh 72h B4h  not defined */
                        /* opcode 66h 0Fh 72h B5h  not defined */
                        /* opcode 66h 0Fh 72h B6h  not defined */
                        /* opcode 66h 0Fh 72h B7h  not defined */
                        /* opcode 66h 0Fh 72h B8h  not defined */
                        /* opcode 66h 0Fh 72h B9h  not defined */
                        /* opcode 66h 0Fh 72h BAh  not defined */
                        /* opcode 66h 0Fh 72h BBh  not defined */
                        /* opcode 66h 0Fh 72h BCh  not defined */
                        /* opcode 66h 0Fh 72h BDh  not defined */
                        /* opcode 66h 0Fh 72h BEh  not defined */
                        /* opcode 66h 0Fh 72h BFh  not defined */
                        /* opcode 66h 0Fh 72h C0h  not defined */
                        /* opcode 66h 0Fh 72h C1h  not defined */
                        /* opcode 66h 0Fh 72h C2h  not defined */
                        /* opcode 66h 0Fh 72h C3h  not defined */
                        /* opcode 66h 0Fh 72h C4h  not defined */
                        /* opcode 66h 0Fh 72h C5h  not defined */
                        /* opcode 66h 0Fh 72h C6h  not defined */
                        /* opcode 66h 0Fh 72h C7h  not defined */
                        /* opcode 66h 0Fh 72h C8h  not defined */
                        /* opcode 66h 0Fh 72h C9h  not defined */
                        /* opcode 66h 0Fh 72h CAh  not defined */
                        /* opcode 66h 0Fh 72h CBh  not defined */
                        /* opcode 66h 0Fh 72h CCh  not defined */
                        /* opcode 66h 0Fh 72h CDh  not defined */
                        /* opcode 66h 0Fh 72h CEh  not defined */
                        /* opcode 66h 0Fh 72h CFh  not defined */
                        case 0xD0: /* 66h 0Fh 72h D0h PSRLD sse(r/m),i mod=3 reg=2 rm=0      spec: 0x0F 0x72 mod/reg/rm /2 ib mprefix(0x66) mod==3 */
                        case 0xD1: /* 66h 0Fh 72h D1h PSRLD sse(r/m),i mod=3 reg=2 rm=1      spec: 0x0F 0x72 mod/reg/rm /2 ib mprefix(0x66) mod==3 */
                        case 0xD2: /* 66h 0Fh 72h D2h PSRLD sse(r/m),i mod=3 reg=2 rm=2      spec: 0x0F 0x72 mod/reg/rm /2 ib mprefix(0x66) mod==3 */
                        case 0xD3: /* 66h 0Fh 72h D3h PSRLD sse(r/m),i mod=3 reg=2 rm=3      spec: 0x0F 0x72 mod/reg/rm /2 ib mprefix(0x66) mod==3 */
                        case 0xD4: /* 66h 0Fh 72h D4h PSRLD sse(r/m),i mod=3 reg=2 rm=4      spec: 0x0F 0x72 mod/reg/rm /2 ib mprefix(0x66) mod==3 */
                        case 0xD5: /* 66h 0Fh 72h D5h PSRLD sse(r/m),i mod=3 reg=2 rm=5      spec: 0x0F 0x72 mod/reg/rm /2 ib mprefix(0x66) mod==3 */
                        case 0xD6: /* 66h 0Fh 72h D6h PSRLD sse(r/m),i mod=3 reg=2 rm=6      spec: 0x0F 0x72 mod/reg/rm /2 ib mprefix(0x66) mod==3 */
                        case 0xD7: /* 66h 0Fh 72h D7h PSRLD sse(r/m),i mod=3 reg=2 rm=7      spec: 0x0F 0x72 mod/reg/rm /2 ib mprefix(0x66) mod==3 */
                            imm=IPFB();
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSRLD %s,0x%02lX",IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""),(unsigned long)((uint32_t)imm));
                            break;
                        /* opcode 66h 0Fh 72h D8h  not defined */
                        /* opcode 66h 0Fh 72h D9h  not defined */
                        /* opcode 66h 0Fh 72h DAh  not defined */
                        /* opcode 66h 0Fh 72h DBh  not defined */
                        /* opcode 66h 0Fh 72h DCh  not defined */
                        /* opcode 66h 0Fh 72h DDh  not defined */
                        /* opcode 66h 0Fh 72h DEh  not defined */
                        /* opcode 66h 0Fh 72h DFh  not defined */
                        case 0xE0: /* 66h 0Fh 72h E0h PSRAD sse(r/m),i mod=3 reg=4 rm=0      spec: 0x0F 0x72 mod/reg/rm /4 ib mprefix(0x66) mod==3 */
                        case 0xE1: /* 66h 0Fh 72h E1h PSRAD sse(r/m),i mod=3 reg=4 rm=1      spec: 0x0F 0x72 mod/reg/rm /4 ib mprefix(0x66) mod==3 */
                        case 0xE2: /* 66h 0Fh 72h E2h PSRAD sse(r/m),i mod=3 reg=4 rm=2      spec: 0x0F 0x72 mod/reg/rm /4 ib mprefix(0x66) mod==3 */
                        case 0xE3: /* 66h 0Fh 72h E3h PSRAD sse(r/m),i mod=3 reg=4 rm=3      spec: 0x0F 0x72 mod/reg/rm /4 ib mprefix(0x66) mod==3 */
                        case 0xE4: /* 66h 0Fh 72h E4h PSRAD sse(r/m),i mod=3 reg=4 rm=4      spec: 0x0F 0x72 mod/reg/rm /4 ib mprefix(0x66) mod==3 */
                        case 0xE5: /* 66h 0Fh 72h E5h PSRAD sse(r/m),i mod=3 reg=4 rm=5      spec: 0x0F 0x72 mod/reg/rm /4 ib mprefix(0x66) mod==3 */
                        case 0xE6: /* 66h 0Fh 72h E6h PSRAD sse(r/m),i mod=3 reg=4 rm=6      spec: 0x0F 0x72 mod/reg/rm /4 ib mprefix(0x66) mod==3 */
                        case 0xE7: /* 66h 0Fh 72h E7h PSRAD sse(r/m),i mod=3 reg=4 rm=7      spec: 0x0F 0x72 mod/reg/rm /4 ib mprefix(0x66) mod==3 */
                            imm=IPFB();
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSRAD %s,0x%02lX",IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""),(unsigned long)((uint32_t)imm));
                            break;
                        /* opcode 66h 0Fh 72h E8h  not defined */
                        /* opcode 66h 0Fh 72h E9h  not defined */
                        /* opcode 66h 0Fh 72h EAh  not defined */
                        /* opcode 66h 0Fh 72h EBh  not defined */
                        /* opcode 66h 0Fh 72h ECh  not defined */
                        /* opcode 66h 0Fh 72h EDh  not defined */
                        /* opcode 66h 0Fh 72h EEh  not defined */
                        /* opcode 66h 0Fh 72h EFh  not defined */
                        case 0xF0: /* 66h 0Fh 72h F0h PSLLD sse(r/m),i mod=3 reg=6 rm=0      spec: 0x0F 0x72 mod/reg/rm /6 ib mprefix(0x66) mod==3 */
                        case 0xF1: /* 66h 0Fh 72h F1h PSLLD sse(r/m),i mod=3 reg=6 rm=1      spec: 0x0F 0x72 mod/reg/rm /6 ib mprefix(0x66) mod==3 */
                        case 0xF2: /* 66h 0Fh 72h F2h PSLLD sse(r/m),i mod=3 reg=6 rm=2      spec: 0x0F 0x72 mod/reg/rm /6 ib mprefix(0x66) mod==3 */
                        case 0xF3: /* 66h 0Fh 72h F3h PSLLD sse(r/m),i mod=3 reg=6 rm=3      spec: 0x0F 0x72 mod/reg/rm /6 ib mprefix(0x66) mod==3 */
                        case 0xF4: /* 66h 0Fh 72h F4h PSLLD sse(r/m),i mod=3 reg=6 rm=4      spec: 0x0F 0x72 mod/reg/rm /6 ib mprefix(0x66) mod==3 */
                        case 0xF5: /* 66h 0Fh 72h F5h PSLLD sse(r/m),i mod=3 reg=6 rm=5      spec: 0x0F 0x72 mod/reg/rm /6 ib mprefix(0x66) mod==3 */
                        case 0xF6: /* 66h 0Fh 72h F6h PSLLD sse(r/m),i mod=3 reg=6 rm=6      spec: 0x0F 0x72 mod/reg/rm /6 ib mprefix(0x66) mod==3 */
                        case 0xF7: /* 66h 0Fh 72h F7h PSLLD sse(r/m),i mod=3 reg=6 rm=7      spec: 0x0F 0x72 mod/reg/rm /6 ib mprefix(0x66) mod==3 */
                            imm=IPFB();
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSLLD %s,0x%02lX",IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""),(unsigned long)((uint32_t)imm));
                            break;
                        /* opcode 66h 0Fh 72h F8h  not defined */
                        /* opcode 66h 0Fh 72h F9h  not defined */
                        /* opcode 66h 0Fh 72h FAh  not defined */
                        /* opcode 66h 0Fh 72h FBh  not defined */
                        /* opcode 66h 0Fh 72h FCh  not defined */
                        /* opcode 66h 0Fh 72h FDh  not defined */
                        /* opcode 66h 0Fh 72h FEh  not defined */
                        /* opcode 66h 0Fh 72h FFh  not defined */
                        default:
                            goto _x86decode_begin_code32_addr32_opcode_parse_0F72_generic; /* Fall through to normal 0x0F 0x72 opcode handling */
                    };
/* End of opcodes starting with 66h 0Fh 72h */
                    break;
                case 0x73: /* 66h 0Fh 73h        spec:  */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    _x86decode_begin_code32_addr32_opcode_parse_660F73:
/* Opcodes starting with 66h 0Fh 73h */
                    switch (mrm.byte) {
                        /* opcode 66h 0Fh 73h 00h  not defined */
                        /* opcode 66h 0Fh 73h 01h  not defined */
                        /* opcode 66h 0Fh 73h 02h  not defined */
                        /* opcode 66h 0Fh 73h 03h  not defined */
                        /* opcode 66h 0Fh 73h 04h  not defined */
                        /* opcode 66h 0Fh 73h 05h  not defined */
                        /* opcode 66h 0Fh 73h 06h  not defined */
                        /* opcode 66h 0Fh 73h 07h  not defined */
                        /* opcode 66h 0Fh 73h 08h  not defined */
                        /* opcode 66h 0Fh 73h 09h  not defined */
                        /* opcode 66h 0Fh 73h 0Ah  not defined */
                        /* opcode 66h 0Fh 73h 0Bh  not defined */
                        /* opcode 66h 0Fh 73h 0Ch  not defined */
                        /* opcode 66h 0Fh 73h 0Dh  not defined */
                        /* opcode 66h 0Fh 73h 0Eh  not defined */
                        /* opcode 66h 0Fh 73h 0Fh  not defined */
                        /* opcode 66h 0Fh 73h 10h  not defined */
                        /* opcode 66h 0Fh 73h 11h  not defined */
                        /* opcode 66h 0Fh 73h 12h  not defined */
                        /* opcode 66h 0Fh 73h 13h  not defined */
                        /* opcode 66h 0Fh 73h 14h  not defined */
                        /* opcode 66h 0Fh 73h 15h  not defined */
                        /* opcode 66h 0Fh 73h 16h  not defined */
                        /* opcode 66h 0Fh 73h 17h  not defined */
                        /* opcode 66h 0Fh 73h 18h  not defined */
                        /* opcode 66h 0Fh 73h 19h  not defined */
                        /* opcode 66h 0Fh 73h 1Ah  not defined */
                        /* opcode 66h 0Fh 73h 1Bh  not defined */
                        /* opcode 66h 0Fh 73h 1Ch  not defined */
                        /* opcode 66h 0Fh 73h 1Dh  not defined */
                        /* opcode 66h 0Fh 73h 1Eh  not defined */
                        /* opcode 66h 0Fh 73h 1Fh  not defined */
                        /* opcode 66h 0Fh 73h 20h  not defined */
                        /* opcode 66h 0Fh 73h 21h  not defined */
                        /* opcode 66h 0Fh 73h 22h  not defined */
                        /* opcode 66h 0Fh 73h 23h  not defined */
                        /* opcode 66h 0Fh 73h 24h  not defined */
                        /* opcode 66h 0Fh 73h 25h  not defined */
                        /* opcode 66h 0Fh 73h 26h  not defined */
                        /* opcode 66h 0Fh 73h 27h  not defined */
                        /* opcode 66h 0Fh 73h 28h  not defined */
                        /* opcode 66h 0Fh 73h 29h  not defined */
                        /* opcode 66h 0Fh 73h 2Ah  not defined */
                        /* opcode 66h 0Fh 73h 2Bh  not defined */
                        /* opcode 66h 0Fh 73h 2Ch  not defined */
                        /* opcode 66h 0Fh 73h 2Dh  not defined */
                        /* opcode 66h 0Fh 73h 2Eh  not defined */
                        /* opcode 66h 0Fh 73h 2Fh  not defined */
                        /* opcode 66h 0Fh 73h 30h  not defined */
                        /* opcode 66h 0Fh 73h 31h  not defined */
                        /* opcode 66h 0Fh 73h 32h  not defined */
                        /* opcode 66h 0Fh 73h 33h  not defined */
                        /* opcode 66h 0Fh 73h 34h  not defined */
                        /* opcode 66h 0Fh 73h 35h  not defined */
                        /* opcode 66h 0Fh 73h 36h  not defined */
                        /* opcode 66h 0Fh 73h 37h  not defined */
                        /* opcode 66h 0Fh 73h 38h  not defined */
                        /* opcode 66h 0Fh 73h 39h  not defined */
                        /* opcode 66h 0Fh 73h 3Ah  not defined */
                        /* opcode 66h 0Fh 73h 3Bh  not defined */
                        /* opcode 66h 0Fh 73h 3Ch  not defined */
                        /* opcode 66h 0Fh 73h 3Dh  not defined */
                        /* opcode 66h 0Fh 73h 3Eh  not defined */
                        /* opcode 66h 0Fh 73h 3Fh  not defined */
                        /* opcode 66h 0Fh 73h 40h  not defined */
                        /* opcode 66h 0Fh 73h 41h  not defined */
                        /* opcode 66h 0Fh 73h 42h  not defined */
                        /* opcode 66h 0Fh 73h 43h  not defined */
                        /* opcode 66h 0Fh 73h 44h  not defined */
                        /* opcode 66h 0Fh 73h 45h  not defined */
                        /* opcode 66h 0Fh 73h 46h  not defined */
                        /* opcode 66h 0Fh 73h 47h  not defined */
                        /* opcode 66h 0Fh 73h 48h  not defined */
                        /* opcode 66h 0Fh 73h 49h  not defined */
                        /* opcode 66h 0Fh 73h 4Ah  not defined */
                        /* opcode 66h 0Fh 73h 4Bh  not defined */
                        /* opcode 66h 0Fh 73h 4Ch  not defined */
                        /* opcode 66h 0Fh 73h 4Dh  not defined */
                        /* opcode 66h 0Fh 73h 4Eh  not defined */
                        /* opcode 66h 0Fh 73h 4Fh  not defined */
                        /* opcode 66h 0Fh 73h 50h  not defined */
                        /* opcode 66h 0Fh 73h 51h  not defined */
                        /* opcode 66h 0Fh 73h 52h  not defined */
                        /* opcode 66h 0Fh 73h 53h  not defined */
                        /* opcode 66h 0Fh 73h 54h  not defined */
                        /* opcode 66h 0Fh 73h 55h  not defined */
                        /* opcode 66h 0Fh 73h 56h  not defined */
                        /* opcode 66h 0Fh 73h 57h  not defined */
                        /* opcode 66h 0Fh 73h 58h  not defined */
                        /* opcode 66h 0Fh 73h 59h  not defined */
                        /* opcode 66h 0Fh 73h 5Ah  not defined */
                        /* opcode 66h 0Fh 73h 5Bh  not defined */
                        /* opcode 66h 0Fh 73h 5Ch  not defined */
                        /* opcode 66h 0Fh 73h 5Dh  not defined */
                        /* opcode 66h 0Fh 73h 5Eh  not defined */
                        /* opcode 66h 0Fh 73h 5Fh  not defined */
                        /* opcode 66h 0Fh 73h 60h  not defined */
                        /* opcode 66h 0Fh 73h 61h  not defined */
                        /* opcode 66h 0Fh 73h 62h  not defined */
                        /* opcode 66h 0Fh 73h 63h  not defined */
                        /* opcode 66h 0Fh 73h 64h  not defined */
                        /* opcode 66h 0Fh 73h 65h  not defined */
                        /* opcode 66h 0Fh 73h 66h  not defined */
                        /* opcode 66h 0Fh 73h 67h  not defined */
                        /* opcode 66h 0Fh 73h 68h  not defined */
                        /* opcode 66h 0Fh 73h 69h  not defined */
                        /* opcode 66h 0Fh 73h 6Ah  not defined */
                        /* opcode 66h 0Fh 73h 6Bh  not defined */
                        /* opcode 66h 0Fh 73h 6Ch  not defined */
                        /* opcode 66h 0Fh 73h 6Dh  not defined */
                        /* opcode 66h 0Fh 73h 6Eh  not defined */
                        /* opcode 66h 0Fh 73h 6Fh  not defined */
                        /* opcode 66h 0Fh 73h 70h  not defined */
                        /* opcode 66h 0Fh 73h 71h  not defined */
                        /* opcode 66h 0Fh 73h 72h  not defined */
                        /* opcode 66h 0Fh 73h 73h  not defined */
                        /* opcode 66h 0Fh 73h 74h  not defined */
                        /* opcode 66h 0Fh 73h 75h  not defined */
                        /* opcode 66h 0Fh 73h 76h  not defined */
                        /* opcode 66h 0Fh 73h 77h  not defined */
                        /* opcode 66h 0Fh 73h 78h  not defined */
                        /* opcode 66h 0Fh 73h 79h  not defined */
                        /* opcode 66h 0Fh 73h 7Ah  not defined */
                        /* opcode 66h 0Fh 73h 7Bh  not defined */
                        /* opcode 66h 0Fh 73h 7Ch  not defined */
                        /* opcode 66h 0Fh 73h 7Dh  not defined */
                        /* opcode 66h 0Fh 73h 7Eh  not defined */
                        /* opcode 66h 0Fh 73h 7Fh  not defined */
                        /* opcode 66h 0Fh 73h 80h  not defined */
                        /* opcode 66h 0Fh 73h 81h  not defined */
                        /* opcode 66h 0Fh 73h 82h  not defined */
                        /* opcode 66h 0Fh 73h 83h  not defined */
                        /* opcode 66h 0Fh 73h 84h  not defined */
                        /* opcode 66h 0Fh 73h 85h  not defined */
                        /* opcode 66h 0Fh 73h 86h  not defined */
                        /* opcode 66h 0Fh 73h 87h  not defined */
                        /* opcode 66h 0Fh 73h 88h  not defined */
                        /* opcode 66h 0Fh 73h 89h  not defined */
                        /* opcode 66h 0Fh 73h 8Ah  not defined */
                        /* opcode 66h 0Fh 73h 8Bh  not defined */
                        /* opcode 66h 0Fh 73h 8Ch  not defined */
                        /* opcode 66h 0Fh 73h 8Dh  not defined */
                        /* opcode 66h 0Fh 73h 8Eh  not defined */
                        /* opcode 66h 0Fh 73h 8Fh  not defined */
                        /* opcode 66h 0Fh 73h 90h  not defined */
                        /* opcode 66h 0Fh 73h 91h  not defined */
                        /* opcode 66h 0Fh 73h 92h  not defined */
                        /* opcode 66h 0Fh 73h 93h  not defined */
                        /* opcode 66h 0Fh 73h 94h  not defined */
                        /* opcode 66h 0Fh 73h 95h  not defined */
                        /* opcode 66h 0Fh 73h 96h  not defined */
                        /* opcode 66h 0Fh 73h 97h  not defined */
                        /* opcode 66h 0Fh 73h 98h  not defined */
                        /* opcode 66h 0Fh 73h 99h  not defined */
                        /* opcode 66h 0Fh 73h 9Ah  not defined */
                        /* opcode 66h 0Fh 73h 9Bh  not defined */
                        /* opcode 66h 0Fh 73h 9Ch  not defined */
                        /* opcode 66h 0Fh 73h 9Dh  not defined */
                        /* opcode 66h 0Fh 73h 9Eh  not defined */
                        /* opcode 66h 0Fh 73h 9Fh  not defined */
                        /* opcode 66h 0Fh 73h A0h  not defined */
                        /* opcode 66h 0Fh 73h A1h  not defined */
                        /* opcode 66h 0Fh 73h A2h  not defined */
                        /* opcode 66h 0Fh 73h A3h  not defined */
                        /* opcode 66h 0Fh 73h A4h  not defined */
                        /* opcode 66h 0Fh 73h A5h  not defined */
                        /* opcode 66h 0Fh 73h A6h  not defined */
                        /* opcode 66h 0Fh 73h A7h  not defined */
                        /* opcode 66h 0Fh 73h A8h  not defined */
                        /* opcode 66h 0Fh 73h A9h  not defined */
                        /* opcode 66h 0Fh 73h AAh  not defined */
                        /* opcode 66h 0Fh 73h ABh  not defined */
                        /* opcode 66h 0Fh 73h ACh  not defined */
                        /* opcode 66h 0Fh 73h ADh  not defined */
                        /* opcode 66h 0Fh 73h AEh  not defined */
                        /* opcode 66h 0Fh 73h AFh  not defined */
                        /* opcode 66h 0Fh 73h B0h  not defined */
                        /* opcode 66h 0Fh 73h B1h  not defined */
                        /* opcode 66h 0Fh 73h B2h  not defined */
                        /* opcode 66h 0Fh 73h B3h  not defined */
                        /* opcode 66h 0Fh 73h B4h  not defined */
                        /* opcode 66h 0Fh 73h B5h  not defined */
                        /* opcode 66h 0Fh 73h B6h  not defined */
                        /* opcode 66h 0Fh 73h B7h  not defined */
                        /* opcode 66h 0Fh 73h B8h  not defined */
                        /* opcode 66h 0Fh 73h B9h  not defined */
                        /* opcode 66h 0Fh 73h BAh  not defined */
                        /* opcode 66h 0Fh 73h BBh  not defined */
                        /* opcode 66h 0Fh 73h BCh  not defined */
                        /* opcode 66h 0Fh 73h BDh  not defined */
                        /* opcode 66h 0Fh 73h BEh  not defined */
                        /* opcode 66h 0Fh 73h BFh  not defined */
                        /* opcode 66h 0Fh 73h C0h  not defined */
                        /* opcode 66h 0Fh 73h C1h  not defined */
                        /* opcode 66h 0Fh 73h C2h  not defined */
                        /* opcode 66h 0Fh 73h C3h  not defined */
                        /* opcode 66h 0Fh 73h C4h  not defined */
                        /* opcode 66h 0Fh 73h C5h  not defined */
                        /* opcode 66h 0Fh 73h C6h  not defined */
                        /* opcode 66h 0Fh 73h C7h  not defined */
                        /* opcode 66h 0Fh 73h C8h  not defined */
                        /* opcode 66h 0Fh 73h C9h  not defined */
                        /* opcode 66h 0Fh 73h CAh  not defined */
                        /* opcode 66h 0Fh 73h CBh  not defined */
                        /* opcode 66h 0Fh 73h CCh  not defined */
                        /* opcode 66h 0Fh 73h CDh  not defined */
                        /* opcode 66h 0Fh 73h CEh  not defined */
                        /* opcode 66h 0Fh 73h CFh  not defined */
                        case 0xD0: /* 66h 0Fh 73h D0h PSRLQ sse(r/m),i mod=3 reg=2 rm=0      spec: 0x0F 0x73 mod/reg/rm /2 ib mprefix(0x66) mod==3 */
                        case 0xD1: /* 66h 0Fh 73h D1h PSRLQ sse(r/m),i mod=3 reg=2 rm=1      spec: 0x0F 0x73 mod/reg/rm /2 ib mprefix(0x66) mod==3 */
                        case 0xD2: /* 66h 0Fh 73h D2h PSRLQ sse(r/m),i mod=3 reg=2 rm=2      spec: 0x0F 0x73 mod/reg/rm /2 ib mprefix(0x66) mod==3 */
                        case 0xD3: /* 66h 0Fh 73h D3h PSRLQ sse(r/m),i mod=3 reg=2 rm=3      spec: 0x0F 0x73 mod/reg/rm /2 ib mprefix(0x66) mod==3 */
                        case 0xD4: /* 66h 0Fh 73h D4h PSRLQ sse(r/m),i mod=3 reg=2 rm=4      spec: 0x0F 0x73 mod/reg/rm /2 ib mprefix(0x66) mod==3 */
                        case 0xD5: /* 66h 0Fh 73h D5h PSRLQ sse(r/m),i mod=3 reg=2 rm=5      spec: 0x0F 0x73 mod/reg/rm /2 ib mprefix(0x66) mod==3 */
                        case 0xD6: /* 66h 0Fh 73h D6h PSRLQ sse(r/m),i mod=3 reg=2 rm=6      spec: 0x0F 0x73 mod/reg/rm /2 ib mprefix(0x66) mod==3 */
                        case 0xD7: /* 66h 0Fh 73h D7h PSRLQ sse(r/m),i mod=3 reg=2 rm=7      spec: 0x0F 0x73 mod/reg/rm /2 ib mprefix(0x66) mod==3 */
                            imm=IPFB();
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSRLQ %s,0x%02lX",IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""),(unsigned long)((uint32_t)imm));
                            break;
                        case 0xD8: /* 66h 0Fh 73h D8h PSRLDQ sse(r/m),i mod=3 reg=3 rm=0      spec: 0x0F 0x73 mod/reg/rm /3 ib mprefix(0x66) mod==3 */
                        case 0xD9: /* 66h 0Fh 73h D9h PSRLDQ sse(r/m),i mod=3 reg=3 rm=1      spec: 0x0F 0x73 mod/reg/rm /3 ib mprefix(0x66) mod==3 */
                        case 0xDA: /* 66h 0Fh 73h DAh PSRLDQ sse(r/m),i mod=3 reg=3 rm=2      spec: 0x0F 0x73 mod/reg/rm /3 ib mprefix(0x66) mod==3 */
                        case 0xDB: /* 66h 0Fh 73h DBh PSRLDQ sse(r/m),i mod=3 reg=3 rm=3      spec: 0x0F 0x73 mod/reg/rm /3 ib mprefix(0x66) mod==3 */
                        case 0xDC: /* 66h 0Fh 73h DCh PSRLDQ sse(r/m),i mod=3 reg=3 rm=4      spec: 0x0F 0x73 mod/reg/rm /3 ib mprefix(0x66) mod==3 */
                        case 0xDD: /* 66h 0Fh 73h DDh PSRLDQ sse(r/m),i mod=3 reg=3 rm=5      spec: 0x0F 0x73 mod/reg/rm /3 ib mprefix(0x66) mod==3 */
                        case 0xDE: /* 66h 0Fh 73h DEh PSRLDQ sse(r/m),i mod=3 reg=3 rm=6      spec: 0x0F 0x73 mod/reg/rm /3 ib mprefix(0x66) mod==3 */
                        case 0xDF: /* 66h 0Fh 73h DFh PSRLDQ sse(r/m),i mod=3 reg=3 rm=7      spec: 0x0F 0x73 mod/reg/rm /3 ib mprefix(0x66) mod==3 */
                            imm=IPFB();
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSRLDQ %s,0x%02lX",IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""),(unsigned long)((uint32_t)imm));
                            break;
                        /* opcode 66h 0Fh 73h E0h  not defined */
                        /* opcode 66h 0Fh 73h E1h  not defined */
                        /* opcode 66h 0Fh 73h E2h  not defined */
                        /* opcode 66h 0Fh 73h E3h  not defined */
                        /* opcode 66h 0Fh 73h E4h  not defined */
                        /* opcode 66h 0Fh 73h E5h  not defined */
                        /* opcode 66h 0Fh 73h E6h  not defined */
                        /* opcode 66h 0Fh 73h E7h  not defined */
                        /* opcode 66h 0Fh 73h E8h  not defined */
                        /* opcode 66h 0Fh 73h E9h  not defined */
                        /* opcode 66h 0Fh 73h EAh  not defined */
                        /* opcode 66h 0Fh 73h EBh  not defined */
                        /* opcode 66h 0Fh 73h ECh  not defined */
                        /* opcode 66h 0Fh 73h EDh  not defined */
                        /* opcode 66h 0Fh 73h EEh  not defined */
                        /* opcode 66h 0Fh 73h EFh  not defined */
                        case 0xF0: /* 66h 0Fh 73h F0h PSLLQ sse(r/m),i mod=3 reg=6 rm=0      spec: 0x0F 0x73 mod/reg/rm /6 ib mprefix(0x66) mod==3 */
                        case 0xF1: /* 66h 0Fh 73h F1h PSLLQ sse(r/m),i mod=3 reg=6 rm=1      spec: 0x0F 0x73 mod/reg/rm /6 ib mprefix(0x66) mod==3 */
                        case 0xF2: /* 66h 0Fh 73h F2h PSLLQ sse(r/m),i mod=3 reg=6 rm=2      spec: 0x0F 0x73 mod/reg/rm /6 ib mprefix(0x66) mod==3 */
                        case 0xF3: /* 66h 0Fh 73h F3h PSLLQ sse(r/m),i mod=3 reg=6 rm=3      spec: 0x0F 0x73 mod/reg/rm /6 ib mprefix(0x66) mod==3 */
                        case 0xF4: /* 66h 0Fh 73h F4h PSLLQ sse(r/m),i mod=3 reg=6 rm=4      spec: 0x0F 0x73 mod/reg/rm /6 ib mprefix(0x66) mod==3 */
                        case 0xF5: /* 66h 0Fh 73h F5h PSLLQ sse(r/m),i mod=3 reg=6 rm=5      spec: 0x0F 0x73 mod/reg/rm /6 ib mprefix(0x66) mod==3 */
                        case 0xF6: /* 66h 0Fh 73h F6h PSLLQ sse(r/m),i mod=3 reg=6 rm=6      spec: 0x0F 0x73 mod/reg/rm /6 ib mprefix(0x66) mod==3 */
                        case 0xF7: /* 66h 0Fh 73h F7h PSLLQ sse(r/m),i mod=3 reg=6 rm=7      spec: 0x0F 0x73 mod/reg/rm /6 ib mprefix(0x66) mod==3 */
                            imm=IPFB();
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSLLQ %s,0x%02lX",IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""),(unsigned long)((uint32_t)imm));
                            break;
                        case 0xF8: /* 66h 0Fh 73h F8h PSLLDQ sse(r/m),i mod=3 reg=7 rm=0      spec: 0x0F 0x73 mod/reg/rm /7 ib mprefix(0x66) mod==3 */
                        case 0xF9: /* 66h 0Fh 73h F9h PSLLDQ sse(r/m),i mod=3 reg=7 rm=1      spec: 0x0F 0x73 mod/reg/rm /7 ib mprefix(0x66) mod==3 */
                        case 0xFA: /* 66h 0Fh 73h FAh PSLLDQ sse(r/m),i mod=3 reg=7 rm=2      spec: 0x0F 0x73 mod/reg/rm /7 ib mprefix(0x66) mod==3 */
                        case 0xFB: /* 66h 0Fh 73h FBh PSLLDQ sse(r/m),i mod=3 reg=7 rm=3      spec: 0x0F 0x73 mod/reg/rm /7 ib mprefix(0x66) mod==3 */
                        case 0xFC: /* 66h 0Fh 73h FCh PSLLDQ sse(r/m),i mod=3 reg=7 rm=4      spec: 0x0F 0x73 mod/reg/rm /7 ib mprefix(0x66) mod==3 */
                        case 0xFD: /* 66h 0Fh 73h FDh PSLLDQ sse(r/m),i mod=3 reg=7 rm=5      spec: 0x0F 0x73 mod/reg/rm /7 ib mprefix(0x66) mod==3 */
                        case 0xFE: /* 66h 0Fh 73h FEh PSLLDQ sse(r/m),i mod=3 reg=7 rm=6      spec: 0x0F 0x73 mod/reg/rm /7 ib mprefix(0x66) mod==3 */
                        case 0xFF: /* 66h 0Fh 73h FFh PSLLDQ sse(r/m),i mod=3 reg=7 rm=7      spec: 0x0F 0x73 mod/reg/rm /7 ib mprefix(0x66) mod==3 */
                            imm=IPFB();
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSLLDQ %s,0x%02lX",IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""),(unsigned long)((uint32_t)imm));
                            break;
                        default:
                            goto _x86decode_begin_code32_addr32_opcode_parse_0F73_generic; /* Fall through to normal 0x0F 0x73 opcode handling */
                    };
/* End of opcodes starting with 66h 0Fh 73h */
                    break;
                case 0x74: /* 66h 0Fh 74h PCMPEQB sse(reg),sse(r/m)      spec: 0x0F 0x74 mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PCMPEQB XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x75: /* 66h 0Fh 75h PCMPEQW sse(reg),sse(r/m)      spec: 0x0F 0x75 mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PCMPEQW XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x76: /* 66h 0Fh 76h PCMPEQD sse(reg),sse(r/m)      spec: 0x0F 0x76 mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PCMPEQD XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                /* opcode 66h 0Fh 77h  not defined */
                /* opcode 66h 0Fh 78h  not defined */
                /* opcode 66h 0Fh 79h  not defined */
                /* opcode 66h 0Fh 7Ah  not defined */
                /* opcode 66h 0Fh 7Bh  not defined */
                case 0x7C: /* 66h 0Fh 7Ch HADDPD sse(reg),sse(r/m)      spec: 0x0F 0x7C mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"HADDPD XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x7D: /* 66h 0Fh 7Dh HSUBPD sse(reg),sse(r/m)      spec: 0x0F 0x7D mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"HSUBPD XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x7E: /* 66h 0Fh 7Eh MOVD w32(r/m),sse(reg)      spec: 0x0F 0x7E mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVD %s,XMM%u",IPDecPrint32(mrm,sib,disp,4,RC_REG,"w32"),mrm.reg());
                    break;
                case 0x7F: /* 66h 0Fh 7Fh MOVDQA sse(r/m),sse(reg)      spec: 0x0F 0x7F mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVDQA %s,XMM%u",IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""),mrm.reg());
                    break;
                /* opcode 66h 0Fh 80h  not defined */
                /* opcode 66h 0Fh 81h  not defined */
                /* opcode 66h 0Fh 82h  not defined */
                /* opcode 66h 0Fh 83h  not defined */
                /* opcode 66h 0Fh 84h  not defined */
                /* opcode 66h 0Fh 85h  not defined */
                /* opcode 66h 0Fh 86h  not defined */
                /* opcode 66h 0Fh 87h  not defined */
                /* opcode 66h 0Fh 88h  not defined */
                /* opcode 66h 0Fh 89h  not defined */
                /* opcode 66h 0Fh 8Ah  not defined */
                /* opcode 66h 0Fh 8Bh  not defined */
                /* opcode 66h 0Fh 8Ch  not defined */
                /* opcode 66h 0Fh 8Dh  not defined */
                /* opcode 66h 0Fh 8Eh  not defined */
                /* opcode 66h 0Fh 8Fh  not defined */
                /* opcode 66h 0Fh 90h  not defined */
                /* opcode 66h 0Fh 91h  not defined */
                /* opcode 66h 0Fh 92h  not defined */
                /* opcode 66h 0Fh 93h  not defined */
                /* opcode 66h 0Fh 94h  not defined */
                /* opcode 66h 0Fh 95h  not defined */
                /* opcode 66h 0Fh 96h  not defined */
                /* opcode 66h 0Fh 97h  not defined */
                /* opcode 66h 0Fh 98h  not defined */
                /* opcode 66h 0Fh 99h  not defined */
                /* opcode 66h 0Fh 9Ah  not defined */
                /* opcode 66h 0Fh 9Bh  not defined */
                /* opcode 66h 0Fh 9Ch  not defined */
                /* opcode 66h 0Fh 9Dh  not defined */
                /* opcode 66h 0Fh 9Eh  not defined */
                /* opcode 66h 0Fh 9Fh  not defined */
                /* opcode 66h 0Fh A0h  not defined */
                /* opcode 66h 0Fh A1h  not defined */
                /* opcode 66h 0Fh A2h  not defined */
                /* opcode 66h 0Fh A3h  not defined */
                /* opcode 66h 0Fh A4h  not defined */
                /* opcode 66h 0Fh A5h  not defined */
                /* opcode 66h 0Fh A6h  not defined */
                /* opcode 66h 0Fh A7h  not defined */
                /* opcode 66h 0Fh A8h  not defined */
                /* opcode 66h 0Fh A9h  not defined */
                /* opcode 66h 0Fh AAh  not defined */
                /* opcode 66h 0Fh ABh  not defined */
                /* opcode 66h 0Fh ACh  not defined */
                /* opcode 66h 0Fh ADh  not defined */
                /* opcode 66h 0Fh AEh  not defined */
                /* opcode 66h 0Fh AFh  not defined */
                /* opcode 66h 0Fh B0h  not defined */
                /* opcode 66h 0Fh B1h  not defined */
                /* opcode 66h 0Fh B2h  not defined */
                /* opcode 66h 0Fh B3h  not defined */
                /* opcode 66h 0Fh B4h  not defined */
                /* opcode 66h 0Fh B5h  not defined */
                /* opcode 66h 0Fh B6h  not defined */
                /* opcode 66h 0Fh B7h  not defined */
                /* opcode 66h 0Fh B8h  not defined */
                /* opcode 66h 0Fh B9h  not defined */
                /* opcode 66h 0Fh BAh  not defined */
                /* opcode 66h 0Fh BBh  not defined */
                /* opcode 66h 0Fh BCh  not defined */
                /* opcode 66h 0Fh BDh  not defined */
                /* opcode 66h 0Fh BEh  not defined */
                /* opcode 66h 0Fh BFh  not defined */
                /* opcode 66h 0Fh C0h  not defined */
                /* opcode 66h 0Fh C1h  not defined */
                case 0xC2: /* 66h 0Fh C2h CMPPD sse(reg),sse(r/m),i      spec: 0x0F 0xC2 mod/reg/rm ib mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    imm=IPFB();
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CMPPD XMM%u,%s,0x%02lX",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""),(unsigned long)((uint32_t)imm));
                    break;
                /* opcode 66h 0Fh C3h  not defined */
                case 0xC4: /* 66h 0Fh C4h        spec:  */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    _x86decode_begin_code32_addr32_opcode_parse_660FC4:
/* Opcodes starting with 66h 0Fh C4h */
                    switch (mrm.byte) {
                        case 0x00: /* 66h 0Fh C4h 00h PINSRW sse(reg),w16(r/m),i mod=0 reg=0 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x01: /* 66h 0Fh C4h 01h PINSRW sse(reg),w16(r/m),i mod=0 reg=0 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x02: /* 66h 0Fh C4h 02h PINSRW sse(reg),w16(r/m),i mod=0 reg=0 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x03: /* 66h 0Fh C4h 03h PINSRW sse(reg),w16(r/m),i mod=0 reg=0 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x04: /* 66h 0Fh C4h 04h PINSRW sse(reg),w16(r/m),i mod=0 reg=0 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x05: /* 66h 0Fh C4h 05h PINSRW sse(reg),w16(r/m),i mod=0 reg=0 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x06: /* 66h 0Fh C4h 06h PINSRW sse(reg),w16(r/m),i mod=0 reg=0 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x07: /* 66h 0Fh C4h 07h PINSRW sse(reg),w16(r/m),i mod=0 reg=0 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x08: /* 66h 0Fh C4h 08h PINSRW sse(reg),w16(r/m),i mod=0 reg=1 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x09: /* 66h 0Fh C4h 09h PINSRW sse(reg),w16(r/m),i mod=0 reg=1 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x0A: /* 66h 0Fh C4h 0Ah PINSRW sse(reg),w16(r/m),i mod=0 reg=1 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x0B: /* 66h 0Fh C4h 0Bh PINSRW sse(reg),w16(r/m),i mod=0 reg=1 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x0C: /* 66h 0Fh C4h 0Ch PINSRW sse(reg),w16(r/m),i mod=0 reg=1 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x0D: /* 66h 0Fh C4h 0Dh PINSRW sse(reg),w16(r/m),i mod=0 reg=1 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x0E: /* 66h 0Fh C4h 0Eh PINSRW sse(reg),w16(r/m),i mod=0 reg=1 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x0F: /* 66h 0Fh C4h 0Fh PINSRW sse(reg),w16(r/m),i mod=0 reg=1 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x10: /* 66h 0Fh C4h 10h PINSRW sse(reg),w16(r/m),i mod=0 reg=2 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x11: /* 66h 0Fh C4h 11h PINSRW sse(reg),w16(r/m),i mod=0 reg=2 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x12: /* 66h 0Fh C4h 12h PINSRW sse(reg),w16(r/m),i mod=0 reg=2 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x13: /* 66h 0Fh C4h 13h PINSRW sse(reg),w16(r/m),i mod=0 reg=2 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x14: /* 66h 0Fh C4h 14h PINSRW sse(reg),w16(r/m),i mod=0 reg=2 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x15: /* 66h 0Fh C4h 15h PINSRW sse(reg),w16(r/m),i mod=0 reg=2 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x16: /* 66h 0Fh C4h 16h PINSRW sse(reg),w16(r/m),i mod=0 reg=2 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x17: /* 66h 0Fh C4h 17h PINSRW sse(reg),w16(r/m),i mod=0 reg=2 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x18: /* 66h 0Fh C4h 18h PINSRW sse(reg),w16(r/m),i mod=0 reg=3 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x19: /* 66h 0Fh C4h 19h PINSRW sse(reg),w16(r/m),i mod=0 reg=3 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x1A: /* 66h 0Fh C4h 1Ah PINSRW sse(reg),w16(r/m),i mod=0 reg=3 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x1B: /* 66h 0Fh C4h 1Bh PINSRW sse(reg),w16(r/m),i mod=0 reg=3 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x1C: /* 66h 0Fh C4h 1Ch PINSRW sse(reg),w16(r/m),i mod=0 reg=3 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x1D: /* 66h 0Fh C4h 1Dh PINSRW sse(reg),w16(r/m),i mod=0 reg=3 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x1E: /* 66h 0Fh C4h 1Eh PINSRW sse(reg),w16(r/m),i mod=0 reg=3 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x1F: /* 66h 0Fh C4h 1Fh PINSRW sse(reg),w16(r/m),i mod=0 reg=3 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x20: /* 66h 0Fh C4h 20h PINSRW sse(reg),w16(r/m),i mod=0 reg=4 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x21: /* 66h 0Fh C4h 21h PINSRW sse(reg),w16(r/m),i mod=0 reg=4 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x22: /* 66h 0Fh C4h 22h PINSRW sse(reg),w16(r/m),i mod=0 reg=4 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x23: /* 66h 0Fh C4h 23h PINSRW sse(reg),w16(r/m),i mod=0 reg=4 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x24: /* 66h 0Fh C4h 24h PINSRW sse(reg),w16(r/m),i mod=0 reg=4 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x25: /* 66h 0Fh C4h 25h PINSRW sse(reg),w16(r/m),i mod=0 reg=4 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x26: /* 66h 0Fh C4h 26h PINSRW sse(reg),w16(r/m),i mod=0 reg=4 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x27: /* 66h 0Fh C4h 27h PINSRW sse(reg),w16(r/m),i mod=0 reg=4 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x28: /* 66h 0Fh C4h 28h PINSRW sse(reg),w16(r/m),i mod=0 reg=5 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x29: /* 66h 0Fh C4h 29h PINSRW sse(reg),w16(r/m),i mod=0 reg=5 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x2A: /* 66h 0Fh C4h 2Ah PINSRW sse(reg),w16(r/m),i mod=0 reg=5 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x2B: /* 66h 0Fh C4h 2Bh PINSRW sse(reg),w16(r/m),i mod=0 reg=5 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x2C: /* 66h 0Fh C4h 2Ch PINSRW sse(reg),w16(r/m),i mod=0 reg=5 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x2D: /* 66h 0Fh C4h 2Dh PINSRW sse(reg),w16(r/m),i mod=0 reg=5 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x2E: /* 66h 0Fh C4h 2Eh PINSRW sse(reg),w16(r/m),i mod=0 reg=5 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x2F: /* 66h 0Fh C4h 2Fh PINSRW sse(reg),w16(r/m),i mod=0 reg=5 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x30: /* 66h 0Fh C4h 30h PINSRW sse(reg),w16(r/m),i mod=0 reg=6 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x31: /* 66h 0Fh C4h 31h PINSRW sse(reg),w16(r/m),i mod=0 reg=6 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x32: /* 66h 0Fh C4h 32h PINSRW sse(reg),w16(r/m),i mod=0 reg=6 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x33: /* 66h 0Fh C4h 33h PINSRW sse(reg),w16(r/m),i mod=0 reg=6 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x34: /* 66h 0Fh C4h 34h PINSRW sse(reg),w16(r/m),i mod=0 reg=6 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x35: /* 66h 0Fh C4h 35h PINSRW sse(reg),w16(r/m),i mod=0 reg=6 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x36: /* 66h 0Fh C4h 36h PINSRW sse(reg),w16(r/m),i mod=0 reg=6 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x37: /* 66h 0Fh C4h 37h PINSRW sse(reg),w16(r/m),i mod=0 reg=6 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x38: /* 66h 0Fh C4h 38h PINSRW sse(reg),w16(r/m),i mod=0 reg=7 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x39: /* 66h 0Fh C4h 39h PINSRW sse(reg),w16(r/m),i mod=0 reg=7 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x3A: /* 66h 0Fh C4h 3Ah PINSRW sse(reg),w16(r/m),i mod=0 reg=7 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x3B: /* 66h 0Fh C4h 3Bh PINSRW sse(reg),w16(r/m),i mod=0 reg=7 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x3C: /* 66h 0Fh C4h 3Ch PINSRW sse(reg),w16(r/m),i mod=0 reg=7 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x3D: /* 66h 0Fh C4h 3Dh PINSRW sse(reg),w16(r/m),i mod=0 reg=7 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x3E: /* 66h 0Fh C4h 3Eh PINSRW sse(reg),w16(r/m),i mod=0 reg=7 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x3F: /* 66h 0Fh C4h 3Fh PINSRW sse(reg),w16(r/m),i mod=0 reg=7 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x40: /* 66h 0Fh C4h 40h PINSRW sse(reg),w16(r/m),i mod=1 reg=0 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x41: /* 66h 0Fh C4h 41h PINSRW sse(reg),w16(r/m),i mod=1 reg=0 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x42: /* 66h 0Fh C4h 42h PINSRW sse(reg),w16(r/m),i mod=1 reg=0 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x43: /* 66h 0Fh C4h 43h PINSRW sse(reg),w16(r/m),i mod=1 reg=0 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x44: /* 66h 0Fh C4h 44h PINSRW sse(reg),w16(r/m),i mod=1 reg=0 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x45: /* 66h 0Fh C4h 45h PINSRW sse(reg),w16(r/m),i mod=1 reg=0 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x46: /* 66h 0Fh C4h 46h PINSRW sse(reg),w16(r/m),i mod=1 reg=0 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x47: /* 66h 0Fh C4h 47h PINSRW sse(reg),w16(r/m),i mod=1 reg=0 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x48: /* 66h 0Fh C4h 48h PINSRW sse(reg),w16(r/m),i mod=1 reg=1 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x49: /* 66h 0Fh C4h 49h PINSRW sse(reg),w16(r/m),i mod=1 reg=1 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x4A: /* 66h 0Fh C4h 4Ah PINSRW sse(reg),w16(r/m),i mod=1 reg=1 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x4B: /* 66h 0Fh C4h 4Bh PINSRW sse(reg),w16(r/m),i mod=1 reg=1 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x4C: /* 66h 0Fh C4h 4Ch PINSRW sse(reg),w16(r/m),i mod=1 reg=1 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x4D: /* 66h 0Fh C4h 4Dh PINSRW sse(reg),w16(r/m),i mod=1 reg=1 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x4E: /* 66h 0Fh C4h 4Eh PINSRW sse(reg),w16(r/m),i mod=1 reg=1 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x4F: /* 66h 0Fh C4h 4Fh PINSRW sse(reg),w16(r/m),i mod=1 reg=1 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x50: /* 66h 0Fh C4h 50h PINSRW sse(reg),w16(r/m),i mod=1 reg=2 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x51: /* 66h 0Fh C4h 51h PINSRW sse(reg),w16(r/m),i mod=1 reg=2 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x52: /* 66h 0Fh C4h 52h PINSRW sse(reg),w16(r/m),i mod=1 reg=2 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x53: /* 66h 0Fh C4h 53h PINSRW sse(reg),w16(r/m),i mod=1 reg=2 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x54: /* 66h 0Fh C4h 54h PINSRW sse(reg),w16(r/m),i mod=1 reg=2 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x55: /* 66h 0Fh C4h 55h PINSRW sse(reg),w16(r/m),i mod=1 reg=2 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x56: /* 66h 0Fh C4h 56h PINSRW sse(reg),w16(r/m),i mod=1 reg=2 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x57: /* 66h 0Fh C4h 57h PINSRW sse(reg),w16(r/m),i mod=1 reg=2 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x58: /* 66h 0Fh C4h 58h PINSRW sse(reg),w16(r/m),i mod=1 reg=3 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x59: /* 66h 0Fh C4h 59h PINSRW sse(reg),w16(r/m),i mod=1 reg=3 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x5A: /* 66h 0Fh C4h 5Ah PINSRW sse(reg),w16(r/m),i mod=1 reg=3 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x5B: /* 66h 0Fh C4h 5Bh PINSRW sse(reg),w16(r/m),i mod=1 reg=3 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x5C: /* 66h 0Fh C4h 5Ch PINSRW sse(reg),w16(r/m),i mod=1 reg=3 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x5D: /* 66h 0Fh C4h 5Dh PINSRW sse(reg),w16(r/m),i mod=1 reg=3 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x5E: /* 66h 0Fh C4h 5Eh PINSRW sse(reg),w16(r/m),i mod=1 reg=3 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x5F: /* 66h 0Fh C4h 5Fh PINSRW sse(reg),w16(r/m),i mod=1 reg=3 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x60: /* 66h 0Fh C4h 60h PINSRW sse(reg),w16(r/m),i mod=1 reg=4 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x61: /* 66h 0Fh C4h 61h PINSRW sse(reg),w16(r/m),i mod=1 reg=4 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x62: /* 66h 0Fh C4h 62h PINSRW sse(reg),w16(r/m),i mod=1 reg=4 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x63: /* 66h 0Fh C4h 63h PINSRW sse(reg),w16(r/m),i mod=1 reg=4 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x64: /* 66h 0Fh C4h 64h PINSRW sse(reg),w16(r/m),i mod=1 reg=4 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x65: /* 66h 0Fh C4h 65h PINSRW sse(reg),w16(r/m),i mod=1 reg=4 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x66: /* 66h 0Fh C4h 66h PINSRW sse(reg),w16(r/m),i mod=1 reg=4 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x67: /* 66h 0Fh C4h 67h PINSRW sse(reg),w16(r/m),i mod=1 reg=4 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x68: /* 66h 0Fh C4h 68h PINSRW sse(reg),w16(r/m),i mod=1 reg=5 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x69: /* 66h 0Fh C4h 69h PINSRW sse(reg),w16(r/m),i mod=1 reg=5 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x6A: /* 66h 0Fh C4h 6Ah PINSRW sse(reg),w16(r/m),i mod=1 reg=5 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x6B: /* 66h 0Fh C4h 6Bh PINSRW sse(reg),w16(r/m),i mod=1 reg=5 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x6C: /* 66h 0Fh C4h 6Ch PINSRW sse(reg),w16(r/m),i mod=1 reg=5 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x6D: /* 66h 0Fh C4h 6Dh PINSRW sse(reg),w16(r/m),i mod=1 reg=5 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x6E: /* 66h 0Fh C4h 6Eh PINSRW sse(reg),w16(r/m),i mod=1 reg=5 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x6F: /* 66h 0Fh C4h 6Fh PINSRW sse(reg),w16(r/m),i mod=1 reg=5 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x70: /* 66h 0Fh C4h 70h PINSRW sse(reg),w16(r/m),i mod=1 reg=6 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x71: /* 66h 0Fh C4h 71h PINSRW sse(reg),w16(r/m),i mod=1 reg=6 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x72: /* 66h 0Fh C4h 72h PINSRW sse(reg),w16(r/m),i mod=1 reg=6 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x73: /* 66h 0Fh C4h 73h PINSRW sse(reg),w16(r/m),i mod=1 reg=6 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x74: /* 66h 0Fh C4h 74h PINSRW sse(reg),w16(r/m),i mod=1 reg=6 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x75: /* 66h 0Fh C4h 75h PINSRW sse(reg),w16(r/m),i mod=1 reg=6 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x76: /* 66h 0Fh C4h 76h PINSRW sse(reg),w16(r/m),i mod=1 reg=6 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x77: /* 66h 0Fh C4h 77h PINSRW sse(reg),w16(r/m),i mod=1 reg=6 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x78: /* 66h 0Fh C4h 78h PINSRW sse(reg),w16(r/m),i mod=1 reg=7 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x79: /* 66h 0Fh C4h 79h PINSRW sse(reg),w16(r/m),i mod=1 reg=7 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x7A: /* 66h 0Fh C4h 7Ah PINSRW sse(reg),w16(r/m),i mod=1 reg=7 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x7B: /* 66h 0Fh C4h 7Bh PINSRW sse(reg),w16(r/m),i mod=1 reg=7 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x7C: /* 66h 0Fh C4h 7Ch PINSRW sse(reg),w16(r/m),i mod=1 reg=7 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x7D: /* 66h 0Fh C4h 7Dh PINSRW sse(reg),w16(r/m),i mod=1 reg=7 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x7E: /* 66h 0Fh C4h 7Eh PINSRW sse(reg),w16(r/m),i mod=1 reg=7 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x7F: /* 66h 0Fh C4h 7Fh PINSRW sse(reg),w16(r/m),i mod=1 reg=7 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x80: /* 66h 0Fh C4h 80h PINSRW sse(reg),w16(r/m),i mod=2 reg=0 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x81: /* 66h 0Fh C4h 81h PINSRW sse(reg),w16(r/m),i mod=2 reg=0 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x82: /* 66h 0Fh C4h 82h PINSRW sse(reg),w16(r/m),i mod=2 reg=0 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x83: /* 66h 0Fh C4h 83h PINSRW sse(reg),w16(r/m),i mod=2 reg=0 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x84: /* 66h 0Fh C4h 84h PINSRW sse(reg),w16(r/m),i mod=2 reg=0 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x85: /* 66h 0Fh C4h 85h PINSRW sse(reg),w16(r/m),i mod=2 reg=0 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x86: /* 66h 0Fh C4h 86h PINSRW sse(reg),w16(r/m),i mod=2 reg=0 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x87: /* 66h 0Fh C4h 87h PINSRW sse(reg),w16(r/m),i mod=2 reg=0 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x88: /* 66h 0Fh C4h 88h PINSRW sse(reg),w16(r/m),i mod=2 reg=1 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x89: /* 66h 0Fh C4h 89h PINSRW sse(reg),w16(r/m),i mod=2 reg=1 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x8A: /* 66h 0Fh C4h 8Ah PINSRW sse(reg),w16(r/m),i mod=2 reg=1 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x8B: /* 66h 0Fh C4h 8Bh PINSRW sse(reg),w16(r/m),i mod=2 reg=1 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x8C: /* 66h 0Fh C4h 8Ch PINSRW sse(reg),w16(r/m),i mod=2 reg=1 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x8D: /* 66h 0Fh C4h 8Dh PINSRW sse(reg),w16(r/m),i mod=2 reg=1 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x8E: /* 66h 0Fh C4h 8Eh PINSRW sse(reg),w16(r/m),i mod=2 reg=1 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x8F: /* 66h 0Fh C4h 8Fh PINSRW sse(reg),w16(r/m),i mod=2 reg=1 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x90: /* 66h 0Fh C4h 90h PINSRW sse(reg),w16(r/m),i mod=2 reg=2 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x91: /* 66h 0Fh C4h 91h PINSRW sse(reg),w16(r/m),i mod=2 reg=2 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x92: /* 66h 0Fh C4h 92h PINSRW sse(reg),w16(r/m),i mod=2 reg=2 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x93: /* 66h 0Fh C4h 93h PINSRW sse(reg),w16(r/m),i mod=2 reg=2 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x94: /* 66h 0Fh C4h 94h PINSRW sse(reg),w16(r/m),i mod=2 reg=2 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x95: /* 66h 0Fh C4h 95h PINSRW sse(reg),w16(r/m),i mod=2 reg=2 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x96: /* 66h 0Fh C4h 96h PINSRW sse(reg),w16(r/m),i mod=2 reg=2 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x97: /* 66h 0Fh C4h 97h PINSRW sse(reg),w16(r/m),i mod=2 reg=2 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x98: /* 66h 0Fh C4h 98h PINSRW sse(reg),w16(r/m),i mod=2 reg=3 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x99: /* 66h 0Fh C4h 99h PINSRW sse(reg),w16(r/m),i mod=2 reg=3 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x9A: /* 66h 0Fh C4h 9Ah PINSRW sse(reg),w16(r/m),i mod=2 reg=3 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x9B: /* 66h 0Fh C4h 9Bh PINSRW sse(reg),w16(r/m),i mod=2 reg=3 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x9C: /* 66h 0Fh C4h 9Ch PINSRW sse(reg),w16(r/m),i mod=2 reg=3 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x9D: /* 66h 0Fh C4h 9Dh PINSRW sse(reg),w16(r/m),i mod=2 reg=3 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x9E: /* 66h 0Fh C4h 9Eh PINSRW sse(reg),w16(r/m),i mod=2 reg=3 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0x9F: /* 66h 0Fh C4h 9Fh PINSRW sse(reg),w16(r/m),i mod=2 reg=3 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0xA0: /* 66h 0Fh C4h A0h PINSRW sse(reg),w16(r/m),i mod=2 reg=4 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0xA1: /* 66h 0Fh C4h A1h PINSRW sse(reg),w16(r/m),i mod=2 reg=4 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0xA2: /* 66h 0Fh C4h A2h PINSRW sse(reg),w16(r/m),i mod=2 reg=4 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0xA3: /* 66h 0Fh C4h A3h PINSRW sse(reg),w16(r/m),i mod=2 reg=4 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0xA4: /* 66h 0Fh C4h A4h PINSRW sse(reg),w16(r/m),i mod=2 reg=4 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0xA5: /* 66h 0Fh C4h A5h PINSRW sse(reg),w16(r/m),i mod=2 reg=4 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0xA6: /* 66h 0Fh C4h A6h PINSRW sse(reg),w16(r/m),i mod=2 reg=4 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0xA7: /* 66h 0Fh C4h A7h PINSRW sse(reg),w16(r/m),i mod=2 reg=4 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0xA8: /* 66h 0Fh C4h A8h PINSRW sse(reg),w16(r/m),i mod=2 reg=5 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0xA9: /* 66h 0Fh C4h A9h PINSRW sse(reg),w16(r/m),i mod=2 reg=5 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0xAA: /* 66h 0Fh C4h AAh PINSRW sse(reg),w16(r/m),i mod=2 reg=5 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0xAB: /* 66h 0Fh C4h ABh PINSRW sse(reg),w16(r/m),i mod=2 reg=5 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0xAC: /* 66h 0Fh C4h ACh PINSRW sse(reg),w16(r/m),i mod=2 reg=5 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0xAD: /* 66h 0Fh C4h ADh PINSRW sse(reg),w16(r/m),i mod=2 reg=5 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0xAE: /* 66h 0Fh C4h AEh PINSRW sse(reg),w16(r/m),i mod=2 reg=5 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0xAF: /* 66h 0Fh C4h AFh PINSRW sse(reg),w16(r/m),i mod=2 reg=5 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0xB0: /* 66h 0Fh C4h B0h PINSRW sse(reg),w16(r/m),i mod=2 reg=6 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0xB1: /* 66h 0Fh C4h B1h PINSRW sse(reg),w16(r/m),i mod=2 reg=6 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0xB2: /* 66h 0Fh C4h B2h PINSRW sse(reg),w16(r/m),i mod=2 reg=6 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0xB3: /* 66h 0Fh C4h B3h PINSRW sse(reg),w16(r/m),i mod=2 reg=6 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0xB4: /* 66h 0Fh C4h B4h PINSRW sse(reg),w16(r/m),i mod=2 reg=6 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0xB5: /* 66h 0Fh C4h B5h PINSRW sse(reg),w16(r/m),i mod=2 reg=6 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0xB6: /* 66h 0Fh C4h B6h PINSRW sse(reg),w16(r/m),i mod=2 reg=6 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0xB7: /* 66h 0Fh C4h B7h PINSRW sse(reg),w16(r/m),i mod=2 reg=6 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0xB8: /* 66h 0Fh C4h B8h PINSRW sse(reg),w16(r/m),i mod=2 reg=7 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0xB9: /* 66h 0Fh C4h B9h PINSRW sse(reg),w16(r/m),i mod=2 reg=7 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0xBA: /* 66h 0Fh C4h BAh PINSRW sse(reg),w16(r/m),i mod=2 reg=7 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0xBB: /* 66h 0Fh C4h BBh PINSRW sse(reg),w16(r/m),i mod=2 reg=7 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0xBC: /* 66h 0Fh C4h BCh PINSRW sse(reg),w16(r/m),i mod=2 reg=7 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0xBD: /* 66h 0Fh C4h BDh PINSRW sse(reg),w16(r/m),i mod=2 reg=7 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0xBE: /* 66h 0Fh C4h BEh PINSRW sse(reg),w16(r/m),i mod=2 reg=7 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                        case 0xBF: /* 66h 0Fh C4h BFh PINSRW sse(reg),w16(r/m),i mod=2 reg=7 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod!=3 mprefix(0x66) */
                            imm=IPFB();
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PINSRW XMM%u,%s,0x%02lX",mrm.reg(),IPDecPrint32(mrm,sib,disp,2,RC_REG,"w16"),(unsigned long)((uint32_t)imm));
                            break;
                        case 0xC0: /* 66h 0Fh C4h C0h PINSRW sse(reg),w32(r/m),i mod=3 reg=0 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xC1: /* 66h 0Fh C4h C1h PINSRW sse(reg),w32(r/m),i mod=3 reg=0 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xC2: /* 66h 0Fh C4h C2h PINSRW sse(reg),w32(r/m),i mod=3 reg=0 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xC3: /* 66h 0Fh C4h C3h PINSRW sse(reg),w32(r/m),i mod=3 reg=0 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xC4: /* 66h 0Fh C4h C4h PINSRW sse(reg),w32(r/m),i mod=3 reg=0 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xC5: /* 66h 0Fh C4h C5h PINSRW sse(reg),w32(r/m),i mod=3 reg=0 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xC6: /* 66h 0Fh C4h C6h PINSRW sse(reg),w32(r/m),i mod=3 reg=0 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xC7: /* 66h 0Fh C4h C7h PINSRW sse(reg),w32(r/m),i mod=3 reg=0 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xC8: /* 66h 0Fh C4h C8h PINSRW sse(reg),w32(r/m),i mod=3 reg=1 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xC9: /* 66h 0Fh C4h C9h PINSRW sse(reg),w32(r/m),i mod=3 reg=1 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xCA: /* 66h 0Fh C4h CAh PINSRW sse(reg),w32(r/m),i mod=3 reg=1 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xCB: /* 66h 0Fh C4h CBh PINSRW sse(reg),w32(r/m),i mod=3 reg=1 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xCC: /* 66h 0Fh C4h CCh PINSRW sse(reg),w32(r/m),i mod=3 reg=1 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xCD: /* 66h 0Fh C4h CDh PINSRW sse(reg),w32(r/m),i mod=3 reg=1 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xCE: /* 66h 0Fh C4h CEh PINSRW sse(reg),w32(r/m),i mod=3 reg=1 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xCF: /* 66h 0Fh C4h CFh PINSRW sse(reg),w32(r/m),i mod=3 reg=1 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xD0: /* 66h 0Fh C4h D0h PINSRW sse(reg),w32(r/m),i mod=3 reg=2 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xD1: /* 66h 0Fh C4h D1h PINSRW sse(reg),w32(r/m),i mod=3 reg=2 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xD2: /* 66h 0Fh C4h D2h PINSRW sse(reg),w32(r/m),i mod=3 reg=2 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xD3: /* 66h 0Fh C4h D3h PINSRW sse(reg),w32(r/m),i mod=3 reg=2 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xD4: /* 66h 0Fh C4h D4h PINSRW sse(reg),w32(r/m),i mod=3 reg=2 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xD5: /* 66h 0Fh C4h D5h PINSRW sse(reg),w32(r/m),i mod=3 reg=2 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xD6: /* 66h 0Fh C4h D6h PINSRW sse(reg),w32(r/m),i mod=3 reg=2 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xD7: /* 66h 0Fh C4h D7h PINSRW sse(reg),w32(r/m),i mod=3 reg=2 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xD8: /* 66h 0Fh C4h D8h PINSRW sse(reg),w32(r/m),i mod=3 reg=3 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xD9: /* 66h 0Fh C4h D9h PINSRW sse(reg),w32(r/m),i mod=3 reg=3 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xDA: /* 66h 0Fh C4h DAh PINSRW sse(reg),w32(r/m),i mod=3 reg=3 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xDB: /* 66h 0Fh C4h DBh PINSRW sse(reg),w32(r/m),i mod=3 reg=3 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xDC: /* 66h 0Fh C4h DCh PINSRW sse(reg),w32(r/m),i mod=3 reg=3 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xDD: /* 66h 0Fh C4h DDh PINSRW sse(reg),w32(r/m),i mod=3 reg=3 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xDE: /* 66h 0Fh C4h DEh PINSRW sse(reg),w32(r/m),i mod=3 reg=3 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xDF: /* 66h 0Fh C4h DFh PINSRW sse(reg),w32(r/m),i mod=3 reg=3 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xE0: /* 66h 0Fh C4h E0h PINSRW sse(reg),w32(r/m),i mod=3 reg=4 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xE1: /* 66h 0Fh C4h E1h PINSRW sse(reg),w32(r/m),i mod=3 reg=4 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xE2: /* 66h 0Fh C4h E2h PINSRW sse(reg),w32(r/m),i mod=3 reg=4 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xE3: /* 66h 0Fh C4h E3h PINSRW sse(reg),w32(r/m),i mod=3 reg=4 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xE4: /* 66h 0Fh C4h E4h PINSRW sse(reg),w32(r/m),i mod=3 reg=4 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xE5: /* 66h 0Fh C4h E5h PINSRW sse(reg),w32(r/m),i mod=3 reg=4 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xE6: /* 66h 0Fh C4h E6h PINSRW sse(reg),w32(r/m),i mod=3 reg=4 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xE7: /* 66h 0Fh C4h E7h PINSRW sse(reg),w32(r/m),i mod=3 reg=4 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xE8: /* 66h 0Fh C4h E8h PINSRW sse(reg),w32(r/m),i mod=3 reg=5 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xE9: /* 66h 0Fh C4h E9h PINSRW sse(reg),w32(r/m),i mod=3 reg=5 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xEA: /* 66h 0Fh C4h EAh PINSRW sse(reg),w32(r/m),i mod=3 reg=5 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xEB: /* 66h 0Fh C4h EBh PINSRW sse(reg),w32(r/m),i mod=3 reg=5 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xEC: /* 66h 0Fh C4h ECh PINSRW sse(reg),w32(r/m),i mod=3 reg=5 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xED: /* 66h 0Fh C4h EDh PINSRW sse(reg),w32(r/m),i mod=3 reg=5 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xEE: /* 66h 0Fh C4h EEh PINSRW sse(reg),w32(r/m),i mod=3 reg=5 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xEF: /* 66h 0Fh C4h EFh PINSRW sse(reg),w32(r/m),i mod=3 reg=5 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xF0: /* 66h 0Fh C4h F0h PINSRW sse(reg),w32(r/m),i mod=3 reg=6 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xF1: /* 66h 0Fh C4h F1h PINSRW sse(reg),w32(r/m),i mod=3 reg=6 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xF2: /* 66h 0Fh C4h F2h PINSRW sse(reg),w32(r/m),i mod=3 reg=6 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xF3: /* 66h 0Fh C4h F3h PINSRW sse(reg),w32(r/m),i mod=3 reg=6 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xF4: /* 66h 0Fh C4h F4h PINSRW sse(reg),w32(r/m),i mod=3 reg=6 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xF5: /* 66h 0Fh C4h F5h PINSRW sse(reg),w32(r/m),i mod=3 reg=6 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xF6: /* 66h 0Fh C4h F6h PINSRW sse(reg),w32(r/m),i mod=3 reg=6 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xF7: /* 66h 0Fh C4h F7h PINSRW sse(reg),w32(r/m),i mod=3 reg=6 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xF8: /* 66h 0Fh C4h F8h PINSRW sse(reg),w32(r/m),i mod=3 reg=7 rm=0      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xF9: /* 66h 0Fh C4h F9h PINSRW sse(reg),w32(r/m),i mod=3 reg=7 rm=1      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xFA: /* 66h 0Fh C4h FAh PINSRW sse(reg),w32(r/m),i mod=3 reg=7 rm=2      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xFB: /* 66h 0Fh C4h FBh PINSRW sse(reg),w32(r/m),i mod=3 reg=7 rm=3      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xFC: /* 66h 0Fh C4h FCh PINSRW sse(reg),w32(r/m),i mod=3 reg=7 rm=4      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xFD: /* 66h 0Fh C4h FDh PINSRW sse(reg),w32(r/m),i mod=3 reg=7 rm=5      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xFE: /* 66h 0Fh C4h FEh PINSRW sse(reg),w32(r/m),i mod=3 reg=7 rm=6      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xFF: /* 66h 0Fh C4h FFh PINSRW sse(reg),w32(r/m),i mod=3 reg=7 rm=7      spec: 0x0F 0xC4 mod/reg/rm ib mod==3 mprefix(0x66) */
                            imm=IPFB();
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PINSRW XMM%u,%s,0x%02lX",mrm.reg(),IPDecPrint32(mrm,sib,disp,4,RC_REG,"w32"),(unsigned long)((uint32_t)imm));
                            break;
                        default:
                            goto _x86decode_begin_code32_addr32_opcode_parse_0FC4_generic; /* Fall through to normal 0x0F 0xC4 opcode handling */
                    };
/* End of opcodes starting with 66h 0Fh C4h */
                    break;
                case 0xC5: /* 66h 0Fh C5h        spec:  */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    _x86decode_begin_code32_addr32_opcode_parse_660FC5:
/* Opcodes starting with 66h 0Fh C5h */
                    switch (mrm.byte) {
                        /* opcode 66h 0Fh C5h 00h  not defined */
                        /* opcode 66h 0Fh C5h 01h  not defined */
                        /* opcode 66h 0Fh C5h 02h  not defined */
                        /* opcode 66h 0Fh C5h 03h  not defined */
                        /* opcode 66h 0Fh C5h 04h  not defined */
                        /* opcode 66h 0Fh C5h 05h  not defined */
                        /* opcode 66h 0Fh C5h 06h  not defined */
                        /* opcode 66h 0Fh C5h 07h  not defined */
                        /* opcode 66h 0Fh C5h 08h  not defined */
                        /* opcode 66h 0Fh C5h 09h  not defined */
                        /* opcode 66h 0Fh C5h 0Ah  not defined */
                        /* opcode 66h 0Fh C5h 0Bh  not defined */
                        /* opcode 66h 0Fh C5h 0Ch  not defined */
                        /* opcode 66h 0Fh C5h 0Dh  not defined */
                        /* opcode 66h 0Fh C5h 0Eh  not defined */
                        /* opcode 66h 0Fh C5h 0Fh  not defined */
                        /* opcode 66h 0Fh C5h 10h  not defined */
                        /* opcode 66h 0Fh C5h 11h  not defined */
                        /* opcode 66h 0Fh C5h 12h  not defined */
                        /* opcode 66h 0Fh C5h 13h  not defined */
                        /* opcode 66h 0Fh C5h 14h  not defined */
                        /* opcode 66h 0Fh C5h 15h  not defined */
                        /* opcode 66h 0Fh C5h 16h  not defined */
                        /* opcode 66h 0Fh C5h 17h  not defined */
                        /* opcode 66h 0Fh C5h 18h  not defined */
                        /* opcode 66h 0Fh C5h 19h  not defined */
                        /* opcode 66h 0Fh C5h 1Ah  not defined */
                        /* opcode 66h 0Fh C5h 1Bh  not defined */
                        /* opcode 66h 0Fh C5h 1Ch  not defined */
                        /* opcode 66h 0Fh C5h 1Dh  not defined */
                        /* opcode 66h 0Fh C5h 1Eh  not defined */
                        /* opcode 66h 0Fh C5h 1Fh  not defined */
                        /* opcode 66h 0Fh C5h 20h  not defined */
                        /* opcode 66h 0Fh C5h 21h  not defined */
                        /* opcode 66h 0Fh C5h 22h  not defined */
                        /* opcode 66h 0Fh C5h 23h  not defined */
                        /* opcode 66h 0Fh C5h 24h  not defined */
                        /* opcode 66h 0Fh C5h 25h  not defined */
                        /* opcode 66h 0Fh C5h 26h  not defined */
                        /* opcode 66h 0Fh C5h 27h  not defined */
                        /* opcode 66h 0Fh C5h 28h  not defined */
                        /* opcode 66h 0Fh C5h 29h  not defined */
                        /* opcode 66h 0Fh C5h 2Ah  not defined */
                        /* opcode 66h 0Fh C5h 2Bh  not defined */
                        /* opcode 66h 0Fh C5h 2Ch  not defined */
                        /* opcode 66h 0Fh C5h 2Dh  not defined */
                        /* opcode 66h 0Fh C5h 2Eh  not defined */
                        /* opcode 66h 0Fh C5h 2Fh  not defined */
                        /* opcode 66h 0Fh C5h 30h  not defined */
                        /* opcode 66h 0Fh C5h 31h  not defined */
                        /* opcode 66h 0Fh C5h 32h  not defined */
                        /* opcode 66h 0Fh C5h 33h  not defined */
                        /* opcode 66h 0Fh C5h 34h  not defined */
                        /* opcode 66h 0Fh C5h 35h  not defined */
                        /* opcode 66h 0Fh C5h 36h  not defined */
                        /* opcode 66h 0Fh C5h 37h  not defined */
                        /* opcode 66h 0Fh C5h 38h  not defined */
                        /* opcode 66h 0Fh C5h 39h  not defined */
                        /* opcode 66h 0Fh C5h 3Ah  not defined */
                        /* opcode 66h 0Fh C5h 3Bh  not defined */
                        /* opcode 66h 0Fh C5h 3Ch  not defined */
                        /* opcode 66h 0Fh C5h 3Dh  not defined */
                        /* opcode 66h 0Fh C5h 3Eh  not defined */
                        /* opcode 66h 0Fh C5h 3Fh  not defined */
                        /* opcode 66h 0Fh C5h 40h  not defined */
                        /* opcode 66h 0Fh C5h 41h  not defined */
                        /* opcode 66h 0Fh C5h 42h  not defined */
                        /* opcode 66h 0Fh C5h 43h  not defined */
                        /* opcode 66h 0Fh C5h 44h  not defined */
                        /* opcode 66h 0Fh C5h 45h  not defined */
                        /* opcode 66h 0Fh C5h 46h  not defined */
                        /* opcode 66h 0Fh C5h 47h  not defined */
                        /* opcode 66h 0Fh C5h 48h  not defined */
                        /* opcode 66h 0Fh C5h 49h  not defined */
                        /* opcode 66h 0Fh C5h 4Ah  not defined */
                        /* opcode 66h 0Fh C5h 4Bh  not defined */
                        /* opcode 66h 0Fh C5h 4Ch  not defined */
                        /* opcode 66h 0Fh C5h 4Dh  not defined */
                        /* opcode 66h 0Fh C5h 4Eh  not defined */
                        /* opcode 66h 0Fh C5h 4Fh  not defined */
                        /* opcode 66h 0Fh C5h 50h  not defined */
                        /* opcode 66h 0Fh C5h 51h  not defined */
                        /* opcode 66h 0Fh C5h 52h  not defined */
                        /* opcode 66h 0Fh C5h 53h  not defined */
                        /* opcode 66h 0Fh C5h 54h  not defined */
                        /* opcode 66h 0Fh C5h 55h  not defined */
                        /* opcode 66h 0Fh C5h 56h  not defined */
                        /* opcode 66h 0Fh C5h 57h  not defined */
                        /* opcode 66h 0Fh C5h 58h  not defined */
                        /* opcode 66h 0Fh C5h 59h  not defined */
                        /* opcode 66h 0Fh C5h 5Ah  not defined */
                        /* opcode 66h 0Fh C5h 5Bh  not defined */
                        /* opcode 66h 0Fh C5h 5Ch  not defined */
                        /* opcode 66h 0Fh C5h 5Dh  not defined */
                        /* opcode 66h 0Fh C5h 5Eh  not defined */
                        /* opcode 66h 0Fh C5h 5Fh  not defined */
                        /* opcode 66h 0Fh C5h 60h  not defined */
                        /* opcode 66h 0Fh C5h 61h  not defined */
                        /* opcode 66h 0Fh C5h 62h  not defined */
                        /* opcode 66h 0Fh C5h 63h  not defined */
                        /* opcode 66h 0Fh C5h 64h  not defined */
                        /* opcode 66h 0Fh C5h 65h  not defined */
                        /* opcode 66h 0Fh C5h 66h  not defined */
                        /* opcode 66h 0Fh C5h 67h  not defined */
                        /* opcode 66h 0Fh C5h 68h  not defined */
                        /* opcode 66h 0Fh C5h 69h  not defined */
                        /* opcode 66h 0Fh C5h 6Ah  not defined */
                        /* opcode 66h 0Fh C5h 6Bh  not defined */
                        /* opcode 66h 0Fh C5h 6Ch  not defined */
                        /* opcode 66h 0Fh C5h 6Dh  not defined */
                        /* opcode 66h 0Fh C5h 6Eh  not defined */
                        /* opcode 66h 0Fh C5h 6Fh  not defined */
                        /* opcode 66h 0Fh C5h 70h  not defined */
                        /* opcode 66h 0Fh C5h 71h  not defined */
                        /* opcode 66h 0Fh C5h 72h  not defined */
                        /* opcode 66h 0Fh C5h 73h  not defined */
                        /* opcode 66h 0Fh C5h 74h  not defined */
                        /* opcode 66h 0Fh C5h 75h  not defined */
                        /* opcode 66h 0Fh C5h 76h  not defined */
                        /* opcode 66h 0Fh C5h 77h  not defined */
                        /* opcode 66h 0Fh C5h 78h  not defined */
                        /* opcode 66h 0Fh C5h 79h  not defined */
                        /* opcode 66h 0Fh C5h 7Ah  not defined */
                        /* opcode 66h 0Fh C5h 7Bh  not defined */
                        /* opcode 66h 0Fh C5h 7Ch  not defined */
                        /* opcode 66h 0Fh C5h 7Dh  not defined */
                        /* opcode 66h 0Fh C5h 7Eh  not defined */
                        /* opcode 66h 0Fh C5h 7Fh  not defined */
                        /* opcode 66h 0Fh C5h 80h  not defined */
                        /* opcode 66h 0Fh C5h 81h  not defined */
                        /* opcode 66h 0Fh C5h 82h  not defined */
                        /* opcode 66h 0Fh C5h 83h  not defined */
                        /* opcode 66h 0Fh C5h 84h  not defined */
                        /* opcode 66h 0Fh C5h 85h  not defined */
                        /* opcode 66h 0Fh C5h 86h  not defined */
                        /* opcode 66h 0Fh C5h 87h  not defined */
                        /* opcode 66h 0Fh C5h 88h  not defined */
                        /* opcode 66h 0Fh C5h 89h  not defined */
                        /* opcode 66h 0Fh C5h 8Ah  not defined */
                        /* opcode 66h 0Fh C5h 8Bh  not defined */
                        /* opcode 66h 0Fh C5h 8Ch  not defined */
                        /* opcode 66h 0Fh C5h 8Dh  not defined */
                        /* opcode 66h 0Fh C5h 8Eh  not defined */
                        /* opcode 66h 0Fh C5h 8Fh  not defined */
                        /* opcode 66h 0Fh C5h 90h  not defined */
                        /* opcode 66h 0Fh C5h 91h  not defined */
                        /* opcode 66h 0Fh C5h 92h  not defined */
                        /* opcode 66h 0Fh C5h 93h  not defined */
                        /* opcode 66h 0Fh C5h 94h  not defined */
                        /* opcode 66h 0Fh C5h 95h  not defined */
                        /* opcode 66h 0Fh C5h 96h  not defined */
                        /* opcode 66h 0Fh C5h 97h  not defined */
                        /* opcode 66h 0Fh C5h 98h  not defined */
                        /* opcode 66h 0Fh C5h 99h  not defined */
                        /* opcode 66h 0Fh C5h 9Ah  not defined */
                        /* opcode 66h 0Fh C5h 9Bh  not defined */
                        /* opcode 66h 0Fh C5h 9Ch  not defined */
                        /* opcode 66h 0Fh C5h 9Dh  not defined */
                        /* opcode 66h 0Fh C5h 9Eh  not defined */
                        /* opcode 66h 0Fh C5h 9Fh  not defined */
                        /* opcode 66h 0Fh C5h A0h  not defined */
                        /* opcode 66h 0Fh C5h A1h  not defined */
                        /* opcode 66h 0Fh C5h A2h  not defined */
                        /* opcode 66h 0Fh C5h A3h  not defined */
                        /* opcode 66h 0Fh C5h A4h  not defined */
                        /* opcode 66h 0Fh C5h A5h  not defined */
                        /* opcode 66h 0Fh C5h A6h  not defined */
                        /* opcode 66h 0Fh C5h A7h  not defined */
                        /* opcode 66h 0Fh C5h A8h  not defined */
                        /* opcode 66h 0Fh C5h A9h  not defined */
                        /* opcode 66h 0Fh C5h AAh  not defined */
                        /* opcode 66h 0Fh C5h ABh  not defined */
                        /* opcode 66h 0Fh C5h ACh  not defined */
                        /* opcode 66h 0Fh C5h ADh  not defined */
                        /* opcode 66h 0Fh C5h AEh  not defined */
                        /* opcode 66h 0Fh C5h AFh  not defined */
                        /* opcode 66h 0Fh C5h B0h  not defined */
                        /* opcode 66h 0Fh C5h B1h  not defined */
                        /* opcode 66h 0Fh C5h B2h  not defined */
                        /* opcode 66h 0Fh C5h B3h  not defined */
                        /* opcode 66h 0Fh C5h B4h  not defined */
                        /* opcode 66h 0Fh C5h B5h  not defined */
                        /* opcode 66h 0Fh C5h B6h  not defined */
                        /* opcode 66h 0Fh C5h B7h  not defined */
                        /* opcode 66h 0Fh C5h B8h  not defined */
                        /* opcode 66h 0Fh C5h B9h  not defined */
                        /* opcode 66h 0Fh C5h BAh  not defined */
                        /* opcode 66h 0Fh C5h BBh  not defined */
                        /* opcode 66h 0Fh C5h BCh  not defined */
                        /* opcode 66h 0Fh C5h BDh  not defined */
                        /* opcode 66h 0Fh C5h BEh  not defined */
                        /* opcode 66h 0Fh C5h BFh  not defined */
                        case 0xC0: /* 66h 0Fh C5h C0h PEXTRW w32(reg),sse(r/m),i mod=3 reg=0 rm=0      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xC1: /* 66h 0Fh C5h C1h PEXTRW w32(reg),sse(r/m),i mod=3 reg=0 rm=1      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xC2: /* 66h 0Fh C5h C2h PEXTRW w32(reg),sse(r/m),i mod=3 reg=0 rm=2      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xC3: /* 66h 0Fh C5h C3h PEXTRW w32(reg),sse(r/m),i mod=3 reg=0 rm=3      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xC4: /* 66h 0Fh C5h C4h PEXTRW w32(reg),sse(r/m),i mod=3 reg=0 rm=4      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xC5: /* 66h 0Fh C5h C5h PEXTRW w32(reg),sse(r/m),i mod=3 reg=0 rm=5      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xC6: /* 66h 0Fh C5h C6h PEXTRW w32(reg),sse(r/m),i mod=3 reg=0 rm=6      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xC7: /* 66h 0Fh C5h C7h PEXTRW w32(reg),sse(r/m),i mod=3 reg=0 rm=7      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xC8: /* 66h 0Fh C5h C8h PEXTRW w32(reg),sse(r/m),i mod=3 reg=1 rm=0      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xC9: /* 66h 0Fh C5h C9h PEXTRW w32(reg),sse(r/m),i mod=3 reg=1 rm=1      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xCA: /* 66h 0Fh C5h CAh PEXTRW w32(reg),sse(r/m),i mod=3 reg=1 rm=2      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xCB: /* 66h 0Fh C5h CBh PEXTRW w32(reg),sse(r/m),i mod=3 reg=1 rm=3      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xCC: /* 66h 0Fh C5h CCh PEXTRW w32(reg),sse(r/m),i mod=3 reg=1 rm=4      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xCD: /* 66h 0Fh C5h CDh PEXTRW w32(reg),sse(r/m),i mod=3 reg=1 rm=5      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xCE: /* 66h 0Fh C5h CEh PEXTRW w32(reg),sse(r/m),i mod=3 reg=1 rm=6      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xCF: /* 66h 0Fh C5h CFh PEXTRW w32(reg),sse(r/m),i mod=3 reg=1 rm=7      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xD0: /* 66h 0Fh C5h D0h PEXTRW w32(reg),sse(r/m),i mod=3 reg=2 rm=0      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xD1: /* 66h 0Fh C5h D1h PEXTRW w32(reg),sse(r/m),i mod=3 reg=2 rm=1      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xD2: /* 66h 0Fh C5h D2h PEXTRW w32(reg),sse(r/m),i mod=3 reg=2 rm=2      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xD3: /* 66h 0Fh C5h D3h PEXTRW w32(reg),sse(r/m),i mod=3 reg=2 rm=3      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xD4: /* 66h 0Fh C5h D4h PEXTRW w32(reg),sse(r/m),i mod=3 reg=2 rm=4      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xD5: /* 66h 0Fh C5h D5h PEXTRW w32(reg),sse(r/m),i mod=3 reg=2 rm=5      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xD6: /* 66h 0Fh C5h D6h PEXTRW w32(reg),sse(r/m),i mod=3 reg=2 rm=6      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xD7: /* 66h 0Fh C5h D7h PEXTRW w32(reg),sse(r/m),i mod=3 reg=2 rm=7      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xD8: /* 66h 0Fh C5h D8h PEXTRW w32(reg),sse(r/m),i mod=3 reg=3 rm=0      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xD9: /* 66h 0Fh C5h D9h PEXTRW w32(reg),sse(r/m),i mod=3 reg=3 rm=1      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xDA: /* 66h 0Fh C5h DAh PEXTRW w32(reg),sse(r/m),i mod=3 reg=3 rm=2      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xDB: /* 66h 0Fh C5h DBh PEXTRW w32(reg),sse(r/m),i mod=3 reg=3 rm=3      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xDC: /* 66h 0Fh C5h DCh PEXTRW w32(reg),sse(r/m),i mod=3 reg=3 rm=4      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xDD: /* 66h 0Fh C5h DDh PEXTRW w32(reg),sse(r/m),i mod=3 reg=3 rm=5      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xDE: /* 66h 0Fh C5h DEh PEXTRW w32(reg),sse(r/m),i mod=3 reg=3 rm=6      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xDF: /* 66h 0Fh C5h DFh PEXTRW w32(reg),sse(r/m),i mod=3 reg=3 rm=7      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xE0: /* 66h 0Fh C5h E0h PEXTRW w32(reg),sse(r/m),i mod=3 reg=4 rm=0      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xE1: /* 66h 0Fh C5h E1h PEXTRW w32(reg),sse(r/m),i mod=3 reg=4 rm=1      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xE2: /* 66h 0Fh C5h E2h PEXTRW w32(reg),sse(r/m),i mod=3 reg=4 rm=2      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xE3: /* 66h 0Fh C5h E3h PEXTRW w32(reg),sse(r/m),i mod=3 reg=4 rm=3      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xE4: /* 66h 0Fh C5h E4h PEXTRW w32(reg),sse(r/m),i mod=3 reg=4 rm=4      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xE5: /* 66h 0Fh C5h E5h PEXTRW w32(reg),sse(r/m),i mod=3 reg=4 rm=5      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xE6: /* 66h 0Fh C5h E6h PEXTRW w32(reg),sse(r/m),i mod=3 reg=4 rm=6      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xE7: /* 66h 0Fh C5h E7h PEXTRW w32(reg),sse(r/m),i mod=3 reg=4 rm=7      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xE8: /* 66h 0Fh C5h E8h PEXTRW w32(reg),sse(r/m),i mod=3 reg=5 rm=0      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xE9: /* 66h 0Fh C5h E9h PEXTRW w32(reg),sse(r/m),i mod=3 reg=5 rm=1      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xEA: /* 66h 0Fh C5h EAh PEXTRW w32(reg),sse(r/m),i mod=3 reg=5 rm=2      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xEB: /* 66h 0Fh C5h EBh PEXTRW w32(reg),sse(r/m),i mod=3 reg=5 rm=3      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xEC: /* 66h 0Fh C5h ECh PEXTRW w32(reg),sse(r/m),i mod=3 reg=5 rm=4      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xED: /* 66h 0Fh C5h EDh PEXTRW w32(reg),sse(r/m),i mod=3 reg=5 rm=5      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xEE: /* 66h 0Fh C5h EEh PEXTRW w32(reg),sse(r/m),i mod=3 reg=5 rm=6      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xEF: /* 66h 0Fh C5h EFh PEXTRW w32(reg),sse(r/m),i mod=3 reg=5 rm=7      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xF0: /* 66h 0Fh C5h F0h PEXTRW w32(reg),sse(r/m),i mod=3 reg=6 rm=0      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xF1: /* 66h 0Fh C5h F1h PEXTRW w32(reg),sse(r/m),i mod=3 reg=6 rm=1      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xF2: /* 66h 0Fh C5h F2h PEXTRW w32(reg),sse(r/m),i mod=3 reg=6 rm=2      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xF3: /* 66h 0Fh C5h F3h PEXTRW w32(reg),sse(r/m),i mod=3 reg=6 rm=3      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xF4: /* 66h 0Fh C5h F4h PEXTRW w32(reg),sse(r/m),i mod=3 reg=6 rm=4      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xF5: /* 66h 0Fh C5h F5h PEXTRW w32(reg),sse(r/m),i mod=3 reg=6 rm=5      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xF6: /* 66h 0Fh C5h F6h PEXTRW w32(reg),sse(r/m),i mod=3 reg=6 rm=6      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xF7: /* 66h 0Fh C5h F7h PEXTRW w32(reg),sse(r/m),i mod=3 reg=6 rm=7      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xF8: /* 66h 0Fh C5h F8h PEXTRW w32(reg),sse(r/m),i mod=3 reg=7 rm=0      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xF9: /* 66h 0Fh C5h F9h PEXTRW w32(reg),sse(r/m),i mod=3 reg=7 rm=1      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xFA: /* 66h 0Fh C5h FAh PEXTRW w32(reg),sse(r/m),i mod=3 reg=7 rm=2      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xFB: /* 66h 0Fh C5h FBh PEXTRW w32(reg),sse(r/m),i mod=3 reg=7 rm=3      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xFC: /* 66h 0Fh C5h FCh PEXTRW w32(reg),sse(r/m),i mod=3 reg=7 rm=4      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xFD: /* 66h 0Fh C5h FDh PEXTRW w32(reg),sse(r/m),i mod=3 reg=7 rm=5      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xFE: /* 66h 0Fh C5h FEh PEXTRW w32(reg),sse(r/m),i mod=3 reg=7 rm=6      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                        case 0xFF: /* 66h 0Fh C5h FFh PEXTRW w32(reg),sse(r/m),i mod=3 reg=7 rm=7      spec: 0x0F 0xC5 mod/reg/rm ib mod==3 mprefix(0x66) */
                            imm=IPFB();
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PEXTRW %s,%s,0x%02lX",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""),(unsigned long)((uint32_t)imm));
                            break;
                        default:
                            goto _x86decode_begin_code32_addr32_opcode_parse_0FC5_generic; /* Fall through to normal 0x0F 0xC5 opcode handling */
                    };
/* End of opcodes starting with 66h 0Fh C5h */
                    break;
                case 0xC6: /* 66h 0Fh C6h SHUFPD sse(reg),sse(r/m),i      spec: 0x0F 0xC6 mod/reg/rm ib mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    imm=IPFB();
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SHUFPD XMM%u,%s,0x%02lX",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""),(unsigned long)((uint32_t)imm));
                    break;
                case 0xC7: /* 66h 0Fh C7h        spec:  */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    _x86decode_begin_code32_addr32_opcode_parse_660FC7:
/* Opcodes starting with 66h 0Fh C7h */
                    switch (mrm.byte) {
                        /* opcode 66h 0Fh C7h 00h  not defined */
                        /* opcode 66h 0Fh C7h 01h  not defined */
                        /* opcode 66h 0Fh C7h 02h  not defined */
                        /* opcode 66h 0Fh C7h 03h  not defined */
                        /* opcode 66h 0Fh C7h 04h  not defined */
                        /* opcode 66h 0Fh C7h 05h  not defined */
                        /* opcode 66h 0Fh C7h 06h  not defined */
                        /* opcode 66h 0Fh C7h 07h  not defined */
                        /* opcode 66h 0Fh C7h 08h  not defined */
                        /* opcode 66h 0Fh C7h 09h  not defined */
                        /* opcode 66h 0Fh C7h 0Ah  not defined */
                        /* opcode 66h 0Fh C7h 0Bh  not defined */
                        /* opcode 66h 0Fh C7h 0Ch  not defined */
                        /* opcode 66h 0Fh C7h 0Dh  not defined */
                        /* opcode 66h 0Fh C7h 0Eh  not defined */
                        /* opcode 66h 0Fh C7h 0Fh  not defined */
                        /* opcode 66h 0Fh C7h 10h  not defined */
                        /* opcode 66h 0Fh C7h 11h  not defined */
                        /* opcode 66h 0Fh C7h 12h  not defined */
                        /* opcode 66h 0Fh C7h 13h  not defined */
                        /* opcode 66h 0Fh C7h 14h  not defined */
                        /* opcode 66h 0Fh C7h 15h  not defined */
                        /* opcode 66h 0Fh C7h 16h  not defined */
                        /* opcode 66h 0Fh C7h 17h  not defined */
                        /* opcode 66h 0Fh C7h 18h  not defined */
                        /* opcode 66h 0Fh C7h 19h  not defined */
                        /* opcode 66h 0Fh C7h 1Ah  not defined */
                        /* opcode 66h 0Fh C7h 1Bh  not defined */
                        /* opcode 66h 0Fh C7h 1Ch  not defined */
                        /* opcode 66h 0Fh C7h 1Dh  not defined */
                        /* opcode 66h 0Fh C7h 1Eh  not defined */
                        /* opcode 66h 0Fh C7h 1Fh  not defined */
                        /* opcode 66h 0Fh C7h 20h  not defined */
                        /* opcode 66h 0Fh C7h 21h  not defined */
                        /* opcode 66h 0Fh C7h 22h  not defined */
                        /* opcode 66h 0Fh C7h 23h  not defined */
                        /* opcode 66h 0Fh C7h 24h  not defined */
                        /* opcode 66h 0Fh C7h 25h  not defined */
                        /* opcode 66h 0Fh C7h 26h  not defined */
                        /* opcode 66h 0Fh C7h 27h  not defined */
                        /* opcode 66h 0Fh C7h 28h  not defined */
                        /* opcode 66h 0Fh C7h 29h  not defined */
                        /* opcode 66h 0Fh C7h 2Ah  not defined */
                        /* opcode 66h 0Fh C7h 2Bh  not defined */
                        /* opcode 66h 0Fh C7h 2Ch  not defined */
                        /* opcode 66h 0Fh C7h 2Dh  not defined */
                        /* opcode 66h 0Fh C7h 2Eh  not defined */
                        /* opcode 66h 0Fh C7h 2Fh  not defined */
                        case 0x30: /* 66h 0Fh C7h 30h VMCLEAR w64(r/m) mod=0 reg=6 rm=0      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 mprefix(0x66) */
                        case 0x31: /* 66h 0Fh C7h 31h VMCLEAR w64(r/m) mod=0 reg=6 rm=1      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 mprefix(0x66) */
                        case 0x32: /* 66h 0Fh C7h 32h VMCLEAR w64(r/m) mod=0 reg=6 rm=2      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 mprefix(0x66) */
                        case 0x33: /* 66h 0Fh C7h 33h VMCLEAR w64(r/m) mod=0 reg=6 rm=3      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 mprefix(0x66) */
                        case 0x34: /* 66h 0Fh C7h 34h VMCLEAR w64(r/m) mod=0 reg=6 rm=4      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 mprefix(0x66) */
                        case 0x35: /* 66h 0Fh C7h 35h VMCLEAR w64(r/m) mod=0 reg=6 rm=5      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 mprefix(0x66) */
                        case 0x36: /* 66h 0Fh C7h 36h VMCLEAR w64(r/m) mod=0 reg=6 rm=6      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 mprefix(0x66) */
                        case 0x37: /* 66h 0Fh C7h 37h VMCLEAR w64(r/m) mod=0 reg=6 rm=7      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 mprefix(0x66) */
                        case 0x70: /* 66h 0Fh C7h 70h VMCLEAR w64(r/m) mod=1 reg=6 rm=0      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 mprefix(0x66) */
                        case 0x71: /* 66h 0Fh C7h 71h VMCLEAR w64(r/m) mod=1 reg=6 rm=1      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 mprefix(0x66) */
                        case 0x72: /* 66h 0Fh C7h 72h VMCLEAR w64(r/m) mod=1 reg=6 rm=2      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 mprefix(0x66) */
                        case 0x73: /* 66h 0Fh C7h 73h VMCLEAR w64(r/m) mod=1 reg=6 rm=3      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 mprefix(0x66) */
                        case 0x74: /* 66h 0Fh C7h 74h VMCLEAR w64(r/m) mod=1 reg=6 rm=4      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 mprefix(0x66) */
                        case 0x75: /* 66h 0Fh C7h 75h VMCLEAR w64(r/m) mod=1 reg=6 rm=5      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 mprefix(0x66) */
                        case 0x76: /* 66h 0Fh C7h 76h VMCLEAR w64(r/m) mod=1 reg=6 rm=6      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 mprefix(0x66) */
                        case 0x77: /* 66h 0Fh C7h 77h VMCLEAR w64(r/m) mod=1 reg=6 rm=7      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 mprefix(0x66) */
                        case 0xB0: /* 66h 0Fh C7h B0h VMCLEAR w64(r/m) mod=2 reg=6 rm=0      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 mprefix(0x66) */
                        case 0xB1: /* 66h 0Fh C7h B1h VMCLEAR w64(r/m) mod=2 reg=6 rm=1      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 mprefix(0x66) */
                        case 0xB2: /* 66h 0Fh C7h B2h VMCLEAR w64(r/m) mod=2 reg=6 rm=2      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 mprefix(0x66) */
                        case 0xB3: /* 66h 0Fh C7h B3h VMCLEAR w64(r/m) mod=2 reg=6 rm=3      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 mprefix(0x66) */
                        case 0xB4: /* 66h 0Fh C7h B4h VMCLEAR w64(r/m) mod=2 reg=6 rm=4      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 mprefix(0x66) */
                        case 0xB5: /* 66h 0Fh C7h B5h VMCLEAR w64(r/m) mod=2 reg=6 rm=5      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 mprefix(0x66) */
                        case 0xB6: /* 66h 0Fh C7h B6h VMCLEAR w64(r/m) mod=2 reg=6 rm=6      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 mprefix(0x66) */
                        case 0xB7: /* 66h 0Fh C7h B7h VMCLEAR w64(r/m) mod=2 reg=6 rm=7      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 mprefix(0x66) */
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VMCLEAR %s",IPDecPrint32(mrm,sib,disp,8,RC_REG,"w64"));
                            break;
                        /* opcode 66h 0Fh C7h 38h  not defined */
                        /* opcode 66h 0Fh C7h 39h  not defined */
                        /* opcode 66h 0Fh C7h 3Ah  not defined */
                        /* opcode 66h 0Fh C7h 3Bh  not defined */
                        /* opcode 66h 0Fh C7h 3Ch  not defined */
                        /* opcode 66h 0Fh C7h 3Dh  not defined */
                        /* opcode 66h 0Fh C7h 3Eh  not defined */
                        /* opcode 66h 0Fh C7h 3Fh  not defined */
                        /* opcode 66h 0Fh C7h 40h  not defined */
                        /* opcode 66h 0Fh C7h 41h  not defined */
                        /* opcode 66h 0Fh C7h 42h  not defined */
                        /* opcode 66h 0Fh C7h 43h  not defined */
                        /* opcode 66h 0Fh C7h 44h  not defined */
                        /* opcode 66h 0Fh C7h 45h  not defined */
                        /* opcode 66h 0Fh C7h 46h  not defined */
                        /* opcode 66h 0Fh C7h 47h  not defined */
                        /* opcode 66h 0Fh C7h 48h  not defined */
                        /* opcode 66h 0Fh C7h 49h  not defined */
                        /* opcode 66h 0Fh C7h 4Ah  not defined */
                        /* opcode 66h 0Fh C7h 4Bh  not defined */
                        /* opcode 66h 0Fh C7h 4Ch  not defined */
                        /* opcode 66h 0Fh C7h 4Dh  not defined */
                        /* opcode 66h 0Fh C7h 4Eh  not defined */
                        /* opcode 66h 0Fh C7h 4Fh  not defined */
                        /* opcode 66h 0Fh C7h 50h  not defined */
                        /* opcode 66h 0Fh C7h 51h  not defined */
                        /* opcode 66h 0Fh C7h 52h  not defined */
                        /* opcode 66h 0Fh C7h 53h  not defined */
                        /* opcode 66h 0Fh C7h 54h  not defined */
                        /* opcode 66h 0Fh C7h 55h  not defined */
                        /* opcode 66h 0Fh C7h 56h  not defined */
                        /* opcode 66h 0Fh C7h 57h  not defined */
                        /* opcode 66h 0Fh C7h 58h  not defined */
                        /* opcode 66h 0Fh C7h 59h  not defined */
                        /* opcode 66h 0Fh C7h 5Ah  not defined */
                        /* opcode 66h 0Fh C7h 5Bh  not defined */
                        /* opcode 66h 0Fh C7h 5Ch  not defined */
                        /* opcode 66h 0Fh C7h 5Dh  not defined */
                        /* opcode 66h 0Fh C7h 5Eh  not defined */
                        /* opcode 66h 0Fh C7h 5Fh  not defined */
                        /* opcode 66h 0Fh C7h 60h  not defined */
                        /* opcode 66h 0Fh C7h 61h  not defined */
                        /* opcode 66h 0Fh C7h 62h  not defined */
                        /* opcode 66h 0Fh C7h 63h  not defined */
                        /* opcode 66h 0Fh C7h 64h  not defined */
                        /* opcode 66h 0Fh C7h 65h  not defined */
                        /* opcode 66h 0Fh C7h 66h  not defined */
                        /* opcode 66h 0Fh C7h 67h  not defined */
                        /* opcode 66h 0Fh C7h 68h  not defined */
                        /* opcode 66h 0Fh C7h 69h  not defined */
                        /* opcode 66h 0Fh C7h 6Ah  not defined */
                        /* opcode 66h 0Fh C7h 6Bh  not defined */
                        /* opcode 66h 0Fh C7h 6Ch  not defined */
                        /* opcode 66h 0Fh C7h 6Dh  not defined */
                        /* opcode 66h 0Fh C7h 6Eh  not defined */
                        /* opcode 66h 0Fh C7h 6Fh  not defined */
                        /* opcode 66h 0Fh C7h 78h  not defined */
                        /* opcode 66h 0Fh C7h 79h  not defined */
                        /* opcode 66h 0Fh C7h 7Ah  not defined */
                        /* opcode 66h 0Fh C7h 7Bh  not defined */
                        /* opcode 66h 0Fh C7h 7Ch  not defined */
                        /* opcode 66h 0Fh C7h 7Dh  not defined */
                        /* opcode 66h 0Fh C7h 7Eh  not defined */
                        /* opcode 66h 0Fh C7h 7Fh  not defined */
                        /* opcode 66h 0Fh C7h 80h  not defined */
                        /* opcode 66h 0Fh C7h 81h  not defined */
                        /* opcode 66h 0Fh C7h 82h  not defined */
                        /* opcode 66h 0Fh C7h 83h  not defined */
                        /* opcode 66h 0Fh C7h 84h  not defined */
                        /* opcode 66h 0Fh C7h 85h  not defined */
                        /* opcode 66h 0Fh C7h 86h  not defined */
                        /* opcode 66h 0Fh C7h 87h  not defined */
                        /* opcode 66h 0Fh C7h 88h  not defined */
                        /* opcode 66h 0Fh C7h 89h  not defined */
                        /* opcode 66h 0Fh C7h 8Ah  not defined */
                        /* opcode 66h 0Fh C7h 8Bh  not defined */
                        /* opcode 66h 0Fh C7h 8Ch  not defined */
                        /* opcode 66h 0Fh C7h 8Dh  not defined */
                        /* opcode 66h 0Fh C7h 8Eh  not defined */
                        /* opcode 66h 0Fh C7h 8Fh  not defined */
                        /* opcode 66h 0Fh C7h 90h  not defined */
                        /* opcode 66h 0Fh C7h 91h  not defined */
                        /* opcode 66h 0Fh C7h 92h  not defined */
                        /* opcode 66h 0Fh C7h 93h  not defined */
                        /* opcode 66h 0Fh C7h 94h  not defined */
                        /* opcode 66h 0Fh C7h 95h  not defined */
                        /* opcode 66h 0Fh C7h 96h  not defined */
                        /* opcode 66h 0Fh C7h 97h  not defined */
                        /* opcode 66h 0Fh C7h 98h  not defined */
                        /* opcode 66h 0Fh C7h 99h  not defined */
                        /* opcode 66h 0Fh C7h 9Ah  not defined */
                        /* opcode 66h 0Fh C7h 9Bh  not defined */
                        /* opcode 66h 0Fh C7h 9Ch  not defined */
                        /* opcode 66h 0Fh C7h 9Dh  not defined */
                        /* opcode 66h 0Fh C7h 9Eh  not defined */
                        /* opcode 66h 0Fh C7h 9Fh  not defined */
                        /* opcode 66h 0Fh C7h A0h  not defined */
                        /* opcode 66h 0Fh C7h A1h  not defined */
                        /* opcode 66h 0Fh C7h A2h  not defined */
                        /* opcode 66h 0Fh C7h A3h  not defined */
                        /* opcode 66h 0Fh C7h A4h  not defined */
                        /* opcode 66h 0Fh C7h A5h  not defined */
                        /* opcode 66h 0Fh C7h A6h  not defined */
                        /* opcode 66h 0Fh C7h A7h  not defined */
                        /* opcode 66h 0Fh C7h A8h  not defined */
                        /* opcode 66h 0Fh C7h A9h  not defined */
                        /* opcode 66h 0Fh C7h AAh  not defined */
                        /* opcode 66h 0Fh C7h ABh  not defined */
                        /* opcode 66h 0Fh C7h ACh  not defined */
                        /* opcode 66h 0Fh C7h ADh  not defined */
                        /* opcode 66h 0Fh C7h AEh  not defined */
                        /* opcode 66h 0Fh C7h AFh  not defined */
                        /* opcode 66h 0Fh C7h B8h  not defined */
                        /* opcode 66h 0Fh C7h B9h  not defined */
                        /* opcode 66h 0Fh C7h BAh  not defined */
                        /* opcode 66h 0Fh C7h BBh  not defined */
                        /* opcode 66h 0Fh C7h BCh  not defined */
                        /* opcode 66h 0Fh C7h BDh  not defined */
                        /* opcode 66h 0Fh C7h BEh  not defined */
                        /* opcode 66h 0Fh C7h BFh  not defined */
                        /* opcode 66h 0Fh C7h C0h  not defined */
                        /* opcode 66h 0Fh C7h C1h  not defined */
                        /* opcode 66h 0Fh C7h C2h  not defined */
                        /* opcode 66h 0Fh C7h C3h  not defined */
                        /* opcode 66h 0Fh C7h C4h  not defined */
                        /* opcode 66h 0Fh C7h C5h  not defined */
                        /* opcode 66h 0Fh C7h C6h  not defined */
                        /* opcode 66h 0Fh C7h C7h  not defined */
                        /* opcode 66h 0Fh C7h C8h  not defined */
                        /* opcode 66h 0Fh C7h C9h  not defined */
                        /* opcode 66h 0Fh C7h CAh  not defined */
                        /* opcode 66h 0Fh C7h CBh  not defined */
                        /* opcode 66h 0Fh C7h CCh  not defined */
                        /* opcode 66h 0Fh C7h CDh  not defined */
                        /* opcode 66h 0Fh C7h CEh  not defined */
                        /* opcode 66h 0Fh C7h CFh  not defined */
                        /* opcode 66h 0Fh C7h D0h  not defined */
                        /* opcode 66h 0Fh C7h D1h  not defined */
                        /* opcode 66h 0Fh C7h D2h  not defined */
                        /* opcode 66h 0Fh C7h D3h  not defined */
                        /* opcode 66h 0Fh C7h D4h  not defined */
                        /* opcode 66h 0Fh C7h D5h  not defined */
                        /* opcode 66h 0Fh C7h D6h  not defined */
                        /* opcode 66h 0Fh C7h D7h  not defined */
                        /* opcode 66h 0Fh C7h D8h  not defined */
                        /* opcode 66h 0Fh C7h D9h  not defined */
                        /* opcode 66h 0Fh C7h DAh  not defined */
                        /* opcode 66h 0Fh C7h DBh  not defined */
                        /* opcode 66h 0Fh C7h DCh  not defined */
                        /* opcode 66h 0Fh C7h DDh  not defined */
                        /* opcode 66h 0Fh C7h DEh  not defined */
                        /* opcode 66h 0Fh C7h DFh  not defined */
                        /* opcode 66h 0Fh C7h E0h  not defined */
                        /* opcode 66h 0Fh C7h E1h  not defined */
                        /* opcode 66h 0Fh C7h E2h  not defined */
                        /* opcode 66h 0Fh C7h E3h  not defined */
                        /* opcode 66h 0Fh C7h E4h  not defined */
                        /* opcode 66h 0Fh C7h E5h  not defined */
                        /* opcode 66h 0Fh C7h E6h  not defined */
                        /* opcode 66h 0Fh C7h E7h  not defined */
                        /* opcode 66h 0Fh C7h E8h  not defined */
                        /* opcode 66h 0Fh C7h E9h  not defined */
                        /* opcode 66h 0Fh C7h EAh  not defined */
                        /* opcode 66h 0Fh C7h EBh  not defined */
                        /* opcode 66h 0Fh C7h ECh  not defined */
                        /* opcode 66h 0Fh C7h EDh  not defined */
                        /* opcode 66h 0Fh C7h EEh  not defined */
                        /* opcode 66h 0Fh C7h EFh  not defined */
                        /* opcode 66h 0Fh C7h F0h  not defined */
                        /* opcode 66h 0Fh C7h F1h  not defined */
                        /* opcode 66h 0Fh C7h F2h  not defined */
                        /* opcode 66h 0Fh C7h F3h  not defined */
                        /* opcode 66h 0Fh C7h F4h  not defined */
                        /* opcode 66h 0Fh C7h F5h  not defined */
                        /* opcode 66h 0Fh C7h F6h  not defined */
                        /* opcode 66h 0Fh C7h F7h  not defined */
                        /* opcode 66h 0Fh C7h F8h  not defined */
                        /* opcode 66h 0Fh C7h F9h  not defined */
                        /* opcode 66h 0Fh C7h FAh  not defined */
                        /* opcode 66h 0Fh C7h FBh  not defined */
                        /* opcode 66h 0Fh C7h FCh  not defined */
                        /* opcode 66h 0Fh C7h FDh  not defined */
                        /* opcode 66h 0Fh C7h FEh  not defined */
                        /* opcode 66h 0Fh C7h FFh  not defined */
                        default:
                            goto _x86decode_begin_code32_addr32_opcode_parse_0FC7_generic; /* Fall through to normal 0x0F 0xC7 opcode handling */
                    };
/* End of opcodes starting with 66h 0Fh C7h */
                    break;
                /* opcode 66h 0Fh C8h  not defined */
                /* opcode 66h 0Fh C9h  not defined */
                /* opcode 66h 0Fh CAh  not defined */
                /* opcode 66h 0Fh CBh  not defined */
                /* opcode 66h 0Fh CCh  not defined */
                /* opcode 66h 0Fh CDh  not defined */
                /* opcode 66h 0Fh CEh  not defined */
                /* opcode 66h 0Fh CFh  not defined */
                case 0xD0: /* 66h 0Fh D0h ADDSUBPD sse(reg),sse(r/m)      spec: 0x0F 0xD0 mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ADDSUBPD XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0xD1: /* 66h 0Fh D1h PSRLW sse(reg),sse(r/m)      spec: 0x0F 0xD1 mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSRLW XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0xD2: /* 66h 0Fh D2h PSRLD sse(reg),sse(r/m)      spec: 0x0F 0xD2 mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSRLD XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0xD3: /* 66h 0Fh D3h PSRLQ sse(reg),sse(r/m)      spec: 0x0F 0xD3 mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSRLQ XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0xD4: /* 66h 0Fh D4h PADDQ sse(reg),sse(r/m)      spec: 0x0F 0xD4 mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PADDQ XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0xD5: /* 66h 0Fh D5h PMULLW sse(reg),sse(r/m)      spec: 0x0F 0xD5 mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PMULLW XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0xD6: /* 66h 0Fh D6h MOVQ sse(r/m),sse(reg)      spec: 0x0F 0xD6 mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVQ %s,XMM%u",IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""),mrm.reg());
                    break;
                /* opcode 66h 0Fh D7h  not defined */
                case 0xD8: /* 66h 0Fh D8h PSUBUSB sse(reg),sse(r/m)      spec: 0x0F 0xD8 mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSUBUSB XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                /* opcode 66h 0Fh D9h  not defined */
                /* opcode 66h 0Fh DAh  not defined */
                case 0xDB: /* 66h 0Fh DBh PAND sse(reg),sse(r/m)      spec: 0x0F 0xDB mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PAND XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0xDC: /* 66h 0Fh DCh PADDUSB sse(reg),sse(r/m)      spec: 0x0F 0xDC mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PADDUSB XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0xDD: /* 66h 0Fh DDh PADDUSW sse(reg),sse(r/m)      spec: 0x0F 0xDD mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PADDUSW XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                /* opcode 66h 0Fh DEh  not defined */
                case 0xDF: /* 66h 0Fh DFh PANDN sse(reg),sse(r/m)      spec: 0x0F 0xDF mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PANDN XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                /* opcode 66h 0Fh E0h  not defined */
                case 0xE1: /* 66h 0Fh E1h PSRAW sse(reg),sse(r/m)      spec: 0x0F 0xE1 mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSRAW XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0xE2: /* 66h 0Fh E2h PSRAD sse(reg),sse(r/m)      spec: 0x0F 0xE2 mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSRAD XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                /* opcode 66h 0Fh E3h  not defined */
                /* opcode 66h 0Fh E4h  not defined */
                case 0xE5: /* 66h 0Fh E5h PMULHW sse(reg),sse(r/m)      spec: 0x0F 0xE5 mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PMULHW XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0xE6: /* 66h 0Fh E6h CVTTPD2DQ sse(reg),sse(r/m)      spec: 0x0F 0xE6 mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CVTTPD2DQ XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0xE7: /* 66h 0Fh E7h        spec:  */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    _x86decode_begin_code32_addr32_opcode_parse_660FE7:
/* Opcodes starting with 66h 0Fh E7h */
                    switch (mrm.byte) {
                        case 0x00: /* 66h 0Fh E7h 00h MOVNTDQ sse(r/m),sse(reg) mod=0 reg=0 rm=0      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x01: /* 66h 0Fh E7h 01h MOVNTDQ sse(r/m),sse(reg) mod=0 reg=0 rm=1      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x02: /* 66h 0Fh E7h 02h MOVNTDQ sse(r/m),sse(reg) mod=0 reg=0 rm=2      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x03: /* 66h 0Fh E7h 03h MOVNTDQ sse(r/m),sse(reg) mod=0 reg=0 rm=3      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x04: /* 66h 0Fh E7h 04h MOVNTDQ sse(r/m),sse(reg) mod=0 reg=0 rm=4      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x05: /* 66h 0Fh E7h 05h MOVNTDQ sse(r/m),sse(reg) mod=0 reg=0 rm=5      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x06: /* 66h 0Fh E7h 06h MOVNTDQ sse(r/m),sse(reg) mod=0 reg=0 rm=6      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x07: /* 66h 0Fh E7h 07h MOVNTDQ sse(r/m),sse(reg) mod=0 reg=0 rm=7      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x08: /* 66h 0Fh E7h 08h MOVNTDQ sse(r/m),sse(reg) mod=0 reg=1 rm=0      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x09: /* 66h 0Fh E7h 09h MOVNTDQ sse(r/m),sse(reg) mod=0 reg=1 rm=1      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x0A: /* 66h 0Fh E7h 0Ah MOVNTDQ sse(r/m),sse(reg) mod=0 reg=1 rm=2      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x0B: /* 66h 0Fh E7h 0Bh MOVNTDQ sse(r/m),sse(reg) mod=0 reg=1 rm=3      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x0C: /* 66h 0Fh E7h 0Ch MOVNTDQ sse(r/m),sse(reg) mod=0 reg=1 rm=4      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x0D: /* 66h 0Fh E7h 0Dh MOVNTDQ sse(r/m),sse(reg) mod=0 reg=1 rm=5      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x0E: /* 66h 0Fh E7h 0Eh MOVNTDQ sse(r/m),sse(reg) mod=0 reg=1 rm=6      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x0F: /* 66h 0Fh E7h 0Fh MOVNTDQ sse(r/m),sse(reg) mod=0 reg=1 rm=7      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x10: /* 66h 0Fh E7h 10h MOVNTDQ sse(r/m),sse(reg) mod=0 reg=2 rm=0      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x11: /* 66h 0Fh E7h 11h MOVNTDQ sse(r/m),sse(reg) mod=0 reg=2 rm=1      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x12: /* 66h 0Fh E7h 12h MOVNTDQ sse(r/m),sse(reg) mod=0 reg=2 rm=2      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x13: /* 66h 0Fh E7h 13h MOVNTDQ sse(r/m),sse(reg) mod=0 reg=2 rm=3      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x14: /* 66h 0Fh E7h 14h MOVNTDQ sse(r/m),sse(reg) mod=0 reg=2 rm=4      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x15: /* 66h 0Fh E7h 15h MOVNTDQ sse(r/m),sse(reg) mod=0 reg=2 rm=5      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x16: /* 66h 0Fh E7h 16h MOVNTDQ sse(r/m),sse(reg) mod=0 reg=2 rm=6      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x17: /* 66h 0Fh E7h 17h MOVNTDQ sse(r/m),sse(reg) mod=0 reg=2 rm=7      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x18: /* 66h 0Fh E7h 18h MOVNTDQ sse(r/m),sse(reg) mod=0 reg=3 rm=0      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x19: /* 66h 0Fh E7h 19h MOVNTDQ sse(r/m),sse(reg) mod=0 reg=3 rm=1      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x1A: /* 66h 0Fh E7h 1Ah MOVNTDQ sse(r/m),sse(reg) mod=0 reg=3 rm=2      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x1B: /* 66h 0Fh E7h 1Bh MOVNTDQ sse(r/m),sse(reg) mod=0 reg=3 rm=3      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x1C: /* 66h 0Fh E7h 1Ch MOVNTDQ sse(r/m),sse(reg) mod=0 reg=3 rm=4      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x1D: /* 66h 0Fh E7h 1Dh MOVNTDQ sse(r/m),sse(reg) mod=0 reg=3 rm=5      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x1E: /* 66h 0Fh E7h 1Eh MOVNTDQ sse(r/m),sse(reg) mod=0 reg=3 rm=6      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x1F: /* 66h 0Fh E7h 1Fh MOVNTDQ sse(r/m),sse(reg) mod=0 reg=3 rm=7      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x20: /* 66h 0Fh E7h 20h MOVNTDQ sse(r/m),sse(reg) mod=0 reg=4 rm=0      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x21: /* 66h 0Fh E7h 21h MOVNTDQ sse(r/m),sse(reg) mod=0 reg=4 rm=1      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x22: /* 66h 0Fh E7h 22h MOVNTDQ sse(r/m),sse(reg) mod=0 reg=4 rm=2      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x23: /* 66h 0Fh E7h 23h MOVNTDQ sse(r/m),sse(reg) mod=0 reg=4 rm=3      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x24: /* 66h 0Fh E7h 24h MOVNTDQ sse(r/m),sse(reg) mod=0 reg=4 rm=4      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x25: /* 66h 0Fh E7h 25h MOVNTDQ sse(r/m),sse(reg) mod=0 reg=4 rm=5      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x26: /* 66h 0Fh E7h 26h MOVNTDQ sse(r/m),sse(reg) mod=0 reg=4 rm=6      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x27: /* 66h 0Fh E7h 27h MOVNTDQ sse(r/m),sse(reg) mod=0 reg=4 rm=7      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x28: /* 66h 0Fh E7h 28h MOVNTDQ sse(r/m),sse(reg) mod=0 reg=5 rm=0      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x29: /* 66h 0Fh E7h 29h MOVNTDQ sse(r/m),sse(reg) mod=0 reg=5 rm=1      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x2A: /* 66h 0Fh E7h 2Ah MOVNTDQ sse(r/m),sse(reg) mod=0 reg=5 rm=2      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x2B: /* 66h 0Fh E7h 2Bh MOVNTDQ sse(r/m),sse(reg) mod=0 reg=5 rm=3      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x2C: /* 66h 0Fh E7h 2Ch MOVNTDQ sse(r/m),sse(reg) mod=0 reg=5 rm=4      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x2D: /* 66h 0Fh E7h 2Dh MOVNTDQ sse(r/m),sse(reg) mod=0 reg=5 rm=5      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x2E: /* 66h 0Fh E7h 2Eh MOVNTDQ sse(r/m),sse(reg) mod=0 reg=5 rm=6      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x2F: /* 66h 0Fh E7h 2Fh MOVNTDQ sse(r/m),sse(reg) mod=0 reg=5 rm=7      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x30: /* 66h 0Fh E7h 30h MOVNTDQ sse(r/m),sse(reg) mod=0 reg=6 rm=0      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x31: /* 66h 0Fh E7h 31h MOVNTDQ sse(r/m),sse(reg) mod=0 reg=6 rm=1      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x32: /* 66h 0Fh E7h 32h MOVNTDQ sse(r/m),sse(reg) mod=0 reg=6 rm=2      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x33: /* 66h 0Fh E7h 33h MOVNTDQ sse(r/m),sse(reg) mod=0 reg=6 rm=3      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x34: /* 66h 0Fh E7h 34h MOVNTDQ sse(r/m),sse(reg) mod=0 reg=6 rm=4      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x35: /* 66h 0Fh E7h 35h MOVNTDQ sse(r/m),sse(reg) mod=0 reg=6 rm=5      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x36: /* 66h 0Fh E7h 36h MOVNTDQ sse(r/m),sse(reg) mod=0 reg=6 rm=6      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x37: /* 66h 0Fh E7h 37h MOVNTDQ sse(r/m),sse(reg) mod=0 reg=6 rm=7      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x38: /* 66h 0Fh E7h 38h MOVNTDQ sse(r/m),sse(reg) mod=0 reg=7 rm=0      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x39: /* 66h 0Fh E7h 39h MOVNTDQ sse(r/m),sse(reg) mod=0 reg=7 rm=1      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x3A: /* 66h 0Fh E7h 3Ah MOVNTDQ sse(r/m),sse(reg) mod=0 reg=7 rm=2      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x3B: /* 66h 0Fh E7h 3Bh MOVNTDQ sse(r/m),sse(reg) mod=0 reg=7 rm=3      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x3C: /* 66h 0Fh E7h 3Ch MOVNTDQ sse(r/m),sse(reg) mod=0 reg=7 rm=4      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x3D: /* 66h 0Fh E7h 3Dh MOVNTDQ sse(r/m),sse(reg) mod=0 reg=7 rm=5      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x3E: /* 66h 0Fh E7h 3Eh MOVNTDQ sse(r/m),sse(reg) mod=0 reg=7 rm=6      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x3F: /* 66h 0Fh E7h 3Fh MOVNTDQ sse(r/m),sse(reg) mod=0 reg=7 rm=7      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x40: /* 66h 0Fh E7h 40h MOVNTDQ sse(r/m),sse(reg) mod=1 reg=0 rm=0      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x41: /* 66h 0Fh E7h 41h MOVNTDQ sse(r/m),sse(reg) mod=1 reg=0 rm=1      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x42: /* 66h 0Fh E7h 42h MOVNTDQ sse(r/m),sse(reg) mod=1 reg=0 rm=2      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x43: /* 66h 0Fh E7h 43h MOVNTDQ sse(r/m),sse(reg) mod=1 reg=0 rm=3      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x44: /* 66h 0Fh E7h 44h MOVNTDQ sse(r/m),sse(reg) mod=1 reg=0 rm=4      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x45: /* 66h 0Fh E7h 45h MOVNTDQ sse(r/m),sse(reg) mod=1 reg=0 rm=5      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x46: /* 66h 0Fh E7h 46h MOVNTDQ sse(r/m),sse(reg) mod=1 reg=0 rm=6      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x47: /* 66h 0Fh E7h 47h MOVNTDQ sse(r/m),sse(reg) mod=1 reg=0 rm=7      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x48: /* 66h 0Fh E7h 48h MOVNTDQ sse(r/m),sse(reg) mod=1 reg=1 rm=0      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x49: /* 66h 0Fh E7h 49h MOVNTDQ sse(r/m),sse(reg) mod=1 reg=1 rm=1      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x4A: /* 66h 0Fh E7h 4Ah MOVNTDQ sse(r/m),sse(reg) mod=1 reg=1 rm=2      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x4B: /* 66h 0Fh E7h 4Bh MOVNTDQ sse(r/m),sse(reg) mod=1 reg=1 rm=3      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x4C: /* 66h 0Fh E7h 4Ch MOVNTDQ sse(r/m),sse(reg) mod=1 reg=1 rm=4      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x4D: /* 66h 0Fh E7h 4Dh MOVNTDQ sse(r/m),sse(reg) mod=1 reg=1 rm=5      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x4E: /* 66h 0Fh E7h 4Eh MOVNTDQ sse(r/m),sse(reg) mod=1 reg=1 rm=6      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x4F: /* 66h 0Fh E7h 4Fh MOVNTDQ sse(r/m),sse(reg) mod=1 reg=1 rm=7      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x50: /* 66h 0Fh E7h 50h MOVNTDQ sse(r/m),sse(reg) mod=1 reg=2 rm=0      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x51: /* 66h 0Fh E7h 51h MOVNTDQ sse(r/m),sse(reg) mod=1 reg=2 rm=1      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x52: /* 66h 0Fh E7h 52h MOVNTDQ sse(r/m),sse(reg) mod=1 reg=2 rm=2      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x53: /* 66h 0Fh E7h 53h MOVNTDQ sse(r/m),sse(reg) mod=1 reg=2 rm=3      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x54: /* 66h 0Fh E7h 54h MOVNTDQ sse(r/m),sse(reg) mod=1 reg=2 rm=4      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x55: /* 66h 0Fh E7h 55h MOVNTDQ sse(r/m),sse(reg) mod=1 reg=2 rm=5      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x56: /* 66h 0Fh E7h 56h MOVNTDQ sse(r/m),sse(reg) mod=1 reg=2 rm=6      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x57: /* 66h 0Fh E7h 57h MOVNTDQ sse(r/m),sse(reg) mod=1 reg=2 rm=7      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x58: /* 66h 0Fh E7h 58h MOVNTDQ sse(r/m),sse(reg) mod=1 reg=3 rm=0      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x59: /* 66h 0Fh E7h 59h MOVNTDQ sse(r/m),sse(reg) mod=1 reg=3 rm=1      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x5A: /* 66h 0Fh E7h 5Ah MOVNTDQ sse(r/m),sse(reg) mod=1 reg=3 rm=2      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x5B: /* 66h 0Fh E7h 5Bh MOVNTDQ sse(r/m),sse(reg) mod=1 reg=3 rm=3      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x5C: /* 66h 0Fh E7h 5Ch MOVNTDQ sse(r/m),sse(reg) mod=1 reg=3 rm=4      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x5D: /* 66h 0Fh E7h 5Dh MOVNTDQ sse(r/m),sse(reg) mod=1 reg=3 rm=5      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x5E: /* 66h 0Fh E7h 5Eh MOVNTDQ sse(r/m),sse(reg) mod=1 reg=3 rm=6      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x5F: /* 66h 0Fh E7h 5Fh MOVNTDQ sse(r/m),sse(reg) mod=1 reg=3 rm=7      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x60: /* 66h 0Fh E7h 60h MOVNTDQ sse(r/m),sse(reg) mod=1 reg=4 rm=0      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x61: /* 66h 0Fh E7h 61h MOVNTDQ sse(r/m),sse(reg) mod=1 reg=4 rm=1      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x62: /* 66h 0Fh E7h 62h MOVNTDQ sse(r/m),sse(reg) mod=1 reg=4 rm=2      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x63: /* 66h 0Fh E7h 63h MOVNTDQ sse(r/m),sse(reg) mod=1 reg=4 rm=3      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x64: /* 66h 0Fh E7h 64h MOVNTDQ sse(r/m),sse(reg) mod=1 reg=4 rm=4      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x65: /* 66h 0Fh E7h 65h MOVNTDQ sse(r/m),sse(reg) mod=1 reg=4 rm=5      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x66: /* 66h 0Fh E7h 66h MOVNTDQ sse(r/m),sse(reg) mod=1 reg=4 rm=6      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x67: /* 66h 0Fh E7h 67h MOVNTDQ sse(r/m),sse(reg) mod=1 reg=4 rm=7      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x68: /* 66h 0Fh E7h 68h MOVNTDQ sse(r/m),sse(reg) mod=1 reg=5 rm=0      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x69: /* 66h 0Fh E7h 69h MOVNTDQ sse(r/m),sse(reg) mod=1 reg=5 rm=1      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x6A: /* 66h 0Fh E7h 6Ah MOVNTDQ sse(r/m),sse(reg) mod=1 reg=5 rm=2      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x6B: /* 66h 0Fh E7h 6Bh MOVNTDQ sse(r/m),sse(reg) mod=1 reg=5 rm=3      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x6C: /* 66h 0Fh E7h 6Ch MOVNTDQ sse(r/m),sse(reg) mod=1 reg=5 rm=4      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x6D: /* 66h 0Fh E7h 6Dh MOVNTDQ sse(r/m),sse(reg) mod=1 reg=5 rm=5      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x6E: /* 66h 0Fh E7h 6Eh MOVNTDQ sse(r/m),sse(reg) mod=1 reg=5 rm=6      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x6F: /* 66h 0Fh E7h 6Fh MOVNTDQ sse(r/m),sse(reg) mod=1 reg=5 rm=7      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x70: /* 66h 0Fh E7h 70h MOVNTDQ sse(r/m),sse(reg) mod=1 reg=6 rm=0      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x71: /* 66h 0Fh E7h 71h MOVNTDQ sse(r/m),sse(reg) mod=1 reg=6 rm=1      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x72: /* 66h 0Fh E7h 72h MOVNTDQ sse(r/m),sse(reg) mod=1 reg=6 rm=2      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x73: /* 66h 0Fh E7h 73h MOVNTDQ sse(r/m),sse(reg) mod=1 reg=6 rm=3      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x74: /* 66h 0Fh E7h 74h MOVNTDQ sse(r/m),sse(reg) mod=1 reg=6 rm=4      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x75: /* 66h 0Fh E7h 75h MOVNTDQ sse(r/m),sse(reg) mod=1 reg=6 rm=5      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x76: /* 66h 0Fh E7h 76h MOVNTDQ sse(r/m),sse(reg) mod=1 reg=6 rm=6      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x77: /* 66h 0Fh E7h 77h MOVNTDQ sse(r/m),sse(reg) mod=1 reg=6 rm=7      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x78: /* 66h 0Fh E7h 78h MOVNTDQ sse(r/m),sse(reg) mod=1 reg=7 rm=0      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x79: /* 66h 0Fh E7h 79h MOVNTDQ sse(r/m),sse(reg) mod=1 reg=7 rm=1      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x7A: /* 66h 0Fh E7h 7Ah MOVNTDQ sse(r/m),sse(reg) mod=1 reg=7 rm=2      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x7B: /* 66h 0Fh E7h 7Bh MOVNTDQ sse(r/m),sse(reg) mod=1 reg=7 rm=3      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x7C: /* 66h 0Fh E7h 7Ch MOVNTDQ sse(r/m),sse(reg) mod=1 reg=7 rm=4      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x7D: /* 66h 0Fh E7h 7Dh MOVNTDQ sse(r/m),sse(reg) mod=1 reg=7 rm=5      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x7E: /* 66h 0Fh E7h 7Eh MOVNTDQ sse(r/m),sse(reg) mod=1 reg=7 rm=6      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x7F: /* 66h 0Fh E7h 7Fh MOVNTDQ sse(r/m),sse(reg) mod=1 reg=7 rm=7      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x80: /* 66h 0Fh E7h 80h MOVNTDQ sse(r/m),sse(reg) mod=2 reg=0 rm=0      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x81: /* 66h 0Fh E7h 81h MOVNTDQ sse(r/m),sse(reg) mod=2 reg=0 rm=1      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x82: /* 66h 0Fh E7h 82h MOVNTDQ sse(r/m),sse(reg) mod=2 reg=0 rm=2      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x83: /* 66h 0Fh E7h 83h MOVNTDQ sse(r/m),sse(reg) mod=2 reg=0 rm=3      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x84: /* 66h 0Fh E7h 84h MOVNTDQ sse(r/m),sse(reg) mod=2 reg=0 rm=4      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x85: /* 66h 0Fh E7h 85h MOVNTDQ sse(r/m),sse(reg) mod=2 reg=0 rm=5      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x86: /* 66h 0Fh E7h 86h MOVNTDQ sse(r/m),sse(reg) mod=2 reg=0 rm=6      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x87: /* 66h 0Fh E7h 87h MOVNTDQ sse(r/m),sse(reg) mod=2 reg=0 rm=7      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x88: /* 66h 0Fh E7h 88h MOVNTDQ sse(r/m),sse(reg) mod=2 reg=1 rm=0      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x89: /* 66h 0Fh E7h 89h MOVNTDQ sse(r/m),sse(reg) mod=2 reg=1 rm=1      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x8A: /* 66h 0Fh E7h 8Ah MOVNTDQ sse(r/m),sse(reg) mod=2 reg=1 rm=2      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x8B: /* 66h 0Fh E7h 8Bh MOVNTDQ sse(r/m),sse(reg) mod=2 reg=1 rm=3      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x8C: /* 66h 0Fh E7h 8Ch MOVNTDQ sse(r/m),sse(reg) mod=2 reg=1 rm=4      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x8D: /* 66h 0Fh E7h 8Dh MOVNTDQ sse(r/m),sse(reg) mod=2 reg=1 rm=5      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x8E: /* 66h 0Fh E7h 8Eh MOVNTDQ sse(r/m),sse(reg) mod=2 reg=1 rm=6      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x8F: /* 66h 0Fh E7h 8Fh MOVNTDQ sse(r/m),sse(reg) mod=2 reg=1 rm=7      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x90: /* 66h 0Fh E7h 90h MOVNTDQ sse(r/m),sse(reg) mod=2 reg=2 rm=0      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x91: /* 66h 0Fh E7h 91h MOVNTDQ sse(r/m),sse(reg) mod=2 reg=2 rm=1      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x92: /* 66h 0Fh E7h 92h MOVNTDQ sse(r/m),sse(reg) mod=2 reg=2 rm=2      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x93: /* 66h 0Fh E7h 93h MOVNTDQ sse(r/m),sse(reg) mod=2 reg=2 rm=3      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x94: /* 66h 0Fh E7h 94h MOVNTDQ sse(r/m),sse(reg) mod=2 reg=2 rm=4      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x95: /* 66h 0Fh E7h 95h MOVNTDQ sse(r/m),sse(reg) mod=2 reg=2 rm=5      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x96: /* 66h 0Fh E7h 96h MOVNTDQ sse(r/m),sse(reg) mod=2 reg=2 rm=6      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x97: /* 66h 0Fh E7h 97h MOVNTDQ sse(r/m),sse(reg) mod=2 reg=2 rm=7      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x98: /* 66h 0Fh E7h 98h MOVNTDQ sse(r/m),sse(reg) mod=2 reg=3 rm=0      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x99: /* 66h 0Fh E7h 99h MOVNTDQ sse(r/m),sse(reg) mod=2 reg=3 rm=1      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x9A: /* 66h 0Fh E7h 9Ah MOVNTDQ sse(r/m),sse(reg) mod=2 reg=3 rm=2      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x9B: /* 66h 0Fh E7h 9Bh MOVNTDQ sse(r/m),sse(reg) mod=2 reg=3 rm=3      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x9C: /* 66h 0Fh E7h 9Ch MOVNTDQ sse(r/m),sse(reg) mod=2 reg=3 rm=4      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x9D: /* 66h 0Fh E7h 9Dh MOVNTDQ sse(r/m),sse(reg) mod=2 reg=3 rm=5      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x9E: /* 66h 0Fh E7h 9Eh MOVNTDQ sse(r/m),sse(reg) mod=2 reg=3 rm=6      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0x9F: /* 66h 0Fh E7h 9Fh MOVNTDQ sse(r/m),sse(reg) mod=2 reg=3 rm=7      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0xA0: /* 66h 0Fh E7h A0h MOVNTDQ sse(r/m),sse(reg) mod=2 reg=4 rm=0      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0xA1: /* 66h 0Fh E7h A1h MOVNTDQ sse(r/m),sse(reg) mod=2 reg=4 rm=1      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0xA2: /* 66h 0Fh E7h A2h MOVNTDQ sse(r/m),sse(reg) mod=2 reg=4 rm=2      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0xA3: /* 66h 0Fh E7h A3h MOVNTDQ sse(r/m),sse(reg) mod=2 reg=4 rm=3      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0xA4: /* 66h 0Fh E7h A4h MOVNTDQ sse(r/m),sse(reg) mod=2 reg=4 rm=4      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0xA5: /* 66h 0Fh E7h A5h MOVNTDQ sse(r/m),sse(reg) mod=2 reg=4 rm=5      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0xA6: /* 66h 0Fh E7h A6h MOVNTDQ sse(r/m),sse(reg) mod=2 reg=4 rm=6      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0xA7: /* 66h 0Fh E7h A7h MOVNTDQ sse(r/m),sse(reg) mod=2 reg=4 rm=7      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0xA8: /* 66h 0Fh E7h A8h MOVNTDQ sse(r/m),sse(reg) mod=2 reg=5 rm=0      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0xA9: /* 66h 0Fh E7h A9h MOVNTDQ sse(r/m),sse(reg) mod=2 reg=5 rm=1      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0xAA: /* 66h 0Fh E7h AAh MOVNTDQ sse(r/m),sse(reg) mod=2 reg=5 rm=2      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0xAB: /* 66h 0Fh E7h ABh MOVNTDQ sse(r/m),sse(reg) mod=2 reg=5 rm=3      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0xAC: /* 66h 0Fh E7h ACh MOVNTDQ sse(r/m),sse(reg) mod=2 reg=5 rm=4      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0xAD: /* 66h 0Fh E7h ADh MOVNTDQ sse(r/m),sse(reg) mod=2 reg=5 rm=5      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0xAE: /* 66h 0Fh E7h AEh MOVNTDQ sse(r/m),sse(reg) mod=2 reg=5 rm=6      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0xAF: /* 66h 0Fh E7h AFh MOVNTDQ sse(r/m),sse(reg) mod=2 reg=5 rm=7      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0xB0: /* 66h 0Fh E7h B0h MOVNTDQ sse(r/m),sse(reg) mod=2 reg=6 rm=0      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0xB1: /* 66h 0Fh E7h B1h MOVNTDQ sse(r/m),sse(reg) mod=2 reg=6 rm=1      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0xB2: /* 66h 0Fh E7h B2h MOVNTDQ sse(r/m),sse(reg) mod=2 reg=6 rm=2      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0xB3: /* 66h 0Fh E7h B3h MOVNTDQ sse(r/m),sse(reg) mod=2 reg=6 rm=3      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0xB4: /* 66h 0Fh E7h B4h MOVNTDQ sse(r/m),sse(reg) mod=2 reg=6 rm=4      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0xB5: /* 66h 0Fh E7h B5h MOVNTDQ sse(r/m),sse(reg) mod=2 reg=6 rm=5      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0xB6: /* 66h 0Fh E7h B6h MOVNTDQ sse(r/m),sse(reg) mod=2 reg=6 rm=6      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0xB7: /* 66h 0Fh E7h B7h MOVNTDQ sse(r/m),sse(reg) mod=2 reg=6 rm=7      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0xB8: /* 66h 0Fh E7h B8h MOVNTDQ sse(r/m),sse(reg) mod=2 reg=7 rm=0      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0xB9: /* 66h 0Fh E7h B9h MOVNTDQ sse(r/m),sse(reg) mod=2 reg=7 rm=1      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0xBA: /* 66h 0Fh E7h BAh MOVNTDQ sse(r/m),sse(reg) mod=2 reg=7 rm=2      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0xBB: /* 66h 0Fh E7h BBh MOVNTDQ sse(r/m),sse(reg) mod=2 reg=7 rm=3      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0xBC: /* 66h 0Fh E7h BCh MOVNTDQ sse(r/m),sse(reg) mod=2 reg=7 rm=4      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0xBD: /* 66h 0Fh E7h BDh MOVNTDQ sse(r/m),sse(reg) mod=2 reg=7 rm=5      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0xBE: /* 66h 0Fh E7h BEh MOVNTDQ sse(r/m),sse(reg) mod=2 reg=7 rm=6      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                        case 0xBF: /* 66h 0Fh E7h BFh MOVNTDQ sse(r/m),sse(reg) mod=2 reg=7 rm=7      spec: 0x0F 0xE7 mod/reg/rm mprefix(0x66) mod!=3 */
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVNTDQ %s,XMM%u",IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""),mrm.reg());
                            break;
                        /* opcode 66h 0Fh E7h C0h  not defined */
                        /* opcode 66h 0Fh E7h C1h  not defined */
                        /* opcode 66h 0Fh E7h C2h  not defined */
                        /* opcode 66h 0Fh E7h C3h  not defined */
                        /* opcode 66h 0Fh E7h C4h  not defined */
                        /* opcode 66h 0Fh E7h C5h  not defined */
                        /* opcode 66h 0Fh E7h C6h  not defined */
                        /* opcode 66h 0Fh E7h C7h  not defined */
                        /* opcode 66h 0Fh E7h C8h  not defined */
                        /* opcode 66h 0Fh E7h C9h  not defined */
                        /* opcode 66h 0Fh E7h CAh  not defined */
                        /* opcode 66h 0Fh E7h CBh  not defined */
                        /* opcode 66h 0Fh E7h CCh  not defined */
                        /* opcode 66h 0Fh E7h CDh  not defined */
                        /* opcode 66h 0Fh E7h CEh  not defined */
                        /* opcode 66h 0Fh E7h CFh  not defined */
                        /* opcode 66h 0Fh E7h D0h  not defined */
                        /* opcode 66h 0Fh E7h D1h  not defined */
                        /* opcode 66h 0Fh E7h D2h  not defined */
                        /* opcode 66h 0Fh E7h D3h  not defined */
                        /* opcode 66h 0Fh E7h D4h  not defined */
                        /* opcode 66h 0Fh E7h D5h  not defined */
                        /* opcode 66h 0Fh E7h D6h  not defined */
                        /* opcode 66h 0Fh E7h D7h  not defined */
                        /* opcode 66h 0Fh E7h D8h  not defined */
                        /* opcode 66h 0Fh E7h D9h  not defined */
                        /* opcode 66h 0Fh E7h DAh  not defined */
                        /* opcode 66h 0Fh E7h DBh  not defined */
                        /* opcode 66h 0Fh E7h DCh  not defined */
                        /* opcode 66h 0Fh E7h DDh  not defined */
                        /* opcode 66h 0Fh E7h DEh  not defined */
                        /* opcode 66h 0Fh E7h DFh  not defined */
                        /* opcode 66h 0Fh E7h E0h  not defined */
                        /* opcode 66h 0Fh E7h E1h  not defined */
                        /* opcode 66h 0Fh E7h E2h  not defined */
                        /* opcode 66h 0Fh E7h E3h  not defined */
                        /* opcode 66h 0Fh E7h E4h  not defined */
                        /* opcode 66h 0Fh E7h E5h  not defined */
                        /* opcode 66h 0Fh E7h E6h  not defined */
                        /* opcode 66h 0Fh E7h E7h  not defined */
                        /* opcode 66h 0Fh E7h E8h  not defined */
                        /* opcode 66h 0Fh E7h E9h  not defined */
                        /* opcode 66h 0Fh E7h EAh  not defined */
                        /* opcode 66h 0Fh E7h EBh  not defined */
                        /* opcode 66h 0Fh E7h ECh  not defined */
                        /* opcode 66h 0Fh E7h EDh  not defined */
                        /* opcode 66h 0Fh E7h EEh  not defined */
                        /* opcode 66h 0Fh E7h EFh  not defined */
                        /* opcode 66h 0Fh E7h F0h  not defined */
                        /* opcode 66h 0Fh E7h F1h  not defined */
                        /* opcode 66h 0Fh E7h F2h  not defined */
                        /* opcode 66h 0Fh E7h F3h  not defined */
                        /* opcode 66h 0Fh E7h F4h  not defined */
                        /* opcode 66h 0Fh E7h F5h  not defined */
                        /* opcode 66h 0Fh E7h F6h  not defined */
                        /* opcode 66h 0Fh E7h F7h  not defined */
                        /* opcode 66h 0Fh E7h F8h  not defined */
                        /* opcode 66h 0Fh E7h F9h  not defined */
                        /* opcode 66h 0Fh E7h FAh  not defined */
                        /* opcode 66h 0Fh E7h FBh  not defined */
                        /* opcode 66h 0Fh E7h FCh  not defined */
                        /* opcode 66h 0Fh E7h FDh  not defined */
                        /* opcode 66h 0Fh E7h FEh  not defined */
                        /* opcode 66h 0Fh E7h FFh  not defined */
                        default:
                            goto _x86decode_begin_code32_addr32_opcode_parse_0FE7_generic; /* Fall through to normal 0x0F 0xE7 opcode handling */
                    };
/* End of opcodes starting with 66h 0Fh E7h */
                    break;
                case 0xE8: /* 66h 0Fh E8h PSUBSB sse(reg),sse(r/m)      spec: 0x0F 0xE8 mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSUBSB XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0xE9: /* 66h 0Fh E9h PSUBSW sse(reg),sse(r/m)      spec: 0x0F 0xE9 mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSUBSW XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                /* opcode 66h 0Fh EAh  not defined */
                case 0xEB: /* 66h 0Fh EBh POR sse(reg),sse(r/m)      spec: 0x0F 0xEB mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"POR XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0xEC: /* 66h 0Fh ECh PADDSB sse(reg),sse(r/m)      spec: 0x0F 0xEC mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PADDSB XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0xED: /* 66h 0Fh EDh PADDSW sse(reg),sse(r/m)      spec: 0x0F 0xED mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PADDSW XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                /* opcode 66h 0Fh EEh  not defined */
                case 0xEF: /* 66h 0Fh EFh PXOR sse(reg),sse(r/m)      spec: 0x0F 0xEF mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PXOR XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                /* opcode 66h 0Fh F0h  not defined */
                case 0xF1: /* 66h 0Fh F1h PSLLW sse(reg),sse(r/m)      spec: 0x0F 0xF1 mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSLLW XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0xF2: /* 66h 0Fh F2h PSLLD sse(reg),sse(r/m)      spec: 0x0F 0xF2 mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSLLD XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0xF3: /* 66h 0Fh F3h PSLLQ sse(reg),sse(r/m)      spec: 0x0F 0xF3 mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSLLQ XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0xF4: /* 66h 0Fh F4h PMULUDQ sse(reg),sse(r/m)      spec: 0x0F 0xF4 mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PMULUDQ XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0xF5: /* 66h 0Fh F5h PMADDWD sse(reg),sse(r/m)      spec: 0x0F 0xF5 mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PMADDWD XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                /* opcode 66h 0Fh F6h  not defined */
                case 0xF7: /* 66h 0Fh F7h        spec:  */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    _x86decode_begin_code32_addr32_opcode_parse_660FF7:
/* Opcodes starting with 66h 0Fh F7h */
                    switch (mrm.byte) {
                        /* opcode 66h 0Fh F7h 00h  not defined */
                        /* opcode 66h 0Fh F7h 01h  not defined */
                        /* opcode 66h 0Fh F7h 02h  not defined */
                        /* opcode 66h 0Fh F7h 03h  not defined */
                        /* opcode 66h 0Fh F7h 04h  not defined */
                        /* opcode 66h 0Fh F7h 05h  not defined */
                        /* opcode 66h 0Fh F7h 06h  not defined */
                        /* opcode 66h 0Fh F7h 07h  not defined */
                        /* opcode 66h 0Fh F7h 08h  not defined */
                        /* opcode 66h 0Fh F7h 09h  not defined */
                        /* opcode 66h 0Fh F7h 0Ah  not defined */
                        /* opcode 66h 0Fh F7h 0Bh  not defined */
                        /* opcode 66h 0Fh F7h 0Ch  not defined */
                        /* opcode 66h 0Fh F7h 0Dh  not defined */
                        /* opcode 66h 0Fh F7h 0Eh  not defined */
                        /* opcode 66h 0Fh F7h 0Fh  not defined */
                        /* opcode 66h 0Fh F7h 10h  not defined */
                        /* opcode 66h 0Fh F7h 11h  not defined */
                        /* opcode 66h 0Fh F7h 12h  not defined */
                        /* opcode 66h 0Fh F7h 13h  not defined */
                        /* opcode 66h 0Fh F7h 14h  not defined */
                        /* opcode 66h 0Fh F7h 15h  not defined */
                        /* opcode 66h 0Fh F7h 16h  not defined */
                        /* opcode 66h 0Fh F7h 17h  not defined */
                        /* opcode 66h 0Fh F7h 18h  not defined */
                        /* opcode 66h 0Fh F7h 19h  not defined */
                        /* opcode 66h 0Fh F7h 1Ah  not defined */
                        /* opcode 66h 0Fh F7h 1Bh  not defined */
                        /* opcode 66h 0Fh F7h 1Ch  not defined */
                        /* opcode 66h 0Fh F7h 1Dh  not defined */
                        /* opcode 66h 0Fh F7h 1Eh  not defined */
                        /* opcode 66h 0Fh F7h 1Fh  not defined */
                        /* opcode 66h 0Fh F7h 20h  not defined */
                        /* opcode 66h 0Fh F7h 21h  not defined */
                        /* opcode 66h 0Fh F7h 22h  not defined */
                        /* opcode 66h 0Fh F7h 23h  not defined */
                        /* opcode 66h 0Fh F7h 24h  not defined */
                        /* opcode 66h 0Fh F7h 25h  not defined */
                        /* opcode 66h 0Fh F7h 26h  not defined */
                        /* opcode 66h 0Fh F7h 27h  not defined */
                        /* opcode 66h 0Fh F7h 28h  not defined */
                        /* opcode 66h 0Fh F7h 29h  not defined */
                        /* opcode 66h 0Fh F7h 2Ah  not defined */
                        /* opcode 66h 0Fh F7h 2Bh  not defined */
                        /* opcode 66h 0Fh F7h 2Ch  not defined */
                        /* opcode 66h 0Fh F7h 2Dh  not defined */
                        /* opcode 66h 0Fh F7h 2Eh  not defined */
                        /* opcode 66h 0Fh F7h 2Fh  not defined */
                        /* opcode 66h 0Fh F7h 30h  not defined */
                        /* opcode 66h 0Fh F7h 31h  not defined */
                        /* opcode 66h 0Fh F7h 32h  not defined */
                        /* opcode 66h 0Fh F7h 33h  not defined */
                        /* opcode 66h 0Fh F7h 34h  not defined */
                        /* opcode 66h 0Fh F7h 35h  not defined */
                        /* opcode 66h 0Fh F7h 36h  not defined */
                        /* opcode 66h 0Fh F7h 37h  not defined */
                        /* opcode 66h 0Fh F7h 38h  not defined */
                        /* opcode 66h 0Fh F7h 39h  not defined */
                        /* opcode 66h 0Fh F7h 3Ah  not defined */
                        /* opcode 66h 0Fh F7h 3Bh  not defined */
                        /* opcode 66h 0Fh F7h 3Ch  not defined */
                        /* opcode 66h 0Fh F7h 3Dh  not defined */
                        /* opcode 66h 0Fh F7h 3Eh  not defined */
                        /* opcode 66h 0Fh F7h 3Fh  not defined */
                        /* opcode 66h 0Fh F7h 40h  not defined */
                        /* opcode 66h 0Fh F7h 41h  not defined */
                        /* opcode 66h 0Fh F7h 42h  not defined */
                        /* opcode 66h 0Fh F7h 43h  not defined */
                        /* opcode 66h 0Fh F7h 44h  not defined */
                        /* opcode 66h 0Fh F7h 45h  not defined */
                        /* opcode 66h 0Fh F7h 46h  not defined */
                        /* opcode 66h 0Fh F7h 47h  not defined */
                        /* opcode 66h 0Fh F7h 48h  not defined */
                        /* opcode 66h 0Fh F7h 49h  not defined */
                        /* opcode 66h 0Fh F7h 4Ah  not defined */
                        /* opcode 66h 0Fh F7h 4Bh  not defined */
                        /* opcode 66h 0Fh F7h 4Ch  not defined */
                        /* opcode 66h 0Fh F7h 4Dh  not defined */
                        /* opcode 66h 0Fh F7h 4Eh  not defined */
                        /* opcode 66h 0Fh F7h 4Fh  not defined */
                        /* opcode 66h 0Fh F7h 50h  not defined */
                        /* opcode 66h 0Fh F7h 51h  not defined */
                        /* opcode 66h 0Fh F7h 52h  not defined */
                        /* opcode 66h 0Fh F7h 53h  not defined */
                        /* opcode 66h 0Fh F7h 54h  not defined */
                        /* opcode 66h 0Fh F7h 55h  not defined */
                        /* opcode 66h 0Fh F7h 56h  not defined */
                        /* opcode 66h 0Fh F7h 57h  not defined */
                        /* opcode 66h 0Fh F7h 58h  not defined */
                        /* opcode 66h 0Fh F7h 59h  not defined */
                        /* opcode 66h 0Fh F7h 5Ah  not defined */
                        /* opcode 66h 0Fh F7h 5Bh  not defined */
                        /* opcode 66h 0Fh F7h 5Ch  not defined */
                        /* opcode 66h 0Fh F7h 5Dh  not defined */
                        /* opcode 66h 0Fh F7h 5Eh  not defined */
                        /* opcode 66h 0Fh F7h 5Fh  not defined */
                        /* opcode 66h 0Fh F7h 60h  not defined */
                        /* opcode 66h 0Fh F7h 61h  not defined */
                        /* opcode 66h 0Fh F7h 62h  not defined */
                        /* opcode 66h 0Fh F7h 63h  not defined */
                        /* opcode 66h 0Fh F7h 64h  not defined */
                        /* opcode 66h 0Fh F7h 65h  not defined */
                        /* opcode 66h 0Fh F7h 66h  not defined */
                        /* opcode 66h 0Fh F7h 67h  not defined */
                        /* opcode 66h 0Fh F7h 68h  not defined */
                        /* opcode 66h 0Fh F7h 69h  not defined */
                        /* opcode 66h 0Fh F7h 6Ah  not defined */
                        /* opcode 66h 0Fh F7h 6Bh  not defined */
                        /* opcode 66h 0Fh F7h 6Ch  not defined */
                        /* opcode 66h 0Fh F7h 6Dh  not defined */
                        /* opcode 66h 0Fh F7h 6Eh  not defined */
                        /* opcode 66h 0Fh F7h 6Fh  not defined */
                        /* opcode 66h 0Fh F7h 70h  not defined */
                        /* opcode 66h 0Fh F7h 71h  not defined */
                        /* opcode 66h 0Fh F7h 72h  not defined */
                        /* opcode 66h 0Fh F7h 73h  not defined */
                        /* opcode 66h 0Fh F7h 74h  not defined */
                        /* opcode 66h 0Fh F7h 75h  not defined */
                        /* opcode 66h 0Fh F7h 76h  not defined */
                        /* opcode 66h 0Fh F7h 77h  not defined */
                        /* opcode 66h 0Fh F7h 78h  not defined */
                        /* opcode 66h 0Fh F7h 79h  not defined */
                        /* opcode 66h 0Fh F7h 7Ah  not defined */
                        /* opcode 66h 0Fh F7h 7Bh  not defined */
                        /* opcode 66h 0Fh F7h 7Ch  not defined */
                        /* opcode 66h 0Fh F7h 7Dh  not defined */
                        /* opcode 66h 0Fh F7h 7Eh  not defined */
                        /* opcode 66h 0Fh F7h 7Fh  not defined */
                        /* opcode 66h 0Fh F7h 80h  not defined */
                        /* opcode 66h 0Fh F7h 81h  not defined */
                        /* opcode 66h 0Fh F7h 82h  not defined */
                        /* opcode 66h 0Fh F7h 83h  not defined */
                        /* opcode 66h 0Fh F7h 84h  not defined */
                        /* opcode 66h 0Fh F7h 85h  not defined */
                        /* opcode 66h 0Fh F7h 86h  not defined */
                        /* opcode 66h 0Fh F7h 87h  not defined */
                        /* opcode 66h 0Fh F7h 88h  not defined */
                        /* opcode 66h 0Fh F7h 89h  not defined */
                        /* opcode 66h 0Fh F7h 8Ah  not defined */
                        /* opcode 66h 0Fh F7h 8Bh  not defined */
                        /* opcode 66h 0Fh F7h 8Ch  not defined */
                        /* opcode 66h 0Fh F7h 8Dh  not defined */
                        /* opcode 66h 0Fh F7h 8Eh  not defined */
                        /* opcode 66h 0Fh F7h 8Fh  not defined */
                        /* opcode 66h 0Fh F7h 90h  not defined */
                        /* opcode 66h 0Fh F7h 91h  not defined */
                        /* opcode 66h 0Fh F7h 92h  not defined */
                        /* opcode 66h 0Fh F7h 93h  not defined */
                        /* opcode 66h 0Fh F7h 94h  not defined */
                        /* opcode 66h 0Fh F7h 95h  not defined */
                        /* opcode 66h 0Fh F7h 96h  not defined */
                        /* opcode 66h 0Fh F7h 97h  not defined */
                        /* opcode 66h 0Fh F7h 98h  not defined */
                        /* opcode 66h 0Fh F7h 99h  not defined */
                        /* opcode 66h 0Fh F7h 9Ah  not defined */
                        /* opcode 66h 0Fh F7h 9Bh  not defined */
                        /* opcode 66h 0Fh F7h 9Ch  not defined */
                        /* opcode 66h 0Fh F7h 9Dh  not defined */
                        /* opcode 66h 0Fh F7h 9Eh  not defined */
                        /* opcode 66h 0Fh F7h 9Fh  not defined */
                        /* opcode 66h 0Fh F7h A0h  not defined */
                        /* opcode 66h 0Fh F7h A1h  not defined */
                        /* opcode 66h 0Fh F7h A2h  not defined */
                        /* opcode 66h 0Fh F7h A3h  not defined */
                        /* opcode 66h 0Fh F7h A4h  not defined */
                        /* opcode 66h 0Fh F7h A5h  not defined */
                        /* opcode 66h 0Fh F7h A6h  not defined */
                        /* opcode 66h 0Fh F7h A7h  not defined */
                        /* opcode 66h 0Fh F7h A8h  not defined */
                        /* opcode 66h 0Fh F7h A9h  not defined */
                        /* opcode 66h 0Fh F7h AAh  not defined */
                        /* opcode 66h 0Fh F7h ABh  not defined */
                        /* opcode 66h 0Fh F7h ACh  not defined */
                        /* opcode 66h 0Fh F7h ADh  not defined */
                        /* opcode 66h 0Fh F7h AEh  not defined */
                        /* opcode 66h 0Fh F7h AFh  not defined */
                        /* opcode 66h 0Fh F7h B0h  not defined */
                        /* opcode 66h 0Fh F7h B1h  not defined */
                        /* opcode 66h 0Fh F7h B2h  not defined */
                        /* opcode 66h 0Fh F7h B3h  not defined */
                        /* opcode 66h 0Fh F7h B4h  not defined */
                        /* opcode 66h 0Fh F7h B5h  not defined */
                        /* opcode 66h 0Fh F7h B6h  not defined */
                        /* opcode 66h 0Fh F7h B7h  not defined */
                        /* opcode 66h 0Fh F7h B8h  not defined */
                        /* opcode 66h 0Fh F7h B9h  not defined */
                        /* opcode 66h 0Fh F7h BAh  not defined */
                        /* opcode 66h 0Fh F7h BBh  not defined */
                        /* opcode 66h 0Fh F7h BCh  not defined */
                        /* opcode 66h 0Fh F7h BDh  not defined */
                        /* opcode 66h 0Fh F7h BEh  not defined */
                        /* opcode 66h 0Fh F7h BFh  not defined */
                        case 0xC0: /* 66h 0Fh F7h C0h MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=0 rm=0      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xC1: /* 66h 0Fh F7h C1h MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=0 rm=1      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xC2: /* 66h 0Fh F7h C2h MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=0 rm=2      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xC3: /* 66h 0Fh F7h C3h MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=0 rm=3      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xC4: /* 66h 0Fh F7h C4h MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=0 rm=4      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xC5: /* 66h 0Fh F7h C5h MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=0 rm=5      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xC6: /* 66h 0Fh F7h C6h MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=0 rm=6      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xC7: /* 66h 0Fh F7h C7h MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=0 rm=7      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xC8: /* 66h 0Fh F7h C8h MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=1 rm=0      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xC9: /* 66h 0Fh F7h C9h MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=1 rm=1      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xCA: /* 66h 0Fh F7h CAh MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=1 rm=2      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xCB: /* 66h 0Fh F7h CBh MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=1 rm=3      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xCC: /* 66h 0Fh F7h CCh MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=1 rm=4      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xCD: /* 66h 0Fh F7h CDh MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=1 rm=5      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xCE: /* 66h 0Fh F7h CEh MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=1 rm=6      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xCF: /* 66h 0Fh F7h CFh MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=1 rm=7      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xD0: /* 66h 0Fh F7h D0h MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=2 rm=0      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xD1: /* 66h 0Fh F7h D1h MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=2 rm=1      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xD2: /* 66h 0Fh F7h D2h MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=2 rm=2      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xD3: /* 66h 0Fh F7h D3h MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=2 rm=3      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xD4: /* 66h 0Fh F7h D4h MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=2 rm=4      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xD5: /* 66h 0Fh F7h D5h MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=2 rm=5      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xD6: /* 66h 0Fh F7h D6h MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=2 rm=6      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xD7: /* 66h 0Fh F7h D7h MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=2 rm=7      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xD8: /* 66h 0Fh F7h D8h MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=3 rm=0      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xD9: /* 66h 0Fh F7h D9h MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=3 rm=1      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xDA: /* 66h 0Fh F7h DAh MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=3 rm=2      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xDB: /* 66h 0Fh F7h DBh MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=3 rm=3      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xDC: /* 66h 0Fh F7h DCh MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=3 rm=4      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xDD: /* 66h 0Fh F7h DDh MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=3 rm=5      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xDE: /* 66h 0Fh F7h DEh MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=3 rm=6      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xDF: /* 66h 0Fh F7h DFh MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=3 rm=7      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xE0: /* 66h 0Fh F7h E0h MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=4 rm=0      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xE1: /* 66h 0Fh F7h E1h MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=4 rm=1      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xE2: /* 66h 0Fh F7h E2h MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=4 rm=2      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xE3: /* 66h 0Fh F7h E3h MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=4 rm=3      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xE4: /* 66h 0Fh F7h E4h MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=4 rm=4      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xE5: /* 66h 0Fh F7h E5h MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=4 rm=5      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xE6: /* 66h 0Fh F7h E6h MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=4 rm=6      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xE7: /* 66h 0Fh F7h E7h MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=4 rm=7      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xE8: /* 66h 0Fh F7h E8h MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=5 rm=0      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xE9: /* 66h 0Fh F7h E9h MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=5 rm=1      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xEA: /* 66h 0Fh F7h EAh MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=5 rm=2      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xEB: /* 66h 0Fh F7h EBh MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=5 rm=3      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xEC: /* 66h 0Fh F7h ECh MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=5 rm=4      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xED: /* 66h 0Fh F7h EDh MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=5 rm=5      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xEE: /* 66h 0Fh F7h EEh MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=5 rm=6      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xEF: /* 66h 0Fh F7h EFh MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=5 rm=7      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xF0: /* 66h 0Fh F7h F0h MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=6 rm=0      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xF1: /* 66h 0Fh F7h F1h MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=6 rm=1      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xF2: /* 66h 0Fh F7h F2h MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=6 rm=2      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xF3: /* 66h 0Fh F7h F3h MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=6 rm=3      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xF4: /* 66h 0Fh F7h F4h MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=6 rm=4      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xF5: /* 66h 0Fh F7h F5h MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=6 rm=5      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xF6: /* 66h 0Fh F7h F6h MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=6 rm=6      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xF7: /* 66h 0Fh F7h F7h MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=6 rm=7      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xF8: /* 66h 0Fh F7h F8h MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=7 rm=0      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xF9: /* 66h 0Fh F7h F9h MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=7 rm=1      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xFA: /* 66h 0Fh F7h FAh MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=7 rm=2      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xFB: /* 66h 0Fh F7h FBh MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=7 rm=3      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xFC: /* 66h 0Fh F7h FCh MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=7 rm=4      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xFD: /* 66h 0Fh F7h FDh MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=7 rm=5      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xFE: /* 66h 0Fh F7h FEh MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=7 rm=6      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                        case 0xFF: /* 66h 0Fh F7h FFh MASKMOVDQU sse(reg),sse(r/m) mod=3 reg=7 rm=7      spec: 0x0F 0xF7 mod/reg/rm mprefix(0x66) mod==3 */
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MASKMOVDQU XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                            break;
                        default:
                            goto _x86decode_begin_code32_addr32_opcode_parse_0FF7_generic; /* Fall through to normal 0x0F 0xF7 opcode handling */
                    };
/* End of opcodes starting with 66h 0Fh F7h */
                    break;
                case 0xF8: /* 66h 0Fh F8h PSUBB sse(reg),sse(r/m)      spec: 0x0F 0xF8 mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSUBB XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0xF9: /* 66h 0Fh F9h PSUBW sse(reg),sse(r/m)      spec: 0x0F 0xF9 mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSUBW XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0xFA: /* 66h 0Fh FAh PSUBD sse(reg),sse(r/m)      spec: 0x0F 0xFA mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSUBD XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0xFB: /* 66h 0Fh FBh PSUBQ sse(reg),sse(r/m)      spec: 0x0F 0xFB mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSUBQ XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0xFC: /* 66h 0Fh FCh PADDB sse(reg),sse(r/m)      spec: 0x0F 0xFC mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PADDB XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0xFD: /* 66h 0Fh FDh PADDW sse(reg),sse(r/m)      spec: 0x0F 0xFD mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PADDW XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0xFE: /* 66h 0Fh FEh PADDD sse(reg),sse(r/m)      spec: 0x0F 0xFE mod/reg/rm mprefix(0x66) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PADDD XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                /* opcode 66h 0Fh FFh  not defined */
                default:
                    goto _x86decode_begin_code32_addr32_opcode_parse_0F_generic; /* Fall through to normal 0x0F opcode handling */
            };
/* End of opcodes starting with 66h 0Fh */
        }
        else {
            goto _x86decode_begin_code32_addr32_opcode_parse__generic;
        }
        break;
    case 0x67: /* 67h        spec: 0x67 prefix addrsz32 */
        prefix67 ^= 1;
        code32=1; addr32=0;
        goto _x86decode_after_prefix_386override_code32_addr16;
    case 0x68: /* 68h PUSHd w(i)      spec: 0x68 iw */
        imm=IPFcodeW();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PUSHd 0x%08lX",(unsigned long)((uint32_t)imm));
        break;
    case 0x69: /* 69h IMULd w(reg),w(r/m),w(i)      spec: 0x69 mod/reg/rm iw */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        imm=IPFcodeW();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"IMULd %s,%s,0x%08lX",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
        break;
    case 0x6A: /* 6Ah PUSHd w(i)      spec: 0x6A ibs */
        imm=IPFBsigned();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PUSHd 0x%02lX",(unsigned long)((uint32_t)imm));
        break;
    case 0x6B: /* 6Bh IMULb w(reg),w(r/m),b(i)      spec: 0x6B mod/reg/rm ib */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        imm=IPFB();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"IMULb %s,%s,0x%02lX",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
        break;
    case 0x6C: /* 6Ch INSb       spec: 0x6C */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"INSb");
        break;
    case 0x6D: /* 6Dh INSd       spec: 0x6D */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"INSd");
        break;
    case 0x6E: /* 6Eh OUTSb       spec: 0x6E */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"OUTSb");
        break;
    case 0x6F: /* 6Fh OUTSd       spec: 0x6F */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"OUTSd");
        break;
    case 0x70: /* 70h JO w(i+ip)      spec: 0x70 ibs */
        imm=IPFBsigned();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JO 0x%02lX",(unsigned long)((uint32_t)(imm+IPval())));
        break;
    case 0x71: /* 71h JNO w(i+ip)      spec: 0x71 ibs */
        imm=IPFBsigned();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JNO 0x%02lX",(unsigned long)((uint32_t)(imm+IPval())));
        break;
    case 0x72: /* 72h JB w(i+ip)      spec: 0x72 ibs */
        imm=IPFBsigned();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JB 0x%02lX",(unsigned long)((uint32_t)(imm+IPval())));
        break;
    case 0x73: /* 73h JNB w(i+ip)      spec: 0x73 ibs */
        imm=IPFBsigned();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JNB 0x%02lX",(unsigned long)((uint32_t)(imm+IPval())));
        break;
    case 0x74: /* 74h JZ w(i+ip)      spec: 0x74 ibs */
        imm=IPFBsigned();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JZ 0x%02lX",(unsigned long)((uint32_t)(imm+IPval())));
        break;
    case 0x75: /* 75h JNZ w(i+ip)      spec: 0x75 ibs */
        imm=IPFBsigned();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JNZ 0x%02lX",(unsigned long)((uint32_t)(imm+IPval())));
        break;
    case 0x76: /* 76h JBE w(i+ip)      spec: 0x76 ibs */
        imm=IPFBsigned();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JBE 0x%02lX",(unsigned long)((uint32_t)(imm+IPval())));
        break;
    case 0x77: /* 77h JA w(i+ip)      spec: 0x77 ibs */
        imm=IPFBsigned();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JA 0x%02lX",(unsigned long)((uint32_t)(imm+IPval())));
        break;
    case 0x78: /* 78h JS w(i+ip)      spec: 0x78 ibs */
        imm=IPFBsigned();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JS 0x%02lX",(unsigned long)((uint32_t)(imm+IPval())));
        break;
    case 0x79: /* 79h JNS w(i+ip)      spec: 0x79 ibs */
        imm=IPFBsigned();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JNS 0x%02lX",(unsigned long)((uint32_t)(imm+IPval())));
        break;
    case 0x7A: /* 7Ah JPE w(i+ip)      spec: 0x7A ibs */
        imm=IPFBsigned();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JPE 0x%02lX",(unsigned long)((uint32_t)(imm+IPval())));
        break;
    case 0x7B: /* 7Bh JPO w(i+ip)      spec: 0x7B ibs */
        imm=IPFBsigned();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JPO 0x%02lX",(unsigned long)((uint32_t)(imm+IPval())));
        break;
    case 0x7C: /* 7Ch JL w(i+ip)      spec: 0x7C ibs */
        imm=IPFBsigned();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JL 0x%02lX",(unsigned long)((uint32_t)(imm+IPval())));
        break;
    case 0x7D: /* 7Dh JGE w(i+ip)      spec: 0x7D ibs */
        imm=IPFBsigned();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JGE 0x%02lX",(unsigned long)((uint32_t)(imm+IPval())));
        break;
    case 0x7E: /* 7Eh JLE w(i+ip)      spec: 0x7E ibs */
        imm=IPFBsigned();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JLE 0x%02lX",(unsigned long)((uint32_t)(imm+IPval())));
        break;
    case 0x7F: /* 7Fh JG w(i+ip)      spec: 0x7F ibs */
        imm=IPFBsigned();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JG 0x%02lX",(unsigned long)((uint32_t)(imm+IPval())));
        break;
    case 0x80: /* 80h        spec:  */
    case 0x82: /* 82h        spec:  */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        _x86decode_begin_code32_addr32_opcode_parse_80:
/* Opcodes starting with 80h */
        switch (mrm.reg()) {
            case 0: /* 80h 00h ADDb b(r/m),i reg=0      spec: 0x80 mod/reg/rm /0 ib */
                imm=IPFB();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ADDb %s,0x%02lX",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),(unsigned long)((uint32_t)imm));
                break;
            case 1: /* 80h 08h ORb b(r/m),i reg=1      spec: 0x80 mod/reg/rm /1 ib */
                imm=IPFB();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ORb %s,0x%02lX",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),(unsigned long)((uint32_t)imm));
                break;
            case 2: /* 80h 10h ADCb b(r/m),i reg=2      spec: 0x80 mod/reg/rm /2 ib */
                imm=IPFB();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ADCb %s,0x%02lX",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),(unsigned long)((uint32_t)imm));
                break;
            case 3: /* 80h 18h SBBb b(r/m),i reg=3      spec: 0x80 mod/reg/rm /3 ib */
                imm=IPFB();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SBBb %s,0x%02lX",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),(unsigned long)((uint32_t)imm));
                break;
            case 4: /* 80h 20h ANDb b(r/m),i reg=4      spec: 0x80 mod/reg/rm /4 ib */
                imm=IPFB();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ANDb %s,0x%02lX",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),(unsigned long)((uint32_t)imm));
                break;
            case 5: /* 80h 28h SUBb b(r/m),i reg=5      spec: 0x80 mod/reg/rm /5 ib */
                imm=IPFB();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SUBb %s,0x%02lX",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),(unsigned long)((uint32_t)imm));
                break;
            case 6: /* 80h 30h XORb b(r/m),i reg=6      spec: 0x80 mod/reg/rm /6 ib */
                imm=IPFB();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"XORb %s,0x%02lX",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),(unsigned long)((uint32_t)imm));
                break;
            case 7: /* 80h 38h CMPb b(r/m),i reg=7      spec: 0x80 mod/reg/rm /7 ib */
                imm=IPFB();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CMPb %s,0x%02lX",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),(unsigned long)((uint32_t)imm));
                break;
            default:
                goto _x86decode_illegal_opcode;
        };
/* End of opcodes starting with 80h */
        break;
    case 0x81: /* 81h        spec:  */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        _x86decode_begin_code32_addr32_opcode_parse_81:
/* Opcodes starting with 81h */
        switch (mrm.reg()) {
            case 0: /* 81h 00h ADDd w(r/m),i reg=0      spec: 0x81 mod/reg/rm /0 iw */
                imm=IPFcodeW();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ADDd %s,0x%08lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
                break;
            case 1: /* 81h 08h ORd w(r/m),i reg=1      spec: 0x81 mod/reg/rm /1 iw */
                imm=IPFcodeW();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ORd %s,0x%08lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
                break;
            case 2: /* 81h 10h ADCd w(r/m),i reg=2      spec: 0x81 mod/reg/rm /2 iw */
                imm=IPFcodeW();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ADCd %s,0x%08lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
                break;
            case 3: /* 81h 18h SBBd w(r/m),i reg=3      spec: 0x81 mod/reg/rm /3 iw */
                imm=IPFcodeW();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SBBd %s,0x%08lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
                break;
            case 4: /* 81h 20h ANDd w(r/m),i reg=4      spec: 0x81 mod/reg/rm /4 iw */
                imm=IPFcodeW();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ANDd %s,0x%08lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
                break;
            case 5: /* 81h 28h SUBd w(r/m),i reg=5      spec: 0x81 mod/reg/rm /5 iw */
                imm=IPFcodeW();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SUBd %s,0x%08lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
                break;
            case 6: /* 81h 30h XORd w(r/m),i reg=6      spec: 0x81 mod/reg/rm /6 iw */
                imm=IPFcodeW();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"XORd %s,0x%08lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
                break;
            case 7: /* 81h 38h CMPd w(r/m),i reg=7      spec: 0x81 mod/reg/rm /7 iw */
                imm=IPFcodeW();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CMPd %s,0x%08lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
                break;
            default:
                goto _x86decode_illegal_opcode;
        };
/* End of opcodes starting with 81h */
        break;
    case 0x83: /* 83h        spec:  */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        _x86decode_begin_code32_addr32_opcode_parse_83:
/* Opcodes starting with 83h */
        switch (mrm.reg()) {
            case 0: /* 83h 00h ADDd w(r/m),i reg=0      spec: 0x83 mod/reg/rm /0 ibs */
                imm=IPFBsigned();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ADDd %s,0x%02lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
                break;
            case 1: /* 83h 08h ORd w(r/m),i reg=1      spec: 0x83 mod/reg/rm /1 ibs */
                imm=IPFBsigned();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ORd %s,0x%02lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
                break;
            case 2: /* 83h 10h ADCd w(r/m),i reg=2      spec: 0x83 mod/reg/rm /2 ibs */
                imm=IPFBsigned();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ADCd %s,0x%02lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
                break;
            case 3: /* 83h 18h SBBd w(r/m),i reg=3      spec: 0x83 mod/reg/rm /3 ibs */
                imm=IPFBsigned();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SBBd %s,0x%02lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
                break;
            case 4: /* 83h 20h ANDd w(r/m),i reg=4      spec: 0x83 mod/reg/rm /4 ibs */
                imm=IPFBsigned();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ANDd %s,0x%02lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
                break;
            case 5: /* 83h 28h SUBd w(r/m),i reg=5      spec: 0x83 mod/reg/rm /5 ibs */
                imm=IPFBsigned();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SUBd %s,0x%02lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
                break;
            case 6: /* 83h 30h XORd w(r/m),i reg=6      spec: 0x83 mod/reg/rm /6 ibs */
                imm=IPFBsigned();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"XORd %s,0x%02lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
                break;
            case 7: /* 83h 38h CMPd w(r/m),i reg=7      spec: 0x83 mod/reg/rm /7 ibs */
                imm=IPFBsigned();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CMPd %s,0x%02lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
                break;
            default:
                goto _x86decode_illegal_opcode;
        };
/* End of opcodes starting with 83h */
        break;
    case 0x84: /* 84h TESTb b(r/m),b(reg)      spec: 0x84 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"TESTb %s,%s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),CPUregsN[1][mrm.reg()]);
        break;
    case 0x85: /* 85h TESTd w(r/m),w(reg)      spec: 0x85 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"TESTd %s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[4][mrm.reg()]);
        break;
    case 0x86: /* 86h XCHGb b(r/m),b(reg)      spec: 0x86 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"XCHGb %s,%s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),CPUregsN[1][mrm.reg()]);
        break;
    case 0x87: /* 87h XCHGd w(r/m),w(reg)      spec: 0x87 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"XCHGd %s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[4][mrm.reg()]);
        break;
    case 0x88: /* 88h MOVb b(r/m),b(reg)      spec: 0x88 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVb %s,%s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),CPUregsN[1][mrm.reg()]);
        break;
    case 0x89: /* 89h MOVd w(r/m),w(reg)      spec: 0x89 mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVd %s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[4][mrm.reg()]);
        break;
    case 0x8A: /* 8Ah MOVb b(reg),b(r/m)      spec: 0x8A mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVb %s,%s",CPUregsN[1][mrm.reg()],IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
        break;
    case 0x8B: /* 8Bh MOVd w(reg),w(r/m)      spec: 0x8B mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVd %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
        break;
    case 0x8C: /* 8Ch MOVd w(r/m),seg(reg)      spec: 0x8C mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVd %s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUsregs_80386[mrm.reg()]);
        break;
    case 0x8D: /* 8Dh LEAd w(reg),w(r/m)      spec: 0x8D mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"LEAd %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
        break;
    case 0x8E: /* 8Eh MOVd seg(reg),w(r/m)      spec: 0x8E mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVd %s,%s",CPUsregs_80386[mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
        break;
    case 0x8F: /* 8Fh POPd w(r/m)      spec: 0x8F mod/reg/rm */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"POPd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
        break;
    case 0x90: /* 90h NOP       spec: 0x90 */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"NOP");
        break;
    case 0x91: /* 91h XCHGd w(reg),w(a) reg=1      spec: range(0x91,0x97) reg=op02 */
    case 0x92: /* 92h XCHGd w(reg),w(a) reg=2      spec: range(0x91,0x97) reg=op02 */
    case 0x93: /* 93h XCHGd w(reg),w(a) reg=3      spec: range(0x91,0x97) reg=op02 */
    case 0x94: /* 94h XCHGd w(reg),w(a) reg=4      spec: range(0x91,0x97) reg=op02 */
    case 0x95: /* 95h XCHGd w(reg),w(a) reg=5      spec: range(0x91,0x97) reg=op02 */
    case 0x96: /* 96h XCHGd w(reg),w(a) reg=6      spec: range(0x91,0x97) reg=op02 */
    case 0x97: /* 97h XCHGd w(reg),w(a) reg=7      spec: range(0x91,0x97) reg=op02 */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"XCHGd %s,%s",CPUregsN[4][op&7],CPUregsN[4][0]);
        break;
    case 0x98: /* 98h CBWb       spec: 0x98 */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CBWb");
        break;
    case 0x99: /* 99h CWDd       spec: 0x99 */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CWDd");
        break;
    case 0x9A: /* 9Ah CALLFd w(i2),w(i)      spec: 0x9A iw iw16 */
        imm=IPFcodeW();
        imm2=IPFW();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CALLFd 0x%04lX,0x%08lX",(unsigned long)((uint32_t)imm2),(unsigned long)((uint32_t)imm));
        break;
    case 0x9B: /* 9Bh WAIT       spec: 0x9B prefix */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"WAIT ");
        goto _x86decode_after_prefix_code32_addr32;
    case 0x9C: /* 9Ch PUSHFd       spec: 0x9C */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PUSHFd");
        break;
    case 0x9D: /* 9Dh POPFd       spec: 0x9D */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"POPFd");
        break;
    case 0x9E: /* 9Eh SAHFb       spec: 0x9E */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SAHFb");
        break;
    case 0x9F: /* 9Fh LAHFb       spec: 0x9F */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"LAHFb");
        break;
    case 0xA0: /* A0h MOVb b(a),b(mem[i])      spec: 0xA0 iwa */
        imm=IPFaddrW();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVb %s,[0x%08lX]b",CPUregsN[1][0],(unsigned long)((uint32_t)imm));
        break;
    case 0xA1: /* A1h MOVd w(a),w(mem[i])      spec: 0xA1 iwa */
        imm=IPFaddrW();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVd %s,[0x%08lX]w",CPUregsN[4][0],(unsigned long)((uint32_t)imm));
        break;
    case 0xA2: /* A2h MOVb b(mem[i]),b(a)      spec: 0xA2 iwa */
        imm=IPFaddrW();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVb [0x%08lX]b,%s",(unsigned long)((uint32_t)imm),CPUregsN[1][0]);
        break;
    case 0xA3: /* A3h MOVd b(mem[i]),w(a)      spec: 0xA3 iwa */
        imm=IPFaddrW();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVd [0x%08lX]b,%s",(unsigned long)((uint32_t)imm),CPUregsN[4][0]);
        break;
    case 0xA4: /* A4h MOVSb       spec: 0xA4 */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVSb");
        break;
    case 0xA5: /* A5h MOVSd       spec: 0xA5 */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVSd");
        break;
    case 0xA6: /* A6h CMPSb       spec: 0xA6 */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CMPSb");
        break;
    case 0xA7: /* A7h CMPSd       spec: 0xA7 */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CMPSd");
        break;
    case 0xA8: /* A8h TESTb b(a),i      spec: 0xA8 ib */
        imm=IPFB();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"TESTb %s,0x%02lX",CPUregsN[1][0],(unsigned long)((uint32_t)imm));
        break;
    case 0xA9: /* A9h TESTd w(a),i      spec: 0xA9 iw */
        imm=IPFcodeW();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"TESTd %s,0x%08lX",CPUregsN[4][0],(unsigned long)((uint32_t)imm));
        break;
    case 0xAA: /* AAh STOSb       spec: 0xAA */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"STOSb");
        break;
    case 0xAB: /* ABh STOSd       spec: 0xAB */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"STOSd");
        break;
    case 0xAC: /* ACh LODSb       spec: 0xAC */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"LODSb");
        break;
    case 0xAD: /* ADh LODSd       spec: 0xAD */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"LODSd");
        break;
    case 0xAE: /* AEh SCASb       spec: 0xAE */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SCASb");
        break;
    case 0xAF: /* AFh SCASd       spec: 0xAF */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SCASd");
        break;
    case 0xB0: /* B0h MOVb b(reg),i reg=0      spec: range(0xB0,0xB7) ib reg=op02 */
    case 0xB1: /* B1h MOVb b(reg),i reg=1      spec: range(0xB0,0xB7) ib reg=op02 */
    case 0xB2: /* B2h MOVb b(reg),i reg=2      spec: range(0xB0,0xB7) ib reg=op02 */
    case 0xB3: /* B3h MOVb b(reg),i reg=3      spec: range(0xB0,0xB7) ib reg=op02 */
    case 0xB4: /* B4h MOVb b(reg),i reg=4      spec: range(0xB0,0xB7) ib reg=op02 */
    case 0xB5: /* B5h MOVb b(reg),i reg=5      spec: range(0xB0,0xB7) ib reg=op02 */
    case 0xB6: /* B6h MOVb b(reg),i reg=6      spec: range(0xB0,0xB7) ib reg=op02 */
    case 0xB7: /* B7h MOVb b(reg),i reg=7      spec: range(0xB0,0xB7) ib reg=op02 */
        imm=IPFB();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVb %s,0x%02lX",CPUregsN[1][op&7],(unsigned long)((uint32_t)imm));
        break;
    case 0xB8: /* B8h MOVd w(reg),i reg=0      spec: range(0xB8,0xBF) iw reg=op02 */
    case 0xB9: /* B9h MOVd w(reg),i reg=1      spec: range(0xB8,0xBF) iw reg=op02 */
    case 0xBA: /* BAh MOVd w(reg),i reg=2      spec: range(0xB8,0xBF) iw reg=op02 */
    case 0xBB: /* BBh MOVd w(reg),i reg=3      spec: range(0xB8,0xBF) iw reg=op02 */
    case 0xBC: /* BCh MOVd w(reg),i reg=4      spec: range(0xB8,0xBF) iw reg=op02 */
    case 0xBD: /* BDh MOVd w(reg),i reg=5      spec: range(0xB8,0xBF) iw reg=op02 */
    case 0xBE: /* BEh MOVd w(reg),i reg=6      spec: range(0xB8,0xBF) iw reg=op02 */
    case 0xBF: /* BFh MOVd w(reg),i reg=7      spec: range(0xB8,0xBF) iw reg=op02 */
        imm=IPFcodeW();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVd %s,0x%08lX",CPUregsN[4][op&7],(unsigned long)((uint32_t)imm));
        break;
    case 0xC0: /* C0h        spec:  */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        _x86decode_begin_code32_addr32_opcode_parse_C0:
/* Opcodes starting with C0h */
        switch (mrm.reg()) {
            case 0: /* C0h 00h ROLb b(r/m),b(i) reg=0      spec: 0xC0 mod/reg/rm /0 ib */
                imm=IPFB();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ROLb %s,0x%02lX",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),(unsigned long)((uint32_t)imm));
                break;
            case 1: /* C0h 08h RORb b(r/m),b(i) reg=1      spec: 0xC0 mod/reg/rm /1 ib */
                imm=IPFB();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"RORb %s,0x%02lX",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),(unsigned long)((uint32_t)imm));
                break;
            case 2: /* C0h 10h RCLb b(r/m),b(i) reg=2      spec: 0xC0 mod/reg/rm /2 ib */
                imm=IPFB();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"RCLb %s,0x%02lX",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),(unsigned long)((uint32_t)imm));
                break;
            case 3: /* C0h 18h RCRb b(r/m),b(i) reg=3      spec: 0xC0 mod/reg/rm /3 ib */
                imm=IPFB();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"RCRb %s,0x%02lX",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),(unsigned long)((uint32_t)imm));
                break;
            case 4: /* C0h 20h SHLb b(r/m),b(i) reg=4      spec: 0xC0 mod/reg/rm /4 ib */
                imm=IPFB();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SHLb %s,0x%02lX",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),(unsigned long)((uint32_t)imm));
                break;
            case 5: /* C0h 28h SHRb b(r/m),b(i) reg=5      spec: 0xC0 mod/reg/rm /5 ib */
                imm=IPFB();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SHRb %s,0x%02lX",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),(unsigned long)((uint32_t)imm));
                break;
            case 6: /* C0h 30h SALb b(r/m),b(i) reg=6      spec: 0xC0 mod/reg/rm /6 ib */
                imm=IPFB();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SALb %s,0x%02lX",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),(unsigned long)((uint32_t)imm));
                break;
            case 7: /* C0h 38h SARb b(r/m),b(i) reg=7      spec: 0xC0 mod/reg/rm /7 ib */
                imm=IPFB();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SARb %s,0x%02lX",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),(unsigned long)((uint32_t)imm));
                break;
            default:
                goto _x86decode_illegal_opcode;
        };
/* End of opcodes starting with C0h */
        break;
    case 0xC1: /* C1h        spec:  */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        _x86decode_begin_code32_addr32_opcode_parse_C1:
/* Opcodes starting with C1h */
        switch (mrm.reg()) {
            case 0: /* C1h 00h ROLd w(r/m),b(i) reg=0      spec: 0xC1 mod/reg/rm /0 ib */
                imm=IPFB();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ROLd %s,0x%02lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
                break;
            case 1: /* C1h 08h RORd w(r/m),b(i) reg=1      spec: 0xC1 mod/reg/rm /1 ib */
                imm=IPFB();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"RORd %s,0x%02lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
                break;
            case 2: /* C1h 10h RCLd w(r/m),b(i) reg=2      spec: 0xC1 mod/reg/rm /2 ib */
                imm=IPFB();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"RCLd %s,0x%02lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
                break;
            case 3: /* C1h 18h RCRd w(r/m),b(i) reg=3      spec: 0xC1 mod/reg/rm /3 ib */
                imm=IPFB();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"RCRd %s,0x%02lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
                break;
            case 4: /* C1h 20h SHLd w(r/m),b(i) reg=4      spec: 0xC1 mod/reg/rm /4 ib */
                imm=IPFB();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SHLd %s,0x%02lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
                break;
            case 5: /* C1h 28h SHRd w(r/m),b(i) reg=5      spec: 0xC1 mod/reg/rm /5 ib */
                imm=IPFB();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SHRd %s,0x%02lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
                break;
            case 6: /* C1h 30h SALd w(r/m),b(i) reg=6      spec: 0xC1 mod/reg/rm /6 ib */
                imm=IPFB();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SALd %s,0x%02lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
                break;
            case 7: /* C1h 38h SARd w(r/m),b(i) reg=7      spec: 0xC1 mod/reg/rm /7 ib */
                imm=IPFB();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SARd %s,0x%02lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
                break;
            default:
                goto _x86decode_illegal_opcode;
        };
/* End of opcodes starting with C1h */
        break;
    case 0xC2: /* C2h RETd i      spec: 0xC2 iw16 */
        imm=IPFW();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"RETd 0x%04lX",(unsigned long)((uint32_t)imm));
        break;
    case 0xC3: /* C3h RETd       spec: 0xC3 */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"RETd");
        break;
    case 0xC4: /* C4h        spec:  */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        _x86decode_begin_code32_addr32_opcode_parse_C4:
/* Opcodes starting with C4h */
        switch (mrm.byte) {
            case 0x00: /* C4h 00h LESd w(reg),w(r/m) mod=0 reg=0 rm=0      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x01: /* C4h 01h LESd w(reg),w(r/m) mod=0 reg=0 rm=1      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x02: /* C4h 02h LESd w(reg),w(r/m) mod=0 reg=0 rm=2      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x03: /* C4h 03h LESd w(reg),w(r/m) mod=0 reg=0 rm=3      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x04: /* C4h 04h LESd w(reg),w(r/m) mod=0 reg=0 rm=4      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x05: /* C4h 05h LESd w(reg),w(r/m) mod=0 reg=0 rm=5      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x06: /* C4h 06h LESd w(reg),w(r/m) mod=0 reg=0 rm=6      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x07: /* C4h 07h LESd w(reg),w(r/m) mod=0 reg=0 rm=7      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x08: /* C4h 08h LESd w(reg),w(r/m) mod=0 reg=1 rm=0      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x09: /* C4h 09h LESd w(reg),w(r/m) mod=0 reg=1 rm=1      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x0A: /* C4h 0Ah LESd w(reg),w(r/m) mod=0 reg=1 rm=2      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x0B: /* C4h 0Bh LESd w(reg),w(r/m) mod=0 reg=1 rm=3      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x0C: /* C4h 0Ch LESd w(reg),w(r/m) mod=0 reg=1 rm=4      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x0D: /* C4h 0Dh LESd w(reg),w(r/m) mod=0 reg=1 rm=5      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x0E: /* C4h 0Eh LESd w(reg),w(r/m) mod=0 reg=1 rm=6      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x0F: /* C4h 0Fh LESd w(reg),w(r/m) mod=0 reg=1 rm=7      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x10: /* C4h 10h LESd w(reg),w(r/m) mod=0 reg=2 rm=0      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x11: /* C4h 11h LESd w(reg),w(r/m) mod=0 reg=2 rm=1      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x12: /* C4h 12h LESd w(reg),w(r/m) mod=0 reg=2 rm=2      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x13: /* C4h 13h LESd w(reg),w(r/m) mod=0 reg=2 rm=3      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x14: /* C4h 14h LESd w(reg),w(r/m) mod=0 reg=2 rm=4      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x15: /* C4h 15h LESd w(reg),w(r/m) mod=0 reg=2 rm=5      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x16: /* C4h 16h LESd w(reg),w(r/m) mod=0 reg=2 rm=6      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x17: /* C4h 17h LESd w(reg),w(r/m) mod=0 reg=2 rm=7      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x18: /* C4h 18h LESd w(reg),w(r/m) mod=0 reg=3 rm=0      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x19: /* C4h 19h LESd w(reg),w(r/m) mod=0 reg=3 rm=1      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x1A: /* C4h 1Ah LESd w(reg),w(r/m) mod=0 reg=3 rm=2      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x1B: /* C4h 1Bh LESd w(reg),w(r/m) mod=0 reg=3 rm=3      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x1C: /* C4h 1Ch LESd w(reg),w(r/m) mod=0 reg=3 rm=4      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x1D: /* C4h 1Dh LESd w(reg),w(r/m) mod=0 reg=3 rm=5      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x1E: /* C4h 1Eh LESd w(reg),w(r/m) mod=0 reg=3 rm=6      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x1F: /* C4h 1Fh LESd w(reg),w(r/m) mod=0 reg=3 rm=7      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x20: /* C4h 20h LESd w(reg),w(r/m) mod=0 reg=4 rm=0      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x21: /* C4h 21h LESd w(reg),w(r/m) mod=0 reg=4 rm=1      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x22: /* C4h 22h LESd w(reg),w(r/m) mod=0 reg=4 rm=2      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x23: /* C4h 23h LESd w(reg),w(r/m) mod=0 reg=4 rm=3      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x24: /* C4h 24h LESd w(reg),w(r/m) mod=0 reg=4 rm=4      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x25: /* C4h 25h LESd w(reg),w(r/m) mod=0 reg=4 rm=5      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x26: /* C4h 26h LESd w(reg),w(r/m) mod=0 reg=4 rm=6      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x27: /* C4h 27h LESd w(reg),w(r/m) mod=0 reg=4 rm=7      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x28: /* C4h 28h LESd w(reg),w(r/m) mod=0 reg=5 rm=0      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x29: /* C4h 29h LESd w(reg),w(r/m) mod=0 reg=5 rm=1      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x2A: /* C4h 2Ah LESd w(reg),w(r/m) mod=0 reg=5 rm=2      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x2B: /* C4h 2Bh LESd w(reg),w(r/m) mod=0 reg=5 rm=3      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x2C: /* C4h 2Ch LESd w(reg),w(r/m) mod=0 reg=5 rm=4      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x2D: /* C4h 2Dh LESd w(reg),w(r/m) mod=0 reg=5 rm=5      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x2E: /* C4h 2Eh LESd w(reg),w(r/m) mod=0 reg=5 rm=6      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x2F: /* C4h 2Fh LESd w(reg),w(r/m) mod=0 reg=5 rm=7      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x30: /* C4h 30h LESd w(reg),w(r/m) mod=0 reg=6 rm=0      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x31: /* C4h 31h LESd w(reg),w(r/m) mod=0 reg=6 rm=1      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x32: /* C4h 32h LESd w(reg),w(r/m) mod=0 reg=6 rm=2      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x33: /* C4h 33h LESd w(reg),w(r/m) mod=0 reg=6 rm=3      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x34: /* C4h 34h LESd w(reg),w(r/m) mod=0 reg=6 rm=4      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x35: /* C4h 35h LESd w(reg),w(r/m) mod=0 reg=6 rm=5      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x36: /* C4h 36h LESd w(reg),w(r/m) mod=0 reg=6 rm=6      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x37: /* C4h 37h LESd w(reg),w(r/m) mod=0 reg=6 rm=7      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x38: /* C4h 38h LESd w(reg),w(r/m) mod=0 reg=7 rm=0      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x39: /* C4h 39h LESd w(reg),w(r/m) mod=0 reg=7 rm=1      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x3A: /* C4h 3Ah LESd w(reg),w(r/m) mod=0 reg=7 rm=2      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x3B: /* C4h 3Bh LESd w(reg),w(r/m) mod=0 reg=7 rm=3      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x3C: /* C4h 3Ch LESd w(reg),w(r/m) mod=0 reg=7 rm=4      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x3D: /* C4h 3Dh LESd w(reg),w(r/m) mod=0 reg=7 rm=5      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x3E: /* C4h 3Eh LESd w(reg),w(r/m) mod=0 reg=7 rm=6      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x3F: /* C4h 3Fh LESd w(reg),w(r/m) mod=0 reg=7 rm=7      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x40: /* C4h 40h LESd w(reg),w(r/m) mod=1 reg=0 rm=0      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x41: /* C4h 41h LESd w(reg),w(r/m) mod=1 reg=0 rm=1      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x42: /* C4h 42h LESd w(reg),w(r/m) mod=1 reg=0 rm=2      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x43: /* C4h 43h LESd w(reg),w(r/m) mod=1 reg=0 rm=3      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x44: /* C4h 44h LESd w(reg),w(r/m) mod=1 reg=0 rm=4      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x45: /* C4h 45h LESd w(reg),w(r/m) mod=1 reg=0 rm=5      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x46: /* C4h 46h LESd w(reg),w(r/m) mod=1 reg=0 rm=6      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x47: /* C4h 47h LESd w(reg),w(r/m) mod=1 reg=0 rm=7      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x48: /* C4h 48h LESd w(reg),w(r/m) mod=1 reg=1 rm=0      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x49: /* C4h 49h LESd w(reg),w(r/m) mod=1 reg=1 rm=1      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x4A: /* C4h 4Ah LESd w(reg),w(r/m) mod=1 reg=1 rm=2      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x4B: /* C4h 4Bh LESd w(reg),w(r/m) mod=1 reg=1 rm=3      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x4C: /* C4h 4Ch LESd w(reg),w(r/m) mod=1 reg=1 rm=4      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x4D: /* C4h 4Dh LESd w(reg),w(r/m) mod=1 reg=1 rm=5      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x4E: /* C4h 4Eh LESd w(reg),w(r/m) mod=1 reg=1 rm=6      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x4F: /* C4h 4Fh LESd w(reg),w(r/m) mod=1 reg=1 rm=7      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x50: /* C4h 50h LESd w(reg),w(r/m) mod=1 reg=2 rm=0      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x51: /* C4h 51h LESd w(reg),w(r/m) mod=1 reg=2 rm=1      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x52: /* C4h 52h LESd w(reg),w(r/m) mod=1 reg=2 rm=2      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x53: /* C4h 53h LESd w(reg),w(r/m) mod=1 reg=2 rm=3      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x54: /* C4h 54h LESd w(reg),w(r/m) mod=1 reg=2 rm=4      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x55: /* C4h 55h LESd w(reg),w(r/m) mod=1 reg=2 rm=5      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x56: /* C4h 56h LESd w(reg),w(r/m) mod=1 reg=2 rm=6      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x57: /* C4h 57h LESd w(reg),w(r/m) mod=1 reg=2 rm=7      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x58: /* C4h 58h LESd w(reg),w(r/m) mod=1 reg=3 rm=0      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x59: /* C4h 59h LESd w(reg),w(r/m) mod=1 reg=3 rm=1      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x5A: /* C4h 5Ah LESd w(reg),w(r/m) mod=1 reg=3 rm=2      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x5B: /* C4h 5Bh LESd w(reg),w(r/m) mod=1 reg=3 rm=3      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x5C: /* C4h 5Ch LESd w(reg),w(r/m) mod=1 reg=3 rm=4      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x5D: /* C4h 5Dh LESd w(reg),w(r/m) mod=1 reg=3 rm=5      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x5E: /* C4h 5Eh LESd w(reg),w(r/m) mod=1 reg=3 rm=6      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x5F: /* C4h 5Fh LESd w(reg),w(r/m) mod=1 reg=3 rm=7      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x60: /* C4h 60h LESd w(reg),w(r/m) mod=1 reg=4 rm=0      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x61: /* C4h 61h LESd w(reg),w(r/m) mod=1 reg=4 rm=1      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x62: /* C4h 62h LESd w(reg),w(r/m) mod=1 reg=4 rm=2      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x63: /* C4h 63h LESd w(reg),w(r/m) mod=1 reg=4 rm=3      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x64: /* C4h 64h LESd w(reg),w(r/m) mod=1 reg=4 rm=4      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x65: /* C4h 65h LESd w(reg),w(r/m) mod=1 reg=4 rm=5      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x66: /* C4h 66h LESd w(reg),w(r/m) mod=1 reg=4 rm=6      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x67: /* C4h 67h LESd w(reg),w(r/m) mod=1 reg=4 rm=7      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x68: /* C4h 68h LESd w(reg),w(r/m) mod=1 reg=5 rm=0      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x69: /* C4h 69h LESd w(reg),w(r/m) mod=1 reg=5 rm=1      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x6A: /* C4h 6Ah LESd w(reg),w(r/m) mod=1 reg=5 rm=2      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x6B: /* C4h 6Bh LESd w(reg),w(r/m) mod=1 reg=5 rm=3      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x6C: /* C4h 6Ch LESd w(reg),w(r/m) mod=1 reg=5 rm=4      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x6D: /* C4h 6Dh LESd w(reg),w(r/m) mod=1 reg=5 rm=5      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x6E: /* C4h 6Eh LESd w(reg),w(r/m) mod=1 reg=5 rm=6      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x6F: /* C4h 6Fh LESd w(reg),w(r/m) mod=1 reg=5 rm=7      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x70: /* C4h 70h LESd w(reg),w(r/m) mod=1 reg=6 rm=0      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x71: /* C4h 71h LESd w(reg),w(r/m) mod=1 reg=6 rm=1      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x72: /* C4h 72h LESd w(reg),w(r/m) mod=1 reg=6 rm=2      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x73: /* C4h 73h LESd w(reg),w(r/m) mod=1 reg=6 rm=3      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x74: /* C4h 74h LESd w(reg),w(r/m) mod=1 reg=6 rm=4      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x75: /* C4h 75h LESd w(reg),w(r/m) mod=1 reg=6 rm=5      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x76: /* C4h 76h LESd w(reg),w(r/m) mod=1 reg=6 rm=6      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x77: /* C4h 77h LESd w(reg),w(r/m) mod=1 reg=6 rm=7      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x78: /* C4h 78h LESd w(reg),w(r/m) mod=1 reg=7 rm=0      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x79: /* C4h 79h LESd w(reg),w(r/m) mod=1 reg=7 rm=1      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x7A: /* C4h 7Ah LESd w(reg),w(r/m) mod=1 reg=7 rm=2      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x7B: /* C4h 7Bh LESd w(reg),w(r/m) mod=1 reg=7 rm=3      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x7C: /* C4h 7Ch LESd w(reg),w(r/m) mod=1 reg=7 rm=4      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x7D: /* C4h 7Dh LESd w(reg),w(r/m) mod=1 reg=7 rm=5      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x7E: /* C4h 7Eh LESd w(reg),w(r/m) mod=1 reg=7 rm=6      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x7F: /* C4h 7Fh LESd w(reg),w(r/m) mod=1 reg=7 rm=7      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x80: /* C4h 80h LESd w(reg),w(r/m) mod=2 reg=0 rm=0      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x81: /* C4h 81h LESd w(reg),w(r/m) mod=2 reg=0 rm=1      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x82: /* C4h 82h LESd w(reg),w(r/m) mod=2 reg=0 rm=2      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x83: /* C4h 83h LESd w(reg),w(r/m) mod=2 reg=0 rm=3      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x84: /* C4h 84h LESd w(reg),w(r/m) mod=2 reg=0 rm=4      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x85: /* C4h 85h LESd w(reg),w(r/m) mod=2 reg=0 rm=5      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x86: /* C4h 86h LESd w(reg),w(r/m) mod=2 reg=0 rm=6      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x87: /* C4h 87h LESd w(reg),w(r/m) mod=2 reg=0 rm=7      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x88: /* C4h 88h LESd w(reg),w(r/m) mod=2 reg=1 rm=0      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x89: /* C4h 89h LESd w(reg),w(r/m) mod=2 reg=1 rm=1      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x8A: /* C4h 8Ah LESd w(reg),w(r/m) mod=2 reg=1 rm=2      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x8B: /* C4h 8Bh LESd w(reg),w(r/m) mod=2 reg=1 rm=3      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x8C: /* C4h 8Ch LESd w(reg),w(r/m) mod=2 reg=1 rm=4      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x8D: /* C4h 8Dh LESd w(reg),w(r/m) mod=2 reg=1 rm=5      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x8E: /* C4h 8Eh LESd w(reg),w(r/m) mod=2 reg=1 rm=6      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x8F: /* C4h 8Fh LESd w(reg),w(r/m) mod=2 reg=1 rm=7      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x90: /* C4h 90h LESd w(reg),w(r/m) mod=2 reg=2 rm=0      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x91: /* C4h 91h LESd w(reg),w(r/m) mod=2 reg=2 rm=1      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x92: /* C4h 92h LESd w(reg),w(r/m) mod=2 reg=2 rm=2      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x93: /* C4h 93h LESd w(reg),w(r/m) mod=2 reg=2 rm=3      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x94: /* C4h 94h LESd w(reg),w(r/m) mod=2 reg=2 rm=4      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x95: /* C4h 95h LESd w(reg),w(r/m) mod=2 reg=2 rm=5      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x96: /* C4h 96h LESd w(reg),w(r/m) mod=2 reg=2 rm=6      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x97: /* C4h 97h LESd w(reg),w(r/m) mod=2 reg=2 rm=7      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x98: /* C4h 98h LESd w(reg),w(r/m) mod=2 reg=3 rm=0      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x99: /* C4h 99h LESd w(reg),w(r/m) mod=2 reg=3 rm=1      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x9A: /* C4h 9Ah LESd w(reg),w(r/m) mod=2 reg=3 rm=2      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x9B: /* C4h 9Bh LESd w(reg),w(r/m) mod=2 reg=3 rm=3      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x9C: /* C4h 9Ch LESd w(reg),w(r/m) mod=2 reg=3 rm=4      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x9D: /* C4h 9Dh LESd w(reg),w(r/m) mod=2 reg=3 rm=5      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x9E: /* C4h 9Eh LESd w(reg),w(r/m) mod=2 reg=3 rm=6      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0x9F: /* C4h 9Fh LESd w(reg),w(r/m) mod=2 reg=3 rm=7      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0xA0: /* C4h A0h LESd w(reg),w(r/m) mod=2 reg=4 rm=0      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0xA1: /* C4h A1h LESd w(reg),w(r/m) mod=2 reg=4 rm=1      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0xA2: /* C4h A2h LESd w(reg),w(r/m) mod=2 reg=4 rm=2      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0xA3: /* C4h A3h LESd w(reg),w(r/m) mod=2 reg=4 rm=3      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0xA4: /* C4h A4h LESd w(reg),w(r/m) mod=2 reg=4 rm=4      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0xA5: /* C4h A5h LESd w(reg),w(r/m) mod=2 reg=4 rm=5      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0xA6: /* C4h A6h LESd w(reg),w(r/m) mod=2 reg=4 rm=6      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0xA7: /* C4h A7h LESd w(reg),w(r/m) mod=2 reg=4 rm=7      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0xA8: /* C4h A8h LESd w(reg),w(r/m) mod=2 reg=5 rm=0      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0xA9: /* C4h A9h LESd w(reg),w(r/m) mod=2 reg=5 rm=1      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0xAA: /* C4h AAh LESd w(reg),w(r/m) mod=2 reg=5 rm=2      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0xAB: /* C4h ABh LESd w(reg),w(r/m) mod=2 reg=5 rm=3      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0xAC: /* C4h ACh LESd w(reg),w(r/m) mod=2 reg=5 rm=4      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0xAD: /* C4h ADh LESd w(reg),w(r/m) mod=2 reg=5 rm=5      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0xAE: /* C4h AEh LESd w(reg),w(r/m) mod=2 reg=5 rm=6      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0xAF: /* C4h AFh LESd w(reg),w(r/m) mod=2 reg=5 rm=7      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0xB0: /* C4h B0h LESd w(reg),w(r/m) mod=2 reg=6 rm=0      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0xB1: /* C4h B1h LESd w(reg),w(r/m) mod=2 reg=6 rm=1      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0xB2: /* C4h B2h LESd w(reg),w(r/m) mod=2 reg=6 rm=2      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0xB3: /* C4h B3h LESd w(reg),w(r/m) mod=2 reg=6 rm=3      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0xB4: /* C4h B4h LESd w(reg),w(r/m) mod=2 reg=6 rm=4      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0xB5: /* C4h B5h LESd w(reg),w(r/m) mod=2 reg=6 rm=5      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0xB6: /* C4h B6h LESd w(reg),w(r/m) mod=2 reg=6 rm=6      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0xB7: /* C4h B7h LESd w(reg),w(r/m) mod=2 reg=6 rm=7      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0xB8: /* C4h B8h LESd w(reg),w(r/m) mod=2 reg=7 rm=0      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0xB9: /* C4h B9h LESd w(reg),w(r/m) mod=2 reg=7 rm=1      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0xBA: /* C4h BAh LESd w(reg),w(r/m) mod=2 reg=7 rm=2      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0xBB: /* C4h BBh LESd w(reg),w(r/m) mod=2 reg=7 rm=3      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0xBC: /* C4h BCh LESd w(reg),w(r/m) mod=2 reg=7 rm=4      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0xBD: /* C4h BDh LESd w(reg),w(r/m) mod=2 reg=7 rm=5      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0xBE: /* C4h BEh LESd w(reg),w(r/m) mod=2 reg=7 rm=6      spec: 0xC4 mod/reg/rm mod!=3 */
            case 0xBF: /* C4h BFh LESd w(reg),w(r/m) mod=2 reg=7 rm=7      spec: 0xC4 mod/reg/rm mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"LESd %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            /* opcode C4h C0h  not defined */
            /* opcode C4h C1h  not defined */
            /* opcode C4h C2h  not defined */
            /* opcode C4h C3h  not defined */
            /* opcode C4h C4h  not defined */
            /* opcode C4h C5h  not defined */
            /* opcode C4h C6h  not defined */
            /* opcode C4h C7h  not defined */
            /* opcode C4h C8h  not defined */
            /* opcode C4h C9h  not defined */
            /* opcode C4h CAh  not defined */
            /* opcode C4h CBh  not defined */
            /* opcode C4h CCh  not defined */
            /* opcode C4h CDh  not defined */
            /* opcode C4h CEh  not defined */
            /* opcode C4h CFh  not defined */
            /* opcode C4h D0h  not defined */
            /* opcode C4h D1h  not defined */
            /* opcode C4h D2h  not defined */
            /* opcode C4h D3h  not defined */
            /* opcode C4h D4h  not defined */
            /* opcode C4h D5h  not defined */
            /* opcode C4h D6h  not defined */
            /* opcode C4h D7h  not defined */
            /* opcode C4h D8h  not defined */
            /* opcode C4h D9h  not defined */
            /* opcode C4h DAh  not defined */
            /* opcode C4h DBh  not defined */
            /* opcode C4h DCh  not defined */
            /* opcode C4h DDh  not defined */
            /* opcode C4h DEh  not defined */
            /* opcode C4h DFh  not defined */
            /* opcode C4h E0h  not defined */
            case 0xE1: /* C4h E1h   mod=3 reg=4 rm=1      spec:  */
/* Opcodes starting with C4h E1h */
                op=IPFB();
                _x86decode_begin_code32_addr32_opcode_parse_C4E1:
                switch (op) {
                    /* opcode C4h E1h 00h  not defined */
                    /* opcode C4h E1h 01h  not defined */
                    /* opcode C4h E1h 02h  not defined */
                    /* opcode C4h E1h 03h  not defined */
                    /* opcode C4h E1h 04h  not defined */
                    /* opcode C4h E1h 05h  not defined */
                    /* opcode C4h E1h 06h  not defined */
                    /* opcode C4h E1h 07h  not defined */
                    /* opcode C4h E1h 08h  not defined */
                    /* opcode C4h E1h 09h  not defined */
                    /* opcode C4h E1h 0Ah  not defined */
                    /* opcode C4h E1h 0Bh  not defined */
                    /* opcode C4h E1h 0Ch  not defined */
                    /* opcode C4h E1h 0Dh  not defined */
                    /* opcode C4h E1h 0Eh  not defined */
                    /* opcode C4h E1h 0Fh  not defined */
                    /* opcode C4h E1h 10h  not defined */
                    /* opcode C4h E1h 11h  not defined */
                    /* opcode C4h E1h 12h  not defined */
                    /* opcode C4h E1h 13h  not defined */
                    /* opcode C4h E1h 14h  not defined */
                    /* opcode C4h E1h 15h  not defined */
                    /* opcode C4h E1h 16h  not defined */
                    /* opcode C4h E1h 17h  not defined */
                    /* opcode C4h E1h 18h  not defined */
                    /* opcode C4h E1h 19h  not defined */
                    /* opcode C4h E1h 1Ah  not defined */
                    /* opcode C4h E1h 1Bh  not defined */
                    /* opcode C4h E1h 1Ch  not defined */
                    /* opcode C4h E1h 1Dh  not defined */
                    /* opcode C4h E1h 1Eh  not defined */
                    /* opcode C4h E1h 1Fh  not defined */
                    /* opcode C4h E1h 20h  not defined */
                    /* opcode C4h E1h 21h  not defined */
                    /* opcode C4h E1h 22h  not defined */
                    /* opcode C4h E1h 23h  not defined */
                    /* opcode C4h E1h 24h  not defined */
                    /* opcode C4h E1h 25h  not defined */
                    /* opcode C4h E1h 26h  not defined */
                    /* opcode C4h E1h 27h  not defined */
                    /* opcode C4h E1h 28h  not defined */
                    /* opcode C4h E1h 29h  not defined */
                    /* opcode C4h E1h 2Ah  not defined */
                    /* opcode C4h E1h 2Bh  not defined */
                    /* opcode C4h E1h 2Ch  not defined */
                    /* opcode C4h E1h 2Dh  not defined */
                    /* opcode C4h E1h 2Eh  not defined */
                    /* opcode C4h E1h 2Fh  not defined */
                    /* opcode C4h E1h 30h  not defined */
                    /* opcode C4h E1h 31h  not defined */
                    /* opcode C4h E1h 32h  not defined */
                    /* opcode C4h E1h 33h  not defined */
                    /* opcode C4h E1h 34h  not defined */
                    /* opcode C4h E1h 35h  not defined */
                    /* opcode C4h E1h 36h  not defined */
                    /* opcode C4h E1h 37h  not defined */
                    /* opcode C4h E1h 38h  not defined */
                    /* opcode C4h E1h 39h  not defined */
                    /* opcode C4h E1h 3Ah  not defined */
                    /* opcode C4h E1h 3Bh  not defined */
                    /* opcode C4h E1h 3Ch  not defined */
                    /* opcode C4h E1h 3Dh  not defined */
                    /* opcode C4h E1h 3Eh  not defined */
                    /* opcode C4h E1h 3Fh  not defined */
                    case 0x40: /* C4h E1h 40h        spec:  */
                    case 0x48: /* C4h E1h 48h        spec:  */
                    case 0x50: /* C4h E1h 50h        spec:  */
                    case 0x58: /* C4h E1h 58h        spec:  */
                    case 0x60: /* C4h E1h 60h        spec:  */
                    case 0x68: /* C4h E1h 68h        spec:  */
                    case 0x70: /* C4h E1h 70h        spec:  */
                        vex.V = ((~op) >> 3) & 7;
/* Opcodes starting with C4h E1h 40h */
                        op=IPFB();
                        _x86decode_begin_code32_addr32_opcode_parse_C4E140:
                        switch (op) {
                            /* opcode C4h E1h 40h 00h  not defined */
                            /* opcode C4h E1h 40h 01h  not defined */
                            /* opcode C4h E1h 40h 02h  not defined */
                            /* opcode C4h E1h 40h 03h  not defined */
                            /* opcode C4h E1h 40h 04h  not defined */
                            /* opcode C4h E1h 40h 05h  not defined */
                            /* opcode C4h E1h 40h 06h  not defined */
                            /* opcode C4h E1h 40h 07h  not defined */
                            /* opcode C4h E1h 40h 08h  not defined */
                            /* opcode C4h E1h 40h 09h  not defined */
                            /* opcode C4h E1h 40h 0Ah  not defined */
                            /* opcode C4h E1h 40h 0Bh  not defined */
                            /* opcode C4h E1h 40h 0Ch  not defined */
                            /* opcode C4h E1h 40h 0Dh  not defined */
                            /* opcode C4h E1h 40h 0Eh  not defined */
                            /* opcode C4h E1h 40h 0Fh  not defined */
                            /* opcode C4h E1h 40h 10h  not defined */
                            /* opcode C4h E1h 40h 11h  not defined */
                            /* opcode C4h E1h 40h 12h  not defined */
                            /* opcode C4h E1h 40h 13h  not defined */
                            /* opcode C4h E1h 40h 14h  not defined */
                            /* opcode C4h E1h 40h 15h  not defined */
                            /* opcode C4h E1h 40h 16h  not defined */
                            /* opcode C4h E1h 40h 17h  not defined */
                            /* opcode C4h E1h 40h 18h  not defined */
                            /* opcode C4h E1h 40h 19h  not defined */
                            /* opcode C4h E1h 40h 1Ah  not defined */
                            /* opcode C4h E1h 40h 1Bh  not defined */
                            /* opcode C4h E1h 40h 1Ch  not defined */
                            /* opcode C4h E1h 40h 1Dh  not defined */
                            /* opcode C4h E1h 40h 1Eh  not defined */
                            /* opcode C4h E1h 40h 1Fh  not defined */
                            /* opcode C4h E1h 40h 20h  not defined */
                            /* opcode C4h E1h 40h 21h  not defined */
                            /* opcode C4h E1h 40h 22h  not defined */
                            /* opcode C4h E1h 40h 23h  not defined */
                            /* opcode C4h E1h 40h 24h  not defined */
                            /* opcode C4h E1h 40h 25h  not defined */
                            /* opcode C4h E1h 40h 26h  not defined */
                            /* opcode C4h E1h 40h 27h  not defined */
                            /* opcode C4h E1h 40h 28h  not defined */
                            /* opcode C4h E1h 40h 29h  not defined */
                            /* opcode C4h E1h 40h 2Ah  not defined */
                            /* opcode C4h E1h 40h 2Bh  not defined */
                            /* opcode C4h E1h 40h 2Ch  not defined */
                            /* opcode C4h E1h 40h 2Dh  not defined */
                            /* opcode C4h E1h 40h 2Eh  not defined */
                            /* opcode C4h E1h 40h 2Fh  not defined */
                            /* opcode C4h E1h 40h 30h  not defined */
                            /* opcode C4h E1h 40h 31h  not defined */
                            /* opcode C4h E1h 40h 32h  not defined */
                            /* opcode C4h E1h 40h 33h  not defined */
                            /* opcode C4h E1h 40h 34h  not defined */
                            /* opcode C4h E1h 40h 35h  not defined */
                            /* opcode C4h E1h 40h 36h  not defined */
                            /* opcode C4h E1h 40h 37h  not defined */
                            /* opcode C4h E1h 40h 38h  not defined */
                            /* opcode C4h E1h 40h 39h  not defined */
                            /* opcode C4h E1h 40h 3Ah  not defined */
                            /* opcode C4h E1h 40h 3Bh  not defined */
                            /* opcode C4h E1h 40h 3Ch  not defined */
                            /* opcode C4h E1h 40h 3Dh  not defined */
                            /* opcode C4h E1h 40h 3Eh  not defined */
                            /* opcode C4h E1h 40h 3Fh  not defined */
                            /* opcode C4h E1h 40h 40h  not defined */
                            /* opcode C4h E1h 40h 41h  not defined */
                            /* opcode C4h E1h 40h 42h  not defined */
                            /* opcode C4h E1h 40h 43h  not defined */
                            /* opcode C4h E1h 40h 44h  not defined */
                            /* opcode C4h E1h 40h 45h  not defined */
                            /* opcode C4h E1h 40h 46h  not defined */
                            /* opcode C4h E1h 40h 47h  not defined */
                            /* opcode C4h E1h 40h 48h  not defined */
                            /* opcode C4h E1h 40h 49h  not defined */
                            /* opcode C4h E1h 40h 4Ah  not defined */
                            /* opcode C4h E1h 40h 4Bh  not defined */
                            /* opcode C4h E1h 40h 4Ch  not defined */
                            /* opcode C4h E1h 40h 4Dh  not defined */
                            /* opcode C4h E1h 40h 4Eh  not defined */
                            /* opcode C4h E1h 40h 4Fh  not defined */
                            /* opcode C4h E1h 40h 50h  not defined */
                            /* opcode C4h E1h 40h 51h  not defined */
                            /* opcode C4h E1h 40h 52h  not defined */
                            /* opcode C4h E1h 40h 53h  not defined */
                            /* opcode C4h E1h 40h 54h  not defined */
                            /* opcode C4h E1h 40h 55h  not defined */
                            /* opcode C4h E1h 40h 56h  not defined */
                            /* opcode C4h E1h 40h 57h  not defined */
                            case 0x58: /* C4h E1h 40h 58h VADDPS sse(reg),sse(vsidx),sse(r/m)      spec: vex vsize(128) vlead(0x0F) vprefix(none) 0x58 mod/reg/rm */
                                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VADDPS XMM%u,XMM%u,%s",mrm.reg(),vex.V,IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                                break;
                            /* opcode C4h E1h 40h 59h  not defined */
                            /* opcode C4h E1h 40h 5Ah  not defined */
                            /* opcode C4h E1h 40h 5Bh  not defined */
                            /* opcode C4h E1h 40h 5Ch  not defined */
                            /* opcode C4h E1h 40h 5Dh  not defined */
                            /* opcode C4h E1h 40h 5Eh  not defined */
                            /* opcode C4h E1h 40h 5Fh  not defined */
                            /* opcode C4h E1h 40h 60h  not defined */
                            /* opcode C4h E1h 40h 61h  not defined */
                            /* opcode C4h E1h 40h 62h  not defined */
                            /* opcode C4h E1h 40h 63h  not defined */
                            /* opcode C4h E1h 40h 64h  not defined */
                            /* opcode C4h E1h 40h 65h  not defined */
                            /* opcode C4h E1h 40h 66h  not defined */
                            /* opcode C4h E1h 40h 67h  not defined */
                            /* opcode C4h E1h 40h 68h  not defined */
                            /* opcode C4h E1h 40h 69h  not defined */
                            /* opcode C4h E1h 40h 6Ah  not defined */
                            /* opcode C4h E1h 40h 6Bh  not defined */
                            /* opcode C4h E1h 40h 6Ch  not defined */
                            /* opcode C4h E1h 40h 6Dh  not defined */
                            /* opcode C4h E1h 40h 6Eh  not defined */
                            /* opcode C4h E1h 40h 6Fh  not defined */
                            /* opcode C4h E1h 40h 70h  not defined */
                            /* opcode C4h E1h 40h 71h  not defined */
                            /* opcode C4h E1h 40h 72h  not defined */
                            /* opcode C4h E1h 40h 73h  not defined */
                            /* opcode C4h E1h 40h 74h  not defined */
                            /* opcode C4h E1h 40h 75h  not defined */
                            /* opcode C4h E1h 40h 76h  not defined */
                            /* opcode C4h E1h 40h 77h  not defined */
                            /* opcode C4h E1h 40h 78h  not defined */
                            /* opcode C4h E1h 40h 79h  not defined */
                            /* opcode C4h E1h 40h 7Ah  not defined */
                            /* opcode C4h E1h 40h 7Bh  not defined */
                            /* opcode C4h E1h 40h 7Ch  not defined */
                            /* opcode C4h E1h 40h 7Dh  not defined */
                            /* opcode C4h E1h 40h 7Eh  not defined */
                            /* opcode C4h E1h 40h 7Fh  not defined */
                            /* opcode C4h E1h 40h 80h  not defined */
                            /* opcode C4h E1h 40h 81h  not defined */
                            /* opcode C4h E1h 40h 82h  not defined */
                            /* opcode C4h E1h 40h 83h  not defined */
                            /* opcode C4h E1h 40h 84h  not defined */
                            /* opcode C4h E1h 40h 85h  not defined */
                            /* opcode C4h E1h 40h 86h  not defined */
                            /* opcode C4h E1h 40h 87h  not defined */
                            /* opcode C4h E1h 40h 88h  not defined */
                            /* opcode C4h E1h 40h 89h  not defined */
                            /* opcode C4h E1h 40h 8Ah  not defined */
                            /* opcode C4h E1h 40h 8Bh  not defined */
                            /* opcode C4h E1h 40h 8Ch  not defined */
                            /* opcode C4h E1h 40h 8Dh  not defined */
                            /* opcode C4h E1h 40h 8Eh  not defined */
                            /* opcode C4h E1h 40h 8Fh  not defined */
                            /* opcode C4h E1h 40h 90h  not defined */
                            /* opcode C4h E1h 40h 91h  not defined */
                            /* opcode C4h E1h 40h 92h  not defined */
                            /* opcode C4h E1h 40h 93h  not defined */
                            /* opcode C4h E1h 40h 94h  not defined */
                            /* opcode C4h E1h 40h 95h  not defined */
                            /* opcode C4h E1h 40h 96h  not defined */
                            /* opcode C4h E1h 40h 97h  not defined */
                            /* opcode C4h E1h 40h 98h  not defined */
                            /* opcode C4h E1h 40h 99h  not defined */
                            /* opcode C4h E1h 40h 9Ah  not defined */
                            /* opcode C4h E1h 40h 9Bh  not defined */
                            /* opcode C4h E1h 40h 9Ch  not defined */
                            /* opcode C4h E1h 40h 9Dh  not defined */
                            /* opcode C4h E1h 40h 9Eh  not defined */
                            /* opcode C4h E1h 40h 9Fh  not defined */
                            /* opcode C4h E1h 40h A0h  not defined */
                            /* opcode C4h E1h 40h A1h  not defined */
                            /* opcode C4h E1h 40h A2h  not defined */
                            /* opcode C4h E1h 40h A3h  not defined */
                            /* opcode C4h E1h 40h A4h  not defined */
                            /* opcode C4h E1h 40h A5h  not defined */
                            /* opcode C4h E1h 40h A6h  not defined */
                            /* opcode C4h E1h 40h A7h  not defined */
                            /* opcode C4h E1h 40h A8h  not defined */
                            /* opcode C4h E1h 40h A9h  not defined */
                            /* opcode C4h E1h 40h AAh  not defined */
                            /* opcode C4h E1h 40h ABh  not defined */
                            /* opcode C4h E1h 40h ACh  not defined */
                            /* opcode C4h E1h 40h ADh  not defined */
                            /* opcode C4h E1h 40h AEh  not defined */
                            /* opcode C4h E1h 40h AFh  not defined */
                            /* opcode C4h E1h 40h B0h  not defined */
                            /* opcode C4h E1h 40h B1h  not defined */
                            /* opcode C4h E1h 40h B2h  not defined */
                            /* opcode C4h E1h 40h B3h  not defined */
                            /* opcode C4h E1h 40h B4h  not defined */
                            /* opcode C4h E1h 40h B5h  not defined */
                            /* opcode C4h E1h 40h B6h  not defined */
                            /* opcode C4h E1h 40h B7h  not defined */
                            /* opcode C4h E1h 40h B8h  not defined */
                            /* opcode C4h E1h 40h B9h  not defined */
                            /* opcode C4h E1h 40h BAh  not defined */
                            /* opcode C4h E1h 40h BBh  not defined */
                            /* opcode C4h E1h 40h BCh  not defined */
                            /* opcode C4h E1h 40h BDh  not defined */
                            /* opcode C4h E1h 40h BEh  not defined */
                            /* opcode C4h E1h 40h BFh  not defined */
                            /* opcode C4h E1h 40h C0h  not defined */
                            /* opcode C4h E1h 40h C1h  not defined */
                            /* opcode C4h E1h 40h C2h  not defined */
                            /* opcode C4h E1h 40h C3h  not defined */
                            /* opcode C4h E1h 40h C4h  not defined */
                            /* opcode C4h E1h 40h C5h  not defined */
                            /* opcode C4h E1h 40h C6h  not defined */
                            /* opcode C4h E1h 40h C7h  not defined */
                            /* opcode C4h E1h 40h C8h  not defined */
                            /* opcode C4h E1h 40h C9h  not defined */
                            /* opcode C4h E1h 40h CAh  not defined */
                            /* opcode C4h E1h 40h CBh  not defined */
                            /* opcode C4h E1h 40h CCh  not defined */
                            /* opcode C4h E1h 40h CDh  not defined */
                            /* opcode C4h E1h 40h CEh  not defined */
                            /* opcode C4h E1h 40h CFh  not defined */
                            /* opcode C4h E1h 40h D0h  not defined */
                            /* opcode C4h E1h 40h D1h  not defined */
                            /* opcode C4h E1h 40h D2h  not defined */
                            /* opcode C4h E1h 40h D3h  not defined */
                            /* opcode C4h E1h 40h D4h  not defined */
                            /* opcode C4h E1h 40h D5h  not defined */
                            /* opcode C4h E1h 40h D6h  not defined */
                            /* opcode C4h E1h 40h D7h  not defined */
                            /* opcode C4h E1h 40h D8h  not defined */
                            /* opcode C4h E1h 40h D9h  not defined */
                            /* opcode C4h E1h 40h DAh  not defined */
                            /* opcode C4h E1h 40h DBh  not defined */
                            /* opcode C4h E1h 40h DCh  not defined */
                            /* opcode C4h E1h 40h DDh  not defined */
                            /* opcode C4h E1h 40h DEh  not defined */
                            /* opcode C4h E1h 40h DFh  not defined */
                            /* opcode C4h E1h 40h E0h  not defined */
                            /* opcode C4h E1h 40h E1h  not defined */
                            /* opcode C4h E1h 40h E2h  not defined */
                            /* opcode C4h E1h 40h E3h  not defined */
                            /* opcode C4h E1h 40h E4h  not defined */
                            /* opcode C4h E1h 40h E5h  not defined */
                            /* opcode C4h E1h 40h E6h  not defined */
                            /* opcode C4h E1h 40h E7h  not defined */
                            /* opcode C4h E1h 40h E8h  not defined */
                            /* opcode C4h E1h 40h E9h  not defined */
                            /* opcode C4h E1h 40h EAh  not defined */
                            /* opcode C4h E1h 40h EBh  not defined */
                            /* opcode C4h E1h 40h ECh  not defined */
                            /* opcode C4h E1h 40h EDh  not defined */
                            /* opcode C4h E1h 40h EEh  not defined */
                            /* opcode C4h E1h 40h EFh  not defined */
                            /* opcode C4h E1h 40h F0h  not defined */
                            /* opcode C4h E1h 40h F1h  not defined */
                            /* opcode C4h E1h 40h F2h  not defined */
                            /* opcode C4h E1h 40h F3h  not defined */
                            /* opcode C4h E1h 40h F4h  not defined */
                            /* opcode C4h E1h 40h F5h  not defined */
                            /* opcode C4h E1h 40h F6h  not defined */
                            /* opcode C4h E1h 40h F7h  not defined */
                            /* opcode C4h E1h 40h F8h  not defined */
                            /* opcode C4h E1h 40h F9h  not defined */
                            /* opcode C4h E1h 40h FAh  not defined */
                            /* opcode C4h E1h 40h FBh  not defined */
                            /* opcode C4h E1h 40h FCh  not defined */
                            /* opcode C4h E1h 40h FDh  not defined */
                            /* opcode C4h E1h 40h FEh  not defined */
                            /* opcode C4h E1h 40h FFh  not defined */
                            default:
                                goto _x86decode_illegal_opcode;
                        };
/* End of opcodes starting with C4h E1h 40h */
                        break;
                    case 0x41: /* C4h E1h 41h        spec:  */
                    case 0x49: /* C4h E1h 49h        spec:  */
                    case 0x51: /* C4h E1h 51h        spec:  */
                    case 0x59: /* C4h E1h 59h        spec:  */
                    case 0x61: /* C4h E1h 61h        spec:  */
                    case 0x69: /* C4h E1h 69h        spec:  */
                    case 0x71: /* C4h E1h 71h        spec:  */
                    case 0x79: /* C4h E1h 79h        spec:  */
                        vex.V = ((~op) >> 3) & 7;
/* Opcodes starting with C4h E1h 41h */
                        op=IPFB();
                        _x86decode_begin_code32_addr32_opcode_parse_C4E141:
                        switch (op) {
                            /* opcode C4h E1h 41h 00h  not defined */
                            /* opcode C4h E1h 41h 01h  not defined */
                            /* opcode C4h E1h 41h 02h  not defined */
                            /* opcode C4h E1h 41h 03h  not defined */
                            /* opcode C4h E1h 41h 04h  not defined */
                            /* opcode C4h E1h 41h 05h  not defined */
                            /* opcode C4h E1h 41h 06h  not defined */
                            /* opcode C4h E1h 41h 07h  not defined */
                            /* opcode C4h E1h 41h 08h  not defined */
                            /* opcode C4h E1h 41h 09h  not defined */
                            /* opcode C4h E1h 41h 0Ah  not defined */
                            /* opcode C4h E1h 41h 0Bh  not defined */
                            /* opcode C4h E1h 41h 0Ch  not defined */
                            /* opcode C4h E1h 41h 0Dh  not defined */
                            /* opcode C4h E1h 41h 0Eh  not defined */
                            /* opcode C4h E1h 41h 0Fh  not defined */
                            /* opcode C4h E1h 41h 10h  not defined */
                            /* opcode C4h E1h 41h 11h  not defined */
                            /* opcode C4h E1h 41h 12h  not defined */
                            /* opcode C4h E1h 41h 13h  not defined */
                            /* opcode C4h E1h 41h 14h  not defined */
                            /* opcode C4h E1h 41h 15h  not defined */
                            /* opcode C4h E1h 41h 16h  not defined */
                            /* opcode C4h E1h 41h 17h  not defined */
                            /* opcode C4h E1h 41h 18h  not defined */
                            /* opcode C4h E1h 41h 19h  not defined */
                            /* opcode C4h E1h 41h 1Ah  not defined */
                            /* opcode C4h E1h 41h 1Bh  not defined */
                            /* opcode C4h E1h 41h 1Ch  not defined */
                            /* opcode C4h E1h 41h 1Dh  not defined */
                            /* opcode C4h E1h 41h 1Eh  not defined */
                            /* opcode C4h E1h 41h 1Fh  not defined */
                            /* opcode C4h E1h 41h 20h  not defined */
                            /* opcode C4h E1h 41h 21h  not defined */
                            /* opcode C4h E1h 41h 22h  not defined */
                            /* opcode C4h E1h 41h 23h  not defined */
                            /* opcode C4h E1h 41h 24h  not defined */
                            /* opcode C4h E1h 41h 25h  not defined */
                            /* opcode C4h E1h 41h 26h  not defined */
                            /* opcode C4h E1h 41h 27h  not defined */
                            /* opcode C4h E1h 41h 28h  not defined */
                            /* opcode C4h E1h 41h 29h  not defined */
                            /* opcode C4h E1h 41h 2Ah  not defined */
                            /* opcode C4h E1h 41h 2Bh  not defined */
                            /* opcode C4h E1h 41h 2Ch  not defined */
                            /* opcode C4h E1h 41h 2Dh  not defined */
                            /* opcode C4h E1h 41h 2Eh  not defined */
                            /* opcode C4h E1h 41h 2Fh  not defined */
                            /* opcode C4h E1h 41h 30h  not defined */
                            /* opcode C4h E1h 41h 31h  not defined */
                            /* opcode C4h E1h 41h 32h  not defined */
                            /* opcode C4h E1h 41h 33h  not defined */
                            /* opcode C4h E1h 41h 34h  not defined */
                            /* opcode C4h E1h 41h 35h  not defined */
                            /* opcode C4h E1h 41h 36h  not defined */
                            /* opcode C4h E1h 41h 37h  not defined */
                            /* opcode C4h E1h 41h 38h  not defined */
                            /* opcode C4h E1h 41h 39h  not defined */
                            /* opcode C4h E1h 41h 3Ah  not defined */
                            /* opcode C4h E1h 41h 3Bh  not defined */
                            /* opcode C4h E1h 41h 3Ch  not defined */
                            /* opcode C4h E1h 41h 3Dh  not defined */
                            /* opcode C4h E1h 41h 3Eh  not defined */
                            /* opcode C4h E1h 41h 3Fh  not defined */
                            /* opcode C4h E1h 41h 40h  not defined */
                            /* opcode C4h E1h 41h 41h  not defined */
                            /* opcode C4h E1h 41h 42h  not defined */
                            /* opcode C4h E1h 41h 43h  not defined */
                            /* opcode C4h E1h 41h 44h  not defined */
                            /* opcode C4h E1h 41h 45h  not defined */
                            /* opcode C4h E1h 41h 46h  not defined */
                            /* opcode C4h E1h 41h 47h  not defined */
                            /* opcode C4h E1h 41h 48h  not defined */
                            /* opcode C4h E1h 41h 49h  not defined */
                            /* opcode C4h E1h 41h 4Ah  not defined */
                            /* opcode C4h E1h 41h 4Bh  not defined */
                            /* opcode C4h E1h 41h 4Ch  not defined */
                            /* opcode C4h E1h 41h 4Dh  not defined */
                            /* opcode C4h E1h 41h 4Eh  not defined */
                            /* opcode C4h E1h 41h 4Fh  not defined */
                            /* opcode C4h E1h 41h 50h  not defined */
                            /* opcode C4h E1h 41h 51h  not defined */
                            /* opcode C4h E1h 41h 52h  not defined */
                            /* opcode C4h E1h 41h 53h  not defined */
                            /* opcode C4h E1h 41h 54h  not defined */
                            /* opcode C4h E1h 41h 55h  not defined */
                            /* opcode C4h E1h 41h 56h  not defined */
                            /* opcode C4h E1h 41h 57h  not defined */
                            case 0x58: /* C4h E1h 41h 58h VADDPD sse(reg),sse(vsidx),sse(r/m)      spec: vex vsize(128) vlead(0x0F) vprefix(0x66) 0x58 mod/reg/rm */
                                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VADDPD XMM%u,XMM%u,%s",mrm.reg(),vex.V,IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                                break;
                            /* opcode C4h E1h 41h 59h  not defined */
                            /* opcode C4h E1h 41h 5Ah  not defined */
                            /* opcode C4h E1h 41h 5Bh  not defined */
                            /* opcode C4h E1h 41h 5Ch  not defined */
                            /* opcode C4h E1h 41h 5Dh  not defined */
                            /* opcode C4h E1h 41h 5Eh  not defined */
                            /* opcode C4h E1h 41h 5Fh  not defined */
                            /* opcode C4h E1h 41h 60h  not defined */
                            /* opcode C4h E1h 41h 61h  not defined */
                            /* opcode C4h E1h 41h 62h  not defined */
                            /* opcode C4h E1h 41h 63h  not defined */
                            /* opcode C4h E1h 41h 64h  not defined */
                            /* opcode C4h E1h 41h 65h  not defined */
                            /* opcode C4h E1h 41h 66h  not defined */
                            /* opcode C4h E1h 41h 67h  not defined */
                            /* opcode C4h E1h 41h 68h  not defined */
                            /* opcode C4h E1h 41h 69h  not defined */
                            /* opcode C4h E1h 41h 6Ah  not defined */
                            /* opcode C4h E1h 41h 6Bh  not defined */
                            /* opcode C4h E1h 41h 6Ch  not defined */
                            /* opcode C4h E1h 41h 6Dh  not defined */
                            /* opcode C4h E1h 41h 6Eh  not defined */
                            /* opcode C4h E1h 41h 6Fh  not defined */
                            /* opcode C4h E1h 41h 70h  not defined */
                            /* opcode C4h E1h 41h 71h  not defined */
                            /* opcode C4h E1h 41h 72h  not defined */
                            /* opcode C4h E1h 41h 73h  not defined */
                            /* opcode C4h E1h 41h 74h  not defined */
                            /* opcode C4h E1h 41h 75h  not defined */
                            /* opcode C4h E1h 41h 76h  not defined */
                            /* opcode C4h E1h 41h 77h  not defined */
                            /* opcode C4h E1h 41h 78h  not defined */
                            /* opcode C4h E1h 41h 79h  not defined */
                            /* opcode C4h E1h 41h 7Ah  not defined */
                            /* opcode C4h E1h 41h 7Bh  not defined */
                            /* opcode C4h E1h 41h 7Ch  not defined */
                            /* opcode C4h E1h 41h 7Dh  not defined */
                            /* opcode C4h E1h 41h 7Eh  not defined */
                            /* opcode C4h E1h 41h 7Fh  not defined */
                            /* opcode C4h E1h 41h 80h  not defined */
                            /* opcode C4h E1h 41h 81h  not defined */
                            /* opcode C4h E1h 41h 82h  not defined */
                            /* opcode C4h E1h 41h 83h  not defined */
                            /* opcode C4h E1h 41h 84h  not defined */
                            /* opcode C4h E1h 41h 85h  not defined */
                            /* opcode C4h E1h 41h 86h  not defined */
                            /* opcode C4h E1h 41h 87h  not defined */
                            /* opcode C4h E1h 41h 88h  not defined */
                            /* opcode C4h E1h 41h 89h  not defined */
                            /* opcode C4h E1h 41h 8Ah  not defined */
                            /* opcode C4h E1h 41h 8Bh  not defined */
                            /* opcode C4h E1h 41h 8Ch  not defined */
                            /* opcode C4h E1h 41h 8Dh  not defined */
                            /* opcode C4h E1h 41h 8Eh  not defined */
                            /* opcode C4h E1h 41h 8Fh  not defined */
                            /* opcode C4h E1h 41h 90h  not defined */
                            /* opcode C4h E1h 41h 91h  not defined */
                            /* opcode C4h E1h 41h 92h  not defined */
                            /* opcode C4h E1h 41h 93h  not defined */
                            /* opcode C4h E1h 41h 94h  not defined */
                            /* opcode C4h E1h 41h 95h  not defined */
                            /* opcode C4h E1h 41h 96h  not defined */
                            /* opcode C4h E1h 41h 97h  not defined */
                            /* opcode C4h E1h 41h 98h  not defined */
                            /* opcode C4h E1h 41h 99h  not defined */
                            /* opcode C4h E1h 41h 9Ah  not defined */
                            /* opcode C4h E1h 41h 9Bh  not defined */
                            /* opcode C4h E1h 41h 9Ch  not defined */
                            /* opcode C4h E1h 41h 9Dh  not defined */
                            /* opcode C4h E1h 41h 9Eh  not defined */
                            /* opcode C4h E1h 41h 9Fh  not defined */
                            /* opcode C4h E1h 41h A0h  not defined */
                            /* opcode C4h E1h 41h A1h  not defined */
                            /* opcode C4h E1h 41h A2h  not defined */
                            /* opcode C4h E1h 41h A3h  not defined */
                            /* opcode C4h E1h 41h A4h  not defined */
                            /* opcode C4h E1h 41h A5h  not defined */
                            /* opcode C4h E1h 41h A6h  not defined */
                            /* opcode C4h E1h 41h A7h  not defined */
                            /* opcode C4h E1h 41h A8h  not defined */
                            /* opcode C4h E1h 41h A9h  not defined */
                            /* opcode C4h E1h 41h AAh  not defined */
                            /* opcode C4h E1h 41h ABh  not defined */
                            /* opcode C4h E1h 41h ACh  not defined */
                            /* opcode C4h E1h 41h ADh  not defined */
                            /* opcode C4h E1h 41h AEh  not defined */
                            /* opcode C4h E1h 41h AFh  not defined */
                            /* opcode C4h E1h 41h B0h  not defined */
                            /* opcode C4h E1h 41h B1h  not defined */
                            /* opcode C4h E1h 41h B2h  not defined */
                            /* opcode C4h E1h 41h B3h  not defined */
                            /* opcode C4h E1h 41h B4h  not defined */
                            /* opcode C4h E1h 41h B5h  not defined */
                            /* opcode C4h E1h 41h B6h  not defined */
                            /* opcode C4h E1h 41h B7h  not defined */
                            /* opcode C4h E1h 41h B8h  not defined */
                            /* opcode C4h E1h 41h B9h  not defined */
                            /* opcode C4h E1h 41h BAh  not defined */
                            /* opcode C4h E1h 41h BBh  not defined */
                            /* opcode C4h E1h 41h BCh  not defined */
                            /* opcode C4h E1h 41h BDh  not defined */
                            /* opcode C4h E1h 41h BEh  not defined */
                            /* opcode C4h E1h 41h BFh  not defined */
                            /* opcode C4h E1h 41h C0h  not defined */
                            /* opcode C4h E1h 41h C1h  not defined */
                            /* opcode C4h E1h 41h C2h  not defined */
                            /* opcode C4h E1h 41h C3h  not defined */
                            /* opcode C4h E1h 41h C4h  not defined */
                            /* opcode C4h E1h 41h C5h  not defined */
                            /* opcode C4h E1h 41h C6h  not defined */
                            /* opcode C4h E1h 41h C7h  not defined */
                            /* opcode C4h E1h 41h C8h  not defined */
                            /* opcode C4h E1h 41h C9h  not defined */
                            /* opcode C4h E1h 41h CAh  not defined */
                            /* opcode C4h E1h 41h CBh  not defined */
                            /* opcode C4h E1h 41h CCh  not defined */
                            /* opcode C4h E1h 41h CDh  not defined */
                            /* opcode C4h E1h 41h CEh  not defined */
                            /* opcode C4h E1h 41h CFh  not defined */
                            /* opcode C4h E1h 41h D0h  not defined */
                            /* opcode C4h E1h 41h D1h  not defined */
                            /* opcode C4h E1h 41h D2h  not defined */
                            /* opcode C4h E1h 41h D3h  not defined */
                            /* opcode C4h E1h 41h D4h  not defined */
                            /* opcode C4h E1h 41h D5h  not defined */
                            /* opcode C4h E1h 41h D6h  not defined */
                            /* opcode C4h E1h 41h D7h  not defined */
                            /* opcode C4h E1h 41h D8h  not defined */
                            /* opcode C4h E1h 41h D9h  not defined */
                            /* opcode C4h E1h 41h DAh  not defined */
                            /* opcode C4h E1h 41h DBh  not defined */
                            /* opcode C4h E1h 41h DCh  not defined */
                            /* opcode C4h E1h 41h DDh  not defined */
                            /* opcode C4h E1h 41h DEh  not defined */
                            /* opcode C4h E1h 41h DFh  not defined */
                            /* opcode C4h E1h 41h E0h  not defined */
                            /* opcode C4h E1h 41h E1h  not defined */
                            /* opcode C4h E1h 41h E2h  not defined */
                            /* opcode C4h E1h 41h E3h  not defined */
                            /* opcode C4h E1h 41h E4h  not defined */
                            /* opcode C4h E1h 41h E5h  not defined */
                            /* opcode C4h E1h 41h E6h  not defined */
                            /* opcode C4h E1h 41h E7h  not defined */
                            /* opcode C4h E1h 41h E8h  not defined */
                            /* opcode C4h E1h 41h E9h  not defined */
                            /* opcode C4h E1h 41h EAh  not defined */
                            /* opcode C4h E1h 41h EBh  not defined */
                            /* opcode C4h E1h 41h ECh  not defined */
                            /* opcode C4h E1h 41h EDh  not defined */
                            /* opcode C4h E1h 41h EEh  not defined */
                            /* opcode C4h E1h 41h EFh  not defined */
                            /* opcode C4h E1h 41h F0h  not defined */
                            /* opcode C4h E1h 41h F1h  not defined */
                            /* opcode C4h E1h 41h F2h  not defined */
                            /* opcode C4h E1h 41h F3h  not defined */
                            /* opcode C4h E1h 41h F4h  not defined */
                            /* opcode C4h E1h 41h F5h  not defined */
                            /* opcode C4h E1h 41h F6h  not defined */
                            /* opcode C4h E1h 41h F7h  not defined */
                            /* opcode C4h E1h 41h F8h  not defined */
                            /* opcode C4h E1h 41h F9h  not defined */
                            /* opcode C4h E1h 41h FAh  not defined */
                            /* opcode C4h E1h 41h FBh  not defined */
                            /* opcode C4h E1h 41h FCh  not defined */
                            /* opcode C4h E1h 41h FDh  not defined */
                            /* opcode C4h E1h 41h FEh  not defined */
                            /* opcode C4h E1h 41h FFh  not defined */
                            default:
                                goto _x86decode_illegal_opcode;
                        };
/* End of opcodes starting with C4h E1h 41h */
                        break;
                    /* opcode C4h E1h 42h  not defined */
                    /* opcode C4h E1h 43h  not defined */
                    case 0x44: /* C4h E1h 44h        spec:  */
                    case 0x4C: /* C4h E1h 4Ch        spec:  */
                    case 0x54: /* C4h E1h 54h        spec:  */
                    case 0x5C: /* C4h E1h 5Ch        spec:  */
                    case 0x64: /* C4h E1h 64h        spec:  */
                    case 0x6C: /* C4h E1h 6Ch        spec:  */
                    case 0x74: /* C4h E1h 74h        spec:  */
                        vex.V = ((~op) >> 3) & 7;
/* Opcodes starting with C4h E1h 44h */
                        op=IPFB();
                        _x86decode_begin_code32_addr32_opcode_parse_C4E144:
                        switch (op) {
                            /* opcode C4h E1h 44h 00h  not defined */
                            /* opcode C4h E1h 44h 01h  not defined */
                            /* opcode C4h E1h 44h 02h  not defined */
                            /* opcode C4h E1h 44h 03h  not defined */
                            /* opcode C4h E1h 44h 04h  not defined */
                            /* opcode C4h E1h 44h 05h  not defined */
                            /* opcode C4h E1h 44h 06h  not defined */
                            /* opcode C4h E1h 44h 07h  not defined */
                            /* opcode C4h E1h 44h 08h  not defined */
                            /* opcode C4h E1h 44h 09h  not defined */
                            /* opcode C4h E1h 44h 0Ah  not defined */
                            /* opcode C4h E1h 44h 0Bh  not defined */
                            /* opcode C4h E1h 44h 0Ch  not defined */
                            /* opcode C4h E1h 44h 0Dh  not defined */
                            /* opcode C4h E1h 44h 0Eh  not defined */
                            /* opcode C4h E1h 44h 0Fh  not defined */
                            /* opcode C4h E1h 44h 10h  not defined */
                            /* opcode C4h E1h 44h 11h  not defined */
                            /* opcode C4h E1h 44h 12h  not defined */
                            /* opcode C4h E1h 44h 13h  not defined */
                            /* opcode C4h E1h 44h 14h  not defined */
                            /* opcode C4h E1h 44h 15h  not defined */
                            /* opcode C4h E1h 44h 16h  not defined */
                            /* opcode C4h E1h 44h 17h  not defined */
                            /* opcode C4h E1h 44h 18h  not defined */
                            /* opcode C4h E1h 44h 19h  not defined */
                            /* opcode C4h E1h 44h 1Ah  not defined */
                            /* opcode C4h E1h 44h 1Bh  not defined */
                            /* opcode C4h E1h 44h 1Ch  not defined */
                            /* opcode C4h E1h 44h 1Dh  not defined */
                            /* opcode C4h E1h 44h 1Eh  not defined */
                            /* opcode C4h E1h 44h 1Fh  not defined */
                            /* opcode C4h E1h 44h 20h  not defined */
                            /* opcode C4h E1h 44h 21h  not defined */
                            /* opcode C4h E1h 44h 22h  not defined */
                            /* opcode C4h E1h 44h 23h  not defined */
                            /* opcode C4h E1h 44h 24h  not defined */
                            /* opcode C4h E1h 44h 25h  not defined */
                            /* opcode C4h E1h 44h 26h  not defined */
                            /* opcode C4h E1h 44h 27h  not defined */
                            /* opcode C4h E1h 44h 28h  not defined */
                            /* opcode C4h E1h 44h 29h  not defined */
                            /* opcode C4h E1h 44h 2Ah  not defined */
                            /* opcode C4h E1h 44h 2Bh  not defined */
                            /* opcode C4h E1h 44h 2Ch  not defined */
                            /* opcode C4h E1h 44h 2Dh  not defined */
                            /* opcode C4h E1h 44h 2Eh  not defined */
                            /* opcode C4h E1h 44h 2Fh  not defined */
                            /* opcode C4h E1h 44h 30h  not defined */
                            /* opcode C4h E1h 44h 31h  not defined */
                            /* opcode C4h E1h 44h 32h  not defined */
                            /* opcode C4h E1h 44h 33h  not defined */
                            /* opcode C4h E1h 44h 34h  not defined */
                            /* opcode C4h E1h 44h 35h  not defined */
                            /* opcode C4h E1h 44h 36h  not defined */
                            /* opcode C4h E1h 44h 37h  not defined */
                            /* opcode C4h E1h 44h 38h  not defined */
                            /* opcode C4h E1h 44h 39h  not defined */
                            /* opcode C4h E1h 44h 3Ah  not defined */
                            /* opcode C4h E1h 44h 3Bh  not defined */
                            /* opcode C4h E1h 44h 3Ch  not defined */
                            /* opcode C4h E1h 44h 3Dh  not defined */
                            /* opcode C4h E1h 44h 3Eh  not defined */
                            /* opcode C4h E1h 44h 3Fh  not defined */
                            /* opcode C4h E1h 44h 40h  not defined */
                            /* opcode C4h E1h 44h 41h  not defined */
                            /* opcode C4h E1h 44h 42h  not defined */
                            /* opcode C4h E1h 44h 43h  not defined */
                            /* opcode C4h E1h 44h 44h  not defined */
                            /* opcode C4h E1h 44h 45h  not defined */
                            /* opcode C4h E1h 44h 46h  not defined */
                            /* opcode C4h E1h 44h 47h  not defined */
                            /* opcode C4h E1h 44h 48h  not defined */
                            /* opcode C4h E1h 44h 49h  not defined */
                            /* opcode C4h E1h 44h 4Ah  not defined */
                            /* opcode C4h E1h 44h 4Bh  not defined */
                            /* opcode C4h E1h 44h 4Ch  not defined */
                            /* opcode C4h E1h 44h 4Dh  not defined */
                            /* opcode C4h E1h 44h 4Eh  not defined */
                            /* opcode C4h E1h 44h 4Fh  not defined */
                            /* opcode C4h E1h 44h 50h  not defined */
                            /* opcode C4h E1h 44h 51h  not defined */
                            /* opcode C4h E1h 44h 52h  not defined */
                            /* opcode C4h E1h 44h 53h  not defined */
                            /* opcode C4h E1h 44h 54h  not defined */
                            /* opcode C4h E1h 44h 55h  not defined */
                            /* opcode C4h E1h 44h 56h  not defined */
                            /* opcode C4h E1h 44h 57h  not defined */
                            case 0x58: /* C4h E1h 44h 58h VADDPS avx(reg),avx(vsidx),avx(r/m)      spec: vex vsize(256) vlead(0x0F) vprefix(none) 0x58 mod/reg/rm */
                                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VADDPS YMM%u,YMM%u,%s",mrm.reg(),vex.V,IPDecPrint32(mrm,sib,disp,32,RC_AVXREG,""));
                                break;
                            /* opcode C4h E1h 44h 59h  not defined */
                            /* opcode C4h E1h 44h 5Ah  not defined */
                            /* opcode C4h E1h 44h 5Bh  not defined */
                            /* opcode C4h E1h 44h 5Ch  not defined */
                            /* opcode C4h E1h 44h 5Dh  not defined */
                            /* opcode C4h E1h 44h 5Eh  not defined */
                            /* opcode C4h E1h 44h 5Fh  not defined */
                            /* opcode C4h E1h 44h 60h  not defined */
                            /* opcode C4h E1h 44h 61h  not defined */
                            /* opcode C4h E1h 44h 62h  not defined */
                            /* opcode C4h E1h 44h 63h  not defined */
                            /* opcode C4h E1h 44h 64h  not defined */
                            /* opcode C4h E1h 44h 65h  not defined */
                            /* opcode C4h E1h 44h 66h  not defined */
                            /* opcode C4h E1h 44h 67h  not defined */
                            /* opcode C4h E1h 44h 68h  not defined */
                            /* opcode C4h E1h 44h 69h  not defined */
                            /* opcode C4h E1h 44h 6Ah  not defined */
                            /* opcode C4h E1h 44h 6Bh  not defined */
                            /* opcode C4h E1h 44h 6Ch  not defined */
                            /* opcode C4h E1h 44h 6Dh  not defined */
                            /* opcode C4h E1h 44h 6Eh  not defined */
                            /* opcode C4h E1h 44h 6Fh  not defined */
                            /* opcode C4h E1h 44h 70h  not defined */
                            /* opcode C4h E1h 44h 71h  not defined */
                            /* opcode C4h E1h 44h 72h  not defined */
                            /* opcode C4h E1h 44h 73h  not defined */
                            /* opcode C4h E1h 44h 74h  not defined */
                            /* opcode C4h E1h 44h 75h  not defined */
                            /* opcode C4h E1h 44h 76h  not defined */
                            /* opcode C4h E1h 44h 77h  not defined */
                            /* opcode C4h E1h 44h 78h  not defined */
                            /* opcode C4h E1h 44h 79h  not defined */
                            /* opcode C4h E1h 44h 7Ah  not defined */
                            /* opcode C4h E1h 44h 7Bh  not defined */
                            /* opcode C4h E1h 44h 7Ch  not defined */
                            /* opcode C4h E1h 44h 7Dh  not defined */
                            /* opcode C4h E1h 44h 7Eh  not defined */
                            /* opcode C4h E1h 44h 7Fh  not defined */
                            /* opcode C4h E1h 44h 80h  not defined */
                            /* opcode C4h E1h 44h 81h  not defined */
                            /* opcode C4h E1h 44h 82h  not defined */
                            /* opcode C4h E1h 44h 83h  not defined */
                            /* opcode C4h E1h 44h 84h  not defined */
                            /* opcode C4h E1h 44h 85h  not defined */
                            /* opcode C4h E1h 44h 86h  not defined */
                            /* opcode C4h E1h 44h 87h  not defined */
                            /* opcode C4h E1h 44h 88h  not defined */
                            /* opcode C4h E1h 44h 89h  not defined */
                            /* opcode C4h E1h 44h 8Ah  not defined */
                            /* opcode C4h E1h 44h 8Bh  not defined */
                            /* opcode C4h E1h 44h 8Ch  not defined */
                            /* opcode C4h E1h 44h 8Dh  not defined */
                            /* opcode C4h E1h 44h 8Eh  not defined */
                            /* opcode C4h E1h 44h 8Fh  not defined */
                            /* opcode C4h E1h 44h 90h  not defined */
                            /* opcode C4h E1h 44h 91h  not defined */
                            /* opcode C4h E1h 44h 92h  not defined */
                            /* opcode C4h E1h 44h 93h  not defined */
                            /* opcode C4h E1h 44h 94h  not defined */
                            /* opcode C4h E1h 44h 95h  not defined */
                            /* opcode C4h E1h 44h 96h  not defined */
                            /* opcode C4h E1h 44h 97h  not defined */
                            /* opcode C4h E1h 44h 98h  not defined */
                            /* opcode C4h E1h 44h 99h  not defined */
                            /* opcode C4h E1h 44h 9Ah  not defined */
                            /* opcode C4h E1h 44h 9Bh  not defined */
                            /* opcode C4h E1h 44h 9Ch  not defined */
                            /* opcode C4h E1h 44h 9Dh  not defined */
                            /* opcode C4h E1h 44h 9Eh  not defined */
                            /* opcode C4h E1h 44h 9Fh  not defined */
                            /* opcode C4h E1h 44h A0h  not defined */
                            /* opcode C4h E1h 44h A1h  not defined */
                            /* opcode C4h E1h 44h A2h  not defined */
                            /* opcode C4h E1h 44h A3h  not defined */
                            /* opcode C4h E1h 44h A4h  not defined */
                            /* opcode C4h E1h 44h A5h  not defined */
                            /* opcode C4h E1h 44h A6h  not defined */
                            /* opcode C4h E1h 44h A7h  not defined */
                            /* opcode C4h E1h 44h A8h  not defined */
                            /* opcode C4h E1h 44h A9h  not defined */
                            /* opcode C4h E1h 44h AAh  not defined */
                            /* opcode C4h E1h 44h ABh  not defined */
                            /* opcode C4h E1h 44h ACh  not defined */
                            /* opcode C4h E1h 44h ADh  not defined */
                            /* opcode C4h E1h 44h AEh  not defined */
                            /* opcode C4h E1h 44h AFh  not defined */
                            /* opcode C4h E1h 44h B0h  not defined */
                            /* opcode C4h E1h 44h B1h  not defined */
                            /* opcode C4h E1h 44h B2h  not defined */
                            /* opcode C4h E1h 44h B3h  not defined */
                            /* opcode C4h E1h 44h B4h  not defined */
                            /* opcode C4h E1h 44h B5h  not defined */
                            /* opcode C4h E1h 44h B6h  not defined */
                            /* opcode C4h E1h 44h B7h  not defined */
                            /* opcode C4h E1h 44h B8h  not defined */
                            /* opcode C4h E1h 44h B9h  not defined */
                            /* opcode C4h E1h 44h BAh  not defined */
                            /* opcode C4h E1h 44h BBh  not defined */
                            /* opcode C4h E1h 44h BCh  not defined */
                            /* opcode C4h E1h 44h BDh  not defined */
                            /* opcode C4h E1h 44h BEh  not defined */
                            /* opcode C4h E1h 44h BFh  not defined */
                            /* opcode C4h E1h 44h C0h  not defined */
                            /* opcode C4h E1h 44h C1h  not defined */
                            /* opcode C4h E1h 44h C2h  not defined */
                            /* opcode C4h E1h 44h C3h  not defined */
                            /* opcode C4h E1h 44h C4h  not defined */
                            /* opcode C4h E1h 44h C5h  not defined */
                            /* opcode C4h E1h 44h C6h  not defined */
                            /* opcode C4h E1h 44h C7h  not defined */
                            /* opcode C4h E1h 44h C8h  not defined */
                            /* opcode C4h E1h 44h C9h  not defined */
                            /* opcode C4h E1h 44h CAh  not defined */
                            /* opcode C4h E1h 44h CBh  not defined */
                            /* opcode C4h E1h 44h CCh  not defined */
                            /* opcode C4h E1h 44h CDh  not defined */
                            /* opcode C4h E1h 44h CEh  not defined */
                            /* opcode C4h E1h 44h CFh  not defined */
                            /* opcode C4h E1h 44h D0h  not defined */
                            /* opcode C4h E1h 44h D1h  not defined */
                            /* opcode C4h E1h 44h D2h  not defined */
                            /* opcode C4h E1h 44h D3h  not defined */
                            /* opcode C4h E1h 44h D4h  not defined */
                            /* opcode C4h E1h 44h D5h  not defined */
                            /* opcode C4h E1h 44h D6h  not defined */
                            /* opcode C4h E1h 44h D7h  not defined */
                            /* opcode C4h E1h 44h D8h  not defined */
                            /* opcode C4h E1h 44h D9h  not defined */
                            /* opcode C4h E1h 44h DAh  not defined */
                            /* opcode C4h E1h 44h DBh  not defined */
                            /* opcode C4h E1h 44h DCh  not defined */
                            /* opcode C4h E1h 44h DDh  not defined */
                            /* opcode C4h E1h 44h DEh  not defined */
                            /* opcode C4h E1h 44h DFh  not defined */
                            /* opcode C4h E1h 44h E0h  not defined */
                            /* opcode C4h E1h 44h E1h  not defined */
                            /* opcode C4h E1h 44h E2h  not defined */
                            /* opcode C4h E1h 44h E3h  not defined */
                            /* opcode C4h E1h 44h E4h  not defined */
                            /* opcode C4h E1h 44h E5h  not defined */
                            /* opcode C4h E1h 44h E6h  not defined */
                            /* opcode C4h E1h 44h E7h  not defined */
                            /* opcode C4h E1h 44h E8h  not defined */
                            /* opcode C4h E1h 44h E9h  not defined */
                            /* opcode C4h E1h 44h EAh  not defined */
                            /* opcode C4h E1h 44h EBh  not defined */
                            /* opcode C4h E1h 44h ECh  not defined */
                            /* opcode C4h E1h 44h EDh  not defined */
                            /* opcode C4h E1h 44h EEh  not defined */
                            /* opcode C4h E1h 44h EFh  not defined */
                            /* opcode C4h E1h 44h F0h  not defined */
                            /* opcode C4h E1h 44h F1h  not defined */
                            /* opcode C4h E1h 44h F2h  not defined */
                            /* opcode C4h E1h 44h F3h  not defined */
                            /* opcode C4h E1h 44h F4h  not defined */
                            /* opcode C4h E1h 44h F5h  not defined */
                            /* opcode C4h E1h 44h F6h  not defined */
                            /* opcode C4h E1h 44h F7h  not defined */
                            /* opcode C4h E1h 44h F8h  not defined */
                            /* opcode C4h E1h 44h F9h  not defined */
                            /* opcode C4h E1h 44h FAh  not defined */
                            /* opcode C4h E1h 44h FBh  not defined */
                            /* opcode C4h E1h 44h FCh  not defined */
                            /* opcode C4h E1h 44h FDh  not defined */
                            /* opcode C4h E1h 44h FEh  not defined */
                            /* opcode C4h E1h 44h FFh  not defined */
                            default:
                                goto _x86decode_illegal_opcode;
                        };
/* End of opcodes starting with C4h E1h 44h */
                        break;
                    case 0x45: /* C4h E1h 45h        spec:  */
                    case 0x4D: /* C4h E1h 4Dh        spec:  */
                    case 0x55: /* C4h E1h 55h        spec:  */
                    case 0x5D: /* C4h E1h 5Dh        spec:  */
                    case 0x65: /* C4h E1h 65h        spec:  */
                    case 0x6D: /* C4h E1h 6Dh        spec:  */
                    case 0x75: /* C4h E1h 75h        spec:  */
                    case 0x7D: /* C4h E1h 7Dh        spec:  */
                        vex.V = ((~op) >> 3) & 7;
/* Opcodes starting with C4h E1h 45h */
                        op=IPFB();
                        _x86decode_begin_code32_addr32_opcode_parse_C4E145:
                        switch (op) {
                            /* opcode C4h E1h 45h 00h  not defined */
                            /* opcode C4h E1h 45h 01h  not defined */
                            /* opcode C4h E1h 45h 02h  not defined */
                            /* opcode C4h E1h 45h 03h  not defined */
                            /* opcode C4h E1h 45h 04h  not defined */
                            /* opcode C4h E1h 45h 05h  not defined */
                            /* opcode C4h E1h 45h 06h  not defined */
                            /* opcode C4h E1h 45h 07h  not defined */
                            /* opcode C4h E1h 45h 08h  not defined */
                            /* opcode C4h E1h 45h 09h  not defined */
                            /* opcode C4h E1h 45h 0Ah  not defined */
                            /* opcode C4h E1h 45h 0Bh  not defined */
                            /* opcode C4h E1h 45h 0Ch  not defined */
                            /* opcode C4h E1h 45h 0Dh  not defined */
                            /* opcode C4h E1h 45h 0Eh  not defined */
                            /* opcode C4h E1h 45h 0Fh  not defined */
                            /* opcode C4h E1h 45h 10h  not defined */
                            /* opcode C4h E1h 45h 11h  not defined */
                            /* opcode C4h E1h 45h 12h  not defined */
                            /* opcode C4h E1h 45h 13h  not defined */
                            /* opcode C4h E1h 45h 14h  not defined */
                            /* opcode C4h E1h 45h 15h  not defined */
                            /* opcode C4h E1h 45h 16h  not defined */
                            /* opcode C4h E1h 45h 17h  not defined */
                            /* opcode C4h E1h 45h 18h  not defined */
                            /* opcode C4h E1h 45h 19h  not defined */
                            /* opcode C4h E1h 45h 1Ah  not defined */
                            /* opcode C4h E1h 45h 1Bh  not defined */
                            /* opcode C4h E1h 45h 1Ch  not defined */
                            /* opcode C4h E1h 45h 1Dh  not defined */
                            /* opcode C4h E1h 45h 1Eh  not defined */
                            /* opcode C4h E1h 45h 1Fh  not defined */
                            /* opcode C4h E1h 45h 20h  not defined */
                            /* opcode C4h E1h 45h 21h  not defined */
                            /* opcode C4h E1h 45h 22h  not defined */
                            /* opcode C4h E1h 45h 23h  not defined */
                            /* opcode C4h E1h 45h 24h  not defined */
                            /* opcode C4h E1h 45h 25h  not defined */
                            /* opcode C4h E1h 45h 26h  not defined */
                            /* opcode C4h E1h 45h 27h  not defined */
                            /* opcode C4h E1h 45h 28h  not defined */
                            /* opcode C4h E1h 45h 29h  not defined */
                            /* opcode C4h E1h 45h 2Ah  not defined */
                            /* opcode C4h E1h 45h 2Bh  not defined */
                            /* opcode C4h E1h 45h 2Ch  not defined */
                            /* opcode C4h E1h 45h 2Dh  not defined */
                            /* opcode C4h E1h 45h 2Eh  not defined */
                            /* opcode C4h E1h 45h 2Fh  not defined */
                            /* opcode C4h E1h 45h 30h  not defined */
                            /* opcode C4h E1h 45h 31h  not defined */
                            /* opcode C4h E1h 45h 32h  not defined */
                            /* opcode C4h E1h 45h 33h  not defined */
                            /* opcode C4h E1h 45h 34h  not defined */
                            /* opcode C4h E1h 45h 35h  not defined */
                            /* opcode C4h E1h 45h 36h  not defined */
                            /* opcode C4h E1h 45h 37h  not defined */
                            /* opcode C4h E1h 45h 38h  not defined */
                            /* opcode C4h E1h 45h 39h  not defined */
                            /* opcode C4h E1h 45h 3Ah  not defined */
                            /* opcode C4h E1h 45h 3Bh  not defined */
                            /* opcode C4h E1h 45h 3Ch  not defined */
                            /* opcode C4h E1h 45h 3Dh  not defined */
                            /* opcode C4h E1h 45h 3Eh  not defined */
                            /* opcode C4h E1h 45h 3Fh  not defined */
                            /* opcode C4h E1h 45h 40h  not defined */
                            /* opcode C4h E1h 45h 41h  not defined */
                            /* opcode C4h E1h 45h 42h  not defined */
                            /* opcode C4h E1h 45h 43h  not defined */
                            /* opcode C4h E1h 45h 44h  not defined */
                            /* opcode C4h E1h 45h 45h  not defined */
                            /* opcode C4h E1h 45h 46h  not defined */
                            /* opcode C4h E1h 45h 47h  not defined */
                            /* opcode C4h E1h 45h 48h  not defined */
                            /* opcode C4h E1h 45h 49h  not defined */
                            /* opcode C4h E1h 45h 4Ah  not defined */
                            /* opcode C4h E1h 45h 4Bh  not defined */
                            /* opcode C4h E1h 45h 4Ch  not defined */
                            /* opcode C4h E1h 45h 4Dh  not defined */
                            /* opcode C4h E1h 45h 4Eh  not defined */
                            /* opcode C4h E1h 45h 4Fh  not defined */
                            /* opcode C4h E1h 45h 50h  not defined */
                            /* opcode C4h E1h 45h 51h  not defined */
                            /* opcode C4h E1h 45h 52h  not defined */
                            /* opcode C4h E1h 45h 53h  not defined */
                            /* opcode C4h E1h 45h 54h  not defined */
                            /* opcode C4h E1h 45h 55h  not defined */
                            /* opcode C4h E1h 45h 56h  not defined */
                            /* opcode C4h E1h 45h 57h  not defined */
                            case 0x58: /* C4h E1h 45h 58h VADDPD avx(reg),avx(vsidx),avx(r/m)      spec: vex vsize(256) vlead(0x0F) vprefix(0x66) 0x58 mod/reg/rm */
                                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VADDPD YMM%u,YMM%u,%s",mrm.reg(),vex.V,IPDecPrint32(mrm,sib,disp,32,RC_AVXREG,""));
                                break;
                            /* opcode C4h E1h 45h 59h  not defined */
                            /* opcode C4h E1h 45h 5Ah  not defined */
                            /* opcode C4h E1h 45h 5Bh  not defined */
                            /* opcode C4h E1h 45h 5Ch  not defined */
                            /* opcode C4h E1h 45h 5Dh  not defined */
                            /* opcode C4h E1h 45h 5Eh  not defined */
                            /* opcode C4h E1h 45h 5Fh  not defined */
                            /* opcode C4h E1h 45h 60h  not defined */
                            /* opcode C4h E1h 45h 61h  not defined */
                            /* opcode C4h E1h 45h 62h  not defined */
                            /* opcode C4h E1h 45h 63h  not defined */
                            /* opcode C4h E1h 45h 64h  not defined */
                            /* opcode C4h E1h 45h 65h  not defined */
                            /* opcode C4h E1h 45h 66h  not defined */
                            /* opcode C4h E1h 45h 67h  not defined */
                            /* opcode C4h E1h 45h 68h  not defined */
                            /* opcode C4h E1h 45h 69h  not defined */
                            /* opcode C4h E1h 45h 6Ah  not defined */
                            /* opcode C4h E1h 45h 6Bh  not defined */
                            /* opcode C4h E1h 45h 6Ch  not defined */
                            /* opcode C4h E1h 45h 6Dh  not defined */
                            /* opcode C4h E1h 45h 6Eh  not defined */
                            /* opcode C4h E1h 45h 6Fh  not defined */
                            /* opcode C4h E1h 45h 70h  not defined */
                            /* opcode C4h E1h 45h 71h  not defined */
                            /* opcode C4h E1h 45h 72h  not defined */
                            /* opcode C4h E1h 45h 73h  not defined */
                            /* opcode C4h E1h 45h 74h  not defined */
                            /* opcode C4h E1h 45h 75h  not defined */
                            /* opcode C4h E1h 45h 76h  not defined */
                            /* opcode C4h E1h 45h 77h  not defined */
                            /* opcode C4h E1h 45h 78h  not defined */
                            /* opcode C4h E1h 45h 79h  not defined */
                            /* opcode C4h E1h 45h 7Ah  not defined */
                            /* opcode C4h E1h 45h 7Bh  not defined */
                            /* opcode C4h E1h 45h 7Ch  not defined */
                            /* opcode C4h E1h 45h 7Dh  not defined */
                            /* opcode C4h E1h 45h 7Eh  not defined */
                            /* opcode C4h E1h 45h 7Fh  not defined */
                            /* opcode C4h E1h 45h 80h  not defined */
                            /* opcode C4h E1h 45h 81h  not defined */
                            /* opcode C4h E1h 45h 82h  not defined */
                            /* opcode C4h E1h 45h 83h  not defined */
                            /* opcode C4h E1h 45h 84h  not defined */
                            /* opcode C4h E1h 45h 85h  not defined */
                            /* opcode C4h E1h 45h 86h  not defined */
                            /* opcode C4h E1h 45h 87h  not defined */
                            /* opcode C4h E1h 45h 88h  not defined */
                            /* opcode C4h E1h 45h 89h  not defined */
                            /* opcode C4h E1h 45h 8Ah  not defined */
                            /* opcode C4h E1h 45h 8Bh  not defined */
                            /* opcode C4h E1h 45h 8Ch  not defined */
                            /* opcode C4h E1h 45h 8Dh  not defined */
                            /* opcode C4h E1h 45h 8Eh  not defined */
                            /* opcode C4h E1h 45h 8Fh  not defined */
                            /* opcode C4h E1h 45h 90h  not defined */
                            /* opcode C4h E1h 45h 91h  not defined */
                            /* opcode C4h E1h 45h 92h  not defined */
                            /* opcode C4h E1h 45h 93h  not defined */
                            /* opcode C4h E1h 45h 94h  not defined */
                            /* opcode C4h E1h 45h 95h  not defined */
                            /* opcode C4h E1h 45h 96h  not defined */
                            /* opcode C4h E1h 45h 97h  not defined */
                            /* opcode C4h E1h 45h 98h  not defined */
                            /* opcode C4h E1h 45h 99h  not defined */
                            /* opcode C4h E1h 45h 9Ah  not defined */
                            /* opcode C4h E1h 45h 9Bh  not defined */
                            /* opcode C4h E1h 45h 9Ch  not defined */
                            /* opcode C4h E1h 45h 9Dh  not defined */
                            /* opcode C4h E1h 45h 9Eh  not defined */
                            /* opcode C4h E1h 45h 9Fh  not defined */
                            /* opcode C4h E1h 45h A0h  not defined */
                            /* opcode C4h E1h 45h A1h  not defined */
                            /* opcode C4h E1h 45h A2h  not defined */
                            /* opcode C4h E1h 45h A3h  not defined */
                            /* opcode C4h E1h 45h A4h  not defined */
                            /* opcode C4h E1h 45h A5h  not defined */
                            /* opcode C4h E1h 45h A6h  not defined */
                            /* opcode C4h E1h 45h A7h  not defined */
                            /* opcode C4h E1h 45h A8h  not defined */
                            /* opcode C4h E1h 45h A9h  not defined */
                            /* opcode C4h E1h 45h AAh  not defined */
                            /* opcode C4h E1h 45h ABh  not defined */
                            /* opcode C4h E1h 45h ACh  not defined */
                            /* opcode C4h E1h 45h ADh  not defined */
                            /* opcode C4h E1h 45h AEh  not defined */
                            /* opcode C4h E1h 45h AFh  not defined */
                            /* opcode C4h E1h 45h B0h  not defined */
                            /* opcode C4h E1h 45h B1h  not defined */
                            /* opcode C4h E1h 45h B2h  not defined */
                            /* opcode C4h E1h 45h B3h  not defined */
                            /* opcode C4h E1h 45h B4h  not defined */
                            /* opcode C4h E1h 45h B5h  not defined */
                            /* opcode C4h E1h 45h B6h  not defined */
                            /* opcode C4h E1h 45h B7h  not defined */
                            /* opcode C4h E1h 45h B8h  not defined */
                            /* opcode C4h E1h 45h B9h  not defined */
                            /* opcode C4h E1h 45h BAh  not defined */
                            /* opcode C4h E1h 45h BBh  not defined */
                            /* opcode C4h E1h 45h BCh  not defined */
                            /* opcode C4h E1h 45h BDh  not defined */
                            /* opcode C4h E1h 45h BEh  not defined */
                            /* opcode C4h E1h 45h BFh  not defined */
                            /* opcode C4h E1h 45h C0h  not defined */
                            /* opcode C4h E1h 45h C1h  not defined */
                            /* opcode C4h E1h 45h C2h  not defined */
                            /* opcode C4h E1h 45h C3h  not defined */
                            /* opcode C4h E1h 45h C4h  not defined */
                            /* opcode C4h E1h 45h C5h  not defined */
                            /* opcode C4h E1h 45h C6h  not defined */
                            /* opcode C4h E1h 45h C7h  not defined */
                            /* opcode C4h E1h 45h C8h  not defined */
                            /* opcode C4h E1h 45h C9h  not defined */
                            /* opcode C4h E1h 45h CAh  not defined */
                            /* opcode C4h E1h 45h CBh  not defined */
                            /* opcode C4h E1h 45h CCh  not defined */
                            /* opcode C4h E1h 45h CDh  not defined */
                            /* opcode C4h E1h 45h CEh  not defined */
                            /* opcode C4h E1h 45h CFh  not defined */
                            /* opcode C4h E1h 45h D0h  not defined */
                            /* opcode C4h E1h 45h D1h  not defined */
                            /* opcode C4h E1h 45h D2h  not defined */
                            /* opcode C4h E1h 45h D3h  not defined */
                            /* opcode C4h E1h 45h D4h  not defined */
                            /* opcode C4h E1h 45h D5h  not defined */
                            /* opcode C4h E1h 45h D6h  not defined */
                            /* opcode C4h E1h 45h D7h  not defined */
                            /* opcode C4h E1h 45h D8h  not defined */
                            /* opcode C4h E1h 45h D9h  not defined */
                            /* opcode C4h E1h 45h DAh  not defined */
                            /* opcode C4h E1h 45h DBh  not defined */
                            /* opcode C4h E1h 45h DCh  not defined */
                            /* opcode C4h E1h 45h DDh  not defined */
                            /* opcode C4h E1h 45h DEh  not defined */
                            /* opcode C4h E1h 45h DFh  not defined */
                            /* opcode C4h E1h 45h E0h  not defined */
                            /* opcode C4h E1h 45h E1h  not defined */
                            /* opcode C4h E1h 45h E2h  not defined */
                            /* opcode C4h E1h 45h E3h  not defined */
                            /* opcode C4h E1h 45h E4h  not defined */
                            /* opcode C4h E1h 45h E5h  not defined */
                            /* opcode C4h E1h 45h E6h  not defined */
                            /* opcode C4h E1h 45h E7h  not defined */
                            /* opcode C4h E1h 45h E8h  not defined */
                            /* opcode C4h E1h 45h E9h  not defined */
                            /* opcode C4h E1h 45h EAh  not defined */
                            /* opcode C4h E1h 45h EBh  not defined */
                            /* opcode C4h E1h 45h ECh  not defined */
                            /* opcode C4h E1h 45h EDh  not defined */
                            /* opcode C4h E1h 45h EEh  not defined */
                            /* opcode C4h E1h 45h EFh  not defined */
                            /* opcode C4h E1h 45h F0h  not defined */
                            /* opcode C4h E1h 45h F1h  not defined */
                            /* opcode C4h E1h 45h F2h  not defined */
                            /* opcode C4h E1h 45h F3h  not defined */
                            /* opcode C4h E1h 45h F4h  not defined */
                            /* opcode C4h E1h 45h F5h  not defined */
                            /* opcode C4h E1h 45h F6h  not defined */
                            /* opcode C4h E1h 45h F7h  not defined */
                            /* opcode C4h E1h 45h F8h  not defined */
                            /* opcode C4h E1h 45h F9h  not defined */
                            /* opcode C4h E1h 45h FAh  not defined */
                            /* opcode C4h E1h 45h FBh  not defined */
                            /* opcode C4h E1h 45h FCh  not defined */
                            /* opcode C4h E1h 45h FDh  not defined */
                            /* opcode C4h E1h 45h FEh  not defined */
                            /* opcode C4h E1h 45h FFh  not defined */
                            default:
                                goto _x86decode_illegal_opcode;
                        };
/* End of opcodes starting with C4h E1h 45h */
                        break;
                    /* opcode C4h E1h 46h  not defined */
                    /* opcode C4h E1h 47h  not defined */
                    /* opcode C4h E1h 4Ah  not defined */
                    /* opcode C4h E1h 4Bh  not defined */
                    /* opcode C4h E1h 4Eh  not defined */
                    /* opcode C4h E1h 4Fh  not defined */
                    /* opcode C4h E1h 52h  not defined */
                    /* opcode C4h E1h 53h  not defined */
                    /* opcode C4h E1h 56h  not defined */
                    /* opcode C4h E1h 57h  not defined */
                    /* opcode C4h E1h 5Ah  not defined */
                    /* opcode C4h E1h 5Bh  not defined */
                    /* opcode C4h E1h 5Eh  not defined */
                    /* opcode C4h E1h 5Fh  not defined */
                    /* opcode C4h E1h 62h  not defined */
                    /* opcode C4h E1h 63h  not defined */
                    /* opcode C4h E1h 66h  not defined */
                    /* opcode C4h E1h 67h  not defined */
                    /* opcode C4h E1h 6Ah  not defined */
                    /* opcode C4h E1h 6Bh  not defined */
                    /* opcode C4h E1h 6Eh  not defined */
                    /* opcode C4h E1h 6Fh  not defined */
                    /* opcode C4h E1h 72h  not defined */
                    /* opcode C4h E1h 73h  not defined */
                    /* opcode C4h E1h 76h  not defined */
                    /* opcode C4h E1h 77h  not defined */
                    case 0x78: /* C4h E1h 78h        spec:  */
                        vex.V = ((~op) >> 3) & 7;
/* Opcodes starting with C4h E1h 78h */
                        op=IPFB();
                        _x86decode_begin_code32_addr32_opcode_parse_C4E178:
                        switch (op) {
                            /* opcode C4h E1h 78h 00h  not defined */
                            /* opcode C4h E1h 78h 01h  not defined */
                            /* opcode C4h E1h 78h 02h  not defined */
                            /* opcode C4h E1h 78h 03h  not defined */
                            /* opcode C4h E1h 78h 04h  not defined */
                            /* opcode C4h E1h 78h 05h  not defined */
                            /* opcode C4h E1h 78h 06h  not defined */
                            /* opcode C4h E1h 78h 07h  not defined */
                            /* opcode C4h E1h 78h 08h  not defined */
                            /* opcode C4h E1h 78h 09h  not defined */
                            /* opcode C4h E1h 78h 0Ah  not defined */
                            /* opcode C4h E1h 78h 0Bh  not defined */
                            /* opcode C4h E1h 78h 0Ch  not defined */
                            /* opcode C4h E1h 78h 0Dh  not defined */
                            /* opcode C4h E1h 78h 0Eh  not defined */
                            /* opcode C4h E1h 78h 0Fh  not defined */
                            /* opcode C4h E1h 78h 10h  not defined */
                            /* opcode C4h E1h 78h 11h  not defined */
                            /* opcode C4h E1h 78h 12h  not defined */
                            /* opcode C4h E1h 78h 13h  not defined */
                            /* opcode C4h E1h 78h 14h  not defined */
                            /* opcode C4h E1h 78h 15h  not defined */
                            /* opcode C4h E1h 78h 16h  not defined */
                            /* opcode C4h E1h 78h 17h  not defined */
                            /* opcode C4h E1h 78h 18h  not defined */
                            /* opcode C4h E1h 78h 19h  not defined */
                            /* opcode C4h E1h 78h 1Ah  not defined */
                            /* opcode C4h E1h 78h 1Bh  not defined */
                            /* opcode C4h E1h 78h 1Ch  not defined */
                            /* opcode C4h E1h 78h 1Dh  not defined */
                            /* opcode C4h E1h 78h 1Eh  not defined */
                            /* opcode C4h E1h 78h 1Fh  not defined */
                            /* opcode C4h E1h 78h 20h  not defined */
                            /* opcode C4h E1h 78h 21h  not defined */
                            /* opcode C4h E1h 78h 22h  not defined */
                            /* opcode C4h E1h 78h 23h  not defined */
                            /* opcode C4h E1h 78h 24h  not defined */
                            /* opcode C4h E1h 78h 25h  not defined */
                            /* opcode C4h E1h 78h 26h  not defined */
                            /* opcode C4h E1h 78h 27h  not defined */
                            /* opcode C4h E1h 78h 28h  not defined */
                            /* opcode C4h E1h 78h 29h  not defined */
                            /* opcode C4h E1h 78h 2Ah  not defined */
                            /* opcode C4h E1h 78h 2Bh  not defined */
                            /* opcode C4h E1h 78h 2Ch  not defined */
                            /* opcode C4h E1h 78h 2Dh  not defined */
                            /* opcode C4h E1h 78h 2Eh  not defined */
                            /* opcode C4h E1h 78h 2Fh  not defined */
                            /* opcode C4h E1h 78h 30h  not defined */
                            /* opcode C4h E1h 78h 31h  not defined */
                            /* opcode C4h E1h 78h 32h  not defined */
                            /* opcode C4h E1h 78h 33h  not defined */
                            /* opcode C4h E1h 78h 34h  not defined */
                            /* opcode C4h E1h 78h 35h  not defined */
                            /* opcode C4h E1h 78h 36h  not defined */
                            /* opcode C4h E1h 78h 37h  not defined */
                            /* opcode C4h E1h 78h 38h  not defined */
                            /* opcode C4h E1h 78h 39h  not defined */
                            /* opcode C4h E1h 78h 3Ah  not defined */
                            /* opcode C4h E1h 78h 3Bh  not defined */
                            /* opcode C4h E1h 78h 3Ch  not defined */
                            /* opcode C4h E1h 78h 3Dh  not defined */
                            /* opcode C4h E1h 78h 3Eh  not defined */
                            /* opcode C4h E1h 78h 3Fh  not defined */
                            /* opcode C4h E1h 78h 40h  not defined */
                            /* opcode C4h E1h 78h 41h  not defined */
                            /* opcode C4h E1h 78h 42h  not defined */
                            /* opcode C4h E1h 78h 43h  not defined */
                            /* opcode C4h E1h 78h 44h  not defined */
                            /* opcode C4h E1h 78h 45h  not defined */
                            /* opcode C4h E1h 78h 46h  not defined */
                            /* opcode C4h E1h 78h 47h  not defined */
                            /* opcode C4h E1h 78h 48h  not defined */
                            /* opcode C4h E1h 78h 49h  not defined */
                            /* opcode C4h E1h 78h 4Ah  not defined */
                            /* opcode C4h E1h 78h 4Bh  not defined */
                            /* opcode C4h E1h 78h 4Ch  not defined */
                            /* opcode C4h E1h 78h 4Dh  not defined */
                            /* opcode C4h E1h 78h 4Eh  not defined */
                            /* opcode C4h E1h 78h 4Fh  not defined */
                            /* opcode C4h E1h 78h 50h  not defined */
                            /* opcode C4h E1h 78h 51h  not defined */
                            /* opcode C4h E1h 78h 52h  not defined */
                            /* opcode C4h E1h 78h 53h  not defined */
                            /* opcode C4h E1h 78h 54h  not defined */
                            /* opcode C4h E1h 78h 55h  not defined */
                            /* opcode C4h E1h 78h 56h  not defined */
                            /* opcode C4h E1h 78h 57h  not defined */
                            case 0x58: /* C4h E1h 78h 58h VADDPS sse(reg),sse(vsidx),sse(r/m)      spec: vex vsize(128) vlead(0x0F) vprefix(none) 0x58 mod/reg/rm */
                                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VADDPS XMM%u,XMM%u,%s",mrm.reg(),vex.V,IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                                break;
                            /* opcode C4h E1h 78h 59h  not defined */
                            /* opcode C4h E1h 78h 5Ah  not defined */
                            /* opcode C4h E1h 78h 5Bh  not defined */
                            /* opcode C4h E1h 78h 5Ch  not defined */
                            /* opcode C4h E1h 78h 5Dh  not defined */
                            /* opcode C4h E1h 78h 5Eh  not defined */
                            /* opcode C4h E1h 78h 5Fh  not defined */
                            /* opcode C4h E1h 78h 60h  not defined */
                            /* opcode C4h E1h 78h 61h  not defined */
                            /* opcode C4h E1h 78h 62h  not defined */
                            /* opcode C4h E1h 78h 63h  not defined */
                            /* opcode C4h E1h 78h 64h  not defined */
                            /* opcode C4h E1h 78h 65h  not defined */
                            /* opcode C4h E1h 78h 66h  not defined */
                            /* opcode C4h E1h 78h 67h  not defined */
                            /* opcode C4h E1h 78h 68h  not defined */
                            /* opcode C4h E1h 78h 69h  not defined */
                            /* opcode C4h E1h 78h 6Ah  not defined */
                            /* opcode C4h E1h 78h 6Bh  not defined */
                            /* opcode C4h E1h 78h 6Ch  not defined */
                            /* opcode C4h E1h 78h 6Dh  not defined */
                            /* opcode C4h E1h 78h 6Eh  not defined */
                            /* opcode C4h E1h 78h 6Fh  not defined */
                            /* opcode C4h E1h 78h 70h  not defined */
                            /* opcode C4h E1h 78h 71h  not defined */
                            /* opcode C4h E1h 78h 72h  not defined */
                            /* opcode C4h E1h 78h 73h  not defined */
                            /* opcode C4h E1h 78h 74h  not defined */
                            /* opcode C4h E1h 78h 75h  not defined */
                            /* opcode C4h E1h 78h 76h  not defined */
                            case 0x77: /* C4h E1h 78h 77h VZEROUPPER       spec: vex vsize(128) vlead(0x0F) vsidx(0) vprefix(none) 0x77 */
                                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VZEROUPPER");
                                break;
                            /* opcode C4h E1h 78h 78h  not defined */
                            /* opcode C4h E1h 78h 79h  not defined */
                            /* opcode C4h E1h 78h 7Ah  not defined */
                            /* opcode C4h E1h 78h 7Bh  not defined */
                            /* opcode C4h E1h 78h 7Ch  not defined */
                            /* opcode C4h E1h 78h 7Dh  not defined */
                            /* opcode C4h E1h 78h 7Eh  not defined */
                            /* opcode C4h E1h 78h 7Fh  not defined */
                            /* opcode C4h E1h 78h 80h  not defined */
                            /* opcode C4h E1h 78h 81h  not defined */
                            /* opcode C4h E1h 78h 82h  not defined */
                            /* opcode C4h E1h 78h 83h  not defined */
                            /* opcode C4h E1h 78h 84h  not defined */
                            /* opcode C4h E1h 78h 85h  not defined */
                            /* opcode C4h E1h 78h 86h  not defined */
                            /* opcode C4h E1h 78h 87h  not defined */
                            /* opcode C4h E1h 78h 88h  not defined */
                            /* opcode C4h E1h 78h 89h  not defined */
                            /* opcode C4h E1h 78h 8Ah  not defined */
                            /* opcode C4h E1h 78h 8Bh  not defined */
                            /* opcode C4h E1h 78h 8Ch  not defined */
                            /* opcode C4h E1h 78h 8Dh  not defined */
                            /* opcode C4h E1h 78h 8Eh  not defined */
                            /* opcode C4h E1h 78h 8Fh  not defined */
                            /* opcode C4h E1h 78h 90h  not defined */
                            /* opcode C4h E1h 78h 91h  not defined */
                            /* opcode C4h E1h 78h 92h  not defined */
                            /* opcode C4h E1h 78h 93h  not defined */
                            /* opcode C4h E1h 78h 94h  not defined */
                            /* opcode C4h E1h 78h 95h  not defined */
                            /* opcode C4h E1h 78h 96h  not defined */
                            /* opcode C4h E1h 78h 97h  not defined */
                            /* opcode C4h E1h 78h 98h  not defined */
                            /* opcode C4h E1h 78h 99h  not defined */
                            /* opcode C4h E1h 78h 9Ah  not defined */
                            /* opcode C4h E1h 78h 9Bh  not defined */
                            /* opcode C4h E1h 78h 9Ch  not defined */
                            /* opcode C4h E1h 78h 9Dh  not defined */
                            /* opcode C4h E1h 78h 9Eh  not defined */
                            /* opcode C4h E1h 78h 9Fh  not defined */
                            /* opcode C4h E1h 78h A0h  not defined */
                            /* opcode C4h E1h 78h A1h  not defined */
                            /* opcode C4h E1h 78h A2h  not defined */
                            /* opcode C4h E1h 78h A3h  not defined */
                            /* opcode C4h E1h 78h A4h  not defined */
                            /* opcode C4h E1h 78h A5h  not defined */
                            /* opcode C4h E1h 78h A6h  not defined */
                            /* opcode C4h E1h 78h A7h  not defined */
                            /* opcode C4h E1h 78h A8h  not defined */
                            /* opcode C4h E1h 78h A9h  not defined */
                            /* opcode C4h E1h 78h AAh  not defined */
                            /* opcode C4h E1h 78h ABh  not defined */
                            /* opcode C4h E1h 78h ACh  not defined */
                            /* opcode C4h E1h 78h ADh  not defined */
                            /* opcode C4h E1h 78h AEh  not defined */
                            /* opcode C4h E1h 78h AFh  not defined */
                            /* opcode C4h E1h 78h B0h  not defined */
                            /* opcode C4h E1h 78h B1h  not defined */
                            /* opcode C4h E1h 78h B2h  not defined */
                            /* opcode C4h E1h 78h B3h  not defined */
                            /* opcode C4h E1h 78h B4h  not defined */
                            /* opcode C4h E1h 78h B5h  not defined */
                            /* opcode C4h E1h 78h B6h  not defined */
                            /* opcode C4h E1h 78h B7h  not defined */
                            /* opcode C4h E1h 78h B8h  not defined */
                            /* opcode C4h E1h 78h B9h  not defined */
                            /* opcode C4h E1h 78h BAh  not defined */
                            /* opcode C4h E1h 78h BBh  not defined */
                            /* opcode C4h E1h 78h BCh  not defined */
                            /* opcode C4h E1h 78h BDh  not defined */
                            /* opcode C4h E1h 78h BEh  not defined */
                            /* opcode C4h E1h 78h BFh  not defined */
                            /* opcode C4h E1h 78h C0h  not defined */
                            /* opcode C4h E1h 78h C1h  not defined */
                            /* opcode C4h E1h 78h C2h  not defined */
                            /* opcode C4h E1h 78h C3h  not defined */
                            /* opcode C4h E1h 78h C4h  not defined */
                            /* opcode C4h E1h 78h C5h  not defined */
                            /* opcode C4h E1h 78h C6h  not defined */
                            /* opcode C4h E1h 78h C7h  not defined */
                            /* opcode C4h E1h 78h C8h  not defined */
                            /* opcode C4h E1h 78h C9h  not defined */
                            /* opcode C4h E1h 78h CAh  not defined */
                            /* opcode C4h E1h 78h CBh  not defined */
                            /* opcode C4h E1h 78h CCh  not defined */
                            /* opcode C4h E1h 78h CDh  not defined */
                            /* opcode C4h E1h 78h CEh  not defined */
                            /* opcode C4h E1h 78h CFh  not defined */
                            /* opcode C4h E1h 78h D0h  not defined */
                            /* opcode C4h E1h 78h D1h  not defined */
                            /* opcode C4h E1h 78h D2h  not defined */
                            /* opcode C4h E1h 78h D3h  not defined */
                            /* opcode C4h E1h 78h D4h  not defined */
                            /* opcode C4h E1h 78h D5h  not defined */
                            /* opcode C4h E1h 78h D6h  not defined */
                            /* opcode C4h E1h 78h D7h  not defined */
                            /* opcode C4h E1h 78h D8h  not defined */
                            /* opcode C4h E1h 78h D9h  not defined */
                            /* opcode C4h E1h 78h DAh  not defined */
                            /* opcode C4h E1h 78h DBh  not defined */
                            /* opcode C4h E1h 78h DCh  not defined */
                            /* opcode C4h E1h 78h DDh  not defined */
                            /* opcode C4h E1h 78h DEh  not defined */
                            /* opcode C4h E1h 78h DFh  not defined */
                            /* opcode C4h E1h 78h E0h  not defined */
                            /* opcode C4h E1h 78h E1h  not defined */
                            /* opcode C4h E1h 78h E2h  not defined */
                            /* opcode C4h E1h 78h E3h  not defined */
                            /* opcode C4h E1h 78h E4h  not defined */
                            /* opcode C4h E1h 78h E5h  not defined */
                            /* opcode C4h E1h 78h E6h  not defined */
                            /* opcode C4h E1h 78h E7h  not defined */
                            /* opcode C4h E1h 78h E8h  not defined */
                            /* opcode C4h E1h 78h E9h  not defined */
                            /* opcode C4h E1h 78h EAh  not defined */
                            /* opcode C4h E1h 78h EBh  not defined */
                            /* opcode C4h E1h 78h ECh  not defined */
                            /* opcode C4h E1h 78h EDh  not defined */
                            /* opcode C4h E1h 78h EEh  not defined */
                            /* opcode C4h E1h 78h EFh  not defined */
                            /* opcode C4h E1h 78h F0h  not defined */
                            /* opcode C4h E1h 78h F1h  not defined */
                            /* opcode C4h E1h 78h F2h  not defined */
                            /* opcode C4h E1h 78h F3h  not defined */
                            /* opcode C4h E1h 78h F4h  not defined */
                            /* opcode C4h E1h 78h F5h  not defined */
                            /* opcode C4h E1h 78h F6h  not defined */
                            /* opcode C4h E1h 78h F7h  not defined */
                            /* opcode C4h E1h 78h F8h  not defined */
                            /* opcode C4h E1h 78h F9h  not defined */
                            /* opcode C4h E1h 78h FAh  not defined */
                            /* opcode C4h E1h 78h FBh  not defined */
                            /* opcode C4h E1h 78h FCh  not defined */
                            /* opcode C4h E1h 78h FDh  not defined */
                            /* opcode C4h E1h 78h FEh  not defined */
                            /* opcode C4h E1h 78h FFh  not defined */
                            default:
                                goto _x86decode_illegal_opcode;
                        };
/* End of opcodes starting with C4h E1h 78h */
                        break;
                    /* opcode C4h E1h 7Ah  not defined */
                    /* opcode C4h E1h 7Bh  not defined */
                    case 0x7C: /* C4h E1h 7Ch        spec:  */
                        vex.V = ((~op) >> 3) & 7;
/* Opcodes starting with C4h E1h 7Ch */
                        op=IPFB();
                        _x86decode_begin_code32_addr32_opcode_parse_C4E17C:
                        switch (op) {
                            /* opcode C4h E1h 7Ch 00h  not defined */
                            /* opcode C4h E1h 7Ch 01h  not defined */
                            /* opcode C4h E1h 7Ch 02h  not defined */
                            /* opcode C4h E1h 7Ch 03h  not defined */
                            /* opcode C4h E1h 7Ch 04h  not defined */
                            /* opcode C4h E1h 7Ch 05h  not defined */
                            /* opcode C4h E1h 7Ch 06h  not defined */
                            /* opcode C4h E1h 7Ch 07h  not defined */
                            /* opcode C4h E1h 7Ch 08h  not defined */
                            /* opcode C4h E1h 7Ch 09h  not defined */
                            /* opcode C4h E1h 7Ch 0Ah  not defined */
                            /* opcode C4h E1h 7Ch 0Bh  not defined */
                            /* opcode C4h E1h 7Ch 0Ch  not defined */
                            /* opcode C4h E1h 7Ch 0Dh  not defined */
                            /* opcode C4h E1h 7Ch 0Eh  not defined */
                            /* opcode C4h E1h 7Ch 0Fh  not defined */
                            /* opcode C4h E1h 7Ch 10h  not defined */
                            /* opcode C4h E1h 7Ch 11h  not defined */
                            /* opcode C4h E1h 7Ch 12h  not defined */
                            /* opcode C4h E1h 7Ch 13h  not defined */
                            /* opcode C4h E1h 7Ch 14h  not defined */
                            /* opcode C4h E1h 7Ch 15h  not defined */
                            /* opcode C4h E1h 7Ch 16h  not defined */
                            /* opcode C4h E1h 7Ch 17h  not defined */
                            /* opcode C4h E1h 7Ch 18h  not defined */
                            /* opcode C4h E1h 7Ch 19h  not defined */
                            /* opcode C4h E1h 7Ch 1Ah  not defined */
                            /* opcode C4h E1h 7Ch 1Bh  not defined */
                            /* opcode C4h E1h 7Ch 1Ch  not defined */
                            /* opcode C4h E1h 7Ch 1Dh  not defined */
                            /* opcode C4h E1h 7Ch 1Eh  not defined */
                            /* opcode C4h E1h 7Ch 1Fh  not defined */
                            /* opcode C4h E1h 7Ch 20h  not defined */
                            /* opcode C4h E1h 7Ch 21h  not defined */
                            /* opcode C4h E1h 7Ch 22h  not defined */
                            /* opcode C4h E1h 7Ch 23h  not defined */
                            /* opcode C4h E1h 7Ch 24h  not defined */
                            /* opcode C4h E1h 7Ch 25h  not defined */
                            /* opcode C4h E1h 7Ch 26h  not defined */
                            /* opcode C4h E1h 7Ch 27h  not defined */
                            /* opcode C4h E1h 7Ch 28h  not defined */
                            /* opcode C4h E1h 7Ch 29h  not defined */
                            /* opcode C4h E1h 7Ch 2Ah  not defined */
                            /* opcode C4h E1h 7Ch 2Bh  not defined */
                            /* opcode C4h E1h 7Ch 2Ch  not defined */
                            /* opcode C4h E1h 7Ch 2Dh  not defined */
                            /* opcode C4h E1h 7Ch 2Eh  not defined */
                            /* opcode C4h E1h 7Ch 2Fh  not defined */
                            /* opcode C4h E1h 7Ch 30h  not defined */
                            /* opcode C4h E1h 7Ch 31h  not defined */
                            /* opcode C4h E1h 7Ch 32h  not defined */
                            /* opcode C4h E1h 7Ch 33h  not defined */
                            /* opcode C4h E1h 7Ch 34h  not defined */
                            /* opcode C4h E1h 7Ch 35h  not defined */
                            /* opcode C4h E1h 7Ch 36h  not defined */
                            /* opcode C4h E1h 7Ch 37h  not defined */
                            /* opcode C4h E1h 7Ch 38h  not defined */
                            /* opcode C4h E1h 7Ch 39h  not defined */
                            /* opcode C4h E1h 7Ch 3Ah  not defined */
                            /* opcode C4h E1h 7Ch 3Bh  not defined */
                            /* opcode C4h E1h 7Ch 3Ch  not defined */
                            /* opcode C4h E1h 7Ch 3Dh  not defined */
                            /* opcode C4h E1h 7Ch 3Eh  not defined */
                            /* opcode C4h E1h 7Ch 3Fh  not defined */
                            /* opcode C4h E1h 7Ch 40h  not defined */
                            /* opcode C4h E1h 7Ch 41h  not defined */
                            /* opcode C4h E1h 7Ch 42h  not defined */
                            /* opcode C4h E1h 7Ch 43h  not defined */
                            /* opcode C4h E1h 7Ch 44h  not defined */
                            /* opcode C4h E1h 7Ch 45h  not defined */
                            /* opcode C4h E1h 7Ch 46h  not defined */
                            /* opcode C4h E1h 7Ch 47h  not defined */
                            /* opcode C4h E1h 7Ch 48h  not defined */
                            /* opcode C4h E1h 7Ch 49h  not defined */
                            /* opcode C4h E1h 7Ch 4Ah  not defined */
                            /* opcode C4h E1h 7Ch 4Bh  not defined */
                            /* opcode C4h E1h 7Ch 4Ch  not defined */
                            /* opcode C4h E1h 7Ch 4Dh  not defined */
                            /* opcode C4h E1h 7Ch 4Eh  not defined */
                            /* opcode C4h E1h 7Ch 4Fh  not defined */
                            /* opcode C4h E1h 7Ch 50h  not defined */
                            /* opcode C4h E1h 7Ch 51h  not defined */
                            /* opcode C4h E1h 7Ch 52h  not defined */
                            /* opcode C4h E1h 7Ch 53h  not defined */
                            /* opcode C4h E1h 7Ch 54h  not defined */
                            /* opcode C4h E1h 7Ch 55h  not defined */
                            /* opcode C4h E1h 7Ch 56h  not defined */
                            /* opcode C4h E1h 7Ch 57h  not defined */
                            case 0x58: /* C4h E1h 7Ch 58h VADDPS avx(reg),avx(vsidx),avx(r/m)      spec: vex vsize(256) vlead(0x0F) vprefix(none) 0x58 mod/reg/rm */
                                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VADDPS YMM%u,YMM%u,%s",mrm.reg(),vex.V,IPDecPrint32(mrm,sib,disp,32,RC_AVXREG,""));
                                break;
                            /* opcode C4h E1h 7Ch 59h  not defined */
                            /* opcode C4h E1h 7Ch 5Ah  not defined */
                            /* opcode C4h E1h 7Ch 5Bh  not defined */
                            /* opcode C4h E1h 7Ch 5Ch  not defined */
                            /* opcode C4h E1h 7Ch 5Dh  not defined */
                            /* opcode C4h E1h 7Ch 5Eh  not defined */
                            /* opcode C4h E1h 7Ch 5Fh  not defined */
                            /* opcode C4h E1h 7Ch 60h  not defined */
                            /* opcode C4h E1h 7Ch 61h  not defined */
                            /* opcode C4h E1h 7Ch 62h  not defined */
                            /* opcode C4h E1h 7Ch 63h  not defined */
                            /* opcode C4h E1h 7Ch 64h  not defined */
                            /* opcode C4h E1h 7Ch 65h  not defined */
                            /* opcode C4h E1h 7Ch 66h  not defined */
                            /* opcode C4h E1h 7Ch 67h  not defined */
                            /* opcode C4h E1h 7Ch 68h  not defined */
                            /* opcode C4h E1h 7Ch 69h  not defined */
                            /* opcode C4h E1h 7Ch 6Ah  not defined */
                            /* opcode C4h E1h 7Ch 6Bh  not defined */
                            /* opcode C4h E1h 7Ch 6Ch  not defined */
                            /* opcode C4h E1h 7Ch 6Dh  not defined */
                            /* opcode C4h E1h 7Ch 6Eh  not defined */
                            /* opcode C4h E1h 7Ch 6Fh  not defined */
                            /* opcode C4h E1h 7Ch 70h  not defined */
                            /* opcode C4h E1h 7Ch 71h  not defined */
                            /* opcode C4h E1h 7Ch 72h  not defined */
                            /* opcode C4h E1h 7Ch 73h  not defined */
                            /* opcode C4h E1h 7Ch 74h  not defined */
                            /* opcode C4h E1h 7Ch 75h  not defined */
                            /* opcode C4h E1h 7Ch 76h  not defined */
                            case 0x77: /* C4h E1h 7Ch 77h VZEROALL       spec: vex vsize(256) vlead(0x0F) vsidx(0) vprefix(none) 0x77 */
                                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VZEROALL");
                                break;
                            /* opcode C4h E1h 7Ch 78h  not defined */
                            /* opcode C4h E1h 7Ch 79h  not defined */
                            /* opcode C4h E1h 7Ch 7Ah  not defined */
                            /* opcode C4h E1h 7Ch 7Bh  not defined */
                            /* opcode C4h E1h 7Ch 7Ch  not defined */
                            /* opcode C4h E1h 7Ch 7Dh  not defined */
                            /* opcode C4h E1h 7Ch 7Eh  not defined */
                            /* opcode C4h E1h 7Ch 7Fh  not defined */
                            /* opcode C4h E1h 7Ch 80h  not defined */
                            /* opcode C4h E1h 7Ch 81h  not defined */
                            /* opcode C4h E1h 7Ch 82h  not defined */
                            /* opcode C4h E1h 7Ch 83h  not defined */
                            /* opcode C4h E1h 7Ch 84h  not defined */
                            /* opcode C4h E1h 7Ch 85h  not defined */
                            /* opcode C4h E1h 7Ch 86h  not defined */
                            /* opcode C4h E1h 7Ch 87h  not defined */
                            /* opcode C4h E1h 7Ch 88h  not defined */
                            /* opcode C4h E1h 7Ch 89h  not defined */
                            /* opcode C4h E1h 7Ch 8Ah  not defined */
                            /* opcode C4h E1h 7Ch 8Bh  not defined */
                            /* opcode C4h E1h 7Ch 8Ch  not defined */
                            /* opcode C4h E1h 7Ch 8Dh  not defined */
                            /* opcode C4h E1h 7Ch 8Eh  not defined */
                            /* opcode C4h E1h 7Ch 8Fh  not defined */
                            /* opcode C4h E1h 7Ch 90h  not defined */
                            /* opcode C4h E1h 7Ch 91h  not defined */
                            /* opcode C4h E1h 7Ch 92h  not defined */
                            /* opcode C4h E1h 7Ch 93h  not defined */
                            /* opcode C4h E1h 7Ch 94h  not defined */
                            /* opcode C4h E1h 7Ch 95h  not defined */
                            /* opcode C4h E1h 7Ch 96h  not defined */
                            /* opcode C4h E1h 7Ch 97h  not defined */
                            /* opcode C4h E1h 7Ch 98h  not defined */
                            /* opcode C4h E1h 7Ch 99h  not defined */
                            /* opcode C4h E1h 7Ch 9Ah  not defined */
                            /* opcode C4h E1h 7Ch 9Bh  not defined */
                            /* opcode C4h E1h 7Ch 9Ch  not defined */
                            /* opcode C4h E1h 7Ch 9Dh  not defined */
                            /* opcode C4h E1h 7Ch 9Eh  not defined */
                            /* opcode C4h E1h 7Ch 9Fh  not defined */
                            /* opcode C4h E1h 7Ch A0h  not defined */
                            /* opcode C4h E1h 7Ch A1h  not defined */
                            /* opcode C4h E1h 7Ch A2h  not defined */
                            /* opcode C4h E1h 7Ch A3h  not defined */
                            /* opcode C4h E1h 7Ch A4h  not defined */
                            /* opcode C4h E1h 7Ch A5h  not defined */
                            /* opcode C4h E1h 7Ch A6h  not defined */
                            /* opcode C4h E1h 7Ch A7h  not defined */
                            /* opcode C4h E1h 7Ch A8h  not defined */
                            /* opcode C4h E1h 7Ch A9h  not defined */
                            /* opcode C4h E1h 7Ch AAh  not defined */
                            /* opcode C4h E1h 7Ch ABh  not defined */
                            /* opcode C4h E1h 7Ch ACh  not defined */
                            /* opcode C4h E1h 7Ch ADh  not defined */
                            /* opcode C4h E1h 7Ch AEh  not defined */
                            /* opcode C4h E1h 7Ch AFh  not defined */
                            /* opcode C4h E1h 7Ch B0h  not defined */
                            /* opcode C4h E1h 7Ch B1h  not defined */
                            /* opcode C4h E1h 7Ch B2h  not defined */
                            /* opcode C4h E1h 7Ch B3h  not defined */
                            /* opcode C4h E1h 7Ch B4h  not defined */
                            /* opcode C4h E1h 7Ch B5h  not defined */
                            /* opcode C4h E1h 7Ch B6h  not defined */
                            /* opcode C4h E1h 7Ch B7h  not defined */
                            /* opcode C4h E1h 7Ch B8h  not defined */
                            /* opcode C4h E1h 7Ch B9h  not defined */
                            /* opcode C4h E1h 7Ch BAh  not defined */
                            /* opcode C4h E1h 7Ch BBh  not defined */
                            /* opcode C4h E1h 7Ch BCh  not defined */
                            /* opcode C4h E1h 7Ch BDh  not defined */
                            /* opcode C4h E1h 7Ch BEh  not defined */
                            /* opcode C4h E1h 7Ch BFh  not defined */
                            /* opcode C4h E1h 7Ch C0h  not defined */
                            /* opcode C4h E1h 7Ch C1h  not defined */
                            /* opcode C4h E1h 7Ch C2h  not defined */
                            /* opcode C4h E1h 7Ch C3h  not defined */
                            /* opcode C4h E1h 7Ch C4h  not defined */
                            /* opcode C4h E1h 7Ch C5h  not defined */
                            /* opcode C4h E1h 7Ch C6h  not defined */
                            /* opcode C4h E1h 7Ch C7h  not defined */
                            /* opcode C4h E1h 7Ch C8h  not defined */
                            /* opcode C4h E1h 7Ch C9h  not defined */
                            /* opcode C4h E1h 7Ch CAh  not defined */
                            /* opcode C4h E1h 7Ch CBh  not defined */
                            /* opcode C4h E1h 7Ch CCh  not defined */
                            /* opcode C4h E1h 7Ch CDh  not defined */
                            /* opcode C4h E1h 7Ch CEh  not defined */
                            /* opcode C4h E1h 7Ch CFh  not defined */
                            /* opcode C4h E1h 7Ch D0h  not defined */
                            /* opcode C4h E1h 7Ch D1h  not defined */
                            /* opcode C4h E1h 7Ch D2h  not defined */
                            /* opcode C4h E1h 7Ch D3h  not defined */
                            /* opcode C4h E1h 7Ch D4h  not defined */
                            /* opcode C4h E1h 7Ch D5h  not defined */
                            /* opcode C4h E1h 7Ch D6h  not defined */
                            /* opcode C4h E1h 7Ch D7h  not defined */
                            /* opcode C4h E1h 7Ch D8h  not defined */
                            /* opcode C4h E1h 7Ch D9h  not defined */
                            /* opcode C4h E1h 7Ch DAh  not defined */
                            /* opcode C4h E1h 7Ch DBh  not defined */
                            /* opcode C4h E1h 7Ch DCh  not defined */
                            /* opcode C4h E1h 7Ch DDh  not defined */
                            /* opcode C4h E1h 7Ch DEh  not defined */
                            /* opcode C4h E1h 7Ch DFh  not defined */
                            /* opcode C4h E1h 7Ch E0h  not defined */
                            /* opcode C4h E1h 7Ch E1h  not defined */
                            /* opcode C4h E1h 7Ch E2h  not defined */
                            /* opcode C4h E1h 7Ch E3h  not defined */
                            /* opcode C4h E1h 7Ch E4h  not defined */
                            /* opcode C4h E1h 7Ch E5h  not defined */
                            /* opcode C4h E1h 7Ch E6h  not defined */
                            /* opcode C4h E1h 7Ch E7h  not defined */
                            /* opcode C4h E1h 7Ch E8h  not defined */
                            /* opcode C4h E1h 7Ch E9h  not defined */
                            /* opcode C4h E1h 7Ch EAh  not defined */
                            /* opcode C4h E1h 7Ch EBh  not defined */
                            /* opcode C4h E1h 7Ch ECh  not defined */
                            /* opcode C4h E1h 7Ch EDh  not defined */
                            /* opcode C4h E1h 7Ch EEh  not defined */
                            /* opcode C4h E1h 7Ch EFh  not defined */
                            /* opcode C4h E1h 7Ch F0h  not defined */
                            /* opcode C4h E1h 7Ch F1h  not defined */
                            /* opcode C4h E1h 7Ch F2h  not defined */
                            /* opcode C4h E1h 7Ch F3h  not defined */
                            /* opcode C4h E1h 7Ch F4h  not defined */
                            /* opcode C4h E1h 7Ch F5h  not defined */
                            /* opcode C4h E1h 7Ch F6h  not defined */
                            /* opcode C4h E1h 7Ch F7h  not defined */
                            /* opcode C4h E1h 7Ch F8h  not defined */
                            /* opcode C4h E1h 7Ch F9h  not defined */
                            /* opcode C4h E1h 7Ch FAh  not defined */
                            /* opcode C4h E1h 7Ch FBh  not defined */
                            /* opcode C4h E1h 7Ch FCh  not defined */
                            /* opcode C4h E1h 7Ch FDh  not defined */
                            /* opcode C4h E1h 7Ch FEh  not defined */
                            /* opcode C4h E1h 7Ch FFh  not defined */
                            default:
                                goto _x86decode_illegal_opcode;
                        };
/* End of opcodes starting with C4h E1h 7Ch */
                        break;
                    /* opcode C4h E1h 7Eh  not defined */
                    /* opcode C4h E1h 7Fh  not defined */
                    /* opcode C4h E1h 80h  not defined */
                    /* opcode C4h E1h 81h  not defined */
                    /* opcode C4h E1h 82h  not defined */
                    /* opcode C4h E1h 83h  not defined */
                    /* opcode C4h E1h 84h  not defined */
                    /* opcode C4h E1h 85h  not defined */
                    /* opcode C4h E1h 86h  not defined */
                    /* opcode C4h E1h 87h  not defined */
                    /* opcode C4h E1h 88h  not defined */
                    /* opcode C4h E1h 89h  not defined */
                    /* opcode C4h E1h 8Ah  not defined */
                    /* opcode C4h E1h 8Bh  not defined */
                    /* opcode C4h E1h 8Ch  not defined */
                    /* opcode C4h E1h 8Dh  not defined */
                    /* opcode C4h E1h 8Eh  not defined */
                    /* opcode C4h E1h 8Fh  not defined */
                    /* opcode C4h E1h 90h  not defined */
                    /* opcode C4h E1h 91h  not defined */
                    /* opcode C4h E1h 92h  not defined */
                    /* opcode C4h E1h 93h  not defined */
                    /* opcode C4h E1h 94h  not defined */
                    /* opcode C4h E1h 95h  not defined */
                    /* opcode C4h E1h 96h  not defined */
                    /* opcode C4h E1h 97h  not defined */
                    /* opcode C4h E1h 98h  not defined */
                    /* opcode C4h E1h 99h  not defined */
                    /* opcode C4h E1h 9Ah  not defined */
                    /* opcode C4h E1h 9Bh  not defined */
                    /* opcode C4h E1h 9Ch  not defined */
                    /* opcode C4h E1h 9Dh  not defined */
                    /* opcode C4h E1h 9Eh  not defined */
                    /* opcode C4h E1h 9Fh  not defined */
                    /* opcode C4h E1h A0h  not defined */
                    /* opcode C4h E1h A1h  not defined */
                    /* opcode C4h E1h A2h  not defined */
                    /* opcode C4h E1h A3h  not defined */
                    /* opcode C4h E1h A4h  not defined */
                    /* opcode C4h E1h A5h  not defined */
                    /* opcode C4h E1h A6h  not defined */
                    /* opcode C4h E1h A7h  not defined */
                    /* opcode C4h E1h A8h  not defined */
                    /* opcode C4h E1h A9h  not defined */
                    /* opcode C4h E1h AAh  not defined */
                    /* opcode C4h E1h ABh  not defined */
                    /* opcode C4h E1h ACh  not defined */
                    /* opcode C4h E1h ADh  not defined */
                    /* opcode C4h E1h AEh  not defined */
                    /* opcode C4h E1h AFh  not defined */
                    /* opcode C4h E1h B0h  not defined */
                    /* opcode C4h E1h B1h  not defined */
                    /* opcode C4h E1h B2h  not defined */
                    /* opcode C4h E1h B3h  not defined */
                    /* opcode C4h E1h B4h  not defined */
                    /* opcode C4h E1h B5h  not defined */
                    /* opcode C4h E1h B6h  not defined */
                    /* opcode C4h E1h B7h  not defined */
                    /* opcode C4h E1h B8h  not defined */
                    /* opcode C4h E1h B9h  not defined */
                    /* opcode C4h E1h BAh  not defined */
                    /* opcode C4h E1h BBh  not defined */
                    /* opcode C4h E1h BCh  not defined */
                    /* opcode C4h E1h BDh  not defined */
                    /* opcode C4h E1h BEh  not defined */
                    /* opcode C4h E1h BFh  not defined */
                    /* opcode C4h E1h C0h  not defined */
                    /* opcode C4h E1h C1h  not defined */
                    /* opcode C4h E1h C2h  not defined */
                    /* opcode C4h E1h C3h  not defined */
                    /* opcode C4h E1h C4h  not defined */
                    /* opcode C4h E1h C5h  not defined */
                    /* opcode C4h E1h C6h  not defined */
                    /* opcode C4h E1h C7h  not defined */
                    /* opcode C4h E1h C8h  not defined */
                    /* opcode C4h E1h C9h  not defined */
                    /* opcode C4h E1h CAh  not defined */
                    /* opcode C4h E1h CBh  not defined */
                    /* opcode C4h E1h CCh  not defined */
                    /* opcode C4h E1h CDh  not defined */
                    /* opcode C4h E1h CEh  not defined */
                    /* opcode C4h E1h CFh  not defined */
                    /* opcode C4h E1h D0h  not defined */
                    /* opcode C4h E1h D1h  not defined */
                    /* opcode C4h E1h D2h  not defined */
                    /* opcode C4h E1h D3h  not defined */
                    /* opcode C4h E1h D4h  not defined */
                    /* opcode C4h E1h D5h  not defined */
                    /* opcode C4h E1h D6h  not defined */
                    /* opcode C4h E1h D7h  not defined */
                    /* opcode C4h E1h D8h  not defined */
                    /* opcode C4h E1h D9h  not defined */
                    /* opcode C4h E1h DAh  not defined */
                    /* opcode C4h E1h DBh  not defined */
                    /* opcode C4h E1h DCh  not defined */
                    /* opcode C4h E1h DDh  not defined */
                    /* opcode C4h E1h DEh  not defined */
                    /* opcode C4h E1h DFh  not defined */
                    /* opcode C4h E1h E0h  not defined */
                    /* opcode C4h E1h E1h  not defined */
                    /* opcode C4h E1h E2h  not defined */
                    /* opcode C4h E1h E3h  not defined */
                    /* opcode C4h E1h E4h  not defined */
                    /* opcode C4h E1h E5h  not defined */
                    /* opcode C4h E1h E6h  not defined */
                    /* opcode C4h E1h E7h  not defined */
                    /* opcode C4h E1h E8h  not defined */
                    /* opcode C4h E1h E9h  not defined */
                    /* opcode C4h E1h EAh  not defined */
                    /* opcode C4h E1h EBh  not defined */
                    /* opcode C4h E1h ECh  not defined */
                    /* opcode C4h E1h EDh  not defined */
                    /* opcode C4h E1h EEh  not defined */
                    /* opcode C4h E1h EFh  not defined */
                    /* opcode C4h E1h F0h  not defined */
                    /* opcode C4h E1h F1h  not defined */
                    /* opcode C4h E1h F2h  not defined */
                    /* opcode C4h E1h F3h  not defined */
                    /* opcode C4h E1h F4h  not defined */
                    /* opcode C4h E1h F5h  not defined */
                    /* opcode C4h E1h F6h  not defined */
                    /* opcode C4h E1h F7h  not defined */
                    /* opcode C4h E1h F8h  not defined */
                    /* opcode C4h E1h F9h  not defined */
                    /* opcode C4h E1h FAh  not defined */
                    /* opcode C4h E1h FBh  not defined */
                    /* opcode C4h E1h FCh  not defined */
                    /* opcode C4h E1h FDh  not defined */
                    /* opcode C4h E1h FEh  not defined */
                    /* opcode C4h E1h FFh  not defined */
                    default:
                        goto _x86decode_illegal_opcode;
                };
/* End of opcodes starting with C4h E1h */
                break;
            case 0xE2: /* C4h E2h   mod=3 reg=4 rm=2      spec:  */
/* Opcodes starting with C4h E2h */
                op=IPFB();
                _x86decode_begin_code32_addr32_opcode_parse_C4E2:
                switch (op) {
                    /* opcode C4h E2h 00h  not defined */
                    /* opcode C4h E2h 01h  not defined */
                    /* opcode C4h E2h 02h  not defined */
                    /* opcode C4h E2h 03h  not defined */
                    /* opcode C4h E2h 04h  not defined */
                    /* opcode C4h E2h 05h  not defined */
                    /* opcode C4h E2h 06h  not defined */
                    /* opcode C4h E2h 07h  not defined */
                    /* opcode C4h E2h 08h  not defined */
                    /* opcode C4h E2h 09h  not defined */
                    /* opcode C4h E2h 0Ah  not defined */
                    /* opcode C4h E2h 0Bh  not defined */
                    /* opcode C4h E2h 0Ch  not defined */
                    /* opcode C4h E2h 0Dh  not defined */
                    /* opcode C4h E2h 0Eh  not defined */
                    /* opcode C4h E2h 0Fh  not defined */
                    /* opcode C4h E2h 10h  not defined */
                    /* opcode C4h E2h 11h  not defined */
                    /* opcode C4h E2h 12h  not defined */
                    /* opcode C4h E2h 13h  not defined */
                    /* opcode C4h E2h 14h  not defined */
                    /* opcode C4h E2h 15h  not defined */
                    /* opcode C4h E2h 16h  not defined */
                    /* opcode C4h E2h 17h  not defined */
                    /* opcode C4h E2h 18h  not defined */
                    /* opcode C4h E2h 19h  not defined */
                    /* opcode C4h E2h 1Ah  not defined */
                    /* opcode C4h E2h 1Bh  not defined */
                    /* opcode C4h E2h 1Ch  not defined */
                    /* opcode C4h E2h 1Dh  not defined */
                    /* opcode C4h E2h 1Eh  not defined */
                    /* opcode C4h E2h 1Fh  not defined */
                    /* opcode C4h E2h 20h  not defined */
                    /* opcode C4h E2h 21h  not defined */
                    /* opcode C4h E2h 22h  not defined */
                    /* opcode C4h E2h 23h  not defined */
                    /* opcode C4h E2h 24h  not defined */
                    /* opcode C4h E2h 25h  not defined */
                    /* opcode C4h E2h 26h  not defined */
                    /* opcode C4h E2h 27h  not defined */
                    /* opcode C4h E2h 28h  not defined */
                    /* opcode C4h E2h 29h  not defined */
                    /* opcode C4h E2h 2Ah  not defined */
                    /* opcode C4h E2h 2Bh  not defined */
                    /* opcode C4h E2h 2Ch  not defined */
                    /* opcode C4h E2h 2Dh  not defined */
                    /* opcode C4h E2h 2Eh  not defined */
                    /* opcode C4h E2h 2Fh  not defined */
                    /* opcode C4h E2h 30h  not defined */
                    /* opcode C4h E2h 31h  not defined */
                    /* opcode C4h E2h 32h  not defined */
                    /* opcode C4h E2h 33h  not defined */
                    /* opcode C4h E2h 34h  not defined */
                    /* opcode C4h E2h 35h  not defined */
                    /* opcode C4h E2h 36h  not defined */
                    /* opcode C4h E2h 37h  not defined */
                    /* opcode C4h E2h 38h  not defined */
                    /* opcode C4h E2h 39h  not defined */
                    /* opcode C4h E2h 3Ah  not defined */
                    /* opcode C4h E2h 3Bh  not defined */
                    /* opcode C4h E2h 3Ch  not defined */
                    /* opcode C4h E2h 3Dh  not defined */
                    /* opcode C4h E2h 3Eh  not defined */
                    /* opcode C4h E2h 3Fh  not defined */
                    /* opcode C4h E2h 40h  not defined */
                    case 0x41: /* C4h E2h 41h        spec:  */
                    case 0x49: /* C4h E2h 49h        spec:  */
                    case 0x51: /* C4h E2h 51h        spec:  */
                    case 0x59: /* C4h E2h 59h        spec:  */
                    case 0x61: /* C4h E2h 61h        spec:  */
                    case 0x69: /* C4h E2h 69h        spec:  */
                    case 0x71: /* C4h E2h 71h        spec:  */
                        vex.V = ((~op) >> 3) & 7;
/* Opcodes starting with C4h E2h 41h */
                        op=IPFB();
                        _x86decode_begin_code32_addr32_opcode_parse_C4E241:
                        switch (op) {
                            /* opcode C4h E2h 41h 00h  not defined */
                            /* opcode C4h E2h 41h 01h  not defined */
                            /* opcode C4h E2h 41h 02h  not defined */
                            /* opcode C4h E2h 41h 03h  not defined */
                            /* opcode C4h E2h 41h 04h  not defined */
                            /* opcode C4h E2h 41h 05h  not defined */
                            /* opcode C4h E2h 41h 06h  not defined */
                            /* opcode C4h E2h 41h 07h  not defined */
                            /* opcode C4h E2h 41h 08h  not defined */
                            /* opcode C4h E2h 41h 09h  not defined */
                            /* opcode C4h E2h 41h 0Ah  not defined */
                            /* opcode C4h E2h 41h 0Bh  not defined */
                            case 0x0C: /* C4h E2h 41h 0Ch VPERMILPS sse(reg),sse(vsidx),sse(r/m)      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x0C mod/reg/rm */
                                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VPERMILPS XMM%u,XMM%u,%s",mrm.reg(),vex.V,IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                                break;
                            case 0x0D: /* C4h E2h 41h 0Dh VPERMILPD sse(reg),sse(vsidx),sse(r/m)      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x0D mod/reg/rm */
                                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VPERMILPD XMM%u,XMM%u,%s",mrm.reg(),vex.V,IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                                break;
                            /* opcode C4h E2h 41h 0Eh  not defined */
                            /* opcode C4h E2h 41h 0Fh  not defined */
                            /* opcode C4h E2h 41h 10h  not defined */
                            /* opcode C4h E2h 41h 11h  not defined */
                            /* opcode C4h E2h 41h 12h  not defined */
                            /* opcode C4h E2h 41h 13h  not defined */
                            /* opcode C4h E2h 41h 14h  not defined */
                            /* opcode C4h E2h 41h 15h  not defined */
                            /* opcode C4h E2h 41h 16h  not defined */
                            /* opcode C4h E2h 41h 17h  not defined */
                            /* opcode C4h E2h 41h 18h  not defined */
                            /* opcode C4h E2h 41h 19h  not defined */
                            /* opcode C4h E2h 41h 1Ah  not defined */
                            /* opcode C4h E2h 41h 1Bh  not defined */
                            /* opcode C4h E2h 41h 1Ch  not defined */
                            /* opcode C4h E2h 41h 1Dh  not defined */
                            /* opcode C4h E2h 41h 1Eh  not defined */
                            /* opcode C4h E2h 41h 1Fh  not defined */
                            /* opcode C4h E2h 41h 20h  not defined */
                            /* opcode C4h E2h 41h 21h  not defined */
                            /* opcode C4h E2h 41h 22h  not defined */
                            /* opcode C4h E2h 41h 23h  not defined */
                            /* opcode C4h E2h 41h 24h  not defined */
                            /* opcode C4h E2h 41h 25h  not defined */
                            /* opcode C4h E2h 41h 26h  not defined */
                            /* opcode C4h E2h 41h 27h  not defined */
                            /* opcode C4h E2h 41h 28h  not defined */
                            /* opcode C4h E2h 41h 29h  not defined */
                            /* opcode C4h E2h 41h 2Ah  not defined */
                            /* opcode C4h E2h 41h 2Bh  not defined */
                            case 0x2C: /* C4h E2h 41h 2Ch        spec:  */
                                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                                _x86decode_begin_code32_addr32_opcode_parse_C4E2412C:
/* Opcodes starting with C4h E2h 41h 2Ch */
                                switch (mrm.byte) {
                                    case 0x00: /* C4h E2h 41h 2Ch 00h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=0 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x01: /* C4h E2h 41h 2Ch 01h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=0 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x02: /* C4h E2h 41h 2Ch 02h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=0 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x03: /* C4h E2h 41h 2Ch 03h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=0 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x04: /* C4h E2h 41h 2Ch 04h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=0 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x05: /* C4h E2h 41h 2Ch 05h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=0 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x06: /* C4h E2h 41h 2Ch 06h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=0 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x07: /* C4h E2h 41h 2Ch 07h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=0 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x08: /* C4h E2h 41h 2Ch 08h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=1 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x09: /* C4h E2h 41h 2Ch 09h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=1 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x0A: /* C4h E2h 41h 2Ch 0Ah VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=1 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x0B: /* C4h E2h 41h 2Ch 0Bh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=1 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x0C: /* C4h E2h 41h 2Ch 0Ch VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=1 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x0D: /* C4h E2h 41h 2Ch 0Dh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=1 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x0E: /* C4h E2h 41h 2Ch 0Eh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=1 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x0F: /* C4h E2h 41h 2Ch 0Fh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=1 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x10: /* C4h E2h 41h 2Ch 10h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=2 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x11: /* C4h E2h 41h 2Ch 11h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=2 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x12: /* C4h E2h 41h 2Ch 12h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=2 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x13: /* C4h E2h 41h 2Ch 13h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=2 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x14: /* C4h E2h 41h 2Ch 14h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=2 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x15: /* C4h E2h 41h 2Ch 15h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=2 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x16: /* C4h E2h 41h 2Ch 16h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=2 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x17: /* C4h E2h 41h 2Ch 17h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=2 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x18: /* C4h E2h 41h 2Ch 18h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=3 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x19: /* C4h E2h 41h 2Ch 19h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=3 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x1A: /* C4h E2h 41h 2Ch 1Ah VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=3 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x1B: /* C4h E2h 41h 2Ch 1Bh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=3 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x1C: /* C4h E2h 41h 2Ch 1Ch VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=3 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x1D: /* C4h E2h 41h 2Ch 1Dh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=3 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x1E: /* C4h E2h 41h 2Ch 1Eh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=3 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x1F: /* C4h E2h 41h 2Ch 1Fh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=3 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x20: /* C4h E2h 41h 2Ch 20h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=4 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x21: /* C4h E2h 41h 2Ch 21h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=4 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x22: /* C4h E2h 41h 2Ch 22h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=4 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x23: /* C4h E2h 41h 2Ch 23h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=4 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x24: /* C4h E2h 41h 2Ch 24h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=4 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x25: /* C4h E2h 41h 2Ch 25h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=4 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x26: /* C4h E2h 41h 2Ch 26h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=4 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x27: /* C4h E2h 41h 2Ch 27h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=4 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x28: /* C4h E2h 41h 2Ch 28h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=5 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x29: /* C4h E2h 41h 2Ch 29h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=5 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x2A: /* C4h E2h 41h 2Ch 2Ah VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=5 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x2B: /* C4h E2h 41h 2Ch 2Bh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=5 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x2C: /* C4h E2h 41h 2Ch 2Ch VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=5 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x2D: /* C4h E2h 41h 2Ch 2Dh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=5 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x2E: /* C4h E2h 41h 2Ch 2Eh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=5 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x2F: /* C4h E2h 41h 2Ch 2Fh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=5 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x30: /* C4h E2h 41h 2Ch 30h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=6 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x31: /* C4h E2h 41h 2Ch 31h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=6 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x32: /* C4h E2h 41h 2Ch 32h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=6 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x33: /* C4h E2h 41h 2Ch 33h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=6 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x34: /* C4h E2h 41h 2Ch 34h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=6 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x35: /* C4h E2h 41h 2Ch 35h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=6 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x36: /* C4h E2h 41h 2Ch 36h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=6 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x37: /* C4h E2h 41h 2Ch 37h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=6 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x38: /* C4h E2h 41h 2Ch 38h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=7 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x39: /* C4h E2h 41h 2Ch 39h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=7 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x3A: /* C4h E2h 41h 2Ch 3Ah VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=7 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x3B: /* C4h E2h 41h 2Ch 3Bh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=7 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x3C: /* C4h E2h 41h 2Ch 3Ch VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=7 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x3D: /* C4h E2h 41h 2Ch 3Dh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=7 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x3E: /* C4h E2h 41h 2Ch 3Eh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=7 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x3F: /* C4h E2h 41h 2Ch 3Fh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=7 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x40: /* C4h E2h 41h 2Ch 40h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=0 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x41: /* C4h E2h 41h 2Ch 41h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=0 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x42: /* C4h E2h 41h 2Ch 42h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=0 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x43: /* C4h E2h 41h 2Ch 43h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=0 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x44: /* C4h E2h 41h 2Ch 44h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=0 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x45: /* C4h E2h 41h 2Ch 45h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=0 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x46: /* C4h E2h 41h 2Ch 46h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=0 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x47: /* C4h E2h 41h 2Ch 47h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=0 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x48: /* C4h E2h 41h 2Ch 48h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=1 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x49: /* C4h E2h 41h 2Ch 49h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=1 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x4A: /* C4h E2h 41h 2Ch 4Ah VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=1 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x4B: /* C4h E2h 41h 2Ch 4Bh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=1 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x4C: /* C4h E2h 41h 2Ch 4Ch VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=1 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x4D: /* C4h E2h 41h 2Ch 4Dh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=1 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x4E: /* C4h E2h 41h 2Ch 4Eh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=1 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x4F: /* C4h E2h 41h 2Ch 4Fh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=1 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x50: /* C4h E2h 41h 2Ch 50h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=2 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x51: /* C4h E2h 41h 2Ch 51h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=2 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x52: /* C4h E2h 41h 2Ch 52h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=2 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x53: /* C4h E2h 41h 2Ch 53h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=2 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x54: /* C4h E2h 41h 2Ch 54h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=2 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x55: /* C4h E2h 41h 2Ch 55h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=2 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x56: /* C4h E2h 41h 2Ch 56h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=2 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x57: /* C4h E2h 41h 2Ch 57h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=2 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x58: /* C4h E2h 41h 2Ch 58h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=3 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x59: /* C4h E2h 41h 2Ch 59h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=3 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x5A: /* C4h E2h 41h 2Ch 5Ah VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=3 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x5B: /* C4h E2h 41h 2Ch 5Bh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=3 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x5C: /* C4h E2h 41h 2Ch 5Ch VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=3 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x5D: /* C4h E2h 41h 2Ch 5Dh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=3 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x5E: /* C4h E2h 41h 2Ch 5Eh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=3 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x5F: /* C4h E2h 41h 2Ch 5Fh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=3 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x60: /* C4h E2h 41h 2Ch 60h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=4 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x61: /* C4h E2h 41h 2Ch 61h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=4 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x62: /* C4h E2h 41h 2Ch 62h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=4 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x63: /* C4h E2h 41h 2Ch 63h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=4 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x64: /* C4h E2h 41h 2Ch 64h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=4 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x65: /* C4h E2h 41h 2Ch 65h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=4 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x66: /* C4h E2h 41h 2Ch 66h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=4 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x67: /* C4h E2h 41h 2Ch 67h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=4 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x68: /* C4h E2h 41h 2Ch 68h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=5 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x69: /* C4h E2h 41h 2Ch 69h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=5 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x6A: /* C4h E2h 41h 2Ch 6Ah VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=5 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x6B: /* C4h E2h 41h 2Ch 6Bh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=5 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x6C: /* C4h E2h 41h 2Ch 6Ch VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=5 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x6D: /* C4h E2h 41h 2Ch 6Dh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=5 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x6E: /* C4h E2h 41h 2Ch 6Eh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=5 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x6F: /* C4h E2h 41h 2Ch 6Fh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=5 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x70: /* C4h E2h 41h 2Ch 70h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=6 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x71: /* C4h E2h 41h 2Ch 71h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=6 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x72: /* C4h E2h 41h 2Ch 72h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=6 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x73: /* C4h E2h 41h 2Ch 73h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=6 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x74: /* C4h E2h 41h 2Ch 74h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=6 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x75: /* C4h E2h 41h 2Ch 75h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=6 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x76: /* C4h E2h 41h 2Ch 76h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=6 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x77: /* C4h E2h 41h 2Ch 77h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=6 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x78: /* C4h E2h 41h 2Ch 78h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=7 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x79: /* C4h E2h 41h 2Ch 79h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=7 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x7A: /* C4h E2h 41h 2Ch 7Ah VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=7 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x7B: /* C4h E2h 41h 2Ch 7Bh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=7 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x7C: /* C4h E2h 41h 2Ch 7Ch VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=7 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x7D: /* C4h E2h 41h 2Ch 7Dh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=7 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x7E: /* C4h E2h 41h 2Ch 7Eh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=7 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x7F: /* C4h E2h 41h 2Ch 7Fh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=7 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x80: /* C4h E2h 41h 2Ch 80h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=0 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x81: /* C4h E2h 41h 2Ch 81h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=0 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x82: /* C4h E2h 41h 2Ch 82h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=0 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x83: /* C4h E2h 41h 2Ch 83h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=0 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x84: /* C4h E2h 41h 2Ch 84h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=0 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x85: /* C4h E2h 41h 2Ch 85h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=0 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x86: /* C4h E2h 41h 2Ch 86h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=0 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x87: /* C4h E2h 41h 2Ch 87h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=0 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x88: /* C4h E2h 41h 2Ch 88h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=1 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x89: /* C4h E2h 41h 2Ch 89h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=1 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x8A: /* C4h E2h 41h 2Ch 8Ah VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=1 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x8B: /* C4h E2h 41h 2Ch 8Bh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=1 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x8C: /* C4h E2h 41h 2Ch 8Ch VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=1 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x8D: /* C4h E2h 41h 2Ch 8Dh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=1 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x8E: /* C4h E2h 41h 2Ch 8Eh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=1 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x8F: /* C4h E2h 41h 2Ch 8Fh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=1 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x90: /* C4h E2h 41h 2Ch 90h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=2 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x91: /* C4h E2h 41h 2Ch 91h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=2 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x92: /* C4h E2h 41h 2Ch 92h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=2 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x93: /* C4h E2h 41h 2Ch 93h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=2 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x94: /* C4h E2h 41h 2Ch 94h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=2 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x95: /* C4h E2h 41h 2Ch 95h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=2 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x96: /* C4h E2h 41h 2Ch 96h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=2 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x97: /* C4h E2h 41h 2Ch 97h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=2 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x98: /* C4h E2h 41h 2Ch 98h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=3 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x99: /* C4h E2h 41h 2Ch 99h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=3 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x9A: /* C4h E2h 41h 2Ch 9Ah VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=3 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x9B: /* C4h E2h 41h 2Ch 9Bh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=3 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x9C: /* C4h E2h 41h 2Ch 9Ch VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=3 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x9D: /* C4h E2h 41h 2Ch 9Dh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=3 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x9E: /* C4h E2h 41h 2Ch 9Eh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=3 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x9F: /* C4h E2h 41h 2Ch 9Fh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=3 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xA0: /* C4h E2h 41h 2Ch A0h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=4 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xA1: /* C4h E2h 41h 2Ch A1h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=4 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xA2: /* C4h E2h 41h 2Ch A2h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=4 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xA3: /* C4h E2h 41h 2Ch A3h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=4 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xA4: /* C4h E2h 41h 2Ch A4h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=4 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xA5: /* C4h E2h 41h 2Ch A5h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=4 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xA6: /* C4h E2h 41h 2Ch A6h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=4 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xA7: /* C4h E2h 41h 2Ch A7h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=4 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xA8: /* C4h E2h 41h 2Ch A8h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=5 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xA9: /* C4h E2h 41h 2Ch A9h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=5 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xAA: /* C4h E2h 41h 2Ch AAh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=5 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xAB: /* C4h E2h 41h 2Ch ABh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=5 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xAC: /* C4h E2h 41h 2Ch ACh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=5 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xAD: /* C4h E2h 41h 2Ch ADh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=5 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xAE: /* C4h E2h 41h 2Ch AEh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=5 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xAF: /* C4h E2h 41h 2Ch AFh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=5 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xB0: /* C4h E2h 41h 2Ch B0h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=6 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xB1: /* C4h E2h 41h 2Ch B1h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=6 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xB2: /* C4h E2h 41h 2Ch B2h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=6 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xB3: /* C4h E2h 41h 2Ch B3h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=6 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xB4: /* C4h E2h 41h 2Ch B4h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=6 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xB5: /* C4h E2h 41h 2Ch B5h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=6 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xB6: /* C4h E2h 41h 2Ch B6h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=6 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xB7: /* C4h E2h 41h 2Ch B7h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=6 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xB8: /* C4h E2h 41h 2Ch B8h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=7 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xB9: /* C4h E2h 41h 2Ch B9h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=7 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xBA: /* C4h E2h 41h 2Ch BAh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=7 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xBB: /* C4h E2h 41h 2Ch BBh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=7 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xBC: /* C4h E2h 41h 2Ch BCh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=7 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xBD: /* C4h E2h 41h 2Ch BDh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=7 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xBE: /* C4h E2h 41h 2Ch BEh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=7 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xBF: /* C4h E2h 41h 2Ch BFh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=7 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VMASKMOVPS XMM%u,XMM%u,%s",mrm.reg(),vex.V,IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                                        break;
                                    /* opcode C4h E2h 41h 2Ch C0h  not defined */
                                    /* opcode C4h E2h 41h 2Ch C1h  not defined */
                                    /* opcode C4h E2h 41h 2Ch C2h  not defined */
                                    /* opcode C4h E2h 41h 2Ch C3h  not defined */
                                    /* opcode C4h E2h 41h 2Ch C4h  not defined */
                                    /* opcode C4h E2h 41h 2Ch C5h  not defined */
                                    /* opcode C4h E2h 41h 2Ch C6h  not defined */
                                    /* opcode C4h E2h 41h 2Ch C7h  not defined */
                                    /* opcode C4h E2h 41h 2Ch C8h  not defined */
                                    /* opcode C4h E2h 41h 2Ch C9h  not defined */
                                    /* opcode C4h E2h 41h 2Ch CAh  not defined */
                                    /* opcode C4h E2h 41h 2Ch CBh  not defined */
                                    /* opcode C4h E2h 41h 2Ch CCh  not defined */
                                    /* opcode C4h E2h 41h 2Ch CDh  not defined */
                                    /* opcode C4h E2h 41h 2Ch CEh  not defined */
                                    /* opcode C4h E2h 41h 2Ch CFh  not defined */
                                    /* opcode C4h E2h 41h 2Ch D0h  not defined */
                                    /* opcode C4h E2h 41h 2Ch D1h  not defined */
                                    /* opcode C4h E2h 41h 2Ch D2h  not defined */
                                    /* opcode C4h E2h 41h 2Ch D3h  not defined */
                                    /* opcode C4h E2h 41h 2Ch D4h  not defined */
                                    /* opcode C4h E2h 41h 2Ch D5h  not defined */
                                    /* opcode C4h E2h 41h 2Ch D6h  not defined */
                                    /* opcode C4h E2h 41h 2Ch D7h  not defined */
                                    /* opcode C4h E2h 41h 2Ch D8h  not defined */
                                    /* opcode C4h E2h 41h 2Ch D9h  not defined */
                                    /* opcode C4h E2h 41h 2Ch DAh  not defined */
                                    /* opcode C4h E2h 41h 2Ch DBh  not defined */
                                    /* opcode C4h E2h 41h 2Ch DCh  not defined */
                                    /* opcode C4h E2h 41h 2Ch DDh  not defined */
                                    /* opcode C4h E2h 41h 2Ch DEh  not defined */
                                    /* opcode C4h E2h 41h 2Ch DFh  not defined */
                                    /* opcode C4h E2h 41h 2Ch E0h  not defined */
                                    /* opcode C4h E2h 41h 2Ch E1h  not defined */
                                    /* opcode C4h E2h 41h 2Ch E2h  not defined */
                                    /* opcode C4h E2h 41h 2Ch E3h  not defined */
                                    /* opcode C4h E2h 41h 2Ch E4h  not defined */
                                    /* opcode C4h E2h 41h 2Ch E5h  not defined */
                                    /* opcode C4h E2h 41h 2Ch E6h  not defined */
                                    /* opcode C4h E2h 41h 2Ch E7h  not defined */
                                    /* opcode C4h E2h 41h 2Ch E8h  not defined */
                                    /* opcode C4h E2h 41h 2Ch E9h  not defined */
                                    /* opcode C4h E2h 41h 2Ch EAh  not defined */
                                    /* opcode C4h E2h 41h 2Ch EBh  not defined */
                                    /* opcode C4h E2h 41h 2Ch ECh  not defined */
                                    /* opcode C4h E2h 41h 2Ch EDh  not defined */
                                    /* opcode C4h E2h 41h 2Ch EEh  not defined */
                                    /* opcode C4h E2h 41h 2Ch EFh  not defined */
                                    /* opcode C4h E2h 41h 2Ch F0h  not defined */
                                    /* opcode C4h E2h 41h 2Ch F1h  not defined */
                                    /* opcode C4h E2h 41h 2Ch F2h  not defined */
                                    /* opcode C4h E2h 41h 2Ch F3h  not defined */
                                    /* opcode C4h E2h 41h 2Ch F4h  not defined */
                                    /* opcode C4h E2h 41h 2Ch F5h  not defined */
                                    /* opcode C4h E2h 41h 2Ch F6h  not defined */
                                    /* opcode C4h E2h 41h 2Ch F7h  not defined */
                                    /* opcode C4h E2h 41h 2Ch F8h  not defined */
                                    /* opcode C4h E2h 41h 2Ch F9h  not defined */
                                    /* opcode C4h E2h 41h 2Ch FAh  not defined */
                                    /* opcode C4h E2h 41h 2Ch FBh  not defined */
                                    /* opcode C4h E2h 41h 2Ch FCh  not defined */
                                    /* opcode C4h E2h 41h 2Ch FDh  not defined */
                                    /* opcode C4h E2h 41h 2Ch FEh  not defined */
                                    /* opcode C4h E2h 41h 2Ch FFh  not defined */
                                    default:
                                        goto _x86decode_illegal_opcode;
                                };
/* End of opcodes starting with C4h E2h 41h 2Ch */
                                break;
                            case 0x2D: /* C4h E2h 41h 2Dh        spec:  */
                                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                                _x86decode_begin_code32_addr32_opcode_parse_C4E2412D:
/* Opcodes starting with C4h E2h 41h 2Dh */
                                switch (mrm.byte) {
                                    case 0x00: /* C4h E2h 41h 2Dh 00h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=0 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x01: /* C4h E2h 41h 2Dh 01h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=0 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x02: /* C4h E2h 41h 2Dh 02h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=0 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x03: /* C4h E2h 41h 2Dh 03h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=0 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x04: /* C4h E2h 41h 2Dh 04h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=0 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x05: /* C4h E2h 41h 2Dh 05h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=0 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x06: /* C4h E2h 41h 2Dh 06h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=0 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x07: /* C4h E2h 41h 2Dh 07h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=0 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x08: /* C4h E2h 41h 2Dh 08h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=1 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x09: /* C4h E2h 41h 2Dh 09h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=1 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x0A: /* C4h E2h 41h 2Dh 0Ah VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=1 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x0B: /* C4h E2h 41h 2Dh 0Bh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=1 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x0C: /* C4h E2h 41h 2Dh 0Ch VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=1 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x0D: /* C4h E2h 41h 2Dh 0Dh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=1 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x0E: /* C4h E2h 41h 2Dh 0Eh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=1 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x0F: /* C4h E2h 41h 2Dh 0Fh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=1 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x10: /* C4h E2h 41h 2Dh 10h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=2 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x11: /* C4h E2h 41h 2Dh 11h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=2 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x12: /* C4h E2h 41h 2Dh 12h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=2 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x13: /* C4h E2h 41h 2Dh 13h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=2 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x14: /* C4h E2h 41h 2Dh 14h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=2 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x15: /* C4h E2h 41h 2Dh 15h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=2 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x16: /* C4h E2h 41h 2Dh 16h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=2 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x17: /* C4h E2h 41h 2Dh 17h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=2 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x18: /* C4h E2h 41h 2Dh 18h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=3 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x19: /* C4h E2h 41h 2Dh 19h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=3 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x1A: /* C4h E2h 41h 2Dh 1Ah VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=3 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x1B: /* C4h E2h 41h 2Dh 1Bh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=3 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x1C: /* C4h E2h 41h 2Dh 1Ch VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=3 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x1D: /* C4h E2h 41h 2Dh 1Dh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=3 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x1E: /* C4h E2h 41h 2Dh 1Eh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=3 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x1F: /* C4h E2h 41h 2Dh 1Fh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=3 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x20: /* C4h E2h 41h 2Dh 20h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=4 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x21: /* C4h E2h 41h 2Dh 21h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=4 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x22: /* C4h E2h 41h 2Dh 22h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=4 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x23: /* C4h E2h 41h 2Dh 23h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=4 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x24: /* C4h E2h 41h 2Dh 24h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=4 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x25: /* C4h E2h 41h 2Dh 25h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=4 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x26: /* C4h E2h 41h 2Dh 26h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=4 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x27: /* C4h E2h 41h 2Dh 27h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=4 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x28: /* C4h E2h 41h 2Dh 28h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=5 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x29: /* C4h E2h 41h 2Dh 29h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=5 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x2A: /* C4h E2h 41h 2Dh 2Ah VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=5 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x2B: /* C4h E2h 41h 2Dh 2Bh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=5 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x2C: /* C4h E2h 41h 2Dh 2Ch VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=5 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x2D: /* C4h E2h 41h 2Dh 2Dh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=5 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x2E: /* C4h E2h 41h 2Dh 2Eh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=5 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x2F: /* C4h E2h 41h 2Dh 2Fh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=5 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x30: /* C4h E2h 41h 2Dh 30h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=6 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x31: /* C4h E2h 41h 2Dh 31h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=6 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x32: /* C4h E2h 41h 2Dh 32h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=6 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x33: /* C4h E2h 41h 2Dh 33h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=6 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x34: /* C4h E2h 41h 2Dh 34h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=6 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x35: /* C4h E2h 41h 2Dh 35h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=6 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x36: /* C4h E2h 41h 2Dh 36h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=6 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x37: /* C4h E2h 41h 2Dh 37h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=6 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x38: /* C4h E2h 41h 2Dh 38h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=7 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x39: /* C4h E2h 41h 2Dh 39h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=7 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x3A: /* C4h E2h 41h 2Dh 3Ah VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=7 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x3B: /* C4h E2h 41h 2Dh 3Bh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=7 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x3C: /* C4h E2h 41h 2Dh 3Ch VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=7 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x3D: /* C4h E2h 41h 2Dh 3Dh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=7 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x3E: /* C4h E2h 41h 2Dh 3Eh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=7 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x3F: /* C4h E2h 41h 2Dh 3Fh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=7 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x40: /* C4h E2h 41h 2Dh 40h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=0 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x41: /* C4h E2h 41h 2Dh 41h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=0 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x42: /* C4h E2h 41h 2Dh 42h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=0 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x43: /* C4h E2h 41h 2Dh 43h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=0 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x44: /* C4h E2h 41h 2Dh 44h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=0 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x45: /* C4h E2h 41h 2Dh 45h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=0 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x46: /* C4h E2h 41h 2Dh 46h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=0 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x47: /* C4h E2h 41h 2Dh 47h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=0 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x48: /* C4h E2h 41h 2Dh 48h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=1 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x49: /* C4h E2h 41h 2Dh 49h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=1 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x4A: /* C4h E2h 41h 2Dh 4Ah VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=1 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x4B: /* C4h E2h 41h 2Dh 4Bh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=1 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x4C: /* C4h E2h 41h 2Dh 4Ch VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=1 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x4D: /* C4h E2h 41h 2Dh 4Dh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=1 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x4E: /* C4h E2h 41h 2Dh 4Eh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=1 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x4F: /* C4h E2h 41h 2Dh 4Fh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=1 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x50: /* C4h E2h 41h 2Dh 50h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=2 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x51: /* C4h E2h 41h 2Dh 51h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=2 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x52: /* C4h E2h 41h 2Dh 52h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=2 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x53: /* C4h E2h 41h 2Dh 53h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=2 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x54: /* C4h E2h 41h 2Dh 54h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=2 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x55: /* C4h E2h 41h 2Dh 55h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=2 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x56: /* C4h E2h 41h 2Dh 56h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=2 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x57: /* C4h E2h 41h 2Dh 57h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=2 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x58: /* C4h E2h 41h 2Dh 58h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=3 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x59: /* C4h E2h 41h 2Dh 59h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=3 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x5A: /* C4h E2h 41h 2Dh 5Ah VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=3 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x5B: /* C4h E2h 41h 2Dh 5Bh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=3 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x5C: /* C4h E2h 41h 2Dh 5Ch VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=3 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x5D: /* C4h E2h 41h 2Dh 5Dh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=3 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x5E: /* C4h E2h 41h 2Dh 5Eh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=3 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x5F: /* C4h E2h 41h 2Dh 5Fh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=3 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x60: /* C4h E2h 41h 2Dh 60h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=4 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x61: /* C4h E2h 41h 2Dh 61h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=4 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x62: /* C4h E2h 41h 2Dh 62h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=4 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x63: /* C4h E2h 41h 2Dh 63h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=4 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x64: /* C4h E2h 41h 2Dh 64h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=4 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x65: /* C4h E2h 41h 2Dh 65h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=4 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x66: /* C4h E2h 41h 2Dh 66h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=4 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x67: /* C4h E2h 41h 2Dh 67h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=4 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x68: /* C4h E2h 41h 2Dh 68h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=5 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x69: /* C4h E2h 41h 2Dh 69h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=5 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x6A: /* C4h E2h 41h 2Dh 6Ah VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=5 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x6B: /* C4h E2h 41h 2Dh 6Bh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=5 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x6C: /* C4h E2h 41h 2Dh 6Ch VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=5 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x6D: /* C4h E2h 41h 2Dh 6Dh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=5 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x6E: /* C4h E2h 41h 2Dh 6Eh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=5 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x6F: /* C4h E2h 41h 2Dh 6Fh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=5 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x70: /* C4h E2h 41h 2Dh 70h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=6 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x71: /* C4h E2h 41h 2Dh 71h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=6 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x72: /* C4h E2h 41h 2Dh 72h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=6 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x73: /* C4h E2h 41h 2Dh 73h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=6 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x74: /* C4h E2h 41h 2Dh 74h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=6 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x75: /* C4h E2h 41h 2Dh 75h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=6 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x76: /* C4h E2h 41h 2Dh 76h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=6 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x77: /* C4h E2h 41h 2Dh 77h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=6 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x78: /* C4h E2h 41h 2Dh 78h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=7 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x79: /* C4h E2h 41h 2Dh 79h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=7 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x7A: /* C4h E2h 41h 2Dh 7Ah VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=7 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x7B: /* C4h E2h 41h 2Dh 7Bh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=7 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x7C: /* C4h E2h 41h 2Dh 7Ch VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=7 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x7D: /* C4h E2h 41h 2Dh 7Dh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=7 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x7E: /* C4h E2h 41h 2Dh 7Eh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=7 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x7F: /* C4h E2h 41h 2Dh 7Fh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=7 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x80: /* C4h E2h 41h 2Dh 80h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=0 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x81: /* C4h E2h 41h 2Dh 81h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=0 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x82: /* C4h E2h 41h 2Dh 82h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=0 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x83: /* C4h E2h 41h 2Dh 83h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=0 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x84: /* C4h E2h 41h 2Dh 84h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=0 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x85: /* C4h E2h 41h 2Dh 85h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=0 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x86: /* C4h E2h 41h 2Dh 86h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=0 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x87: /* C4h E2h 41h 2Dh 87h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=0 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x88: /* C4h E2h 41h 2Dh 88h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=1 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x89: /* C4h E2h 41h 2Dh 89h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=1 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x8A: /* C4h E2h 41h 2Dh 8Ah VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=1 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x8B: /* C4h E2h 41h 2Dh 8Bh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=1 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x8C: /* C4h E2h 41h 2Dh 8Ch VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=1 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x8D: /* C4h E2h 41h 2Dh 8Dh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=1 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x8E: /* C4h E2h 41h 2Dh 8Eh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=1 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x8F: /* C4h E2h 41h 2Dh 8Fh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=1 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x90: /* C4h E2h 41h 2Dh 90h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=2 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x91: /* C4h E2h 41h 2Dh 91h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=2 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x92: /* C4h E2h 41h 2Dh 92h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=2 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x93: /* C4h E2h 41h 2Dh 93h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=2 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x94: /* C4h E2h 41h 2Dh 94h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=2 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x95: /* C4h E2h 41h 2Dh 95h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=2 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x96: /* C4h E2h 41h 2Dh 96h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=2 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x97: /* C4h E2h 41h 2Dh 97h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=2 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x98: /* C4h E2h 41h 2Dh 98h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=3 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x99: /* C4h E2h 41h 2Dh 99h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=3 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x9A: /* C4h E2h 41h 2Dh 9Ah VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=3 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x9B: /* C4h E2h 41h 2Dh 9Bh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=3 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x9C: /* C4h E2h 41h 2Dh 9Ch VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=3 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x9D: /* C4h E2h 41h 2Dh 9Dh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=3 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x9E: /* C4h E2h 41h 2Dh 9Eh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=3 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x9F: /* C4h E2h 41h 2Dh 9Fh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=3 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xA0: /* C4h E2h 41h 2Dh A0h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=4 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xA1: /* C4h E2h 41h 2Dh A1h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=4 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xA2: /* C4h E2h 41h 2Dh A2h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=4 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xA3: /* C4h E2h 41h 2Dh A3h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=4 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xA4: /* C4h E2h 41h 2Dh A4h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=4 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xA5: /* C4h E2h 41h 2Dh A5h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=4 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xA6: /* C4h E2h 41h 2Dh A6h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=4 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xA7: /* C4h E2h 41h 2Dh A7h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=4 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xA8: /* C4h E2h 41h 2Dh A8h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=5 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xA9: /* C4h E2h 41h 2Dh A9h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=5 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xAA: /* C4h E2h 41h 2Dh AAh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=5 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xAB: /* C4h E2h 41h 2Dh ABh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=5 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xAC: /* C4h E2h 41h 2Dh ACh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=5 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xAD: /* C4h E2h 41h 2Dh ADh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=5 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xAE: /* C4h E2h 41h 2Dh AEh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=5 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xAF: /* C4h E2h 41h 2Dh AFh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=5 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xB0: /* C4h E2h 41h 2Dh B0h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=6 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xB1: /* C4h E2h 41h 2Dh B1h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=6 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xB2: /* C4h E2h 41h 2Dh B2h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=6 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xB3: /* C4h E2h 41h 2Dh B3h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=6 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xB4: /* C4h E2h 41h 2Dh B4h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=6 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xB5: /* C4h E2h 41h 2Dh B5h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=6 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xB6: /* C4h E2h 41h 2Dh B6h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=6 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xB7: /* C4h E2h 41h 2Dh B7h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=6 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xB8: /* C4h E2h 41h 2Dh B8h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=7 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xB9: /* C4h E2h 41h 2Dh B9h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=7 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xBA: /* C4h E2h 41h 2Dh BAh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=7 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xBB: /* C4h E2h 41h 2Dh BBh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=7 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xBC: /* C4h E2h 41h 2Dh BCh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=7 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xBD: /* C4h E2h 41h 2Dh BDh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=7 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xBE: /* C4h E2h 41h 2Dh BEh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=7 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xBF: /* C4h E2h 41h 2Dh BFh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=7 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VMASKMOVPD XMM%u,XMM%u,%s",mrm.reg(),vex.V,IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                                        break;
                                    /* opcode C4h E2h 41h 2Dh C0h  not defined */
                                    /* opcode C4h E2h 41h 2Dh C1h  not defined */
                                    /* opcode C4h E2h 41h 2Dh C2h  not defined */
                                    /* opcode C4h E2h 41h 2Dh C3h  not defined */
                                    /* opcode C4h E2h 41h 2Dh C4h  not defined */
                                    /* opcode C4h E2h 41h 2Dh C5h  not defined */
                                    /* opcode C4h E2h 41h 2Dh C6h  not defined */
                                    /* opcode C4h E2h 41h 2Dh C7h  not defined */
                                    /* opcode C4h E2h 41h 2Dh C8h  not defined */
                                    /* opcode C4h E2h 41h 2Dh C9h  not defined */
                                    /* opcode C4h E2h 41h 2Dh CAh  not defined */
                                    /* opcode C4h E2h 41h 2Dh CBh  not defined */
                                    /* opcode C4h E2h 41h 2Dh CCh  not defined */
                                    /* opcode C4h E2h 41h 2Dh CDh  not defined */
                                    /* opcode C4h E2h 41h 2Dh CEh  not defined */
                                    /* opcode C4h E2h 41h 2Dh CFh  not defined */
                                    /* opcode C4h E2h 41h 2Dh D0h  not defined */
                                    /* opcode C4h E2h 41h 2Dh D1h  not defined */
                                    /* opcode C4h E2h 41h 2Dh D2h  not defined */
                                    /* opcode C4h E2h 41h 2Dh D3h  not defined */
                                    /* opcode C4h E2h 41h 2Dh D4h  not defined */
                                    /* opcode C4h E2h 41h 2Dh D5h  not defined */
                                    /* opcode C4h E2h 41h 2Dh D6h  not defined */
                                    /* opcode C4h E2h 41h 2Dh D7h  not defined */
                                    /* opcode C4h E2h 41h 2Dh D8h  not defined */
                                    /* opcode C4h E2h 41h 2Dh D9h  not defined */
                                    /* opcode C4h E2h 41h 2Dh DAh  not defined */
                                    /* opcode C4h E2h 41h 2Dh DBh  not defined */
                                    /* opcode C4h E2h 41h 2Dh DCh  not defined */
                                    /* opcode C4h E2h 41h 2Dh DDh  not defined */
                                    /* opcode C4h E2h 41h 2Dh DEh  not defined */
                                    /* opcode C4h E2h 41h 2Dh DFh  not defined */
                                    /* opcode C4h E2h 41h 2Dh E0h  not defined */
                                    /* opcode C4h E2h 41h 2Dh E1h  not defined */
                                    /* opcode C4h E2h 41h 2Dh E2h  not defined */
                                    /* opcode C4h E2h 41h 2Dh E3h  not defined */
                                    /* opcode C4h E2h 41h 2Dh E4h  not defined */
                                    /* opcode C4h E2h 41h 2Dh E5h  not defined */
                                    /* opcode C4h E2h 41h 2Dh E6h  not defined */
                                    /* opcode C4h E2h 41h 2Dh E7h  not defined */
                                    /* opcode C4h E2h 41h 2Dh E8h  not defined */
                                    /* opcode C4h E2h 41h 2Dh E9h  not defined */
                                    /* opcode C4h E2h 41h 2Dh EAh  not defined */
                                    /* opcode C4h E2h 41h 2Dh EBh  not defined */
                                    /* opcode C4h E2h 41h 2Dh ECh  not defined */
                                    /* opcode C4h E2h 41h 2Dh EDh  not defined */
                                    /* opcode C4h E2h 41h 2Dh EEh  not defined */
                                    /* opcode C4h E2h 41h 2Dh EFh  not defined */
                                    /* opcode C4h E2h 41h 2Dh F0h  not defined */
                                    /* opcode C4h E2h 41h 2Dh F1h  not defined */
                                    /* opcode C4h E2h 41h 2Dh F2h  not defined */
                                    /* opcode C4h E2h 41h 2Dh F3h  not defined */
                                    /* opcode C4h E2h 41h 2Dh F4h  not defined */
                                    /* opcode C4h E2h 41h 2Dh F5h  not defined */
                                    /* opcode C4h E2h 41h 2Dh F6h  not defined */
                                    /* opcode C4h E2h 41h 2Dh F7h  not defined */
                                    /* opcode C4h E2h 41h 2Dh F8h  not defined */
                                    /* opcode C4h E2h 41h 2Dh F9h  not defined */
                                    /* opcode C4h E2h 41h 2Dh FAh  not defined */
                                    /* opcode C4h E2h 41h 2Dh FBh  not defined */
                                    /* opcode C4h E2h 41h 2Dh FCh  not defined */
                                    /* opcode C4h E2h 41h 2Dh FDh  not defined */
                                    /* opcode C4h E2h 41h 2Dh FEh  not defined */
                                    /* opcode C4h E2h 41h 2Dh FFh  not defined */
                                    default:
                                        goto _x86decode_illegal_opcode;
                                };
/* End of opcodes starting with C4h E2h 41h 2Dh */
                                break;
                            case 0x2E: /* C4h E2h 41h 2Eh        spec:  */
                                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                                _x86decode_begin_code32_addr32_opcode_parse_C4E2412E:
/* Opcodes starting with C4h E2h 41h 2Eh */
                                switch (mrm.byte) {
                                    case 0x00: /* C4h E2h 41h 2Eh 00h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=0 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x01: /* C4h E2h 41h 2Eh 01h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=0 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x02: /* C4h E2h 41h 2Eh 02h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=0 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x03: /* C4h E2h 41h 2Eh 03h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=0 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x04: /* C4h E2h 41h 2Eh 04h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=0 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x05: /* C4h E2h 41h 2Eh 05h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=0 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x06: /* C4h E2h 41h 2Eh 06h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=0 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x07: /* C4h E2h 41h 2Eh 07h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=0 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x08: /* C4h E2h 41h 2Eh 08h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=1 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x09: /* C4h E2h 41h 2Eh 09h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=1 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x0A: /* C4h E2h 41h 2Eh 0Ah VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=1 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x0B: /* C4h E2h 41h 2Eh 0Bh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=1 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x0C: /* C4h E2h 41h 2Eh 0Ch VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=1 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x0D: /* C4h E2h 41h 2Eh 0Dh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=1 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x0E: /* C4h E2h 41h 2Eh 0Eh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=1 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x0F: /* C4h E2h 41h 2Eh 0Fh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=1 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x10: /* C4h E2h 41h 2Eh 10h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=2 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x11: /* C4h E2h 41h 2Eh 11h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=2 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x12: /* C4h E2h 41h 2Eh 12h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=2 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x13: /* C4h E2h 41h 2Eh 13h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=2 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x14: /* C4h E2h 41h 2Eh 14h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=2 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x15: /* C4h E2h 41h 2Eh 15h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=2 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x16: /* C4h E2h 41h 2Eh 16h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=2 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x17: /* C4h E2h 41h 2Eh 17h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=2 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x18: /* C4h E2h 41h 2Eh 18h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=3 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x19: /* C4h E2h 41h 2Eh 19h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=3 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x1A: /* C4h E2h 41h 2Eh 1Ah VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=3 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x1B: /* C4h E2h 41h 2Eh 1Bh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=3 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x1C: /* C4h E2h 41h 2Eh 1Ch VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=3 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x1D: /* C4h E2h 41h 2Eh 1Dh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=3 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x1E: /* C4h E2h 41h 2Eh 1Eh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=3 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x1F: /* C4h E2h 41h 2Eh 1Fh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=3 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x20: /* C4h E2h 41h 2Eh 20h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=4 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x21: /* C4h E2h 41h 2Eh 21h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=4 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x22: /* C4h E2h 41h 2Eh 22h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=4 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x23: /* C4h E2h 41h 2Eh 23h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=4 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x24: /* C4h E2h 41h 2Eh 24h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=4 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x25: /* C4h E2h 41h 2Eh 25h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=4 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x26: /* C4h E2h 41h 2Eh 26h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=4 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x27: /* C4h E2h 41h 2Eh 27h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=4 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x28: /* C4h E2h 41h 2Eh 28h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=5 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x29: /* C4h E2h 41h 2Eh 29h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=5 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x2A: /* C4h E2h 41h 2Eh 2Ah VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=5 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x2B: /* C4h E2h 41h 2Eh 2Bh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=5 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x2C: /* C4h E2h 41h 2Eh 2Ch VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=5 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x2D: /* C4h E2h 41h 2Eh 2Dh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=5 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x2E: /* C4h E2h 41h 2Eh 2Eh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=5 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x2F: /* C4h E2h 41h 2Eh 2Fh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=5 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x30: /* C4h E2h 41h 2Eh 30h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=6 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x31: /* C4h E2h 41h 2Eh 31h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=6 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x32: /* C4h E2h 41h 2Eh 32h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=6 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x33: /* C4h E2h 41h 2Eh 33h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=6 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x34: /* C4h E2h 41h 2Eh 34h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=6 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x35: /* C4h E2h 41h 2Eh 35h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=6 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x36: /* C4h E2h 41h 2Eh 36h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=6 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x37: /* C4h E2h 41h 2Eh 37h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=6 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x38: /* C4h E2h 41h 2Eh 38h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=7 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x39: /* C4h E2h 41h 2Eh 39h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=7 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x3A: /* C4h E2h 41h 2Eh 3Ah VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=7 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x3B: /* C4h E2h 41h 2Eh 3Bh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=7 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x3C: /* C4h E2h 41h 2Eh 3Ch VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=7 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x3D: /* C4h E2h 41h 2Eh 3Dh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=7 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x3E: /* C4h E2h 41h 2Eh 3Eh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=7 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x3F: /* C4h E2h 41h 2Eh 3Fh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=7 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x40: /* C4h E2h 41h 2Eh 40h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=0 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x41: /* C4h E2h 41h 2Eh 41h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=0 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x42: /* C4h E2h 41h 2Eh 42h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=0 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x43: /* C4h E2h 41h 2Eh 43h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=0 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x44: /* C4h E2h 41h 2Eh 44h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=0 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x45: /* C4h E2h 41h 2Eh 45h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=0 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x46: /* C4h E2h 41h 2Eh 46h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=0 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x47: /* C4h E2h 41h 2Eh 47h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=0 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x48: /* C4h E2h 41h 2Eh 48h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=1 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x49: /* C4h E2h 41h 2Eh 49h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=1 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x4A: /* C4h E2h 41h 2Eh 4Ah VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=1 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x4B: /* C4h E2h 41h 2Eh 4Bh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=1 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x4C: /* C4h E2h 41h 2Eh 4Ch VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=1 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x4D: /* C4h E2h 41h 2Eh 4Dh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=1 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x4E: /* C4h E2h 41h 2Eh 4Eh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=1 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x4F: /* C4h E2h 41h 2Eh 4Fh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=1 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x50: /* C4h E2h 41h 2Eh 50h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=2 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x51: /* C4h E2h 41h 2Eh 51h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=2 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x52: /* C4h E2h 41h 2Eh 52h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=2 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x53: /* C4h E2h 41h 2Eh 53h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=2 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x54: /* C4h E2h 41h 2Eh 54h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=2 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x55: /* C4h E2h 41h 2Eh 55h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=2 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x56: /* C4h E2h 41h 2Eh 56h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=2 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x57: /* C4h E2h 41h 2Eh 57h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=2 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x58: /* C4h E2h 41h 2Eh 58h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=3 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x59: /* C4h E2h 41h 2Eh 59h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=3 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x5A: /* C4h E2h 41h 2Eh 5Ah VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=3 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x5B: /* C4h E2h 41h 2Eh 5Bh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=3 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x5C: /* C4h E2h 41h 2Eh 5Ch VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=3 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x5D: /* C4h E2h 41h 2Eh 5Dh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=3 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x5E: /* C4h E2h 41h 2Eh 5Eh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=3 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x5F: /* C4h E2h 41h 2Eh 5Fh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=3 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x60: /* C4h E2h 41h 2Eh 60h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=4 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x61: /* C4h E2h 41h 2Eh 61h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=4 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x62: /* C4h E2h 41h 2Eh 62h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=4 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x63: /* C4h E2h 41h 2Eh 63h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=4 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x64: /* C4h E2h 41h 2Eh 64h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=4 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x65: /* C4h E2h 41h 2Eh 65h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=4 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x66: /* C4h E2h 41h 2Eh 66h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=4 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x67: /* C4h E2h 41h 2Eh 67h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=4 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x68: /* C4h E2h 41h 2Eh 68h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=5 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x69: /* C4h E2h 41h 2Eh 69h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=5 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x6A: /* C4h E2h 41h 2Eh 6Ah VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=5 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x6B: /* C4h E2h 41h 2Eh 6Bh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=5 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x6C: /* C4h E2h 41h 2Eh 6Ch VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=5 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x6D: /* C4h E2h 41h 2Eh 6Dh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=5 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x6E: /* C4h E2h 41h 2Eh 6Eh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=5 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x6F: /* C4h E2h 41h 2Eh 6Fh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=5 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x70: /* C4h E2h 41h 2Eh 70h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=6 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x71: /* C4h E2h 41h 2Eh 71h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=6 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x72: /* C4h E2h 41h 2Eh 72h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=6 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x73: /* C4h E2h 41h 2Eh 73h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=6 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x74: /* C4h E2h 41h 2Eh 74h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=6 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x75: /* C4h E2h 41h 2Eh 75h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=6 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x76: /* C4h E2h 41h 2Eh 76h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=6 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x77: /* C4h E2h 41h 2Eh 77h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=6 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x78: /* C4h E2h 41h 2Eh 78h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=7 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x79: /* C4h E2h 41h 2Eh 79h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=7 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x7A: /* C4h E2h 41h 2Eh 7Ah VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=7 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x7B: /* C4h E2h 41h 2Eh 7Bh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=7 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x7C: /* C4h E2h 41h 2Eh 7Ch VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=7 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x7D: /* C4h E2h 41h 2Eh 7Dh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=7 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x7E: /* C4h E2h 41h 2Eh 7Eh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=7 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x7F: /* C4h E2h 41h 2Eh 7Fh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=7 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x80: /* C4h E2h 41h 2Eh 80h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=0 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x81: /* C4h E2h 41h 2Eh 81h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=0 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x82: /* C4h E2h 41h 2Eh 82h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=0 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x83: /* C4h E2h 41h 2Eh 83h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=0 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x84: /* C4h E2h 41h 2Eh 84h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=0 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x85: /* C4h E2h 41h 2Eh 85h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=0 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x86: /* C4h E2h 41h 2Eh 86h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=0 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x87: /* C4h E2h 41h 2Eh 87h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=0 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x88: /* C4h E2h 41h 2Eh 88h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=1 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x89: /* C4h E2h 41h 2Eh 89h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=1 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x8A: /* C4h E2h 41h 2Eh 8Ah VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=1 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x8B: /* C4h E2h 41h 2Eh 8Bh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=1 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x8C: /* C4h E2h 41h 2Eh 8Ch VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=1 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x8D: /* C4h E2h 41h 2Eh 8Dh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=1 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x8E: /* C4h E2h 41h 2Eh 8Eh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=1 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x8F: /* C4h E2h 41h 2Eh 8Fh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=1 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x90: /* C4h E2h 41h 2Eh 90h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=2 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x91: /* C4h E2h 41h 2Eh 91h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=2 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x92: /* C4h E2h 41h 2Eh 92h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=2 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x93: /* C4h E2h 41h 2Eh 93h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=2 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x94: /* C4h E2h 41h 2Eh 94h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=2 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x95: /* C4h E2h 41h 2Eh 95h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=2 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x96: /* C4h E2h 41h 2Eh 96h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=2 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x97: /* C4h E2h 41h 2Eh 97h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=2 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x98: /* C4h E2h 41h 2Eh 98h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=3 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x99: /* C4h E2h 41h 2Eh 99h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=3 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x9A: /* C4h E2h 41h 2Eh 9Ah VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=3 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x9B: /* C4h E2h 41h 2Eh 9Bh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=3 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x9C: /* C4h E2h 41h 2Eh 9Ch VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=3 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x9D: /* C4h E2h 41h 2Eh 9Dh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=3 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x9E: /* C4h E2h 41h 2Eh 9Eh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=3 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x9F: /* C4h E2h 41h 2Eh 9Fh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=3 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xA0: /* C4h E2h 41h 2Eh A0h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=4 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xA1: /* C4h E2h 41h 2Eh A1h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=4 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xA2: /* C4h E2h 41h 2Eh A2h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=4 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xA3: /* C4h E2h 41h 2Eh A3h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=4 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xA4: /* C4h E2h 41h 2Eh A4h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=4 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xA5: /* C4h E2h 41h 2Eh A5h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=4 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xA6: /* C4h E2h 41h 2Eh A6h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=4 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xA7: /* C4h E2h 41h 2Eh A7h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=4 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xA8: /* C4h E2h 41h 2Eh A8h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=5 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xA9: /* C4h E2h 41h 2Eh A9h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=5 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xAA: /* C4h E2h 41h 2Eh AAh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=5 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xAB: /* C4h E2h 41h 2Eh ABh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=5 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xAC: /* C4h E2h 41h 2Eh ACh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=5 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xAD: /* C4h E2h 41h 2Eh ADh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=5 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xAE: /* C4h E2h 41h 2Eh AEh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=5 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xAF: /* C4h E2h 41h 2Eh AFh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=5 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xB0: /* C4h E2h 41h 2Eh B0h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=6 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xB1: /* C4h E2h 41h 2Eh B1h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=6 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xB2: /* C4h E2h 41h 2Eh B2h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=6 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xB3: /* C4h E2h 41h 2Eh B3h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=6 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xB4: /* C4h E2h 41h 2Eh B4h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=6 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xB5: /* C4h E2h 41h 2Eh B5h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=6 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xB6: /* C4h E2h 41h 2Eh B6h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=6 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xB7: /* C4h E2h 41h 2Eh B7h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=6 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xB8: /* C4h E2h 41h 2Eh B8h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=7 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xB9: /* C4h E2h 41h 2Eh B9h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=7 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xBA: /* C4h E2h 41h 2Eh BAh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=7 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xBB: /* C4h E2h 41h 2Eh BBh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=7 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xBC: /* C4h E2h 41h 2Eh BCh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=7 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xBD: /* C4h E2h 41h 2Eh BDh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=7 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xBE: /* C4h E2h 41h 2Eh BEh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=7 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xBF: /* C4h E2h 41h 2Eh BFh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=7 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VMASKMOVPS %s,XMM%u,XMM%u",IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""),vex.V,mrm.reg());
                                        break;
                                    /* opcode C4h E2h 41h 2Eh C0h  not defined */
                                    /* opcode C4h E2h 41h 2Eh C1h  not defined */
                                    /* opcode C4h E2h 41h 2Eh C2h  not defined */
                                    /* opcode C4h E2h 41h 2Eh C3h  not defined */
                                    /* opcode C4h E2h 41h 2Eh C4h  not defined */
                                    /* opcode C4h E2h 41h 2Eh C5h  not defined */
                                    /* opcode C4h E2h 41h 2Eh C6h  not defined */
                                    /* opcode C4h E2h 41h 2Eh C7h  not defined */
                                    /* opcode C4h E2h 41h 2Eh C8h  not defined */
                                    /* opcode C4h E2h 41h 2Eh C9h  not defined */
                                    /* opcode C4h E2h 41h 2Eh CAh  not defined */
                                    /* opcode C4h E2h 41h 2Eh CBh  not defined */
                                    /* opcode C4h E2h 41h 2Eh CCh  not defined */
                                    /* opcode C4h E2h 41h 2Eh CDh  not defined */
                                    /* opcode C4h E2h 41h 2Eh CEh  not defined */
                                    /* opcode C4h E2h 41h 2Eh CFh  not defined */
                                    /* opcode C4h E2h 41h 2Eh D0h  not defined */
                                    /* opcode C4h E2h 41h 2Eh D1h  not defined */
                                    /* opcode C4h E2h 41h 2Eh D2h  not defined */
                                    /* opcode C4h E2h 41h 2Eh D3h  not defined */
                                    /* opcode C4h E2h 41h 2Eh D4h  not defined */
                                    /* opcode C4h E2h 41h 2Eh D5h  not defined */
                                    /* opcode C4h E2h 41h 2Eh D6h  not defined */
                                    /* opcode C4h E2h 41h 2Eh D7h  not defined */
                                    /* opcode C4h E2h 41h 2Eh D8h  not defined */
                                    /* opcode C4h E2h 41h 2Eh D9h  not defined */
                                    /* opcode C4h E2h 41h 2Eh DAh  not defined */
                                    /* opcode C4h E2h 41h 2Eh DBh  not defined */
                                    /* opcode C4h E2h 41h 2Eh DCh  not defined */
                                    /* opcode C4h E2h 41h 2Eh DDh  not defined */
                                    /* opcode C4h E2h 41h 2Eh DEh  not defined */
                                    /* opcode C4h E2h 41h 2Eh DFh  not defined */
                                    /* opcode C4h E2h 41h 2Eh E0h  not defined */
                                    /* opcode C4h E2h 41h 2Eh E1h  not defined */
                                    /* opcode C4h E2h 41h 2Eh E2h  not defined */
                                    /* opcode C4h E2h 41h 2Eh E3h  not defined */
                                    /* opcode C4h E2h 41h 2Eh E4h  not defined */
                                    /* opcode C4h E2h 41h 2Eh E5h  not defined */
                                    /* opcode C4h E2h 41h 2Eh E6h  not defined */
                                    /* opcode C4h E2h 41h 2Eh E7h  not defined */
                                    /* opcode C4h E2h 41h 2Eh E8h  not defined */
                                    /* opcode C4h E2h 41h 2Eh E9h  not defined */
                                    /* opcode C4h E2h 41h 2Eh EAh  not defined */
                                    /* opcode C4h E2h 41h 2Eh EBh  not defined */
                                    /* opcode C4h E2h 41h 2Eh ECh  not defined */
                                    /* opcode C4h E2h 41h 2Eh EDh  not defined */
                                    /* opcode C4h E2h 41h 2Eh EEh  not defined */
                                    /* opcode C4h E2h 41h 2Eh EFh  not defined */
                                    /* opcode C4h E2h 41h 2Eh F0h  not defined */
                                    /* opcode C4h E2h 41h 2Eh F1h  not defined */
                                    /* opcode C4h E2h 41h 2Eh F2h  not defined */
                                    /* opcode C4h E2h 41h 2Eh F3h  not defined */
                                    /* opcode C4h E2h 41h 2Eh F4h  not defined */
                                    /* opcode C4h E2h 41h 2Eh F5h  not defined */
                                    /* opcode C4h E2h 41h 2Eh F6h  not defined */
                                    /* opcode C4h E2h 41h 2Eh F7h  not defined */
                                    /* opcode C4h E2h 41h 2Eh F8h  not defined */
                                    /* opcode C4h E2h 41h 2Eh F9h  not defined */
                                    /* opcode C4h E2h 41h 2Eh FAh  not defined */
                                    /* opcode C4h E2h 41h 2Eh FBh  not defined */
                                    /* opcode C4h E2h 41h 2Eh FCh  not defined */
                                    /* opcode C4h E2h 41h 2Eh FDh  not defined */
                                    /* opcode C4h E2h 41h 2Eh FEh  not defined */
                                    /* opcode C4h E2h 41h 2Eh FFh  not defined */
                                    default:
                                        goto _x86decode_illegal_opcode;
                                };
/* End of opcodes starting with C4h E2h 41h 2Eh */
                                break;
                            case 0x2F: /* C4h E2h 41h 2Fh        spec:  */
                                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                                _x86decode_begin_code32_addr32_opcode_parse_C4E2412F:
/* Opcodes starting with C4h E2h 41h 2Fh */
                                switch (mrm.byte) {
                                    case 0x00: /* C4h E2h 41h 2Fh 00h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=0 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x01: /* C4h E2h 41h 2Fh 01h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=0 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x02: /* C4h E2h 41h 2Fh 02h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=0 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x03: /* C4h E2h 41h 2Fh 03h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=0 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x04: /* C4h E2h 41h 2Fh 04h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=0 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x05: /* C4h E2h 41h 2Fh 05h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=0 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x06: /* C4h E2h 41h 2Fh 06h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=0 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x07: /* C4h E2h 41h 2Fh 07h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=0 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x08: /* C4h E2h 41h 2Fh 08h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=1 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x09: /* C4h E2h 41h 2Fh 09h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=1 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x0A: /* C4h E2h 41h 2Fh 0Ah VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=1 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x0B: /* C4h E2h 41h 2Fh 0Bh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=1 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x0C: /* C4h E2h 41h 2Fh 0Ch VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=1 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x0D: /* C4h E2h 41h 2Fh 0Dh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=1 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x0E: /* C4h E2h 41h 2Fh 0Eh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=1 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x0F: /* C4h E2h 41h 2Fh 0Fh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=1 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x10: /* C4h E2h 41h 2Fh 10h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=2 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x11: /* C4h E2h 41h 2Fh 11h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=2 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x12: /* C4h E2h 41h 2Fh 12h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=2 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x13: /* C4h E2h 41h 2Fh 13h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=2 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x14: /* C4h E2h 41h 2Fh 14h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=2 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x15: /* C4h E2h 41h 2Fh 15h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=2 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x16: /* C4h E2h 41h 2Fh 16h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=2 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x17: /* C4h E2h 41h 2Fh 17h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=2 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x18: /* C4h E2h 41h 2Fh 18h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=3 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x19: /* C4h E2h 41h 2Fh 19h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=3 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x1A: /* C4h E2h 41h 2Fh 1Ah VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=3 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x1B: /* C4h E2h 41h 2Fh 1Bh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=3 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x1C: /* C4h E2h 41h 2Fh 1Ch VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=3 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x1D: /* C4h E2h 41h 2Fh 1Dh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=3 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x1E: /* C4h E2h 41h 2Fh 1Eh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=3 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x1F: /* C4h E2h 41h 2Fh 1Fh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=3 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x20: /* C4h E2h 41h 2Fh 20h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=4 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x21: /* C4h E2h 41h 2Fh 21h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=4 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x22: /* C4h E2h 41h 2Fh 22h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=4 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x23: /* C4h E2h 41h 2Fh 23h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=4 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x24: /* C4h E2h 41h 2Fh 24h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=4 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x25: /* C4h E2h 41h 2Fh 25h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=4 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x26: /* C4h E2h 41h 2Fh 26h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=4 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x27: /* C4h E2h 41h 2Fh 27h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=4 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x28: /* C4h E2h 41h 2Fh 28h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=5 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x29: /* C4h E2h 41h 2Fh 29h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=5 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x2A: /* C4h E2h 41h 2Fh 2Ah VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=5 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x2B: /* C4h E2h 41h 2Fh 2Bh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=5 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x2C: /* C4h E2h 41h 2Fh 2Ch VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=5 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x2D: /* C4h E2h 41h 2Fh 2Dh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=5 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x2E: /* C4h E2h 41h 2Fh 2Eh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=5 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x2F: /* C4h E2h 41h 2Fh 2Fh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=5 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x30: /* C4h E2h 41h 2Fh 30h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=6 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x31: /* C4h E2h 41h 2Fh 31h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=6 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x32: /* C4h E2h 41h 2Fh 32h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=6 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x33: /* C4h E2h 41h 2Fh 33h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=6 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x34: /* C4h E2h 41h 2Fh 34h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=6 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x35: /* C4h E2h 41h 2Fh 35h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=6 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x36: /* C4h E2h 41h 2Fh 36h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=6 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x37: /* C4h E2h 41h 2Fh 37h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=6 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x38: /* C4h E2h 41h 2Fh 38h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=7 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x39: /* C4h E2h 41h 2Fh 39h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=7 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x3A: /* C4h E2h 41h 2Fh 3Ah VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=7 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x3B: /* C4h E2h 41h 2Fh 3Bh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=7 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x3C: /* C4h E2h 41h 2Fh 3Ch VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=7 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x3D: /* C4h E2h 41h 2Fh 3Dh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=7 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x3E: /* C4h E2h 41h 2Fh 3Eh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=7 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x3F: /* C4h E2h 41h 2Fh 3Fh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=7 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x40: /* C4h E2h 41h 2Fh 40h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=0 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x41: /* C4h E2h 41h 2Fh 41h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=0 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x42: /* C4h E2h 41h 2Fh 42h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=0 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x43: /* C4h E2h 41h 2Fh 43h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=0 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x44: /* C4h E2h 41h 2Fh 44h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=0 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x45: /* C4h E2h 41h 2Fh 45h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=0 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x46: /* C4h E2h 41h 2Fh 46h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=0 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x47: /* C4h E2h 41h 2Fh 47h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=0 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x48: /* C4h E2h 41h 2Fh 48h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=1 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x49: /* C4h E2h 41h 2Fh 49h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=1 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x4A: /* C4h E2h 41h 2Fh 4Ah VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=1 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x4B: /* C4h E2h 41h 2Fh 4Bh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=1 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x4C: /* C4h E2h 41h 2Fh 4Ch VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=1 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x4D: /* C4h E2h 41h 2Fh 4Dh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=1 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x4E: /* C4h E2h 41h 2Fh 4Eh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=1 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x4F: /* C4h E2h 41h 2Fh 4Fh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=1 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x50: /* C4h E2h 41h 2Fh 50h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=2 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x51: /* C4h E2h 41h 2Fh 51h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=2 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x52: /* C4h E2h 41h 2Fh 52h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=2 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x53: /* C4h E2h 41h 2Fh 53h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=2 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x54: /* C4h E2h 41h 2Fh 54h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=2 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x55: /* C4h E2h 41h 2Fh 55h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=2 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x56: /* C4h E2h 41h 2Fh 56h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=2 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x57: /* C4h E2h 41h 2Fh 57h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=2 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x58: /* C4h E2h 41h 2Fh 58h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=3 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x59: /* C4h E2h 41h 2Fh 59h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=3 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x5A: /* C4h E2h 41h 2Fh 5Ah VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=3 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x5B: /* C4h E2h 41h 2Fh 5Bh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=3 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x5C: /* C4h E2h 41h 2Fh 5Ch VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=3 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x5D: /* C4h E2h 41h 2Fh 5Dh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=3 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x5E: /* C4h E2h 41h 2Fh 5Eh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=3 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x5F: /* C4h E2h 41h 2Fh 5Fh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=3 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x60: /* C4h E2h 41h 2Fh 60h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=4 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x61: /* C4h E2h 41h 2Fh 61h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=4 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x62: /* C4h E2h 41h 2Fh 62h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=4 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x63: /* C4h E2h 41h 2Fh 63h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=4 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x64: /* C4h E2h 41h 2Fh 64h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=4 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x65: /* C4h E2h 41h 2Fh 65h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=4 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x66: /* C4h E2h 41h 2Fh 66h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=4 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x67: /* C4h E2h 41h 2Fh 67h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=4 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x68: /* C4h E2h 41h 2Fh 68h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=5 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x69: /* C4h E2h 41h 2Fh 69h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=5 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x6A: /* C4h E2h 41h 2Fh 6Ah VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=5 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x6B: /* C4h E2h 41h 2Fh 6Bh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=5 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x6C: /* C4h E2h 41h 2Fh 6Ch VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=5 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x6D: /* C4h E2h 41h 2Fh 6Dh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=5 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x6E: /* C4h E2h 41h 2Fh 6Eh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=5 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x6F: /* C4h E2h 41h 2Fh 6Fh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=5 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x70: /* C4h E2h 41h 2Fh 70h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=6 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x71: /* C4h E2h 41h 2Fh 71h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=6 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x72: /* C4h E2h 41h 2Fh 72h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=6 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x73: /* C4h E2h 41h 2Fh 73h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=6 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x74: /* C4h E2h 41h 2Fh 74h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=6 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x75: /* C4h E2h 41h 2Fh 75h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=6 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x76: /* C4h E2h 41h 2Fh 76h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=6 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x77: /* C4h E2h 41h 2Fh 77h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=6 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x78: /* C4h E2h 41h 2Fh 78h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=7 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x79: /* C4h E2h 41h 2Fh 79h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=7 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x7A: /* C4h E2h 41h 2Fh 7Ah VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=7 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x7B: /* C4h E2h 41h 2Fh 7Bh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=7 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x7C: /* C4h E2h 41h 2Fh 7Ch VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=7 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x7D: /* C4h E2h 41h 2Fh 7Dh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=7 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x7E: /* C4h E2h 41h 2Fh 7Eh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=7 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x7F: /* C4h E2h 41h 2Fh 7Fh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=7 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x80: /* C4h E2h 41h 2Fh 80h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=0 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x81: /* C4h E2h 41h 2Fh 81h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=0 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x82: /* C4h E2h 41h 2Fh 82h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=0 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x83: /* C4h E2h 41h 2Fh 83h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=0 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x84: /* C4h E2h 41h 2Fh 84h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=0 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x85: /* C4h E2h 41h 2Fh 85h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=0 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x86: /* C4h E2h 41h 2Fh 86h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=0 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x87: /* C4h E2h 41h 2Fh 87h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=0 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x88: /* C4h E2h 41h 2Fh 88h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=1 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x89: /* C4h E2h 41h 2Fh 89h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=1 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x8A: /* C4h E2h 41h 2Fh 8Ah VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=1 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x8B: /* C4h E2h 41h 2Fh 8Bh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=1 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x8C: /* C4h E2h 41h 2Fh 8Ch VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=1 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x8D: /* C4h E2h 41h 2Fh 8Dh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=1 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x8E: /* C4h E2h 41h 2Fh 8Eh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=1 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x8F: /* C4h E2h 41h 2Fh 8Fh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=1 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x90: /* C4h E2h 41h 2Fh 90h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=2 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x91: /* C4h E2h 41h 2Fh 91h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=2 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x92: /* C4h E2h 41h 2Fh 92h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=2 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x93: /* C4h E2h 41h 2Fh 93h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=2 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x94: /* C4h E2h 41h 2Fh 94h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=2 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x95: /* C4h E2h 41h 2Fh 95h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=2 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x96: /* C4h E2h 41h 2Fh 96h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=2 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x97: /* C4h E2h 41h 2Fh 97h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=2 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x98: /* C4h E2h 41h 2Fh 98h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=3 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x99: /* C4h E2h 41h 2Fh 99h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=3 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x9A: /* C4h E2h 41h 2Fh 9Ah VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=3 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x9B: /* C4h E2h 41h 2Fh 9Bh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=3 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x9C: /* C4h E2h 41h 2Fh 9Ch VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=3 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x9D: /* C4h E2h 41h 2Fh 9Dh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=3 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x9E: /* C4h E2h 41h 2Fh 9Eh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=3 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x9F: /* C4h E2h 41h 2Fh 9Fh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=3 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xA0: /* C4h E2h 41h 2Fh A0h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=4 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xA1: /* C4h E2h 41h 2Fh A1h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=4 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xA2: /* C4h E2h 41h 2Fh A2h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=4 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xA3: /* C4h E2h 41h 2Fh A3h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=4 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xA4: /* C4h E2h 41h 2Fh A4h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=4 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xA5: /* C4h E2h 41h 2Fh A5h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=4 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xA6: /* C4h E2h 41h 2Fh A6h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=4 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xA7: /* C4h E2h 41h 2Fh A7h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=4 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xA8: /* C4h E2h 41h 2Fh A8h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=5 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xA9: /* C4h E2h 41h 2Fh A9h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=5 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xAA: /* C4h E2h 41h 2Fh AAh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=5 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xAB: /* C4h E2h 41h 2Fh ABh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=5 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xAC: /* C4h E2h 41h 2Fh ACh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=5 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xAD: /* C4h E2h 41h 2Fh ADh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=5 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xAE: /* C4h E2h 41h 2Fh AEh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=5 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xAF: /* C4h E2h 41h 2Fh AFh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=5 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xB0: /* C4h E2h 41h 2Fh B0h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=6 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xB1: /* C4h E2h 41h 2Fh B1h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=6 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xB2: /* C4h E2h 41h 2Fh B2h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=6 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xB3: /* C4h E2h 41h 2Fh B3h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=6 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xB4: /* C4h E2h 41h 2Fh B4h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=6 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xB5: /* C4h E2h 41h 2Fh B5h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=6 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xB6: /* C4h E2h 41h 2Fh B6h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=6 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xB7: /* C4h E2h 41h 2Fh B7h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=6 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xB8: /* C4h E2h 41h 2Fh B8h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=7 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xB9: /* C4h E2h 41h 2Fh B9h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=7 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xBA: /* C4h E2h 41h 2Fh BAh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=7 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xBB: /* C4h E2h 41h 2Fh BBh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=7 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xBC: /* C4h E2h 41h 2Fh BCh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=7 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xBD: /* C4h E2h 41h 2Fh BDh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=7 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xBE: /* C4h E2h 41h 2Fh BEh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=7 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xBF: /* C4h E2h 41h 2Fh BFh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=7 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VMASKMOVPD %s,XMM%u,XMM%u",IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""),vex.V,mrm.reg());
                                        break;
                                    /* opcode C4h E2h 41h 2Fh C0h  not defined */
                                    /* opcode C4h E2h 41h 2Fh C1h  not defined */
                                    /* opcode C4h E2h 41h 2Fh C2h  not defined */
                                    /* opcode C4h E2h 41h 2Fh C3h  not defined */
                                    /* opcode C4h E2h 41h 2Fh C4h  not defined */
                                    /* opcode C4h E2h 41h 2Fh C5h  not defined */
                                    /* opcode C4h E2h 41h 2Fh C6h  not defined */
                                    /* opcode C4h E2h 41h 2Fh C7h  not defined */
                                    /* opcode C4h E2h 41h 2Fh C8h  not defined */
                                    /* opcode C4h E2h 41h 2Fh C9h  not defined */
                                    /* opcode C4h E2h 41h 2Fh CAh  not defined */
                                    /* opcode C4h E2h 41h 2Fh CBh  not defined */
                                    /* opcode C4h E2h 41h 2Fh CCh  not defined */
                                    /* opcode C4h E2h 41h 2Fh CDh  not defined */
                                    /* opcode C4h E2h 41h 2Fh CEh  not defined */
                                    /* opcode C4h E2h 41h 2Fh CFh  not defined */
                                    /* opcode C4h E2h 41h 2Fh D0h  not defined */
                                    /* opcode C4h E2h 41h 2Fh D1h  not defined */
                                    /* opcode C4h E2h 41h 2Fh D2h  not defined */
                                    /* opcode C4h E2h 41h 2Fh D3h  not defined */
                                    /* opcode C4h E2h 41h 2Fh D4h  not defined */
                                    /* opcode C4h E2h 41h 2Fh D5h  not defined */
                                    /* opcode C4h E2h 41h 2Fh D6h  not defined */
                                    /* opcode C4h E2h 41h 2Fh D7h  not defined */
                                    /* opcode C4h E2h 41h 2Fh D8h  not defined */
                                    /* opcode C4h E2h 41h 2Fh D9h  not defined */
                                    /* opcode C4h E2h 41h 2Fh DAh  not defined */
                                    /* opcode C4h E2h 41h 2Fh DBh  not defined */
                                    /* opcode C4h E2h 41h 2Fh DCh  not defined */
                                    /* opcode C4h E2h 41h 2Fh DDh  not defined */
                                    /* opcode C4h E2h 41h 2Fh DEh  not defined */
                                    /* opcode C4h E2h 41h 2Fh DFh  not defined */
                                    /* opcode C4h E2h 41h 2Fh E0h  not defined */
                                    /* opcode C4h E2h 41h 2Fh E1h  not defined */
                                    /* opcode C4h E2h 41h 2Fh E2h  not defined */
                                    /* opcode C4h E2h 41h 2Fh E3h  not defined */
                                    /* opcode C4h E2h 41h 2Fh E4h  not defined */
                                    /* opcode C4h E2h 41h 2Fh E5h  not defined */
                                    /* opcode C4h E2h 41h 2Fh E6h  not defined */
                                    /* opcode C4h E2h 41h 2Fh E7h  not defined */
                                    /* opcode C4h E2h 41h 2Fh E8h  not defined */
                                    /* opcode C4h E2h 41h 2Fh E9h  not defined */
                                    /* opcode C4h E2h 41h 2Fh EAh  not defined */
                                    /* opcode C4h E2h 41h 2Fh EBh  not defined */
                                    /* opcode C4h E2h 41h 2Fh ECh  not defined */
                                    /* opcode C4h E2h 41h 2Fh EDh  not defined */
                                    /* opcode C4h E2h 41h 2Fh EEh  not defined */
                                    /* opcode C4h E2h 41h 2Fh EFh  not defined */
                                    /* opcode C4h E2h 41h 2Fh F0h  not defined */
                                    /* opcode C4h E2h 41h 2Fh F1h  not defined */
                                    /* opcode C4h E2h 41h 2Fh F2h  not defined */
                                    /* opcode C4h E2h 41h 2Fh F3h  not defined */
                                    /* opcode C4h E2h 41h 2Fh F4h  not defined */
                                    /* opcode C4h E2h 41h 2Fh F5h  not defined */
                                    /* opcode C4h E2h 41h 2Fh F6h  not defined */
                                    /* opcode C4h E2h 41h 2Fh F7h  not defined */
                                    /* opcode C4h E2h 41h 2Fh F8h  not defined */
                                    /* opcode C4h E2h 41h 2Fh F9h  not defined */
                                    /* opcode C4h E2h 41h 2Fh FAh  not defined */
                                    /* opcode C4h E2h 41h 2Fh FBh  not defined */
                                    /* opcode C4h E2h 41h 2Fh FCh  not defined */
                                    /* opcode C4h E2h 41h 2Fh FDh  not defined */
                                    /* opcode C4h E2h 41h 2Fh FEh  not defined */
                                    /* opcode C4h E2h 41h 2Fh FFh  not defined */
                                    default:
                                        goto _x86decode_illegal_opcode;
                                };
/* End of opcodes starting with C4h E2h 41h 2Fh */
                                break;
                            /* opcode C4h E2h 41h 30h  not defined */
                            /* opcode C4h E2h 41h 31h  not defined */
                            /* opcode C4h E2h 41h 32h  not defined */
                            /* opcode C4h E2h 41h 33h  not defined */
                            /* opcode C4h E2h 41h 34h  not defined */
                            /* opcode C4h E2h 41h 35h  not defined */
                            /* opcode C4h E2h 41h 36h  not defined */
                            /* opcode C4h E2h 41h 37h  not defined */
                            /* opcode C4h E2h 41h 38h  not defined */
                            /* opcode C4h E2h 41h 39h  not defined */
                            /* opcode C4h E2h 41h 3Ah  not defined */
                            /* opcode C4h E2h 41h 3Bh  not defined */
                            /* opcode C4h E2h 41h 3Ch  not defined */
                            /* opcode C4h E2h 41h 3Dh  not defined */
                            /* opcode C4h E2h 41h 3Eh  not defined */
                            /* opcode C4h E2h 41h 3Fh  not defined */
                            /* opcode C4h E2h 41h 40h  not defined */
                            /* opcode C4h E2h 41h 41h  not defined */
                            /* opcode C4h E2h 41h 42h  not defined */
                            /* opcode C4h E2h 41h 43h  not defined */
                            /* opcode C4h E2h 41h 44h  not defined */
                            /* opcode C4h E2h 41h 45h  not defined */
                            /* opcode C4h E2h 41h 46h  not defined */
                            /* opcode C4h E2h 41h 47h  not defined */
                            /* opcode C4h E2h 41h 48h  not defined */
                            /* opcode C4h E2h 41h 49h  not defined */
                            /* opcode C4h E2h 41h 4Ah  not defined */
                            /* opcode C4h E2h 41h 4Bh  not defined */
                            /* opcode C4h E2h 41h 4Ch  not defined */
                            /* opcode C4h E2h 41h 4Dh  not defined */
                            /* opcode C4h E2h 41h 4Eh  not defined */
                            /* opcode C4h E2h 41h 4Fh  not defined */
                            /* opcode C4h E2h 41h 50h  not defined */
                            /* opcode C4h E2h 41h 51h  not defined */
                            /* opcode C4h E2h 41h 52h  not defined */
                            /* opcode C4h E2h 41h 53h  not defined */
                            /* opcode C4h E2h 41h 54h  not defined */
                            /* opcode C4h E2h 41h 55h  not defined */
                            /* opcode C4h E2h 41h 56h  not defined */
                            /* opcode C4h E2h 41h 57h  not defined */
                            /* opcode C4h E2h 41h 58h  not defined */
                            /* opcode C4h E2h 41h 59h  not defined */
                            /* opcode C4h E2h 41h 5Ah  not defined */
                            /* opcode C4h E2h 41h 5Bh  not defined */
                            /* opcode C4h E2h 41h 5Ch  not defined */
                            /* opcode C4h E2h 41h 5Dh  not defined */
                            /* opcode C4h E2h 41h 5Eh  not defined */
                            /* opcode C4h E2h 41h 5Fh  not defined */
                            /* opcode C4h E2h 41h 60h  not defined */
                            /* opcode C4h E2h 41h 61h  not defined */
                            /* opcode C4h E2h 41h 62h  not defined */
                            /* opcode C4h E2h 41h 63h  not defined */
                            /* opcode C4h E2h 41h 64h  not defined */
                            /* opcode C4h E2h 41h 65h  not defined */
                            /* opcode C4h E2h 41h 66h  not defined */
                            /* opcode C4h E2h 41h 67h  not defined */
                            /* opcode C4h E2h 41h 68h  not defined */
                            /* opcode C4h E2h 41h 69h  not defined */
                            /* opcode C4h E2h 41h 6Ah  not defined */
                            /* opcode C4h E2h 41h 6Bh  not defined */
                            /* opcode C4h E2h 41h 6Ch  not defined */
                            /* opcode C4h E2h 41h 6Dh  not defined */
                            /* opcode C4h E2h 41h 6Eh  not defined */
                            /* opcode C4h E2h 41h 6Fh  not defined */
                            /* opcode C4h E2h 41h 70h  not defined */
                            /* opcode C4h E2h 41h 71h  not defined */
                            /* opcode C4h E2h 41h 72h  not defined */
                            /* opcode C4h E2h 41h 73h  not defined */
                            /* opcode C4h E2h 41h 74h  not defined */
                            /* opcode C4h E2h 41h 75h  not defined */
                            /* opcode C4h E2h 41h 76h  not defined */
                            /* opcode C4h E2h 41h 77h  not defined */
                            /* opcode C4h E2h 41h 78h  not defined */
                            /* opcode C4h E2h 41h 79h  not defined */
                            /* opcode C4h E2h 41h 7Ah  not defined */
                            /* opcode C4h E2h 41h 7Bh  not defined */
                            /* opcode C4h E2h 41h 7Ch  not defined */
                            /* opcode C4h E2h 41h 7Dh  not defined */
                            /* opcode C4h E2h 41h 7Eh  not defined */
                            /* opcode C4h E2h 41h 7Fh  not defined */
                            /* opcode C4h E2h 41h 80h  not defined */
                            /* opcode C4h E2h 41h 81h  not defined */
                            /* opcode C4h E2h 41h 82h  not defined */
                            /* opcode C4h E2h 41h 83h  not defined */
                            /* opcode C4h E2h 41h 84h  not defined */
                            /* opcode C4h E2h 41h 85h  not defined */
                            /* opcode C4h E2h 41h 86h  not defined */
                            /* opcode C4h E2h 41h 87h  not defined */
                            /* opcode C4h E2h 41h 88h  not defined */
                            /* opcode C4h E2h 41h 89h  not defined */
                            /* opcode C4h E2h 41h 8Ah  not defined */
                            /* opcode C4h E2h 41h 8Bh  not defined */
                            /* opcode C4h E2h 41h 8Ch  not defined */
                            /* opcode C4h E2h 41h 8Dh  not defined */
                            /* opcode C4h E2h 41h 8Eh  not defined */
                            /* opcode C4h E2h 41h 8Fh  not defined */
                            /* opcode C4h E2h 41h 90h  not defined */
                            /* opcode C4h E2h 41h 91h  not defined */
                            /* opcode C4h E2h 41h 92h  not defined */
                            /* opcode C4h E2h 41h 93h  not defined */
                            /* opcode C4h E2h 41h 94h  not defined */
                            /* opcode C4h E2h 41h 95h  not defined */
                            /* opcode C4h E2h 41h 96h  not defined */
                            /* opcode C4h E2h 41h 97h  not defined */
                            /* opcode C4h E2h 41h 98h  not defined */
                            /* opcode C4h E2h 41h 99h  not defined */
                            /* opcode C4h E2h 41h 9Ah  not defined */
                            /* opcode C4h E2h 41h 9Bh  not defined */
                            /* opcode C4h E2h 41h 9Ch  not defined */
                            /* opcode C4h E2h 41h 9Dh  not defined */
                            /* opcode C4h E2h 41h 9Eh  not defined */
                            /* opcode C4h E2h 41h 9Fh  not defined */
                            /* opcode C4h E2h 41h A0h  not defined */
                            /* opcode C4h E2h 41h A1h  not defined */
                            /* opcode C4h E2h 41h A2h  not defined */
                            /* opcode C4h E2h 41h A3h  not defined */
                            /* opcode C4h E2h 41h A4h  not defined */
                            /* opcode C4h E2h 41h A5h  not defined */
                            /* opcode C4h E2h 41h A6h  not defined */
                            /* opcode C4h E2h 41h A7h  not defined */
                            /* opcode C4h E2h 41h A8h  not defined */
                            /* opcode C4h E2h 41h A9h  not defined */
                            /* opcode C4h E2h 41h AAh  not defined */
                            /* opcode C4h E2h 41h ABh  not defined */
                            /* opcode C4h E2h 41h ACh  not defined */
                            /* opcode C4h E2h 41h ADh  not defined */
                            /* opcode C4h E2h 41h AEh  not defined */
                            /* opcode C4h E2h 41h AFh  not defined */
                            /* opcode C4h E2h 41h B0h  not defined */
                            /* opcode C4h E2h 41h B1h  not defined */
                            /* opcode C4h E2h 41h B2h  not defined */
                            /* opcode C4h E2h 41h B3h  not defined */
                            /* opcode C4h E2h 41h B4h  not defined */
                            /* opcode C4h E2h 41h B5h  not defined */
                            /* opcode C4h E2h 41h B6h  not defined */
                            /* opcode C4h E2h 41h B7h  not defined */
                            /* opcode C4h E2h 41h B8h  not defined */
                            /* opcode C4h E2h 41h B9h  not defined */
                            /* opcode C4h E2h 41h BAh  not defined */
                            /* opcode C4h E2h 41h BBh  not defined */
                            /* opcode C4h E2h 41h BCh  not defined */
                            /* opcode C4h E2h 41h BDh  not defined */
                            /* opcode C4h E2h 41h BEh  not defined */
                            /* opcode C4h E2h 41h BFh  not defined */
                            /* opcode C4h E2h 41h C0h  not defined */
                            /* opcode C4h E2h 41h C1h  not defined */
                            /* opcode C4h E2h 41h C2h  not defined */
                            /* opcode C4h E2h 41h C3h  not defined */
                            /* opcode C4h E2h 41h C4h  not defined */
                            /* opcode C4h E2h 41h C5h  not defined */
                            /* opcode C4h E2h 41h C6h  not defined */
                            /* opcode C4h E2h 41h C7h  not defined */
                            /* opcode C4h E2h 41h C8h  not defined */
                            /* opcode C4h E2h 41h C9h  not defined */
                            /* opcode C4h E2h 41h CAh  not defined */
                            /* opcode C4h E2h 41h CBh  not defined */
                            /* opcode C4h E2h 41h CCh  not defined */
                            /* opcode C4h E2h 41h CDh  not defined */
                            /* opcode C4h E2h 41h CEh  not defined */
                            /* opcode C4h E2h 41h CFh  not defined */
                            /* opcode C4h E2h 41h D0h  not defined */
                            /* opcode C4h E2h 41h D1h  not defined */
                            /* opcode C4h E2h 41h D2h  not defined */
                            /* opcode C4h E2h 41h D3h  not defined */
                            /* opcode C4h E2h 41h D4h  not defined */
                            /* opcode C4h E2h 41h D5h  not defined */
                            /* opcode C4h E2h 41h D6h  not defined */
                            /* opcode C4h E2h 41h D7h  not defined */
                            /* opcode C4h E2h 41h D8h  not defined */
                            /* opcode C4h E2h 41h D9h  not defined */
                            /* opcode C4h E2h 41h DAh  not defined */
                            /* opcode C4h E2h 41h DBh  not defined */
                            /* opcode C4h E2h 41h DCh  not defined */
                            /* opcode C4h E2h 41h DDh  not defined */
                            /* opcode C4h E2h 41h DEh  not defined */
                            /* opcode C4h E2h 41h DFh  not defined */
                            /* opcode C4h E2h 41h E0h  not defined */
                            /* opcode C4h E2h 41h E1h  not defined */
                            /* opcode C4h E2h 41h E2h  not defined */
                            /* opcode C4h E2h 41h E3h  not defined */
                            /* opcode C4h E2h 41h E4h  not defined */
                            /* opcode C4h E2h 41h E5h  not defined */
                            /* opcode C4h E2h 41h E6h  not defined */
                            /* opcode C4h E2h 41h E7h  not defined */
                            /* opcode C4h E2h 41h E8h  not defined */
                            /* opcode C4h E2h 41h E9h  not defined */
                            /* opcode C4h E2h 41h EAh  not defined */
                            /* opcode C4h E2h 41h EBh  not defined */
                            /* opcode C4h E2h 41h ECh  not defined */
                            /* opcode C4h E2h 41h EDh  not defined */
                            /* opcode C4h E2h 41h EEh  not defined */
                            /* opcode C4h E2h 41h EFh  not defined */
                            /* opcode C4h E2h 41h F0h  not defined */
                            /* opcode C4h E2h 41h F1h  not defined */
                            /* opcode C4h E2h 41h F2h  not defined */
                            /* opcode C4h E2h 41h F3h  not defined */
                            /* opcode C4h E2h 41h F4h  not defined */
                            /* opcode C4h E2h 41h F5h  not defined */
                            /* opcode C4h E2h 41h F6h  not defined */
                            /* opcode C4h E2h 41h F7h  not defined */
                            /* opcode C4h E2h 41h F8h  not defined */
                            /* opcode C4h E2h 41h F9h  not defined */
                            /* opcode C4h E2h 41h FAh  not defined */
                            /* opcode C4h E2h 41h FBh  not defined */
                            /* opcode C4h E2h 41h FCh  not defined */
                            /* opcode C4h E2h 41h FDh  not defined */
                            /* opcode C4h E2h 41h FEh  not defined */
                            /* opcode C4h E2h 41h FFh  not defined */
                            default:
                                goto _x86decode_illegal_opcode;
                        };
/* End of opcodes starting with C4h E2h 41h */
                        break;
                    /* opcode C4h E2h 42h  not defined */
                    /* opcode C4h E2h 43h  not defined */
                    /* opcode C4h E2h 44h  not defined */
                    case 0x45: /* C4h E2h 45h        spec:  */
                    case 0x4D: /* C4h E2h 4Dh        spec:  */
                    case 0x55: /* C4h E2h 55h        spec:  */
                    case 0x5D: /* C4h E2h 5Dh        spec:  */
                    case 0x65: /* C4h E2h 65h        spec:  */
                    case 0x6D: /* C4h E2h 6Dh        spec:  */
                    case 0x75: /* C4h E2h 75h        spec:  */
                        vex.V = ((~op) >> 3) & 7;
/* Opcodes starting with C4h E2h 45h */
                        op=IPFB();
                        _x86decode_begin_code32_addr32_opcode_parse_C4E245:
                        switch (op) {
                            /* opcode C4h E2h 45h 00h  not defined */
                            /* opcode C4h E2h 45h 01h  not defined */
                            /* opcode C4h E2h 45h 02h  not defined */
                            /* opcode C4h E2h 45h 03h  not defined */
                            /* opcode C4h E2h 45h 04h  not defined */
                            /* opcode C4h E2h 45h 05h  not defined */
                            /* opcode C4h E2h 45h 06h  not defined */
                            /* opcode C4h E2h 45h 07h  not defined */
                            /* opcode C4h E2h 45h 08h  not defined */
                            /* opcode C4h E2h 45h 09h  not defined */
                            /* opcode C4h E2h 45h 0Ah  not defined */
                            /* opcode C4h E2h 45h 0Bh  not defined */
                            case 0x0C: /* C4h E2h 45h 0Ch VPERMILPS avx(reg),avx(vsidx),avx(r/m)      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x0C mod/reg/rm */
                                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VPERMILPS YMM%u,YMM%u,%s",mrm.reg(),vex.V,IPDecPrint32(mrm,sib,disp,32,RC_AVXREG,""));
                                break;
                            case 0x0D: /* C4h E2h 45h 0Dh VPERMILPD avx(reg),avx(vsidx),avx(r/m)      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x0D mod/reg/rm */
                                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VPERMILPD YMM%u,YMM%u,%s",mrm.reg(),vex.V,IPDecPrint32(mrm,sib,disp,32,RC_AVXREG,""));
                                break;
                            /* opcode C4h E2h 45h 0Eh  not defined */
                            /* opcode C4h E2h 45h 0Fh  not defined */
                            /* opcode C4h E2h 45h 10h  not defined */
                            /* opcode C4h E2h 45h 11h  not defined */
                            /* opcode C4h E2h 45h 12h  not defined */
                            /* opcode C4h E2h 45h 13h  not defined */
                            /* opcode C4h E2h 45h 14h  not defined */
                            /* opcode C4h E2h 45h 15h  not defined */
                            /* opcode C4h E2h 45h 16h  not defined */
                            /* opcode C4h E2h 45h 17h  not defined */
                            /* opcode C4h E2h 45h 18h  not defined */
                            /* opcode C4h E2h 45h 19h  not defined */
                            /* opcode C4h E2h 45h 1Ah  not defined */
                            /* opcode C4h E2h 45h 1Bh  not defined */
                            /* opcode C4h E2h 45h 1Ch  not defined */
                            /* opcode C4h E2h 45h 1Dh  not defined */
                            /* opcode C4h E2h 45h 1Eh  not defined */
                            /* opcode C4h E2h 45h 1Fh  not defined */
                            /* opcode C4h E2h 45h 20h  not defined */
                            /* opcode C4h E2h 45h 21h  not defined */
                            /* opcode C4h E2h 45h 22h  not defined */
                            /* opcode C4h E2h 45h 23h  not defined */
                            /* opcode C4h E2h 45h 24h  not defined */
                            /* opcode C4h E2h 45h 25h  not defined */
                            /* opcode C4h E2h 45h 26h  not defined */
                            /* opcode C4h E2h 45h 27h  not defined */
                            /* opcode C4h E2h 45h 28h  not defined */
                            /* opcode C4h E2h 45h 29h  not defined */
                            /* opcode C4h E2h 45h 2Ah  not defined */
                            /* opcode C4h E2h 45h 2Bh  not defined */
                            case 0x2C: /* C4h E2h 45h 2Ch        spec:  */
                                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                                _x86decode_begin_code32_addr32_opcode_parse_C4E2452C:
/* Opcodes starting with C4h E2h 45h 2Ch */
                                switch (mrm.byte) {
                                    case 0x00: /* C4h E2h 45h 2Ch 00h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=0 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x01: /* C4h E2h 45h 2Ch 01h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=0 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x02: /* C4h E2h 45h 2Ch 02h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=0 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x03: /* C4h E2h 45h 2Ch 03h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=0 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x04: /* C4h E2h 45h 2Ch 04h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=0 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x05: /* C4h E2h 45h 2Ch 05h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=0 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x06: /* C4h E2h 45h 2Ch 06h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=0 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x07: /* C4h E2h 45h 2Ch 07h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=0 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x08: /* C4h E2h 45h 2Ch 08h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=1 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x09: /* C4h E2h 45h 2Ch 09h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=1 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x0A: /* C4h E2h 45h 2Ch 0Ah VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=1 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x0B: /* C4h E2h 45h 2Ch 0Bh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=1 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x0C: /* C4h E2h 45h 2Ch 0Ch VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=1 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x0D: /* C4h E2h 45h 2Ch 0Dh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=1 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x0E: /* C4h E2h 45h 2Ch 0Eh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=1 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x0F: /* C4h E2h 45h 2Ch 0Fh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=1 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x10: /* C4h E2h 45h 2Ch 10h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=2 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x11: /* C4h E2h 45h 2Ch 11h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=2 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x12: /* C4h E2h 45h 2Ch 12h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=2 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x13: /* C4h E2h 45h 2Ch 13h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=2 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x14: /* C4h E2h 45h 2Ch 14h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=2 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x15: /* C4h E2h 45h 2Ch 15h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=2 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x16: /* C4h E2h 45h 2Ch 16h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=2 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x17: /* C4h E2h 45h 2Ch 17h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=2 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x18: /* C4h E2h 45h 2Ch 18h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=3 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x19: /* C4h E2h 45h 2Ch 19h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=3 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x1A: /* C4h E2h 45h 2Ch 1Ah VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=3 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x1B: /* C4h E2h 45h 2Ch 1Bh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=3 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x1C: /* C4h E2h 45h 2Ch 1Ch VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=3 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x1D: /* C4h E2h 45h 2Ch 1Dh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=3 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x1E: /* C4h E2h 45h 2Ch 1Eh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=3 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x1F: /* C4h E2h 45h 2Ch 1Fh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=3 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x20: /* C4h E2h 45h 2Ch 20h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=4 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x21: /* C4h E2h 45h 2Ch 21h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=4 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x22: /* C4h E2h 45h 2Ch 22h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=4 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x23: /* C4h E2h 45h 2Ch 23h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=4 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x24: /* C4h E2h 45h 2Ch 24h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=4 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x25: /* C4h E2h 45h 2Ch 25h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=4 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x26: /* C4h E2h 45h 2Ch 26h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=4 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x27: /* C4h E2h 45h 2Ch 27h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=4 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x28: /* C4h E2h 45h 2Ch 28h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=5 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x29: /* C4h E2h 45h 2Ch 29h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=5 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x2A: /* C4h E2h 45h 2Ch 2Ah VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=5 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x2B: /* C4h E2h 45h 2Ch 2Bh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=5 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x2C: /* C4h E2h 45h 2Ch 2Ch VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=5 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x2D: /* C4h E2h 45h 2Ch 2Dh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=5 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x2E: /* C4h E2h 45h 2Ch 2Eh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=5 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x2F: /* C4h E2h 45h 2Ch 2Fh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=5 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x30: /* C4h E2h 45h 2Ch 30h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=6 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x31: /* C4h E2h 45h 2Ch 31h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=6 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x32: /* C4h E2h 45h 2Ch 32h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=6 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x33: /* C4h E2h 45h 2Ch 33h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=6 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x34: /* C4h E2h 45h 2Ch 34h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=6 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x35: /* C4h E2h 45h 2Ch 35h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=6 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x36: /* C4h E2h 45h 2Ch 36h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=6 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x37: /* C4h E2h 45h 2Ch 37h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=6 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x38: /* C4h E2h 45h 2Ch 38h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=7 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x39: /* C4h E2h 45h 2Ch 39h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=7 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x3A: /* C4h E2h 45h 2Ch 3Ah VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=7 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x3B: /* C4h E2h 45h 2Ch 3Bh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=7 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x3C: /* C4h E2h 45h 2Ch 3Ch VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=7 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x3D: /* C4h E2h 45h 2Ch 3Dh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=7 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x3E: /* C4h E2h 45h 2Ch 3Eh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=7 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x3F: /* C4h E2h 45h 2Ch 3Fh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=7 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x40: /* C4h E2h 45h 2Ch 40h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=0 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x41: /* C4h E2h 45h 2Ch 41h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=0 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x42: /* C4h E2h 45h 2Ch 42h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=0 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x43: /* C4h E2h 45h 2Ch 43h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=0 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x44: /* C4h E2h 45h 2Ch 44h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=0 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x45: /* C4h E2h 45h 2Ch 45h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=0 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x46: /* C4h E2h 45h 2Ch 46h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=0 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x47: /* C4h E2h 45h 2Ch 47h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=0 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x48: /* C4h E2h 45h 2Ch 48h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=1 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x49: /* C4h E2h 45h 2Ch 49h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=1 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x4A: /* C4h E2h 45h 2Ch 4Ah VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=1 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x4B: /* C4h E2h 45h 2Ch 4Bh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=1 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x4C: /* C4h E2h 45h 2Ch 4Ch VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=1 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x4D: /* C4h E2h 45h 2Ch 4Dh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=1 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x4E: /* C4h E2h 45h 2Ch 4Eh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=1 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x4F: /* C4h E2h 45h 2Ch 4Fh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=1 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x50: /* C4h E2h 45h 2Ch 50h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=2 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x51: /* C4h E2h 45h 2Ch 51h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=2 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x52: /* C4h E2h 45h 2Ch 52h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=2 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x53: /* C4h E2h 45h 2Ch 53h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=2 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x54: /* C4h E2h 45h 2Ch 54h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=2 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x55: /* C4h E2h 45h 2Ch 55h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=2 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x56: /* C4h E2h 45h 2Ch 56h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=2 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x57: /* C4h E2h 45h 2Ch 57h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=2 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x58: /* C4h E2h 45h 2Ch 58h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=3 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x59: /* C4h E2h 45h 2Ch 59h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=3 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x5A: /* C4h E2h 45h 2Ch 5Ah VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=3 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x5B: /* C4h E2h 45h 2Ch 5Bh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=3 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x5C: /* C4h E2h 45h 2Ch 5Ch VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=3 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x5D: /* C4h E2h 45h 2Ch 5Dh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=3 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x5E: /* C4h E2h 45h 2Ch 5Eh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=3 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x5F: /* C4h E2h 45h 2Ch 5Fh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=3 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x60: /* C4h E2h 45h 2Ch 60h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=4 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x61: /* C4h E2h 45h 2Ch 61h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=4 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x62: /* C4h E2h 45h 2Ch 62h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=4 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x63: /* C4h E2h 45h 2Ch 63h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=4 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x64: /* C4h E2h 45h 2Ch 64h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=4 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x65: /* C4h E2h 45h 2Ch 65h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=4 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x66: /* C4h E2h 45h 2Ch 66h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=4 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x67: /* C4h E2h 45h 2Ch 67h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=4 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x68: /* C4h E2h 45h 2Ch 68h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=5 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x69: /* C4h E2h 45h 2Ch 69h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=5 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x6A: /* C4h E2h 45h 2Ch 6Ah VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=5 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x6B: /* C4h E2h 45h 2Ch 6Bh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=5 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x6C: /* C4h E2h 45h 2Ch 6Ch VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=5 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x6D: /* C4h E2h 45h 2Ch 6Dh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=5 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x6E: /* C4h E2h 45h 2Ch 6Eh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=5 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x6F: /* C4h E2h 45h 2Ch 6Fh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=5 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x70: /* C4h E2h 45h 2Ch 70h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=6 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x71: /* C4h E2h 45h 2Ch 71h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=6 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x72: /* C4h E2h 45h 2Ch 72h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=6 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x73: /* C4h E2h 45h 2Ch 73h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=6 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x74: /* C4h E2h 45h 2Ch 74h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=6 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x75: /* C4h E2h 45h 2Ch 75h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=6 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x76: /* C4h E2h 45h 2Ch 76h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=6 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x77: /* C4h E2h 45h 2Ch 77h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=6 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x78: /* C4h E2h 45h 2Ch 78h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=7 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x79: /* C4h E2h 45h 2Ch 79h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=7 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x7A: /* C4h E2h 45h 2Ch 7Ah VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=7 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x7B: /* C4h E2h 45h 2Ch 7Bh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=7 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x7C: /* C4h E2h 45h 2Ch 7Ch VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=7 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x7D: /* C4h E2h 45h 2Ch 7Dh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=7 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x7E: /* C4h E2h 45h 2Ch 7Eh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=7 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x7F: /* C4h E2h 45h 2Ch 7Fh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=7 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x80: /* C4h E2h 45h 2Ch 80h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=0 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x81: /* C4h E2h 45h 2Ch 81h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=0 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x82: /* C4h E2h 45h 2Ch 82h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=0 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x83: /* C4h E2h 45h 2Ch 83h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=0 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x84: /* C4h E2h 45h 2Ch 84h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=0 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x85: /* C4h E2h 45h 2Ch 85h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=0 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x86: /* C4h E2h 45h 2Ch 86h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=0 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x87: /* C4h E2h 45h 2Ch 87h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=0 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x88: /* C4h E2h 45h 2Ch 88h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=1 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x89: /* C4h E2h 45h 2Ch 89h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=1 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x8A: /* C4h E2h 45h 2Ch 8Ah VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=1 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x8B: /* C4h E2h 45h 2Ch 8Bh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=1 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x8C: /* C4h E2h 45h 2Ch 8Ch VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=1 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x8D: /* C4h E2h 45h 2Ch 8Dh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=1 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x8E: /* C4h E2h 45h 2Ch 8Eh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=1 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x8F: /* C4h E2h 45h 2Ch 8Fh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=1 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x90: /* C4h E2h 45h 2Ch 90h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=2 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x91: /* C4h E2h 45h 2Ch 91h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=2 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x92: /* C4h E2h 45h 2Ch 92h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=2 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x93: /* C4h E2h 45h 2Ch 93h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=2 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x94: /* C4h E2h 45h 2Ch 94h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=2 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x95: /* C4h E2h 45h 2Ch 95h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=2 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x96: /* C4h E2h 45h 2Ch 96h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=2 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x97: /* C4h E2h 45h 2Ch 97h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=2 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x98: /* C4h E2h 45h 2Ch 98h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=3 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x99: /* C4h E2h 45h 2Ch 99h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=3 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x9A: /* C4h E2h 45h 2Ch 9Ah VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=3 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x9B: /* C4h E2h 45h 2Ch 9Bh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=3 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x9C: /* C4h E2h 45h 2Ch 9Ch VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=3 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x9D: /* C4h E2h 45h 2Ch 9Dh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=3 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x9E: /* C4h E2h 45h 2Ch 9Eh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=3 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x9F: /* C4h E2h 45h 2Ch 9Fh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=3 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xA0: /* C4h E2h 45h 2Ch A0h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=4 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xA1: /* C4h E2h 45h 2Ch A1h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=4 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xA2: /* C4h E2h 45h 2Ch A2h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=4 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xA3: /* C4h E2h 45h 2Ch A3h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=4 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xA4: /* C4h E2h 45h 2Ch A4h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=4 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xA5: /* C4h E2h 45h 2Ch A5h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=4 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xA6: /* C4h E2h 45h 2Ch A6h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=4 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xA7: /* C4h E2h 45h 2Ch A7h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=4 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xA8: /* C4h E2h 45h 2Ch A8h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=5 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xA9: /* C4h E2h 45h 2Ch A9h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=5 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xAA: /* C4h E2h 45h 2Ch AAh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=5 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xAB: /* C4h E2h 45h 2Ch ABh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=5 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xAC: /* C4h E2h 45h 2Ch ACh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=5 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xAD: /* C4h E2h 45h 2Ch ADh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=5 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xAE: /* C4h E2h 45h 2Ch AEh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=5 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xAF: /* C4h E2h 45h 2Ch AFh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=5 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xB0: /* C4h E2h 45h 2Ch B0h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=6 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xB1: /* C4h E2h 45h 2Ch B1h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=6 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xB2: /* C4h E2h 45h 2Ch B2h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=6 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xB3: /* C4h E2h 45h 2Ch B3h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=6 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xB4: /* C4h E2h 45h 2Ch B4h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=6 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xB5: /* C4h E2h 45h 2Ch B5h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=6 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xB6: /* C4h E2h 45h 2Ch B6h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=6 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xB7: /* C4h E2h 45h 2Ch B7h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=6 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xB8: /* C4h E2h 45h 2Ch B8h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=7 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xB9: /* C4h E2h 45h 2Ch B9h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=7 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xBA: /* C4h E2h 45h 2Ch BAh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=7 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xBB: /* C4h E2h 45h 2Ch BBh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=7 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xBC: /* C4h E2h 45h 2Ch BCh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=7 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xBD: /* C4h E2h 45h 2Ch BDh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=7 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xBE: /* C4h E2h 45h 2Ch BEh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=7 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xBF: /* C4h E2h 45h 2Ch BFh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=7 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VMASKMOVPS YMM%u,YMM%u,%s",mrm.reg(),vex.V,IPDecPrint32(mrm,sib,disp,32,RC_AVXREG,""));
                                        break;
                                    /* opcode C4h E2h 45h 2Ch C0h  not defined */
                                    /* opcode C4h E2h 45h 2Ch C1h  not defined */
                                    /* opcode C4h E2h 45h 2Ch C2h  not defined */
                                    /* opcode C4h E2h 45h 2Ch C3h  not defined */
                                    /* opcode C4h E2h 45h 2Ch C4h  not defined */
                                    /* opcode C4h E2h 45h 2Ch C5h  not defined */
                                    /* opcode C4h E2h 45h 2Ch C6h  not defined */
                                    /* opcode C4h E2h 45h 2Ch C7h  not defined */
                                    /* opcode C4h E2h 45h 2Ch C8h  not defined */
                                    /* opcode C4h E2h 45h 2Ch C9h  not defined */
                                    /* opcode C4h E2h 45h 2Ch CAh  not defined */
                                    /* opcode C4h E2h 45h 2Ch CBh  not defined */
                                    /* opcode C4h E2h 45h 2Ch CCh  not defined */
                                    /* opcode C4h E2h 45h 2Ch CDh  not defined */
                                    /* opcode C4h E2h 45h 2Ch CEh  not defined */
                                    /* opcode C4h E2h 45h 2Ch CFh  not defined */
                                    /* opcode C4h E2h 45h 2Ch D0h  not defined */
                                    /* opcode C4h E2h 45h 2Ch D1h  not defined */
                                    /* opcode C4h E2h 45h 2Ch D2h  not defined */
                                    /* opcode C4h E2h 45h 2Ch D3h  not defined */
                                    /* opcode C4h E2h 45h 2Ch D4h  not defined */
                                    /* opcode C4h E2h 45h 2Ch D5h  not defined */
                                    /* opcode C4h E2h 45h 2Ch D6h  not defined */
                                    /* opcode C4h E2h 45h 2Ch D7h  not defined */
                                    /* opcode C4h E2h 45h 2Ch D8h  not defined */
                                    /* opcode C4h E2h 45h 2Ch D9h  not defined */
                                    /* opcode C4h E2h 45h 2Ch DAh  not defined */
                                    /* opcode C4h E2h 45h 2Ch DBh  not defined */
                                    /* opcode C4h E2h 45h 2Ch DCh  not defined */
                                    /* opcode C4h E2h 45h 2Ch DDh  not defined */
                                    /* opcode C4h E2h 45h 2Ch DEh  not defined */
                                    /* opcode C4h E2h 45h 2Ch DFh  not defined */
                                    /* opcode C4h E2h 45h 2Ch E0h  not defined */
                                    /* opcode C4h E2h 45h 2Ch E1h  not defined */
                                    /* opcode C4h E2h 45h 2Ch E2h  not defined */
                                    /* opcode C4h E2h 45h 2Ch E3h  not defined */
                                    /* opcode C4h E2h 45h 2Ch E4h  not defined */
                                    /* opcode C4h E2h 45h 2Ch E5h  not defined */
                                    /* opcode C4h E2h 45h 2Ch E6h  not defined */
                                    /* opcode C4h E2h 45h 2Ch E7h  not defined */
                                    /* opcode C4h E2h 45h 2Ch E8h  not defined */
                                    /* opcode C4h E2h 45h 2Ch E9h  not defined */
                                    /* opcode C4h E2h 45h 2Ch EAh  not defined */
                                    /* opcode C4h E2h 45h 2Ch EBh  not defined */
                                    /* opcode C4h E2h 45h 2Ch ECh  not defined */
                                    /* opcode C4h E2h 45h 2Ch EDh  not defined */
                                    /* opcode C4h E2h 45h 2Ch EEh  not defined */
                                    /* opcode C4h E2h 45h 2Ch EFh  not defined */
                                    /* opcode C4h E2h 45h 2Ch F0h  not defined */
                                    /* opcode C4h E2h 45h 2Ch F1h  not defined */
                                    /* opcode C4h E2h 45h 2Ch F2h  not defined */
                                    /* opcode C4h E2h 45h 2Ch F3h  not defined */
                                    /* opcode C4h E2h 45h 2Ch F4h  not defined */
                                    /* opcode C4h E2h 45h 2Ch F5h  not defined */
                                    /* opcode C4h E2h 45h 2Ch F6h  not defined */
                                    /* opcode C4h E2h 45h 2Ch F7h  not defined */
                                    /* opcode C4h E2h 45h 2Ch F8h  not defined */
                                    /* opcode C4h E2h 45h 2Ch F9h  not defined */
                                    /* opcode C4h E2h 45h 2Ch FAh  not defined */
                                    /* opcode C4h E2h 45h 2Ch FBh  not defined */
                                    /* opcode C4h E2h 45h 2Ch FCh  not defined */
                                    /* opcode C4h E2h 45h 2Ch FDh  not defined */
                                    /* opcode C4h E2h 45h 2Ch FEh  not defined */
                                    /* opcode C4h E2h 45h 2Ch FFh  not defined */
                                    default:
                                        goto _x86decode_illegal_opcode;
                                };
/* End of opcodes starting with C4h E2h 45h 2Ch */
                                break;
                            case 0x2D: /* C4h E2h 45h 2Dh        spec:  */
                                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                                _x86decode_begin_code32_addr32_opcode_parse_C4E2452D:
/* Opcodes starting with C4h E2h 45h 2Dh */
                                switch (mrm.byte) {
                                    case 0x00: /* C4h E2h 45h 2Dh 00h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=0 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x01: /* C4h E2h 45h 2Dh 01h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=0 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x02: /* C4h E2h 45h 2Dh 02h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=0 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x03: /* C4h E2h 45h 2Dh 03h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=0 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x04: /* C4h E2h 45h 2Dh 04h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=0 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x05: /* C4h E2h 45h 2Dh 05h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=0 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x06: /* C4h E2h 45h 2Dh 06h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=0 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x07: /* C4h E2h 45h 2Dh 07h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=0 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x08: /* C4h E2h 45h 2Dh 08h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=1 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x09: /* C4h E2h 45h 2Dh 09h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=1 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x0A: /* C4h E2h 45h 2Dh 0Ah VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=1 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x0B: /* C4h E2h 45h 2Dh 0Bh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=1 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x0C: /* C4h E2h 45h 2Dh 0Ch VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=1 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x0D: /* C4h E2h 45h 2Dh 0Dh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=1 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x0E: /* C4h E2h 45h 2Dh 0Eh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=1 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x0F: /* C4h E2h 45h 2Dh 0Fh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=1 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x10: /* C4h E2h 45h 2Dh 10h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=2 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x11: /* C4h E2h 45h 2Dh 11h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=2 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x12: /* C4h E2h 45h 2Dh 12h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=2 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x13: /* C4h E2h 45h 2Dh 13h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=2 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x14: /* C4h E2h 45h 2Dh 14h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=2 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x15: /* C4h E2h 45h 2Dh 15h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=2 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x16: /* C4h E2h 45h 2Dh 16h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=2 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x17: /* C4h E2h 45h 2Dh 17h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=2 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x18: /* C4h E2h 45h 2Dh 18h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=3 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x19: /* C4h E2h 45h 2Dh 19h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=3 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x1A: /* C4h E2h 45h 2Dh 1Ah VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=3 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x1B: /* C4h E2h 45h 2Dh 1Bh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=3 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x1C: /* C4h E2h 45h 2Dh 1Ch VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=3 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x1D: /* C4h E2h 45h 2Dh 1Dh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=3 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x1E: /* C4h E2h 45h 2Dh 1Eh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=3 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x1F: /* C4h E2h 45h 2Dh 1Fh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=3 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x20: /* C4h E2h 45h 2Dh 20h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=4 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x21: /* C4h E2h 45h 2Dh 21h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=4 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x22: /* C4h E2h 45h 2Dh 22h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=4 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x23: /* C4h E2h 45h 2Dh 23h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=4 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x24: /* C4h E2h 45h 2Dh 24h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=4 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x25: /* C4h E2h 45h 2Dh 25h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=4 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x26: /* C4h E2h 45h 2Dh 26h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=4 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x27: /* C4h E2h 45h 2Dh 27h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=4 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x28: /* C4h E2h 45h 2Dh 28h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=5 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x29: /* C4h E2h 45h 2Dh 29h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=5 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x2A: /* C4h E2h 45h 2Dh 2Ah VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=5 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x2B: /* C4h E2h 45h 2Dh 2Bh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=5 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x2C: /* C4h E2h 45h 2Dh 2Ch VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=5 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x2D: /* C4h E2h 45h 2Dh 2Dh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=5 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x2E: /* C4h E2h 45h 2Dh 2Eh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=5 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x2F: /* C4h E2h 45h 2Dh 2Fh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=5 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x30: /* C4h E2h 45h 2Dh 30h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=6 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x31: /* C4h E2h 45h 2Dh 31h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=6 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x32: /* C4h E2h 45h 2Dh 32h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=6 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x33: /* C4h E2h 45h 2Dh 33h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=6 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x34: /* C4h E2h 45h 2Dh 34h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=6 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x35: /* C4h E2h 45h 2Dh 35h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=6 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x36: /* C4h E2h 45h 2Dh 36h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=6 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x37: /* C4h E2h 45h 2Dh 37h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=6 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x38: /* C4h E2h 45h 2Dh 38h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=7 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x39: /* C4h E2h 45h 2Dh 39h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=7 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x3A: /* C4h E2h 45h 2Dh 3Ah VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=7 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x3B: /* C4h E2h 45h 2Dh 3Bh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=7 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x3C: /* C4h E2h 45h 2Dh 3Ch VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=7 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x3D: /* C4h E2h 45h 2Dh 3Dh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=7 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x3E: /* C4h E2h 45h 2Dh 3Eh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=7 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x3F: /* C4h E2h 45h 2Dh 3Fh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=7 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x40: /* C4h E2h 45h 2Dh 40h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=0 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x41: /* C4h E2h 45h 2Dh 41h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=0 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x42: /* C4h E2h 45h 2Dh 42h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=0 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x43: /* C4h E2h 45h 2Dh 43h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=0 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x44: /* C4h E2h 45h 2Dh 44h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=0 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x45: /* C4h E2h 45h 2Dh 45h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=0 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x46: /* C4h E2h 45h 2Dh 46h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=0 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x47: /* C4h E2h 45h 2Dh 47h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=0 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x48: /* C4h E2h 45h 2Dh 48h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=1 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x49: /* C4h E2h 45h 2Dh 49h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=1 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x4A: /* C4h E2h 45h 2Dh 4Ah VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=1 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x4B: /* C4h E2h 45h 2Dh 4Bh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=1 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x4C: /* C4h E2h 45h 2Dh 4Ch VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=1 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x4D: /* C4h E2h 45h 2Dh 4Dh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=1 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x4E: /* C4h E2h 45h 2Dh 4Eh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=1 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x4F: /* C4h E2h 45h 2Dh 4Fh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=1 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x50: /* C4h E2h 45h 2Dh 50h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=2 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x51: /* C4h E2h 45h 2Dh 51h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=2 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x52: /* C4h E2h 45h 2Dh 52h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=2 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x53: /* C4h E2h 45h 2Dh 53h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=2 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x54: /* C4h E2h 45h 2Dh 54h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=2 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x55: /* C4h E2h 45h 2Dh 55h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=2 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x56: /* C4h E2h 45h 2Dh 56h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=2 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x57: /* C4h E2h 45h 2Dh 57h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=2 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x58: /* C4h E2h 45h 2Dh 58h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=3 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x59: /* C4h E2h 45h 2Dh 59h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=3 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x5A: /* C4h E2h 45h 2Dh 5Ah VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=3 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x5B: /* C4h E2h 45h 2Dh 5Bh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=3 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x5C: /* C4h E2h 45h 2Dh 5Ch VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=3 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x5D: /* C4h E2h 45h 2Dh 5Dh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=3 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x5E: /* C4h E2h 45h 2Dh 5Eh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=3 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x5F: /* C4h E2h 45h 2Dh 5Fh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=3 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x60: /* C4h E2h 45h 2Dh 60h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=4 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x61: /* C4h E2h 45h 2Dh 61h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=4 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x62: /* C4h E2h 45h 2Dh 62h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=4 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x63: /* C4h E2h 45h 2Dh 63h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=4 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x64: /* C4h E2h 45h 2Dh 64h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=4 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x65: /* C4h E2h 45h 2Dh 65h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=4 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x66: /* C4h E2h 45h 2Dh 66h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=4 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x67: /* C4h E2h 45h 2Dh 67h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=4 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x68: /* C4h E2h 45h 2Dh 68h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=5 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x69: /* C4h E2h 45h 2Dh 69h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=5 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x6A: /* C4h E2h 45h 2Dh 6Ah VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=5 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x6B: /* C4h E2h 45h 2Dh 6Bh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=5 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x6C: /* C4h E2h 45h 2Dh 6Ch VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=5 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x6D: /* C4h E2h 45h 2Dh 6Dh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=5 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x6E: /* C4h E2h 45h 2Dh 6Eh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=5 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x6F: /* C4h E2h 45h 2Dh 6Fh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=5 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x70: /* C4h E2h 45h 2Dh 70h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=6 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x71: /* C4h E2h 45h 2Dh 71h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=6 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x72: /* C4h E2h 45h 2Dh 72h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=6 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x73: /* C4h E2h 45h 2Dh 73h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=6 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x74: /* C4h E2h 45h 2Dh 74h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=6 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x75: /* C4h E2h 45h 2Dh 75h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=6 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x76: /* C4h E2h 45h 2Dh 76h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=6 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x77: /* C4h E2h 45h 2Dh 77h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=6 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x78: /* C4h E2h 45h 2Dh 78h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=7 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x79: /* C4h E2h 45h 2Dh 79h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=7 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x7A: /* C4h E2h 45h 2Dh 7Ah VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=7 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x7B: /* C4h E2h 45h 2Dh 7Bh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=7 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x7C: /* C4h E2h 45h 2Dh 7Ch VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=7 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x7D: /* C4h E2h 45h 2Dh 7Dh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=7 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x7E: /* C4h E2h 45h 2Dh 7Eh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=7 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x7F: /* C4h E2h 45h 2Dh 7Fh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=7 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x80: /* C4h E2h 45h 2Dh 80h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=0 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x81: /* C4h E2h 45h 2Dh 81h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=0 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x82: /* C4h E2h 45h 2Dh 82h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=0 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x83: /* C4h E2h 45h 2Dh 83h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=0 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x84: /* C4h E2h 45h 2Dh 84h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=0 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x85: /* C4h E2h 45h 2Dh 85h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=0 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x86: /* C4h E2h 45h 2Dh 86h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=0 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x87: /* C4h E2h 45h 2Dh 87h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=0 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x88: /* C4h E2h 45h 2Dh 88h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=1 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x89: /* C4h E2h 45h 2Dh 89h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=1 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x8A: /* C4h E2h 45h 2Dh 8Ah VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=1 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x8B: /* C4h E2h 45h 2Dh 8Bh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=1 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x8C: /* C4h E2h 45h 2Dh 8Ch VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=1 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x8D: /* C4h E2h 45h 2Dh 8Dh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=1 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x8E: /* C4h E2h 45h 2Dh 8Eh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=1 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x8F: /* C4h E2h 45h 2Dh 8Fh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=1 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x90: /* C4h E2h 45h 2Dh 90h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=2 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x91: /* C4h E2h 45h 2Dh 91h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=2 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x92: /* C4h E2h 45h 2Dh 92h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=2 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x93: /* C4h E2h 45h 2Dh 93h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=2 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x94: /* C4h E2h 45h 2Dh 94h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=2 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x95: /* C4h E2h 45h 2Dh 95h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=2 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x96: /* C4h E2h 45h 2Dh 96h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=2 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x97: /* C4h E2h 45h 2Dh 97h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=2 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x98: /* C4h E2h 45h 2Dh 98h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=3 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x99: /* C4h E2h 45h 2Dh 99h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=3 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x9A: /* C4h E2h 45h 2Dh 9Ah VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=3 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x9B: /* C4h E2h 45h 2Dh 9Bh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=3 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x9C: /* C4h E2h 45h 2Dh 9Ch VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=3 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x9D: /* C4h E2h 45h 2Dh 9Dh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=3 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x9E: /* C4h E2h 45h 2Dh 9Eh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=3 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x9F: /* C4h E2h 45h 2Dh 9Fh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=3 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xA0: /* C4h E2h 45h 2Dh A0h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=4 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xA1: /* C4h E2h 45h 2Dh A1h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=4 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xA2: /* C4h E2h 45h 2Dh A2h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=4 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xA3: /* C4h E2h 45h 2Dh A3h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=4 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xA4: /* C4h E2h 45h 2Dh A4h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=4 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xA5: /* C4h E2h 45h 2Dh A5h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=4 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xA6: /* C4h E2h 45h 2Dh A6h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=4 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xA7: /* C4h E2h 45h 2Dh A7h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=4 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xA8: /* C4h E2h 45h 2Dh A8h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=5 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xA9: /* C4h E2h 45h 2Dh A9h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=5 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xAA: /* C4h E2h 45h 2Dh AAh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=5 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xAB: /* C4h E2h 45h 2Dh ABh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=5 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xAC: /* C4h E2h 45h 2Dh ACh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=5 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xAD: /* C4h E2h 45h 2Dh ADh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=5 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xAE: /* C4h E2h 45h 2Dh AEh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=5 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xAF: /* C4h E2h 45h 2Dh AFh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=5 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xB0: /* C4h E2h 45h 2Dh B0h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=6 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xB1: /* C4h E2h 45h 2Dh B1h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=6 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xB2: /* C4h E2h 45h 2Dh B2h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=6 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xB3: /* C4h E2h 45h 2Dh B3h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=6 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xB4: /* C4h E2h 45h 2Dh B4h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=6 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xB5: /* C4h E2h 45h 2Dh B5h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=6 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xB6: /* C4h E2h 45h 2Dh B6h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=6 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xB7: /* C4h E2h 45h 2Dh B7h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=6 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xB8: /* C4h E2h 45h 2Dh B8h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=7 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xB9: /* C4h E2h 45h 2Dh B9h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=7 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xBA: /* C4h E2h 45h 2Dh BAh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=7 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xBB: /* C4h E2h 45h 2Dh BBh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=7 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xBC: /* C4h E2h 45h 2Dh BCh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=7 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xBD: /* C4h E2h 45h 2Dh BDh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=7 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xBE: /* C4h E2h 45h 2Dh BEh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=7 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xBF: /* C4h E2h 45h 2Dh BFh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=7 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VMASKMOVPD YMM%u,YMM%u,%s",mrm.reg(),vex.V,IPDecPrint32(mrm,sib,disp,32,RC_AVXREG,""));
                                        break;
                                    /* opcode C4h E2h 45h 2Dh C0h  not defined */
                                    /* opcode C4h E2h 45h 2Dh C1h  not defined */
                                    /* opcode C4h E2h 45h 2Dh C2h  not defined */
                                    /* opcode C4h E2h 45h 2Dh C3h  not defined */
                                    /* opcode C4h E2h 45h 2Dh C4h  not defined */
                                    /* opcode C4h E2h 45h 2Dh C5h  not defined */
                                    /* opcode C4h E2h 45h 2Dh C6h  not defined */
                                    /* opcode C4h E2h 45h 2Dh C7h  not defined */
                                    /* opcode C4h E2h 45h 2Dh C8h  not defined */
                                    /* opcode C4h E2h 45h 2Dh C9h  not defined */
                                    /* opcode C4h E2h 45h 2Dh CAh  not defined */
                                    /* opcode C4h E2h 45h 2Dh CBh  not defined */
                                    /* opcode C4h E2h 45h 2Dh CCh  not defined */
                                    /* opcode C4h E2h 45h 2Dh CDh  not defined */
                                    /* opcode C4h E2h 45h 2Dh CEh  not defined */
                                    /* opcode C4h E2h 45h 2Dh CFh  not defined */
                                    /* opcode C4h E2h 45h 2Dh D0h  not defined */
                                    /* opcode C4h E2h 45h 2Dh D1h  not defined */
                                    /* opcode C4h E2h 45h 2Dh D2h  not defined */
                                    /* opcode C4h E2h 45h 2Dh D3h  not defined */
                                    /* opcode C4h E2h 45h 2Dh D4h  not defined */
                                    /* opcode C4h E2h 45h 2Dh D5h  not defined */
                                    /* opcode C4h E2h 45h 2Dh D6h  not defined */
                                    /* opcode C4h E2h 45h 2Dh D7h  not defined */
                                    /* opcode C4h E2h 45h 2Dh D8h  not defined */
                                    /* opcode C4h E2h 45h 2Dh D9h  not defined */
                                    /* opcode C4h E2h 45h 2Dh DAh  not defined */
                                    /* opcode C4h E2h 45h 2Dh DBh  not defined */
                                    /* opcode C4h E2h 45h 2Dh DCh  not defined */
                                    /* opcode C4h E2h 45h 2Dh DDh  not defined */
                                    /* opcode C4h E2h 45h 2Dh DEh  not defined */
                                    /* opcode C4h E2h 45h 2Dh DFh  not defined */
                                    /* opcode C4h E2h 45h 2Dh E0h  not defined */
                                    /* opcode C4h E2h 45h 2Dh E1h  not defined */
                                    /* opcode C4h E2h 45h 2Dh E2h  not defined */
                                    /* opcode C4h E2h 45h 2Dh E3h  not defined */
                                    /* opcode C4h E2h 45h 2Dh E4h  not defined */
                                    /* opcode C4h E2h 45h 2Dh E5h  not defined */
                                    /* opcode C4h E2h 45h 2Dh E6h  not defined */
                                    /* opcode C4h E2h 45h 2Dh E7h  not defined */
                                    /* opcode C4h E2h 45h 2Dh E8h  not defined */
                                    /* opcode C4h E2h 45h 2Dh E9h  not defined */
                                    /* opcode C4h E2h 45h 2Dh EAh  not defined */
                                    /* opcode C4h E2h 45h 2Dh EBh  not defined */
                                    /* opcode C4h E2h 45h 2Dh ECh  not defined */
                                    /* opcode C4h E2h 45h 2Dh EDh  not defined */
                                    /* opcode C4h E2h 45h 2Dh EEh  not defined */
                                    /* opcode C4h E2h 45h 2Dh EFh  not defined */
                                    /* opcode C4h E2h 45h 2Dh F0h  not defined */
                                    /* opcode C4h E2h 45h 2Dh F1h  not defined */
                                    /* opcode C4h E2h 45h 2Dh F2h  not defined */
                                    /* opcode C4h E2h 45h 2Dh F3h  not defined */
                                    /* opcode C4h E2h 45h 2Dh F4h  not defined */
                                    /* opcode C4h E2h 45h 2Dh F5h  not defined */
                                    /* opcode C4h E2h 45h 2Dh F6h  not defined */
                                    /* opcode C4h E2h 45h 2Dh F7h  not defined */
                                    /* opcode C4h E2h 45h 2Dh F8h  not defined */
                                    /* opcode C4h E2h 45h 2Dh F9h  not defined */
                                    /* opcode C4h E2h 45h 2Dh FAh  not defined */
                                    /* opcode C4h E2h 45h 2Dh FBh  not defined */
                                    /* opcode C4h E2h 45h 2Dh FCh  not defined */
                                    /* opcode C4h E2h 45h 2Dh FDh  not defined */
                                    /* opcode C4h E2h 45h 2Dh FEh  not defined */
                                    /* opcode C4h E2h 45h 2Dh FFh  not defined */
                                    default:
                                        goto _x86decode_illegal_opcode;
                                };
/* End of opcodes starting with C4h E2h 45h 2Dh */
                                break;
                            case 0x2E: /* C4h E2h 45h 2Eh        spec:  */
                                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                                _x86decode_begin_code32_addr32_opcode_parse_C4E2452E:
/* Opcodes starting with C4h E2h 45h 2Eh */
                                switch (mrm.byte) {
                                    case 0x00: /* C4h E2h 45h 2Eh 00h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=0 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x01: /* C4h E2h 45h 2Eh 01h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=0 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x02: /* C4h E2h 45h 2Eh 02h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=0 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x03: /* C4h E2h 45h 2Eh 03h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=0 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x04: /* C4h E2h 45h 2Eh 04h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=0 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x05: /* C4h E2h 45h 2Eh 05h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=0 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x06: /* C4h E2h 45h 2Eh 06h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=0 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x07: /* C4h E2h 45h 2Eh 07h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=0 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x08: /* C4h E2h 45h 2Eh 08h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=1 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x09: /* C4h E2h 45h 2Eh 09h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=1 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x0A: /* C4h E2h 45h 2Eh 0Ah VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=1 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x0B: /* C4h E2h 45h 2Eh 0Bh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=1 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x0C: /* C4h E2h 45h 2Eh 0Ch VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=1 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x0D: /* C4h E2h 45h 2Eh 0Dh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=1 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x0E: /* C4h E2h 45h 2Eh 0Eh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=1 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x0F: /* C4h E2h 45h 2Eh 0Fh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=1 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x10: /* C4h E2h 45h 2Eh 10h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=2 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x11: /* C4h E2h 45h 2Eh 11h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=2 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x12: /* C4h E2h 45h 2Eh 12h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=2 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x13: /* C4h E2h 45h 2Eh 13h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=2 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x14: /* C4h E2h 45h 2Eh 14h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=2 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x15: /* C4h E2h 45h 2Eh 15h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=2 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x16: /* C4h E2h 45h 2Eh 16h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=2 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x17: /* C4h E2h 45h 2Eh 17h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=2 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x18: /* C4h E2h 45h 2Eh 18h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=3 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x19: /* C4h E2h 45h 2Eh 19h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=3 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x1A: /* C4h E2h 45h 2Eh 1Ah VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=3 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x1B: /* C4h E2h 45h 2Eh 1Bh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=3 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x1C: /* C4h E2h 45h 2Eh 1Ch VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=3 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x1D: /* C4h E2h 45h 2Eh 1Dh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=3 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x1E: /* C4h E2h 45h 2Eh 1Eh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=3 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x1F: /* C4h E2h 45h 2Eh 1Fh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=3 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x20: /* C4h E2h 45h 2Eh 20h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=4 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x21: /* C4h E2h 45h 2Eh 21h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=4 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x22: /* C4h E2h 45h 2Eh 22h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=4 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x23: /* C4h E2h 45h 2Eh 23h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=4 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x24: /* C4h E2h 45h 2Eh 24h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=4 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x25: /* C4h E2h 45h 2Eh 25h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=4 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x26: /* C4h E2h 45h 2Eh 26h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=4 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x27: /* C4h E2h 45h 2Eh 27h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=4 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x28: /* C4h E2h 45h 2Eh 28h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=5 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x29: /* C4h E2h 45h 2Eh 29h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=5 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x2A: /* C4h E2h 45h 2Eh 2Ah VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=5 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x2B: /* C4h E2h 45h 2Eh 2Bh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=5 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x2C: /* C4h E2h 45h 2Eh 2Ch VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=5 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x2D: /* C4h E2h 45h 2Eh 2Dh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=5 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x2E: /* C4h E2h 45h 2Eh 2Eh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=5 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x2F: /* C4h E2h 45h 2Eh 2Fh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=5 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x30: /* C4h E2h 45h 2Eh 30h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=6 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x31: /* C4h E2h 45h 2Eh 31h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=6 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x32: /* C4h E2h 45h 2Eh 32h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=6 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x33: /* C4h E2h 45h 2Eh 33h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=6 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x34: /* C4h E2h 45h 2Eh 34h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=6 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x35: /* C4h E2h 45h 2Eh 35h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=6 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x36: /* C4h E2h 45h 2Eh 36h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=6 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x37: /* C4h E2h 45h 2Eh 37h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=6 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x38: /* C4h E2h 45h 2Eh 38h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=7 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x39: /* C4h E2h 45h 2Eh 39h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=7 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x3A: /* C4h E2h 45h 2Eh 3Ah VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=7 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x3B: /* C4h E2h 45h 2Eh 3Bh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=7 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x3C: /* C4h E2h 45h 2Eh 3Ch VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=7 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x3D: /* C4h E2h 45h 2Eh 3Dh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=7 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x3E: /* C4h E2h 45h 2Eh 3Eh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=7 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x3F: /* C4h E2h 45h 2Eh 3Fh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=7 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x40: /* C4h E2h 45h 2Eh 40h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=0 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x41: /* C4h E2h 45h 2Eh 41h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=0 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x42: /* C4h E2h 45h 2Eh 42h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=0 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x43: /* C4h E2h 45h 2Eh 43h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=0 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x44: /* C4h E2h 45h 2Eh 44h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=0 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x45: /* C4h E2h 45h 2Eh 45h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=0 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x46: /* C4h E2h 45h 2Eh 46h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=0 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x47: /* C4h E2h 45h 2Eh 47h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=0 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x48: /* C4h E2h 45h 2Eh 48h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=1 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x49: /* C4h E2h 45h 2Eh 49h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=1 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x4A: /* C4h E2h 45h 2Eh 4Ah VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=1 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x4B: /* C4h E2h 45h 2Eh 4Bh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=1 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x4C: /* C4h E2h 45h 2Eh 4Ch VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=1 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x4D: /* C4h E2h 45h 2Eh 4Dh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=1 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x4E: /* C4h E2h 45h 2Eh 4Eh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=1 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x4F: /* C4h E2h 45h 2Eh 4Fh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=1 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x50: /* C4h E2h 45h 2Eh 50h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=2 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x51: /* C4h E2h 45h 2Eh 51h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=2 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x52: /* C4h E2h 45h 2Eh 52h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=2 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x53: /* C4h E2h 45h 2Eh 53h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=2 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x54: /* C4h E2h 45h 2Eh 54h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=2 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x55: /* C4h E2h 45h 2Eh 55h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=2 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x56: /* C4h E2h 45h 2Eh 56h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=2 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x57: /* C4h E2h 45h 2Eh 57h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=2 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x58: /* C4h E2h 45h 2Eh 58h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=3 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x59: /* C4h E2h 45h 2Eh 59h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=3 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x5A: /* C4h E2h 45h 2Eh 5Ah VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=3 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x5B: /* C4h E2h 45h 2Eh 5Bh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=3 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x5C: /* C4h E2h 45h 2Eh 5Ch VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=3 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x5D: /* C4h E2h 45h 2Eh 5Dh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=3 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x5E: /* C4h E2h 45h 2Eh 5Eh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=3 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x5F: /* C4h E2h 45h 2Eh 5Fh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=3 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x60: /* C4h E2h 45h 2Eh 60h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=4 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x61: /* C4h E2h 45h 2Eh 61h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=4 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x62: /* C4h E2h 45h 2Eh 62h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=4 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x63: /* C4h E2h 45h 2Eh 63h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=4 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x64: /* C4h E2h 45h 2Eh 64h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=4 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x65: /* C4h E2h 45h 2Eh 65h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=4 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x66: /* C4h E2h 45h 2Eh 66h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=4 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x67: /* C4h E2h 45h 2Eh 67h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=4 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x68: /* C4h E2h 45h 2Eh 68h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=5 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x69: /* C4h E2h 45h 2Eh 69h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=5 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x6A: /* C4h E2h 45h 2Eh 6Ah VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=5 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x6B: /* C4h E2h 45h 2Eh 6Bh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=5 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x6C: /* C4h E2h 45h 2Eh 6Ch VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=5 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x6D: /* C4h E2h 45h 2Eh 6Dh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=5 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x6E: /* C4h E2h 45h 2Eh 6Eh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=5 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x6F: /* C4h E2h 45h 2Eh 6Fh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=5 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x70: /* C4h E2h 45h 2Eh 70h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=6 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x71: /* C4h E2h 45h 2Eh 71h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=6 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x72: /* C4h E2h 45h 2Eh 72h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=6 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x73: /* C4h E2h 45h 2Eh 73h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=6 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x74: /* C4h E2h 45h 2Eh 74h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=6 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x75: /* C4h E2h 45h 2Eh 75h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=6 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x76: /* C4h E2h 45h 2Eh 76h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=6 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x77: /* C4h E2h 45h 2Eh 77h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=6 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x78: /* C4h E2h 45h 2Eh 78h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=7 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x79: /* C4h E2h 45h 2Eh 79h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=7 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x7A: /* C4h E2h 45h 2Eh 7Ah VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=7 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x7B: /* C4h E2h 45h 2Eh 7Bh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=7 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x7C: /* C4h E2h 45h 2Eh 7Ch VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=7 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x7D: /* C4h E2h 45h 2Eh 7Dh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=7 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x7E: /* C4h E2h 45h 2Eh 7Eh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=7 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x7F: /* C4h E2h 45h 2Eh 7Fh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=7 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x80: /* C4h E2h 45h 2Eh 80h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=0 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x81: /* C4h E2h 45h 2Eh 81h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=0 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x82: /* C4h E2h 45h 2Eh 82h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=0 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x83: /* C4h E2h 45h 2Eh 83h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=0 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x84: /* C4h E2h 45h 2Eh 84h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=0 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x85: /* C4h E2h 45h 2Eh 85h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=0 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x86: /* C4h E2h 45h 2Eh 86h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=0 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x87: /* C4h E2h 45h 2Eh 87h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=0 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x88: /* C4h E2h 45h 2Eh 88h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=1 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x89: /* C4h E2h 45h 2Eh 89h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=1 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x8A: /* C4h E2h 45h 2Eh 8Ah VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=1 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x8B: /* C4h E2h 45h 2Eh 8Bh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=1 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x8C: /* C4h E2h 45h 2Eh 8Ch VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=1 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x8D: /* C4h E2h 45h 2Eh 8Dh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=1 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x8E: /* C4h E2h 45h 2Eh 8Eh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=1 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x8F: /* C4h E2h 45h 2Eh 8Fh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=1 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x90: /* C4h E2h 45h 2Eh 90h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=2 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x91: /* C4h E2h 45h 2Eh 91h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=2 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x92: /* C4h E2h 45h 2Eh 92h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=2 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x93: /* C4h E2h 45h 2Eh 93h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=2 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x94: /* C4h E2h 45h 2Eh 94h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=2 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x95: /* C4h E2h 45h 2Eh 95h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=2 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x96: /* C4h E2h 45h 2Eh 96h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=2 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x97: /* C4h E2h 45h 2Eh 97h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=2 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x98: /* C4h E2h 45h 2Eh 98h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=3 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x99: /* C4h E2h 45h 2Eh 99h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=3 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x9A: /* C4h E2h 45h 2Eh 9Ah VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=3 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x9B: /* C4h E2h 45h 2Eh 9Bh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=3 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x9C: /* C4h E2h 45h 2Eh 9Ch VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=3 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x9D: /* C4h E2h 45h 2Eh 9Dh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=3 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x9E: /* C4h E2h 45h 2Eh 9Eh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=3 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x9F: /* C4h E2h 45h 2Eh 9Fh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=3 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xA0: /* C4h E2h 45h 2Eh A0h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=4 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xA1: /* C4h E2h 45h 2Eh A1h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=4 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xA2: /* C4h E2h 45h 2Eh A2h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=4 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xA3: /* C4h E2h 45h 2Eh A3h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=4 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xA4: /* C4h E2h 45h 2Eh A4h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=4 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xA5: /* C4h E2h 45h 2Eh A5h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=4 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xA6: /* C4h E2h 45h 2Eh A6h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=4 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xA7: /* C4h E2h 45h 2Eh A7h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=4 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xA8: /* C4h E2h 45h 2Eh A8h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=5 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xA9: /* C4h E2h 45h 2Eh A9h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=5 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xAA: /* C4h E2h 45h 2Eh AAh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=5 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xAB: /* C4h E2h 45h 2Eh ABh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=5 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xAC: /* C4h E2h 45h 2Eh ACh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=5 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xAD: /* C4h E2h 45h 2Eh ADh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=5 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xAE: /* C4h E2h 45h 2Eh AEh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=5 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xAF: /* C4h E2h 45h 2Eh AFh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=5 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xB0: /* C4h E2h 45h 2Eh B0h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=6 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xB1: /* C4h E2h 45h 2Eh B1h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=6 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xB2: /* C4h E2h 45h 2Eh B2h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=6 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xB3: /* C4h E2h 45h 2Eh B3h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=6 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xB4: /* C4h E2h 45h 2Eh B4h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=6 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xB5: /* C4h E2h 45h 2Eh B5h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=6 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xB6: /* C4h E2h 45h 2Eh B6h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=6 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xB7: /* C4h E2h 45h 2Eh B7h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=6 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xB8: /* C4h E2h 45h 2Eh B8h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=7 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xB9: /* C4h E2h 45h 2Eh B9h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=7 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xBA: /* C4h E2h 45h 2Eh BAh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=7 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xBB: /* C4h E2h 45h 2Eh BBh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=7 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xBC: /* C4h E2h 45h 2Eh BCh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=7 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xBD: /* C4h E2h 45h 2Eh BDh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=7 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xBE: /* C4h E2h 45h 2Eh BEh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=7 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xBF: /* C4h E2h 45h 2Eh BFh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=7 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VMASKMOVPS %s,YMM%u,YMM%u",IPDecPrint32(mrm,sib,disp,32,RC_AVXREG,""),vex.V,mrm.reg());
                                        break;
                                    /* opcode C4h E2h 45h 2Eh C0h  not defined */
                                    /* opcode C4h E2h 45h 2Eh C1h  not defined */
                                    /* opcode C4h E2h 45h 2Eh C2h  not defined */
                                    /* opcode C4h E2h 45h 2Eh C3h  not defined */
                                    /* opcode C4h E2h 45h 2Eh C4h  not defined */
                                    /* opcode C4h E2h 45h 2Eh C5h  not defined */
                                    /* opcode C4h E2h 45h 2Eh C6h  not defined */
                                    /* opcode C4h E2h 45h 2Eh C7h  not defined */
                                    /* opcode C4h E2h 45h 2Eh C8h  not defined */
                                    /* opcode C4h E2h 45h 2Eh C9h  not defined */
                                    /* opcode C4h E2h 45h 2Eh CAh  not defined */
                                    /* opcode C4h E2h 45h 2Eh CBh  not defined */
                                    /* opcode C4h E2h 45h 2Eh CCh  not defined */
                                    /* opcode C4h E2h 45h 2Eh CDh  not defined */
                                    /* opcode C4h E2h 45h 2Eh CEh  not defined */
                                    /* opcode C4h E2h 45h 2Eh CFh  not defined */
                                    /* opcode C4h E2h 45h 2Eh D0h  not defined */
                                    /* opcode C4h E2h 45h 2Eh D1h  not defined */
                                    /* opcode C4h E2h 45h 2Eh D2h  not defined */
                                    /* opcode C4h E2h 45h 2Eh D3h  not defined */
                                    /* opcode C4h E2h 45h 2Eh D4h  not defined */
                                    /* opcode C4h E2h 45h 2Eh D5h  not defined */
                                    /* opcode C4h E2h 45h 2Eh D6h  not defined */
                                    /* opcode C4h E2h 45h 2Eh D7h  not defined */
                                    /* opcode C4h E2h 45h 2Eh D8h  not defined */
                                    /* opcode C4h E2h 45h 2Eh D9h  not defined */
                                    /* opcode C4h E2h 45h 2Eh DAh  not defined */
                                    /* opcode C4h E2h 45h 2Eh DBh  not defined */
                                    /* opcode C4h E2h 45h 2Eh DCh  not defined */
                                    /* opcode C4h E2h 45h 2Eh DDh  not defined */
                                    /* opcode C4h E2h 45h 2Eh DEh  not defined */
                                    /* opcode C4h E2h 45h 2Eh DFh  not defined */
                                    /* opcode C4h E2h 45h 2Eh E0h  not defined */
                                    /* opcode C4h E2h 45h 2Eh E1h  not defined */
                                    /* opcode C4h E2h 45h 2Eh E2h  not defined */
                                    /* opcode C4h E2h 45h 2Eh E3h  not defined */
                                    /* opcode C4h E2h 45h 2Eh E4h  not defined */
                                    /* opcode C4h E2h 45h 2Eh E5h  not defined */
                                    /* opcode C4h E2h 45h 2Eh E6h  not defined */
                                    /* opcode C4h E2h 45h 2Eh E7h  not defined */
                                    /* opcode C4h E2h 45h 2Eh E8h  not defined */
                                    /* opcode C4h E2h 45h 2Eh E9h  not defined */
                                    /* opcode C4h E2h 45h 2Eh EAh  not defined */
                                    /* opcode C4h E2h 45h 2Eh EBh  not defined */
                                    /* opcode C4h E2h 45h 2Eh ECh  not defined */
                                    /* opcode C4h E2h 45h 2Eh EDh  not defined */
                                    /* opcode C4h E2h 45h 2Eh EEh  not defined */
                                    /* opcode C4h E2h 45h 2Eh EFh  not defined */
                                    /* opcode C4h E2h 45h 2Eh F0h  not defined */
                                    /* opcode C4h E2h 45h 2Eh F1h  not defined */
                                    /* opcode C4h E2h 45h 2Eh F2h  not defined */
                                    /* opcode C4h E2h 45h 2Eh F3h  not defined */
                                    /* opcode C4h E2h 45h 2Eh F4h  not defined */
                                    /* opcode C4h E2h 45h 2Eh F5h  not defined */
                                    /* opcode C4h E2h 45h 2Eh F6h  not defined */
                                    /* opcode C4h E2h 45h 2Eh F7h  not defined */
                                    /* opcode C4h E2h 45h 2Eh F8h  not defined */
                                    /* opcode C4h E2h 45h 2Eh F9h  not defined */
                                    /* opcode C4h E2h 45h 2Eh FAh  not defined */
                                    /* opcode C4h E2h 45h 2Eh FBh  not defined */
                                    /* opcode C4h E2h 45h 2Eh FCh  not defined */
                                    /* opcode C4h E2h 45h 2Eh FDh  not defined */
                                    /* opcode C4h E2h 45h 2Eh FEh  not defined */
                                    /* opcode C4h E2h 45h 2Eh FFh  not defined */
                                    default:
                                        goto _x86decode_illegal_opcode;
                                };
/* End of opcodes starting with C4h E2h 45h 2Eh */
                                break;
                            case 0x2F: /* C4h E2h 45h 2Fh        spec:  */
                                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                                _x86decode_begin_code32_addr32_opcode_parse_C4E2452F:
/* Opcodes starting with C4h E2h 45h 2Fh */
                                switch (mrm.byte) {
                                    case 0x00: /* C4h E2h 45h 2Fh 00h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=0 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x01: /* C4h E2h 45h 2Fh 01h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=0 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x02: /* C4h E2h 45h 2Fh 02h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=0 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x03: /* C4h E2h 45h 2Fh 03h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=0 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x04: /* C4h E2h 45h 2Fh 04h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=0 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x05: /* C4h E2h 45h 2Fh 05h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=0 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x06: /* C4h E2h 45h 2Fh 06h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=0 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x07: /* C4h E2h 45h 2Fh 07h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=0 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x08: /* C4h E2h 45h 2Fh 08h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=1 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x09: /* C4h E2h 45h 2Fh 09h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=1 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x0A: /* C4h E2h 45h 2Fh 0Ah VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=1 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x0B: /* C4h E2h 45h 2Fh 0Bh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=1 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x0C: /* C4h E2h 45h 2Fh 0Ch VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=1 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x0D: /* C4h E2h 45h 2Fh 0Dh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=1 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x0E: /* C4h E2h 45h 2Fh 0Eh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=1 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x0F: /* C4h E2h 45h 2Fh 0Fh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=1 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x10: /* C4h E2h 45h 2Fh 10h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=2 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x11: /* C4h E2h 45h 2Fh 11h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=2 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x12: /* C4h E2h 45h 2Fh 12h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=2 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x13: /* C4h E2h 45h 2Fh 13h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=2 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x14: /* C4h E2h 45h 2Fh 14h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=2 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x15: /* C4h E2h 45h 2Fh 15h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=2 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x16: /* C4h E2h 45h 2Fh 16h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=2 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x17: /* C4h E2h 45h 2Fh 17h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=2 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x18: /* C4h E2h 45h 2Fh 18h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=3 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x19: /* C4h E2h 45h 2Fh 19h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=3 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x1A: /* C4h E2h 45h 2Fh 1Ah VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=3 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x1B: /* C4h E2h 45h 2Fh 1Bh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=3 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x1C: /* C4h E2h 45h 2Fh 1Ch VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=3 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x1D: /* C4h E2h 45h 2Fh 1Dh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=3 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x1E: /* C4h E2h 45h 2Fh 1Eh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=3 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x1F: /* C4h E2h 45h 2Fh 1Fh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=3 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x20: /* C4h E2h 45h 2Fh 20h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=4 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x21: /* C4h E2h 45h 2Fh 21h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=4 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x22: /* C4h E2h 45h 2Fh 22h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=4 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x23: /* C4h E2h 45h 2Fh 23h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=4 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x24: /* C4h E2h 45h 2Fh 24h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=4 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x25: /* C4h E2h 45h 2Fh 25h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=4 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x26: /* C4h E2h 45h 2Fh 26h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=4 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x27: /* C4h E2h 45h 2Fh 27h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=4 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x28: /* C4h E2h 45h 2Fh 28h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=5 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x29: /* C4h E2h 45h 2Fh 29h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=5 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x2A: /* C4h E2h 45h 2Fh 2Ah VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=5 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x2B: /* C4h E2h 45h 2Fh 2Bh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=5 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x2C: /* C4h E2h 45h 2Fh 2Ch VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=5 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x2D: /* C4h E2h 45h 2Fh 2Dh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=5 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x2E: /* C4h E2h 45h 2Fh 2Eh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=5 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x2F: /* C4h E2h 45h 2Fh 2Fh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=5 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x30: /* C4h E2h 45h 2Fh 30h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=6 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x31: /* C4h E2h 45h 2Fh 31h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=6 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x32: /* C4h E2h 45h 2Fh 32h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=6 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x33: /* C4h E2h 45h 2Fh 33h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=6 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x34: /* C4h E2h 45h 2Fh 34h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=6 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x35: /* C4h E2h 45h 2Fh 35h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=6 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x36: /* C4h E2h 45h 2Fh 36h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=6 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x37: /* C4h E2h 45h 2Fh 37h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=6 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x38: /* C4h E2h 45h 2Fh 38h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=7 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x39: /* C4h E2h 45h 2Fh 39h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=7 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x3A: /* C4h E2h 45h 2Fh 3Ah VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=7 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x3B: /* C4h E2h 45h 2Fh 3Bh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=7 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x3C: /* C4h E2h 45h 2Fh 3Ch VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=7 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x3D: /* C4h E2h 45h 2Fh 3Dh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=7 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x3E: /* C4h E2h 45h 2Fh 3Eh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=7 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x3F: /* C4h E2h 45h 2Fh 3Fh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=7 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x40: /* C4h E2h 45h 2Fh 40h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=0 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x41: /* C4h E2h 45h 2Fh 41h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=0 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x42: /* C4h E2h 45h 2Fh 42h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=0 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x43: /* C4h E2h 45h 2Fh 43h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=0 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x44: /* C4h E2h 45h 2Fh 44h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=0 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x45: /* C4h E2h 45h 2Fh 45h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=0 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x46: /* C4h E2h 45h 2Fh 46h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=0 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x47: /* C4h E2h 45h 2Fh 47h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=0 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x48: /* C4h E2h 45h 2Fh 48h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=1 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x49: /* C4h E2h 45h 2Fh 49h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=1 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x4A: /* C4h E2h 45h 2Fh 4Ah VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=1 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x4B: /* C4h E2h 45h 2Fh 4Bh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=1 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x4C: /* C4h E2h 45h 2Fh 4Ch VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=1 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x4D: /* C4h E2h 45h 2Fh 4Dh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=1 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x4E: /* C4h E2h 45h 2Fh 4Eh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=1 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x4F: /* C4h E2h 45h 2Fh 4Fh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=1 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x50: /* C4h E2h 45h 2Fh 50h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=2 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x51: /* C4h E2h 45h 2Fh 51h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=2 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x52: /* C4h E2h 45h 2Fh 52h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=2 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x53: /* C4h E2h 45h 2Fh 53h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=2 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x54: /* C4h E2h 45h 2Fh 54h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=2 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x55: /* C4h E2h 45h 2Fh 55h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=2 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x56: /* C4h E2h 45h 2Fh 56h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=2 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x57: /* C4h E2h 45h 2Fh 57h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=2 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x58: /* C4h E2h 45h 2Fh 58h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=3 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x59: /* C4h E2h 45h 2Fh 59h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=3 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x5A: /* C4h E2h 45h 2Fh 5Ah VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=3 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x5B: /* C4h E2h 45h 2Fh 5Bh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=3 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x5C: /* C4h E2h 45h 2Fh 5Ch VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=3 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x5D: /* C4h E2h 45h 2Fh 5Dh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=3 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x5E: /* C4h E2h 45h 2Fh 5Eh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=3 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x5F: /* C4h E2h 45h 2Fh 5Fh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=3 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x60: /* C4h E2h 45h 2Fh 60h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=4 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x61: /* C4h E2h 45h 2Fh 61h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=4 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x62: /* C4h E2h 45h 2Fh 62h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=4 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x63: /* C4h E2h 45h 2Fh 63h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=4 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x64: /* C4h E2h 45h 2Fh 64h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=4 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x65: /* C4h E2h 45h 2Fh 65h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=4 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x66: /* C4h E2h 45h 2Fh 66h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=4 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x67: /* C4h E2h 45h 2Fh 67h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=4 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x68: /* C4h E2h 45h 2Fh 68h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=5 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x69: /* C4h E2h 45h 2Fh 69h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=5 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x6A: /* C4h E2h 45h 2Fh 6Ah VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=5 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x6B: /* C4h E2h 45h 2Fh 6Bh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=5 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x6C: /* C4h E2h 45h 2Fh 6Ch VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=5 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x6D: /* C4h E2h 45h 2Fh 6Dh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=5 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x6E: /* C4h E2h 45h 2Fh 6Eh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=5 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x6F: /* C4h E2h 45h 2Fh 6Fh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=5 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x70: /* C4h E2h 45h 2Fh 70h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=6 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x71: /* C4h E2h 45h 2Fh 71h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=6 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x72: /* C4h E2h 45h 2Fh 72h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=6 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x73: /* C4h E2h 45h 2Fh 73h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=6 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x74: /* C4h E2h 45h 2Fh 74h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=6 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x75: /* C4h E2h 45h 2Fh 75h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=6 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x76: /* C4h E2h 45h 2Fh 76h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=6 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x77: /* C4h E2h 45h 2Fh 77h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=6 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x78: /* C4h E2h 45h 2Fh 78h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=7 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x79: /* C4h E2h 45h 2Fh 79h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=7 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x7A: /* C4h E2h 45h 2Fh 7Ah VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=7 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x7B: /* C4h E2h 45h 2Fh 7Bh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=7 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x7C: /* C4h E2h 45h 2Fh 7Ch VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=7 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x7D: /* C4h E2h 45h 2Fh 7Dh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=7 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x7E: /* C4h E2h 45h 2Fh 7Eh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=7 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x7F: /* C4h E2h 45h 2Fh 7Fh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=7 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x80: /* C4h E2h 45h 2Fh 80h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=0 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x81: /* C4h E2h 45h 2Fh 81h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=0 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x82: /* C4h E2h 45h 2Fh 82h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=0 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x83: /* C4h E2h 45h 2Fh 83h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=0 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x84: /* C4h E2h 45h 2Fh 84h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=0 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x85: /* C4h E2h 45h 2Fh 85h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=0 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x86: /* C4h E2h 45h 2Fh 86h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=0 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x87: /* C4h E2h 45h 2Fh 87h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=0 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x88: /* C4h E2h 45h 2Fh 88h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=1 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x89: /* C4h E2h 45h 2Fh 89h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=1 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x8A: /* C4h E2h 45h 2Fh 8Ah VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=1 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x8B: /* C4h E2h 45h 2Fh 8Bh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=1 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x8C: /* C4h E2h 45h 2Fh 8Ch VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=1 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x8D: /* C4h E2h 45h 2Fh 8Dh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=1 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x8E: /* C4h E2h 45h 2Fh 8Eh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=1 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x8F: /* C4h E2h 45h 2Fh 8Fh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=1 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x90: /* C4h E2h 45h 2Fh 90h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=2 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x91: /* C4h E2h 45h 2Fh 91h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=2 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x92: /* C4h E2h 45h 2Fh 92h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=2 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x93: /* C4h E2h 45h 2Fh 93h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=2 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x94: /* C4h E2h 45h 2Fh 94h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=2 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x95: /* C4h E2h 45h 2Fh 95h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=2 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x96: /* C4h E2h 45h 2Fh 96h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=2 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x97: /* C4h E2h 45h 2Fh 97h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=2 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x98: /* C4h E2h 45h 2Fh 98h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=3 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x99: /* C4h E2h 45h 2Fh 99h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=3 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x9A: /* C4h E2h 45h 2Fh 9Ah VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=3 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x9B: /* C4h E2h 45h 2Fh 9Bh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=3 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x9C: /* C4h E2h 45h 2Fh 9Ch VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=3 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x9D: /* C4h E2h 45h 2Fh 9Dh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=3 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x9E: /* C4h E2h 45h 2Fh 9Eh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=3 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x9F: /* C4h E2h 45h 2Fh 9Fh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=3 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xA0: /* C4h E2h 45h 2Fh A0h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=4 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xA1: /* C4h E2h 45h 2Fh A1h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=4 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xA2: /* C4h E2h 45h 2Fh A2h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=4 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xA3: /* C4h E2h 45h 2Fh A3h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=4 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xA4: /* C4h E2h 45h 2Fh A4h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=4 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xA5: /* C4h E2h 45h 2Fh A5h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=4 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xA6: /* C4h E2h 45h 2Fh A6h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=4 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xA7: /* C4h E2h 45h 2Fh A7h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=4 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xA8: /* C4h E2h 45h 2Fh A8h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=5 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xA9: /* C4h E2h 45h 2Fh A9h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=5 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xAA: /* C4h E2h 45h 2Fh AAh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=5 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xAB: /* C4h E2h 45h 2Fh ABh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=5 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xAC: /* C4h E2h 45h 2Fh ACh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=5 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xAD: /* C4h E2h 45h 2Fh ADh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=5 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xAE: /* C4h E2h 45h 2Fh AEh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=5 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xAF: /* C4h E2h 45h 2Fh AFh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=5 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xB0: /* C4h E2h 45h 2Fh B0h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=6 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xB1: /* C4h E2h 45h 2Fh B1h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=6 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xB2: /* C4h E2h 45h 2Fh B2h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=6 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xB3: /* C4h E2h 45h 2Fh B3h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=6 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xB4: /* C4h E2h 45h 2Fh B4h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=6 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xB5: /* C4h E2h 45h 2Fh B5h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=6 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xB6: /* C4h E2h 45h 2Fh B6h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=6 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xB7: /* C4h E2h 45h 2Fh B7h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=6 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xB8: /* C4h E2h 45h 2Fh B8h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=7 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xB9: /* C4h E2h 45h 2Fh B9h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=7 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xBA: /* C4h E2h 45h 2Fh BAh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=7 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xBB: /* C4h E2h 45h 2Fh BBh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=7 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xBC: /* C4h E2h 45h 2Fh BCh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=7 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xBD: /* C4h E2h 45h 2Fh BDh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=7 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xBE: /* C4h E2h 45h 2Fh BEh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=7 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xBF: /* C4h E2h 45h 2Fh BFh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=7 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VMASKMOVPD %s,YMM%u,YMM%u",IPDecPrint32(mrm,sib,disp,32,RC_AVXREG,""),vex.V,mrm.reg());
                                        break;
                                    /* opcode C4h E2h 45h 2Fh C0h  not defined */
                                    /* opcode C4h E2h 45h 2Fh C1h  not defined */
                                    /* opcode C4h E2h 45h 2Fh C2h  not defined */
                                    /* opcode C4h E2h 45h 2Fh C3h  not defined */
                                    /* opcode C4h E2h 45h 2Fh C4h  not defined */
                                    /* opcode C4h E2h 45h 2Fh C5h  not defined */
                                    /* opcode C4h E2h 45h 2Fh C6h  not defined */
                                    /* opcode C4h E2h 45h 2Fh C7h  not defined */
                                    /* opcode C4h E2h 45h 2Fh C8h  not defined */
                                    /* opcode C4h E2h 45h 2Fh C9h  not defined */
                                    /* opcode C4h E2h 45h 2Fh CAh  not defined */
                                    /* opcode C4h E2h 45h 2Fh CBh  not defined */
                                    /* opcode C4h E2h 45h 2Fh CCh  not defined */
                                    /* opcode C4h E2h 45h 2Fh CDh  not defined */
                                    /* opcode C4h E2h 45h 2Fh CEh  not defined */
                                    /* opcode C4h E2h 45h 2Fh CFh  not defined */
                                    /* opcode C4h E2h 45h 2Fh D0h  not defined */
                                    /* opcode C4h E2h 45h 2Fh D1h  not defined */
                                    /* opcode C4h E2h 45h 2Fh D2h  not defined */
                                    /* opcode C4h E2h 45h 2Fh D3h  not defined */
                                    /* opcode C4h E2h 45h 2Fh D4h  not defined */
                                    /* opcode C4h E2h 45h 2Fh D5h  not defined */
                                    /* opcode C4h E2h 45h 2Fh D6h  not defined */
                                    /* opcode C4h E2h 45h 2Fh D7h  not defined */
                                    /* opcode C4h E2h 45h 2Fh D8h  not defined */
                                    /* opcode C4h E2h 45h 2Fh D9h  not defined */
                                    /* opcode C4h E2h 45h 2Fh DAh  not defined */
                                    /* opcode C4h E2h 45h 2Fh DBh  not defined */
                                    /* opcode C4h E2h 45h 2Fh DCh  not defined */
                                    /* opcode C4h E2h 45h 2Fh DDh  not defined */
                                    /* opcode C4h E2h 45h 2Fh DEh  not defined */
                                    /* opcode C4h E2h 45h 2Fh DFh  not defined */
                                    /* opcode C4h E2h 45h 2Fh E0h  not defined */
                                    /* opcode C4h E2h 45h 2Fh E1h  not defined */
                                    /* opcode C4h E2h 45h 2Fh E2h  not defined */
                                    /* opcode C4h E2h 45h 2Fh E3h  not defined */
                                    /* opcode C4h E2h 45h 2Fh E4h  not defined */
                                    /* opcode C4h E2h 45h 2Fh E5h  not defined */
                                    /* opcode C4h E2h 45h 2Fh E6h  not defined */
                                    /* opcode C4h E2h 45h 2Fh E7h  not defined */
                                    /* opcode C4h E2h 45h 2Fh E8h  not defined */
                                    /* opcode C4h E2h 45h 2Fh E9h  not defined */
                                    /* opcode C4h E2h 45h 2Fh EAh  not defined */
                                    /* opcode C4h E2h 45h 2Fh EBh  not defined */
                                    /* opcode C4h E2h 45h 2Fh ECh  not defined */
                                    /* opcode C4h E2h 45h 2Fh EDh  not defined */
                                    /* opcode C4h E2h 45h 2Fh EEh  not defined */
                                    /* opcode C4h E2h 45h 2Fh EFh  not defined */
                                    /* opcode C4h E2h 45h 2Fh F0h  not defined */
                                    /* opcode C4h E2h 45h 2Fh F1h  not defined */
                                    /* opcode C4h E2h 45h 2Fh F2h  not defined */
                                    /* opcode C4h E2h 45h 2Fh F3h  not defined */
                                    /* opcode C4h E2h 45h 2Fh F4h  not defined */
                                    /* opcode C4h E2h 45h 2Fh F5h  not defined */
                                    /* opcode C4h E2h 45h 2Fh F6h  not defined */
                                    /* opcode C4h E2h 45h 2Fh F7h  not defined */
                                    /* opcode C4h E2h 45h 2Fh F8h  not defined */
                                    /* opcode C4h E2h 45h 2Fh F9h  not defined */
                                    /* opcode C4h E2h 45h 2Fh FAh  not defined */
                                    /* opcode C4h E2h 45h 2Fh FBh  not defined */
                                    /* opcode C4h E2h 45h 2Fh FCh  not defined */
                                    /* opcode C4h E2h 45h 2Fh FDh  not defined */
                                    /* opcode C4h E2h 45h 2Fh FEh  not defined */
                                    /* opcode C4h E2h 45h 2Fh FFh  not defined */
                                    default:
                                        goto _x86decode_illegal_opcode;
                                };
/* End of opcodes starting with C4h E2h 45h 2Fh */
                                break;
                            /* opcode C4h E2h 45h 30h  not defined */
                            /* opcode C4h E2h 45h 31h  not defined */
                            /* opcode C4h E2h 45h 32h  not defined */
                            /* opcode C4h E2h 45h 33h  not defined */
                            /* opcode C4h E2h 45h 34h  not defined */
                            /* opcode C4h E2h 45h 35h  not defined */
                            /* opcode C4h E2h 45h 36h  not defined */
                            /* opcode C4h E2h 45h 37h  not defined */
                            /* opcode C4h E2h 45h 38h  not defined */
                            /* opcode C4h E2h 45h 39h  not defined */
                            /* opcode C4h E2h 45h 3Ah  not defined */
                            /* opcode C4h E2h 45h 3Bh  not defined */
                            /* opcode C4h E2h 45h 3Ch  not defined */
                            /* opcode C4h E2h 45h 3Dh  not defined */
                            /* opcode C4h E2h 45h 3Eh  not defined */
                            /* opcode C4h E2h 45h 3Fh  not defined */
                            /* opcode C4h E2h 45h 40h  not defined */
                            /* opcode C4h E2h 45h 41h  not defined */
                            /* opcode C4h E2h 45h 42h  not defined */
                            /* opcode C4h E2h 45h 43h  not defined */
                            /* opcode C4h E2h 45h 44h  not defined */
                            /* opcode C4h E2h 45h 45h  not defined */
                            /* opcode C4h E2h 45h 46h  not defined */
                            /* opcode C4h E2h 45h 47h  not defined */
                            /* opcode C4h E2h 45h 48h  not defined */
                            /* opcode C4h E2h 45h 49h  not defined */
                            /* opcode C4h E2h 45h 4Ah  not defined */
                            /* opcode C4h E2h 45h 4Bh  not defined */
                            /* opcode C4h E2h 45h 4Ch  not defined */
                            /* opcode C4h E2h 45h 4Dh  not defined */
                            /* opcode C4h E2h 45h 4Eh  not defined */
                            /* opcode C4h E2h 45h 4Fh  not defined */
                            /* opcode C4h E2h 45h 50h  not defined */
                            /* opcode C4h E2h 45h 51h  not defined */
                            /* opcode C4h E2h 45h 52h  not defined */
                            /* opcode C4h E2h 45h 53h  not defined */
                            /* opcode C4h E2h 45h 54h  not defined */
                            /* opcode C4h E2h 45h 55h  not defined */
                            /* opcode C4h E2h 45h 56h  not defined */
                            /* opcode C4h E2h 45h 57h  not defined */
                            /* opcode C4h E2h 45h 58h  not defined */
                            /* opcode C4h E2h 45h 59h  not defined */
                            /* opcode C4h E2h 45h 5Ah  not defined */
                            /* opcode C4h E2h 45h 5Bh  not defined */
                            /* opcode C4h E2h 45h 5Ch  not defined */
                            /* opcode C4h E2h 45h 5Dh  not defined */
                            /* opcode C4h E2h 45h 5Eh  not defined */
                            /* opcode C4h E2h 45h 5Fh  not defined */
                            /* opcode C4h E2h 45h 60h  not defined */
                            /* opcode C4h E2h 45h 61h  not defined */
                            /* opcode C4h E2h 45h 62h  not defined */
                            /* opcode C4h E2h 45h 63h  not defined */
                            /* opcode C4h E2h 45h 64h  not defined */
                            /* opcode C4h E2h 45h 65h  not defined */
                            /* opcode C4h E2h 45h 66h  not defined */
                            /* opcode C4h E2h 45h 67h  not defined */
                            /* opcode C4h E2h 45h 68h  not defined */
                            /* opcode C4h E2h 45h 69h  not defined */
                            /* opcode C4h E2h 45h 6Ah  not defined */
                            /* opcode C4h E2h 45h 6Bh  not defined */
                            /* opcode C4h E2h 45h 6Ch  not defined */
                            /* opcode C4h E2h 45h 6Dh  not defined */
                            /* opcode C4h E2h 45h 6Eh  not defined */
                            /* opcode C4h E2h 45h 6Fh  not defined */
                            /* opcode C4h E2h 45h 70h  not defined */
                            /* opcode C4h E2h 45h 71h  not defined */
                            /* opcode C4h E2h 45h 72h  not defined */
                            /* opcode C4h E2h 45h 73h  not defined */
                            /* opcode C4h E2h 45h 74h  not defined */
                            /* opcode C4h E2h 45h 75h  not defined */
                            /* opcode C4h E2h 45h 76h  not defined */
                            /* opcode C4h E2h 45h 77h  not defined */
                            /* opcode C4h E2h 45h 78h  not defined */
                            /* opcode C4h E2h 45h 79h  not defined */
                            /* opcode C4h E2h 45h 7Ah  not defined */
                            /* opcode C4h E2h 45h 7Bh  not defined */
                            /* opcode C4h E2h 45h 7Ch  not defined */
                            /* opcode C4h E2h 45h 7Dh  not defined */
                            /* opcode C4h E2h 45h 7Eh  not defined */
                            /* opcode C4h E2h 45h 7Fh  not defined */
                            /* opcode C4h E2h 45h 80h  not defined */
                            /* opcode C4h E2h 45h 81h  not defined */
                            /* opcode C4h E2h 45h 82h  not defined */
                            /* opcode C4h E2h 45h 83h  not defined */
                            /* opcode C4h E2h 45h 84h  not defined */
                            /* opcode C4h E2h 45h 85h  not defined */
                            /* opcode C4h E2h 45h 86h  not defined */
                            /* opcode C4h E2h 45h 87h  not defined */
                            /* opcode C4h E2h 45h 88h  not defined */
                            /* opcode C4h E2h 45h 89h  not defined */
                            /* opcode C4h E2h 45h 8Ah  not defined */
                            /* opcode C4h E2h 45h 8Bh  not defined */
                            /* opcode C4h E2h 45h 8Ch  not defined */
                            /* opcode C4h E2h 45h 8Dh  not defined */
                            /* opcode C4h E2h 45h 8Eh  not defined */
                            /* opcode C4h E2h 45h 8Fh  not defined */
                            /* opcode C4h E2h 45h 90h  not defined */
                            /* opcode C4h E2h 45h 91h  not defined */
                            /* opcode C4h E2h 45h 92h  not defined */
                            /* opcode C4h E2h 45h 93h  not defined */
                            /* opcode C4h E2h 45h 94h  not defined */
                            /* opcode C4h E2h 45h 95h  not defined */
                            /* opcode C4h E2h 45h 96h  not defined */
                            /* opcode C4h E2h 45h 97h  not defined */
                            /* opcode C4h E2h 45h 98h  not defined */
                            /* opcode C4h E2h 45h 99h  not defined */
                            /* opcode C4h E2h 45h 9Ah  not defined */
                            /* opcode C4h E2h 45h 9Bh  not defined */
                            /* opcode C4h E2h 45h 9Ch  not defined */
                            /* opcode C4h E2h 45h 9Dh  not defined */
                            /* opcode C4h E2h 45h 9Eh  not defined */
                            /* opcode C4h E2h 45h 9Fh  not defined */
                            /* opcode C4h E2h 45h A0h  not defined */
                            /* opcode C4h E2h 45h A1h  not defined */
                            /* opcode C4h E2h 45h A2h  not defined */
                            /* opcode C4h E2h 45h A3h  not defined */
                            /* opcode C4h E2h 45h A4h  not defined */
                            /* opcode C4h E2h 45h A5h  not defined */
                            /* opcode C4h E2h 45h A6h  not defined */
                            /* opcode C4h E2h 45h A7h  not defined */
                            /* opcode C4h E2h 45h A8h  not defined */
                            /* opcode C4h E2h 45h A9h  not defined */
                            /* opcode C4h E2h 45h AAh  not defined */
                            /* opcode C4h E2h 45h ABh  not defined */
                            /* opcode C4h E2h 45h ACh  not defined */
                            /* opcode C4h E2h 45h ADh  not defined */
                            /* opcode C4h E2h 45h AEh  not defined */
                            /* opcode C4h E2h 45h AFh  not defined */
                            /* opcode C4h E2h 45h B0h  not defined */
                            /* opcode C4h E2h 45h B1h  not defined */
                            /* opcode C4h E2h 45h B2h  not defined */
                            /* opcode C4h E2h 45h B3h  not defined */
                            /* opcode C4h E2h 45h B4h  not defined */
                            /* opcode C4h E2h 45h B5h  not defined */
                            /* opcode C4h E2h 45h B6h  not defined */
                            /* opcode C4h E2h 45h B7h  not defined */
                            /* opcode C4h E2h 45h B8h  not defined */
                            /* opcode C4h E2h 45h B9h  not defined */
                            /* opcode C4h E2h 45h BAh  not defined */
                            /* opcode C4h E2h 45h BBh  not defined */
                            /* opcode C4h E2h 45h BCh  not defined */
                            /* opcode C4h E2h 45h BDh  not defined */
                            /* opcode C4h E2h 45h BEh  not defined */
                            /* opcode C4h E2h 45h BFh  not defined */
                            /* opcode C4h E2h 45h C0h  not defined */
                            /* opcode C4h E2h 45h C1h  not defined */
                            /* opcode C4h E2h 45h C2h  not defined */
                            /* opcode C4h E2h 45h C3h  not defined */
                            /* opcode C4h E2h 45h C4h  not defined */
                            /* opcode C4h E2h 45h C5h  not defined */
                            /* opcode C4h E2h 45h C6h  not defined */
                            /* opcode C4h E2h 45h C7h  not defined */
                            /* opcode C4h E2h 45h C8h  not defined */
                            /* opcode C4h E2h 45h C9h  not defined */
                            /* opcode C4h E2h 45h CAh  not defined */
                            /* opcode C4h E2h 45h CBh  not defined */
                            /* opcode C4h E2h 45h CCh  not defined */
                            /* opcode C4h E2h 45h CDh  not defined */
                            /* opcode C4h E2h 45h CEh  not defined */
                            /* opcode C4h E2h 45h CFh  not defined */
                            /* opcode C4h E2h 45h D0h  not defined */
                            /* opcode C4h E2h 45h D1h  not defined */
                            /* opcode C4h E2h 45h D2h  not defined */
                            /* opcode C4h E2h 45h D3h  not defined */
                            /* opcode C4h E2h 45h D4h  not defined */
                            /* opcode C4h E2h 45h D5h  not defined */
                            /* opcode C4h E2h 45h D6h  not defined */
                            /* opcode C4h E2h 45h D7h  not defined */
                            /* opcode C4h E2h 45h D8h  not defined */
                            /* opcode C4h E2h 45h D9h  not defined */
                            /* opcode C4h E2h 45h DAh  not defined */
                            /* opcode C4h E2h 45h DBh  not defined */
                            /* opcode C4h E2h 45h DCh  not defined */
                            /* opcode C4h E2h 45h DDh  not defined */
                            /* opcode C4h E2h 45h DEh  not defined */
                            /* opcode C4h E2h 45h DFh  not defined */
                            /* opcode C4h E2h 45h E0h  not defined */
                            /* opcode C4h E2h 45h E1h  not defined */
                            /* opcode C4h E2h 45h E2h  not defined */
                            /* opcode C4h E2h 45h E3h  not defined */
                            /* opcode C4h E2h 45h E4h  not defined */
                            /* opcode C4h E2h 45h E5h  not defined */
                            /* opcode C4h E2h 45h E6h  not defined */
                            /* opcode C4h E2h 45h E7h  not defined */
                            /* opcode C4h E2h 45h E8h  not defined */
                            /* opcode C4h E2h 45h E9h  not defined */
                            /* opcode C4h E2h 45h EAh  not defined */
                            /* opcode C4h E2h 45h EBh  not defined */
                            /* opcode C4h E2h 45h ECh  not defined */
                            /* opcode C4h E2h 45h EDh  not defined */
                            /* opcode C4h E2h 45h EEh  not defined */
                            /* opcode C4h E2h 45h EFh  not defined */
                            /* opcode C4h E2h 45h F0h  not defined */
                            /* opcode C4h E2h 45h F1h  not defined */
                            /* opcode C4h E2h 45h F2h  not defined */
                            /* opcode C4h E2h 45h F3h  not defined */
                            /* opcode C4h E2h 45h F4h  not defined */
                            /* opcode C4h E2h 45h F5h  not defined */
                            /* opcode C4h E2h 45h F6h  not defined */
                            /* opcode C4h E2h 45h F7h  not defined */
                            /* opcode C4h E2h 45h F8h  not defined */
                            /* opcode C4h E2h 45h F9h  not defined */
                            /* opcode C4h E2h 45h FAh  not defined */
                            /* opcode C4h E2h 45h FBh  not defined */
                            /* opcode C4h E2h 45h FCh  not defined */
                            /* opcode C4h E2h 45h FDh  not defined */
                            /* opcode C4h E2h 45h FEh  not defined */
                            /* opcode C4h E2h 45h FFh  not defined */
                            default:
                                goto _x86decode_illegal_opcode;
                        };
/* End of opcodes starting with C4h E2h 45h */
                        break;
                    /* opcode C4h E2h 46h  not defined */
                    /* opcode C4h E2h 47h  not defined */
                    /* opcode C4h E2h 48h  not defined */
                    /* opcode C4h E2h 4Ah  not defined */
                    /* opcode C4h E2h 4Bh  not defined */
                    /* opcode C4h E2h 4Ch  not defined */
                    /* opcode C4h E2h 4Eh  not defined */
                    /* opcode C4h E2h 4Fh  not defined */
                    /* opcode C4h E2h 50h  not defined */
                    /* opcode C4h E2h 52h  not defined */
                    /* opcode C4h E2h 53h  not defined */
                    /* opcode C4h E2h 54h  not defined */
                    /* opcode C4h E2h 56h  not defined */
                    /* opcode C4h E2h 57h  not defined */
                    /* opcode C4h E2h 58h  not defined */
                    /* opcode C4h E2h 5Ah  not defined */
                    /* opcode C4h E2h 5Bh  not defined */
                    /* opcode C4h E2h 5Ch  not defined */
                    /* opcode C4h E2h 5Eh  not defined */
                    /* opcode C4h E2h 5Fh  not defined */
                    /* opcode C4h E2h 60h  not defined */
                    /* opcode C4h E2h 62h  not defined */
                    /* opcode C4h E2h 63h  not defined */
                    /* opcode C4h E2h 64h  not defined */
                    /* opcode C4h E2h 66h  not defined */
                    /* opcode C4h E2h 67h  not defined */
                    /* opcode C4h E2h 68h  not defined */
                    /* opcode C4h E2h 6Ah  not defined */
                    /* opcode C4h E2h 6Bh  not defined */
                    /* opcode C4h E2h 6Ch  not defined */
                    /* opcode C4h E2h 6Eh  not defined */
                    /* opcode C4h E2h 6Fh  not defined */
                    /* opcode C4h E2h 70h  not defined */
                    /* opcode C4h E2h 72h  not defined */
                    /* opcode C4h E2h 73h  not defined */
                    /* opcode C4h E2h 74h  not defined */
                    /* opcode C4h E2h 76h  not defined */
                    /* opcode C4h E2h 77h  not defined */
                    /* opcode C4h E2h 78h  not defined */
                    case 0x79: /* C4h E2h 79h        spec:  */
                        vex.V = ((~op) >> 3) & 7;
/* Opcodes starting with C4h E2h 79h */
                        op=IPFB();
                        _x86decode_begin_code32_addr32_opcode_parse_C4E279:
                        switch (op) {
                            /* opcode C4h E2h 79h 00h  not defined */
                            /* opcode C4h E2h 79h 01h  not defined */
                            /* opcode C4h E2h 79h 02h  not defined */
                            /* opcode C4h E2h 79h 03h  not defined */
                            /* opcode C4h E2h 79h 04h  not defined */
                            /* opcode C4h E2h 79h 05h  not defined */
                            /* opcode C4h E2h 79h 06h  not defined */
                            /* opcode C4h E2h 79h 07h  not defined */
                            /* opcode C4h E2h 79h 08h  not defined */
                            /* opcode C4h E2h 79h 09h  not defined */
                            /* opcode C4h E2h 79h 0Ah  not defined */
                            /* opcode C4h E2h 79h 0Bh  not defined */
                            case 0x0C: /* C4h E2h 79h 0Ch VPERMILPS sse(reg),sse(vsidx),sse(r/m)      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x0C mod/reg/rm */
                                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VPERMILPS XMM%u,XMM%u,%s",mrm.reg(),vex.V,IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                                break;
                            case 0x0D: /* C4h E2h 79h 0Dh VPERMILPD sse(reg),sse(vsidx),sse(r/m)      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x0D mod/reg/rm */
                                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VPERMILPD XMM%u,XMM%u,%s",mrm.reg(),vex.V,IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                                break;
                            /* opcode C4h E2h 79h 0Eh  not defined */
                            /* opcode C4h E2h 79h 0Fh  not defined */
                            /* opcode C4h E2h 79h 10h  not defined */
                            /* opcode C4h E2h 79h 11h  not defined */
                            /* opcode C4h E2h 79h 12h  not defined */
                            /* opcode C4h E2h 79h 13h  not defined */
                            /* opcode C4h E2h 79h 14h  not defined */
                            /* opcode C4h E2h 79h 15h  not defined */
                            /* opcode C4h E2h 79h 16h  not defined */
                            /* opcode C4h E2h 79h 17h  not defined */
                            case 0x18: /* C4h E2h 79h 18h        spec:  */
                                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                                _x86decode_begin_code32_addr32_opcode_parse_C4E27918:
/* Opcodes starting with C4h E2h 79h 18h */
                                switch (mrm.byte) {
                                    case 0x00: /* C4h E2h 79h 18h 00h VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=0 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x01: /* C4h E2h 79h 18h 01h VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=0 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x02: /* C4h E2h 79h 18h 02h VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=0 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x03: /* C4h E2h 79h 18h 03h VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=0 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x04: /* C4h E2h 79h 18h 04h VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=0 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x05: /* C4h E2h 79h 18h 05h VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=0 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x06: /* C4h E2h 79h 18h 06h VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=0 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x07: /* C4h E2h 79h 18h 07h VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=0 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x08: /* C4h E2h 79h 18h 08h VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=1 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x09: /* C4h E2h 79h 18h 09h VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=1 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x0A: /* C4h E2h 79h 18h 0Ah VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=1 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x0B: /* C4h E2h 79h 18h 0Bh VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=1 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x0C: /* C4h E2h 79h 18h 0Ch VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=1 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x0D: /* C4h E2h 79h 18h 0Dh VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=1 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x0E: /* C4h E2h 79h 18h 0Eh VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=1 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x0F: /* C4h E2h 79h 18h 0Fh VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=1 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x10: /* C4h E2h 79h 18h 10h VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=2 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x11: /* C4h E2h 79h 18h 11h VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=2 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x12: /* C4h E2h 79h 18h 12h VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=2 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x13: /* C4h E2h 79h 18h 13h VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=2 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x14: /* C4h E2h 79h 18h 14h VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=2 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x15: /* C4h E2h 79h 18h 15h VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=2 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x16: /* C4h E2h 79h 18h 16h VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=2 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x17: /* C4h E2h 79h 18h 17h VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=2 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x18: /* C4h E2h 79h 18h 18h VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=3 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x19: /* C4h E2h 79h 18h 19h VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=3 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x1A: /* C4h E2h 79h 18h 1Ah VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=3 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x1B: /* C4h E2h 79h 18h 1Bh VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=3 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x1C: /* C4h E2h 79h 18h 1Ch VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=3 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x1D: /* C4h E2h 79h 18h 1Dh VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=3 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x1E: /* C4h E2h 79h 18h 1Eh VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=3 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x1F: /* C4h E2h 79h 18h 1Fh VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=3 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x20: /* C4h E2h 79h 18h 20h VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=4 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x21: /* C4h E2h 79h 18h 21h VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=4 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x22: /* C4h E2h 79h 18h 22h VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=4 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x23: /* C4h E2h 79h 18h 23h VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=4 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x24: /* C4h E2h 79h 18h 24h VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=4 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x25: /* C4h E2h 79h 18h 25h VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=4 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x26: /* C4h E2h 79h 18h 26h VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=4 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x27: /* C4h E2h 79h 18h 27h VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=4 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x28: /* C4h E2h 79h 18h 28h VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=5 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x29: /* C4h E2h 79h 18h 29h VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=5 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x2A: /* C4h E2h 79h 18h 2Ah VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=5 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x2B: /* C4h E2h 79h 18h 2Bh VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=5 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x2C: /* C4h E2h 79h 18h 2Ch VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=5 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x2D: /* C4h E2h 79h 18h 2Dh VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=5 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x2E: /* C4h E2h 79h 18h 2Eh VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=5 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x2F: /* C4h E2h 79h 18h 2Fh VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=5 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x30: /* C4h E2h 79h 18h 30h VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=6 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x31: /* C4h E2h 79h 18h 31h VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=6 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x32: /* C4h E2h 79h 18h 32h VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=6 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x33: /* C4h E2h 79h 18h 33h VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=6 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x34: /* C4h E2h 79h 18h 34h VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=6 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x35: /* C4h E2h 79h 18h 35h VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=6 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x36: /* C4h E2h 79h 18h 36h VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=6 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x37: /* C4h E2h 79h 18h 37h VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=6 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x38: /* C4h E2h 79h 18h 38h VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=7 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x39: /* C4h E2h 79h 18h 39h VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=7 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x3A: /* C4h E2h 79h 18h 3Ah VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=7 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x3B: /* C4h E2h 79h 18h 3Bh VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=7 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x3C: /* C4h E2h 79h 18h 3Ch VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=7 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x3D: /* C4h E2h 79h 18h 3Dh VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=7 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x3E: /* C4h E2h 79h 18h 3Eh VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=7 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x3F: /* C4h E2h 79h 18h 3Fh VBROADCASTSS sse(reg),w32(r/m) mod=0 reg=7 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x40: /* C4h E2h 79h 18h 40h VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=0 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x41: /* C4h E2h 79h 18h 41h VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=0 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x42: /* C4h E2h 79h 18h 42h VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=0 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x43: /* C4h E2h 79h 18h 43h VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=0 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x44: /* C4h E2h 79h 18h 44h VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=0 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x45: /* C4h E2h 79h 18h 45h VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=0 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x46: /* C4h E2h 79h 18h 46h VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=0 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x47: /* C4h E2h 79h 18h 47h VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=0 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x48: /* C4h E2h 79h 18h 48h VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=1 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x49: /* C4h E2h 79h 18h 49h VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=1 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x4A: /* C4h E2h 79h 18h 4Ah VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=1 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x4B: /* C4h E2h 79h 18h 4Bh VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=1 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x4C: /* C4h E2h 79h 18h 4Ch VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=1 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x4D: /* C4h E2h 79h 18h 4Dh VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=1 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x4E: /* C4h E2h 79h 18h 4Eh VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=1 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x4F: /* C4h E2h 79h 18h 4Fh VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=1 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x50: /* C4h E2h 79h 18h 50h VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=2 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x51: /* C4h E2h 79h 18h 51h VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=2 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x52: /* C4h E2h 79h 18h 52h VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=2 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x53: /* C4h E2h 79h 18h 53h VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=2 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x54: /* C4h E2h 79h 18h 54h VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=2 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x55: /* C4h E2h 79h 18h 55h VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=2 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x56: /* C4h E2h 79h 18h 56h VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=2 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x57: /* C4h E2h 79h 18h 57h VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=2 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x58: /* C4h E2h 79h 18h 58h VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=3 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x59: /* C4h E2h 79h 18h 59h VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=3 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x5A: /* C4h E2h 79h 18h 5Ah VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=3 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x5B: /* C4h E2h 79h 18h 5Bh VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=3 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x5C: /* C4h E2h 79h 18h 5Ch VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=3 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x5D: /* C4h E2h 79h 18h 5Dh VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=3 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x5E: /* C4h E2h 79h 18h 5Eh VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=3 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x5F: /* C4h E2h 79h 18h 5Fh VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=3 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x60: /* C4h E2h 79h 18h 60h VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=4 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x61: /* C4h E2h 79h 18h 61h VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=4 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x62: /* C4h E2h 79h 18h 62h VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=4 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x63: /* C4h E2h 79h 18h 63h VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=4 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x64: /* C4h E2h 79h 18h 64h VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=4 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x65: /* C4h E2h 79h 18h 65h VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=4 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x66: /* C4h E2h 79h 18h 66h VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=4 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x67: /* C4h E2h 79h 18h 67h VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=4 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x68: /* C4h E2h 79h 18h 68h VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=5 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x69: /* C4h E2h 79h 18h 69h VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=5 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x6A: /* C4h E2h 79h 18h 6Ah VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=5 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x6B: /* C4h E2h 79h 18h 6Bh VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=5 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x6C: /* C4h E2h 79h 18h 6Ch VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=5 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x6D: /* C4h E2h 79h 18h 6Dh VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=5 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x6E: /* C4h E2h 79h 18h 6Eh VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=5 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x6F: /* C4h E2h 79h 18h 6Fh VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=5 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x70: /* C4h E2h 79h 18h 70h VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=6 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x71: /* C4h E2h 79h 18h 71h VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=6 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x72: /* C4h E2h 79h 18h 72h VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=6 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x73: /* C4h E2h 79h 18h 73h VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=6 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x74: /* C4h E2h 79h 18h 74h VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=6 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x75: /* C4h E2h 79h 18h 75h VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=6 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x76: /* C4h E2h 79h 18h 76h VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=6 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x77: /* C4h E2h 79h 18h 77h VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=6 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x78: /* C4h E2h 79h 18h 78h VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=7 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x79: /* C4h E2h 79h 18h 79h VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=7 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x7A: /* C4h E2h 79h 18h 7Ah VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=7 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x7B: /* C4h E2h 79h 18h 7Bh VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=7 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x7C: /* C4h E2h 79h 18h 7Ch VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=7 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x7D: /* C4h E2h 79h 18h 7Dh VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=7 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x7E: /* C4h E2h 79h 18h 7Eh VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=7 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x7F: /* C4h E2h 79h 18h 7Fh VBROADCASTSS sse(reg),w32(r/m) mod=1 reg=7 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x80: /* C4h E2h 79h 18h 80h VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=0 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x81: /* C4h E2h 79h 18h 81h VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=0 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x82: /* C4h E2h 79h 18h 82h VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=0 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x83: /* C4h E2h 79h 18h 83h VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=0 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x84: /* C4h E2h 79h 18h 84h VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=0 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x85: /* C4h E2h 79h 18h 85h VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=0 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x86: /* C4h E2h 79h 18h 86h VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=0 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x87: /* C4h E2h 79h 18h 87h VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=0 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x88: /* C4h E2h 79h 18h 88h VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=1 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x89: /* C4h E2h 79h 18h 89h VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=1 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x8A: /* C4h E2h 79h 18h 8Ah VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=1 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x8B: /* C4h E2h 79h 18h 8Bh VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=1 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x8C: /* C4h E2h 79h 18h 8Ch VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=1 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x8D: /* C4h E2h 79h 18h 8Dh VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=1 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x8E: /* C4h E2h 79h 18h 8Eh VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=1 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x8F: /* C4h E2h 79h 18h 8Fh VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=1 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x90: /* C4h E2h 79h 18h 90h VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=2 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x91: /* C4h E2h 79h 18h 91h VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=2 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x92: /* C4h E2h 79h 18h 92h VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=2 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x93: /* C4h E2h 79h 18h 93h VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=2 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x94: /* C4h E2h 79h 18h 94h VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=2 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x95: /* C4h E2h 79h 18h 95h VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=2 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x96: /* C4h E2h 79h 18h 96h VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=2 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x97: /* C4h E2h 79h 18h 97h VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=2 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x98: /* C4h E2h 79h 18h 98h VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=3 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x99: /* C4h E2h 79h 18h 99h VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=3 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x9A: /* C4h E2h 79h 18h 9Ah VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=3 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x9B: /* C4h E2h 79h 18h 9Bh VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=3 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x9C: /* C4h E2h 79h 18h 9Ch VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=3 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x9D: /* C4h E2h 79h 18h 9Dh VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=3 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x9E: /* C4h E2h 79h 18h 9Eh VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=3 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x9F: /* C4h E2h 79h 18h 9Fh VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=3 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xA0: /* C4h E2h 79h 18h A0h VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=4 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xA1: /* C4h E2h 79h 18h A1h VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=4 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xA2: /* C4h E2h 79h 18h A2h VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=4 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xA3: /* C4h E2h 79h 18h A3h VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=4 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xA4: /* C4h E2h 79h 18h A4h VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=4 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xA5: /* C4h E2h 79h 18h A5h VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=4 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xA6: /* C4h E2h 79h 18h A6h VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=4 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xA7: /* C4h E2h 79h 18h A7h VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=4 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xA8: /* C4h E2h 79h 18h A8h VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=5 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xA9: /* C4h E2h 79h 18h A9h VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=5 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xAA: /* C4h E2h 79h 18h AAh VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=5 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xAB: /* C4h E2h 79h 18h ABh VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=5 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xAC: /* C4h E2h 79h 18h ACh VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=5 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xAD: /* C4h E2h 79h 18h ADh VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=5 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xAE: /* C4h E2h 79h 18h AEh VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=5 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xAF: /* C4h E2h 79h 18h AFh VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=5 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xB0: /* C4h E2h 79h 18h B0h VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=6 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xB1: /* C4h E2h 79h 18h B1h VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=6 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xB2: /* C4h E2h 79h 18h B2h VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=6 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xB3: /* C4h E2h 79h 18h B3h VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=6 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xB4: /* C4h E2h 79h 18h B4h VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=6 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xB5: /* C4h E2h 79h 18h B5h VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=6 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xB6: /* C4h E2h 79h 18h B6h VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=6 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xB7: /* C4h E2h 79h 18h B7h VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=6 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xB8: /* C4h E2h 79h 18h B8h VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=7 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xB9: /* C4h E2h 79h 18h B9h VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=7 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xBA: /* C4h E2h 79h 18h BAh VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=7 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xBB: /* C4h E2h 79h 18h BBh VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=7 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xBC: /* C4h E2h 79h 18h BCh VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=7 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xBD: /* C4h E2h 79h 18h BDh VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=7 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xBE: /* C4h E2h 79h 18h BEh VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=7 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xBF: /* C4h E2h 79h 18h BFh VBROADCASTSS sse(reg),w32(r/m) mod=2 reg=7 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VBROADCASTSS XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,4,RC_REG,"w32"));
                                        break;
                                    case 0xC0: /* C4h E2h 79h 18h C0h VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=0 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xC1: /* C4h E2h 79h 18h C1h VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=0 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xC2: /* C4h E2h 79h 18h C2h VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=0 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xC3: /* C4h E2h 79h 18h C3h VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=0 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xC4: /* C4h E2h 79h 18h C4h VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=0 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xC5: /* C4h E2h 79h 18h C5h VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=0 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xC6: /* C4h E2h 79h 18h C6h VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=0 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xC7: /* C4h E2h 79h 18h C7h VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=0 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xC8: /* C4h E2h 79h 18h C8h VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=1 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xC9: /* C4h E2h 79h 18h C9h VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=1 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xCA: /* C4h E2h 79h 18h CAh VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=1 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xCB: /* C4h E2h 79h 18h CBh VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=1 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xCC: /* C4h E2h 79h 18h CCh VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=1 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xCD: /* C4h E2h 79h 18h CDh VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=1 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xCE: /* C4h E2h 79h 18h CEh VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=1 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xCF: /* C4h E2h 79h 18h CFh VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=1 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xD0: /* C4h E2h 79h 18h D0h VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=2 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xD1: /* C4h E2h 79h 18h D1h VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=2 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xD2: /* C4h E2h 79h 18h D2h VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=2 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xD3: /* C4h E2h 79h 18h D3h VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=2 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xD4: /* C4h E2h 79h 18h D4h VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=2 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xD5: /* C4h E2h 79h 18h D5h VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=2 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xD6: /* C4h E2h 79h 18h D6h VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=2 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xD7: /* C4h E2h 79h 18h D7h VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=2 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xD8: /* C4h E2h 79h 18h D8h VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=3 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xD9: /* C4h E2h 79h 18h D9h VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=3 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xDA: /* C4h E2h 79h 18h DAh VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=3 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xDB: /* C4h E2h 79h 18h DBh VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=3 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xDC: /* C4h E2h 79h 18h DCh VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=3 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xDD: /* C4h E2h 79h 18h DDh VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=3 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xDE: /* C4h E2h 79h 18h DEh VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=3 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xDF: /* C4h E2h 79h 18h DFh VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=3 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xE0: /* C4h E2h 79h 18h E0h VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=4 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xE1: /* C4h E2h 79h 18h E1h VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=4 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xE2: /* C4h E2h 79h 18h E2h VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=4 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xE3: /* C4h E2h 79h 18h E3h VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=4 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xE4: /* C4h E2h 79h 18h E4h VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=4 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xE5: /* C4h E2h 79h 18h E5h VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=4 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xE6: /* C4h E2h 79h 18h E6h VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=4 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xE7: /* C4h E2h 79h 18h E7h VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=4 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xE8: /* C4h E2h 79h 18h E8h VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=5 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xE9: /* C4h E2h 79h 18h E9h VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=5 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xEA: /* C4h E2h 79h 18h EAh VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=5 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xEB: /* C4h E2h 79h 18h EBh VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=5 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xEC: /* C4h E2h 79h 18h ECh VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=5 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xED: /* C4h E2h 79h 18h EDh VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=5 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xEE: /* C4h E2h 79h 18h EEh VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=5 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xEF: /* C4h E2h 79h 18h EFh VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=5 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xF0: /* C4h E2h 79h 18h F0h VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=6 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xF1: /* C4h E2h 79h 18h F1h VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=6 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xF2: /* C4h E2h 79h 18h F2h VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=6 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xF3: /* C4h E2h 79h 18h F3h VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=6 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xF4: /* C4h E2h 79h 18h F4h VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=6 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xF5: /* C4h E2h 79h 18h F5h VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=6 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xF6: /* C4h E2h 79h 18h F6h VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=6 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xF7: /* C4h E2h 79h 18h F7h VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=6 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xF8: /* C4h E2h 79h 18h F8h VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=7 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xF9: /* C4h E2h 79h 18h F9h VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=7 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xFA: /* C4h E2h 79h 18h FAh VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=7 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xFB: /* C4h E2h 79h 18h FBh VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=7 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xFC: /* C4h E2h 79h 18h FCh VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=7 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xFD: /* C4h E2h 79h 18h FDh VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=7 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xFE: /* C4h E2h 79h 18h FEh VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=7 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xFF: /* C4h E2h 79h 18h FFh VBROADCASTSS sse(reg),sse(r/m) mod=3 reg=7 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VBROADCASTSS XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                                        break;
                                    default:
                                        goto _x86decode_illegal_opcode;
                                };
/* End of opcodes starting with C4h E2h 79h 18h */
                                break;
                            /* opcode C4h E2h 79h 19h  not defined */
                            /* opcode C4h E2h 79h 1Ah  not defined */
                            /* opcode C4h E2h 79h 1Bh  not defined */
                            /* opcode C4h E2h 79h 1Ch  not defined */
                            /* opcode C4h E2h 79h 1Dh  not defined */
                            /* opcode C4h E2h 79h 1Eh  not defined */
                            /* opcode C4h E2h 79h 1Fh  not defined */
                            /* opcode C4h E2h 79h 20h  not defined */
                            /* opcode C4h E2h 79h 21h  not defined */
                            /* opcode C4h E2h 79h 22h  not defined */
                            /* opcode C4h E2h 79h 23h  not defined */
                            /* opcode C4h E2h 79h 24h  not defined */
                            /* opcode C4h E2h 79h 25h  not defined */
                            /* opcode C4h E2h 79h 26h  not defined */
                            /* opcode C4h E2h 79h 27h  not defined */
                            /* opcode C4h E2h 79h 28h  not defined */
                            /* opcode C4h E2h 79h 29h  not defined */
                            /* opcode C4h E2h 79h 2Ah  not defined */
                            /* opcode C4h E2h 79h 2Bh  not defined */
                            case 0x2C: /* C4h E2h 79h 2Ch        spec:  */
                                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                                _x86decode_begin_code32_addr32_opcode_parse_C4E2792C:
/* Opcodes starting with C4h E2h 79h 2Ch */
                                switch (mrm.byte) {
                                    case 0x00: /* C4h E2h 79h 2Ch 00h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=0 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x01: /* C4h E2h 79h 2Ch 01h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=0 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x02: /* C4h E2h 79h 2Ch 02h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=0 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x03: /* C4h E2h 79h 2Ch 03h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=0 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x04: /* C4h E2h 79h 2Ch 04h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=0 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x05: /* C4h E2h 79h 2Ch 05h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=0 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x06: /* C4h E2h 79h 2Ch 06h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=0 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x07: /* C4h E2h 79h 2Ch 07h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=0 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x08: /* C4h E2h 79h 2Ch 08h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=1 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x09: /* C4h E2h 79h 2Ch 09h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=1 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x0A: /* C4h E2h 79h 2Ch 0Ah VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=1 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x0B: /* C4h E2h 79h 2Ch 0Bh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=1 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x0C: /* C4h E2h 79h 2Ch 0Ch VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=1 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x0D: /* C4h E2h 79h 2Ch 0Dh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=1 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x0E: /* C4h E2h 79h 2Ch 0Eh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=1 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x0F: /* C4h E2h 79h 2Ch 0Fh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=1 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x10: /* C4h E2h 79h 2Ch 10h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=2 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x11: /* C4h E2h 79h 2Ch 11h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=2 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x12: /* C4h E2h 79h 2Ch 12h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=2 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x13: /* C4h E2h 79h 2Ch 13h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=2 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x14: /* C4h E2h 79h 2Ch 14h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=2 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x15: /* C4h E2h 79h 2Ch 15h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=2 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x16: /* C4h E2h 79h 2Ch 16h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=2 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x17: /* C4h E2h 79h 2Ch 17h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=2 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x18: /* C4h E2h 79h 2Ch 18h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=3 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x19: /* C4h E2h 79h 2Ch 19h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=3 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x1A: /* C4h E2h 79h 2Ch 1Ah VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=3 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x1B: /* C4h E2h 79h 2Ch 1Bh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=3 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x1C: /* C4h E2h 79h 2Ch 1Ch VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=3 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x1D: /* C4h E2h 79h 2Ch 1Dh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=3 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x1E: /* C4h E2h 79h 2Ch 1Eh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=3 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x1F: /* C4h E2h 79h 2Ch 1Fh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=3 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x20: /* C4h E2h 79h 2Ch 20h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=4 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x21: /* C4h E2h 79h 2Ch 21h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=4 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x22: /* C4h E2h 79h 2Ch 22h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=4 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x23: /* C4h E2h 79h 2Ch 23h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=4 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x24: /* C4h E2h 79h 2Ch 24h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=4 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x25: /* C4h E2h 79h 2Ch 25h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=4 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x26: /* C4h E2h 79h 2Ch 26h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=4 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x27: /* C4h E2h 79h 2Ch 27h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=4 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x28: /* C4h E2h 79h 2Ch 28h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=5 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x29: /* C4h E2h 79h 2Ch 29h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=5 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x2A: /* C4h E2h 79h 2Ch 2Ah VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=5 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x2B: /* C4h E2h 79h 2Ch 2Bh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=5 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x2C: /* C4h E2h 79h 2Ch 2Ch VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=5 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x2D: /* C4h E2h 79h 2Ch 2Dh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=5 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x2E: /* C4h E2h 79h 2Ch 2Eh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=5 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x2F: /* C4h E2h 79h 2Ch 2Fh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=5 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x30: /* C4h E2h 79h 2Ch 30h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=6 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x31: /* C4h E2h 79h 2Ch 31h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=6 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x32: /* C4h E2h 79h 2Ch 32h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=6 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x33: /* C4h E2h 79h 2Ch 33h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=6 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x34: /* C4h E2h 79h 2Ch 34h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=6 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x35: /* C4h E2h 79h 2Ch 35h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=6 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x36: /* C4h E2h 79h 2Ch 36h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=6 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x37: /* C4h E2h 79h 2Ch 37h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=6 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x38: /* C4h E2h 79h 2Ch 38h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=7 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x39: /* C4h E2h 79h 2Ch 39h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=7 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x3A: /* C4h E2h 79h 2Ch 3Ah VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=7 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x3B: /* C4h E2h 79h 2Ch 3Bh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=7 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x3C: /* C4h E2h 79h 2Ch 3Ch VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=7 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x3D: /* C4h E2h 79h 2Ch 3Dh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=7 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x3E: /* C4h E2h 79h 2Ch 3Eh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=7 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x3F: /* C4h E2h 79h 2Ch 3Fh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=0 reg=7 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x40: /* C4h E2h 79h 2Ch 40h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=0 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x41: /* C4h E2h 79h 2Ch 41h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=0 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x42: /* C4h E2h 79h 2Ch 42h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=0 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x43: /* C4h E2h 79h 2Ch 43h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=0 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x44: /* C4h E2h 79h 2Ch 44h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=0 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x45: /* C4h E2h 79h 2Ch 45h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=0 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x46: /* C4h E2h 79h 2Ch 46h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=0 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x47: /* C4h E2h 79h 2Ch 47h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=0 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x48: /* C4h E2h 79h 2Ch 48h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=1 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x49: /* C4h E2h 79h 2Ch 49h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=1 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x4A: /* C4h E2h 79h 2Ch 4Ah VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=1 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x4B: /* C4h E2h 79h 2Ch 4Bh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=1 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x4C: /* C4h E2h 79h 2Ch 4Ch VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=1 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x4D: /* C4h E2h 79h 2Ch 4Dh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=1 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x4E: /* C4h E2h 79h 2Ch 4Eh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=1 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x4F: /* C4h E2h 79h 2Ch 4Fh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=1 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x50: /* C4h E2h 79h 2Ch 50h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=2 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x51: /* C4h E2h 79h 2Ch 51h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=2 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x52: /* C4h E2h 79h 2Ch 52h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=2 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x53: /* C4h E2h 79h 2Ch 53h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=2 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x54: /* C4h E2h 79h 2Ch 54h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=2 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x55: /* C4h E2h 79h 2Ch 55h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=2 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x56: /* C4h E2h 79h 2Ch 56h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=2 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x57: /* C4h E2h 79h 2Ch 57h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=2 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x58: /* C4h E2h 79h 2Ch 58h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=3 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x59: /* C4h E2h 79h 2Ch 59h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=3 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x5A: /* C4h E2h 79h 2Ch 5Ah VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=3 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x5B: /* C4h E2h 79h 2Ch 5Bh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=3 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x5C: /* C4h E2h 79h 2Ch 5Ch VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=3 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x5D: /* C4h E2h 79h 2Ch 5Dh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=3 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x5E: /* C4h E2h 79h 2Ch 5Eh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=3 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x5F: /* C4h E2h 79h 2Ch 5Fh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=3 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x60: /* C4h E2h 79h 2Ch 60h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=4 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x61: /* C4h E2h 79h 2Ch 61h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=4 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x62: /* C4h E2h 79h 2Ch 62h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=4 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x63: /* C4h E2h 79h 2Ch 63h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=4 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x64: /* C4h E2h 79h 2Ch 64h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=4 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x65: /* C4h E2h 79h 2Ch 65h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=4 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x66: /* C4h E2h 79h 2Ch 66h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=4 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x67: /* C4h E2h 79h 2Ch 67h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=4 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x68: /* C4h E2h 79h 2Ch 68h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=5 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x69: /* C4h E2h 79h 2Ch 69h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=5 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x6A: /* C4h E2h 79h 2Ch 6Ah VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=5 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x6B: /* C4h E2h 79h 2Ch 6Bh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=5 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x6C: /* C4h E2h 79h 2Ch 6Ch VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=5 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x6D: /* C4h E2h 79h 2Ch 6Dh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=5 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x6E: /* C4h E2h 79h 2Ch 6Eh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=5 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x6F: /* C4h E2h 79h 2Ch 6Fh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=5 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x70: /* C4h E2h 79h 2Ch 70h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=6 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x71: /* C4h E2h 79h 2Ch 71h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=6 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x72: /* C4h E2h 79h 2Ch 72h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=6 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x73: /* C4h E2h 79h 2Ch 73h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=6 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x74: /* C4h E2h 79h 2Ch 74h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=6 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x75: /* C4h E2h 79h 2Ch 75h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=6 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x76: /* C4h E2h 79h 2Ch 76h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=6 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x77: /* C4h E2h 79h 2Ch 77h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=6 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x78: /* C4h E2h 79h 2Ch 78h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=7 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x79: /* C4h E2h 79h 2Ch 79h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=7 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x7A: /* C4h E2h 79h 2Ch 7Ah VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=7 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x7B: /* C4h E2h 79h 2Ch 7Bh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=7 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x7C: /* C4h E2h 79h 2Ch 7Ch VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=7 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x7D: /* C4h E2h 79h 2Ch 7Dh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=7 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x7E: /* C4h E2h 79h 2Ch 7Eh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=7 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x7F: /* C4h E2h 79h 2Ch 7Fh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=1 reg=7 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x80: /* C4h E2h 79h 2Ch 80h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=0 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x81: /* C4h E2h 79h 2Ch 81h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=0 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x82: /* C4h E2h 79h 2Ch 82h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=0 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x83: /* C4h E2h 79h 2Ch 83h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=0 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x84: /* C4h E2h 79h 2Ch 84h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=0 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x85: /* C4h E2h 79h 2Ch 85h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=0 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x86: /* C4h E2h 79h 2Ch 86h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=0 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x87: /* C4h E2h 79h 2Ch 87h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=0 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x88: /* C4h E2h 79h 2Ch 88h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=1 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x89: /* C4h E2h 79h 2Ch 89h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=1 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x8A: /* C4h E2h 79h 2Ch 8Ah VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=1 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x8B: /* C4h E2h 79h 2Ch 8Bh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=1 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x8C: /* C4h E2h 79h 2Ch 8Ch VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=1 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x8D: /* C4h E2h 79h 2Ch 8Dh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=1 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x8E: /* C4h E2h 79h 2Ch 8Eh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=1 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x8F: /* C4h E2h 79h 2Ch 8Fh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=1 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x90: /* C4h E2h 79h 2Ch 90h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=2 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x91: /* C4h E2h 79h 2Ch 91h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=2 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x92: /* C4h E2h 79h 2Ch 92h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=2 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x93: /* C4h E2h 79h 2Ch 93h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=2 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x94: /* C4h E2h 79h 2Ch 94h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=2 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x95: /* C4h E2h 79h 2Ch 95h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=2 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x96: /* C4h E2h 79h 2Ch 96h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=2 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x97: /* C4h E2h 79h 2Ch 97h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=2 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x98: /* C4h E2h 79h 2Ch 98h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=3 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x99: /* C4h E2h 79h 2Ch 99h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=3 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x9A: /* C4h E2h 79h 2Ch 9Ah VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=3 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x9B: /* C4h E2h 79h 2Ch 9Bh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=3 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x9C: /* C4h E2h 79h 2Ch 9Ch VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=3 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x9D: /* C4h E2h 79h 2Ch 9Dh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=3 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x9E: /* C4h E2h 79h 2Ch 9Eh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=3 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x9F: /* C4h E2h 79h 2Ch 9Fh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=3 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xA0: /* C4h E2h 79h 2Ch A0h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=4 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xA1: /* C4h E2h 79h 2Ch A1h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=4 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xA2: /* C4h E2h 79h 2Ch A2h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=4 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xA3: /* C4h E2h 79h 2Ch A3h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=4 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xA4: /* C4h E2h 79h 2Ch A4h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=4 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xA5: /* C4h E2h 79h 2Ch A5h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=4 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xA6: /* C4h E2h 79h 2Ch A6h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=4 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xA7: /* C4h E2h 79h 2Ch A7h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=4 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xA8: /* C4h E2h 79h 2Ch A8h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=5 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xA9: /* C4h E2h 79h 2Ch A9h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=5 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xAA: /* C4h E2h 79h 2Ch AAh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=5 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xAB: /* C4h E2h 79h 2Ch ABh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=5 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xAC: /* C4h E2h 79h 2Ch ACh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=5 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xAD: /* C4h E2h 79h 2Ch ADh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=5 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xAE: /* C4h E2h 79h 2Ch AEh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=5 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xAF: /* C4h E2h 79h 2Ch AFh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=5 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xB0: /* C4h E2h 79h 2Ch B0h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=6 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xB1: /* C4h E2h 79h 2Ch B1h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=6 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xB2: /* C4h E2h 79h 2Ch B2h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=6 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xB3: /* C4h E2h 79h 2Ch B3h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=6 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xB4: /* C4h E2h 79h 2Ch B4h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=6 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xB5: /* C4h E2h 79h 2Ch B5h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=6 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xB6: /* C4h E2h 79h 2Ch B6h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=6 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xB7: /* C4h E2h 79h 2Ch B7h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=6 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xB8: /* C4h E2h 79h 2Ch B8h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=7 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xB9: /* C4h E2h 79h 2Ch B9h VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=7 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xBA: /* C4h E2h 79h 2Ch BAh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=7 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xBB: /* C4h E2h 79h 2Ch BBh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=7 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xBC: /* C4h E2h 79h 2Ch BCh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=7 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xBD: /* C4h E2h 79h 2Ch BDh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=7 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xBE: /* C4h E2h 79h 2Ch BEh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=7 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xBF: /* C4h E2h 79h 2Ch BFh VMASKMOVPS sse(reg),sse(vsidx),sse(r/m) mod=2 reg=7 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VMASKMOVPS XMM%u,XMM%u,%s",mrm.reg(),vex.V,IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                                        break;
                                    /* opcode C4h E2h 79h 2Ch C0h  not defined */
                                    /* opcode C4h E2h 79h 2Ch C1h  not defined */
                                    /* opcode C4h E2h 79h 2Ch C2h  not defined */
                                    /* opcode C4h E2h 79h 2Ch C3h  not defined */
                                    /* opcode C4h E2h 79h 2Ch C4h  not defined */
                                    /* opcode C4h E2h 79h 2Ch C5h  not defined */
                                    /* opcode C4h E2h 79h 2Ch C6h  not defined */
                                    /* opcode C4h E2h 79h 2Ch C7h  not defined */
                                    /* opcode C4h E2h 79h 2Ch C8h  not defined */
                                    /* opcode C4h E2h 79h 2Ch C9h  not defined */
                                    /* opcode C4h E2h 79h 2Ch CAh  not defined */
                                    /* opcode C4h E2h 79h 2Ch CBh  not defined */
                                    /* opcode C4h E2h 79h 2Ch CCh  not defined */
                                    /* opcode C4h E2h 79h 2Ch CDh  not defined */
                                    /* opcode C4h E2h 79h 2Ch CEh  not defined */
                                    /* opcode C4h E2h 79h 2Ch CFh  not defined */
                                    /* opcode C4h E2h 79h 2Ch D0h  not defined */
                                    /* opcode C4h E2h 79h 2Ch D1h  not defined */
                                    /* opcode C4h E2h 79h 2Ch D2h  not defined */
                                    /* opcode C4h E2h 79h 2Ch D3h  not defined */
                                    /* opcode C4h E2h 79h 2Ch D4h  not defined */
                                    /* opcode C4h E2h 79h 2Ch D5h  not defined */
                                    /* opcode C4h E2h 79h 2Ch D6h  not defined */
                                    /* opcode C4h E2h 79h 2Ch D7h  not defined */
                                    /* opcode C4h E2h 79h 2Ch D8h  not defined */
                                    /* opcode C4h E2h 79h 2Ch D9h  not defined */
                                    /* opcode C4h E2h 79h 2Ch DAh  not defined */
                                    /* opcode C4h E2h 79h 2Ch DBh  not defined */
                                    /* opcode C4h E2h 79h 2Ch DCh  not defined */
                                    /* opcode C4h E2h 79h 2Ch DDh  not defined */
                                    /* opcode C4h E2h 79h 2Ch DEh  not defined */
                                    /* opcode C4h E2h 79h 2Ch DFh  not defined */
                                    /* opcode C4h E2h 79h 2Ch E0h  not defined */
                                    /* opcode C4h E2h 79h 2Ch E1h  not defined */
                                    /* opcode C4h E2h 79h 2Ch E2h  not defined */
                                    /* opcode C4h E2h 79h 2Ch E3h  not defined */
                                    /* opcode C4h E2h 79h 2Ch E4h  not defined */
                                    /* opcode C4h E2h 79h 2Ch E5h  not defined */
                                    /* opcode C4h E2h 79h 2Ch E6h  not defined */
                                    /* opcode C4h E2h 79h 2Ch E7h  not defined */
                                    /* opcode C4h E2h 79h 2Ch E8h  not defined */
                                    /* opcode C4h E2h 79h 2Ch E9h  not defined */
                                    /* opcode C4h E2h 79h 2Ch EAh  not defined */
                                    /* opcode C4h E2h 79h 2Ch EBh  not defined */
                                    /* opcode C4h E2h 79h 2Ch ECh  not defined */
                                    /* opcode C4h E2h 79h 2Ch EDh  not defined */
                                    /* opcode C4h E2h 79h 2Ch EEh  not defined */
                                    /* opcode C4h E2h 79h 2Ch EFh  not defined */
                                    /* opcode C4h E2h 79h 2Ch F0h  not defined */
                                    /* opcode C4h E2h 79h 2Ch F1h  not defined */
                                    /* opcode C4h E2h 79h 2Ch F2h  not defined */
                                    /* opcode C4h E2h 79h 2Ch F3h  not defined */
                                    /* opcode C4h E2h 79h 2Ch F4h  not defined */
                                    /* opcode C4h E2h 79h 2Ch F5h  not defined */
                                    /* opcode C4h E2h 79h 2Ch F6h  not defined */
                                    /* opcode C4h E2h 79h 2Ch F7h  not defined */
                                    /* opcode C4h E2h 79h 2Ch F8h  not defined */
                                    /* opcode C4h E2h 79h 2Ch F9h  not defined */
                                    /* opcode C4h E2h 79h 2Ch FAh  not defined */
                                    /* opcode C4h E2h 79h 2Ch FBh  not defined */
                                    /* opcode C4h E2h 79h 2Ch FCh  not defined */
                                    /* opcode C4h E2h 79h 2Ch FDh  not defined */
                                    /* opcode C4h E2h 79h 2Ch FEh  not defined */
                                    /* opcode C4h E2h 79h 2Ch FFh  not defined */
                                    default:
                                        goto _x86decode_illegal_opcode;
                                };
/* End of opcodes starting with C4h E2h 79h 2Ch */
                                break;
                            case 0x2D: /* C4h E2h 79h 2Dh        spec:  */
                                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                                _x86decode_begin_code32_addr32_opcode_parse_C4E2792D:
/* Opcodes starting with C4h E2h 79h 2Dh */
                                switch (mrm.byte) {
                                    case 0x00: /* C4h E2h 79h 2Dh 00h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=0 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x01: /* C4h E2h 79h 2Dh 01h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=0 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x02: /* C4h E2h 79h 2Dh 02h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=0 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x03: /* C4h E2h 79h 2Dh 03h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=0 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x04: /* C4h E2h 79h 2Dh 04h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=0 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x05: /* C4h E2h 79h 2Dh 05h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=0 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x06: /* C4h E2h 79h 2Dh 06h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=0 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x07: /* C4h E2h 79h 2Dh 07h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=0 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x08: /* C4h E2h 79h 2Dh 08h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=1 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x09: /* C4h E2h 79h 2Dh 09h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=1 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x0A: /* C4h E2h 79h 2Dh 0Ah VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=1 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x0B: /* C4h E2h 79h 2Dh 0Bh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=1 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x0C: /* C4h E2h 79h 2Dh 0Ch VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=1 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x0D: /* C4h E2h 79h 2Dh 0Dh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=1 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x0E: /* C4h E2h 79h 2Dh 0Eh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=1 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x0F: /* C4h E2h 79h 2Dh 0Fh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=1 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x10: /* C4h E2h 79h 2Dh 10h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=2 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x11: /* C4h E2h 79h 2Dh 11h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=2 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x12: /* C4h E2h 79h 2Dh 12h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=2 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x13: /* C4h E2h 79h 2Dh 13h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=2 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x14: /* C4h E2h 79h 2Dh 14h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=2 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x15: /* C4h E2h 79h 2Dh 15h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=2 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x16: /* C4h E2h 79h 2Dh 16h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=2 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x17: /* C4h E2h 79h 2Dh 17h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=2 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x18: /* C4h E2h 79h 2Dh 18h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=3 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x19: /* C4h E2h 79h 2Dh 19h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=3 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x1A: /* C4h E2h 79h 2Dh 1Ah VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=3 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x1B: /* C4h E2h 79h 2Dh 1Bh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=3 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x1C: /* C4h E2h 79h 2Dh 1Ch VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=3 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x1D: /* C4h E2h 79h 2Dh 1Dh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=3 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x1E: /* C4h E2h 79h 2Dh 1Eh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=3 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x1F: /* C4h E2h 79h 2Dh 1Fh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=3 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x20: /* C4h E2h 79h 2Dh 20h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=4 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x21: /* C4h E2h 79h 2Dh 21h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=4 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x22: /* C4h E2h 79h 2Dh 22h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=4 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x23: /* C4h E2h 79h 2Dh 23h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=4 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x24: /* C4h E2h 79h 2Dh 24h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=4 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x25: /* C4h E2h 79h 2Dh 25h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=4 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x26: /* C4h E2h 79h 2Dh 26h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=4 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x27: /* C4h E2h 79h 2Dh 27h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=4 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x28: /* C4h E2h 79h 2Dh 28h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=5 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x29: /* C4h E2h 79h 2Dh 29h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=5 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x2A: /* C4h E2h 79h 2Dh 2Ah VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=5 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x2B: /* C4h E2h 79h 2Dh 2Bh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=5 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x2C: /* C4h E2h 79h 2Dh 2Ch VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=5 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x2D: /* C4h E2h 79h 2Dh 2Dh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=5 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x2E: /* C4h E2h 79h 2Dh 2Eh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=5 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x2F: /* C4h E2h 79h 2Dh 2Fh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=5 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x30: /* C4h E2h 79h 2Dh 30h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=6 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x31: /* C4h E2h 79h 2Dh 31h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=6 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x32: /* C4h E2h 79h 2Dh 32h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=6 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x33: /* C4h E2h 79h 2Dh 33h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=6 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x34: /* C4h E2h 79h 2Dh 34h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=6 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x35: /* C4h E2h 79h 2Dh 35h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=6 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x36: /* C4h E2h 79h 2Dh 36h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=6 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x37: /* C4h E2h 79h 2Dh 37h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=6 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x38: /* C4h E2h 79h 2Dh 38h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=7 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x39: /* C4h E2h 79h 2Dh 39h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=7 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x3A: /* C4h E2h 79h 2Dh 3Ah VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=7 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x3B: /* C4h E2h 79h 2Dh 3Bh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=7 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x3C: /* C4h E2h 79h 2Dh 3Ch VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=7 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x3D: /* C4h E2h 79h 2Dh 3Dh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=7 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x3E: /* C4h E2h 79h 2Dh 3Eh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=7 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x3F: /* C4h E2h 79h 2Dh 3Fh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=0 reg=7 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x40: /* C4h E2h 79h 2Dh 40h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=0 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x41: /* C4h E2h 79h 2Dh 41h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=0 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x42: /* C4h E2h 79h 2Dh 42h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=0 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x43: /* C4h E2h 79h 2Dh 43h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=0 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x44: /* C4h E2h 79h 2Dh 44h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=0 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x45: /* C4h E2h 79h 2Dh 45h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=0 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x46: /* C4h E2h 79h 2Dh 46h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=0 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x47: /* C4h E2h 79h 2Dh 47h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=0 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x48: /* C4h E2h 79h 2Dh 48h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=1 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x49: /* C4h E2h 79h 2Dh 49h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=1 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x4A: /* C4h E2h 79h 2Dh 4Ah VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=1 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x4B: /* C4h E2h 79h 2Dh 4Bh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=1 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x4C: /* C4h E2h 79h 2Dh 4Ch VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=1 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x4D: /* C4h E2h 79h 2Dh 4Dh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=1 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x4E: /* C4h E2h 79h 2Dh 4Eh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=1 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x4F: /* C4h E2h 79h 2Dh 4Fh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=1 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x50: /* C4h E2h 79h 2Dh 50h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=2 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x51: /* C4h E2h 79h 2Dh 51h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=2 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x52: /* C4h E2h 79h 2Dh 52h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=2 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x53: /* C4h E2h 79h 2Dh 53h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=2 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x54: /* C4h E2h 79h 2Dh 54h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=2 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x55: /* C4h E2h 79h 2Dh 55h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=2 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x56: /* C4h E2h 79h 2Dh 56h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=2 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x57: /* C4h E2h 79h 2Dh 57h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=2 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x58: /* C4h E2h 79h 2Dh 58h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=3 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x59: /* C4h E2h 79h 2Dh 59h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=3 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x5A: /* C4h E2h 79h 2Dh 5Ah VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=3 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x5B: /* C4h E2h 79h 2Dh 5Bh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=3 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x5C: /* C4h E2h 79h 2Dh 5Ch VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=3 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x5D: /* C4h E2h 79h 2Dh 5Dh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=3 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x5E: /* C4h E2h 79h 2Dh 5Eh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=3 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x5F: /* C4h E2h 79h 2Dh 5Fh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=3 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x60: /* C4h E2h 79h 2Dh 60h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=4 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x61: /* C4h E2h 79h 2Dh 61h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=4 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x62: /* C4h E2h 79h 2Dh 62h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=4 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x63: /* C4h E2h 79h 2Dh 63h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=4 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x64: /* C4h E2h 79h 2Dh 64h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=4 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x65: /* C4h E2h 79h 2Dh 65h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=4 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x66: /* C4h E2h 79h 2Dh 66h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=4 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x67: /* C4h E2h 79h 2Dh 67h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=4 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x68: /* C4h E2h 79h 2Dh 68h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=5 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x69: /* C4h E2h 79h 2Dh 69h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=5 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x6A: /* C4h E2h 79h 2Dh 6Ah VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=5 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x6B: /* C4h E2h 79h 2Dh 6Bh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=5 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x6C: /* C4h E2h 79h 2Dh 6Ch VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=5 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x6D: /* C4h E2h 79h 2Dh 6Dh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=5 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x6E: /* C4h E2h 79h 2Dh 6Eh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=5 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x6F: /* C4h E2h 79h 2Dh 6Fh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=5 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x70: /* C4h E2h 79h 2Dh 70h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=6 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x71: /* C4h E2h 79h 2Dh 71h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=6 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x72: /* C4h E2h 79h 2Dh 72h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=6 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x73: /* C4h E2h 79h 2Dh 73h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=6 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x74: /* C4h E2h 79h 2Dh 74h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=6 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x75: /* C4h E2h 79h 2Dh 75h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=6 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x76: /* C4h E2h 79h 2Dh 76h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=6 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x77: /* C4h E2h 79h 2Dh 77h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=6 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x78: /* C4h E2h 79h 2Dh 78h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=7 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x79: /* C4h E2h 79h 2Dh 79h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=7 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x7A: /* C4h E2h 79h 2Dh 7Ah VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=7 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x7B: /* C4h E2h 79h 2Dh 7Bh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=7 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x7C: /* C4h E2h 79h 2Dh 7Ch VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=7 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x7D: /* C4h E2h 79h 2Dh 7Dh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=7 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x7E: /* C4h E2h 79h 2Dh 7Eh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=7 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x7F: /* C4h E2h 79h 2Dh 7Fh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=1 reg=7 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x80: /* C4h E2h 79h 2Dh 80h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=0 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x81: /* C4h E2h 79h 2Dh 81h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=0 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x82: /* C4h E2h 79h 2Dh 82h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=0 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x83: /* C4h E2h 79h 2Dh 83h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=0 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x84: /* C4h E2h 79h 2Dh 84h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=0 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x85: /* C4h E2h 79h 2Dh 85h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=0 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x86: /* C4h E2h 79h 2Dh 86h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=0 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x87: /* C4h E2h 79h 2Dh 87h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=0 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x88: /* C4h E2h 79h 2Dh 88h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=1 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x89: /* C4h E2h 79h 2Dh 89h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=1 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x8A: /* C4h E2h 79h 2Dh 8Ah VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=1 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x8B: /* C4h E2h 79h 2Dh 8Bh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=1 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x8C: /* C4h E2h 79h 2Dh 8Ch VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=1 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x8D: /* C4h E2h 79h 2Dh 8Dh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=1 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x8E: /* C4h E2h 79h 2Dh 8Eh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=1 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x8F: /* C4h E2h 79h 2Dh 8Fh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=1 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x90: /* C4h E2h 79h 2Dh 90h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=2 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x91: /* C4h E2h 79h 2Dh 91h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=2 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x92: /* C4h E2h 79h 2Dh 92h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=2 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x93: /* C4h E2h 79h 2Dh 93h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=2 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x94: /* C4h E2h 79h 2Dh 94h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=2 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x95: /* C4h E2h 79h 2Dh 95h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=2 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x96: /* C4h E2h 79h 2Dh 96h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=2 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x97: /* C4h E2h 79h 2Dh 97h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=2 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x98: /* C4h E2h 79h 2Dh 98h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=3 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x99: /* C4h E2h 79h 2Dh 99h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=3 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x9A: /* C4h E2h 79h 2Dh 9Ah VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=3 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x9B: /* C4h E2h 79h 2Dh 9Bh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=3 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x9C: /* C4h E2h 79h 2Dh 9Ch VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=3 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x9D: /* C4h E2h 79h 2Dh 9Dh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=3 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x9E: /* C4h E2h 79h 2Dh 9Eh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=3 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x9F: /* C4h E2h 79h 2Dh 9Fh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=3 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xA0: /* C4h E2h 79h 2Dh A0h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=4 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xA1: /* C4h E2h 79h 2Dh A1h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=4 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xA2: /* C4h E2h 79h 2Dh A2h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=4 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xA3: /* C4h E2h 79h 2Dh A3h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=4 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xA4: /* C4h E2h 79h 2Dh A4h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=4 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xA5: /* C4h E2h 79h 2Dh A5h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=4 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xA6: /* C4h E2h 79h 2Dh A6h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=4 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xA7: /* C4h E2h 79h 2Dh A7h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=4 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xA8: /* C4h E2h 79h 2Dh A8h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=5 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xA9: /* C4h E2h 79h 2Dh A9h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=5 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xAA: /* C4h E2h 79h 2Dh AAh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=5 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xAB: /* C4h E2h 79h 2Dh ABh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=5 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xAC: /* C4h E2h 79h 2Dh ACh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=5 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xAD: /* C4h E2h 79h 2Dh ADh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=5 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xAE: /* C4h E2h 79h 2Dh AEh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=5 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xAF: /* C4h E2h 79h 2Dh AFh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=5 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xB0: /* C4h E2h 79h 2Dh B0h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=6 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xB1: /* C4h E2h 79h 2Dh B1h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=6 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xB2: /* C4h E2h 79h 2Dh B2h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=6 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xB3: /* C4h E2h 79h 2Dh B3h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=6 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xB4: /* C4h E2h 79h 2Dh B4h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=6 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xB5: /* C4h E2h 79h 2Dh B5h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=6 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xB6: /* C4h E2h 79h 2Dh B6h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=6 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xB7: /* C4h E2h 79h 2Dh B7h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=6 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xB8: /* C4h E2h 79h 2Dh B8h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=7 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xB9: /* C4h E2h 79h 2Dh B9h VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=7 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xBA: /* C4h E2h 79h 2Dh BAh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=7 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xBB: /* C4h E2h 79h 2Dh BBh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=7 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xBC: /* C4h E2h 79h 2Dh BCh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=7 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xBD: /* C4h E2h 79h 2Dh BDh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=7 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xBE: /* C4h E2h 79h 2Dh BEh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=7 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xBF: /* C4h E2h 79h 2Dh BFh VMASKMOVPD sse(reg),sse(vsidx),sse(r/m) mod=2 reg=7 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VMASKMOVPD XMM%u,XMM%u,%s",mrm.reg(),vex.V,IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                                        break;
                                    /* opcode C4h E2h 79h 2Dh C0h  not defined */
                                    /* opcode C4h E2h 79h 2Dh C1h  not defined */
                                    /* opcode C4h E2h 79h 2Dh C2h  not defined */
                                    /* opcode C4h E2h 79h 2Dh C3h  not defined */
                                    /* opcode C4h E2h 79h 2Dh C4h  not defined */
                                    /* opcode C4h E2h 79h 2Dh C5h  not defined */
                                    /* opcode C4h E2h 79h 2Dh C6h  not defined */
                                    /* opcode C4h E2h 79h 2Dh C7h  not defined */
                                    /* opcode C4h E2h 79h 2Dh C8h  not defined */
                                    /* opcode C4h E2h 79h 2Dh C9h  not defined */
                                    /* opcode C4h E2h 79h 2Dh CAh  not defined */
                                    /* opcode C4h E2h 79h 2Dh CBh  not defined */
                                    /* opcode C4h E2h 79h 2Dh CCh  not defined */
                                    /* opcode C4h E2h 79h 2Dh CDh  not defined */
                                    /* opcode C4h E2h 79h 2Dh CEh  not defined */
                                    /* opcode C4h E2h 79h 2Dh CFh  not defined */
                                    /* opcode C4h E2h 79h 2Dh D0h  not defined */
                                    /* opcode C4h E2h 79h 2Dh D1h  not defined */
                                    /* opcode C4h E2h 79h 2Dh D2h  not defined */
                                    /* opcode C4h E2h 79h 2Dh D3h  not defined */
                                    /* opcode C4h E2h 79h 2Dh D4h  not defined */
                                    /* opcode C4h E2h 79h 2Dh D5h  not defined */
                                    /* opcode C4h E2h 79h 2Dh D6h  not defined */
                                    /* opcode C4h E2h 79h 2Dh D7h  not defined */
                                    /* opcode C4h E2h 79h 2Dh D8h  not defined */
                                    /* opcode C4h E2h 79h 2Dh D9h  not defined */
                                    /* opcode C4h E2h 79h 2Dh DAh  not defined */
                                    /* opcode C4h E2h 79h 2Dh DBh  not defined */
                                    /* opcode C4h E2h 79h 2Dh DCh  not defined */
                                    /* opcode C4h E2h 79h 2Dh DDh  not defined */
                                    /* opcode C4h E2h 79h 2Dh DEh  not defined */
                                    /* opcode C4h E2h 79h 2Dh DFh  not defined */
                                    /* opcode C4h E2h 79h 2Dh E0h  not defined */
                                    /* opcode C4h E2h 79h 2Dh E1h  not defined */
                                    /* opcode C4h E2h 79h 2Dh E2h  not defined */
                                    /* opcode C4h E2h 79h 2Dh E3h  not defined */
                                    /* opcode C4h E2h 79h 2Dh E4h  not defined */
                                    /* opcode C4h E2h 79h 2Dh E5h  not defined */
                                    /* opcode C4h E2h 79h 2Dh E6h  not defined */
                                    /* opcode C4h E2h 79h 2Dh E7h  not defined */
                                    /* opcode C4h E2h 79h 2Dh E8h  not defined */
                                    /* opcode C4h E2h 79h 2Dh E9h  not defined */
                                    /* opcode C4h E2h 79h 2Dh EAh  not defined */
                                    /* opcode C4h E2h 79h 2Dh EBh  not defined */
                                    /* opcode C4h E2h 79h 2Dh ECh  not defined */
                                    /* opcode C4h E2h 79h 2Dh EDh  not defined */
                                    /* opcode C4h E2h 79h 2Dh EEh  not defined */
                                    /* opcode C4h E2h 79h 2Dh EFh  not defined */
                                    /* opcode C4h E2h 79h 2Dh F0h  not defined */
                                    /* opcode C4h E2h 79h 2Dh F1h  not defined */
                                    /* opcode C4h E2h 79h 2Dh F2h  not defined */
                                    /* opcode C4h E2h 79h 2Dh F3h  not defined */
                                    /* opcode C4h E2h 79h 2Dh F4h  not defined */
                                    /* opcode C4h E2h 79h 2Dh F5h  not defined */
                                    /* opcode C4h E2h 79h 2Dh F6h  not defined */
                                    /* opcode C4h E2h 79h 2Dh F7h  not defined */
                                    /* opcode C4h E2h 79h 2Dh F8h  not defined */
                                    /* opcode C4h E2h 79h 2Dh F9h  not defined */
                                    /* opcode C4h E2h 79h 2Dh FAh  not defined */
                                    /* opcode C4h E2h 79h 2Dh FBh  not defined */
                                    /* opcode C4h E2h 79h 2Dh FCh  not defined */
                                    /* opcode C4h E2h 79h 2Dh FDh  not defined */
                                    /* opcode C4h E2h 79h 2Dh FEh  not defined */
                                    /* opcode C4h E2h 79h 2Dh FFh  not defined */
                                    default:
                                        goto _x86decode_illegal_opcode;
                                };
/* End of opcodes starting with C4h E2h 79h 2Dh */
                                break;
                            case 0x2E: /* C4h E2h 79h 2Eh        spec:  */
                                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                                _x86decode_begin_code32_addr32_opcode_parse_C4E2792E:
/* Opcodes starting with C4h E2h 79h 2Eh */
                                switch (mrm.byte) {
                                    case 0x00: /* C4h E2h 79h 2Eh 00h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=0 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x01: /* C4h E2h 79h 2Eh 01h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=0 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x02: /* C4h E2h 79h 2Eh 02h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=0 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x03: /* C4h E2h 79h 2Eh 03h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=0 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x04: /* C4h E2h 79h 2Eh 04h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=0 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x05: /* C4h E2h 79h 2Eh 05h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=0 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x06: /* C4h E2h 79h 2Eh 06h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=0 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x07: /* C4h E2h 79h 2Eh 07h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=0 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x08: /* C4h E2h 79h 2Eh 08h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=1 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x09: /* C4h E2h 79h 2Eh 09h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=1 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x0A: /* C4h E2h 79h 2Eh 0Ah VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=1 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x0B: /* C4h E2h 79h 2Eh 0Bh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=1 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x0C: /* C4h E2h 79h 2Eh 0Ch VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=1 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x0D: /* C4h E2h 79h 2Eh 0Dh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=1 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x0E: /* C4h E2h 79h 2Eh 0Eh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=1 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x0F: /* C4h E2h 79h 2Eh 0Fh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=1 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x10: /* C4h E2h 79h 2Eh 10h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=2 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x11: /* C4h E2h 79h 2Eh 11h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=2 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x12: /* C4h E2h 79h 2Eh 12h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=2 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x13: /* C4h E2h 79h 2Eh 13h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=2 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x14: /* C4h E2h 79h 2Eh 14h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=2 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x15: /* C4h E2h 79h 2Eh 15h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=2 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x16: /* C4h E2h 79h 2Eh 16h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=2 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x17: /* C4h E2h 79h 2Eh 17h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=2 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x18: /* C4h E2h 79h 2Eh 18h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=3 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x19: /* C4h E2h 79h 2Eh 19h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=3 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x1A: /* C4h E2h 79h 2Eh 1Ah VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=3 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x1B: /* C4h E2h 79h 2Eh 1Bh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=3 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x1C: /* C4h E2h 79h 2Eh 1Ch VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=3 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x1D: /* C4h E2h 79h 2Eh 1Dh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=3 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x1E: /* C4h E2h 79h 2Eh 1Eh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=3 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x1F: /* C4h E2h 79h 2Eh 1Fh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=3 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x20: /* C4h E2h 79h 2Eh 20h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=4 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x21: /* C4h E2h 79h 2Eh 21h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=4 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x22: /* C4h E2h 79h 2Eh 22h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=4 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x23: /* C4h E2h 79h 2Eh 23h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=4 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x24: /* C4h E2h 79h 2Eh 24h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=4 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x25: /* C4h E2h 79h 2Eh 25h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=4 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x26: /* C4h E2h 79h 2Eh 26h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=4 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x27: /* C4h E2h 79h 2Eh 27h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=4 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x28: /* C4h E2h 79h 2Eh 28h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=5 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x29: /* C4h E2h 79h 2Eh 29h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=5 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x2A: /* C4h E2h 79h 2Eh 2Ah VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=5 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x2B: /* C4h E2h 79h 2Eh 2Bh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=5 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x2C: /* C4h E2h 79h 2Eh 2Ch VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=5 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x2D: /* C4h E2h 79h 2Eh 2Dh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=5 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x2E: /* C4h E2h 79h 2Eh 2Eh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=5 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x2F: /* C4h E2h 79h 2Eh 2Fh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=5 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x30: /* C4h E2h 79h 2Eh 30h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=6 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x31: /* C4h E2h 79h 2Eh 31h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=6 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x32: /* C4h E2h 79h 2Eh 32h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=6 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x33: /* C4h E2h 79h 2Eh 33h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=6 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x34: /* C4h E2h 79h 2Eh 34h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=6 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x35: /* C4h E2h 79h 2Eh 35h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=6 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x36: /* C4h E2h 79h 2Eh 36h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=6 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x37: /* C4h E2h 79h 2Eh 37h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=6 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x38: /* C4h E2h 79h 2Eh 38h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=7 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x39: /* C4h E2h 79h 2Eh 39h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=7 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x3A: /* C4h E2h 79h 2Eh 3Ah VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=7 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x3B: /* C4h E2h 79h 2Eh 3Bh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=7 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x3C: /* C4h E2h 79h 2Eh 3Ch VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=7 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x3D: /* C4h E2h 79h 2Eh 3Dh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=7 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x3E: /* C4h E2h 79h 2Eh 3Eh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=7 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x3F: /* C4h E2h 79h 2Eh 3Fh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=0 reg=7 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x40: /* C4h E2h 79h 2Eh 40h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=0 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x41: /* C4h E2h 79h 2Eh 41h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=0 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x42: /* C4h E2h 79h 2Eh 42h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=0 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x43: /* C4h E2h 79h 2Eh 43h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=0 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x44: /* C4h E2h 79h 2Eh 44h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=0 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x45: /* C4h E2h 79h 2Eh 45h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=0 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x46: /* C4h E2h 79h 2Eh 46h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=0 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x47: /* C4h E2h 79h 2Eh 47h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=0 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x48: /* C4h E2h 79h 2Eh 48h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=1 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x49: /* C4h E2h 79h 2Eh 49h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=1 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x4A: /* C4h E2h 79h 2Eh 4Ah VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=1 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x4B: /* C4h E2h 79h 2Eh 4Bh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=1 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x4C: /* C4h E2h 79h 2Eh 4Ch VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=1 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x4D: /* C4h E2h 79h 2Eh 4Dh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=1 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x4E: /* C4h E2h 79h 2Eh 4Eh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=1 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x4F: /* C4h E2h 79h 2Eh 4Fh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=1 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x50: /* C4h E2h 79h 2Eh 50h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=2 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x51: /* C4h E2h 79h 2Eh 51h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=2 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x52: /* C4h E2h 79h 2Eh 52h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=2 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x53: /* C4h E2h 79h 2Eh 53h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=2 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x54: /* C4h E2h 79h 2Eh 54h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=2 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x55: /* C4h E2h 79h 2Eh 55h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=2 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x56: /* C4h E2h 79h 2Eh 56h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=2 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x57: /* C4h E2h 79h 2Eh 57h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=2 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x58: /* C4h E2h 79h 2Eh 58h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=3 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x59: /* C4h E2h 79h 2Eh 59h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=3 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x5A: /* C4h E2h 79h 2Eh 5Ah VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=3 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x5B: /* C4h E2h 79h 2Eh 5Bh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=3 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x5C: /* C4h E2h 79h 2Eh 5Ch VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=3 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x5D: /* C4h E2h 79h 2Eh 5Dh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=3 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x5E: /* C4h E2h 79h 2Eh 5Eh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=3 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x5F: /* C4h E2h 79h 2Eh 5Fh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=3 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x60: /* C4h E2h 79h 2Eh 60h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=4 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x61: /* C4h E2h 79h 2Eh 61h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=4 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x62: /* C4h E2h 79h 2Eh 62h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=4 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x63: /* C4h E2h 79h 2Eh 63h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=4 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x64: /* C4h E2h 79h 2Eh 64h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=4 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x65: /* C4h E2h 79h 2Eh 65h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=4 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x66: /* C4h E2h 79h 2Eh 66h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=4 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x67: /* C4h E2h 79h 2Eh 67h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=4 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x68: /* C4h E2h 79h 2Eh 68h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=5 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x69: /* C4h E2h 79h 2Eh 69h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=5 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x6A: /* C4h E2h 79h 2Eh 6Ah VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=5 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x6B: /* C4h E2h 79h 2Eh 6Bh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=5 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x6C: /* C4h E2h 79h 2Eh 6Ch VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=5 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x6D: /* C4h E2h 79h 2Eh 6Dh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=5 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x6E: /* C4h E2h 79h 2Eh 6Eh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=5 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x6F: /* C4h E2h 79h 2Eh 6Fh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=5 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x70: /* C4h E2h 79h 2Eh 70h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=6 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x71: /* C4h E2h 79h 2Eh 71h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=6 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x72: /* C4h E2h 79h 2Eh 72h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=6 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x73: /* C4h E2h 79h 2Eh 73h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=6 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x74: /* C4h E2h 79h 2Eh 74h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=6 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x75: /* C4h E2h 79h 2Eh 75h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=6 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x76: /* C4h E2h 79h 2Eh 76h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=6 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x77: /* C4h E2h 79h 2Eh 77h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=6 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x78: /* C4h E2h 79h 2Eh 78h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=7 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x79: /* C4h E2h 79h 2Eh 79h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=7 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x7A: /* C4h E2h 79h 2Eh 7Ah VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=7 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x7B: /* C4h E2h 79h 2Eh 7Bh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=7 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x7C: /* C4h E2h 79h 2Eh 7Ch VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=7 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x7D: /* C4h E2h 79h 2Eh 7Dh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=7 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x7E: /* C4h E2h 79h 2Eh 7Eh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=7 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x7F: /* C4h E2h 79h 2Eh 7Fh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=1 reg=7 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x80: /* C4h E2h 79h 2Eh 80h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=0 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x81: /* C4h E2h 79h 2Eh 81h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=0 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x82: /* C4h E2h 79h 2Eh 82h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=0 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x83: /* C4h E2h 79h 2Eh 83h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=0 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x84: /* C4h E2h 79h 2Eh 84h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=0 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x85: /* C4h E2h 79h 2Eh 85h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=0 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x86: /* C4h E2h 79h 2Eh 86h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=0 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x87: /* C4h E2h 79h 2Eh 87h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=0 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x88: /* C4h E2h 79h 2Eh 88h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=1 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x89: /* C4h E2h 79h 2Eh 89h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=1 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x8A: /* C4h E2h 79h 2Eh 8Ah VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=1 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x8B: /* C4h E2h 79h 2Eh 8Bh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=1 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x8C: /* C4h E2h 79h 2Eh 8Ch VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=1 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x8D: /* C4h E2h 79h 2Eh 8Dh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=1 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x8E: /* C4h E2h 79h 2Eh 8Eh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=1 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x8F: /* C4h E2h 79h 2Eh 8Fh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=1 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x90: /* C4h E2h 79h 2Eh 90h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=2 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x91: /* C4h E2h 79h 2Eh 91h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=2 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x92: /* C4h E2h 79h 2Eh 92h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=2 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x93: /* C4h E2h 79h 2Eh 93h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=2 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x94: /* C4h E2h 79h 2Eh 94h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=2 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x95: /* C4h E2h 79h 2Eh 95h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=2 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x96: /* C4h E2h 79h 2Eh 96h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=2 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x97: /* C4h E2h 79h 2Eh 97h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=2 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x98: /* C4h E2h 79h 2Eh 98h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=3 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x99: /* C4h E2h 79h 2Eh 99h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=3 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x9A: /* C4h E2h 79h 2Eh 9Ah VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=3 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x9B: /* C4h E2h 79h 2Eh 9Bh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=3 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x9C: /* C4h E2h 79h 2Eh 9Ch VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=3 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x9D: /* C4h E2h 79h 2Eh 9Dh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=3 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x9E: /* C4h E2h 79h 2Eh 9Eh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=3 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x9F: /* C4h E2h 79h 2Eh 9Fh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=3 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xA0: /* C4h E2h 79h 2Eh A0h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=4 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xA1: /* C4h E2h 79h 2Eh A1h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=4 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xA2: /* C4h E2h 79h 2Eh A2h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=4 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xA3: /* C4h E2h 79h 2Eh A3h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=4 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xA4: /* C4h E2h 79h 2Eh A4h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=4 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xA5: /* C4h E2h 79h 2Eh A5h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=4 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xA6: /* C4h E2h 79h 2Eh A6h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=4 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xA7: /* C4h E2h 79h 2Eh A7h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=4 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xA8: /* C4h E2h 79h 2Eh A8h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=5 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xA9: /* C4h E2h 79h 2Eh A9h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=5 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xAA: /* C4h E2h 79h 2Eh AAh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=5 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xAB: /* C4h E2h 79h 2Eh ABh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=5 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xAC: /* C4h E2h 79h 2Eh ACh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=5 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xAD: /* C4h E2h 79h 2Eh ADh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=5 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xAE: /* C4h E2h 79h 2Eh AEh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=5 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xAF: /* C4h E2h 79h 2Eh AFh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=5 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xB0: /* C4h E2h 79h 2Eh B0h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=6 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xB1: /* C4h E2h 79h 2Eh B1h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=6 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xB2: /* C4h E2h 79h 2Eh B2h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=6 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xB3: /* C4h E2h 79h 2Eh B3h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=6 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xB4: /* C4h E2h 79h 2Eh B4h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=6 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xB5: /* C4h E2h 79h 2Eh B5h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=6 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xB6: /* C4h E2h 79h 2Eh B6h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=6 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xB7: /* C4h E2h 79h 2Eh B7h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=6 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xB8: /* C4h E2h 79h 2Eh B8h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=7 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xB9: /* C4h E2h 79h 2Eh B9h VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=7 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xBA: /* C4h E2h 79h 2Eh BAh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=7 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xBB: /* C4h E2h 79h 2Eh BBh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=7 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xBC: /* C4h E2h 79h 2Eh BCh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=7 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xBD: /* C4h E2h 79h 2Eh BDh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=7 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xBE: /* C4h E2h 79h 2Eh BEh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=7 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xBF: /* C4h E2h 79h 2Eh BFh VMASKMOVPS sse(r/m),sse(vsidx),sse(reg) mod=2 reg=7 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VMASKMOVPS %s,XMM%u,XMM%u",IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""),vex.V,mrm.reg());
                                        break;
                                    /* opcode C4h E2h 79h 2Eh C0h  not defined */
                                    /* opcode C4h E2h 79h 2Eh C1h  not defined */
                                    /* opcode C4h E2h 79h 2Eh C2h  not defined */
                                    /* opcode C4h E2h 79h 2Eh C3h  not defined */
                                    /* opcode C4h E2h 79h 2Eh C4h  not defined */
                                    /* opcode C4h E2h 79h 2Eh C5h  not defined */
                                    /* opcode C4h E2h 79h 2Eh C6h  not defined */
                                    /* opcode C4h E2h 79h 2Eh C7h  not defined */
                                    /* opcode C4h E2h 79h 2Eh C8h  not defined */
                                    /* opcode C4h E2h 79h 2Eh C9h  not defined */
                                    /* opcode C4h E2h 79h 2Eh CAh  not defined */
                                    /* opcode C4h E2h 79h 2Eh CBh  not defined */
                                    /* opcode C4h E2h 79h 2Eh CCh  not defined */
                                    /* opcode C4h E2h 79h 2Eh CDh  not defined */
                                    /* opcode C4h E2h 79h 2Eh CEh  not defined */
                                    /* opcode C4h E2h 79h 2Eh CFh  not defined */
                                    /* opcode C4h E2h 79h 2Eh D0h  not defined */
                                    /* opcode C4h E2h 79h 2Eh D1h  not defined */
                                    /* opcode C4h E2h 79h 2Eh D2h  not defined */
                                    /* opcode C4h E2h 79h 2Eh D3h  not defined */
                                    /* opcode C4h E2h 79h 2Eh D4h  not defined */
                                    /* opcode C4h E2h 79h 2Eh D5h  not defined */
                                    /* opcode C4h E2h 79h 2Eh D6h  not defined */
                                    /* opcode C4h E2h 79h 2Eh D7h  not defined */
                                    /* opcode C4h E2h 79h 2Eh D8h  not defined */
                                    /* opcode C4h E2h 79h 2Eh D9h  not defined */
                                    /* opcode C4h E2h 79h 2Eh DAh  not defined */
                                    /* opcode C4h E2h 79h 2Eh DBh  not defined */
                                    /* opcode C4h E2h 79h 2Eh DCh  not defined */
                                    /* opcode C4h E2h 79h 2Eh DDh  not defined */
                                    /* opcode C4h E2h 79h 2Eh DEh  not defined */
                                    /* opcode C4h E2h 79h 2Eh DFh  not defined */
                                    /* opcode C4h E2h 79h 2Eh E0h  not defined */
                                    /* opcode C4h E2h 79h 2Eh E1h  not defined */
                                    /* opcode C4h E2h 79h 2Eh E2h  not defined */
                                    /* opcode C4h E2h 79h 2Eh E3h  not defined */
                                    /* opcode C4h E2h 79h 2Eh E4h  not defined */
                                    /* opcode C4h E2h 79h 2Eh E5h  not defined */
                                    /* opcode C4h E2h 79h 2Eh E6h  not defined */
                                    /* opcode C4h E2h 79h 2Eh E7h  not defined */
                                    /* opcode C4h E2h 79h 2Eh E8h  not defined */
                                    /* opcode C4h E2h 79h 2Eh E9h  not defined */
                                    /* opcode C4h E2h 79h 2Eh EAh  not defined */
                                    /* opcode C4h E2h 79h 2Eh EBh  not defined */
                                    /* opcode C4h E2h 79h 2Eh ECh  not defined */
                                    /* opcode C4h E2h 79h 2Eh EDh  not defined */
                                    /* opcode C4h E2h 79h 2Eh EEh  not defined */
                                    /* opcode C4h E2h 79h 2Eh EFh  not defined */
                                    /* opcode C4h E2h 79h 2Eh F0h  not defined */
                                    /* opcode C4h E2h 79h 2Eh F1h  not defined */
                                    /* opcode C4h E2h 79h 2Eh F2h  not defined */
                                    /* opcode C4h E2h 79h 2Eh F3h  not defined */
                                    /* opcode C4h E2h 79h 2Eh F4h  not defined */
                                    /* opcode C4h E2h 79h 2Eh F5h  not defined */
                                    /* opcode C4h E2h 79h 2Eh F6h  not defined */
                                    /* opcode C4h E2h 79h 2Eh F7h  not defined */
                                    /* opcode C4h E2h 79h 2Eh F8h  not defined */
                                    /* opcode C4h E2h 79h 2Eh F9h  not defined */
                                    /* opcode C4h E2h 79h 2Eh FAh  not defined */
                                    /* opcode C4h E2h 79h 2Eh FBh  not defined */
                                    /* opcode C4h E2h 79h 2Eh FCh  not defined */
                                    /* opcode C4h E2h 79h 2Eh FDh  not defined */
                                    /* opcode C4h E2h 79h 2Eh FEh  not defined */
                                    /* opcode C4h E2h 79h 2Eh FFh  not defined */
                                    default:
                                        goto _x86decode_illegal_opcode;
                                };
/* End of opcodes starting with C4h E2h 79h 2Eh */
                                break;
                            case 0x2F: /* C4h E2h 79h 2Fh        spec:  */
                                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                                _x86decode_begin_code32_addr32_opcode_parse_C4E2792F:
/* Opcodes starting with C4h E2h 79h 2Fh */
                                switch (mrm.byte) {
                                    case 0x00: /* C4h E2h 79h 2Fh 00h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=0 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x01: /* C4h E2h 79h 2Fh 01h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=0 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x02: /* C4h E2h 79h 2Fh 02h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=0 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x03: /* C4h E2h 79h 2Fh 03h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=0 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x04: /* C4h E2h 79h 2Fh 04h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=0 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x05: /* C4h E2h 79h 2Fh 05h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=0 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x06: /* C4h E2h 79h 2Fh 06h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=0 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x07: /* C4h E2h 79h 2Fh 07h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=0 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x08: /* C4h E2h 79h 2Fh 08h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=1 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x09: /* C4h E2h 79h 2Fh 09h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=1 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x0A: /* C4h E2h 79h 2Fh 0Ah VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=1 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x0B: /* C4h E2h 79h 2Fh 0Bh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=1 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x0C: /* C4h E2h 79h 2Fh 0Ch VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=1 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x0D: /* C4h E2h 79h 2Fh 0Dh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=1 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x0E: /* C4h E2h 79h 2Fh 0Eh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=1 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x0F: /* C4h E2h 79h 2Fh 0Fh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=1 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x10: /* C4h E2h 79h 2Fh 10h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=2 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x11: /* C4h E2h 79h 2Fh 11h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=2 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x12: /* C4h E2h 79h 2Fh 12h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=2 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x13: /* C4h E2h 79h 2Fh 13h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=2 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x14: /* C4h E2h 79h 2Fh 14h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=2 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x15: /* C4h E2h 79h 2Fh 15h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=2 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x16: /* C4h E2h 79h 2Fh 16h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=2 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x17: /* C4h E2h 79h 2Fh 17h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=2 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x18: /* C4h E2h 79h 2Fh 18h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=3 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x19: /* C4h E2h 79h 2Fh 19h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=3 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x1A: /* C4h E2h 79h 2Fh 1Ah VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=3 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x1B: /* C4h E2h 79h 2Fh 1Bh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=3 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x1C: /* C4h E2h 79h 2Fh 1Ch VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=3 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x1D: /* C4h E2h 79h 2Fh 1Dh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=3 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x1E: /* C4h E2h 79h 2Fh 1Eh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=3 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x1F: /* C4h E2h 79h 2Fh 1Fh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=3 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x20: /* C4h E2h 79h 2Fh 20h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=4 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x21: /* C4h E2h 79h 2Fh 21h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=4 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x22: /* C4h E2h 79h 2Fh 22h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=4 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x23: /* C4h E2h 79h 2Fh 23h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=4 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x24: /* C4h E2h 79h 2Fh 24h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=4 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x25: /* C4h E2h 79h 2Fh 25h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=4 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x26: /* C4h E2h 79h 2Fh 26h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=4 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x27: /* C4h E2h 79h 2Fh 27h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=4 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x28: /* C4h E2h 79h 2Fh 28h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=5 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x29: /* C4h E2h 79h 2Fh 29h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=5 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x2A: /* C4h E2h 79h 2Fh 2Ah VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=5 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x2B: /* C4h E2h 79h 2Fh 2Bh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=5 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x2C: /* C4h E2h 79h 2Fh 2Ch VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=5 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x2D: /* C4h E2h 79h 2Fh 2Dh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=5 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x2E: /* C4h E2h 79h 2Fh 2Eh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=5 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x2F: /* C4h E2h 79h 2Fh 2Fh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=5 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x30: /* C4h E2h 79h 2Fh 30h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=6 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x31: /* C4h E2h 79h 2Fh 31h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=6 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x32: /* C4h E2h 79h 2Fh 32h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=6 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x33: /* C4h E2h 79h 2Fh 33h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=6 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x34: /* C4h E2h 79h 2Fh 34h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=6 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x35: /* C4h E2h 79h 2Fh 35h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=6 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x36: /* C4h E2h 79h 2Fh 36h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=6 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x37: /* C4h E2h 79h 2Fh 37h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=6 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x38: /* C4h E2h 79h 2Fh 38h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=7 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x39: /* C4h E2h 79h 2Fh 39h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=7 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x3A: /* C4h E2h 79h 2Fh 3Ah VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=7 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x3B: /* C4h E2h 79h 2Fh 3Bh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=7 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x3C: /* C4h E2h 79h 2Fh 3Ch VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=7 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x3D: /* C4h E2h 79h 2Fh 3Dh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=7 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x3E: /* C4h E2h 79h 2Fh 3Eh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=7 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x3F: /* C4h E2h 79h 2Fh 3Fh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=0 reg=7 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x40: /* C4h E2h 79h 2Fh 40h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=0 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x41: /* C4h E2h 79h 2Fh 41h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=0 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x42: /* C4h E2h 79h 2Fh 42h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=0 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x43: /* C4h E2h 79h 2Fh 43h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=0 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x44: /* C4h E2h 79h 2Fh 44h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=0 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x45: /* C4h E2h 79h 2Fh 45h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=0 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x46: /* C4h E2h 79h 2Fh 46h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=0 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x47: /* C4h E2h 79h 2Fh 47h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=0 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x48: /* C4h E2h 79h 2Fh 48h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=1 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x49: /* C4h E2h 79h 2Fh 49h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=1 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x4A: /* C4h E2h 79h 2Fh 4Ah VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=1 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x4B: /* C4h E2h 79h 2Fh 4Bh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=1 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x4C: /* C4h E2h 79h 2Fh 4Ch VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=1 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x4D: /* C4h E2h 79h 2Fh 4Dh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=1 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x4E: /* C4h E2h 79h 2Fh 4Eh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=1 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x4F: /* C4h E2h 79h 2Fh 4Fh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=1 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x50: /* C4h E2h 79h 2Fh 50h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=2 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x51: /* C4h E2h 79h 2Fh 51h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=2 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x52: /* C4h E2h 79h 2Fh 52h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=2 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x53: /* C4h E2h 79h 2Fh 53h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=2 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x54: /* C4h E2h 79h 2Fh 54h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=2 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x55: /* C4h E2h 79h 2Fh 55h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=2 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x56: /* C4h E2h 79h 2Fh 56h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=2 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x57: /* C4h E2h 79h 2Fh 57h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=2 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x58: /* C4h E2h 79h 2Fh 58h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=3 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x59: /* C4h E2h 79h 2Fh 59h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=3 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x5A: /* C4h E2h 79h 2Fh 5Ah VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=3 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x5B: /* C4h E2h 79h 2Fh 5Bh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=3 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x5C: /* C4h E2h 79h 2Fh 5Ch VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=3 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x5D: /* C4h E2h 79h 2Fh 5Dh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=3 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x5E: /* C4h E2h 79h 2Fh 5Eh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=3 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x5F: /* C4h E2h 79h 2Fh 5Fh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=3 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x60: /* C4h E2h 79h 2Fh 60h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=4 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x61: /* C4h E2h 79h 2Fh 61h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=4 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x62: /* C4h E2h 79h 2Fh 62h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=4 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x63: /* C4h E2h 79h 2Fh 63h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=4 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x64: /* C4h E2h 79h 2Fh 64h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=4 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x65: /* C4h E2h 79h 2Fh 65h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=4 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x66: /* C4h E2h 79h 2Fh 66h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=4 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x67: /* C4h E2h 79h 2Fh 67h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=4 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x68: /* C4h E2h 79h 2Fh 68h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=5 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x69: /* C4h E2h 79h 2Fh 69h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=5 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x6A: /* C4h E2h 79h 2Fh 6Ah VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=5 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x6B: /* C4h E2h 79h 2Fh 6Bh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=5 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x6C: /* C4h E2h 79h 2Fh 6Ch VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=5 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x6D: /* C4h E2h 79h 2Fh 6Dh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=5 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x6E: /* C4h E2h 79h 2Fh 6Eh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=5 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x6F: /* C4h E2h 79h 2Fh 6Fh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=5 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x70: /* C4h E2h 79h 2Fh 70h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=6 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x71: /* C4h E2h 79h 2Fh 71h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=6 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x72: /* C4h E2h 79h 2Fh 72h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=6 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x73: /* C4h E2h 79h 2Fh 73h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=6 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x74: /* C4h E2h 79h 2Fh 74h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=6 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x75: /* C4h E2h 79h 2Fh 75h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=6 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x76: /* C4h E2h 79h 2Fh 76h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=6 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x77: /* C4h E2h 79h 2Fh 77h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=6 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x78: /* C4h E2h 79h 2Fh 78h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=7 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x79: /* C4h E2h 79h 2Fh 79h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=7 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x7A: /* C4h E2h 79h 2Fh 7Ah VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=7 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x7B: /* C4h E2h 79h 2Fh 7Bh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=7 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x7C: /* C4h E2h 79h 2Fh 7Ch VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=7 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x7D: /* C4h E2h 79h 2Fh 7Dh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=7 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x7E: /* C4h E2h 79h 2Fh 7Eh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=7 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x7F: /* C4h E2h 79h 2Fh 7Fh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=1 reg=7 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x80: /* C4h E2h 79h 2Fh 80h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=0 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x81: /* C4h E2h 79h 2Fh 81h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=0 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x82: /* C4h E2h 79h 2Fh 82h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=0 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x83: /* C4h E2h 79h 2Fh 83h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=0 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x84: /* C4h E2h 79h 2Fh 84h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=0 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x85: /* C4h E2h 79h 2Fh 85h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=0 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x86: /* C4h E2h 79h 2Fh 86h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=0 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x87: /* C4h E2h 79h 2Fh 87h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=0 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x88: /* C4h E2h 79h 2Fh 88h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=1 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x89: /* C4h E2h 79h 2Fh 89h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=1 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x8A: /* C4h E2h 79h 2Fh 8Ah VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=1 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x8B: /* C4h E2h 79h 2Fh 8Bh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=1 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x8C: /* C4h E2h 79h 2Fh 8Ch VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=1 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x8D: /* C4h E2h 79h 2Fh 8Dh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=1 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x8E: /* C4h E2h 79h 2Fh 8Eh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=1 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x8F: /* C4h E2h 79h 2Fh 8Fh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=1 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x90: /* C4h E2h 79h 2Fh 90h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=2 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x91: /* C4h E2h 79h 2Fh 91h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=2 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x92: /* C4h E2h 79h 2Fh 92h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=2 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x93: /* C4h E2h 79h 2Fh 93h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=2 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x94: /* C4h E2h 79h 2Fh 94h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=2 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x95: /* C4h E2h 79h 2Fh 95h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=2 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x96: /* C4h E2h 79h 2Fh 96h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=2 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x97: /* C4h E2h 79h 2Fh 97h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=2 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x98: /* C4h E2h 79h 2Fh 98h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=3 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x99: /* C4h E2h 79h 2Fh 99h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=3 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x9A: /* C4h E2h 79h 2Fh 9Ah VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=3 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x9B: /* C4h E2h 79h 2Fh 9Bh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=3 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x9C: /* C4h E2h 79h 2Fh 9Ch VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=3 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x9D: /* C4h E2h 79h 2Fh 9Dh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=3 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x9E: /* C4h E2h 79h 2Fh 9Eh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=3 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x9F: /* C4h E2h 79h 2Fh 9Fh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=3 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xA0: /* C4h E2h 79h 2Fh A0h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=4 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xA1: /* C4h E2h 79h 2Fh A1h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=4 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xA2: /* C4h E2h 79h 2Fh A2h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=4 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xA3: /* C4h E2h 79h 2Fh A3h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=4 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xA4: /* C4h E2h 79h 2Fh A4h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=4 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xA5: /* C4h E2h 79h 2Fh A5h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=4 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xA6: /* C4h E2h 79h 2Fh A6h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=4 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xA7: /* C4h E2h 79h 2Fh A7h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=4 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xA8: /* C4h E2h 79h 2Fh A8h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=5 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xA9: /* C4h E2h 79h 2Fh A9h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=5 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xAA: /* C4h E2h 79h 2Fh AAh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=5 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xAB: /* C4h E2h 79h 2Fh ABh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=5 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xAC: /* C4h E2h 79h 2Fh ACh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=5 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xAD: /* C4h E2h 79h 2Fh ADh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=5 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xAE: /* C4h E2h 79h 2Fh AEh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=5 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xAF: /* C4h E2h 79h 2Fh AFh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=5 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xB0: /* C4h E2h 79h 2Fh B0h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=6 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xB1: /* C4h E2h 79h 2Fh B1h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=6 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xB2: /* C4h E2h 79h 2Fh B2h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=6 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xB3: /* C4h E2h 79h 2Fh B3h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=6 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xB4: /* C4h E2h 79h 2Fh B4h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=6 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xB5: /* C4h E2h 79h 2Fh B5h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=6 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xB6: /* C4h E2h 79h 2Fh B6h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=6 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xB7: /* C4h E2h 79h 2Fh B7h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=6 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xB8: /* C4h E2h 79h 2Fh B8h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=7 rm=0      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xB9: /* C4h E2h 79h 2Fh B9h VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=7 rm=1      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xBA: /* C4h E2h 79h 2Fh BAh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=7 rm=2      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xBB: /* C4h E2h 79h 2Fh BBh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=7 rm=3      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xBC: /* C4h E2h 79h 2Fh BCh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=7 rm=4      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xBD: /* C4h E2h 79h 2Fh BDh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=7 rm=5      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xBE: /* C4h E2h 79h 2Fh BEh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=7 rm=6      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xBF: /* C4h E2h 79h 2Fh BFh VMASKMOVPD sse(r/m),sse(vsidx),sse(reg) mod=2 reg=7 rm=7      spec: vex vsize(128) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VMASKMOVPD %s,XMM%u,XMM%u",IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""),vex.V,mrm.reg());
                                        break;
                                    /* opcode C4h E2h 79h 2Fh C0h  not defined */
                                    /* opcode C4h E2h 79h 2Fh C1h  not defined */
                                    /* opcode C4h E2h 79h 2Fh C2h  not defined */
                                    /* opcode C4h E2h 79h 2Fh C3h  not defined */
                                    /* opcode C4h E2h 79h 2Fh C4h  not defined */
                                    /* opcode C4h E2h 79h 2Fh C5h  not defined */
                                    /* opcode C4h E2h 79h 2Fh C6h  not defined */
                                    /* opcode C4h E2h 79h 2Fh C7h  not defined */
                                    /* opcode C4h E2h 79h 2Fh C8h  not defined */
                                    /* opcode C4h E2h 79h 2Fh C9h  not defined */
                                    /* opcode C4h E2h 79h 2Fh CAh  not defined */
                                    /* opcode C4h E2h 79h 2Fh CBh  not defined */
                                    /* opcode C4h E2h 79h 2Fh CCh  not defined */
                                    /* opcode C4h E2h 79h 2Fh CDh  not defined */
                                    /* opcode C4h E2h 79h 2Fh CEh  not defined */
                                    /* opcode C4h E2h 79h 2Fh CFh  not defined */
                                    /* opcode C4h E2h 79h 2Fh D0h  not defined */
                                    /* opcode C4h E2h 79h 2Fh D1h  not defined */
                                    /* opcode C4h E2h 79h 2Fh D2h  not defined */
                                    /* opcode C4h E2h 79h 2Fh D3h  not defined */
                                    /* opcode C4h E2h 79h 2Fh D4h  not defined */
                                    /* opcode C4h E2h 79h 2Fh D5h  not defined */
                                    /* opcode C4h E2h 79h 2Fh D6h  not defined */
                                    /* opcode C4h E2h 79h 2Fh D7h  not defined */
                                    /* opcode C4h E2h 79h 2Fh D8h  not defined */
                                    /* opcode C4h E2h 79h 2Fh D9h  not defined */
                                    /* opcode C4h E2h 79h 2Fh DAh  not defined */
                                    /* opcode C4h E2h 79h 2Fh DBh  not defined */
                                    /* opcode C4h E2h 79h 2Fh DCh  not defined */
                                    /* opcode C4h E2h 79h 2Fh DDh  not defined */
                                    /* opcode C4h E2h 79h 2Fh DEh  not defined */
                                    /* opcode C4h E2h 79h 2Fh DFh  not defined */
                                    /* opcode C4h E2h 79h 2Fh E0h  not defined */
                                    /* opcode C4h E2h 79h 2Fh E1h  not defined */
                                    /* opcode C4h E2h 79h 2Fh E2h  not defined */
                                    /* opcode C4h E2h 79h 2Fh E3h  not defined */
                                    /* opcode C4h E2h 79h 2Fh E4h  not defined */
                                    /* opcode C4h E2h 79h 2Fh E5h  not defined */
                                    /* opcode C4h E2h 79h 2Fh E6h  not defined */
                                    /* opcode C4h E2h 79h 2Fh E7h  not defined */
                                    /* opcode C4h E2h 79h 2Fh E8h  not defined */
                                    /* opcode C4h E2h 79h 2Fh E9h  not defined */
                                    /* opcode C4h E2h 79h 2Fh EAh  not defined */
                                    /* opcode C4h E2h 79h 2Fh EBh  not defined */
                                    /* opcode C4h E2h 79h 2Fh ECh  not defined */
                                    /* opcode C4h E2h 79h 2Fh EDh  not defined */
                                    /* opcode C4h E2h 79h 2Fh EEh  not defined */
                                    /* opcode C4h E2h 79h 2Fh EFh  not defined */
                                    /* opcode C4h E2h 79h 2Fh F0h  not defined */
                                    /* opcode C4h E2h 79h 2Fh F1h  not defined */
                                    /* opcode C4h E2h 79h 2Fh F2h  not defined */
                                    /* opcode C4h E2h 79h 2Fh F3h  not defined */
                                    /* opcode C4h E2h 79h 2Fh F4h  not defined */
                                    /* opcode C4h E2h 79h 2Fh F5h  not defined */
                                    /* opcode C4h E2h 79h 2Fh F6h  not defined */
                                    /* opcode C4h E2h 79h 2Fh F7h  not defined */
                                    /* opcode C4h E2h 79h 2Fh F8h  not defined */
                                    /* opcode C4h E2h 79h 2Fh F9h  not defined */
                                    /* opcode C4h E2h 79h 2Fh FAh  not defined */
                                    /* opcode C4h E2h 79h 2Fh FBh  not defined */
                                    /* opcode C4h E2h 79h 2Fh FCh  not defined */
                                    /* opcode C4h E2h 79h 2Fh FDh  not defined */
                                    /* opcode C4h E2h 79h 2Fh FEh  not defined */
                                    /* opcode C4h E2h 79h 2Fh FFh  not defined */
                                    default:
                                        goto _x86decode_illegal_opcode;
                                };
/* End of opcodes starting with C4h E2h 79h 2Fh */
                                break;
                            /* opcode C4h E2h 79h 30h  not defined */
                            /* opcode C4h E2h 79h 31h  not defined */
                            /* opcode C4h E2h 79h 32h  not defined */
                            /* opcode C4h E2h 79h 33h  not defined */
                            /* opcode C4h E2h 79h 34h  not defined */
                            /* opcode C4h E2h 79h 35h  not defined */
                            /* opcode C4h E2h 79h 36h  not defined */
                            /* opcode C4h E2h 79h 37h  not defined */
                            /* opcode C4h E2h 79h 38h  not defined */
                            /* opcode C4h E2h 79h 39h  not defined */
                            /* opcode C4h E2h 79h 3Ah  not defined */
                            /* opcode C4h E2h 79h 3Bh  not defined */
                            /* opcode C4h E2h 79h 3Ch  not defined */
                            /* opcode C4h E2h 79h 3Dh  not defined */
                            /* opcode C4h E2h 79h 3Eh  not defined */
                            /* opcode C4h E2h 79h 3Fh  not defined */
                            /* opcode C4h E2h 79h 40h  not defined */
                            /* opcode C4h E2h 79h 41h  not defined */
                            /* opcode C4h E2h 79h 42h  not defined */
                            /* opcode C4h E2h 79h 43h  not defined */
                            /* opcode C4h E2h 79h 44h  not defined */
                            /* opcode C4h E2h 79h 45h  not defined */
                            /* opcode C4h E2h 79h 46h  not defined */
                            /* opcode C4h E2h 79h 47h  not defined */
                            /* opcode C4h E2h 79h 48h  not defined */
                            /* opcode C4h E2h 79h 49h  not defined */
                            /* opcode C4h E2h 79h 4Ah  not defined */
                            /* opcode C4h E2h 79h 4Bh  not defined */
                            /* opcode C4h E2h 79h 4Ch  not defined */
                            /* opcode C4h E2h 79h 4Dh  not defined */
                            /* opcode C4h E2h 79h 4Eh  not defined */
                            /* opcode C4h E2h 79h 4Fh  not defined */
                            /* opcode C4h E2h 79h 50h  not defined */
                            /* opcode C4h E2h 79h 51h  not defined */
                            /* opcode C4h E2h 79h 52h  not defined */
                            /* opcode C4h E2h 79h 53h  not defined */
                            /* opcode C4h E2h 79h 54h  not defined */
                            /* opcode C4h E2h 79h 55h  not defined */
                            /* opcode C4h E2h 79h 56h  not defined */
                            /* opcode C4h E2h 79h 57h  not defined */
                            /* opcode C4h E2h 79h 58h  not defined */
                            /* opcode C4h E2h 79h 59h  not defined */
                            /* opcode C4h E2h 79h 5Ah  not defined */
                            /* opcode C4h E2h 79h 5Bh  not defined */
                            /* opcode C4h E2h 79h 5Ch  not defined */
                            /* opcode C4h E2h 79h 5Dh  not defined */
                            /* opcode C4h E2h 79h 5Eh  not defined */
                            /* opcode C4h E2h 79h 5Fh  not defined */
                            /* opcode C4h E2h 79h 60h  not defined */
                            /* opcode C4h E2h 79h 61h  not defined */
                            /* opcode C4h E2h 79h 62h  not defined */
                            /* opcode C4h E2h 79h 63h  not defined */
                            /* opcode C4h E2h 79h 64h  not defined */
                            /* opcode C4h E2h 79h 65h  not defined */
                            /* opcode C4h E2h 79h 66h  not defined */
                            /* opcode C4h E2h 79h 67h  not defined */
                            /* opcode C4h E2h 79h 68h  not defined */
                            /* opcode C4h E2h 79h 69h  not defined */
                            /* opcode C4h E2h 79h 6Ah  not defined */
                            /* opcode C4h E2h 79h 6Bh  not defined */
                            /* opcode C4h E2h 79h 6Ch  not defined */
                            /* opcode C4h E2h 79h 6Dh  not defined */
                            /* opcode C4h E2h 79h 6Eh  not defined */
                            /* opcode C4h E2h 79h 6Fh  not defined */
                            /* opcode C4h E2h 79h 70h  not defined */
                            /* opcode C4h E2h 79h 71h  not defined */
                            /* opcode C4h E2h 79h 72h  not defined */
                            /* opcode C4h E2h 79h 73h  not defined */
                            /* opcode C4h E2h 79h 74h  not defined */
                            /* opcode C4h E2h 79h 75h  not defined */
                            /* opcode C4h E2h 79h 76h  not defined */
                            /* opcode C4h E2h 79h 77h  not defined */
                            /* opcode C4h E2h 79h 78h  not defined */
                            /* opcode C4h E2h 79h 79h  not defined */
                            /* opcode C4h E2h 79h 7Ah  not defined */
                            /* opcode C4h E2h 79h 7Bh  not defined */
                            /* opcode C4h E2h 79h 7Ch  not defined */
                            /* opcode C4h E2h 79h 7Dh  not defined */
                            /* opcode C4h E2h 79h 7Eh  not defined */
                            /* opcode C4h E2h 79h 7Fh  not defined */
                            /* opcode C4h E2h 79h 80h  not defined */
                            /* opcode C4h E2h 79h 81h  not defined */
                            /* opcode C4h E2h 79h 82h  not defined */
                            /* opcode C4h E2h 79h 83h  not defined */
                            /* opcode C4h E2h 79h 84h  not defined */
                            /* opcode C4h E2h 79h 85h  not defined */
                            /* opcode C4h E2h 79h 86h  not defined */
                            /* opcode C4h E2h 79h 87h  not defined */
                            /* opcode C4h E2h 79h 88h  not defined */
                            /* opcode C4h E2h 79h 89h  not defined */
                            /* opcode C4h E2h 79h 8Ah  not defined */
                            /* opcode C4h E2h 79h 8Bh  not defined */
                            /* opcode C4h E2h 79h 8Ch  not defined */
                            /* opcode C4h E2h 79h 8Dh  not defined */
                            /* opcode C4h E2h 79h 8Eh  not defined */
                            /* opcode C4h E2h 79h 8Fh  not defined */
                            /* opcode C4h E2h 79h 90h  not defined */
                            /* opcode C4h E2h 79h 91h  not defined */
                            /* opcode C4h E2h 79h 92h  not defined */
                            /* opcode C4h E2h 79h 93h  not defined */
                            /* opcode C4h E2h 79h 94h  not defined */
                            /* opcode C4h E2h 79h 95h  not defined */
                            /* opcode C4h E2h 79h 96h  not defined */
                            /* opcode C4h E2h 79h 97h  not defined */
                            /* opcode C4h E2h 79h 98h  not defined */
                            /* opcode C4h E2h 79h 99h  not defined */
                            /* opcode C4h E2h 79h 9Ah  not defined */
                            /* opcode C4h E2h 79h 9Bh  not defined */
                            /* opcode C4h E2h 79h 9Ch  not defined */
                            /* opcode C4h E2h 79h 9Dh  not defined */
                            /* opcode C4h E2h 79h 9Eh  not defined */
                            /* opcode C4h E2h 79h 9Fh  not defined */
                            /* opcode C4h E2h 79h A0h  not defined */
                            /* opcode C4h E2h 79h A1h  not defined */
                            /* opcode C4h E2h 79h A2h  not defined */
                            /* opcode C4h E2h 79h A3h  not defined */
                            /* opcode C4h E2h 79h A4h  not defined */
                            /* opcode C4h E2h 79h A5h  not defined */
                            /* opcode C4h E2h 79h A6h  not defined */
                            /* opcode C4h E2h 79h A7h  not defined */
                            /* opcode C4h E2h 79h A8h  not defined */
                            /* opcode C4h E2h 79h A9h  not defined */
                            /* opcode C4h E2h 79h AAh  not defined */
                            /* opcode C4h E2h 79h ABh  not defined */
                            /* opcode C4h E2h 79h ACh  not defined */
                            /* opcode C4h E2h 79h ADh  not defined */
                            /* opcode C4h E2h 79h AEh  not defined */
                            /* opcode C4h E2h 79h AFh  not defined */
                            /* opcode C4h E2h 79h B0h  not defined */
                            /* opcode C4h E2h 79h B1h  not defined */
                            /* opcode C4h E2h 79h B2h  not defined */
                            /* opcode C4h E2h 79h B3h  not defined */
                            /* opcode C4h E2h 79h B4h  not defined */
                            /* opcode C4h E2h 79h B5h  not defined */
                            /* opcode C4h E2h 79h B6h  not defined */
                            /* opcode C4h E2h 79h B7h  not defined */
                            /* opcode C4h E2h 79h B8h  not defined */
                            /* opcode C4h E2h 79h B9h  not defined */
                            /* opcode C4h E2h 79h BAh  not defined */
                            /* opcode C4h E2h 79h BBh  not defined */
                            /* opcode C4h E2h 79h BCh  not defined */
                            /* opcode C4h E2h 79h BDh  not defined */
                            /* opcode C4h E2h 79h BEh  not defined */
                            /* opcode C4h E2h 79h BFh  not defined */
                            /* opcode C4h E2h 79h C0h  not defined */
                            /* opcode C4h E2h 79h C1h  not defined */
                            /* opcode C4h E2h 79h C2h  not defined */
                            /* opcode C4h E2h 79h C3h  not defined */
                            /* opcode C4h E2h 79h C4h  not defined */
                            /* opcode C4h E2h 79h C5h  not defined */
                            /* opcode C4h E2h 79h C6h  not defined */
                            /* opcode C4h E2h 79h C7h  not defined */
                            /* opcode C4h E2h 79h C8h  not defined */
                            /* opcode C4h E2h 79h C9h  not defined */
                            /* opcode C4h E2h 79h CAh  not defined */
                            /* opcode C4h E2h 79h CBh  not defined */
                            /* opcode C4h E2h 79h CCh  not defined */
                            /* opcode C4h E2h 79h CDh  not defined */
                            /* opcode C4h E2h 79h CEh  not defined */
                            /* opcode C4h E2h 79h CFh  not defined */
                            /* opcode C4h E2h 79h D0h  not defined */
                            /* opcode C4h E2h 79h D1h  not defined */
                            /* opcode C4h E2h 79h D2h  not defined */
                            /* opcode C4h E2h 79h D3h  not defined */
                            /* opcode C4h E2h 79h D4h  not defined */
                            /* opcode C4h E2h 79h D5h  not defined */
                            /* opcode C4h E2h 79h D6h  not defined */
                            /* opcode C4h E2h 79h D7h  not defined */
                            /* opcode C4h E2h 79h D8h  not defined */
                            /* opcode C4h E2h 79h D9h  not defined */
                            /* opcode C4h E2h 79h DAh  not defined */
                            /* opcode C4h E2h 79h DBh  not defined */
                            /* opcode C4h E2h 79h DCh  not defined */
                            /* opcode C4h E2h 79h DDh  not defined */
                            /* opcode C4h E2h 79h DEh  not defined */
                            /* opcode C4h E2h 79h DFh  not defined */
                            /* opcode C4h E2h 79h E0h  not defined */
                            /* opcode C4h E2h 79h E1h  not defined */
                            /* opcode C4h E2h 79h E2h  not defined */
                            /* opcode C4h E2h 79h E3h  not defined */
                            /* opcode C4h E2h 79h E4h  not defined */
                            /* opcode C4h E2h 79h E5h  not defined */
                            /* opcode C4h E2h 79h E6h  not defined */
                            /* opcode C4h E2h 79h E7h  not defined */
                            /* opcode C4h E2h 79h E8h  not defined */
                            /* opcode C4h E2h 79h E9h  not defined */
                            /* opcode C4h E2h 79h EAh  not defined */
                            /* opcode C4h E2h 79h EBh  not defined */
                            /* opcode C4h E2h 79h ECh  not defined */
                            /* opcode C4h E2h 79h EDh  not defined */
                            /* opcode C4h E2h 79h EEh  not defined */
                            /* opcode C4h E2h 79h EFh  not defined */
                            /* opcode C4h E2h 79h F0h  not defined */
                            /* opcode C4h E2h 79h F1h  not defined */
                            /* opcode C4h E2h 79h F2h  not defined */
                            /* opcode C4h E2h 79h F3h  not defined */
                            /* opcode C4h E2h 79h F4h  not defined */
                            /* opcode C4h E2h 79h F5h  not defined */
                            /* opcode C4h E2h 79h F6h  not defined */
                            /* opcode C4h E2h 79h F7h  not defined */
                            /* opcode C4h E2h 79h F8h  not defined */
                            /* opcode C4h E2h 79h F9h  not defined */
                            /* opcode C4h E2h 79h FAh  not defined */
                            /* opcode C4h E2h 79h FBh  not defined */
                            /* opcode C4h E2h 79h FCh  not defined */
                            /* opcode C4h E2h 79h FDh  not defined */
                            /* opcode C4h E2h 79h FEh  not defined */
                            /* opcode C4h E2h 79h FFh  not defined */
                            default:
                                goto _x86decode_illegal_opcode;
                        };
/* End of opcodes starting with C4h E2h 79h */
                        break;
                    /* opcode C4h E2h 7Ah  not defined */
                    /* opcode C4h E2h 7Bh  not defined */
                    /* opcode C4h E2h 7Ch  not defined */
                    case 0x7D: /* C4h E2h 7Dh        spec:  */
                        vex.V = ((~op) >> 3) & 7;
/* Opcodes starting with C4h E2h 7Dh */
                        op=IPFB();
                        _x86decode_begin_code32_addr32_opcode_parse_C4E27D:
                        switch (op) {
                            /* opcode C4h E2h 7Dh 00h  not defined */
                            /* opcode C4h E2h 7Dh 01h  not defined */
                            /* opcode C4h E2h 7Dh 02h  not defined */
                            /* opcode C4h E2h 7Dh 03h  not defined */
                            /* opcode C4h E2h 7Dh 04h  not defined */
                            /* opcode C4h E2h 7Dh 05h  not defined */
                            /* opcode C4h E2h 7Dh 06h  not defined */
                            /* opcode C4h E2h 7Dh 07h  not defined */
                            /* opcode C4h E2h 7Dh 08h  not defined */
                            /* opcode C4h E2h 7Dh 09h  not defined */
                            /* opcode C4h E2h 7Dh 0Ah  not defined */
                            /* opcode C4h E2h 7Dh 0Bh  not defined */
                            case 0x0C: /* C4h E2h 7Dh 0Ch VPERMILPS avx(reg),avx(vsidx),avx(r/m)      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x0C mod/reg/rm */
                                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VPERMILPS YMM%u,YMM%u,%s",mrm.reg(),vex.V,IPDecPrint32(mrm,sib,disp,32,RC_AVXREG,""));
                                break;
                            case 0x0D: /* C4h E2h 7Dh 0Dh VPERMILPD avx(reg),avx(vsidx),avx(r/m)      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x0D mod/reg/rm */
                                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VPERMILPD YMM%u,YMM%u,%s",mrm.reg(),vex.V,IPDecPrint32(mrm,sib,disp,32,RC_AVXREG,""));
                                break;
                            /* opcode C4h E2h 7Dh 0Eh  not defined */
                            /* opcode C4h E2h 7Dh 0Fh  not defined */
                            /* opcode C4h E2h 7Dh 10h  not defined */
                            /* opcode C4h E2h 7Dh 11h  not defined */
                            /* opcode C4h E2h 7Dh 12h  not defined */
                            /* opcode C4h E2h 7Dh 13h  not defined */
                            /* opcode C4h E2h 7Dh 14h  not defined */
                            /* opcode C4h E2h 7Dh 15h  not defined */
                            /* opcode C4h E2h 7Dh 16h  not defined */
                            /* opcode C4h E2h 7Dh 17h  not defined */
                            case 0x18: /* C4h E2h 7Dh 18h        spec:  */
                                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                                _x86decode_begin_code32_addr32_opcode_parse_C4E27D18:
/* Opcodes starting with C4h E2h 7Dh 18h */
                                switch (mrm.byte) {
                                    case 0x00: /* C4h E2h 7Dh 18h 00h VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=0 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x01: /* C4h E2h 7Dh 18h 01h VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=0 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x02: /* C4h E2h 7Dh 18h 02h VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=0 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x03: /* C4h E2h 7Dh 18h 03h VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=0 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x04: /* C4h E2h 7Dh 18h 04h VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=0 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x05: /* C4h E2h 7Dh 18h 05h VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=0 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x06: /* C4h E2h 7Dh 18h 06h VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=0 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x07: /* C4h E2h 7Dh 18h 07h VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=0 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x08: /* C4h E2h 7Dh 18h 08h VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=1 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x09: /* C4h E2h 7Dh 18h 09h VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=1 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x0A: /* C4h E2h 7Dh 18h 0Ah VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=1 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x0B: /* C4h E2h 7Dh 18h 0Bh VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=1 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x0C: /* C4h E2h 7Dh 18h 0Ch VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=1 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x0D: /* C4h E2h 7Dh 18h 0Dh VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=1 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x0E: /* C4h E2h 7Dh 18h 0Eh VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=1 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x0F: /* C4h E2h 7Dh 18h 0Fh VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=1 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x10: /* C4h E2h 7Dh 18h 10h VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=2 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x11: /* C4h E2h 7Dh 18h 11h VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=2 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x12: /* C4h E2h 7Dh 18h 12h VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=2 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x13: /* C4h E2h 7Dh 18h 13h VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=2 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x14: /* C4h E2h 7Dh 18h 14h VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=2 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x15: /* C4h E2h 7Dh 18h 15h VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=2 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x16: /* C4h E2h 7Dh 18h 16h VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=2 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x17: /* C4h E2h 7Dh 18h 17h VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=2 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x18: /* C4h E2h 7Dh 18h 18h VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=3 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x19: /* C4h E2h 7Dh 18h 19h VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=3 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x1A: /* C4h E2h 7Dh 18h 1Ah VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=3 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x1B: /* C4h E2h 7Dh 18h 1Bh VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=3 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x1C: /* C4h E2h 7Dh 18h 1Ch VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=3 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x1D: /* C4h E2h 7Dh 18h 1Dh VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=3 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x1E: /* C4h E2h 7Dh 18h 1Eh VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=3 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x1F: /* C4h E2h 7Dh 18h 1Fh VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=3 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x20: /* C4h E2h 7Dh 18h 20h VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=4 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x21: /* C4h E2h 7Dh 18h 21h VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=4 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x22: /* C4h E2h 7Dh 18h 22h VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=4 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x23: /* C4h E2h 7Dh 18h 23h VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=4 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x24: /* C4h E2h 7Dh 18h 24h VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=4 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x25: /* C4h E2h 7Dh 18h 25h VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=4 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x26: /* C4h E2h 7Dh 18h 26h VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=4 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x27: /* C4h E2h 7Dh 18h 27h VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=4 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x28: /* C4h E2h 7Dh 18h 28h VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=5 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x29: /* C4h E2h 7Dh 18h 29h VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=5 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x2A: /* C4h E2h 7Dh 18h 2Ah VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=5 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x2B: /* C4h E2h 7Dh 18h 2Bh VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=5 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x2C: /* C4h E2h 7Dh 18h 2Ch VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=5 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x2D: /* C4h E2h 7Dh 18h 2Dh VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=5 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x2E: /* C4h E2h 7Dh 18h 2Eh VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=5 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x2F: /* C4h E2h 7Dh 18h 2Fh VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=5 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x30: /* C4h E2h 7Dh 18h 30h VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=6 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x31: /* C4h E2h 7Dh 18h 31h VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=6 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x32: /* C4h E2h 7Dh 18h 32h VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=6 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x33: /* C4h E2h 7Dh 18h 33h VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=6 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x34: /* C4h E2h 7Dh 18h 34h VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=6 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x35: /* C4h E2h 7Dh 18h 35h VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=6 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x36: /* C4h E2h 7Dh 18h 36h VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=6 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x37: /* C4h E2h 7Dh 18h 37h VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=6 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x38: /* C4h E2h 7Dh 18h 38h VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=7 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x39: /* C4h E2h 7Dh 18h 39h VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=7 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x3A: /* C4h E2h 7Dh 18h 3Ah VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=7 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x3B: /* C4h E2h 7Dh 18h 3Bh VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=7 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x3C: /* C4h E2h 7Dh 18h 3Ch VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=7 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x3D: /* C4h E2h 7Dh 18h 3Dh VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=7 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x3E: /* C4h E2h 7Dh 18h 3Eh VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=7 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x3F: /* C4h E2h 7Dh 18h 3Fh VBROADCASTSS avx(reg),w32(r/m) mod=0 reg=7 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x40: /* C4h E2h 7Dh 18h 40h VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=0 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x41: /* C4h E2h 7Dh 18h 41h VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=0 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x42: /* C4h E2h 7Dh 18h 42h VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=0 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x43: /* C4h E2h 7Dh 18h 43h VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=0 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x44: /* C4h E2h 7Dh 18h 44h VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=0 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x45: /* C4h E2h 7Dh 18h 45h VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=0 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x46: /* C4h E2h 7Dh 18h 46h VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=0 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x47: /* C4h E2h 7Dh 18h 47h VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=0 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x48: /* C4h E2h 7Dh 18h 48h VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=1 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x49: /* C4h E2h 7Dh 18h 49h VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=1 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x4A: /* C4h E2h 7Dh 18h 4Ah VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=1 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x4B: /* C4h E2h 7Dh 18h 4Bh VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=1 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x4C: /* C4h E2h 7Dh 18h 4Ch VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=1 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x4D: /* C4h E2h 7Dh 18h 4Dh VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=1 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x4E: /* C4h E2h 7Dh 18h 4Eh VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=1 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x4F: /* C4h E2h 7Dh 18h 4Fh VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=1 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x50: /* C4h E2h 7Dh 18h 50h VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=2 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x51: /* C4h E2h 7Dh 18h 51h VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=2 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x52: /* C4h E2h 7Dh 18h 52h VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=2 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x53: /* C4h E2h 7Dh 18h 53h VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=2 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x54: /* C4h E2h 7Dh 18h 54h VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=2 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x55: /* C4h E2h 7Dh 18h 55h VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=2 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x56: /* C4h E2h 7Dh 18h 56h VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=2 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x57: /* C4h E2h 7Dh 18h 57h VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=2 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x58: /* C4h E2h 7Dh 18h 58h VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=3 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x59: /* C4h E2h 7Dh 18h 59h VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=3 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x5A: /* C4h E2h 7Dh 18h 5Ah VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=3 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x5B: /* C4h E2h 7Dh 18h 5Bh VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=3 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x5C: /* C4h E2h 7Dh 18h 5Ch VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=3 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x5D: /* C4h E2h 7Dh 18h 5Dh VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=3 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x5E: /* C4h E2h 7Dh 18h 5Eh VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=3 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x5F: /* C4h E2h 7Dh 18h 5Fh VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=3 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x60: /* C4h E2h 7Dh 18h 60h VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=4 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x61: /* C4h E2h 7Dh 18h 61h VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=4 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x62: /* C4h E2h 7Dh 18h 62h VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=4 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x63: /* C4h E2h 7Dh 18h 63h VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=4 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x64: /* C4h E2h 7Dh 18h 64h VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=4 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x65: /* C4h E2h 7Dh 18h 65h VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=4 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x66: /* C4h E2h 7Dh 18h 66h VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=4 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x67: /* C4h E2h 7Dh 18h 67h VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=4 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x68: /* C4h E2h 7Dh 18h 68h VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=5 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x69: /* C4h E2h 7Dh 18h 69h VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=5 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x6A: /* C4h E2h 7Dh 18h 6Ah VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=5 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x6B: /* C4h E2h 7Dh 18h 6Bh VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=5 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x6C: /* C4h E2h 7Dh 18h 6Ch VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=5 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x6D: /* C4h E2h 7Dh 18h 6Dh VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=5 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x6E: /* C4h E2h 7Dh 18h 6Eh VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=5 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x6F: /* C4h E2h 7Dh 18h 6Fh VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=5 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x70: /* C4h E2h 7Dh 18h 70h VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=6 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x71: /* C4h E2h 7Dh 18h 71h VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=6 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x72: /* C4h E2h 7Dh 18h 72h VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=6 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x73: /* C4h E2h 7Dh 18h 73h VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=6 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x74: /* C4h E2h 7Dh 18h 74h VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=6 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x75: /* C4h E2h 7Dh 18h 75h VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=6 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x76: /* C4h E2h 7Dh 18h 76h VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=6 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x77: /* C4h E2h 7Dh 18h 77h VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=6 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x78: /* C4h E2h 7Dh 18h 78h VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=7 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x79: /* C4h E2h 7Dh 18h 79h VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=7 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x7A: /* C4h E2h 7Dh 18h 7Ah VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=7 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x7B: /* C4h E2h 7Dh 18h 7Bh VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=7 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x7C: /* C4h E2h 7Dh 18h 7Ch VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=7 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x7D: /* C4h E2h 7Dh 18h 7Dh VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=7 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x7E: /* C4h E2h 7Dh 18h 7Eh VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=7 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x7F: /* C4h E2h 7Dh 18h 7Fh VBROADCASTSS avx(reg),w32(r/m) mod=1 reg=7 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x80: /* C4h E2h 7Dh 18h 80h VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=0 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x81: /* C4h E2h 7Dh 18h 81h VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=0 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x82: /* C4h E2h 7Dh 18h 82h VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=0 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x83: /* C4h E2h 7Dh 18h 83h VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=0 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x84: /* C4h E2h 7Dh 18h 84h VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=0 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x85: /* C4h E2h 7Dh 18h 85h VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=0 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x86: /* C4h E2h 7Dh 18h 86h VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=0 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x87: /* C4h E2h 7Dh 18h 87h VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=0 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x88: /* C4h E2h 7Dh 18h 88h VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=1 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x89: /* C4h E2h 7Dh 18h 89h VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=1 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x8A: /* C4h E2h 7Dh 18h 8Ah VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=1 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x8B: /* C4h E2h 7Dh 18h 8Bh VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=1 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x8C: /* C4h E2h 7Dh 18h 8Ch VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=1 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x8D: /* C4h E2h 7Dh 18h 8Dh VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=1 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x8E: /* C4h E2h 7Dh 18h 8Eh VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=1 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x8F: /* C4h E2h 7Dh 18h 8Fh VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=1 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x90: /* C4h E2h 7Dh 18h 90h VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=2 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x91: /* C4h E2h 7Dh 18h 91h VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=2 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x92: /* C4h E2h 7Dh 18h 92h VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=2 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x93: /* C4h E2h 7Dh 18h 93h VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=2 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x94: /* C4h E2h 7Dh 18h 94h VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=2 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x95: /* C4h E2h 7Dh 18h 95h VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=2 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x96: /* C4h E2h 7Dh 18h 96h VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=2 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x97: /* C4h E2h 7Dh 18h 97h VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=2 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x98: /* C4h E2h 7Dh 18h 98h VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=3 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x99: /* C4h E2h 7Dh 18h 99h VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=3 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x9A: /* C4h E2h 7Dh 18h 9Ah VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=3 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x9B: /* C4h E2h 7Dh 18h 9Bh VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=3 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x9C: /* C4h E2h 7Dh 18h 9Ch VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=3 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x9D: /* C4h E2h 7Dh 18h 9Dh VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=3 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x9E: /* C4h E2h 7Dh 18h 9Eh VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=3 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x9F: /* C4h E2h 7Dh 18h 9Fh VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=3 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xA0: /* C4h E2h 7Dh 18h A0h VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=4 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xA1: /* C4h E2h 7Dh 18h A1h VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=4 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xA2: /* C4h E2h 7Dh 18h A2h VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=4 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xA3: /* C4h E2h 7Dh 18h A3h VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=4 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xA4: /* C4h E2h 7Dh 18h A4h VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=4 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xA5: /* C4h E2h 7Dh 18h A5h VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=4 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xA6: /* C4h E2h 7Dh 18h A6h VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=4 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xA7: /* C4h E2h 7Dh 18h A7h VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=4 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xA8: /* C4h E2h 7Dh 18h A8h VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=5 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xA9: /* C4h E2h 7Dh 18h A9h VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=5 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xAA: /* C4h E2h 7Dh 18h AAh VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=5 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xAB: /* C4h E2h 7Dh 18h ABh VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=5 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xAC: /* C4h E2h 7Dh 18h ACh VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=5 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xAD: /* C4h E2h 7Dh 18h ADh VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=5 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xAE: /* C4h E2h 7Dh 18h AEh VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=5 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xAF: /* C4h E2h 7Dh 18h AFh VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=5 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xB0: /* C4h E2h 7Dh 18h B0h VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=6 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xB1: /* C4h E2h 7Dh 18h B1h VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=6 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xB2: /* C4h E2h 7Dh 18h B2h VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=6 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xB3: /* C4h E2h 7Dh 18h B3h VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=6 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xB4: /* C4h E2h 7Dh 18h B4h VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=6 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xB5: /* C4h E2h 7Dh 18h B5h VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=6 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xB6: /* C4h E2h 7Dh 18h B6h VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=6 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xB7: /* C4h E2h 7Dh 18h B7h VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=6 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xB8: /* C4h E2h 7Dh 18h B8h VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=7 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xB9: /* C4h E2h 7Dh 18h B9h VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=7 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xBA: /* C4h E2h 7Dh 18h BAh VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=7 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xBB: /* C4h E2h 7Dh 18h BBh VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=7 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xBC: /* C4h E2h 7Dh 18h BCh VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=7 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xBD: /* C4h E2h 7Dh 18h BDh VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=7 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xBE: /* C4h E2h 7Dh 18h BEh VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=7 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xBF: /* C4h E2h 7Dh 18h BFh VBROADCASTSS avx(reg),w32(r/m) mod=2 reg=7 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod!=3 vsidx(0) */
                                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VBROADCASTSS YMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,4,RC_REG,"w32"));
                                        break;
                                    case 0xC0: /* C4h E2h 7Dh 18h C0h VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=0 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xC1: /* C4h E2h 7Dh 18h C1h VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=0 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xC2: /* C4h E2h 7Dh 18h C2h VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=0 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xC3: /* C4h E2h 7Dh 18h C3h VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=0 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xC4: /* C4h E2h 7Dh 18h C4h VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=0 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xC5: /* C4h E2h 7Dh 18h C5h VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=0 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xC6: /* C4h E2h 7Dh 18h C6h VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=0 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xC7: /* C4h E2h 7Dh 18h C7h VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=0 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xC8: /* C4h E2h 7Dh 18h C8h VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=1 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xC9: /* C4h E2h 7Dh 18h C9h VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=1 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xCA: /* C4h E2h 7Dh 18h CAh VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=1 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xCB: /* C4h E2h 7Dh 18h CBh VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=1 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xCC: /* C4h E2h 7Dh 18h CCh VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=1 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xCD: /* C4h E2h 7Dh 18h CDh VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=1 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xCE: /* C4h E2h 7Dh 18h CEh VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=1 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xCF: /* C4h E2h 7Dh 18h CFh VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=1 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xD0: /* C4h E2h 7Dh 18h D0h VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=2 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xD1: /* C4h E2h 7Dh 18h D1h VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=2 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xD2: /* C4h E2h 7Dh 18h D2h VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=2 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xD3: /* C4h E2h 7Dh 18h D3h VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=2 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xD4: /* C4h E2h 7Dh 18h D4h VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=2 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xD5: /* C4h E2h 7Dh 18h D5h VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=2 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xD6: /* C4h E2h 7Dh 18h D6h VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=2 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xD7: /* C4h E2h 7Dh 18h D7h VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=2 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xD8: /* C4h E2h 7Dh 18h D8h VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=3 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xD9: /* C4h E2h 7Dh 18h D9h VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=3 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xDA: /* C4h E2h 7Dh 18h DAh VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=3 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xDB: /* C4h E2h 7Dh 18h DBh VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=3 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xDC: /* C4h E2h 7Dh 18h DCh VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=3 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xDD: /* C4h E2h 7Dh 18h DDh VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=3 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xDE: /* C4h E2h 7Dh 18h DEh VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=3 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xDF: /* C4h E2h 7Dh 18h DFh VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=3 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xE0: /* C4h E2h 7Dh 18h E0h VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=4 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xE1: /* C4h E2h 7Dh 18h E1h VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=4 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xE2: /* C4h E2h 7Dh 18h E2h VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=4 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xE3: /* C4h E2h 7Dh 18h E3h VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=4 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xE4: /* C4h E2h 7Dh 18h E4h VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=4 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xE5: /* C4h E2h 7Dh 18h E5h VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=4 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xE6: /* C4h E2h 7Dh 18h E6h VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=4 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xE7: /* C4h E2h 7Dh 18h E7h VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=4 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xE8: /* C4h E2h 7Dh 18h E8h VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=5 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xE9: /* C4h E2h 7Dh 18h E9h VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=5 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xEA: /* C4h E2h 7Dh 18h EAh VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=5 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xEB: /* C4h E2h 7Dh 18h EBh VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=5 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xEC: /* C4h E2h 7Dh 18h ECh VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=5 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xED: /* C4h E2h 7Dh 18h EDh VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=5 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xEE: /* C4h E2h 7Dh 18h EEh VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=5 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xEF: /* C4h E2h 7Dh 18h EFh VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=5 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xF0: /* C4h E2h 7Dh 18h F0h VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=6 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xF1: /* C4h E2h 7Dh 18h F1h VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=6 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xF2: /* C4h E2h 7Dh 18h F2h VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=6 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xF3: /* C4h E2h 7Dh 18h F3h VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=6 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xF4: /* C4h E2h 7Dh 18h F4h VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=6 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xF5: /* C4h E2h 7Dh 18h F5h VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=6 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xF6: /* C4h E2h 7Dh 18h F6h VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=6 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xF7: /* C4h E2h 7Dh 18h F7h VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=6 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xF8: /* C4h E2h 7Dh 18h F8h VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=7 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xF9: /* C4h E2h 7Dh 18h F9h VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=7 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xFA: /* C4h E2h 7Dh 18h FAh VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=7 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xFB: /* C4h E2h 7Dh 18h FBh VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=7 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xFC: /* C4h E2h 7Dh 18h FCh VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=7 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xFD: /* C4h E2h 7Dh 18h FDh VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=7 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xFE: /* C4h E2h 7Dh 18h FEh VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=7 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xFF: /* C4h E2h 7Dh 18h FFh VBROADCASTSS avx(reg),sse(r/m) mod=3 reg=7 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x18 mod/reg/rm mod==3 vsidx(0) */
                                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VBROADCASTSS YMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                                        break;
                                    default:
                                        goto _x86decode_illegal_opcode;
                                };
/* End of opcodes starting with C4h E2h 7Dh 18h */
                                break;
                            case 0x19: /* C4h E2h 7Dh 19h        spec:  */
                                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                                _x86decode_begin_code32_addr32_opcode_parse_C4E27D19:
/* Opcodes starting with C4h E2h 7Dh 19h */
                                switch (mrm.byte) {
                                    case 0x00: /* C4h E2h 7Dh 19h 00h VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=0 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x01: /* C4h E2h 7Dh 19h 01h VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=0 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x02: /* C4h E2h 7Dh 19h 02h VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=0 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x03: /* C4h E2h 7Dh 19h 03h VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=0 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x04: /* C4h E2h 7Dh 19h 04h VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=0 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x05: /* C4h E2h 7Dh 19h 05h VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=0 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x06: /* C4h E2h 7Dh 19h 06h VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=0 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x07: /* C4h E2h 7Dh 19h 07h VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=0 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x08: /* C4h E2h 7Dh 19h 08h VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=1 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x09: /* C4h E2h 7Dh 19h 09h VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=1 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x0A: /* C4h E2h 7Dh 19h 0Ah VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=1 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x0B: /* C4h E2h 7Dh 19h 0Bh VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=1 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x0C: /* C4h E2h 7Dh 19h 0Ch VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=1 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x0D: /* C4h E2h 7Dh 19h 0Dh VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=1 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x0E: /* C4h E2h 7Dh 19h 0Eh VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=1 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x0F: /* C4h E2h 7Dh 19h 0Fh VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=1 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x10: /* C4h E2h 7Dh 19h 10h VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=2 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x11: /* C4h E2h 7Dh 19h 11h VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=2 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x12: /* C4h E2h 7Dh 19h 12h VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=2 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x13: /* C4h E2h 7Dh 19h 13h VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=2 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x14: /* C4h E2h 7Dh 19h 14h VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=2 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x15: /* C4h E2h 7Dh 19h 15h VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=2 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x16: /* C4h E2h 7Dh 19h 16h VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=2 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x17: /* C4h E2h 7Dh 19h 17h VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=2 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x18: /* C4h E2h 7Dh 19h 18h VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=3 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x19: /* C4h E2h 7Dh 19h 19h VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=3 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x1A: /* C4h E2h 7Dh 19h 1Ah VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=3 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x1B: /* C4h E2h 7Dh 19h 1Bh VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=3 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x1C: /* C4h E2h 7Dh 19h 1Ch VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=3 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x1D: /* C4h E2h 7Dh 19h 1Dh VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=3 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x1E: /* C4h E2h 7Dh 19h 1Eh VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=3 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x1F: /* C4h E2h 7Dh 19h 1Fh VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=3 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x20: /* C4h E2h 7Dh 19h 20h VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=4 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x21: /* C4h E2h 7Dh 19h 21h VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=4 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x22: /* C4h E2h 7Dh 19h 22h VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=4 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x23: /* C4h E2h 7Dh 19h 23h VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=4 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x24: /* C4h E2h 7Dh 19h 24h VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=4 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x25: /* C4h E2h 7Dh 19h 25h VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=4 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x26: /* C4h E2h 7Dh 19h 26h VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=4 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x27: /* C4h E2h 7Dh 19h 27h VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=4 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x28: /* C4h E2h 7Dh 19h 28h VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=5 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x29: /* C4h E2h 7Dh 19h 29h VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=5 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x2A: /* C4h E2h 7Dh 19h 2Ah VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=5 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x2B: /* C4h E2h 7Dh 19h 2Bh VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=5 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x2C: /* C4h E2h 7Dh 19h 2Ch VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=5 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x2D: /* C4h E2h 7Dh 19h 2Dh VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=5 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x2E: /* C4h E2h 7Dh 19h 2Eh VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=5 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x2F: /* C4h E2h 7Dh 19h 2Fh VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=5 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x30: /* C4h E2h 7Dh 19h 30h VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=6 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x31: /* C4h E2h 7Dh 19h 31h VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=6 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x32: /* C4h E2h 7Dh 19h 32h VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=6 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x33: /* C4h E2h 7Dh 19h 33h VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=6 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x34: /* C4h E2h 7Dh 19h 34h VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=6 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x35: /* C4h E2h 7Dh 19h 35h VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=6 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x36: /* C4h E2h 7Dh 19h 36h VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=6 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x37: /* C4h E2h 7Dh 19h 37h VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=6 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x38: /* C4h E2h 7Dh 19h 38h VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=7 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x39: /* C4h E2h 7Dh 19h 39h VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=7 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x3A: /* C4h E2h 7Dh 19h 3Ah VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=7 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x3B: /* C4h E2h 7Dh 19h 3Bh VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=7 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x3C: /* C4h E2h 7Dh 19h 3Ch VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=7 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x3D: /* C4h E2h 7Dh 19h 3Dh VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=7 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x3E: /* C4h E2h 7Dh 19h 3Eh VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=7 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x3F: /* C4h E2h 7Dh 19h 3Fh VBROADCASTSD avx(reg),w64(r/m) mod=0 reg=7 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x40: /* C4h E2h 7Dh 19h 40h VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=0 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x41: /* C4h E2h 7Dh 19h 41h VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=0 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x42: /* C4h E2h 7Dh 19h 42h VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=0 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x43: /* C4h E2h 7Dh 19h 43h VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=0 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x44: /* C4h E2h 7Dh 19h 44h VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=0 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x45: /* C4h E2h 7Dh 19h 45h VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=0 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x46: /* C4h E2h 7Dh 19h 46h VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=0 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x47: /* C4h E2h 7Dh 19h 47h VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=0 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x48: /* C4h E2h 7Dh 19h 48h VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=1 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x49: /* C4h E2h 7Dh 19h 49h VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=1 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x4A: /* C4h E2h 7Dh 19h 4Ah VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=1 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x4B: /* C4h E2h 7Dh 19h 4Bh VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=1 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x4C: /* C4h E2h 7Dh 19h 4Ch VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=1 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x4D: /* C4h E2h 7Dh 19h 4Dh VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=1 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x4E: /* C4h E2h 7Dh 19h 4Eh VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=1 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x4F: /* C4h E2h 7Dh 19h 4Fh VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=1 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x50: /* C4h E2h 7Dh 19h 50h VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=2 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x51: /* C4h E2h 7Dh 19h 51h VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=2 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x52: /* C4h E2h 7Dh 19h 52h VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=2 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x53: /* C4h E2h 7Dh 19h 53h VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=2 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x54: /* C4h E2h 7Dh 19h 54h VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=2 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x55: /* C4h E2h 7Dh 19h 55h VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=2 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x56: /* C4h E2h 7Dh 19h 56h VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=2 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x57: /* C4h E2h 7Dh 19h 57h VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=2 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x58: /* C4h E2h 7Dh 19h 58h VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=3 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x59: /* C4h E2h 7Dh 19h 59h VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=3 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x5A: /* C4h E2h 7Dh 19h 5Ah VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=3 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x5B: /* C4h E2h 7Dh 19h 5Bh VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=3 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x5C: /* C4h E2h 7Dh 19h 5Ch VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=3 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x5D: /* C4h E2h 7Dh 19h 5Dh VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=3 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x5E: /* C4h E2h 7Dh 19h 5Eh VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=3 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x5F: /* C4h E2h 7Dh 19h 5Fh VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=3 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x60: /* C4h E2h 7Dh 19h 60h VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=4 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x61: /* C4h E2h 7Dh 19h 61h VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=4 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x62: /* C4h E2h 7Dh 19h 62h VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=4 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x63: /* C4h E2h 7Dh 19h 63h VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=4 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x64: /* C4h E2h 7Dh 19h 64h VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=4 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x65: /* C4h E2h 7Dh 19h 65h VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=4 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x66: /* C4h E2h 7Dh 19h 66h VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=4 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x67: /* C4h E2h 7Dh 19h 67h VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=4 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x68: /* C4h E2h 7Dh 19h 68h VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=5 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x69: /* C4h E2h 7Dh 19h 69h VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=5 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x6A: /* C4h E2h 7Dh 19h 6Ah VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=5 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x6B: /* C4h E2h 7Dh 19h 6Bh VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=5 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x6C: /* C4h E2h 7Dh 19h 6Ch VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=5 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x6D: /* C4h E2h 7Dh 19h 6Dh VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=5 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x6E: /* C4h E2h 7Dh 19h 6Eh VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=5 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x6F: /* C4h E2h 7Dh 19h 6Fh VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=5 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x70: /* C4h E2h 7Dh 19h 70h VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=6 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x71: /* C4h E2h 7Dh 19h 71h VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=6 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x72: /* C4h E2h 7Dh 19h 72h VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=6 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x73: /* C4h E2h 7Dh 19h 73h VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=6 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x74: /* C4h E2h 7Dh 19h 74h VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=6 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x75: /* C4h E2h 7Dh 19h 75h VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=6 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x76: /* C4h E2h 7Dh 19h 76h VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=6 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x77: /* C4h E2h 7Dh 19h 77h VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=6 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x78: /* C4h E2h 7Dh 19h 78h VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=7 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x79: /* C4h E2h 7Dh 19h 79h VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=7 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x7A: /* C4h E2h 7Dh 19h 7Ah VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=7 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x7B: /* C4h E2h 7Dh 19h 7Bh VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=7 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x7C: /* C4h E2h 7Dh 19h 7Ch VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=7 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x7D: /* C4h E2h 7Dh 19h 7Dh VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=7 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x7E: /* C4h E2h 7Dh 19h 7Eh VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=7 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x7F: /* C4h E2h 7Dh 19h 7Fh VBROADCASTSD avx(reg),w64(r/m) mod=1 reg=7 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x80: /* C4h E2h 7Dh 19h 80h VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=0 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x81: /* C4h E2h 7Dh 19h 81h VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=0 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x82: /* C4h E2h 7Dh 19h 82h VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=0 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x83: /* C4h E2h 7Dh 19h 83h VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=0 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x84: /* C4h E2h 7Dh 19h 84h VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=0 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x85: /* C4h E2h 7Dh 19h 85h VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=0 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x86: /* C4h E2h 7Dh 19h 86h VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=0 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x87: /* C4h E2h 7Dh 19h 87h VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=0 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x88: /* C4h E2h 7Dh 19h 88h VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=1 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x89: /* C4h E2h 7Dh 19h 89h VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=1 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x8A: /* C4h E2h 7Dh 19h 8Ah VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=1 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x8B: /* C4h E2h 7Dh 19h 8Bh VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=1 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x8C: /* C4h E2h 7Dh 19h 8Ch VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=1 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x8D: /* C4h E2h 7Dh 19h 8Dh VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=1 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x8E: /* C4h E2h 7Dh 19h 8Eh VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=1 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x8F: /* C4h E2h 7Dh 19h 8Fh VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=1 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x90: /* C4h E2h 7Dh 19h 90h VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=2 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x91: /* C4h E2h 7Dh 19h 91h VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=2 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x92: /* C4h E2h 7Dh 19h 92h VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=2 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x93: /* C4h E2h 7Dh 19h 93h VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=2 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x94: /* C4h E2h 7Dh 19h 94h VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=2 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x95: /* C4h E2h 7Dh 19h 95h VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=2 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x96: /* C4h E2h 7Dh 19h 96h VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=2 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x97: /* C4h E2h 7Dh 19h 97h VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=2 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x98: /* C4h E2h 7Dh 19h 98h VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=3 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x99: /* C4h E2h 7Dh 19h 99h VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=3 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x9A: /* C4h E2h 7Dh 19h 9Ah VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=3 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x9B: /* C4h E2h 7Dh 19h 9Bh VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=3 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x9C: /* C4h E2h 7Dh 19h 9Ch VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=3 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x9D: /* C4h E2h 7Dh 19h 9Dh VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=3 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x9E: /* C4h E2h 7Dh 19h 9Eh VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=3 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x9F: /* C4h E2h 7Dh 19h 9Fh VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=3 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xA0: /* C4h E2h 7Dh 19h A0h VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=4 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xA1: /* C4h E2h 7Dh 19h A1h VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=4 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xA2: /* C4h E2h 7Dh 19h A2h VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=4 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xA3: /* C4h E2h 7Dh 19h A3h VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=4 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xA4: /* C4h E2h 7Dh 19h A4h VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=4 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xA5: /* C4h E2h 7Dh 19h A5h VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=4 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xA6: /* C4h E2h 7Dh 19h A6h VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=4 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xA7: /* C4h E2h 7Dh 19h A7h VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=4 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xA8: /* C4h E2h 7Dh 19h A8h VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=5 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xA9: /* C4h E2h 7Dh 19h A9h VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=5 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xAA: /* C4h E2h 7Dh 19h AAh VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=5 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xAB: /* C4h E2h 7Dh 19h ABh VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=5 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xAC: /* C4h E2h 7Dh 19h ACh VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=5 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xAD: /* C4h E2h 7Dh 19h ADh VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=5 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xAE: /* C4h E2h 7Dh 19h AEh VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=5 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xAF: /* C4h E2h 7Dh 19h AFh VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=5 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xB0: /* C4h E2h 7Dh 19h B0h VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=6 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xB1: /* C4h E2h 7Dh 19h B1h VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=6 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xB2: /* C4h E2h 7Dh 19h B2h VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=6 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xB3: /* C4h E2h 7Dh 19h B3h VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=6 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xB4: /* C4h E2h 7Dh 19h B4h VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=6 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xB5: /* C4h E2h 7Dh 19h B5h VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=6 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xB6: /* C4h E2h 7Dh 19h B6h VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=6 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xB7: /* C4h E2h 7Dh 19h B7h VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=6 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xB8: /* C4h E2h 7Dh 19h B8h VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=7 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xB9: /* C4h E2h 7Dh 19h B9h VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=7 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xBA: /* C4h E2h 7Dh 19h BAh VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=7 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xBB: /* C4h E2h 7Dh 19h BBh VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=7 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xBC: /* C4h E2h 7Dh 19h BCh VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=7 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xBD: /* C4h E2h 7Dh 19h BDh VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=7 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xBE: /* C4h E2h 7Dh 19h BEh VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=7 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xBF: /* C4h E2h 7Dh 19h BFh VBROADCASTSD avx(reg),w64(r/m) mod=2 reg=7 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod!=3 vsidx(0) */
                                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VBROADCASTSD YMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_REG,"w64"));
                                        break;
                                    case 0xC0: /* C4h E2h 7Dh 19h C0h VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=0 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xC1: /* C4h E2h 7Dh 19h C1h VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=0 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xC2: /* C4h E2h 7Dh 19h C2h VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=0 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xC3: /* C4h E2h 7Dh 19h C3h VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=0 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xC4: /* C4h E2h 7Dh 19h C4h VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=0 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xC5: /* C4h E2h 7Dh 19h C5h VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=0 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xC6: /* C4h E2h 7Dh 19h C6h VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=0 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xC7: /* C4h E2h 7Dh 19h C7h VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=0 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xC8: /* C4h E2h 7Dh 19h C8h VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=1 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xC9: /* C4h E2h 7Dh 19h C9h VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=1 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xCA: /* C4h E2h 7Dh 19h CAh VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=1 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xCB: /* C4h E2h 7Dh 19h CBh VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=1 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xCC: /* C4h E2h 7Dh 19h CCh VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=1 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xCD: /* C4h E2h 7Dh 19h CDh VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=1 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xCE: /* C4h E2h 7Dh 19h CEh VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=1 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xCF: /* C4h E2h 7Dh 19h CFh VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=1 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xD0: /* C4h E2h 7Dh 19h D0h VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=2 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xD1: /* C4h E2h 7Dh 19h D1h VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=2 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xD2: /* C4h E2h 7Dh 19h D2h VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=2 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xD3: /* C4h E2h 7Dh 19h D3h VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=2 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xD4: /* C4h E2h 7Dh 19h D4h VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=2 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xD5: /* C4h E2h 7Dh 19h D5h VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=2 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xD6: /* C4h E2h 7Dh 19h D6h VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=2 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xD7: /* C4h E2h 7Dh 19h D7h VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=2 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xD8: /* C4h E2h 7Dh 19h D8h VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=3 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xD9: /* C4h E2h 7Dh 19h D9h VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=3 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xDA: /* C4h E2h 7Dh 19h DAh VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=3 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xDB: /* C4h E2h 7Dh 19h DBh VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=3 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xDC: /* C4h E2h 7Dh 19h DCh VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=3 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xDD: /* C4h E2h 7Dh 19h DDh VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=3 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xDE: /* C4h E2h 7Dh 19h DEh VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=3 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xDF: /* C4h E2h 7Dh 19h DFh VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=3 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xE0: /* C4h E2h 7Dh 19h E0h VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=4 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xE1: /* C4h E2h 7Dh 19h E1h VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=4 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xE2: /* C4h E2h 7Dh 19h E2h VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=4 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xE3: /* C4h E2h 7Dh 19h E3h VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=4 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xE4: /* C4h E2h 7Dh 19h E4h VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=4 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xE5: /* C4h E2h 7Dh 19h E5h VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=4 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xE6: /* C4h E2h 7Dh 19h E6h VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=4 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xE7: /* C4h E2h 7Dh 19h E7h VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=4 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xE8: /* C4h E2h 7Dh 19h E8h VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=5 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xE9: /* C4h E2h 7Dh 19h E9h VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=5 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xEA: /* C4h E2h 7Dh 19h EAh VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=5 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xEB: /* C4h E2h 7Dh 19h EBh VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=5 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xEC: /* C4h E2h 7Dh 19h ECh VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=5 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xED: /* C4h E2h 7Dh 19h EDh VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=5 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xEE: /* C4h E2h 7Dh 19h EEh VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=5 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xEF: /* C4h E2h 7Dh 19h EFh VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=5 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xF0: /* C4h E2h 7Dh 19h F0h VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=6 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xF1: /* C4h E2h 7Dh 19h F1h VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=6 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xF2: /* C4h E2h 7Dh 19h F2h VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=6 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xF3: /* C4h E2h 7Dh 19h F3h VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=6 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xF4: /* C4h E2h 7Dh 19h F4h VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=6 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xF5: /* C4h E2h 7Dh 19h F5h VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=6 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xF6: /* C4h E2h 7Dh 19h F6h VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=6 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xF7: /* C4h E2h 7Dh 19h F7h VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=6 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xF8: /* C4h E2h 7Dh 19h F8h VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=7 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xF9: /* C4h E2h 7Dh 19h F9h VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=7 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xFA: /* C4h E2h 7Dh 19h FAh VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=7 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xFB: /* C4h E2h 7Dh 19h FBh VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=7 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xFC: /* C4h E2h 7Dh 19h FCh VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=7 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xFD: /* C4h E2h 7Dh 19h FDh VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=7 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xFE: /* C4h E2h 7Dh 19h FEh VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=7 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                    case 0xFF: /* C4h E2h 7Dh 19h FFh VBROADCASTSD avx(reg),sse(r/m) mod=3 reg=7 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x19 mod/reg/rm mod==3 vsidx(0) */
                                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VBROADCASTSD YMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                                        break;
                                    default:
                                        goto _x86decode_illegal_opcode;
                                };
/* End of opcodes starting with C4h E2h 7Dh 19h */
                                break;
                            case 0x1A: /* C4h E2h 7Dh 1Ah        spec:  */
                                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                                _x86decode_begin_code32_addr32_opcode_parse_C4E27D1A:
/* Opcodes starting with C4h E2h 7Dh 1Ah */
                                switch (mrm.byte) {
                                    case 0x00: /* C4h E2h 7Dh 1Ah 00h VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=0 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x01: /* C4h E2h 7Dh 1Ah 01h VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=0 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x02: /* C4h E2h 7Dh 1Ah 02h VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=0 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x03: /* C4h E2h 7Dh 1Ah 03h VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=0 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x04: /* C4h E2h 7Dh 1Ah 04h VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=0 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x05: /* C4h E2h 7Dh 1Ah 05h VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=0 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x06: /* C4h E2h 7Dh 1Ah 06h VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=0 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x07: /* C4h E2h 7Dh 1Ah 07h VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=0 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x08: /* C4h E2h 7Dh 1Ah 08h VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=1 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x09: /* C4h E2h 7Dh 1Ah 09h VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=1 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x0A: /* C4h E2h 7Dh 1Ah 0Ah VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=1 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x0B: /* C4h E2h 7Dh 1Ah 0Bh VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=1 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x0C: /* C4h E2h 7Dh 1Ah 0Ch VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=1 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x0D: /* C4h E2h 7Dh 1Ah 0Dh VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=1 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x0E: /* C4h E2h 7Dh 1Ah 0Eh VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=1 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x0F: /* C4h E2h 7Dh 1Ah 0Fh VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=1 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x10: /* C4h E2h 7Dh 1Ah 10h VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=2 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x11: /* C4h E2h 7Dh 1Ah 11h VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=2 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x12: /* C4h E2h 7Dh 1Ah 12h VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=2 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x13: /* C4h E2h 7Dh 1Ah 13h VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=2 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x14: /* C4h E2h 7Dh 1Ah 14h VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=2 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x15: /* C4h E2h 7Dh 1Ah 15h VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=2 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x16: /* C4h E2h 7Dh 1Ah 16h VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=2 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x17: /* C4h E2h 7Dh 1Ah 17h VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=2 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x18: /* C4h E2h 7Dh 1Ah 18h VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=3 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x19: /* C4h E2h 7Dh 1Ah 19h VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=3 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x1A: /* C4h E2h 7Dh 1Ah 1Ah VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=3 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x1B: /* C4h E2h 7Dh 1Ah 1Bh VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=3 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x1C: /* C4h E2h 7Dh 1Ah 1Ch VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=3 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x1D: /* C4h E2h 7Dh 1Ah 1Dh VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=3 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x1E: /* C4h E2h 7Dh 1Ah 1Eh VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=3 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x1F: /* C4h E2h 7Dh 1Ah 1Fh VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=3 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x20: /* C4h E2h 7Dh 1Ah 20h VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=4 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x21: /* C4h E2h 7Dh 1Ah 21h VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=4 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x22: /* C4h E2h 7Dh 1Ah 22h VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=4 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x23: /* C4h E2h 7Dh 1Ah 23h VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=4 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x24: /* C4h E2h 7Dh 1Ah 24h VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=4 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x25: /* C4h E2h 7Dh 1Ah 25h VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=4 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x26: /* C4h E2h 7Dh 1Ah 26h VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=4 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x27: /* C4h E2h 7Dh 1Ah 27h VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=4 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x28: /* C4h E2h 7Dh 1Ah 28h VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=5 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x29: /* C4h E2h 7Dh 1Ah 29h VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=5 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x2A: /* C4h E2h 7Dh 1Ah 2Ah VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=5 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x2B: /* C4h E2h 7Dh 1Ah 2Bh VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=5 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x2C: /* C4h E2h 7Dh 1Ah 2Ch VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=5 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x2D: /* C4h E2h 7Dh 1Ah 2Dh VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=5 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x2E: /* C4h E2h 7Dh 1Ah 2Eh VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=5 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x2F: /* C4h E2h 7Dh 1Ah 2Fh VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=5 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x30: /* C4h E2h 7Dh 1Ah 30h VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=6 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x31: /* C4h E2h 7Dh 1Ah 31h VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=6 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x32: /* C4h E2h 7Dh 1Ah 32h VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=6 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x33: /* C4h E2h 7Dh 1Ah 33h VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=6 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x34: /* C4h E2h 7Dh 1Ah 34h VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=6 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x35: /* C4h E2h 7Dh 1Ah 35h VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=6 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x36: /* C4h E2h 7Dh 1Ah 36h VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=6 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x37: /* C4h E2h 7Dh 1Ah 37h VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=6 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x38: /* C4h E2h 7Dh 1Ah 38h VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=7 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x39: /* C4h E2h 7Dh 1Ah 39h VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=7 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x3A: /* C4h E2h 7Dh 1Ah 3Ah VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=7 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x3B: /* C4h E2h 7Dh 1Ah 3Bh VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=7 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x3C: /* C4h E2h 7Dh 1Ah 3Ch VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=7 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x3D: /* C4h E2h 7Dh 1Ah 3Dh VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=7 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x3E: /* C4h E2h 7Dh 1Ah 3Eh VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=7 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x3F: /* C4h E2h 7Dh 1Ah 3Fh VBROADCASTF128 avx(reg),sse(r/m) mod=0 reg=7 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x40: /* C4h E2h 7Dh 1Ah 40h VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=0 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x41: /* C4h E2h 7Dh 1Ah 41h VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=0 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x42: /* C4h E2h 7Dh 1Ah 42h VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=0 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x43: /* C4h E2h 7Dh 1Ah 43h VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=0 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x44: /* C4h E2h 7Dh 1Ah 44h VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=0 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x45: /* C4h E2h 7Dh 1Ah 45h VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=0 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x46: /* C4h E2h 7Dh 1Ah 46h VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=0 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x47: /* C4h E2h 7Dh 1Ah 47h VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=0 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x48: /* C4h E2h 7Dh 1Ah 48h VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=1 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x49: /* C4h E2h 7Dh 1Ah 49h VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=1 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x4A: /* C4h E2h 7Dh 1Ah 4Ah VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=1 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x4B: /* C4h E2h 7Dh 1Ah 4Bh VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=1 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x4C: /* C4h E2h 7Dh 1Ah 4Ch VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=1 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x4D: /* C4h E2h 7Dh 1Ah 4Dh VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=1 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x4E: /* C4h E2h 7Dh 1Ah 4Eh VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=1 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x4F: /* C4h E2h 7Dh 1Ah 4Fh VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=1 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x50: /* C4h E2h 7Dh 1Ah 50h VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=2 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x51: /* C4h E2h 7Dh 1Ah 51h VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=2 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x52: /* C4h E2h 7Dh 1Ah 52h VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=2 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x53: /* C4h E2h 7Dh 1Ah 53h VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=2 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x54: /* C4h E2h 7Dh 1Ah 54h VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=2 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x55: /* C4h E2h 7Dh 1Ah 55h VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=2 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x56: /* C4h E2h 7Dh 1Ah 56h VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=2 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x57: /* C4h E2h 7Dh 1Ah 57h VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=2 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x58: /* C4h E2h 7Dh 1Ah 58h VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=3 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x59: /* C4h E2h 7Dh 1Ah 59h VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=3 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x5A: /* C4h E2h 7Dh 1Ah 5Ah VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=3 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x5B: /* C4h E2h 7Dh 1Ah 5Bh VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=3 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x5C: /* C4h E2h 7Dh 1Ah 5Ch VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=3 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x5D: /* C4h E2h 7Dh 1Ah 5Dh VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=3 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x5E: /* C4h E2h 7Dh 1Ah 5Eh VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=3 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x5F: /* C4h E2h 7Dh 1Ah 5Fh VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=3 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x60: /* C4h E2h 7Dh 1Ah 60h VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=4 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x61: /* C4h E2h 7Dh 1Ah 61h VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=4 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x62: /* C4h E2h 7Dh 1Ah 62h VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=4 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x63: /* C4h E2h 7Dh 1Ah 63h VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=4 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x64: /* C4h E2h 7Dh 1Ah 64h VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=4 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x65: /* C4h E2h 7Dh 1Ah 65h VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=4 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x66: /* C4h E2h 7Dh 1Ah 66h VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=4 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x67: /* C4h E2h 7Dh 1Ah 67h VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=4 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x68: /* C4h E2h 7Dh 1Ah 68h VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=5 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x69: /* C4h E2h 7Dh 1Ah 69h VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=5 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x6A: /* C4h E2h 7Dh 1Ah 6Ah VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=5 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x6B: /* C4h E2h 7Dh 1Ah 6Bh VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=5 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x6C: /* C4h E2h 7Dh 1Ah 6Ch VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=5 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x6D: /* C4h E2h 7Dh 1Ah 6Dh VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=5 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x6E: /* C4h E2h 7Dh 1Ah 6Eh VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=5 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x6F: /* C4h E2h 7Dh 1Ah 6Fh VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=5 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x70: /* C4h E2h 7Dh 1Ah 70h VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=6 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x71: /* C4h E2h 7Dh 1Ah 71h VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=6 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x72: /* C4h E2h 7Dh 1Ah 72h VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=6 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x73: /* C4h E2h 7Dh 1Ah 73h VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=6 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x74: /* C4h E2h 7Dh 1Ah 74h VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=6 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x75: /* C4h E2h 7Dh 1Ah 75h VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=6 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x76: /* C4h E2h 7Dh 1Ah 76h VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=6 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x77: /* C4h E2h 7Dh 1Ah 77h VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=6 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x78: /* C4h E2h 7Dh 1Ah 78h VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=7 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x79: /* C4h E2h 7Dh 1Ah 79h VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=7 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x7A: /* C4h E2h 7Dh 1Ah 7Ah VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=7 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x7B: /* C4h E2h 7Dh 1Ah 7Bh VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=7 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x7C: /* C4h E2h 7Dh 1Ah 7Ch VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=7 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x7D: /* C4h E2h 7Dh 1Ah 7Dh VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=7 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x7E: /* C4h E2h 7Dh 1Ah 7Eh VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=7 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x7F: /* C4h E2h 7Dh 1Ah 7Fh VBROADCASTF128 avx(reg),sse(r/m) mod=1 reg=7 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x80: /* C4h E2h 7Dh 1Ah 80h VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=0 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x81: /* C4h E2h 7Dh 1Ah 81h VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=0 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x82: /* C4h E2h 7Dh 1Ah 82h VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=0 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x83: /* C4h E2h 7Dh 1Ah 83h VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=0 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x84: /* C4h E2h 7Dh 1Ah 84h VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=0 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x85: /* C4h E2h 7Dh 1Ah 85h VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=0 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x86: /* C4h E2h 7Dh 1Ah 86h VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=0 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x87: /* C4h E2h 7Dh 1Ah 87h VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=0 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x88: /* C4h E2h 7Dh 1Ah 88h VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=1 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x89: /* C4h E2h 7Dh 1Ah 89h VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=1 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x8A: /* C4h E2h 7Dh 1Ah 8Ah VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=1 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x8B: /* C4h E2h 7Dh 1Ah 8Bh VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=1 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x8C: /* C4h E2h 7Dh 1Ah 8Ch VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=1 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x8D: /* C4h E2h 7Dh 1Ah 8Dh VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=1 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x8E: /* C4h E2h 7Dh 1Ah 8Eh VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=1 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x8F: /* C4h E2h 7Dh 1Ah 8Fh VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=1 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x90: /* C4h E2h 7Dh 1Ah 90h VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=2 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x91: /* C4h E2h 7Dh 1Ah 91h VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=2 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x92: /* C4h E2h 7Dh 1Ah 92h VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=2 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x93: /* C4h E2h 7Dh 1Ah 93h VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=2 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x94: /* C4h E2h 7Dh 1Ah 94h VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=2 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x95: /* C4h E2h 7Dh 1Ah 95h VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=2 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x96: /* C4h E2h 7Dh 1Ah 96h VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=2 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x97: /* C4h E2h 7Dh 1Ah 97h VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=2 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x98: /* C4h E2h 7Dh 1Ah 98h VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=3 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x99: /* C4h E2h 7Dh 1Ah 99h VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=3 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x9A: /* C4h E2h 7Dh 1Ah 9Ah VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=3 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x9B: /* C4h E2h 7Dh 1Ah 9Bh VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=3 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x9C: /* C4h E2h 7Dh 1Ah 9Ch VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=3 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x9D: /* C4h E2h 7Dh 1Ah 9Dh VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=3 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x9E: /* C4h E2h 7Dh 1Ah 9Eh VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=3 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0x9F: /* C4h E2h 7Dh 1Ah 9Fh VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=3 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xA0: /* C4h E2h 7Dh 1Ah A0h VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=4 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xA1: /* C4h E2h 7Dh 1Ah A1h VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=4 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xA2: /* C4h E2h 7Dh 1Ah A2h VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=4 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xA3: /* C4h E2h 7Dh 1Ah A3h VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=4 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xA4: /* C4h E2h 7Dh 1Ah A4h VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=4 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xA5: /* C4h E2h 7Dh 1Ah A5h VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=4 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xA6: /* C4h E2h 7Dh 1Ah A6h VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=4 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xA7: /* C4h E2h 7Dh 1Ah A7h VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=4 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xA8: /* C4h E2h 7Dh 1Ah A8h VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=5 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xA9: /* C4h E2h 7Dh 1Ah A9h VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=5 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xAA: /* C4h E2h 7Dh 1Ah AAh VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=5 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xAB: /* C4h E2h 7Dh 1Ah ABh VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=5 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xAC: /* C4h E2h 7Dh 1Ah ACh VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=5 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xAD: /* C4h E2h 7Dh 1Ah ADh VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=5 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xAE: /* C4h E2h 7Dh 1Ah AEh VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=5 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xAF: /* C4h E2h 7Dh 1Ah AFh VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=5 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xB0: /* C4h E2h 7Dh 1Ah B0h VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=6 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xB1: /* C4h E2h 7Dh 1Ah B1h VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=6 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xB2: /* C4h E2h 7Dh 1Ah B2h VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=6 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xB3: /* C4h E2h 7Dh 1Ah B3h VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=6 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xB4: /* C4h E2h 7Dh 1Ah B4h VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=6 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xB5: /* C4h E2h 7Dh 1Ah B5h VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=6 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xB6: /* C4h E2h 7Dh 1Ah B6h VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=6 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xB7: /* C4h E2h 7Dh 1Ah B7h VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=6 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xB8: /* C4h E2h 7Dh 1Ah B8h VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=7 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xB9: /* C4h E2h 7Dh 1Ah B9h VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=7 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xBA: /* C4h E2h 7Dh 1Ah BAh VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=7 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xBB: /* C4h E2h 7Dh 1Ah BBh VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=7 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xBC: /* C4h E2h 7Dh 1Ah BCh VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=7 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xBD: /* C4h E2h 7Dh 1Ah BDh VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=7 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xBE: /* C4h E2h 7Dh 1Ah BEh VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=7 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                    case 0xBF: /* C4h E2h 7Dh 1Ah BFh VBROADCASTF128 avx(reg),sse(r/m) mod=2 reg=7 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x1A mod/reg/rm mod!=3 vsidx(0) */
                                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VBROADCASTF128 YMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                                        break;
                                    /* opcode C4h E2h 7Dh 1Ah C0h  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah C1h  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah C2h  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah C3h  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah C4h  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah C5h  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah C6h  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah C7h  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah C8h  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah C9h  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah CAh  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah CBh  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah CCh  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah CDh  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah CEh  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah CFh  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah D0h  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah D1h  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah D2h  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah D3h  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah D4h  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah D5h  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah D6h  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah D7h  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah D8h  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah D9h  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah DAh  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah DBh  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah DCh  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah DDh  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah DEh  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah DFh  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah E0h  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah E1h  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah E2h  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah E3h  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah E4h  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah E5h  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah E6h  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah E7h  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah E8h  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah E9h  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah EAh  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah EBh  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah ECh  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah EDh  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah EEh  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah EFh  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah F0h  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah F1h  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah F2h  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah F3h  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah F4h  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah F5h  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah F6h  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah F7h  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah F8h  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah F9h  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah FAh  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah FBh  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah FCh  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah FDh  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah FEh  not defined */
                                    /* opcode C4h E2h 7Dh 1Ah FFh  not defined */
                                    default:
                                        goto _x86decode_illegal_opcode;
                                };
/* End of opcodes starting with C4h E2h 7Dh 1Ah */
                                break;
                            /* opcode C4h E2h 7Dh 1Bh  not defined */
                            /* opcode C4h E2h 7Dh 1Ch  not defined */
                            /* opcode C4h E2h 7Dh 1Dh  not defined */
                            /* opcode C4h E2h 7Dh 1Eh  not defined */
                            /* opcode C4h E2h 7Dh 1Fh  not defined */
                            /* opcode C4h E2h 7Dh 20h  not defined */
                            /* opcode C4h E2h 7Dh 21h  not defined */
                            /* opcode C4h E2h 7Dh 22h  not defined */
                            /* opcode C4h E2h 7Dh 23h  not defined */
                            /* opcode C4h E2h 7Dh 24h  not defined */
                            /* opcode C4h E2h 7Dh 25h  not defined */
                            /* opcode C4h E2h 7Dh 26h  not defined */
                            /* opcode C4h E2h 7Dh 27h  not defined */
                            /* opcode C4h E2h 7Dh 28h  not defined */
                            /* opcode C4h E2h 7Dh 29h  not defined */
                            /* opcode C4h E2h 7Dh 2Ah  not defined */
                            /* opcode C4h E2h 7Dh 2Bh  not defined */
                            case 0x2C: /* C4h E2h 7Dh 2Ch        spec:  */
                                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                                _x86decode_begin_code32_addr32_opcode_parse_C4E27D2C:
/* Opcodes starting with C4h E2h 7Dh 2Ch */
                                switch (mrm.byte) {
                                    case 0x00: /* C4h E2h 7Dh 2Ch 00h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=0 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x01: /* C4h E2h 7Dh 2Ch 01h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=0 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x02: /* C4h E2h 7Dh 2Ch 02h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=0 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x03: /* C4h E2h 7Dh 2Ch 03h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=0 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x04: /* C4h E2h 7Dh 2Ch 04h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=0 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x05: /* C4h E2h 7Dh 2Ch 05h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=0 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x06: /* C4h E2h 7Dh 2Ch 06h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=0 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x07: /* C4h E2h 7Dh 2Ch 07h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=0 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x08: /* C4h E2h 7Dh 2Ch 08h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=1 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x09: /* C4h E2h 7Dh 2Ch 09h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=1 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x0A: /* C4h E2h 7Dh 2Ch 0Ah VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=1 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x0B: /* C4h E2h 7Dh 2Ch 0Bh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=1 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x0C: /* C4h E2h 7Dh 2Ch 0Ch VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=1 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x0D: /* C4h E2h 7Dh 2Ch 0Dh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=1 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x0E: /* C4h E2h 7Dh 2Ch 0Eh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=1 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x0F: /* C4h E2h 7Dh 2Ch 0Fh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=1 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x10: /* C4h E2h 7Dh 2Ch 10h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=2 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x11: /* C4h E2h 7Dh 2Ch 11h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=2 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x12: /* C4h E2h 7Dh 2Ch 12h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=2 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x13: /* C4h E2h 7Dh 2Ch 13h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=2 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x14: /* C4h E2h 7Dh 2Ch 14h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=2 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x15: /* C4h E2h 7Dh 2Ch 15h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=2 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x16: /* C4h E2h 7Dh 2Ch 16h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=2 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x17: /* C4h E2h 7Dh 2Ch 17h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=2 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x18: /* C4h E2h 7Dh 2Ch 18h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=3 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x19: /* C4h E2h 7Dh 2Ch 19h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=3 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x1A: /* C4h E2h 7Dh 2Ch 1Ah VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=3 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x1B: /* C4h E2h 7Dh 2Ch 1Bh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=3 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x1C: /* C4h E2h 7Dh 2Ch 1Ch VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=3 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x1D: /* C4h E2h 7Dh 2Ch 1Dh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=3 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x1E: /* C4h E2h 7Dh 2Ch 1Eh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=3 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x1F: /* C4h E2h 7Dh 2Ch 1Fh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=3 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x20: /* C4h E2h 7Dh 2Ch 20h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=4 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x21: /* C4h E2h 7Dh 2Ch 21h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=4 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x22: /* C4h E2h 7Dh 2Ch 22h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=4 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x23: /* C4h E2h 7Dh 2Ch 23h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=4 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x24: /* C4h E2h 7Dh 2Ch 24h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=4 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x25: /* C4h E2h 7Dh 2Ch 25h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=4 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x26: /* C4h E2h 7Dh 2Ch 26h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=4 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x27: /* C4h E2h 7Dh 2Ch 27h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=4 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x28: /* C4h E2h 7Dh 2Ch 28h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=5 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x29: /* C4h E2h 7Dh 2Ch 29h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=5 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x2A: /* C4h E2h 7Dh 2Ch 2Ah VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=5 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x2B: /* C4h E2h 7Dh 2Ch 2Bh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=5 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x2C: /* C4h E2h 7Dh 2Ch 2Ch VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=5 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x2D: /* C4h E2h 7Dh 2Ch 2Dh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=5 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x2E: /* C4h E2h 7Dh 2Ch 2Eh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=5 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x2F: /* C4h E2h 7Dh 2Ch 2Fh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=5 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x30: /* C4h E2h 7Dh 2Ch 30h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=6 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x31: /* C4h E2h 7Dh 2Ch 31h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=6 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x32: /* C4h E2h 7Dh 2Ch 32h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=6 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x33: /* C4h E2h 7Dh 2Ch 33h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=6 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x34: /* C4h E2h 7Dh 2Ch 34h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=6 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x35: /* C4h E2h 7Dh 2Ch 35h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=6 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x36: /* C4h E2h 7Dh 2Ch 36h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=6 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x37: /* C4h E2h 7Dh 2Ch 37h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=6 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x38: /* C4h E2h 7Dh 2Ch 38h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=7 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x39: /* C4h E2h 7Dh 2Ch 39h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=7 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x3A: /* C4h E2h 7Dh 2Ch 3Ah VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=7 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x3B: /* C4h E2h 7Dh 2Ch 3Bh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=7 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x3C: /* C4h E2h 7Dh 2Ch 3Ch VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=7 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x3D: /* C4h E2h 7Dh 2Ch 3Dh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=7 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x3E: /* C4h E2h 7Dh 2Ch 3Eh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=7 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x3F: /* C4h E2h 7Dh 2Ch 3Fh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=0 reg=7 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x40: /* C4h E2h 7Dh 2Ch 40h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=0 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x41: /* C4h E2h 7Dh 2Ch 41h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=0 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x42: /* C4h E2h 7Dh 2Ch 42h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=0 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x43: /* C4h E2h 7Dh 2Ch 43h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=0 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x44: /* C4h E2h 7Dh 2Ch 44h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=0 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x45: /* C4h E2h 7Dh 2Ch 45h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=0 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x46: /* C4h E2h 7Dh 2Ch 46h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=0 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x47: /* C4h E2h 7Dh 2Ch 47h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=0 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x48: /* C4h E2h 7Dh 2Ch 48h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=1 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x49: /* C4h E2h 7Dh 2Ch 49h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=1 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x4A: /* C4h E2h 7Dh 2Ch 4Ah VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=1 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x4B: /* C4h E2h 7Dh 2Ch 4Bh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=1 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x4C: /* C4h E2h 7Dh 2Ch 4Ch VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=1 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x4D: /* C4h E2h 7Dh 2Ch 4Dh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=1 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x4E: /* C4h E2h 7Dh 2Ch 4Eh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=1 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x4F: /* C4h E2h 7Dh 2Ch 4Fh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=1 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x50: /* C4h E2h 7Dh 2Ch 50h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=2 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x51: /* C4h E2h 7Dh 2Ch 51h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=2 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x52: /* C4h E2h 7Dh 2Ch 52h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=2 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x53: /* C4h E2h 7Dh 2Ch 53h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=2 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x54: /* C4h E2h 7Dh 2Ch 54h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=2 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x55: /* C4h E2h 7Dh 2Ch 55h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=2 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x56: /* C4h E2h 7Dh 2Ch 56h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=2 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x57: /* C4h E2h 7Dh 2Ch 57h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=2 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x58: /* C4h E2h 7Dh 2Ch 58h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=3 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x59: /* C4h E2h 7Dh 2Ch 59h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=3 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x5A: /* C4h E2h 7Dh 2Ch 5Ah VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=3 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x5B: /* C4h E2h 7Dh 2Ch 5Bh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=3 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x5C: /* C4h E2h 7Dh 2Ch 5Ch VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=3 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x5D: /* C4h E2h 7Dh 2Ch 5Dh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=3 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x5E: /* C4h E2h 7Dh 2Ch 5Eh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=3 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x5F: /* C4h E2h 7Dh 2Ch 5Fh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=3 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x60: /* C4h E2h 7Dh 2Ch 60h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=4 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x61: /* C4h E2h 7Dh 2Ch 61h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=4 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x62: /* C4h E2h 7Dh 2Ch 62h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=4 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x63: /* C4h E2h 7Dh 2Ch 63h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=4 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x64: /* C4h E2h 7Dh 2Ch 64h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=4 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x65: /* C4h E2h 7Dh 2Ch 65h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=4 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x66: /* C4h E2h 7Dh 2Ch 66h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=4 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x67: /* C4h E2h 7Dh 2Ch 67h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=4 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x68: /* C4h E2h 7Dh 2Ch 68h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=5 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x69: /* C4h E2h 7Dh 2Ch 69h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=5 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x6A: /* C4h E2h 7Dh 2Ch 6Ah VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=5 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x6B: /* C4h E2h 7Dh 2Ch 6Bh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=5 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x6C: /* C4h E2h 7Dh 2Ch 6Ch VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=5 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x6D: /* C4h E2h 7Dh 2Ch 6Dh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=5 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x6E: /* C4h E2h 7Dh 2Ch 6Eh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=5 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x6F: /* C4h E2h 7Dh 2Ch 6Fh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=5 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x70: /* C4h E2h 7Dh 2Ch 70h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=6 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x71: /* C4h E2h 7Dh 2Ch 71h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=6 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x72: /* C4h E2h 7Dh 2Ch 72h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=6 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x73: /* C4h E2h 7Dh 2Ch 73h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=6 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x74: /* C4h E2h 7Dh 2Ch 74h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=6 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x75: /* C4h E2h 7Dh 2Ch 75h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=6 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x76: /* C4h E2h 7Dh 2Ch 76h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=6 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x77: /* C4h E2h 7Dh 2Ch 77h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=6 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x78: /* C4h E2h 7Dh 2Ch 78h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=7 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x79: /* C4h E2h 7Dh 2Ch 79h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=7 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x7A: /* C4h E2h 7Dh 2Ch 7Ah VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=7 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x7B: /* C4h E2h 7Dh 2Ch 7Bh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=7 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x7C: /* C4h E2h 7Dh 2Ch 7Ch VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=7 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x7D: /* C4h E2h 7Dh 2Ch 7Dh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=7 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x7E: /* C4h E2h 7Dh 2Ch 7Eh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=7 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x7F: /* C4h E2h 7Dh 2Ch 7Fh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=1 reg=7 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x80: /* C4h E2h 7Dh 2Ch 80h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=0 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x81: /* C4h E2h 7Dh 2Ch 81h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=0 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x82: /* C4h E2h 7Dh 2Ch 82h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=0 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x83: /* C4h E2h 7Dh 2Ch 83h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=0 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x84: /* C4h E2h 7Dh 2Ch 84h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=0 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x85: /* C4h E2h 7Dh 2Ch 85h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=0 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x86: /* C4h E2h 7Dh 2Ch 86h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=0 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x87: /* C4h E2h 7Dh 2Ch 87h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=0 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x88: /* C4h E2h 7Dh 2Ch 88h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=1 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x89: /* C4h E2h 7Dh 2Ch 89h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=1 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x8A: /* C4h E2h 7Dh 2Ch 8Ah VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=1 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x8B: /* C4h E2h 7Dh 2Ch 8Bh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=1 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x8C: /* C4h E2h 7Dh 2Ch 8Ch VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=1 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x8D: /* C4h E2h 7Dh 2Ch 8Dh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=1 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x8E: /* C4h E2h 7Dh 2Ch 8Eh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=1 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x8F: /* C4h E2h 7Dh 2Ch 8Fh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=1 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x90: /* C4h E2h 7Dh 2Ch 90h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=2 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x91: /* C4h E2h 7Dh 2Ch 91h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=2 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x92: /* C4h E2h 7Dh 2Ch 92h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=2 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x93: /* C4h E2h 7Dh 2Ch 93h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=2 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x94: /* C4h E2h 7Dh 2Ch 94h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=2 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x95: /* C4h E2h 7Dh 2Ch 95h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=2 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x96: /* C4h E2h 7Dh 2Ch 96h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=2 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x97: /* C4h E2h 7Dh 2Ch 97h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=2 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x98: /* C4h E2h 7Dh 2Ch 98h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=3 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x99: /* C4h E2h 7Dh 2Ch 99h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=3 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x9A: /* C4h E2h 7Dh 2Ch 9Ah VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=3 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x9B: /* C4h E2h 7Dh 2Ch 9Bh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=3 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x9C: /* C4h E2h 7Dh 2Ch 9Ch VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=3 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x9D: /* C4h E2h 7Dh 2Ch 9Dh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=3 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x9E: /* C4h E2h 7Dh 2Ch 9Eh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=3 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0x9F: /* C4h E2h 7Dh 2Ch 9Fh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=3 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xA0: /* C4h E2h 7Dh 2Ch A0h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=4 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xA1: /* C4h E2h 7Dh 2Ch A1h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=4 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xA2: /* C4h E2h 7Dh 2Ch A2h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=4 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xA3: /* C4h E2h 7Dh 2Ch A3h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=4 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xA4: /* C4h E2h 7Dh 2Ch A4h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=4 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xA5: /* C4h E2h 7Dh 2Ch A5h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=4 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xA6: /* C4h E2h 7Dh 2Ch A6h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=4 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xA7: /* C4h E2h 7Dh 2Ch A7h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=4 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xA8: /* C4h E2h 7Dh 2Ch A8h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=5 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xA9: /* C4h E2h 7Dh 2Ch A9h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=5 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xAA: /* C4h E2h 7Dh 2Ch AAh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=5 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xAB: /* C4h E2h 7Dh 2Ch ABh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=5 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xAC: /* C4h E2h 7Dh 2Ch ACh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=5 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xAD: /* C4h E2h 7Dh 2Ch ADh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=5 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xAE: /* C4h E2h 7Dh 2Ch AEh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=5 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xAF: /* C4h E2h 7Dh 2Ch AFh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=5 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xB0: /* C4h E2h 7Dh 2Ch B0h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=6 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xB1: /* C4h E2h 7Dh 2Ch B1h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=6 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xB2: /* C4h E2h 7Dh 2Ch B2h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=6 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xB3: /* C4h E2h 7Dh 2Ch B3h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=6 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xB4: /* C4h E2h 7Dh 2Ch B4h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=6 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xB5: /* C4h E2h 7Dh 2Ch B5h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=6 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xB6: /* C4h E2h 7Dh 2Ch B6h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=6 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xB7: /* C4h E2h 7Dh 2Ch B7h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=6 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xB8: /* C4h E2h 7Dh 2Ch B8h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=7 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xB9: /* C4h E2h 7Dh 2Ch B9h VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=7 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xBA: /* C4h E2h 7Dh 2Ch BAh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=7 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xBB: /* C4h E2h 7Dh 2Ch BBh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=7 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xBC: /* C4h E2h 7Dh 2Ch BCh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=7 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xBD: /* C4h E2h 7Dh 2Ch BDh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=7 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xBE: /* C4h E2h 7Dh 2Ch BEh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=7 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                    case 0xBF: /* C4h E2h 7Dh 2Ch BFh VMASKMOVPS avx(reg),avx(vsidx),avx(r/m) mod=2 reg=7 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2C mod/reg/rm mod!=3 */
                                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VMASKMOVPS YMM%u,YMM%u,%s",mrm.reg(),vex.V,IPDecPrint32(mrm,sib,disp,32,RC_AVXREG,""));
                                        break;
                                    /* opcode C4h E2h 7Dh 2Ch C0h  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch C1h  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch C2h  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch C3h  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch C4h  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch C5h  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch C6h  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch C7h  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch C8h  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch C9h  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch CAh  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch CBh  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch CCh  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch CDh  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch CEh  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch CFh  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch D0h  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch D1h  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch D2h  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch D3h  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch D4h  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch D5h  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch D6h  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch D7h  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch D8h  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch D9h  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch DAh  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch DBh  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch DCh  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch DDh  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch DEh  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch DFh  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch E0h  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch E1h  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch E2h  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch E3h  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch E4h  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch E5h  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch E6h  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch E7h  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch E8h  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch E9h  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch EAh  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch EBh  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch ECh  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch EDh  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch EEh  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch EFh  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch F0h  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch F1h  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch F2h  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch F3h  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch F4h  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch F5h  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch F6h  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch F7h  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch F8h  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch F9h  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch FAh  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch FBh  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch FCh  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch FDh  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch FEh  not defined */
                                    /* opcode C4h E2h 7Dh 2Ch FFh  not defined */
                                    default:
                                        goto _x86decode_illegal_opcode;
                                };
/* End of opcodes starting with C4h E2h 7Dh 2Ch */
                                break;
                            case 0x2D: /* C4h E2h 7Dh 2Dh        spec:  */
                                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                                _x86decode_begin_code32_addr32_opcode_parse_C4E27D2D:
/* Opcodes starting with C4h E2h 7Dh 2Dh */
                                switch (mrm.byte) {
                                    case 0x00: /* C4h E2h 7Dh 2Dh 00h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=0 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x01: /* C4h E2h 7Dh 2Dh 01h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=0 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x02: /* C4h E2h 7Dh 2Dh 02h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=0 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x03: /* C4h E2h 7Dh 2Dh 03h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=0 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x04: /* C4h E2h 7Dh 2Dh 04h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=0 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x05: /* C4h E2h 7Dh 2Dh 05h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=0 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x06: /* C4h E2h 7Dh 2Dh 06h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=0 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x07: /* C4h E2h 7Dh 2Dh 07h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=0 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x08: /* C4h E2h 7Dh 2Dh 08h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=1 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x09: /* C4h E2h 7Dh 2Dh 09h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=1 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x0A: /* C4h E2h 7Dh 2Dh 0Ah VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=1 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x0B: /* C4h E2h 7Dh 2Dh 0Bh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=1 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x0C: /* C4h E2h 7Dh 2Dh 0Ch VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=1 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x0D: /* C4h E2h 7Dh 2Dh 0Dh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=1 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x0E: /* C4h E2h 7Dh 2Dh 0Eh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=1 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x0F: /* C4h E2h 7Dh 2Dh 0Fh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=1 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x10: /* C4h E2h 7Dh 2Dh 10h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=2 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x11: /* C4h E2h 7Dh 2Dh 11h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=2 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x12: /* C4h E2h 7Dh 2Dh 12h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=2 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x13: /* C4h E2h 7Dh 2Dh 13h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=2 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x14: /* C4h E2h 7Dh 2Dh 14h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=2 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x15: /* C4h E2h 7Dh 2Dh 15h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=2 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x16: /* C4h E2h 7Dh 2Dh 16h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=2 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x17: /* C4h E2h 7Dh 2Dh 17h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=2 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x18: /* C4h E2h 7Dh 2Dh 18h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=3 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x19: /* C4h E2h 7Dh 2Dh 19h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=3 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x1A: /* C4h E2h 7Dh 2Dh 1Ah VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=3 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x1B: /* C4h E2h 7Dh 2Dh 1Bh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=3 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x1C: /* C4h E2h 7Dh 2Dh 1Ch VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=3 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x1D: /* C4h E2h 7Dh 2Dh 1Dh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=3 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x1E: /* C4h E2h 7Dh 2Dh 1Eh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=3 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x1F: /* C4h E2h 7Dh 2Dh 1Fh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=3 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x20: /* C4h E2h 7Dh 2Dh 20h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=4 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x21: /* C4h E2h 7Dh 2Dh 21h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=4 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x22: /* C4h E2h 7Dh 2Dh 22h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=4 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x23: /* C4h E2h 7Dh 2Dh 23h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=4 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x24: /* C4h E2h 7Dh 2Dh 24h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=4 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x25: /* C4h E2h 7Dh 2Dh 25h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=4 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x26: /* C4h E2h 7Dh 2Dh 26h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=4 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x27: /* C4h E2h 7Dh 2Dh 27h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=4 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x28: /* C4h E2h 7Dh 2Dh 28h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=5 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x29: /* C4h E2h 7Dh 2Dh 29h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=5 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x2A: /* C4h E2h 7Dh 2Dh 2Ah VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=5 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x2B: /* C4h E2h 7Dh 2Dh 2Bh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=5 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x2C: /* C4h E2h 7Dh 2Dh 2Ch VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=5 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x2D: /* C4h E2h 7Dh 2Dh 2Dh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=5 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x2E: /* C4h E2h 7Dh 2Dh 2Eh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=5 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x2F: /* C4h E2h 7Dh 2Dh 2Fh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=5 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x30: /* C4h E2h 7Dh 2Dh 30h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=6 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x31: /* C4h E2h 7Dh 2Dh 31h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=6 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x32: /* C4h E2h 7Dh 2Dh 32h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=6 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x33: /* C4h E2h 7Dh 2Dh 33h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=6 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x34: /* C4h E2h 7Dh 2Dh 34h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=6 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x35: /* C4h E2h 7Dh 2Dh 35h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=6 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x36: /* C4h E2h 7Dh 2Dh 36h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=6 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x37: /* C4h E2h 7Dh 2Dh 37h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=6 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x38: /* C4h E2h 7Dh 2Dh 38h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=7 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x39: /* C4h E2h 7Dh 2Dh 39h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=7 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x3A: /* C4h E2h 7Dh 2Dh 3Ah VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=7 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x3B: /* C4h E2h 7Dh 2Dh 3Bh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=7 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x3C: /* C4h E2h 7Dh 2Dh 3Ch VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=7 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x3D: /* C4h E2h 7Dh 2Dh 3Dh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=7 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x3E: /* C4h E2h 7Dh 2Dh 3Eh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=7 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x3F: /* C4h E2h 7Dh 2Dh 3Fh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=0 reg=7 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x40: /* C4h E2h 7Dh 2Dh 40h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=0 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x41: /* C4h E2h 7Dh 2Dh 41h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=0 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x42: /* C4h E2h 7Dh 2Dh 42h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=0 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x43: /* C4h E2h 7Dh 2Dh 43h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=0 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x44: /* C4h E2h 7Dh 2Dh 44h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=0 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x45: /* C4h E2h 7Dh 2Dh 45h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=0 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x46: /* C4h E2h 7Dh 2Dh 46h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=0 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x47: /* C4h E2h 7Dh 2Dh 47h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=0 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x48: /* C4h E2h 7Dh 2Dh 48h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=1 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x49: /* C4h E2h 7Dh 2Dh 49h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=1 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x4A: /* C4h E2h 7Dh 2Dh 4Ah VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=1 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x4B: /* C4h E2h 7Dh 2Dh 4Bh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=1 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x4C: /* C4h E2h 7Dh 2Dh 4Ch VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=1 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x4D: /* C4h E2h 7Dh 2Dh 4Dh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=1 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x4E: /* C4h E2h 7Dh 2Dh 4Eh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=1 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x4F: /* C4h E2h 7Dh 2Dh 4Fh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=1 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x50: /* C4h E2h 7Dh 2Dh 50h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=2 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x51: /* C4h E2h 7Dh 2Dh 51h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=2 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x52: /* C4h E2h 7Dh 2Dh 52h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=2 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x53: /* C4h E2h 7Dh 2Dh 53h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=2 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x54: /* C4h E2h 7Dh 2Dh 54h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=2 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x55: /* C4h E2h 7Dh 2Dh 55h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=2 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x56: /* C4h E2h 7Dh 2Dh 56h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=2 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x57: /* C4h E2h 7Dh 2Dh 57h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=2 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x58: /* C4h E2h 7Dh 2Dh 58h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=3 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x59: /* C4h E2h 7Dh 2Dh 59h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=3 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x5A: /* C4h E2h 7Dh 2Dh 5Ah VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=3 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x5B: /* C4h E2h 7Dh 2Dh 5Bh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=3 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x5C: /* C4h E2h 7Dh 2Dh 5Ch VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=3 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x5D: /* C4h E2h 7Dh 2Dh 5Dh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=3 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x5E: /* C4h E2h 7Dh 2Dh 5Eh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=3 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x5F: /* C4h E2h 7Dh 2Dh 5Fh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=3 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x60: /* C4h E2h 7Dh 2Dh 60h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=4 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x61: /* C4h E2h 7Dh 2Dh 61h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=4 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x62: /* C4h E2h 7Dh 2Dh 62h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=4 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x63: /* C4h E2h 7Dh 2Dh 63h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=4 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x64: /* C4h E2h 7Dh 2Dh 64h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=4 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x65: /* C4h E2h 7Dh 2Dh 65h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=4 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x66: /* C4h E2h 7Dh 2Dh 66h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=4 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x67: /* C4h E2h 7Dh 2Dh 67h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=4 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x68: /* C4h E2h 7Dh 2Dh 68h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=5 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x69: /* C4h E2h 7Dh 2Dh 69h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=5 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x6A: /* C4h E2h 7Dh 2Dh 6Ah VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=5 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x6B: /* C4h E2h 7Dh 2Dh 6Bh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=5 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x6C: /* C4h E2h 7Dh 2Dh 6Ch VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=5 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x6D: /* C4h E2h 7Dh 2Dh 6Dh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=5 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x6E: /* C4h E2h 7Dh 2Dh 6Eh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=5 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x6F: /* C4h E2h 7Dh 2Dh 6Fh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=5 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x70: /* C4h E2h 7Dh 2Dh 70h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=6 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x71: /* C4h E2h 7Dh 2Dh 71h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=6 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x72: /* C4h E2h 7Dh 2Dh 72h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=6 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x73: /* C4h E2h 7Dh 2Dh 73h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=6 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x74: /* C4h E2h 7Dh 2Dh 74h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=6 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x75: /* C4h E2h 7Dh 2Dh 75h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=6 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x76: /* C4h E2h 7Dh 2Dh 76h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=6 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x77: /* C4h E2h 7Dh 2Dh 77h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=6 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x78: /* C4h E2h 7Dh 2Dh 78h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=7 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x79: /* C4h E2h 7Dh 2Dh 79h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=7 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x7A: /* C4h E2h 7Dh 2Dh 7Ah VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=7 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x7B: /* C4h E2h 7Dh 2Dh 7Bh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=7 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x7C: /* C4h E2h 7Dh 2Dh 7Ch VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=7 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x7D: /* C4h E2h 7Dh 2Dh 7Dh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=7 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x7E: /* C4h E2h 7Dh 2Dh 7Eh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=7 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x7F: /* C4h E2h 7Dh 2Dh 7Fh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=1 reg=7 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x80: /* C4h E2h 7Dh 2Dh 80h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=0 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x81: /* C4h E2h 7Dh 2Dh 81h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=0 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x82: /* C4h E2h 7Dh 2Dh 82h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=0 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x83: /* C4h E2h 7Dh 2Dh 83h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=0 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x84: /* C4h E2h 7Dh 2Dh 84h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=0 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x85: /* C4h E2h 7Dh 2Dh 85h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=0 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x86: /* C4h E2h 7Dh 2Dh 86h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=0 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x87: /* C4h E2h 7Dh 2Dh 87h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=0 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x88: /* C4h E2h 7Dh 2Dh 88h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=1 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x89: /* C4h E2h 7Dh 2Dh 89h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=1 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x8A: /* C4h E2h 7Dh 2Dh 8Ah VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=1 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x8B: /* C4h E2h 7Dh 2Dh 8Bh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=1 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x8C: /* C4h E2h 7Dh 2Dh 8Ch VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=1 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x8D: /* C4h E2h 7Dh 2Dh 8Dh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=1 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x8E: /* C4h E2h 7Dh 2Dh 8Eh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=1 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x8F: /* C4h E2h 7Dh 2Dh 8Fh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=1 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x90: /* C4h E2h 7Dh 2Dh 90h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=2 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x91: /* C4h E2h 7Dh 2Dh 91h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=2 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x92: /* C4h E2h 7Dh 2Dh 92h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=2 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x93: /* C4h E2h 7Dh 2Dh 93h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=2 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x94: /* C4h E2h 7Dh 2Dh 94h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=2 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x95: /* C4h E2h 7Dh 2Dh 95h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=2 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x96: /* C4h E2h 7Dh 2Dh 96h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=2 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x97: /* C4h E2h 7Dh 2Dh 97h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=2 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x98: /* C4h E2h 7Dh 2Dh 98h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=3 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x99: /* C4h E2h 7Dh 2Dh 99h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=3 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x9A: /* C4h E2h 7Dh 2Dh 9Ah VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=3 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x9B: /* C4h E2h 7Dh 2Dh 9Bh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=3 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x9C: /* C4h E2h 7Dh 2Dh 9Ch VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=3 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x9D: /* C4h E2h 7Dh 2Dh 9Dh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=3 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x9E: /* C4h E2h 7Dh 2Dh 9Eh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=3 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0x9F: /* C4h E2h 7Dh 2Dh 9Fh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=3 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xA0: /* C4h E2h 7Dh 2Dh A0h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=4 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xA1: /* C4h E2h 7Dh 2Dh A1h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=4 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xA2: /* C4h E2h 7Dh 2Dh A2h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=4 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xA3: /* C4h E2h 7Dh 2Dh A3h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=4 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xA4: /* C4h E2h 7Dh 2Dh A4h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=4 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xA5: /* C4h E2h 7Dh 2Dh A5h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=4 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xA6: /* C4h E2h 7Dh 2Dh A6h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=4 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xA7: /* C4h E2h 7Dh 2Dh A7h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=4 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xA8: /* C4h E2h 7Dh 2Dh A8h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=5 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xA9: /* C4h E2h 7Dh 2Dh A9h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=5 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xAA: /* C4h E2h 7Dh 2Dh AAh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=5 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xAB: /* C4h E2h 7Dh 2Dh ABh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=5 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xAC: /* C4h E2h 7Dh 2Dh ACh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=5 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xAD: /* C4h E2h 7Dh 2Dh ADh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=5 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xAE: /* C4h E2h 7Dh 2Dh AEh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=5 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xAF: /* C4h E2h 7Dh 2Dh AFh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=5 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xB0: /* C4h E2h 7Dh 2Dh B0h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=6 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xB1: /* C4h E2h 7Dh 2Dh B1h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=6 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xB2: /* C4h E2h 7Dh 2Dh B2h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=6 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xB3: /* C4h E2h 7Dh 2Dh B3h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=6 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xB4: /* C4h E2h 7Dh 2Dh B4h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=6 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xB5: /* C4h E2h 7Dh 2Dh B5h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=6 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xB6: /* C4h E2h 7Dh 2Dh B6h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=6 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xB7: /* C4h E2h 7Dh 2Dh B7h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=6 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xB8: /* C4h E2h 7Dh 2Dh B8h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=7 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xB9: /* C4h E2h 7Dh 2Dh B9h VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=7 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xBA: /* C4h E2h 7Dh 2Dh BAh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=7 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xBB: /* C4h E2h 7Dh 2Dh BBh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=7 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xBC: /* C4h E2h 7Dh 2Dh BCh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=7 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xBD: /* C4h E2h 7Dh 2Dh BDh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=7 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xBE: /* C4h E2h 7Dh 2Dh BEh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=7 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                    case 0xBF: /* C4h E2h 7Dh 2Dh BFh VMASKMOVPD avx(reg),avx(vsidx),avx(r/m) mod=2 reg=7 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2D mod/reg/rm mod!=3 */
                                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VMASKMOVPD YMM%u,YMM%u,%s",mrm.reg(),vex.V,IPDecPrint32(mrm,sib,disp,32,RC_AVXREG,""));
                                        break;
                                    /* opcode C4h E2h 7Dh 2Dh C0h  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh C1h  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh C2h  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh C3h  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh C4h  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh C5h  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh C6h  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh C7h  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh C8h  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh C9h  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh CAh  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh CBh  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh CCh  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh CDh  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh CEh  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh CFh  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh D0h  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh D1h  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh D2h  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh D3h  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh D4h  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh D5h  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh D6h  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh D7h  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh D8h  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh D9h  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh DAh  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh DBh  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh DCh  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh DDh  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh DEh  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh DFh  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh E0h  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh E1h  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh E2h  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh E3h  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh E4h  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh E5h  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh E6h  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh E7h  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh E8h  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh E9h  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh EAh  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh EBh  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh ECh  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh EDh  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh EEh  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh EFh  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh F0h  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh F1h  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh F2h  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh F3h  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh F4h  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh F5h  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh F6h  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh F7h  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh F8h  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh F9h  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh FAh  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh FBh  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh FCh  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh FDh  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh FEh  not defined */
                                    /* opcode C4h E2h 7Dh 2Dh FFh  not defined */
                                    default:
                                        goto _x86decode_illegal_opcode;
                                };
/* End of opcodes starting with C4h E2h 7Dh 2Dh */
                                break;
                            case 0x2E: /* C4h E2h 7Dh 2Eh        spec:  */
                                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                                _x86decode_begin_code32_addr32_opcode_parse_C4E27D2E:
/* Opcodes starting with C4h E2h 7Dh 2Eh */
                                switch (mrm.byte) {
                                    case 0x00: /* C4h E2h 7Dh 2Eh 00h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=0 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x01: /* C4h E2h 7Dh 2Eh 01h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=0 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x02: /* C4h E2h 7Dh 2Eh 02h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=0 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x03: /* C4h E2h 7Dh 2Eh 03h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=0 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x04: /* C4h E2h 7Dh 2Eh 04h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=0 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x05: /* C4h E2h 7Dh 2Eh 05h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=0 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x06: /* C4h E2h 7Dh 2Eh 06h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=0 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x07: /* C4h E2h 7Dh 2Eh 07h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=0 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x08: /* C4h E2h 7Dh 2Eh 08h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=1 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x09: /* C4h E2h 7Dh 2Eh 09h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=1 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x0A: /* C4h E2h 7Dh 2Eh 0Ah VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=1 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x0B: /* C4h E2h 7Dh 2Eh 0Bh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=1 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x0C: /* C4h E2h 7Dh 2Eh 0Ch VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=1 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x0D: /* C4h E2h 7Dh 2Eh 0Dh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=1 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x0E: /* C4h E2h 7Dh 2Eh 0Eh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=1 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x0F: /* C4h E2h 7Dh 2Eh 0Fh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=1 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x10: /* C4h E2h 7Dh 2Eh 10h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=2 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x11: /* C4h E2h 7Dh 2Eh 11h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=2 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x12: /* C4h E2h 7Dh 2Eh 12h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=2 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x13: /* C4h E2h 7Dh 2Eh 13h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=2 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x14: /* C4h E2h 7Dh 2Eh 14h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=2 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x15: /* C4h E2h 7Dh 2Eh 15h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=2 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x16: /* C4h E2h 7Dh 2Eh 16h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=2 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x17: /* C4h E2h 7Dh 2Eh 17h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=2 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x18: /* C4h E2h 7Dh 2Eh 18h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=3 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x19: /* C4h E2h 7Dh 2Eh 19h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=3 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x1A: /* C4h E2h 7Dh 2Eh 1Ah VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=3 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x1B: /* C4h E2h 7Dh 2Eh 1Bh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=3 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x1C: /* C4h E2h 7Dh 2Eh 1Ch VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=3 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x1D: /* C4h E2h 7Dh 2Eh 1Dh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=3 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x1E: /* C4h E2h 7Dh 2Eh 1Eh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=3 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x1F: /* C4h E2h 7Dh 2Eh 1Fh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=3 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x20: /* C4h E2h 7Dh 2Eh 20h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=4 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x21: /* C4h E2h 7Dh 2Eh 21h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=4 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x22: /* C4h E2h 7Dh 2Eh 22h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=4 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x23: /* C4h E2h 7Dh 2Eh 23h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=4 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x24: /* C4h E2h 7Dh 2Eh 24h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=4 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x25: /* C4h E2h 7Dh 2Eh 25h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=4 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x26: /* C4h E2h 7Dh 2Eh 26h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=4 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x27: /* C4h E2h 7Dh 2Eh 27h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=4 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x28: /* C4h E2h 7Dh 2Eh 28h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=5 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x29: /* C4h E2h 7Dh 2Eh 29h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=5 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x2A: /* C4h E2h 7Dh 2Eh 2Ah VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=5 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x2B: /* C4h E2h 7Dh 2Eh 2Bh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=5 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x2C: /* C4h E2h 7Dh 2Eh 2Ch VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=5 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x2D: /* C4h E2h 7Dh 2Eh 2Dh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=5 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x2E: /* C4h E2h 7Dh 2Eh 2Eh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=5 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x2F: /* C4h E2h 7Dh 2Eh 2Fh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=5 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x30: /* C4h E2h 7Dh 2Eh 30h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=6 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x31: /* C4h E2h 7Dh 2Eh 31h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=6 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x32: /* C4h E2h 7Dh 2Eh 32h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=6 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x33: /* C4h E2h 7Dh 2Eh 33h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=6 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x34: /* C4h E2h 7Dh 2Eh 34h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=6 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x35: /* C4h E2h 7Dh 2Eh 35h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=6 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x36: /* C4h E2h 7Dh 2Eh 36h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=6 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x37: /* C4h E2h 7Dh 2Eh 37h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=6 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x38: /* C4h E2h 7Dh 2Eh 38h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=7 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x39: /* C4h E2h 7Dh 2Eh 39h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=7 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x3A: /* C4h E2h 7Dh 2Eh 3Ah VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=7 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x3B: /* C4h E2h 7Dh 2Eh 3Bh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=7 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x3C: /* C4h E2h 7Dh 2Eh 3Ch VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=7 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x3D: /* C4h E2h 7Dh 2Eh 3Dh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=7 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x3E: /* C4h E2h 7Dh 2Eh 3Eh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=7 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x3F: /* C4h E2h 7Dh 2Eh 3Fh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=0 reg=7 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x40: /* C4h E2h 7Dh 2Eh 40h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=0 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x41: /* C4h E2h 7Dh 2Eh 41h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=0 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x42: /* C4h E2h 7Dh 2Eh 42h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=0 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x43: /* C4h E2h 7Dh 2Eh 43h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=0 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x44: /* C4h E2h 7Dh 2Eh 44h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=0 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x45: /* C4h E2h 7Dh 2Eh 45h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=0 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x46: /* C4h E2h 7Dh 2Eh 46h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=0 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x47: /* C4h E2h 7Dh 2Eh 47h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=0 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x48: /* C4h E2h 7Dh 2Eh 48h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=1 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x49: /* C4h E2h 7Dh 2Eh 49h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=1 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x4A: /* C4h E2h 7Dh 2Eh 4Ah VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=1 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x4B: /* C4h E2h 7Dh 2Eh 4Bh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=1 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x4C: /* C4h E2h 7Dh 2Eh 4Ch VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=1 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x4D: /* C4h E2h 7Dh 2Eh 4Dh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=1 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x4E: /* C4h E2h 7Dh 2Eh 4Eh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=1 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x4F: /* C4h E2h 7Dh 2Eh 4Fh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=1 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x50: /* C4h E2h 7Dh 2Eh 50h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=2 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x51: /* C4h E2h 7Dh 2Eh 51h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=2 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x52: /* C4h E2h 7Dh 2Eh 52h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=2 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x53: /* C4h E2h 7Dh 2Eh 53h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=2 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x54: /* C4h E2h 7Dh 2Eh 54h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=2 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x55: /* C4h E2h 7Dh 2Eh 55h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=2 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x56: /* C4h E2h 7Dh 2Eh 56h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=2 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x57: /* C4h E2h 7Dh 2Eh 57h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=2 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x58: /* C4h E2h 7Dh 2Eh 58h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=3 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x59: /* C4h E2h 7Dh 2Eh 59h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=3 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x5A: /* C4h E2h 7Dh 2Eh 5Ah VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=3 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x5B: /* C4h E2h 7Dh 2Eh 5Bh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=3 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x5C: /* C4h E2h 7Dh 2Eh 5Ch VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=3 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x5D: /* C4h E2h 7Dh 2Eh 5Dh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=3 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x5E: /* C4h E2h 7Dh 2Eh 5Eh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=3 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x5F: /* C4h E2h 7Dh 2Eh 5Fh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=3 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x60: /* C4h E2h 7Dh 2Eh 60h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=4 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x61: /* C4h E2h 7Dh 2Eh 61h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=4 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x62: /* C4h E2h 7Dh 2Eh 62h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=4 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x63: /* C4h E2h 7Dh 2Eh 63h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=4 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x64: /* C4h E2h 7Dh 2Eh 64h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=4 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x65: /* C4h E2h 7Dh 2Eh 65h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=4 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x66: /* C4h E2h 7Dh 2Eh 66h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=4 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x67: /* C4h E2h 7Dh 2Eh 67h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=4 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x68: /* C4h E2h 7Dh 2Eh 68h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=5 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x69: /* C4h E2h 7Dh 2Eh 69h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=5 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x6A: /* C4h E2h 7Dh 2Eh 6Ah VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=5 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x6B: /* C4h E2h 7Dh 2Eh 6Bh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=5 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x6C: /* C4h E2h 7Dh 2Eh 6Ch VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=5 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x6D: /* C4h E2h 7Dh 2Eh 6Dh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=5 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x6E: /* C4h E2h 7Dh 2Eh 6Eh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=5 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x6F: /* C4h E2h 7Dh 2Eh 6Fh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=5 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x70: /* C4h E2h 7Dh 2Eh 70h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=6 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x71: /* C4h E2h 7Dh 2Eh 71h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=6 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x72: /* C4h E2h 7Dh 2Eh 72h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=6 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x73: /* C4h E2h 7Dh 2Eh 73h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=6 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x74: /* C4h E2h 7Dh 2Eh 74h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=6 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x75: /* C4h E2h 7Dh 2Eh 75h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=6 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x76: /* C4h E2h 7Dh 2Eh 76h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=6 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x77: /* C4h E2h 7Dh 2Eh 77h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=6 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x78: /* C4h E2h 7Dh 2Eh 78h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=7 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x79: /* C4h E2h 7Dh 2Eh 79h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=7 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x7A: /* C4h E2h 7Dh 2Eh 7Ah VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=7 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x7B: /* C4h E2h 7Dh 2Eh 7Bh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=7 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x7C: /* C4h E2h 7Dh 2Eh 7Ch VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=7 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x7D: /* C4h E2h 7Dh 2Eh 7Dh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=7 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x7E: /* C4h E2h 7Dh 2Eh 7Eh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=7 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x7F: /* C4h E2h 7Dh 2Eh 7Fh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=1 reg=7 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x80: /* C4h E2h 7Dh 2Eh 80h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=0 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x81: /* C4h E2h 7Dh 2Eh 81h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=0 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x82: /* C4h E2h 7Dh 2Eh 82h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=0 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x83: /* C4h E2h 7Dh 2Eh 83h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=0 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x84: /* C4h E2h 7Dh 2Eh 84h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=0 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x85: /* C4h E2h 7Dh 2Eh 85h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=0 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x86: /* C4h E2h 7Dh 2Eh 86h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=0 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x87: /* C4h E2h 7Dh 2Eh 87h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=0 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x88: /* C4h E2h 7Dh 2Eh 88h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=1 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x89: /* C4h E2h 7Dh 2Eh 89h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=1 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x8A: /* C4h E2h 7Dh 2Eh 8Ah VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=1 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x8B: /* C4h E2h 7Dh 2Eh 8Bh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=1 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x8C: /* C4h E2h 7Dh 2Eh 8Ch VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=1 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x8D: /* C4h E2h 7Dh 2Eh 8Dh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=1 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x8E: /* C4h E2h 7Dh 2Eh 8Eh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=1 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x8F: /* C4h E2h 7Dh 2Eh 8Fh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=1 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x90: /* C4h E2h 7Dh 2Eh 90h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=2 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x91: /* C4h E2h 7Dh 2Eh 91h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=2 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x92: /* C4h E2h 7Dh 2Eh 92h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=2 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x93: /* C4h E2h 7Dh 2Eh 93h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=2 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x94: /* C4h E2h 7Dh 2Eh 94h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=2 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x95: /* C4h E2h 7Dh 2Eh 95h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=2 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x96: /* C4h E2h 7Dh 2Eh 96h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=2 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x97: /* C4h E2h 7Dh 2Eh 97h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=2 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x98: /* C4h E2h 7Dh 2Eh 98h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=3 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x99: /* C4h E2h 7Dh 2Eh 99h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=3 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x9A: /* C4h E2h 7Dh 2Eh 9Ah VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=3 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x9B: /* C4h E2h 7Dh 2Eh 9Bh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=3 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x9C: /* C4h E2h 7Dh 2Eh 9Ch VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=3 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x9D: /* C4h E2h 7Dh 2Eh 9Dh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=3 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x9E: /* C4h E2h 7Dh 2Eh 9Eh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=3 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0x9F: /* C4h E2h 7Dh 2Eh 9Fh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=3 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xA0: /* C4h E2h 7Dh 2Eh A0h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=4 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xA1: /* C4h E2h 7Dh 2Eh A1h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=4 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xA2: /* C4h E2h 7Dh 2Eh A2h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=4 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xA3: /* C4h E2h 7Dh 2Eh A3h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=4 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xA4: /* C4h E2h 7Dh 2Eh A4h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=4 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xA5: /* C4h E2h 7Dh 2Eh A5h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=4 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xA6: /* C4h E2h 7Dh 2Eh A6h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=4 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xA7: /* C4h E2h 7Dh 2Eh A7h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=4 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xA8: /* C4h E2h 7Dh 2Eh A8h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=5 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xA9: /* C4h E2h 7Dh 2Eh A9h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=5 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xAA: /* C4h E2h 7Dh 2Eh AAh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=5 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xAB: /* C4h E2h 7Dh 2Eh ABh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=5 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xAC: /* C4h E2h 7Dh 2Eh ACh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=5 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xAD: /* C4h E2h 7Dh 2Eh ADh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=5 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xAE: /* C4h E2h 7Dh 2Eh AEh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=5 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xAF: /* C4h E2h 7Dh 2Eh AFh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=5 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xB0: /* C4h E2h 7Dh 2Eh B0h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=6 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xB1: /* C4h E2h 7Dh 2Eh B1h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=6 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xB2: /* C4h E2h 7Dh 2Eh B2h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=6 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xB3: /* C4h E2h 7Dh 2Eh B3h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=6 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xB4: /* C4h E2h 7Dh 2Eh B4h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=6 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xB5: /* C4h E2h 7Dh 2Eh B5h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=6 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xB6: /* C4h E2h 7Dh 2Eh B6h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=6 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xB7: /* C4h E2h 7Dh 2Eh B7h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=6 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xB8: /* C4h E2h 7Dh 2Eh B8h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=7 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xB9: /* C4h E2h 7Dh 2Eh B9h VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=7 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xBA: /* C4h E2h 7Dh 2Eh BAh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=7 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xBB: /* C4h E2h 7Dh 2Eh BBh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=7 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xBC: /* C4h E2h 7Dh 2Eh BCh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=7 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xBD: /* C4h E2h 7Dh 2Eh BDh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=7 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xBE: /* C4h E2h 7Dh 2Eh BEh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=7 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                    case 0xBF: /* C4h E2h 7Dh 2Eh BFh VMASKMOVPS avx(r/m),avx(vsidx),avx(reg) mod=2 reg=7 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2E mod/reg/rm mod!=3 */
                                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VMASKMOVPS %s,YMM%u,YMM%u",IPDecPrint32(mrm,sib,disp,32,RC_AVXREG,""),vex.V,mrm.reg());
                                        break;
                                    /* opcode C4h E2h 7Dh 2Eh C0h  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh C1h  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh C2h  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh C3h  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh C4h  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh C5h  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh C6h  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh C7h  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh C8h  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh C9h  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh CAh  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh CBh  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh CCh  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh CDh  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh CEh  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh CFh  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh D0h  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh D1h  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh D2h  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh D3h  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh D4h  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh D5h  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh D6h  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh D7h  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh D8h  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh D9h  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh DAh  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh DBh  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh DCh  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh DDh  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh DEh  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh DFh  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh E0h  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh E1h  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh E2h  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh E3h  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh E4h  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh E5h  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh E6h  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh E7h  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh E8h  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh E9h  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh EAh  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh EBh  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh ECh  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh EDh  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh EEh  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh EFh  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh F0h  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh F1h  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh F2h  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh F3h  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh F4h  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh F5h  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh F6h  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh F7h  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh F8h  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh F9h  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh FAh  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh FBh  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh FCh  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh FDh  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh FEh  not defined */
                                    /* opcode C4h E2h 7Dh 2Eh FFh  not defined */
                                    default:
                                        goto _x86decode_illegal_opcode;
                                };
/* End of opcodes starting with C4h E2h 7Dh 2Eh */
                                break;
                            case 0x2F: /* C4h E2h 7Dh 2Fh        spec:  */
                                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                                _x86decode_begin_code32_addr32_opcode_parse_C4E27D2F:
/* Opcodes starting with C4h E2h 7Dh 2Fh */
                                switch (mrm.byte) {
                                    case 0x00: /* C4h E2h 7Dh 2Fh 00h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=0 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x01: /* C4h E2h 7Dh 2Fh 01h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=0 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x02: /* C4h E2h 7Dh 2Fh 02h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=0 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x03: /* C4h E2h 7Dh 2Fh 03h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=0 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x04: /* C4h E2h 7Dh 2Fh 04h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=0 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x05: /* C4h E2h 7Dh 2Fh 05h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=0 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x06: /* C4h E2h 7Dh 2Fh 06h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=0 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x07: /* C4h E2h 7Dh 2Fh 07h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=0 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x08: /* C4h E2h 7Dh 2Fh 08h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=1 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x09: /* C4h E2h 7Dh 2Fh 09h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=1 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x0A: /* C4h E2h 7Dh 2Fh 0Ah VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=1 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x0B: /* C4h E2h 7Dh 2Fh 0Bh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=1 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x0C: /* C4h E2h 7Dh 2Fh 0Ch VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=1 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x0D: /* C4h E2h 7Dh 2Fh 0Dh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=1 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x0E: /* C4h E2h 7Dh 2Fh 0Eh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=1 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x0F: /* C4h E2h 7Dh 2Fh 0Fh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=1 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x10: /* C4h E2h 7Dh 2Fh 10h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=2 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x11: /* C4h E2h 7Dh 2Fh 11h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=2 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x12: /* C4h E2h 7Dh 2Fh 12h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=2 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x13: /* C4h E2h 7Dh 2Fh 13h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=2 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x14: /* C4h E2h 7Dh 2Fh 14h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=2 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x15: /* C4h E2h 7Dh 2Fh 15h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=2 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x16: /* C4h E2h 7Dh 2Fh 16h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=2 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x17: /* C4h E2h 7Dh 2Fh 17h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=2 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x18: /* C4h E2h 7Dh 2Fh 18h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=3 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x19: /* C4h E2h 7Dh 2Fh 19h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=3 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x1A: /* C4h E2h 7Dh 2Fh 1Ah VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=3 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x1B: /* C4h E2h 7Dh 2Fh 1Bh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=3 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x1C: /* C4h E2h 7Dh 2Fh 1Ch VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=3 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x1D: /* C4h E2h 7Dh 2Fh 1Dh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=3 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x1E: /* C4h E2h 7Dh 2Fh 1Eh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=3 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x1F: /* C4h E2h 7Dh 2Fh 1Fh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=3 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x20: /* C4h E2h 7Dh 2Fh 20h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=4 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x21: /* C4h E2h 7Dh 2Fh 21h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=4 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x22: /* C4h E2h 7Dh 2Fh 22h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=4 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x23: /* C4h E2h 7Dh 2Fh 23h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=4 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x24: /* C4h E2h 7Dh 2Fh 24h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=4 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x25: /* C4h E2h 7Dh 2Fh 25h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=4 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x26: /* C4h E2h 7Dh 2Fh 26h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=4 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x27: /* C4h E2h 7Dh 2Fh 27h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=4 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x28: /* C4h E2h 7Dh 2Fh 28h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=5 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x29: /* C4h E2h 7Dh 2Fh 29h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=5 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x2A: /* C4h E2h 7Dh 2Fh 2Ah VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=5 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x2B: /* C4h E2h 7Dh 2Fh 2Bh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=5 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x2C: /* C4h E2h 7Dh 2Fh 2Ch VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=5 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x2D: /* C4h E2h 7Dh 2Fh 2Dh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=5 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x2E: /* C4h E2h 7Dh 2Fh 2Eh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=5 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x2F: /* C4h E2h 7Dh 2Fh 2Fh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=5 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x30: /* C4h E2h 7Dh 2Fh 30h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=6 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x31: /* C4h E2h 7Dh 2Fh 31h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=6 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x32: /* C4h E2h 7Dh 2Fh 32h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=6 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x33: /* C4h E2h 7Dh 2Fh 33h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=6 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x34: /* C4h E2h 7Dh 2Fh 34h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=6 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x35: /* C4h E2h 7Dh 2Fh 35h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=6 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x36: /* C4h E2h 7Dh 2Fh 36h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=6 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x37: /* C4h E2h 7Dh 2Fh 37h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=6 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x38: /* C4h E2h 7Dh 2Fh 38h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=7 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x39: /* C4h E2h 7Dh 2Fh 39h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=7 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x3A: /* C4h E2h 7Dh 2Fh 3Ah VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=7 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x3B: /* C4h E2h 7Dh 2Fh 3Bh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=7 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x3C: /* C4h E2h 7Dh 2Fh 3Ch VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=7 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x3D: /* C4h E2h 7Dh 2Fh 3Dh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=7 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x3E: /* C4h E2h 7Dh 2Fh 3Eh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=7 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x3F: /* C4h E2h 7Dh 2Fh 3Fh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=0 reg=7 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x40: /* C4h E2h 7Dh 2Fh 40h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=0 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x41: /* C4h E2h 7Dh 2Fh 41h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=0 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x42: /* C4h E2h 7Dh 2Fh 42h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=0 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x43: /* C4h E2h 7Dh 2Fh 43h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=0 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x44: /* C4h E2h 7Dh 2Fh 44h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=0 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x45: /* C4h E2h 7Dh 2Fh 45h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=0 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x46: /* C4h E2h 7Dh 2Fh 46h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=0 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x47: /* C4h E2h 7Dh 2Fh 47h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=0 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x48: /* C4h E2h 7Dh 2Fh 48h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=1 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x49: /* C4h E2h 7Dh 2Fh 49h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=1 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x4A: /* C4h E2h 7Dh 2Fh 4Ah VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=1 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x4B: /* C4h E2h 7Dh 2Fh 4Bh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=1 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x4C: /* C4h E2h 7Dh 2Fh 4Ch VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=1 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x4D: /* C4h E2h 7Dh 2Fh 4Dh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=1 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x4E: /* C4h E2h 7Dh 2Fh 4Eh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=1 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x4F: /* C4h E2h 7Dh 2Fh 4Fh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=1 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x50: /* C4h E2h 7Dh 2Fh 50h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=2 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x51: /* C4h E2h 7Dh 2Fh 51h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=2 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x52: /* C4h E2h 7Dh 2Fh 52h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=2 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x53: /* C4h E2h 7Dh 2Fh 53h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=2 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x54: /* C4h E2h 7Dh 2Fh 54h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=2 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x55: /* C4h E2h 7Dh 2Fh 55h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=2 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x56: /* C4h E2h 7Dh 2Fh 56h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=2 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x57: /* C4h E2h 7Dh 2Fh 57h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=2 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x58: /* C4h E2h 7Dh 2Fh 58h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=3 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x59: /* C4h E2h 7Dh 2Fh 59h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=3 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x5A: /* C4h E2h 7Dh 2Fh 5Ah VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=3 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x5B: /* C4h E2h 7Dh 2Fh 5Bh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=3 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x5C: /* C4h E2h 7Dh 2Fh 5Ch VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=3 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x5D: /* C4h E2h 7Dh 2Fh 5Dh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=3 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x5E: /* C4h E2h 7Dh 2Fh 5Eh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=3 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x5F: /* C4h E2h 7Dh 2Fh 5Fh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=3 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x60: /* C4h E2h 7Dh 2Fh 60h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=4 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x61: /* C4h E2h 7Dh 2Fh 61h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=4 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x62: /* C4h E2h 7Dh 2Fh 62h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=4 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x63: /* C4h E2h 7Dh 2Fh 63h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=4 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x64: /* C4h E2h 7Dh 2Fh 64h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=4 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x65: /* C4h E2h 7Dh 2Fh 65h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=4 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x66: /* C4h E2h 7Dh 2Fh 66h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=4 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x67: /* C4h E2h 7Dh 2Fh 67h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=4 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x68: /* C4h E2h 7Dh 2Fh 68h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=5 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x69: /* C4h E2h 7Dh 2Fh 69h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=5 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x6A: /* C4h E2h 7Dh 2Fh 6Ah VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=5 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x6B: /* C4h E2h 7Dh 2Fh 6Bh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=5 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x6C: /* C4h E2h 7Dh 2Fh 6Ch VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=5 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x6D: /* C4h E2h 7Dh 2Fh 6Dh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=5 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x6E: /* C4h E2h 7Dh 2Fh 6Eh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=5 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x6F: /* C4h E2h 7Dh 2Fh 6Fh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=5 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x70: /* C4h E2h 7Dh 2Fh 70h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=6 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x71: /* C4h E2h 7Dh 2Fh 71h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=6 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x72: /* C4h E2h 7Dh 2Fh 72h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=6 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x73: /* C4h E2h 7Dh 2Fh 73h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=6 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x74: /* C4h E2h 7Dh 2Fh 74h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=6 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x75: /* C4h E2h 7Dh 2Fh 75h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=6 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x76: /* C4h E2h 7Dh 2Fh 76h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=6 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x77: /* C4h E2h 7Dh 2Fh 77h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=6 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x78: /* C4h E2h 7Dh 2Fh 78h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=7 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x79: /* C4h E2h 7Dh 2Fh 79h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=7 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x7A: /* C4h E2h 7Dh 2Fh 7Ah VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=7 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x7B: /* C4h E2h 7Dh 2Fh 7Bh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=7 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x7C: /* C4h E2h 7Dh 2Fh 7Ch VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=7 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x7D: /* C4h E2h 7Dh 2Fh 7Dh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=7 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x7E: /* C4h E2h 7Dh 2Fh 7Eh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=7 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x7F: /* C4h E2h 7Dh 2Fh 7Fh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=1 reg=7 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x80: /* C4h E2h 7Dh 2Fh 80h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=0 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x81: /* C4h E2h 7Dh 2Fh 81h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=0 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x82: /* C4h E2h 7Dh 2Fh 82h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=0 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x83: /* C4h E2h 7Dh 2Fh 83h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=0 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x84: /* C4h E2h 7Dh 2Fh 84h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=0 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x85: /* C4h E2h 7Dh 2Fh 85h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=0 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x86: /* C4h E2h 7Dh 2Fh 86h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=0 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x87: /* C4h E2h 7Dh 2Fh 87h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=0 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x88: /* C4h E2h 7Dh 2Fh 88h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=1 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x89: /* C4h E2h 7Dh 2Fh 89h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=1 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x8A: /* C4h E2h 7Dh 2Fh 8Ah VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=1 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x8B: /* C4h E2h 7Dh 2Fh 8Bh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=1 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x8C: /* C4h E2h 7Dh 2Fh 8Ch VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=1 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x8D: /* C4h E2h 7Dh 2Fh 8Dh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=1 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x8E: /* C4h E2h 7Dh 2Fh 8Eh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=1 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x8F: /* C4h E2h 7Dh 2Fh 8Fh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=1 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x90: /* C4h E2h 7Dh 2Fh 90h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=2 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x91: /* C4h E2h 7Dh 2Fh 91h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=2 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x92: /* C4h E2h 7Dh 2Fh 92h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=2 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x93: /* C4h E2h 7Dh 2Fh 93h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=2 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x94: /* C4h E2h 7Dh 2Fh 94h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=2 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x95: /* C4h E2h 7Dh 2Fh 95h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=2 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x96: /* C4h E2h 7Dh 2Fh 96h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=2 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x97: /* C4h E2h 7Dh 2Fh 97h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=2 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x98: /* C4h E2h 7Dh 2Fh 98h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=3 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x99: /* C4h E2h 7Dh 2Fh 99h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=3 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x9A: /* C4h E2h 7Dh 2Fh 9Ah VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=3 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x9B: /* C4h E2h 7Dh 2Fh 9Bh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=3 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x9C: /* C4h E2h 7Dh 2Fh 9Ch VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=3 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x9D: /* C4h E2h 7Dh 2Fh 9Dh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=3 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x9E: /* C4h E2h 7Dh 2Fh 9Eh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=3 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0x9F: /* C4h E2h 7Dh 2Fh 9Fh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=3 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xA0: /* C4h E2h 7Dh 2Fh A0h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=4 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xA1: /* C4h E2h 7Dh 2Fh A1h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=4 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xA2: /* C4h E2h 7Dh 2Fh A2h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=4 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xA3: /* C4h E2h 7Dh 2Fh A3h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=4 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xA4: /* C4h E2h 7Dh 2Fh A4h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=4 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xA5: /* C4h E2h 7Dh 2Fh A5h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=4 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xA6: /* C4h E2h 7Dh 2Fh A6h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=4 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xA7: /* C4h E2h 7Dh 2Fh A7h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=4 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xA8: /* C4h E2h 7Dh 2Fh A8h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=5 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xA9: /* C4h E2h 7Dh 2Fh A9h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=5 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xAA: /* C4h E2h 7Dh 2Fh AAh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=5 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xAB: /* C4h E2h 7Dh 2Fh ABh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=5 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xAC: /* C4h E2h 7Dh 2Fh ACh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=5 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xAD: /* C4h E2h 7Dh 2Fh ADh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=5 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xAE: /* C4h E2h 7Dh 2Fh AEh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=5 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xAF: /* C4h E2h 7Dh 2Fh AFh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=5 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xB0: /* C4h E2h 7Dh 2Fh B0h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=6 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xB1: /* C4h E2h 7Dh 2Fh B1h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=6 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xB2: /* C4h E2h 7Dh 2Fh B2h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=6 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xB3: /* C4h E2h 7Dh 2Fh B3h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=6 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xB4: /* C4h E2h 7Dh 2Fh B4h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=6 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xB5: /* C4h E2h 7Dh 2Fh B5h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=6 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xB6: /* C4h E2h 7Dh 2Fh B6h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=6 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xB7: /* C4h E2h 7Dh 2Fh B7h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=6 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xB8: /* C4h E2h 7Dh 2Fh B8h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=7 rm=0      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xB9: /* C4h E2h 7Dh 2Fh B9h VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=7 rm=1      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xBA: /* C4h E2h 7Dh 2Fh BAh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=7 rm=2      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xBB: /* C4h E2h 7Dh 2Fh BBh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=7 rm=3      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xBC: /* C4h E2h 7Dh 2Fh BCh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=7 rm=4      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xBD: /* C4h E2h 7Dh 2Fh BDh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=7 rm=5      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xBE: /* C4h E2h 7Dh 2Fh BEh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=7 rm=6      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                    case 0xBF: /* C4h E2h 7Dh 2Fh BFh VMASKMOVPD avx(r/m),avx(vsidx),avx(reg) mod=2 reg=7 rm=7      spec: vex vsize(256) vlead(0x0F,0x38) vprefix(0x66) 0x2F mod/reg/rm mod!=3 */
                                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VMASKMOVPD %s,YMM%u,YMM%u",IPDecPrint32(mrm,sib,disp,32,RC_AVXREG,""),vex.V,mrm.reg());
                                        break;
                                    /* opcode C4h E2h 7Dh 2Fh C0h  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh C1h  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh C2h  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh C3h  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh C4h  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh C5h  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh C6h  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh C7h  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh C8h  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh C9h  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh CAh  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh CBh  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh CCh  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh CDh  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh CEh  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh CFh  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh D0h  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh D1h  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh D2h  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh D3h  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh D4h  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh D5h  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh D6h  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh D7h  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh D8h  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh D9h  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh DAh  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh DBh  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh DCh  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh DDh  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh DEh  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh DFh  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh E0h  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh E1h  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh E2h  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh E3h  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh E4h  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh E5h  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh E6h  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh E7h  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh E8h  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh E9h  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh EAh  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh EBh  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh ECh  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh EDh  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh EEh  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh EFh  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh F0h  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh F1h  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh F2h  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh F3h  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh F4h  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh F5h  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh F6h  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh F7h  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh F8h  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh F9h  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh FAh  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh FBh  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh FCh  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh FDh  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh FEh  not defined */
                                    /* opcode C4h E2h 7Dh 2Fh FFh  not defined */
                                    default:
                                        goto _x86decode_illegal_opcode;
                                };
/* End of opcodes starting with C4h E2h 7Dh 2Fh */
                                break;
                            /* opcode C4h E2h 7Dh 30h  not defined */
                            /* opcode C4h E2h 7Dh 31h  not defined */
                            /* opcode C4h E2h 7Dh 32h  not defined */
                            /* opcode C4h E2h 7Dh 33h  not defined */
                            /* opcode C4h E2h 7Dh 34h  not defined */
                            /* opcode C4h E2h 7Dh 35h  not defined */
                            /* opcode C4h E2h 7Dh 36h  not defined */
                            /* opcode C4h E2h 7Dh 37h  not defined */
                            /* opcode C4h E2h 7Dh 38h  not defined */
                            /* opcode C4h E2h 7Dh 39h  not defined */
                            /* opcode C4h E2h 7Dh 3Ah  not defined */
                            /* opcode C4h E2h 7Dh 3Bh  not defined */
                            /* opcode C4h E2h 7Dh 3Ch  not defined */
                            /* opcode C4h E2h 7Dh 3Dh  not defined */
                            /* opcode C4h E2h 7Dh 3Eh  not defined */
                            /* opcode C4h E2h 7Dh 3Fh  not defined */
                            /* opcode C4h E2h 7Dh 40h  not defined */
                            /* opcode C4h E2h 7Dh 41h  not defined */
                            /* opcode C4h E2h 7Dh 42h  not defined */
                            /* opcode C4h E2h 7Dh 43h  not defined */
                            /* opcode C4h E2h 7Dh 44h  not defined */
                            /* opcode C4h E2h 7Dh 45h  not defined */
                            /* opcode C4h E2h 7Dh 46h  not defined */
                            /* opcode C4h E2h 7Dh 47h  not defined */
                            /* opcode C4h E2h 7Dh 48h  not defined */
                            /* opcode C4h E2h 7Dh 49h  not defined */
                            /* opcode C4h E2h 7Dh 4Ah  not defined */
                            /* opcode C4h E2h 7Dh 4Bh  not defined */
                            /* opcode C4h E2h 7Dh 4Ch  not defined */
                            /* opcode C4h E2h 7Dh 4Dh  not defined */
                            /* opcode C4h E2h 7Dh 4Eh  not defined */
                            /* opcode C4h E2h 7Dh 4Fh  not defined */
                            /* opcode C4h E2h 7Dh 50h  not defined */
                            /* opcode C4h E2h 7Dh 51h  not defined */
                            /* opcode C4h E2h 7Dh 52h  not defined */
                            /* opcode C4h E2h 7Dh 53h  not defined */
                            /* opcode C4h E2h 7Dh 54h  not defined */
                            /* opcode C4h E2h 7Dh 55h  not defined */
                            /* opcode C4h E2h 7Dh 56h  not defined */
                            /* opcode C4h E2h 7Dh 57h  not defined */
                            /* opcode C4h E2h 7Dh 58h  not defined */
                            /* opcode C4h E2h 7Dh 59h  not defined */
                            /* opcode C4h E2h 7Dh 5Ah  not defined */
                            /* opcode C4h E2h 7Dh 5Bh  not defined */
                            /* opcode C4h E2h 7Dh 5Ch  not defined */
                            /* opcode C4h E2h 7Dh 5Dh  not defined */
                            /* opcode C4h E2h 7Dh 5Eh  not defined */
                            /* opcode C4h E2h 7Dh 5Fh  not defined */
                            /* opcode C4h E2h 7Dh 60h  not defined */
                            /* opcode C4h E2h 7Dh 61h  not defined */
                            /* opcode C4h E2h 7Dh 62h  not defined */
                            /* opcode C4h E2h 7Dh 63h  not defined */
                            /* opcode C4h E2h 7Dh 64h  not defined */
                            /* opcode C4h E2h 7Dh 65h  not defined */
                            /* opcode C4h E2h 7Dh 66h  not defined */
                            /* opcode C4h E2h 7Dh 67h  not defined */
                            /* opcode C4h E2h 7Dh 68h  not defined */
                            /* opcode C4h E2h 7Dh 69h  not defined */
                            /* opcode C4h E2h 7Dh 6Ah  not defined */
                            /* opcode C4h E2h 7Dh 6Bh  not defined */
                            /* opcode C4h E2h 7Dh 6Ch  not defined */
                            /* opcode C4h E2h 7Dh 6Dh  not defined */
                            /* opcode C4h E2h 7Dh 6Eh  not defined */
                            /* opcode C4h E2h 7Dh 6Fh  not defined */
                            /* opcode C4h E2h 7Dh 70h  not defined */
                            /* opcode C4h E2h 7Dh 71h  not defined */
                            /* opcode C4h E2h 7Dh 72h  not defined */
                            /* opcode C4h E2h 7Dh 73h  not defined */
                            /* opcode C4h E2h 7Dh 74h  not defined */
                            /* opcode C4h E2h 7Dh 75h  not defined */
                            /* opcode C4h E2h 7Dh 76h  not defined */
                            /* opcode C4h E2h 7Dh 77h  not defined */
                            /* opcode C4h E2h 7Dh 78h  not defined */
                            /* opcode C4h E2h 7Dh 79h  not defined */
                            /* opcode C4h E2h 7Dh 7Ah  not defined */
                            /* opcode C4h E2h 7Dh 7Bh  not defined */
                            /* opcode C4h E2h 7Dh 7Ch  not defined */
                            /* opcode C4h E2h 7Dh 7Dh  not defined */
                            /* opcode C4h E2h 7Dh 7Eh  not defined */
                            /* opcode C4h E2h 7Dh 7Fh  not defined */
                            /* opcode C4h E2h 7Dh 80h  not defined */
                            /* opcode C4h E2h 7Dh 81h  not defined */
                            /* opcode C4h E2h 7Dh 82h  not defined */
                            /* opcode C4h E2h 7Dh 83h  not defined */
                            /* opcode C4h E2h 7Dh 84h  not defined */
                            /* opcode C4h E2h 7Dh 85h  not defined */
                            /* opcode C4h E2h 7Dh 86h  not defined */
                            /* opcode C4h E2h 7Dh 87h  not defined */
                            /* opcode C4h E2h 7Dh 88h  not defined */
                            /* opcode C4h E2h 7Dh 89h  not defined */
                            /* opcode C4h E2h 7Dh 8Ah  not defined */
                            /* opcode C4h E2h 7Dh 8Bh  not defined */
                            /* opcode C4h E2h 7Dh 8Ch  not defined */
                            /* opcode C4h E2h 7Dh 8Dh  not defined */
                            /* opcode C4h E2h 7Dh 8Eh  not defined */
                            /* opcode C4h E2h 7Dh 8Fh  not defined */
                            /* opcode C4h E2h 7Dh 90h  not defined */
                            /* opcode C4h E2h 7Dh 91h  not defined */
                            /* opcode C4h E2h 7Dh 92h  not defined */
                            /* opcode C4h E2h 7Dh 93h  not defined */
                            /* opcode C4h E2h 7Dh 94h  not defined */
                            /* opcode C4h E2h 7Dh 95h  not defined */
                            /* opcode C4h E2h 7Dh 96h  not defined */
                            /* opcode C4h E2h 7Dh 97h  not defined */
                            /* opcode C4h E2h 7Dh 98h  not defined */
                            /* opcode C4h E2h 7Dh 99h  not defined */
                            /* opcode C4h E2h 7Dh 9Ah  not defined */
                            /* opcode C4h E2h 7Dh 9Bh  not defined */
                            /* opcode C4h E2h 7Dh 9Ch  not defined */
                            /* opcode C4h E2h 7Dh 9Dh  not defined */
                            /* opcode C4h E2h 7Dh 9Eh  not defined */
                            /* opcode C4h E2h 7Dh 9Fh  not defined */
                            /* opcode C4h E2h 7Dh A0h  not defined */
                            /* opcode C4h E2h 7Dh A1h  not defined */
                            /* opcode C4h E2h 7Dh A2h  not defined */
                            /* opcode C4h E2h 7Dh A3h  not defined */
                            /* opcode C4h E2h 7Dh A4h  not defined */
                            /* opcode C4h E2h 7Dh A5h  not defined */
                            /* opcode C4h E2h 7Dh A6h  not defined */
                            /* opcode C4h E2h 7Dh A7h  not defined */
                            /* opcode C4h E2h 7Dh A8h  not defined */
                            /* opcode C4h E2h 7Dh A9h  not defined */
                            /* opcode C4h E2h 7Dh AAh  not defined */
                            /* opcode C4h E2h 7Dh ABh  not defined */
                            /* opcode C4h E2h 7Dh ACh  not defined */
                            /* opcode C4h E2h 7Dh ADh  not defined */
                            /* opcode C4h E2h 7Dh AEh  not defined */
                            /* opcode C4h E2h 7Dh AFh  not defined */
                            /* opcode C4h E2h 7Dh B0h  not defined */
                            /* opcode C4h E2h 7Dh B1h  not defined */
                            /* opcode C4h E2h 7Dh B2h  not defined */
                            /* opcode C4h E2h 7Dh B3h  not defined */
                            /* opcode C4h E2h 7Dh B4h  not defined */
                            /* opcode C4h E2h 7Dh B5h  not defined */
                            /* opcode C4h E2h 7Dh B6h  not defined */
                            /* opcode C4h E2h 7Dh B7h  not defined */
                            /* opcode C4h E2h 7Dh B8h  not defined */
                            /* opcode C4h E2h 7Dh B9h  not defined */
                            /* opcode C4h E2h 7Dh BAh  not defined */
                            /* opcode C4h E2h 7Dh BBh  not defined */
                            /* opcode C4h E2h 7Dh BCh  not defined */
                            /* opcode C4h E2h 7Dh BDh  not defined */
                            /* opcode C4h E2h 7Dh BEh  not defined */
                            /* opcode C4h E2h 7Dh BFh  not defined */
                            /* opcode C4h E2h 7Dh C0h  not defined */
                            /* opcode C4h E2h 7Dh C1h  not defined */
                            /* opcode C4h E2h 7Dh C2h  not defined */
                            /* opcode C4h E2h 7Dh C3h  not defined */
                            /* opcode C4h E2h 7Dh C4h  not defined */
                            /* opcode C4h E2h 7Dh C5h  not defined */
                            /* opcode C4h E2h 7Dh C6h  not defined */
                            /* opcode C4h E2h 7Dh C7h  not defined */
                            /* opcode C4h E2h 7Dh C8h  not defined */
                            /* opcode C4h E2h 7Dh C9h  not defined */
                            /* opcode C4h E2h 7Dh CAh  not defined */
                            /* opcode C4h E2h 7Dh CBh  not defined */
                            /* opcode C4h E2h 7Dh CCh  not defined */
                            /* opcode C4h E2h 7Dh CDh  not defined */
                            /* opcode C4h E2h 7Dh CEh  not defined */
                            /* opcode C4h E2h 7Dh CFh  not defined */
                            /* opcode C4h E2h 7Dh D0h  not defined */
                            /* opcode C4h E2h 7Dh D1h  not defined */
                            /* opcode C4h E2h 7Dh D2h  not defined */
                            /* opcode C4h E2h 7Dh D3h  not defined */
                            /* opcode C4h E2h 7Dh D4h  not defined */
                            /* opcode C4h E2h 7Dh D5h  not defined */
                            /* opcode C4h E2h 7Dh D6h  not defined */
                            /* opcode C4h E2h 7Dh D7h  not defined */
                            /* opcode C4h E2h 7Dh D8h  not defined */
                            /* opcode C4h E2h 7Dh D9h  not defined */
                            /* opcode C4h E2h 7Dh DAh  not defined */
                            /* opcode C4h E2h 7Dh DBh  not defined */
                            /* opcode C4h E2h 7Dh DCh  not defined */
                            /* opcode C4h E2h 7Dh DDh  not defined */
                            /* opcode C4h E2h 7Dh DEh  not defined */
                            /* opcode C4h E2h 7Dh DFh  not defined */
                            /* opcode C4h E2h 7Dh E0h  not defined */
                            /* opcode C4h E2h 7Dh E1h  not defined */
                            /* opcode C4h E2h 7Dh E2h  not defined */
                            /* opcode C4h E2h 7Dh E3h  not defined */
                            /* opcode C4h E2h 7Dh E4h  not defined */
                            /* opcode C4h E2h 7Dh E5h  not defined */
                            /* opcode C4h E2h 7Dh E6h  not defined */
                            /* opcode C4h E2h 7Dh E7h  not defined */
                            /* opcode C4h E2h 7Dh E8h  not defined */
                            /* opcode C4h E2h 7Dh E9h  not defined */
                            /* opcode C4h E2h 7Dh EAh  not defined */
                            /* opcode C4h E2h 7Dh EBh  not defined */
                            /* opcode C4h E2h 7Dh ECh  not defined */
                            /* opcode C4h E2h 7Dh EDh  not defined */
                            /* opcode C4h E2h 7Dh EEh  not defined */
                            /* opcode C4h E2h 7Dh EFh  not defined */
                            /* opcode C4h E2h 7Dh F0h  not defined */
                            /* opcode C4h E2h 7Dh F1h  not defined */
                            /* opcode C4h E2h 7Dh F2h  not defined */
                            /* opcode C4h E2h 7Dh F3h  not defined */
                            /* opcode C4h E2h 7Dh F4h  not defined */
                            /* opcode C4h E2h 7Dh F5h  not defined */
                            /* opcode C4h E2h 7Dh F6h  not defined */
                            /* opcode C4h E2h 7Dh F7h  not defined */
                            /* opcode C4h E2h 7Dh F8h  not defined */
                            /* opcode C4h E2h 7Dh F9h  not defined */
                            /* opcode C4h E2h 7Dh FAh  not defined */
                            /* opcode C4h E2h 7Dh FBh  not defined */
                            /* opcode C4h E2h 7Dh FCh  not defined */
                            /* opcode C4h E2h 7Dh FDh  not defined */
                            /* opcode C4h E2h 7Dh FEh  not defined */
                            /* opcode C4h E2h 7Dh FFh  not defined */
                            default:
                                goto _x86decode_illegal_opcode;
                        };
/* End of opcodes starting with C4h E2h 7Dh */
                        break;
                    /* opcode C4h E2h 7Eh  not defined */
                    /* opcode C4h E2h 7Fh  not defined */
                    /* opcode C4h E2h 80h  not defined */
                    /* opcode C4h E2h 81h  not defined */
                    /* opcode C4h E2h 82h  not defined */
                    /* opcode C4h E2h 83h  not defined */
                    /* opcode C4h E2h 84h  not defined */
                    /* opcode C4h E2h 85h  not defined */
                    /* opcode C4h E2h 86h  not defined */
                    /* opcode C4h E2h 87h  not defined */
                    /* opcode C4h E2h 88h  not defined */
                    /* opcode C4h E2h 89h  not defined */
                    /* opcode C4h E2h 8Ah  not defined */
                    /* opcode C4h E2h 8Bh  not defined */
                    /* opcode C4h E2h 8Ch  not defined */
                    /* opcode C4h E2h 8Dh  not defined */
                    /* opcode C4h E2h 8Eh  not defined */
                    /* opcode C4h E2h 8Fh  not defined */
                    /* opcode C4h E2h 90h  not defined */
                    /* opcode C4h E2h 91h  not defined */
                    /* opcode C4h E2h 92h  not defined */
                    /* opcode C4h E2h 93h  not defined */
                    /* opcode C4h E2h 94h  not defined */
                    /* opcode C4h E2h 95h  not defined */
                    /* opcode C4h E2h 96h  not defined */
                    /* opcode C4h E2h 97h  not defined */
                    /* opcode C4h E2h 98h  not defined */
                    /* opcode C4h E2h 99h  not defined */
                    /* opcode C4h E2h 9Ah  not defined */
                    /* opcode C4h E2h 9Bh  not defined */
                    /* opcode C4h E2h 9Ch  not defined */
                    /* opcode C4h E2h 9Dh  not defined */
                    /* opcode C4h E2h 9Eh  not defined */
                    /* opcode C4h E2h 9Fh  not defined */
                    /* opcode C4h E2h A0h  not defined */
                    /* opcode C4h E2h A1h  not defined */
                    /* opcode C4h E2h A2h  not defined */
                    /* opcode C4h E2h A3h  not defined */
                    /* opcode C4h E2h A4h  not defined */
                    /* opcode C4h E2h A5h  not defined */
                    /* opcode C4h E2h A6h  not defined */
                    /* opcode C4h E2h A7h  not defined */
                    /* opcode C4h E2h A8h  not defined */
                    /* opcode C4h E2h A9h  not defined */
                    /* opcode C4h E2h AAh  not defined */
                    /* opcode C4h E2h ABh  not defined */
                    /* opcode C4h E2h ACh  not defined */
                    /* opcode C4h E2h ADh  not defined */
                    /* opcode C4h E2h AEh  not defined */
                    /* opcode C4h E2h AFh  not defined */
                    /* opcode C4h E2h B0h  not defined */
                    /* opcode C4h E2h B1h  not defined */
                    /* opcode C4h E2h B2h  not defined */
                    /* opcode C4h E2h B3h  not defined */
                    /* opcode C4h E2h B4h  not defined */
                    /* opcode C4h E2h B5h  not defined */
                    /* opcode C4h E2h B6h  not defined */
                    /* opcode C4h E2h B7h  not defined */
                    /* opcode C4h E2h B8h  not defined */
                    /* opcode C4h E2h B9h  not defined */
                    /* opcode C4h E2h BAh  not defined */
                    /* opcode C4h E2h BBh  not defined */
                    /* opcode C4h E2h BCh  not defined */
                    /* opcode C4h E2h BDh  not defined */
                    /* opcode C4h E2h BEh  not defined */
                    /* opcode C4h E2h BFh  not defined */
                    /* opcode C4h E2h C0h  not defined */
                    /* opcode C4h E2h C1h  not defined */
                    /* opcode C4h E2h C2h  not defined */
                    /* opcode C4h E2h C3h  not defined */
                    /* opcode C4h E2h C4h  not defined */
                    /* opcode C4h E2h C5h  not defined */
                    /* opcode C4h E2h C6h  not defined */
                    /* opcode C4h E2h C7h  not defined */
                    /* opcode C4h E2h C8h  not defined */
                    /* opcode C4h E2h C9h  not defined */
                    /* opcode C4h E2h CAh  not defined */
                    /* opcode C4h E2h CBh  not defined */
                    /* opcode C4h E2h CCh  not defined */
                    /* opcode C4h E2h CDh  not defined */
                    /* opcode C4h E2h CEh  not defined */
                    /* opcode C4h E2h CFh  not defined */
                    /* opcode C4h E2h D0h  not defined */
                    /* opcode C4h E2h D1h  not defined */
                    /* opcode C4h E2h D2h  not defined */
                    /* opcode C4h E2h D3h  not defined */
                    /* opcode C4h E2h D4h  not defined */
                    /* opcode C4h E2h D5h  not defined */
                    /* opcode C4h E2h D6h  not defined */
                    /* opcode C4h E2h D7h  not defined */
                    /* opcode C4h E2h D8h  not defined */
                    /* opcode C4h E2h D9h  not defined */
                    /* opcode C4h E2h DAh  not defined */
                    /* opcode C4h E2h DBh  not defined */
                    /* opcode C4h E2h DCh  not defined */
                    /* opcode C4h E2h DDh  not defined */
                    /* opcode C4h E2h DEh  not defined */
                    /* opcode C4h E2h DFh  not defined */
                    /* opcode C4h E2h E0h  not defined */
                    /* opcode C4h E2h E1h  not defined */
                    /* opcode C4h E2h E2h  not defined */
                    /* opcode C4h E2h E3h  not defined */
                    /* opcode C4h E2h E4h  not defined */
                    /* opcode C4h E2h E5h  not defined */
                    /* opcode C4h E2h E6h  not defined */
                    /* opcode C4h E2h E7h  not defined */
                    /* opcode C4h E2h E8h  not defined */
                    /* opcode C4h E2h E9h  not defined */
                    /* opcode C4h E2h EAh  not defined */
                    /* opcode C4h E2h EBh  not defined */
                    /* opcode C4h E2h ECh  not defined */
                    /* opcode C4h E2h EDh  not defined */
                    /* opcode C4h E2h EEh  not defined */
                    /* opcode C4h E2h EFh  not defined */
                    /* opcode C4h E2h F0h  not defined */
                    /* opcode C4h E2h F1h  not defined */
                    /* opcode C4h E2h F2h  not defined */
                    /* opcode C4h E2h F3h  not defined */
                    /* opcode C4h E2h F4h  not defined */
                    /* opcode C4h E2h F5h  not defined */
                    /* opcode C4h E2h F6h  not defined */
                    /* opcode C4h E2h F7h  not defined */
                    /* opcode C4h E2h F8h  not defined */
                    /* opcode C4h E2h F9h  not defined */
                    /* opcode C4h E2h FAh  not defined */
                    /* opcode C4h E2h FBh  not defined */
                    /* opcode C4h E2h FCh  not defined */
                    /* opcode C4h E2h FDh  not defined */
                    /* opcode C4h E2h FEh  not defined */
                    /* opcode C4h E2h FFh  not defined */
                    default:
                        goto _x86decode_illegal_opcode;
                };
/* End of opcodes starting with C4h E2h */
                break;
            case 0xE3: /* C4h E3h   mod=3 reg=4 rm=3      spec:  */
/* Opcodes starting with C4h E3h */
                op=IPFB();
                _x86decode_begin_code32_addr32_opcode_parse_C4E3:
                switch (op) {
                    /* opcode C4h E3h 00h  not defined */
                    /* opcode C4h E3h 01h  not defined */
                    /* opcode C4h E3h 02h  not defined */
                    /* opcode C4h E3h 03h  not defined */
                    /* opcode C4h E3h 04h  not defined */
                    /* opcode C4h E3h 05h  not defined */
                    /* opcode C4h E3h 06h  not defined */
                    /* opcode C4h E3h 07h  not defined */
                    /* opcode C4h E3h 08h  not defined */
                    /* opcode C4h E3h 09h  not defined */
                    /* opcode C4h E3h 0Ah  not defined */
                    /* opcode C4h E3h 0Bh  not defined */
                    /* opcode C4h E3h 0Ch  not defined */
                    /* opcode C4h E3h 0Dh  not defined */
                    /* opcode C4h E3h 0Eh  not defined */
                    /* opcode C4h E3h 0Fh  not defined */
                    /* opcode C4h E3h 10h  not defined */
                    /* opcode C4h E3h 11h  not defined */
                    /* opcode C4h E3h 12h  not defined */
                    /* opcode C4h E3h 13h  not defined */
                    /* opcode C4h E3h 14h  not defined */
                    /* opcode C4h E3h 15h  not defined */
                    /* opcode C4h E3h 16h  not defined */
                    /* opcode C4h E3h 17h  not defined */
                    /* opcode C4h E3h 18h  not defined */
                    /* opcode C4h E3h 19h  not defined */
                    /* opcode C4h E3h 1Ah  not defined */
                    /* opcode C4h E3h 1Bh  not defined */
                    /* opcode C4h E3h 1Ch  not defined */
                    /* opcode C4h E3h 1Dh  not defined */
                    /* opcode C4h E3h 1Eh  not defined */
                    /* opcode C4h E3h 1Fh  not defined */
                    /* opcode C4h E3h 20h  not defined */
                    /* opcode C4h E3h 21h  not defined */
                    /* opcode C4h E3h 22h  not defined */
                    /* opcode C4h E3h 23h  not defined */
                    /* opcode C4h E3h 24h  not defined */
                    /* opcode C4h E3h 25h  not defined */
                    /* opcode C4h E3h 26h  not defined */
                    /* opcode C4h E3h 27h  not defined */
                    /* opcode C4h E3h 28h  not defined */
                    /* opcode C4h E3h 29h  not defined */
                    /* opcode C4h E3h 2Ah  not defined */
                    /* opcode C4h E3h 2Bh  not defined */
                    /* opcode C4h E3h 2Ch  not defined */
                    /* opcode C4h E3h 2Dh  not defined */
                    /* opcode C4h E3h 2Eh  not defined */
                    /* opcode C4h E3h 2Fh  not defined */
                    /* opcode C4h E3h 30h  not defined */
                    /* opcode C4h E3h 31h  not defined */
                    /* opcode C4h E3h 32h  not defined */
                    /* opcode C4h E3h 33h  not defined */
                    /* opcode C4h E3h 34h  not defined */
                    /* opcode C4h E3h 35h  not defined */
                    /* opcode C4h E3h 36h  not defined */
                    /* opcode C4h E3h 37h  not defined */
                    /* opcode C4h E3h 38h  not defined */
                    /* opcode C4h E3h 39h  not defined */
                    /* opcode C4h E3h 3Ah  not defined */
                    /* opcode C4h E3h 3Bh  not defined */
                    /* opcode C4h E3h 3Ch  not defined */
                    /* opcode C4h E3h 3Dh  not defined */
                    /* opcode C4h E3h 3Eh  not defined */
                    /* opcode C4h E3h 3Fh  not defined */
                    /* opcode C4h E3h 40h  not defined */
                    case 0x41: /* C4h E3h 41h        spec:  */
                    case 0x49: /* C4h E3h 49h        spec:  */
                    case 0x51: /* C4h E3h 51h        spec:  */
                    case 0x59: /* C4h E3h 59h        spec:  */
                    case 0x61: /* C4h E3h 61h        spec:  */
                    case 0x69: /* C4h E3h 69h        spec:  */
                    case 0x71: /* C4h E3h 71h        spec:  */
                    case 0x79: /* C4h E3h 79h        spec:  */
                        vex.V = ((~op) >> 3) & 7;
/* Opcodes starting with C4h E3h 41h */
                        op=IPFB();
                        _x86decode_begin_code32_addr32_opcode_parse_C4E341:
                        switch (op) {
                            /* opcode C4h E3h 41h 00h  not defined */
                            /* opcode C4h E3h 41h 01h  not defined */
                            /* opcode C4h E3h 41h 02h  not defined */
                            /* opcode C4h E3h 41h 03h  not defined */
                            case 0x04: /* C4h E3h 41h 04h VPERMILPS sse(reg),sse(vsidx),i      spec: vex vsize(128) vlead(0x0F,0x3A) vprefix(0x66) 0x04 mod/reg/rm ib */
                                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                                imm=IPFB();
                                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VPERMILPS XMM%u,XMM%u,0x%02lX",mrm.reg(),vex.V,(unsigned long)((uint32_t)imm));
                                break;
                            case 0x05: /* C4h E3h 41h 05h VPERMILPD sse(reg),sse(vsidx),i      spec: vex vsize(128) vlead(0x0F,0x3A) vprefix(0x66) 0x05 mod/reg/rm ib */
                                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                                imm=IPFB();
                                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VPERMILPD XMM%u,XMM%u,0x%02lX",mrm.reg(),vex.V,(unsigned long)((uint32_t)imm));
                                break;
                            /* opcode C4h E3h 41h 06h  not defined */
                            /* opcode C4h E3h 41h 07h  not defined */
                            /* opcode C4h E3h 41h 08h  not defined */
                            /* opcode C4h E3h 41h 09h  not defined */
                            /* opcode C4h E3h 41h 0Ah  not defined */
                            /* opcode C4h E3h 41h 0Bh  not defined */
                            /* opcode C4h E3h 41h 0Ch  not defined */
                            /* opcode C4h E3h 41h 0Dh  not defined */
                            /* opcode C4h E3h 41h 0Eh  not defined */
                            /* opcode C4h E3h 41h 0Fh  not defined */
                            /* opcode C4h E3h 41h 10h  not defined */
                            /* opcode C4h E3h 41h 11h  not defined */
                            /* opcode C4h E3h 41h 12h  not defined */
                            /* opcode C4h E3h 41h 13h  not defined */
                            /* opcode C4h E3h 41h 14h  not defined */
                            /* opcode C4h E3h 41h 15h  not defined */
                            /* opcode C4h E3h 41h 16h  not defined */
                            /* opcode C4h E3h 41h 17h  not defined */
                            /* opcode C4h E3h 41h 18h  not defined */
                            /* opcode C4h E3h 41h 19h  not defined */
                            /* opcode C4h E3h 41h 1Ah  not defined */
                            /* opcode C4h E3h 41h 1Bh  not defined */
                            /* opcode C4h E3h 41h 1Ch  not defined */
                            /* opcode C4h E3h 41h 1Dh  not defined */
                            /* opcode C4h E3h 41h 1Eh  not defined */
                            /* opcode C4h E3h 41h 1Fh  not defined */
                            /* opcode C4h E3h 41h 20h  not defined */
                            /* opcode C4h E3h 41h 21h  not defined */
                            /* opcode C4h E3h 41h 22h  not defined */
                            /* opcode C4h E3h 41h 23h  not defined */
                            /* opcode C4h E3h 41h 24h  not defined */
                            /* opcode C4h E3h 41h 25h  not defined */
                            /* opcode C4h E3h 41h 26h  not defined */
                            /* opcode C4h E3h 41h 27h  not defined */
                            /* opcode C4h E3h 41h 28h  not defined */
                            /* opcode C4h E3h 41h 29h  not defined */
                            /* opcode C4h E3h 41h 2Ah  not defined */
                            /* opcode C4h E3h 41h 2Bh  not defined */
                            /* opcode C4h E3h 41h 2Ch  not defined */
                            /* opcode C4h E3h 41h 2Dh  not defined */
                            /* opcode C4h E3h 41h 2Eh  not defined */
                            /* opcode C4h E3h 41h 2Fh  not defined */
                            /* opcode C4h E3h 41h 30h  not defined */
                            /* opcode C4h E3h 41h 31h  not defined */
                            /* opcode C4h E3h 41h 32h  not defined */
                            /* opcode C4h E3h 41h 33h  not defined */
                            /* opcode C4h E3h 41h 34h  not defined */
                            /* opcode C4h E3h 41h 35h  not defined */
                            /* opcode C4h E3h 41h 36h  not defined */
                            /* opcode C4h E3h 41h 37h  not defined */
                            /* opcode C4h E3h 41h 38h  not defined */
                            /* opcode C4h E3h 41h 39h  not defined */
                            /* opcode C4h E3h 41h 3Ah  not defined */
                            /* opcode C4h E3h 41h 3Bh  not defined */
                            /* opcode C4h E3h 41h 3Ch  not defined */
                            /* opcode C4h E3h 41h 3Dh  not defined */
                            /* opcode C4h E3h 41h 3Eh  not defined */
                            /* opcode C4h E3h 41h 3Fh  not defined */
                            /* opcode C4h E3h 41h 40h  not defined */
                            /* opcode C4h E3h 41h 41h  not defined */
                            /* opcode C4h E3h 41h 42h  not defined */
                            /* opcode C4h E3h 41h 43h  not defined */
                            /* opcode C4h E3h 41h 44h  not defined */
                            /* opcode C4h E3h 41h 45h  not defined */
                            /* opcode C4h E3h 41h 46h  not defined */
                            /* opcode C4h E3h 41h 47h  not defined */
                            /* opcode C4h E3h 41h 48h  not defined */
                            /* opcode C4h E3h 41h 49h  not defined */
                            /* opcode C4h E3h 41h 4Ah  not defined */
                            /* opcode C4h E3h 41h 4Bh  not defined */
                            /* opcode C4h E3h 41h 4Ch  not defined */
                            /* opcode C4h E3h 41h 4Dh  not defined */
                            /* opcode C4h E3h 41h 4Eh  not defined */
                            /* opcode C4h E3h 41h 4Fh  not defined */
                            /* opcode C4h E3h 41h 50h  not defined */
                            /* opcode C4h E3h 41h 51h  not defined */
                            /* opcode C4h E3h 41h 52h  not defined */
                            /* opcode C4h E3h 41h 53h  not defined */
                            /* opcode C4h E3h 41h 54h  not defined */
                            /* opcode C4h E3h 41h 55h  not defined */
                            /* opcode C4h E3h 41h 56h  not defined */
                            /* opcode C4h E3h 41h 57h  not defined */
                            /* opcode C4h E3h 41h 58h  not defined */
                            /* opcode C4h E3h 41h 59h  not defined */
                            /* opcode C4h E3h 41h 5Ah  not defined */
                            /* opcode C4h E3h 41h 5Bh  not defined */
                            /* opcode C4h E3h 41h 5Ch  not defined */
                            /* opcode C4h E3h 41h 5Dh  not defined */
                            /* opcode C4h E3h 41h 5Eh  not defined */
                            /* opcode C4h E3h 41h 5Fh  not defined */
                            /* opcode C4h E3h 41h 60h  not defined */
                            /* opcode C4h E3h 41h 61h  not defined */
                            /* opcode C4h E3h 41h 62h  not defined */
                            /* opcode C4h E3h 41h 63h  not defined */
                            /* opcode C4h E3h 41h 64h  not defined */
                            /* opcode C4h E3h 41h 65h  not defined */
                            /* opcode C4h E3h 41h 66h  not defined */
                            /* opcode C4h E3h 41h 67h  not defined */
                            /* opcode C4h E3h 41h 68h  not defined */
                            /* opcode C4h E3h 41h 69h  not defined */
                            /* opcode C4h E3h 41h 6Ah  not defined */
                            /* opcode C4h E3h 41h 6Bh  not defined */
                            /* opcode C4h E3h 41h 6Ch  not defined */
                            /* opcode C4h E3h 41h 6Dh  not defined */
                            /* opcode C4h E3h 41h 6Eh  not defined */
                            /* opcode C4h E3h 41h 6Fh  not defined */
                            /* opcode C4h E3h 41h 70h  not defined */
                            /* opcode C4h E3h 41h 71h  not defined */
                            /* opcode C4h E3h 41h 72h  not defined */
                            /* opcode C4h E3h 41h 73h  not defined */
                            /* opcode C4h E3h 41h 74h  not defined */
                            /* opcode C4h E3h 41h 75h  not defined */
                            /* opcode C4h E3h 41h 76h  not defined */
                            /* opcode C4h E3h 41h 77h  not defined */
                            /* opcode C4h E3h 41h 78h  not defined */
                            /* opcode C4h E3h 41h 79h  not defined */
                            /* opcode C4h E3h 41h 7Ah  not defined */
                            /* opcode C4h E3h 41h 7Bh  not defined */
                            /* opcode C4h E3h 41h 7Ch  not defined */
                            /* opcode C4h E3h 41h 7Dh  not defined */
                            /* opcode C4h E3h 41h 7Eh  not defined */
                            /* opcode C4h E3h 41h 7Fh  not defined */
                            /* opcode C4h E3h 41h 80h  not defined */
                            /* opcode C4h E3h 41h 81h  not defined */
                            /* opcode C4h E3h 41h 82h  not defined */
                            /* opcode C4h E3h 41h 83h  not defined */
                            /* opcode C4h E3h 41h 84h  not defined */
                            /* opcode C4h E3h 41h 85h  not defined */
                            /* opcode C4h E3h 41h 86h  not defined */
                            /* opcode C4h E3h 41h 87h  not defined */
                            /* opcode C4h E3h 41h 88h  not defined */
                            /* opcode C4h E3h 41h 89h  not defined */
                            /* opcode C4h E3h 41h 8Ah  not defined */
                            /* opcode C4h E3h 41h 8Bh  not defined */
                            /* opcode C4h E3h 41h 8Ch  not defined */
                            /* opcode C4h E3h 41h 8Dh  not defined */
                            /* opcode C4h E3h 41h 8Eh  not defined */
                            /* opcode C4h E3h 41h 8Fh  not defined */
                            /* opcode C4h E3h 41h 90h  not defined */
                            /* opcode C4h E3h 41h 91h  not defined */
                            /* opcode C4h E3h 41h 92h  not defined */
                            /* opcode C4h E3h 41h 93h  not defined */
                            /* opcode C4h E3h 41h 94h  not defined */
                            /* opcode C4h E3h 41h 95h  not defined */
                            /* opcode C4h E3h 41h 96h  not defined */
                            /* opcode C4h E3h 41h 97h  not defined */
                            /* opcode C4h E3h 41h 98h  not defined */
                            /* opcode C4h E3h 41h 99h  not defined */
                            /* opcode C4h E3h 41h 9Ah  not defined */
                            /* opcode C4h E3h 41h 9Bh  not defined */
                            /* opcode C4h E3h 41h 9Ch  not defined */
                            /* opcode C4h E3h 41h 9Dh  not defined */
                            /* opcode C4h E3h 41h 9Eh  not defined */
                            /* opcode C4h E3h 41h 9Fh  not defined */
                            /* opcode C4h E3h 41h A0h  not defined */
                            /* opcode C4h E3h 41h A1h  not defined */
                            /* opcode C4h E3h 41h A2h  not defined */
                            /* opcode C4h E3h 41h A3h  not defined */
                            /* opcode C4h E3h 41h A4h  not defined */
                            /* opcode C4h E3h 41h A5h  not defined */
                            /* opcode C4h E3h 41h A6h  not defined */
                            /* opcode C4h E3h 41h A7h  not defined */
                            /* opcode C4h E3h 41h A8h  not defined */
                            /* opcode C4h E3h 41h A9h  not defined */
                            /* opcode C4h E3h 41h AAh  not defined */
                            /* opcode C4h E3h 41h ABh  not defined */
                            /* opcode C4h E3h 41h ACh  not defined */
                            /* opcode C4h E3h 41h ADh  not defined */
                            /* opcode C4h E3h 41h AEh  not defined */
                            /* opcode C4h E3h 41h AFh  not defined */
                            /* opcode C4h E3h 41h B0h  not defined */
                            /* opcode C4h E3h 41h B1h  not defined */
                            /* opcode C4h E3h 41h B2h  not defined */
                            /* opcode C4h E3h 41h B3h  not defined */
                            /* opcode C4h E3h 41h B4h  not defined */
                            /* opcode C4h E3h 41h B5h  not defined */
                            /* opcode C4h E3h 41h B6h  not defined */
                            /* opcode C4h E3h 41h B7h  not defined */
                            /* opcode C4h E3h 41h B8h  not defined */
                            /* opcode C4h E3h 41h B9h  not defined */
                            /* opcode C4h E3h 41h BAh  not defined */
                            /* opcode C4h E3h 41h BBh  not defined */
                            /* opcode C4h E3h 41h BCh  not defined */
                            /* opcode C4h E3h 41h BDh  not defined */
                            /* opcode C4h E3h 41h BEh  not defined */
                            /* opcode C4h E3h 41h BFh  not defined */
                            /* opcode C4h E3h 41h C0h  not defined */
                            /* opcode C4h E3h 41h C1h  not defined */
                            /* opcode C4h E3h 41h C2h  not defined */
                            /* opcode C4h E3h 41h C3h  not defined */
                            /* opcode C4h E3h 41h C4h  not defined */
                            /* opcode C4h E3h 41h C5h  not defined */
                            /* opcode C4h E3h 41h C6h  not defined */
                            /* opcode C4h E3h 41h C7h  not defined */
                            /* opcode C4h E3h 41h C8h  not defined */
                            /* opcode C4h E3h 41h C9h  not defined */
                            /* opcode C4h E3h 41h CAh  not defined */
                            /* opcode C4h E3h 41h CBh  not defined */
                            /* opcode C4h E3h 41h CCh  not defined */
                            /* opcode C4h E3h 41h CDh  not defined */
                            /* opcode C4h E3h 41h CEh  not defined */
                            /* opcode C4h E3h 41h CFh  not defined */
                            /* opcode C4h E3h 41h D0h  not defined */
                            /* opcode C4h E3h 41h D1h  not defined */
                            /* opcode C4h E3h 41h D2h  not defined */
                            /* opcode C4h E3h 41h D3h  not defined */
                            /* opcode C4h E3h 41h D4h  not defined */
                            /* opcode C4h E3h 41h D5h  not defined */
                            /* opcode C4h E3h 41h D6h  not defined */
                            /* opcode C4h E3h 41h D7h  not defined */
                            /* opcode C4h E3h 41h D8h  not defined */
                            /* opcode C4h E3h 41h D9h  not defined */
                            /* opcode C4h E3h 41h DAh  not defined */
                            /* opcode C4h E3h 41h DBh  not defined */
                            /* opcode C4h E3h 41h DCh  not defined */
                            /* opcode C4h E3h 41h DDh  not defined */
                            /* opcode C4h E3h 41h DEh  not defined */
                            /* opcode C4h E3h 41h DFh  not defined */
                            /* opcode C4h E3h 41h E0h  not defined */
                            /* opcode C4h E3h 41h E1h  not defined */
                            /* opcode C4h E3h 41h E2h  not defined */
                            /* opcode C4h E3h 41h E3h  not defined */
                            /* opcode C4h E3h 41h E4h  not defined */
                            /* opcode C4h E3h 41h E5h  not defined */
                            /* opcode C4h E3h 41h E6h  not defined */
                            /* opcode C4h E3h 41h E7h  not defined */
                            /* opcode C4h E3h 41h E8h  not defined */
                            /* opcode C4h E3h 41h E9h  not defined */
                            /* opcode C4h E3h 41h EAh  not defined */
                            /* opcode C4h E3h 41h EBh  not defined */
                            /* opcode C4h E3h 41h ECh  not defined */
                            /* opcode C4h E3h 41h EDh  not defined */
                            /* opcode C4h E3h 41h EEh  not defined */
                            /* opcode C4h E3h 41h EFh  not defined */
                            /* opcode C4h E3h 41h F0h  not defined */
                            /* opcode C4h E3h 41h F1h  not defined */
                            /* opcode C4h E3h 41h F2h  not defined */
                            /* opcode C4h E3h 41h F3h  not defined */
                            /* opcode C4h E3h 41h F4h  not defined */
                            /* opcode C4h E3h 41h F5h  not defined */
                            /* opcode C4h E3h 41h F6h  not defined */
                            /* opcode C4h E3h 41h F7h  not defined */
                            /* opcode C4h E3h 41h F8h  not defined */
                            /* opcode C4h E3h 41h F9h  not defined */
                            /* opcode C4h E3h 41h FAh  not defined */
                            /* opcode C4h E3h 41h FBh  not defined */
                            /* opcode C4h E3h 41h FCh  not defined */
                            /* opcode C4h E3h 41h FDh  not defined */
                            /* opcode C4h E3h 41h FEh  not defined */
                            /* opcode C4h E3h 41h FFh  not defined */
                            default:
                                goto _x86decode_illegal_opcode;
                        };
/* End of opcodes starting with C4h E3h 41h */
                        break;
                    /* opcode C4h E3h 42h  not defined */
                    /* opcode C4h E3h 43h  not defined */
                    /* opcode C4h E3h 44h  not defined */
                    case 0x45: /* C4h E3h 45h        spec:  */
                    case 0x4D: /* C4h E3h 4Dh        spec:  */
                    case 0x55: /* C4h E3h 55h        spec:  */
                    case 0x5D: /* C4h E3h 5Dh        spec:  */
                    case 0x65: /* C4h E3h 65h        spec:  */
                    case 0x6D: /* C4h E3h 6Dh        spec:  */
                    case 0x75: /* C4h E3h 75h        spec:  */
                        vex.V = ((~op) >> 3) & 7;
/* Opcodes starting with C4h E3h 45h */
                        op=IPFB();
                        _x86decode_begin_code32_addr32_opcode_parse_C4E345:
                        switch (op) {
                            /* opcode C4h E3h 45h 00h  not defined */
                            /* opcode C4h E3h 45h 01h  not defined */
                            /* opcode C4h E3h 45h 02h  not defined */
                            /* opcode C4h E3h 45h 03h  not defined */
                            case 0x04: /* C4h E3h 45h 04h VPERMILPS avx(reg),avx(vsidx),i      spec: vex vsize(256) vlead(0x0F,0x3A) vprefix(0x66) 0x04 mod/reg/rm ib */
                                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                                imm=IPFB();
                                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VPERMILPS YMM%u,YMM%u,0x%02lX",mrm.reg(),vex.V,(unsigned long)((uint32_t)imm));
                                break;
                            case 0x05: /* C4h E3h 45h 05h VPERMILPD avx(reg),avx(vsidx),i      spec: vex vsize(256) vlead(0x0F,0x3A) vprefix(0x66) 0x05 mod/reg/rm ib */
                                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                                imm=IPFB();
                                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VPERMILPD YMM%u,YMM%u,0x%02lX",mrm.reg(),vex.V,(unsigned long)((uint32_t)imm));
                                break;
                            case 0x06: /* C4h E3h 45h 06h VPERM2F128 avx(reg),avx(vsidx),avx(r/m),i      spec: vex vsize(256) vlead(0x0F,0x3A) vprefix(0x66) 0x06 mod/reg/rm ib */
                                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                                imm=IPFB();
                                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VPERM2F128 YMM%u,YMM%u,%s,0x%02lX",mrm.reg(),vex.V,IPDecPrint32(mrm,sib,disp,32,RC_AVXREG,""),(unsigned long)((uint32_t)imm));
                                break;
                            /* opcode C4h E3h 45h 07h  not defined */
                            /* opcode C4h E3h 45h 08h  not defined */
                            /* opcode C4h E3h 45h 09h  not defined */
                            /* opcode C4h E3h 45h 0Ah  not defined */
                            /* opcode C4h E3h 45h 0Bh  not defined */
                            /* opcode C4h E3h 45h 0Ch  not defined */
                            /* opcode C4h E3h 45h 0Dh  not defined */
                            /* opcode C4h E3h 45h 0Eh  not defined */
                            /* opcode C4h E3h 45h 0Fh  not defined */
                            /* opcode C4h E3h 45h 10h  not defined */
                            /* opcode C4h E3h 45h 11h  not defined */
                            /* opcode C4h E3h 45h 12h  not defined */
                            /* opcode C4h E3h 45h 13h  not defined */
                            /* opcode C4h E3h 45h 14h  not defined */
                            /* opcode C4h E3h 45h 15h  not defined */
                            /* opcode C4h E3h 45h 16h  not defined */
                            /* opcode C4h E3h 45h 17h  not defined */
                            case 0x18: /* C4h E3h 45h 18h VINSERTF128 avx(reg),avx(vsidx),sse(r/m),i      spec: vex vsize(256) vlead(0x0F,0x3A) vprefix(0x66) 0x18 mod/reg/rm ib */
                                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                                imm=IPFB();
                                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VINSERTF128 YMM%u,YMM%u,%s,0x%02lX",mrm.reg(),vex.V,IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""),(unsigned long)((uint32_t)imm));
                                break;
                            /* opcode C4h E3h 45h 19h  not defined */
                            /* opcode C4h E3h 45h 1Ah  not defined */
                            /* opcode C4h E3h 45h 1Bh  not defined */
                            /* opcode C4h E3h 45h 1Ch  not defined */
                            /* opcode C4h E3h 45h 1Dh  not defined */
                            /* opcode C4h E3h 45h 1Eh  not defined */
                            /* opcode C4h E3h 45h 1Fh  not defined */
                            /* opcode C4h E3h 45h 20h  not defined */
                            /* opcode C4h E3h 45h 21h  not defined */
                            /* opcode C4h E3h 45h 22h  not defined */
                            /* opcode C4h E3h 45h 23h  not defined */
                            /* opcode C4h E3h 45h 24h  not defined */
                            /* opcode C4h E3h 45h 25h  not defined */
                            /* opcode C4h E3h 45h 26h  not defined */
                            /* opcode C4h E3h 45h 27h  not defined */
                            /* opcode C4h E3h 45h 28h  not defined */
                            /* opcode C4h E3h 45h 29h  not defined */
                            /* opcode C4h E3h 45h 2Ah  not defined */
                            /* opcode C4h E3h 45h 2Bh  not defined */
                            /* opcode C4h E3h 45h 2Ch  not defined */
                            /* opcode C4h E3h 45h 2Dh  not defined */
                            /* opcode C4h E3h 45h 2Eh  not defined */
                            /* opcode C4h E3h 45h 2Fh  not defined */
                            /* opcode C4h E3h 45h 30h  not defined */
                            /* opcode C4h E3h 45h 31h  not defined */
                            /* opcode C4h E3h 45h 32h  not defined */
                            /* opcode C4h E3h 45h 33h  not defined */
                            /* opcode C4h E3h 45h 34h  not defined */
                            /* opcode C4h E3h 45h 35h  not defined */
                            /* opcode C4h E3h 45h 36h  not defined */
                            /* opcode C4h E3h 45h 37h  not defined */
                            /* opcode C4h E3h 45h 38h  not defined */
                            /* opcode C4h E3h 45h 39h  not defined */
                            /* opcode C4h E3h 45h 3Ah  not defined */
                            /* opcode C4h E3h 45h 3Bh  not defined */
                            /* opcode C4h E3h 45h 3Ch  not defined */
                            /* opcode C4h E3h 45h 3Dh  not defined */
                            /* opcode C4h E3h 45h 3Eh  not defined */
                            /* opcode C4h E3h 45h 3Fh  not defined */
                            /* opcode C4h E3h 45h 40h  not defined */
                            /* opcode C4h E3h 45h 41h  not defined */
                            /* opcode C4h E3h 45h 42h  not defined */
                            /* opcode C4h E3h 45h 43h  not defined */
                            /* opcode C4h E3h 45h 44h  not defined */
                            /* opcode C4h E3h 45h 45h  not defined */
                            /* opcode C4h E3h 45h 46h  not defined */
                            /* opcode C4h E3h 45h 47h  not defined */
                            /* opcode C4h E3h 45h 48h  not defined */
                            /* opcode C4h E3h 45h 49h  not defined */
                            /* opcode C4h E3h 45h 4Ah  not defined */
                            /* opcode C4h E3h 45h 4Bh  not defined */
                            /* opcode C4h E3h 45h 4Ch  not defined */
                            /* opcode C4h E3h 45h 4Dh  not defined */
                            /* opcode C4h E3h 45h 4Eh  not defined */
                            /* opcode C4h E3h 45h 4Fh  not defined */
                            /* opcode C4h E3h 45h 50h  not defined */
                            /* opcode C4h E3h 45h 51h  not defined */
                            /* opcode C4h E3h 45h 52h  not defined */
                            /* opcode C4h E3h 45h 53h  not defined */
                            /* opcode C4h E3h 45h 54h  not defined */
                            /* opcode C4h E3h 45h 55h  not defined */
                            /* opcode C4h E3h 45h 56h  not defined */
                            /* opcode C4h E3h 45h 57h  not defined */
                            /* opcode C4h E3h 45h 58h  not defined */
                            /* opcode C4h E3h 45h 59h  not defined */
                            /* opcode C4h E3h 45h 5Ah  not defined */
                            /* opcode C4h E3h 45h 5Bh  not defined */
                            /* opcode C4h E3h 45h 5Ch  not defined */
                            /* opcode C4h E3h 45h 5Dh  not defined */
                            /* opcode C4h E3h 45h 5Eh  not defined */
                            /* opcode C4h E3h 45h 5Fh  not defined */
                            /* opcode C4h E3h 45h 60h  not defined */
                            /* opcode C4h E3h 45h 61h  not defined */
                            /* opcode C4h E3h 45h 62h  not defined */
                            /* opcode C4h E3h 45h 63h  not defined */
                            /* opcode C4h E3h 45h 64h  not defined */
                            /* opcode C4h E3h 45h 65h  not defined */
                            /* opcode C4h E3h 45h 66h  not defined */
                            /* opcode C4h E3h 45h 67h  not defined */
                            /* opcode C4h E3h 45h 68h  not defined */
                            /* opcode C4h E3h 45h 69h  not defined */
                            /* opcode C4h E3h 45h 6Ah  not defined */
                            /* opcode C4h E3h 45h 6Bh  not defined */
                            /* opcode C4h E3h 45h 6Ch  not defined */
                            /* opcode C4h E3h 45h 6Dh  not defined */
                            /* opcode C4h E3h 45h 6Eh  not defined */
                            /* opcode C4h E3h 45h 6Fh  not defined */
                            /* opcode C4h E3h 45h 70h  not defined */
                            /* opcode C4h E3h 45h 71h  not defined */
                            /* opcode C4h E3h 45h 72h  not defined */
                            /* opcode C4h E3h 45h 73h  not defined */
                            /* opcode C4h E3h 45h 74h  not defined */
                            /* opcode C4h E3h 45h 75h  not defined */
                            /* opcode C4h E3h 45h 76h  not defined */
                            /* opcode C4h E3h 45h 77h  not defined */
                            /* opcode C4h E3h 45h 78h  not defined */
                            /* opcode C4h E3h 45h 79h  not defined */
                            /* opcode C4h E3h 45h 7Ah  not defined */
                            /* opcode C4h E3h 45h 7Bh  not defined */
                            /* opcode C4h E3h 45h 7Ch  not defined */
                            /* opcode C4h E3h 45h 7Dh  not defined */
                            /* opcode C4h E3h 45h 7Eh  not defined */
                            /* opcode C4h E3h 45h 7Fh  not defined */
                            /* opcode C4h E3h 45h 80h  not defined */
                            /* opcode C4h E3h 45h 81h  not defined */
                            /* opcode C4h E3h 45h 82h  not defined */
                            /* opcode C4h E3h 45h 83h  not defined */
                            /* opcode C4h E3h 45h 84h  not defined */
                            /* opcode C4h E3h 45h 85h  not defined */
                            /* opcode C4h E3h 45h 86h  not defined */
                            /* opcode C4h E3h 45h 87h  not defined */
                            /* opcode C4h E3h 45h 88h  not defined */
                            /* opcode C4h E3h 45h 89h  not defined */
                            /* opcode C4h E3h 45h 8Ah  not defined */
                            /* opcode C4h E3h 45h 8Bh  not defined */
                            /* opcode C4h E3h 45h 8Ch  not defined */
                            /* opcode C4h E3h 45h 8Dh  not defined */
                            /* opcode C4h E3h 45h 8Eh  not defined */
                            /* opcode C4h E3h 45h 8Fh  not defined */
                            /* opcode C4h E3h 45h 90h  not defined */
                            /* opcode C4h E3h 45h 91h  not defined */
                            /* opcode C4h E3h 45h 92h  not defined */
                            /* opcode C4h E3h 45h 93h  not defined */
                            /* opcode C4h E3h 45h 94h  not defined */
                            /* opcode C4h E3h 45h 95h  not defined */
                            /* opcode C4h E3h 45h 96h  not defined */
                            /* opcode C4h E3h 45h 97h  not defined */
                            /* opcode C4h E3h 45h 98h  not defined */
                            /* opcode C4h E3h 45h 99h  not defined */
                            /* opcode C4h E3h 45h 9Ah  not defined */
                            /* opcode C4h E3h 45h 9Bh  not defined */
                            /* opcode C4h E3h 45h 9Ch  not defined */
                            /* opcode C4h E3h 45h 9Dh  not defined */
                            /* opcode C4h E3h 45h 9Eh  not defined */
                            /* opcode C4h E3h 45h 9Fh  not defined */
                            /* opcode C4h E3h 45h A0h  not defined */
                            /* opcode C4h E3h 45h A1h  not defined */
                            /* opcode C4h E3h 45h A2h  not defined */
                            /* opcode C4h E3h 45h A3h  not defined */
                            /* opcode C4h E3h 45h A4h  not defined */
                            /* opcode C4h E3h 45h A5h  not defined */
                            /* opcode C4h E3h 45h A6h  not defined */
                            /* opcode C4h E3h 45h A7h  not defined */
                            /* opcode C4h E3h 45h A8h  not defined */
                            /* opcode C4h E3h 45h A9h  not defined */
                            /* opcode C4h E3h 45h AAh  not defined */
                            /* opcode C4h E3h 45h ABh  not defined */
                            /* opcode C4h E3h 45h ACh  not defined */
                            /* opcode C4h E3h 45h ADh  not defined */
                            /* opcode C4h E3h 45h AEh  not defined */
                            /* opcode C4h E3h 45h AFh  not defined */
                            /* opcode C4h E3h 45h B0h  not defined */
                            /* opcode C4h E3h 45h B1h  not defined */
                            /* opcode C4h E3h 45h B2h  not defined */
                            /* opcode C4h E3h 45h B3h  not defined */
                            /* opcode C4h E3h 45h B4h  not defined */
                            /* opcode C4h E3h 45h B5h  not defined */
                            /* opcode C4h E3h 45h B6h  not defined */
                            /* opcode C4h E3h 45h B7h  not defined */
                            /* opcode C4h E3h 45h B8h  not defined */
                            /* opcode C4h E3h 45h B9h  not defined */
                            /* opcode C4h E3h 45h BAh  not defined */
                            /* opcode C4h E3h 45h BBh  not defined */
                            /* opcode C4h E3h 45h BCh  not defined */
                            /* opcode C4h E3h 45h BDh  not defined */
                            /* opcode C4h E3h 45h BEh  not defined */
                            /* opcode C4h E3h 45h BFh  not defined */
                            /* opcode C4h E3h 45h C0h  not defined */
                            /* opcode C4h E3h 45h C1h  not defined */
                            /* opcode C4h E3h 45h C2h  not defined */
                            /* opcode C4h E3h 45h C3h  not defined */
                            /* opcode C4h E3h 45h C4h  not defined */
                            /* opcode C4h E3h 45h C5h  not defined */
                            /* opcode C4h E3h 45h C6h  not defined */
                            /* opcode C4h E3h 45h C7h  not defined */
                            /* opcode C4h E3h 45h C8h  not defined */
                            /* opcode C4h E3h 45h C9h  not defined */
                            /* opcode C4h E3h 45h CAh  not defined */
                            /* opcode C4h E3h 45h CBh  not defined */
                            /* opcode C4h E3h 45h CCh  not defined */
                            /* opcode C4h E3h 45h CDh  not defined */
                            /* opcode C4h E3h 45h CEh  not defined */
                            /* opcode C4h E3h 45h CFh  not defined */
                            /* opcode C4h E3h 45h D0h  not defined */
                            /* opcode C4h E3h 45h D1h  not defined */
                            /* opcode C4h E3h 45h D2h  not defined */
                            /* opcode C4h E3h 45h D3h  not defined */
                            /* opcode C4h E3h 45h D4h  not defined */
                            /* opcode C4h E3h 45h D5h  not defined */
                            /* opcode C4h E3h 45h D6h  not defined */
                            /* opcode C4h E3h 45h D7h  not defined */
                            /* opcode C4h E3h 45h D8h  not defined */
                            /* opcode C4h E3h 45h D9h  not defined */
                            /* opcode C4h E3h 45h DAh  not defined */
                            /* opcode C4h E3h 45h DBh  not defined */
                            /* opcode C4h E3h 45h DCh  not defined */
                            /* opcode C4h E3h 45h DDh  not defined */
                            /* opcode C4h E3h 45h DEh  not defined */
                            /* opcode C4h E3h 45h DFh  not defined */
                            /* opcode C4h E3h 45h E0h  not defined */
                            /* opcode C4h E3h 45h E1h  not defined */
                            /* opcode C4h E3h 45h E2h  not defined */
                            /* opcode C4h E3h 45h E3h  not defined */
                            /* opcode C4h E3h 45h E4h  not defined */
                            /* opcode C4h E3h 45h E5h  not defined */
                            /* opcode C4h E3h 45h E6h  not defined */
                            /* opcode C4h E3h 45h E7h  not defined */
                            /* opcode C4h E3h 45h E8h  not defined */
                            /* opcode C4h E3h 45h E9h  not defined */
                            /* opcode C4h E3h 45h EAh  not defined */
                            /* opcode C4h E3h 45h EBh  not defined */
                            /* opcode C4h E3h 45h ECh  not defined */
                            /* opcode C4h E3h 45h EDh  not defined */
                            /* opcode C4h E3h 45h EEh  not defined */
                            /* opcode C4h E3h 45h EFh  not defined */
                            /* opcode C4h E3h 45h F0h  not defined */
                            /* opcode C4h E3h 45h F1h  not defined */
                            /* opcode C4h E3h 45h F2h  not defined */
                            /* opcode C4h E3h 45h F3h  not defined */
                            /* opcode C4h E3h 45h F4h  not defined */
                            /* opcode C4h E3h 45h F5h  not defined */
                            /* opcode C4h E3h 45h F6h  not defined */
                            /* opcode C4h E3h 45h F7h  not defined */
                            /* opcode C4h E3h 45h F8h  not defined */
                            /* opcode C4h E3h 45h F9h  not defined */
                            /* opcode C4h E3h 45h FAh  not defined */
                            /* opcode C4h E3h 45h FBh  not defined */
                            /* opcode C4h E3h 45h FCh  not defined */
                            /* opcode C4h E3h 45h FDh  not defined */
                            /* opcode C4h E3h 45h FEh  not defined */
                            /* opcode C4h E3h 45h FFh  not defined */
                            default:
                                goto _x86decode_illegal_opcode;
                        };
/* End of opcodes starting with C4h E3h 45h */
                        break;
                    /* opcode C4h E3h 46h  not defined */
                    /* opcode C4h E3h 47h  not defined */
                    /* opcode C4h E3h 48h  not defined */
                    /* opcode C4h E3h 4Ah  not defined */
                    /* opcode C4h E3h 4Bh  not defined */
                    /* opcode C4h E3h 4Ch  not defined */
                    /* opcode C4h E3h 4Eh  not defined */
                    /* opcode C4h E3h 4Fh  not defined */
                    /* opcode C4h E3h 50h  not defined */
                    /* opcode C4h E3h 52h  not defined */
                    /* opcode C4h E3h 53h  not defined */
                    /* opcode C4h E3h 54h  not defined */
                    /* opcode C4h E3h 56h  not defined */
                    /* opcode C4h E3h 57h  not defined */
                    /* opcode C4h E3h 58h  not defined */
                    /* opcode C4h E3h 5Ah  not defined */
                    /* opcode C4h E3h 5Bh  not defined */
                    /* opcode C4h E3h 5Ch  not defined */
                    /* opcode C4h E3h 5Eh  not defined */
                    /* opcode C4h E3h 5Fh  not defined */
                    /* opcode C4h E3h 60h  not defined */
                    /* opcode C4h E3h 62h  not defined */
                    /* opcode C4h E3h 63h  not defined */
                    /* opcode C4h E3h 64h  not defined */
                    /* opcode C4h E3h 66h  not defined */
                    /* opcode C4h E3h 67h  not defined */
                    /* opcode C4h E3h 68h  not defined */
                    /* opcode C4h E3h 6Ah  not defined */
                    /* opcode C4h E3h 6Bh  not defined */
                    /* opcode C4h E3h 6Ch  not defined */
                    /* opcode C4h E3h 6Eh  not defined */
                    /* opcode C4h E3h 6Fh  not defined */
                    /* opcode C4h E3h 70h  not defined */
                    /* opcode C4h E3h 72h  not defined */
                    /* opcode C4h E3h 73h  not defined */
                    /* opcode C4h E3h 74h  not defined */
                    /* opcode C4h E3h 76h  not defined */
                    /* opcode C4h E3h 77h  not defined */
                    /* opcode C4h E3h 78h  not defined */
                    /* opcode C4h E3h 7Ah  not defined */
                    /* opcode C4h E3h 7Bh  not defined */
                    /* opcode C4h E3h 7Ch  not defined */
                    case 0x7D: /* C4h E3h 7Dh        spec:  */
                        vex.V = ((~op) >> 3) & 7;
/* Opcodes starting with C4h E3h 7Dh */
                        op=IPFB();
                        _x86decode_begin_code32_addr32_opcode_parse_C4E37D:
                        switch (op) {
                            /* opcode C4h E3h 7Dh 00h  not defined */
                            /* opcode C4h E3h 7Dh 01h  not defined */
                            /* opcode C4h E3h 7Dh 02h  not defined */
                            /* opcode C4h E3h 7Dh 03h  not defined */
                            case 0x04: /* C4h E3h 7Dh 04h VPERMILPS avx(reg),avx(vsidx),i      spec: vex vsize(256) vlead(0x0F,0x3A) vprefix(0x66) 0x04 mod/reg/rm ib */
                                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                                imm=IPFB();
                                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VPERMILPS YMM%u,YMM%u,0x%02lX",mrm.reg(),vex.V,(unsigned long)((uint32_t)imm));
                                break;
                            case 0x05: /* C4h E3h 7Dh 05h VPERMILPD avx(reg),avx(vsidx),i      spec: vex vsize(256) vlead(0x0F,0x3A) vprefix(0x66) 0x05 mod/reg/rm ib */
                                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                                imm=IPFB();
                                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VPERMILPD YMM%u,YMM%u,0x%02lX",mrm.reg(),vex.V,(unsigned long)((uint32_t)imm));
                                break;
                            case 0x06: /* C4h E3h 7Dh 06h VPERM2F128 avx(reg),avx(vsidx),avx(r/m),i      spec: vex vsize(256) vlead(0x0F,0x3A) vprefix(0x66) 0x06 mod/reg/rm ib */
                                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                                imm=IPFB();
                                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VPERM2F128 YMM%u,YMM%u,%s,0x%02lX",mrm.reg(),vex.V,IPDecPrint32(mrm,sib,disp,32,RC_AVXREG,""),(unsigned long)((uint32_t)imm));
                                break;
                            /* opcode C4h E3h 7Dh 07h  not defined */
                            /* opcode C4h E3h 7Dh 08h  not defined */
                            /* opcode C4h E3h 7Dh 09h  not defined */
                            /* opcode C4h E3h 7Dh 0Ah  not defined */
                            /* opcode C4h E3h 7Dh 0Bh  not defined */
                            /* opcode C4h E3h 7Dh 0Ch  not defined */
                            /* opcode C4h E3h 7Dh 0Dh  not defined */
                            /* opcode C4h E3h 7Dh 0Eh  not defined */
                            /* opcode C4h E3h 7Dh 0Fh  not defined */
                            /* opcode C4h E3h 7Dh 10h  not defined */
                            /* opcode C4h E3h 7Dh 11h  not defined */
                            /* opcode C4h E3h 7Dh 12h  not defined */
                            /* opcode C4h E3h 7Dh 13h  not defined */
                            /* opcode C4h E3h 7Dh 14h  not defined */
                            /* opcode C4h E3h 7Dh 15h  not defined */
                            /* opcode C4h E3h 7Dh 16h  not defined */
                            /* opcode C4h E3h 7Dh 17h  not defined */
                            case 0x18: /* C4h E3h 7Dh 18h VINSERTF128 avx(reg),avx(vsidx),sse(r/m),i      spec: vex vsize(256) vlead(0x0F,0x3A) vprefix(0x66) 0x18 mod/reg/rm ib */
                                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                                imm=IPFB();
                                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VINSERTF128 YMM%u,YMM%u,%s,0x%02lX",mrm.reg(),vex.V,IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""),(unsigned long)((uint32_t)imm));
                                break;
                            case 0x19: /* C4h E3h 7Dh 19h VEXTRACTF128 sse(r/m),avx(reg),i      spec: vex vsize(256) vlead(0x0F,0x3A) vprefix(0x66) 0x19 mod/reg/rm ib vsidx(0) */
                                IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                                imm=IPFB();
                                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VEXTRACTF128 %s,YMM%u,0x%02lX",IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""),mrm.reg(),(unsigned long)((uint32_t)imm));
                                break;
                            /* opcode C4h E3h 7Dh 1Ah  not defined */
                            /* opcode C4h E3h 7Dh 1Bh  not defined */
                            /* opcode C4h E3h 7Dh 1Ch  not defined */
                            /* opcode C4h E3h 7Dh 1Dh  not defined */
                            /* opcode C4h E3h 7Dh 1Eh  not defined */
                            /* opcode C4h E3h 7Dh 1Fh  not defined */
                            /* opcode C4h E3h 7Dh 20h  not defined */
                            /* opcode C4h E3h 7Dh 21h  not defined */
                            /* opcode C4h E3h 7Dh 22h  not defined */
                            /* opcode C4h E3h 7Dh 23h  not defined */
                            /* opcode C4h E3h 7Dh 24h  not defined */
                            /* opcode C4h E3h 7Dh 25h  not defined */
                            /* opcode C4h E3h 7Dh 26h  not defined */
                            /* opcode C4h E3h 7Dh 27h  not defined */
                            /* opcode C4h E3h 7Dh 28h  not defined */
                            /* opcode C4h E3h 7Dh 29h  not defined */
                            /* opcode C4h E3h 7Dh 2Ah  not defined */
                            /* opcode C4h E3h 7Dh 2Bh  not defined */
                            /* opcode C4h E3h 7Dh 2Ch  not defined */
                            /* opcode C4h E3h 7Dh 2Dh  not defined */
                            /* opcode C4h E3h 7Dh 2Eh  not defined */
                            /* opcode C4h E3h 7Dh 2Fh  not defined */
                            /* opcode C4h E3h 7Dh 30h  not defined */
                            /* opcode C4h E3h 7Dh 31h  not defined */
                            /* opcode C4h E3h 7Dh 32h  not defined */
                            /* opcode C4h E3h 7Dh 33h  not defined */
                            /* opcode C4h E3h 7Dh 34h  not defined */
                            /* opcode C4h E3h 7Dh 35h  not defined */
                            /* opcode C4h E3h 7Dh 36h  not defined */
                            /* opcode C4h E3h 7Dh 37h  not defined */
                            /* opcode C4h E3h 7Dh 38h  not defined */
                            /* opcode C4h E3h 7Dh 39h  not defined */
                            /* opcode C4h E3h 7Dh 3Ah  not defined */
                            /* opcode C4h E3h 7Dh 3Bh  not defined */
                            /* opcode C4h E3h 7Dh 3Ch  not defined */
                            /* opcode C4h E3h 7Dh 3Dh  not defined */
                            /* opcode C4h E3h 7Dh 3Eh  not defined */
                            /* opcode C4h E3h 7Dh 3Fh  not defined */
                            /* opcode C4h E3h 7Dh 40h  not defined */
                            /* opcode C4h E3h 7Dh 41h  not defined */
                            /* opcode C4h E3h 7Dh 42h  not defined */
                            /* opcode C4h E3h 7Dh 43h  not defined */
                            /* opcode C4h E3h 7Dh 44h  not defined */
                            /* opcode C4h E3h 7Dh 45h  not defined */
                            /* opcode C4h E3h 7Dh 46h  not defined */
                            /* opcode C4h E3h 7Dh 47h  not defined */
                            /* opcode C4h E3h 7Dh 48h  not defined */
                            /* opcode C4h E3h 7Dh 49h  not defined */
                            /* opcode C4h E3h 7Dh 4Ah  not defined */
                            /* opcode C4h E3h 7Dh 4Bh  not defined */
                            /* opcode C4h E3h 7Dh 4Ch  not defined */
                            /* opcode C4h E3h 7Dh 4Dh  not defined */
                            /* opcode C4h E3h 7Dh 4Eh  not defined */
                            /* opcode C4h E3h 7Dh 4Fh  not defined */
                            /* opcode C4h E3h 7Dh 50h  not defined */
                            /* opcode C4h E3h 7Dh 51h  not defined */
                            /* opcode C4h E3h 7Dh 52h  not defined */
                            /* opcode C4h E3h 7Dh 53h  not defined */
                            /* opcode C4h E3h 7Dh 54h  not defined */
                            /* opcode C4h E3h 7Dh 55h  not defined */
                            /* opcode C4h E3h 7Dh 56h  not defined */
                            /* opcode C4h E3h 7Dh 57h  not defined */
                            /* opcode C4h E3h 7Dh 58h  not defined */
                            /* opcode C4h E3h 7Dh 59h  not defined */
                            /* opcode C4h E3h 7Dh 5Ah  not defined */
                            /* opcode C4h E3h 7Dh 5Bh  not defined */
                            /* opcode C4h E3h 7Dh 5Ch  not defined */
                            /* opcode C4h E3h 7Dh 5Dh  not defined */
                            /* opcode C4h E3h 7Dh 5Eh  not defined */
                            /* opcode C4h E3h 7Dh 5Fh  not defined */
                            /* opcode C4h E3h 7Dh 60h  not defined */
                            /* opcode C4h E3h 7Dh 61h  not defined */
                            /* opcode C4h E3h 7Dh 62h  not defined */
                            /* opcode C4h E3h 7Dh 63h  not defined */
                            /* opcode C4h E3h 7Dh 64h  not defined */
                            /* opcode C4h E3h 7Dh 65h  not defined */
                            /* opcode C4h E3h 7Dh 66h  not defined */
                            /* opcode C4h E3h 7Dh 67h  not defined */
                            /* opcode C4h E3h 7Dh 68h  not defined */
                            /* opcode C4h E3h 7Dh 69h  not defined */
                            /* opcode C4h E3h 7Dh 6Ah  not defined */
                            /* opcode C4h E3h 7Dh 6Bh  not defined */
                            /* opcode C4h E3h 7Dh 6Ch  not defined */
                            /* opcode C4h E3h 7Dh 6Dh  not defined */
                            /* opcode C4h E3h 7Dh 6Eh  not defined */
                            /* opcode C4h E3h 7Dh 6Fh  not defined */
                            /* opcode C4h E3h 7Dh 70h  not defined */
                            /* opcode C4h E3h 7Dh 71h  not defined */
                            /* opcode C4h E3h 7Dh 72h  not defined */
                            /* opcode C4h E3h 7Dh 73h  not defined */
                            /* opcode C4h E3h 7Dh 74h  not defined */
                            /* opcode C4h E3h 7Dh 75h  not defined */
                            /* opcode C4h E3h 7Dh 76h  not defined */
                            /* opcode C4h E3h 7Dh 77h  not defined */
                            /* opcode C4h E3h 7Dh 78h  not defined */
                            /* opcode C4h E3h 7Dh 79h  not defined */
                            /* opcode C4h E3h 7Dh 7Ah  not defined */
                            /* opcode C4h E3h 7Dh 7Bh  not defined */
                            /* opcode C4h E3h 7Dh 7Ch  not defined */
                            /* opcode C4h E3h 7Dh 7Dh  not defined */
                            /* opcode C4h E3h 7Dh 7Eh  not defined */
                            /* opcode C4h E3h 7Dh 7Fh  not defined */
                            /* opcode C4h E3h 7Dh 80h  not defined */
                            /* opcode C4h E3h 7Dh 81h  not defined */
                            /* opcode C4h E3h 7Dh 82h  not defined */
                            /* opcode C4h E3h 7Dh 83h  not defined */
                            /* opcode C4h E3h 7Dh 84h  not defined */
                            /* opcode C4h E3h 7Dh 85h  not defined */
                            /* opcode C4h E3h 7Dh 86h  not defined */
                            /* opcode C4h E3h 7Dh 87h  not defined */
                            /* opcode C4h E3h 7Dh 88h  not defined */
                            /* opcode C4h E3h 7Dh 89h  not defined */
                            /* opcode C4h E3h 7Dh 8Ah  not defined */
                            /* opcode C4h E3h 7Dh 8Bh  not defined */
                            /* opcode C4h E3h 7Dh 8Ch  not defined */
                            /* opcode C4h E3h 7Dh 8Dh  not defined */
                            /* opcode C4h E3h 7Dh 8Eh  not defined */
                            /* opcode C4h E3h 7Dh 8Fh  not defined */
                            /* opcode C4h E3h 7Dh 90h  not defined */
                            /* opcode C4h E3h 7Dh 91h  not defined */
                            /* opcode C4h E3h 7Dh 92h  not defined */
                            /* opcode C4h E3h 7Dh 93h  not defined */
                            /* opcode C4h E3h 7Dh 94h  not defined */
                            /* opcode C4h E3h 7Dh 95h  not defined */
                            /* opcode C4h E3h 7Dh 96h  not defined */
                            /* opcode C4h E3h 7Dh 97h  not defined */
                            /* opcode C4h E3h 7Dh 98h  not defined */
                            /* opcode C4h E3h 7Dh 99h  not defined */
                            /* opcode C4h E3h 7Dh 9Ah  not defined */
                            /* opcode C4h E3h 7Dh 9Bh  not defined */
                            /* opcode C4h E3h 7Dh 9Ch  not defined */
                            /* opcode C4h E3h 7Dh 9Dh  not defined */
                            /* opcode C4h E3h 7Dh 9Eh  not defined */
                            /* opcode C4h E3h 7Dh 9Fh  not defined */
                            /* opcode C4h E3h 7Dh A0h  not defined */
                            /* opcode C4h E3h 7Dh A1h  not defined */
                            /* opcode C4h E3h 7Dh A2h  not defined */
                            /* opcode C4h E3h 7Dh A3h  not defined */
                            /* opcode C4h E3h 7Dh A4h  not defined */
                            /* opcode C4h E3h 7Dh A5h  not defined */
                            /* opcode C4h E3h 7Dh A6h  not defined */
                            /* opcode C4h E3h 7Dh A7h  not defined */
                            /* opcode C4h E3h 7Dh A8h  not defined */
                            /* opcode C4h E3h 7Dh A9h  not defined */
                            /* opcode C4h E3h 7Dh AAh  not defined */
                            /* opcode C4h E3h 7Dh ABh  not defined */
                            /* opcode C4h E3h 7Dh ACh  not defined */
                            /* opcode C4h E3h 7Dh ADh  not defined */
                            /* opcode C4h E3h 7Dh AEh  not defined */
                            /* opcode C4h E3h 7Dh AFh  not defined */
                            /* opcode C4h E3h 7Dh B0h  not defined */
                            /* opcode C4h E3h 7Dh B1h  not defined */
                            /* opcode C4h E3h 7Dh B2h  not defined */
                            /* opcode C4h E3h 7Dh B3h  not defined */
                            /* opcode C4h E3h 7Dh B4h  not defined */
                            /* opcode C4h E3h 7Dh B5h  not defined */
                            /* opcode C4h E3h 7Dh B6h  not defined */
                            /* opcode C4h E3h 7Dh B7h  not defined */
                            /* opcode C4h E3h 7Dh B8h  not defined */
                            /* opcode C4h E3h 7Dh B9h  not defined */
                            /* opcode C4h E3h 7Dh BAh  not defined */
                            /* opcode C4h E3h 7Dh BBh  not defined */
                            /* opcode C4h E3h 7Dh BCh  not defined */
                            /* opcode C4h E3h 7Dh BDh  not defined */
                            /* opcode C4h E3h 7Dh BEh  not defined */
                            /* opcode C4h E3h 7Dh BFh  not defined */
                            /* opcode C4h E3h 7Dh C0h  not defined */
                            /* opcode C4h E3h 7Dh C1h  not defined */
                            /* opcode C4h E3h 7Dh C2h  not defined */
                            /* opcode C4h E3h 7Dh C3h  not defined */
                            /* opcode C4h E3h 7Dh C4h  not defined */
                            /* opcode C4h E3h 7Dh C5h  not defined */
                            /* opcode C4h E3h 7Dh C6h  not defined */
                            /* opcode C4h E3h 7Dh C7h  not defined */
                            /* opcode C4h E3h 7Dh C8h  not defined */
                            /* opcode C4h E3h 7Dh C9h  not defined */
                            /* opcode C4h E3h 7Dh CAh  not defined */
                            /* opcode C4h E3h 7Dh CBh  not defined */
                            /* opcode C4h E3h 7Dh CCh  not defined */
                            /* opcode C4h E3h 7Dh CDh  not defined */
                            /* opcode C4h E3h 7Dh CEh  not defined */
                            /* opcode C4h E3h 7Dh CFh  not defined */
                            /* opcode C4h E3h 7Dh D0h  not defined */
                            /* opcode C4h E3h 7Dh D1h  not defined */
                            /* opcode C4h E3h 7Dh D2h  not defined */
                            /* opcode C4h E3h 7Dh D3h  not defined */
                            /* opcode C4h E3h 7Dh D4h  not defined */
                            /* opcode C4h E3h 7Dh D5h  not defined */
                            /* opcode C4h E3h 7Dh D6h  not defined */
                            /* opcode C4h E3h 7Dh D7h  not defined */
                            /* opcode C4h E3h 7Dh D8h  not defined */
                            /* opcode C4h E3h 7Dh D9h  not defined */
                            /* opcode C4h E3h 7Dh DAh  not defined */
                            /* opcode C4h E3h 7Dh DBh  not defined */
                            /* opcode C4h E3h 7Dh DCh  not defined */
                            /* opcode C4h E3h 7Dh DDh  not defined */
                            /* opcode C4h E3h 7Dh DEh  not defined */
                            /* opcode C4h E3h 7Dh DFh  not defined */
                            /* opcode C4h E3h 7Dh E0h  not defined */
                            /* opcode C4h E3h 7Dh E1h  not defined */
                            /* opcode C4h E3h 7Dh E2h  not defined */
                            /* opcode C4h E3h 7Dh E3h  not defined */
                            /* opcode C4h E3h 7Dh E4h  not defined */
                            /* opcode C4h E3h 7Dh E5h  not defined */
                            /* opcode C4h E3h 7Dh E6h  not defined */
                            /* opcode C4h E3h 7Dh E7h  not defined */
                            /* opcode C4h E3h 7Dh E8h  not defined */
                            /* opcode C4h E3h 7Dh E9h  not defined */
                            /* opcode C4h E3h 7Dh EAh  not defined */
                            /* opcode C4h E3h 7Dh EBh  not defined */
                            /* opcode C4h E3h 7Dh ECh  not defined */
                            /* opcode C4h E3h 7Dh EDh  not defined */
                            /* opcode C4h E3h 7Dh EEh  not defined */
                            /* opcode C4h E3h 7Dh EFh  not defined */
                            /* opcode C4h E3h 7Dh F0h  not defined */
                            /* opcode C4h E3h 7Dh F1h  not defined */
                            /* opcode C4h E3h 7Dh F2h  not defined */
                            /* opcode C4h E3h 7Dh F3h  not defined */
                            /* opcode C4h E3h 7Dh F4h  not defined */
                            /* opcode C4h E3h 7Dh F5h  not defined */
                            /* opcode C4h E3h 7Dh F6h  not defined */
                            /* opcode C4h E3h 7Dh F7h  not defined */
                            /* opcode C4h E3h 7Dh F8h  not defined */
                            /* opcode C4h E3h 7Dh F9h  not defined */
                            /* opcode C4h E3h 7Dh FAh  not defined */
                            /* opcode C4h E3h 7Dh FBh  not defined */
                            /* opcode C4h E3h 7Dh FCh  not defined */
                            /* opcode C4h E3h 7Dh FDh  not defined */
                            /* opcode C4h E3h 7Dh FEh  not defined */
                            /* opcode C4h E3h 7Dh FFh  not defined */
                            default:
                                goto _x86decode_illegal_opcode;
                        };
/* End of opcodes starting with C4h E3h 7Dh */
                        break;
                    /* opcode C4h E3h 7Eh  not defined */
                    /* opcode C4h E3h 7Fh  not defined */
                    /* opcode C4h E3h 80h  not defined */
                    /* opcode C4h E3h 81h  not defined */
                    /* opcode C4h E3h 82h  not defined */
                    /* opcode C4h E3h 83h  not defined */
                    /* opcode C4h E3h 84h  not defined */
                    /* opcode C4h E3h 85h  not defined */
                    /* opcode C4h E3h 86h  not defined */
                    /* opcode C4h E3h 87h  not defined */
                    /* opcode C4h E3h 88h  not defined */
                    /* opcode C4h E3h 89h  not defined */
                    /* opcode C4h E3h 8Ah  not defined */
                    /* opcode C4h E3h 8Bh  not defined */
                    /* opcode C4h E3h 8Ch  not defined */
                    /* opcode C4h E3h 8Dh  not defined */
                    /* opcode C4h E3h 8Eh  not defined */
                    /* opcode C4h E3h 8Fh  not defined */
                    /* opcode C4h E3h 90h  not defined */
                    /* opcode C4h E3h 91h  not defined */
                    /* opcode C4h E3h 92h  not defined */
                    /* opcode C4h E3h 93h  not defined */
                    /* opcode C4h E3h 94h  not defined */
                    /* opcode C4h E3h 95h  not defined */
                    /* opcode C4h E3h 96h  not defined */
                    /* opcode C4h E3h 97h  not defined */
                    /* opcode C4h E3h 98h  not defined */
                    /* opcode C4h E3h 99h  not defined */
                    /* opcode C4h E3h 9Ah  not defined */
                    /* opcode C4h E3h 9Bh  not defined */
                    /* opcode C4h E3h 9Ch  not defined */
                    /* opcode C4h E3h 9Dh  not defined */
                    /* opcode C4h E3h 9Eh  not defined */
                    /* opcode C4h E3h 9Fh  not defined */
                    /* opcode C4h E3h A0h  not defined */
                    /* opcode C4h E3h A1h  not defined */
                    /* opcode C4h E3h A2h  not defined */
                    /* opcode C4h E3h A3h  not defined */
                    /* opcode C4h E3h A4h  not defined */
                    /* opcode C4h E3h A5h  not defined */
                    /* opcode C4h E3h A6h  not defined */
                    /* opcode C4h E3h A7h  not defined */
                    /* opcode C4h E3h A8h  not defined */
                    /* opcode C4h E3h A9h  not defined */
                    /* opcode C4h E3h AAh  not defined */
                    /* opcode C4h E3h ABh  not defined */
                    /* opcode C4h E3h ACh  not defined */
                    /* opcode C4h E3h ADh  not defined */
                    /* opcode C4h E3h AEh  not defined */
                    /* opcode C4h E3h AFh  not defined */
                    /* opcode C4h E3h B0h  not defined */
                    /* opcode C4h E3h B1h  not defined */
                    /* opcode C4h E3h B2h  not defined */
                    /* opcode C4h E3h B3h  not defined */
                    /* opcode C4h E3h B4h  not defined */
                    /* opcode C4h E3h B5h  not defined */
                    /* opcode C4h E3h B6h  not defined */
                    /* opcode C4h E3h B7h  not defined */
                    /* opcode C4h E3h B8h  not defined */
                    /* opcode C4h E3h B9h  not defined */
                    /* opcode C4h E3h BAh  not defined */
                    /* opcode C4h E3h BBh  not defined */
                    /* opcode C4h E3h BCh  not defined */
                    /* opcode C4h E3h BDh  not defined */
                    /* opcode C4h E3h BEh  not defined */
                    /* opcode C4h E3h BFh  not defined */
                    /* opcode C4h E3h C0h  not defined */
                    /* opcode C4h E3h C1h  not defined */
                    /* opcode C4h E3h C2h  not defined */
                    /* opcode C4h E3h C3h  not defined */
                    /* opcode C4h E3h C4h  not defined */
                    /* opcode C4h E3h C5h  not defined */
                    /* opcode C4h E3h C6h  not defined */
                    /* opcode C4h E3h C7h  not defined */
                    /* opcode C4h E3h C8h  not defined */
                    /* opcode C4h E3h C9h  not defined */
                    /* opcode C4h E3h CAh  not defined */
                    /* opcode C4h E3h CBh  not defined */
                    /* opcode C4h E3h CCh  not defined */
                    /* opcode C4h E3h CDh  not defined */
                    /* opcode C4h E3h CEh  not defined */
                    /* opcode C4h E3h CFh  not defined */
                    /* opcode C4h E3h D0h  not defined */
                    /* opcode C4h E3h D1h  not defined */
                    /* opcode C4h E3h D2h  not defined */
                    /* opcode C4h E3h D3h  not defined */
                    /* opcode C4h E3h D4h  not defined */
                    /* opcode C4h E3h D5h  not defined */
                    /* opcode C4h E3h D6h  not defined */
                    /* opcode C4h E3h D7h  not defined */
                    /* opcode C4h E3h D8h  not defined */
                    /* opcode C4h E3h D9h  not defined */
                    /* opcode C4h E3h DAh  not defined */
                    /* opcode C4h E3h DBh  not defined */
                    /* opcode C4h E3h DCh  not defined */
                    /* opcode C4h E3h DDh  not defined */
                    /* opcode C4h E3h DEh  not defined */
                    /* opcode C4h E3h DFh  not defined */
                    /* opcode C4h E3h E0h  not defined */
                    /* opcode C4h E3h E1h  not defined */
                    /* opcode C4h E3h E2h  not defined */
                    /* opcode C4h E3h E3h  not defined */
                    /* opcode C4h E3h E4h  not defined */
                    /* opcode C4h E3h E5h  not defined */
                    /* opcode C4h E3h E6h  not defined */
                    /* opcode C4h E3h E7h  not defined */
                    /* opcode C4h E3h E8h  not defined */
                    /* opcode C4h E3h E9h  not defined */
                    /* opcode C4h E3h EAh  not defined */
                    /* opcode C4h E3h EBh  not defined */
                    /* opcode C4h E3h ECh  not defined */
                    /* opcode C4h E3h EDh  not defined */
                    /* opcode C4h E3h EEh  not defined */
                    /* opcode C4h E3h EFh  not defined */
                    /* opcode C4h E3h F0h  not defined */
                    /* opcode C4h E3h F1h  not defined */
                    /* opcode C4h E3h F2h  not defined */
                    /* opcode C4h E3h F3h  not defined */
                    /* opcode C4h E3h F4h  not defined */
                    /* opcode C4h E3h F5h  not defined */
                    /* opcode C4h E3h F6h  not defined */
                    /* opcode C4h E3h F7h  not defined */
                    /* opcode C4h E3h F8h  not defined */
                    /* opcode C4h E3h F9h  not defined */
                    /* opcode C4h E3h FAh  not defined */
                    /* opcode C4h E3h FBh  not defined */
                    /* opcode C4h E3h FCh  not defined */
                    /* opcode C4h E3h FDh  not defined */
                    /* opcode C4h E3h FEh  not defined */
                    /* opcode C4h E3h FFh  not defined */
                    default:
                        goto _x86decode_illegal_opcode;
                };
/* End of opcodes starting with C4h E3h */
                break;
            /* opcode C4h E4h  not defined */
            /* opcode C4h E5h  not defined */
            /* opcode C4h E6h  not defined */
            /* opcode C4h E7h  not defined */
            /* opcode C4h E8h  not defined */
            /* opcode C4h E9h  not defined */
            /* opcode C4h EAh  not defined */
            /* opcode C4h EBh  not defined */
            /* opcode C4h ECh  not defined */
            /* opcode C4h EDh  not defined */
            /* opcode C4h EEh  not defined */
            /* opcode C4h EFh  not defined */
            /* opcode C4h F0h  not defined */
            /* opcode C4h F1h  not defined */
            /* opcode C4h F2h  not defined */
            /* opcode C4h F3h  not defined */
            /* opcode C4h F4h  not defined */
            /* opcode C4h F5h  not defined */
            /* opcode C4h F6h  not defined */
            /* opcode C4h F7h  not defined */
            /* opcode C4h F8h  not defined */
            /* opcode C4h F9h  not defined */
            /* opcode C4h FAh  not defined */
            /* opcode C4h FBh  not defined */
            /* opcode C4h FCh  not defined */
            /* opcode C4h FDh  not defined */
            /* opcode C4h FEh  not defined */
            /* opcode C4h FFh  not defined */
            default:
                goto _x86decode_illegal_opcode;
        };
/* End of opcodes starting with C4h */
        break;
    case 0xC5: /* C5h        spec:  */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        _x86decode_begin_code32_addr32_opcode_parse_C5:
/* Opcodes starting with C5h */
        switch (mrm.byte) {
            case 0x00: /* C5h 00h LDSd w(reg),w(r/m) mod=0 reg=0 rm=0      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x01: /* C5h 01h LDSd w(reg),w(r/m) mod=0 reg=0 rm=1      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x02: /* C5h 02h LDSd w(reg),w(r/m) mod=0 reg=0 rm=2      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x03: /* C5h 03h LDSd w(reg),w(r/m) mod=0 reg=0 rm=3      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x04: /* C5h 04h LDSd w(reg),w(r/m) mod=0 reg=0 rm=4      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x05: /* C5h 05h LDSd w(reg),w(r/m) mod=0 reg=0 rm=5      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x06: /* C5h 06h LDSd w(reg),w(r/m) mod=0 reg=0 rm=6      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x07: /* C5h 07h LDSd w(reg),w(r/m) mod=0 reg=0 rm=7      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x08: /* C5h 08h LDSd w(reg),w(r/m) mod=0 reg=1 rm=0      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x09: /* C5h 09h LDSd w(reg),w(r/m) mod=0 reg=1 rm=1      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x0A: /* C5h 0Ah LDSd w(reg),w(r/m) mod=0 reg=1 rm=2      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x0B: /* C5h 0Bh LDSd w(reg),w(r/m) mod=0 reg=1 rm=3      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x0C: /* C5h 0Ch LDSd w(reg),w(r/m) mod=0 reg=1 rm=4      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x0D: /* C5h 0Dh LDSd w(reg),w(r/m) mod=0 reg=1 rm=5      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x0E: /* C5h 0Eh LDSd w(reg),w(r/m) mod=0 reg=1 rm=6      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x0F: /* C5h 0Fh LDSd w(reg),w(r/m) mod=0 reg=1 rm=7      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x10: /* C5h 10h LDSd w(reg),w(r/m) mod=0 reg=2 rm=0      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x11: /* C5h 11h LDSd w(reg),w(r/m) mod=0 reg=2 rm=1      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x12: /* C5h 12h LDSd w(reg),w(r/m) mod=0 reg=2 rm=2      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x13: /* C5h 13h LDSd w(reg),w(r/m) mod=0 reg=2 rm=3      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x14: /* C5h 14h LDSd w(reg),w(r/m) mod=0 reg=2 rm=4      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x15: /* C5h 15h LDSd w(reg),w(r/m) mod=0 reg=2 rm=5      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x16: /* C5h 16h LDSd w(reg),w(r/m) mod=0 reg=2 rm=6      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x17: /* C5h 17h LDSd w(reg),w(r/m) mod=0 reg=2 rm=7      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x18: /* C5h 18h LDSd w(reg),w(r/m) mod=0 reg=3 rm=0      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x19: /* C5h 19h LDSd w(reg),w(r/m) mod=0 reg=3 rm=1      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x1A: /* C5h 1Ah LDSd w(reg),w(r/m) mod=0 reg=3 rm=2      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x1B: /* C5h 1Bh LDSd w(reg),w(r/m) mod=0 reg=3 rm=3      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x1C: /* C5h 1Ch LDSd w(reg),w(r/m) mod=0 reg=3 rm=4      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x1D: /* C5h 1Dh LDSd w(reg),w(r/m) mod=0 reg=3 rm=5      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x1E: /* C5h 1Eh LDSd w(reg),w(r/m) mod=0 reg=3 rm=6      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x1F: /* C5h 1Fh LDSd w(reg),w(r/m) mod=0 reg=3 rm=7      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x20: /* C5h 20h LDSd w(reg),w(r/m) mod=0 reg=4 rm=0      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x21: /* C5h 21h LDSd w(reg),w(r/m) mod=0 reg=4 rm=1      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x22: /* C5h 22h LDSd w(reg),w(r/m) mod=0 reg=4 rm=2      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x23: /* C5h 23h LDSd w(reg),w(r/m) mod=0 reg=4 rm=3      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x24: /* C5h 24h LDSd w(reg),w(r/m) mod=0 reg=4 rm=4      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x25: /* C5h 25h LDSd w(reg),w(r/m) mod=0 reg=4 rm=5      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x26: /* C5h 26h LDSd w(reg),w(r/m) mod=0 reg=4 rm=6      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x27: /* C5h 27h LDSd w(reg),w(r/m) mod=0 reg=4 rm=7      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x28: /* C5h 28h LDSd w(reg),w(r/m) mod=0 reg=5 rm=0      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x29: /* C5h 29h LDSd w(reg),w(r/m) mod=0 reg=5 rm=1      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x2A: /* C5h 2Ah LDSd w(reg),w(r/m) mod=0 reg=5 rm=2      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x2B: /* C5h 2Bh LDSd w(reg),w(r/m) mod=0 reg=5 rm=3      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x2C: /* C5h 2Ch LDSd w(reg),w(r/m) mod=0 reg=5 rm=4      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x2D: /* C5h 2Dh LDSd w(reg),w(r/m) mod=0 reg=5 rm=5      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x2E: /* C5h 2Eh LDSd w(reg),w(r/m) mod=0 reg=5 rm=6      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x2F: /* C5h 2Fh LDSd w(reg),w(r/m) mod=0 reg=5 rm=7      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x30: /* C5h 30h LDSd w(reg),w(r/m) mod=0 reg=6 rm=0      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x31: /* C5h 31h LDSd w(reg),w(r/m) mod=0 reg=6 rm=1      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x32: /* C5h 32h LDSd w(reg),w(r/m) mod=0 reg=6 rm=2      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x33: /* C5h 33h LDSd w(reg),w(r/m) mod=0 reg=6 rm=3      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x34: /* C5h 34h LDSd w(reg),w(r/m) mod=0 reg=6 rm=4      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x35: /* C5h 35h LDSd w(reg),w(r/m) mod=0 reg=6 rm=5      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x36: /* C5h 36h LDSd w(reg),w(r/m) mod=0 reg=6 rm=6      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x37: /* C5h 37h LDSd w(reg),w(r/m) mod=0 reg=6 rm=7      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x38: /* C5h 38h LDSd w(reg),w(r/m) mod=0 reg=7 rm=0      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x39: /* C5h 39h LDSd w(reg),w(r/m) mod=0 reg=7 rm=1      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x3A: /* C5h 3Ah LDSd w(reg),w(r/m) mod=0 reg=7 rm=2      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x3B: /* C5h 3Bh LDSd w(reg),w(r/m) mod=0 reg=7 rm=3      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x3C: /* C5h 3Ch LDSd w(reg),w(r/m) mod=0 reg=7 rm=4      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x3D: /* C5h 3Dh LDSd w(reg),w(r/m) mod=0 reg=7 rm=5      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x3E: /* C5h 3Eh LDSd w(reg),w(r/m) mod=0 reg=7 rm=6      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x3F: /* C5h 3Fh LDSd w(reg),w(r/m) mod=0 reg=7 rm=7      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x40: /* C5h 40h LDSd w(reg),w(r/m) mod=1 reg=0 rm=0      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x41: /* C5h 41h LDSd w(reg),w(r/m) mod=1 reg=0 rm=1      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x42: /* C5h 42h LDSd w(reg),w(r/m) mod=1 reg=0 rm=2      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x43: /* C5h 43h LDSd w(reg),w(r/m) mod=1 reg=0 rm=3      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x44: /* C5h 44h LDSd w(reg),w(r/m) mod=1 reg=0 rm=4      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x45: /* C5h 45h LDSd w(reg),w(r/m) mod=1 reg=0 rm=5      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x46: /* C5h 46h LDSd w(reg),w(r/m) mod=1 reg=0 rm=6      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x47: /* C5h 47h LDSd w(reg),w(r/m) mod=1 reg=0 rm=7      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x48: /* C5h 48h LDSd w(reg),w(r/m) mod=1 reg=1 rm=0      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x49: /* C5h 49h LDSd w(reg),w(r/m) mod=1 reg=1 rm=1      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x4A: /* C5h 4Ah LDSd w(reg),w(r/m) mod=1 reg=1 rm=2      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x4B: /* C5h 4Bh LDSd w(reg),w(r/m) mod=1 reg=1 rm=3      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x4C: /* C5h 4Ch LDSd w(reg),w(r/m) mod=1 reg=1 rm=4      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x4D: /* C5h 4Dh LDSd w(reg),w(r/m) mod=1 reg=1 rm=5      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x4E: /* C5h 4Eh LDSd w(reg),w(r/m) mod=1 reg=1 rm=6      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x4F: /* C5h 4Fh LDSd w(reg),w(r/m) mod=1 reg=1 rm=7      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x50: /* C5h 50h LDSd w(reg),w(r/m) mod=1 reg=2 rm=0      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x51: /* C5h 51h LDSd w(reg),w(r/m) mod=1 reg=2 rm=1      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x52: /* C5h 52h LDSd w(reg),w(r/m) mod=1 reg=2 rm=2      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x53: /* C5h 53h LDSd w(reg),w(r/m) mod=1 reg=2 rm=3      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x54: /* C5h 54h LDSd w(reg),w(r/m) mod=1 reg=2 rm=4      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x55: /* C5h 55h LDSd w(reg),w(r/m) mod=1 reg=2 rm=5      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x56: /* C5h 56h LDSd w(reg),w(r/m) mod=1 reg=2 rm=6      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x57: /* C5h 57h LDSd w(reg),w(r/m) mod=1 reg=2 rm=7      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x58: /* C5h 58h LDSd w(reg),w(r/m) mod=1 reg=3 rm=0      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x59: /* C5h 59h LDSd w(reg),w(r/m) mod=1 reg=3 rm=1      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x5A: /* C5h 5Ah LDSd w(reg),w(r/m) mod=1 reg=3 rm=2      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x5B: /* C5h 5Bh LDSd w(reg),w(r/m) mod=1 reg=3 rm=3      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x5C: /* C5h 5Ch LDSd w(reg),w(r/m) mod=1 reg=3 rm=4      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x5D: /* C5h 5Dh LDSd w(reg),w(r/m) mod=1 reg=3 rm=5      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x5E: /* C5h 5Eh LDSd w(reg),w(r/m) mod=1 reg=3 rm=6      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x5F: /* C5h 5Fh LDSd w(reg),w(r/m) mod=1 reg=3 rm=7      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x60: /* C5h 60h LDSd w(reg),w(r/m) mod=1 reg=4 rm=0      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x61: /* C5h 61h LDSd w(reg),w(r/m) mod=1 reg=4 rm=1      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x62: /* C5h 62h LDSd w(reg),w(r/m) mod=1 reg=4 rm=2      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x63: /* C5h 63h LDSd w(reg),w(r/m) mod=1 reg=4 rm=3      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x64: /* C5h 64h LDSd w(reg),w(r/m) mod=1 reg=4 rm=4      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x65: /* C5h 65h LDSd w(reg),w(r/m) mod=1 reg=4 rm=5      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x66: /* C5h 66h LDSd w(reg),w(r/m) mod=1 reg=4 rm=6      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x67: /* C5h 67h LDSd w(reg),w(r/m) mod=1 reg=4 rm=7      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x68: /* C5h 68h LDSd w(reg),w(r/m) mod=1 reg=5 rm=0      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x69: /* C5h 69h LDSd w(reg),w(r/m) mod=1 reg=5 rm=1      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x6A: /* C5h 6Ah LDSd w(reg),w(r/m) mod=1 reg=5 rm=2      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x6B: /* C5h 6Bh LDSd w(reg),w(r/m) mod=1 reg=5 rm=3      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x6C: /* C5h 6Ch LDSd w(reg),w(r/m) mod=1 reg=5 rm=4      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x6D: /* C5h 6Dh LDSd w(reg),w(r/m) mod=1 reg=5 rm=5      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x6E: /* C5h 6Eh LDSd w(reg),w(r/m) mod=1 reg=5 rm=6      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x6F: /* C5h 6Fh LDSd w(reg),w(r/m) mod=1 reg=5 rm=7      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x70: /* C5h 70h LDSd w(reg),w(r/m) mod=1 reg=6 rm=0      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x71: /* C5h 71h LDSd w(reg),w(r/m) mod=1 reg=6 rm=1      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x72: /* C5h 72h LDSd w(reg),w(r/m) mod=1 reg=6 rm=2      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x73: /* C5h 73h LDSd w(reg),w(r/m) mod=1 reg=6 rm=3      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x74: /* C5h 74h LDSd w(reg),w(r/m) mod=1 reg=6 rm=4      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x75: /* C5h 75h LDSd w(reg),w(r/m) mod=1 reg=6 rm=5      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x76: /* C5h 76h LDSd w(reg),w(r/m) mod=1 reg=6 rm=6      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x77: /* C5h 77h LDSd w(reg),w(r/m) mod=1 reg=6 rm=7      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x78: /* C5h 78h LDSd w(reg),w(r/m) mod=1 reg=7 rm=0      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x79: /* C5h 79h LDSd w(reg),w(r/m) mod=1 reg=7 rm=1      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x7A: /* C5h 7Ah LDSd w(reg),w(r/m) mod=1 reg=7 rm=2      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x7B: /* C5h 7Bh LDSd w(reg),w(r/m) mod=1 reg=7 rm=3      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x7C: /* C5h 7Ch LDSd w(reg),w(r/m) mod=1 reg=7 rm=4      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x7D: /* C5h 7Dh LDSd w(reg),w(r/m) mod=1 reg=7 rm=5      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x7E: /* C5h 7Eh LDSd w(reg),w(r/m) mod=1 reg=7 rm=6      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x7F: /* C5h 7Fh LDSd w(reg),w(r/m) mod=1 reg=7 rm=7      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x80: /* C5h 80h LDSd w(reg),w(r/m) mod=2 reg=0 rm=0      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x81: /* C5h 81h LDSd w(reg),w(r/m) mod=2 reg=0 rm=1      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x82: /* C5h 82h LDSd w(reg),w(r/m) mod=2 reg=0 rm=2      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x83: /* C5h 83h LDSd w(reg),w(r/m) mod=2 reg=0 rm=3      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x84: /* C5h 84h LDSd w(reg),w(r/m) mod=2 reg=0 rm=4      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x85: /* C5h 85h LDSd w(reg),w(r/m) mod=2 reg=0 rm=5      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x86: /* C5h 86h LDSd w(reg),w(r/m) mod=2 reg=0 rm=6      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x87: /* C5h 87h LDSd w(reg),w(r/m) mod=2 reg=0 rm=7      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x88: /* C5h 88h LDSd w(reg),w(r/m) mod=2 reg=1 rm=0      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x89: /* C5h 89h LDSd w(reg),w(r/m) mod=2 reg=1 rm=1      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x8A: /* C5h 8Ah LDSd w(reg),w(r/m) mod=2 reg=1 rm=2      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x8B: /* C5h 8Bh LDSd w(reg),w(r/m) mod=2 reg=1 rm=3      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x8C: /* C5h 8Ch LDSd w(reg),w(r/m) mod=2 reg=1 rm=4      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x8D: /* C5h 8Dh LDSd w(reg),w(r/m) mod=2 reg=1 rm=5      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x8E: /* C5h 8Eh LDSd w(reg),w(r/m) mod=2 reg=1 rm=6      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x8F: /* C5h 8Fh LDSd w(reg),w(r/m) mod=2 reg=1 rm=7      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x90: /* C5h 90h LDSd w(reg),w(r/m) mod=2 reg=2 rm=0      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x91: /* C5h 91h LDSd w(reg),w(r/m) mod=2 reg=2 rm=1      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x92: /* C5h 92h LDSd w(reg),w(r/m) mod=2 reg=2 rm=2      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x93: /* C5h 93h LDSd w(reg),w(r/m) mod=2 reg=2 rm=3      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x94: /* C5h 94h LDSd w(reg),w(r/m) mod=2 reg=2 rm=4      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x95: /* C5h 95h LDSd w(reg),w(r/m) mod=2 reg=2 rm=5      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x96: /* C5h 96h LDSd w(reg),w(r/m) mod=2 reg=2 rm=6      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x97: /* C5h 97h LDSd w(reg),w(r/m) mod=2 reg=2 rm=7      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x98: /* C5h 98h LDSd w(reg),w(r/m) mod=2 reg=3 rm=0      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x99: /* C5h 99h LDSd w(reg),w(r/m) mod=2 reg=3 rm=1      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x9A: /* C5h 9Ah LDSd w(reg),w(r/m) mod=2 reg=3 rm=2      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x9B: /* C5h 9Bh LDSd w(reg),w(r/m) mod=2 reg=3 rm=3      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x9C: /* C5h 9Ch LDSd w(reg),w(r/m) mod=2 reg=3 rm=4      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x9D: /* C5h 9Dh LDSd w(reg),w(r/m) mod=2 reg=3 rm=5      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x9E: /* C5h 9Eh LDSd w(reg),w(r/m) mod=2 reg=3 rm=6      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0x9F: /* C5h 9Fh LDSd w(reg),w(r/m) mod=2 reg=3 rm=7      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0xA0: /* C5h A0h LDSd w(reg),w(r/m) mod=2 reg=4 rm=0      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0xA1: /* C5h A1h LDSd w(reg),w(r/m) mod=2 reg=4 rm=1      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0xA2: /* C5h A2h LDSd w(reg),w(r/m) mod=2 reg=4 rm=2      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0xA3: /* C5h A3h LDSd w(reg),w(r/m) mod=2 reg=4 rm=3      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0xA4: /* C5h A4h LDSd w(reg),w(r/m) mod=2 reg=4 rm=4      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0xA5: /* C5h A5h LDSd w(reg),w(r/m) mod=2 reg=4 rm=5      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0xA6: /* C5h A6h LDSd w(reg),w(r/m) mod=2 reg=4 rm=6      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0xA7: /* C5h A7h LDSd w(reg),w(r/m) mod=2 reg=4 rm=7      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0xA8: /* C5h A8h LDSd w(reg),w(r/m) mod=2 reg=5 rm=0      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0xA9: /* C5h A9h LDSd w(reg),w(r/m) mod=2 reg=5 rm=1      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0xAA: /* C5h AAh LDSd w(reg),w(r/m) mod=2 reg=5 rm=2      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0xAB: /* C5h ABh LDSd w(reg),w(r/m) mod=2 reg=5 rm=3      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0xAC: /* C5h ACh LDSd w(reg),w(r/m) mod=2 reg=5 rm=4      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0xAD: /* C5h ADh LDSd w(reg),w(r/m) mod=2 reg=5 rm=5      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0xAE: /* C5h AEh LDSd w(reg),w(r/m) mod=2 reg=5 rm=6      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0xAF: /* C5h AFh LDSd w(reg),w(r/m) mod=2 reg=5 rm=7      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0xB0: /* C5h B0h LDSd w(reg),w(r/m) mod=2 reg=6 rm=0      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0xB1: /* C5h B1h LDSd w(reg),w(r/m) mod=2 reg=6 rm=1      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0xB2: /* C5h B2h LDSd w(reg),w(r/m) mod=2 reg=6 rm=2      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0xB3: /* C5h B3h LDSd w(reg),w(r/m) mod=2 reg=6 rm=3      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0xB4: /* C5h B4h LDSd w(reg),w(r/m) mod=2 reg=6 rm=4      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0xB5: /* C5h B5h LDSd w(reg),w(r/m) mod=2 reg=6 rm=5      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0xB6: /* C5h B6h LDSd w(reg),w(r/m) mod=2 reg=6 rm=6      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0xB7: /* C5h B7h LDSd w(reg),w(r/m) mod=2 reg=6 rm=7      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0xB8: /* C5h B8h LDSd w(reg),w(r/m) mod=2 reg=7 rm=0      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0xB9: /* C5h B9h LDSd w(reg),w(r/m) mod=2 reg=7 rm=1      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0xBA: /* C5h BAh LDSd w(reg),w(r/m) mod=2 reg=7 rm=2      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0xBB: /* C5h BBh LDSd w(reg),w(r/m) mod=2 reg=7 rm=3      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0xBC: /* C5h BCh LDSd w(reg),w(r/m) mod=2 reg=7 rm=4      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0xBD: /* C5h BDh LDSd w(reg),w(r/m) mod=2 reg=7 rm=5      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0xBE: /* C5h BEh LDSd w(reg),w(r/m) mod=2 reg=7 rm=6      spec: 0xC5 mod/reg/rm mod!=3 */
            case 0xBF: /* C5h BFh LDSd w(reg),w(r/m) mod=2 reg=7 rm=7      spec: 0xC5 mod/reg/rm mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"LDSd %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 0xC0: /* C5h C0h   mod=3 reg=0 rm=0      spec:  */
            case 0xC8: /* C5h C8h   mod=3 reg=1 rm=0      spec:  */
            case 0xD0: /* C5h D0h   mod=3 reg=2 rm=0      spec:  */
            case 0xD8: /* C5h D8h   mod=3 reg=3 rm=0      spec:  */
            case 0xE0: /* C5h E0h   mod=3 reg=4 rm=0      spec:  */
            case 0xE8: /* C5h E8h   mod=3 reg=5 rm=0      spec:  */
            case 0xF0: /* C5h F0h   mod=3 reg=6 rm=0      spec:  */
                vex.V = ((~mrm.byte) >> 3) & 7;
/* Opcodes starting with C5h C0h */
                op=IPFB();
                _x86decode_begin_code32_addr32_opcode_parse_C5C0:
                switch (op) {
                    /* opcode C5h C0h 00h  not defined */
                    /* opcode C5h C0h 01h  not defined */
                    /* opcode C5h C0h 02h  not defined */
                    /* opcode C5h C0h 03h  not defined */
                    /* opcode C5h C0h 04h  not defined */
                    /* opcode C5h C0h 05h  not defined */
                    /* opcode C5h C0h 06h  not defined */
                    /* opcode C5h C0h 07h  not defined */
                    /* opcode C5h C0h 08h  not defined */
                    /* opcode C5h C0h 09h  not defined */
                    /* opcode C5h C0h 0Ah  not defined */
                    /* opcode C5h C0h 0Bh  not defined */
                    /* opcode C5h C0h 0Ch  not defined */
                    /* opcode C5h C0h 0Dh  not defined */
                    /* opcode C5h C0h 0Eh  not defined */
                    /* opcode C5h C0h 0Fh  not defined */
                    /* opcode C5h C0h 10h  not defined */
                    /* opcode C5h C0h 11h  not defined */
                    /* opcode C5h C0h 12h  not defined */
                    /* opcode C5h C0h 13h  not defined */
                    /* opcode C5h C0h 14h  not defined */
                    /* opcode C5h C0h 15h  not defined */
                    /* opcode C5h C0h 16h  not defined */
                    /* opcode C5h C0h 17h  not defined */
                    /* opcode C5h C0h 18h  not defined */
                    /* opcode C5h C0h 19h  not defined */
                    /* opcode C5h C0h 1Ah  not defined */
                    /* opcode C5h C0h 1Bh  not defined */
                    /* opcode C5h C0h 1Ch  not defined */
                    /* opcode C5h C0h 1Dh  not defined */
                    /* opcode C5h C0h 1Eh  not defined */
                    /* opcode C5h C0h 1Fh  not defined */
                    /* opcode C5h C0h 20h  not defined */
                    /* opcode C5h C0h 21h  not defined */
                    /* opcode C5h C0h 22h  not defined */
                    /* opcode C5h C0h 23h  not defined */
                    /* opcode C5h C0h 24h  not defined */
                    /* opcode C5h C0h 25h  not defined */
                    /* opcode C5h C0h 26h  not defined */
                    /* opcode C5h C0h 27h  not defined */
                    /* opcode C5h C0h 28h  not defined */
                    /* opcode C5h C0h 29h  not defined */
                    /* opcode C5h C0h 2Ah  not defined */
                    /* opcode C5h C0h 2Bh  not defined */
                    /* opcode C5h C0h 2Ch  not defined */
                    /* opcode C5h C0h 2Dh  not defined */
                    /* opcode C5h C0h 2Eh  not defined */
                    /* opcode C5h C0h 2Fh  not defined */
                    /* opcode C5h C0h 30h  not defined */
                    /* opcode C5h C0h 31h  not defined */
                    /* opcode C5h C0h 32h  not defined */
                    /* opcode C5h C0h 33h  not defined */
                    /* opcode C5h C0h 34h  not defined */
                    /* opcode C5h C0h 35h  not defined */
                    /* opcode C5h C0h 36h  not defined */
                    /* opcode C5h C0h 37h  not defined */
                    /* opcode C5h C0h 38h  not defined */
                    /* opcode C5h C0h 39h  not defined */
                    /* opcode C5h C0h 3Ah  not defined */
                    /* opcode C5h C0h 3Bh  not defined */
                    /* opcode C5h C0h 3Ch  not defined */
                    /* opcode C5h C0h 3Dh  not defined */
                    /* opcode C5h C0h 3Eh  not defined */
                    /* opcode C5h C0h 3Fh  not defined */
                    /* opcode C5h C0h 40h  not defined */
                    /* opcode C5h C0h 41h  not defined */
                    /* opcode C5h C0h 42h  not defined */
                    /* opcode C5h C0h 43h  not defined */
                    /* opcode C5h C0h 44h  not defined */
                    /* opcode C5h C0h 45h  not defined */
                    /* opcode C5h C0h 46h  not defined */
                    /* opcode C5h C0h 47h  not defined */
                    /* opcode C5h C0h 48h  not defined */
                    /* opcode C5h C0h 49h  not defined */
                    /* opcode C5h C0h 4Ah  not defined */
                    /* opcode C5h C0h 4Bh  not defined */
                    /* opcode C5h C0h 4Ch  not defined */
                    /* opcode C5h C0h 4Dh  not defined */
                    /* opcode C5h C0h 4Eh  not defined */
                    /* opcode C5h C0h 4Fh  not defined */
                    /* opcode C5h C0h 50h  not defined */
                    /* opcode C5h C0h 51h  not defined */
                    /* opcode C5h C0h 52h  not defined */
                    /* opcode C5h C0h 53h  not defined */
                    /* opcode C5h C0h 54h  not defined */
                    /* opcode C5h C0h 55h  not defined */
                    /* opcode C5h C0h 56h  not defined */
                    /* opcode C5h C0h 57h  not defined */
                    case 0x58: /* C5h C0h 58h VADDPS sse(reg),sse(vsidx),sse(r/m)      spec: vex vsize(128) vlead(0x0F) vprefix(none) 0x58 mod/reg/rm */
                        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VADDPS XMM%u,XMM%u,%s",mrm.reg(),vex.V,IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                        break;
                    /* opcode C5h C0h 59h  not defined */
                    /* opcode C5h C0h 5Ah  not defined */
                    /* opcode C5h C0h 5Bh  not defined */
                    /* opcode C5h C0h 5Ch  not defined */
                    /* opcode C5h C0h 5Dh  not defined */
                    /* opcode C5h C0h 5Eh  not defined */
                    /* opcode C5h C0h 5Fh  not defined */
                    /* opcode C5h C0h 60h  not defined */
                    /* opcode C5h C0h 61h  not defined */
                    /* opcode C5h C0h 62h  not defined */
                    /* opcode C5h C0h 63h  not defined */
                    /* opcode C5h C0h 64h  not defined */
                    /* opcode C5h C0h 65h  not defined */
                    /* opcode C5h C0h 66h  not defined */
                    /* opcode C5h C0h 67h  not defined */
                    /* opcode C5h C0h 68h  not defined */
                    /* opcode C5h C0h 69h  not defined */
                    /* opcode C5h C0h 6Ah  not defined */
                    /* opcode C5h C0h 6Bh  not defined */
                    /* opcode C5h C0h 6Ch  not defined */
                    /* opcode C5h C0h 6Dh  not defined */
                    /* opcode C5h C0h 6Eh  not defined */
                    /* opcode C5h C0h 6Fh  not defined */
                    /* opcode C5h C0h 70h  not defined */
                    /* opcode C5h C0h 71h  not defined */
                    /* opcode C5h C0h 72h  not defined */
                    /* opcode C5h C0h 73h  not defined */
                    /* opcode C5h C0h 74h  not defined */
                    /* opcode C5h C0h 75h  not defined */
                    /* opcode C5h C0h 76h  not defined */
                    /* opcode C5h C0h 77h  not defined */
                    /* opcode C5h C0h 78h  not defined */
                    /* opcode C5h C0h 79h  not defined */
                    /* opcode C5h C0h 7Ah  not defined */
                    /* opcode C5h C0h 7Bh  not defined */
                    /* opcode C5h C0h 7Ch  not defined */
                    /* opcode C5h C0h 7Dh  not defined */
                    /* opcode C5h C0h 7Eh  not defined */
                    /* opcode C5h C0h 7Fh  not defined */
                    /* opcode C5h C0h 80h  not defined */
                    /* opcode C5h C0h 81h  not defined */
                    /* opcode C5h C0h 82h  not defined */
                    /* opcode C5h C0h 83h  not defined */
                    /* opcode C5h C0h 84h  not defined */
                    /* opcode C5h C0h 85h  not defined */
                    /* opcode C5h C0h 86h  not defined */
                    /* opcode C5h C0h 87h  not defined */
                    /* opcode C5h C0h 88h  not defined */
                    /* opcode C5h C0h 89h  not defined */
                    /* opcode C5h C0h 8Ah  not defined */
                    /* opcode C5h C0h 8Bh  not defined */
                    /* opcode C5h C0h 8Ch  not defined */
                    /* opcode C5h C0h 8Dh  not defined */
                    /* opcode C5h C0h 8Eh  not defined */
                    /* opcode C5h C0h 8Fh  not defined */
                    /* opcode C5h C0h 90h  not defined */
                    /* opcode C5h C0h 91h  not defined */
                    /* opcode C5h C0h 92h  not defined */
                    /* opcode C5h C0h 93h  not defined */
                    /* opcode C5h C0h 94h  not defined */
                    /* opcode C5h C0h 95h  not defined */
                    /* opcode C5h C0h 96h  not defined */
                    /* opcode C5h C0h 97h  not defined */
                    /* opcode C5h C0h 98h  not defined */
                    /* opcode C5h C0h 99h  not defined */
                    /* opcode C5h C0h 9Ah  not defined */
                    /* opcode C5h C0h 9Bh  not defined */
                    /* opcode C5h C0h 9Ch  not defined */
                    /* opcode C5h C0h 9Dh  not defined */
                    /* opcode C5h C0h 9Eh  not defined */
                    /* opcode C5h C0h 9Fh  not defined */
                    /* opcode C5h C0h A0h  not defined */
                    /* opcode C5h C0h A1h  not defined */
                    /* opcode C5h C0h A2h  not defined */
                    /* opcode C5h C0h A3h  not defined */
                    /* opcode C5h C0h A4h  not defined */
                    /* opcode C5h C0h A5h  not defined */
                    /* opcode C5h C0h A6h  not defined */
                    /* opcode C5h C0h A7h  not defined */
                    /* opcode C5h C0h A8h  not defined */
                    /* opcode C5h C0h A9h  not defined */
                    /* opcode C5h C0h AAh  not defined */
                    /* opcode C5h C0h ABh  not defined */
                    /* opcode C5h C0h ACh  not defined */
                    /* opcode C5h C0h ADh  not defined */
                    /* opcode C5h C0h AEh  not defined */
                    /* opcode C5h C0h AFh  not defined */
                    /* opcode C5h C0h B0h  not defined */
                    /* opcode C5h C0h B1h  not defined */
                    /* opcode C5h C0h B2h  not defined */
                    /* opcode C5h C0h B3h  not defined */
                    /* opcode C5h C0h B4h  not defined */
                    /* opcode C5h C0h B5h  not defined */
                    /* opcode C5h C0h B6h  not defined */
                    /* opcode C5h C0h B7h  not defined */
                    /* opcode C5h C0h B8h  not defined */
                    /* opcode C5h C0h B9h  not defined */
                    /* opcode C5h C0h BAh  not defined */
                    /* opcode C5h C0h BBh  not defined */
                    /* opcode C5h C0h BCh  not defined */
                    /* opcode C5h C0h BDh  not defined */
                    /* opcode C5h C0h BEh  not defined */
                    /* opcode C5h C0h BFh  not defined */
                    /* opcode C5h C0h C0h  not defined */
                    /* opcode C5h C0h C1h  not defined */
                    /* opcode C5h C0h C2h  not defined */
                    /* opcode C5h C0h C3h  not defined */
                    /* opcode C5h C0h C4h  not defined */
                    /* opcode C5h C0h C5h  not defined */
                    /* opcode C5h C0h C6h  not defined */
                    /* opcode C5h C0h C7h  not defined */
                    /* opcode C5h C0h C8h  not defined */
                    /* opcode C5h C0h C9h  not defined */
                    /* opcode C5h C0h CAh  not defined */
                    /* opcode C5h C0h CBh  not defined */
                    /* opcode C5h C0h CCh  not defined */
                    /* opcode C5h C0h CDh  not defined */
                    /* opcode C5h C0h CEh  not defined */
                    /* opcode C5h C0h CFh  not defined */
                    /* opcode C5h C0h D0h  not defined */
                    /* opcode C5h C0h D1h  not defined */
                    /* opcode C5h C0h D2h  not defined */
                    /* opcode C5h C0h D3h  not defined */
                    /* opcode C5h C0h D4h  not defined */
                    /* opcode C5h C0h D5h  not defined */
                    /* opcode C5h C0h D6h  not defined */
                    /* opcode C5h C0h D7h  not defined */
                    /* opcode C5h C0h D8h  not defined */
                    /* opcode C5h C0h D9h  not defined */
                    /* opcode C5h C0h DAh  not defined */
                    /* opcode C5h C0h DBh  not defined */
                    /* opcode C5h C0h DCh  not defined */
                    /* opcode C5h C0h DDh  not defined */
                    /* opcode C5h C0h DEh  not defined */
                    /* opcode C5h C0h DFh  not defined */
                    /* opcode C5h C0h E0h  not defined */
                    /* opcode C5h C0h E1h  not defined */
                    /* opcode C5h C0h E2h  not defined */
                    /* opcode C5h C0h E3h  not defined */
                    /* opcode C5h C0h E4h  not defined */
                    /* opcode C5h C0h E5h  not defined */
                    /* opcode C5h C0h E6h  not defined */
                    /* opcode C5h C0h E7h  not defined */
                    /* opcode C5h C0h E8h  not defined */
                    /* opcode C5h C0h E9h  not defined */
                    /* opcode C5h C0h EAh  not defined */
                    /* opcode C5h C0h EBh  not defined */
                    /* opcode C5h C0h ECh  not defined */
                    /* opcode C5h C0h EDh  not defined */
                    /* opcode C5h C0h EEh  not defined */
                    /* opcode C5h C0h EFh  not defined */
                    /* opcode C5h C0h F0h  not defined */
                    /* opcode C5h C0h F1h  not defined */
                    /* opcode C5h C0h F2h  not defined */
                    /* opcode C5h C0h F3h  not defined */
                    /* opcode C5h C0h F4h  not defined */
                    /* opcode C5h C0h F5h  not defined */
                    /* opcode C5h C0h F6h  not defined */
                    /* opcode C5h C0h F7h  not defined */
                    /* opcode C5h C0h F8h  not defined */
                    /* opcode C5h C0h F9h  not defined */
                    /* opcode C5h C0h FAh  not defined */
                    /* opcode C5h C0h FBh  not defined */
                    /* opcode C5h C0h FCh  not defined */
                    /* opcode C5h C0h FDh  not defined */
                    /* opcode C5h C0h FEh  not defined */
                    /* opcode C5h C0h FFh  not defined */
                    default:
                        goto _x86decode_illegal_opcode;
                };
/* End of opcodes starting with C5h C0h */
                break;
            case 0xC1: /* C5h C1h   mod=3 reg=0 rm=1      spec:  */
            case 0xC9: /* C5h C9h   mod=3 reg=1 rm=1      spec:  */
            case 0xD1: /* C5h D1h   mod=3 reg=2 rm=1      spec:  */
            case 0xD9: /* C5h D9h   mod=3 reg=3 rm=1      spec:  */
            case 0xE1: /* C5h E1h   mod=3 reg=4 rm=1      spec:  */
            case 0xE9: /* C5h E9h   mod=3 reg=5 rm=1      spec:  */
            case 0xF1: /* C5h F1h   mod=3 reg=6 rm=1      spec:  */
            case 0xF9: /* C5h F9h   mod=3 reg=7 rm=1      spec:  */
                vex.V = ((~mrm.byte) >> 3) & 7;
/* Opcodes starting with C5h C1h */
                op=IPFB();
                _x86decode_begin_code32_addr32_opcode_parse_C5C1:
                switch (op) {
                    /* opcode C5h C1h 00h  not defined */
                    /* opcode C5h C1h 01h  not defined */
                    /* opcode C5h C1h 02h  not defined */
                    /* opcode C5h C1h 03h  not defined */
                    /* opcode C5h C1h 04h  not defined */
                    /* opcode C5h C1h 05h  not defined */
                    /* opcode C5h C1h 06h  not defined */
                    /* opcode C5h C1h 07h  not defined */
                    /* opcode C5h C1h 08h  not defined */
                    /* opcode C5h C1h 09h  not defined */
                    /* opcode C5h C1h 0Ah  not defined */
                    /* opcode C5h C1h 0Bh  not defined */
                    /* opcode C5h C1h 0Ch  not defined */
                    /* opcode C5h C1h 0Dh  not defined */
                    /* opcode C5h C1h 0Eh  not defined */
                    /* opcode C5h C1h 0Fh  not defined */
                    /* opcode C5h C1h 10h  not defined */
                    /* opcode C5h C1h 11h  not defined */
                    /* opcode C5h C1h 12h  not defined */
                    /* opcode C5h C1h 13h  not defined */
                    /* opcode C5h C1h 14h  not defined */
                    /* opcode C5h C1h 15h  not defined */
                    /* opcode C5h C1h 16h  not defined */
                    /* opcode C5h C1h 17h  not defined */
                    /* opcode C5h C1h 18h  not defined */
                    /* opcode C5h C1h 19h  not defined */
                    /* opcode C5h C1h 1Ah  not defined */
                    /* opcode C5h C1h 1Bh  not defined */
                    /* opcode C5h C1h 1Ch  not defined */
                    /* opcode C5h C1h 1Dh  not defined */
                    /* opcode C5h C1h 1Eh  not defined */
                    /* opcode C5h C1h 1Fh  not defined */
                    /* opcode C5h C1h 20h  not defined */
                    /* opcode C5h C1h 21h  not defined */
                    /* opcode C5h C1h 22h  not defined */
                    /* opcode C5h C1h 23h  not defined */
                    /* opcode C5h C1h 24h  not defined */
                    /* opcode C5h C1h 25h  not defined */
                    /* opcode C5h C1h 26h  not defined */
                    /* opcode C5h C1h 27h  not defined */
                    /* opcode C5h C1h 28h  not defined */
                    /* opcode C5h C1h 29h  not defined */
                    /* opcode C5h C1h 2Ah  not defined */
                    /* opcode C5h C1h 2Bh  not defined */
                    /* opcode C5h C1h 2Ch  not defined */
                    /* opcode C5h C1h 2Dh  not defined */
                    /* opcode C5h C1h 2Eh  not defined */
                    /* opcode C5h C1h 2Fh  not defined */
                    /* opcode C5h C1h 30h  not defined */
                    /* opcode C5h C1h 31h  not defined */
                    /* opcode C5h C1h 32h  not defined */
                    /* opcode C5h C1h 33h  not defined */
                    /* opcode C5h C1h 34h  not defined */
                    /* opcode C5h C1h 35h  not defined */
                    /* opcode C5h C1h 36h  not defined */
                    /* opcode C5h C1h 37h  not defined */
                    /* opcode C5h C1h 38h  not defined */
                    /* opcode C5h C1h 39h  not defined */
                    /* opcode C5h C1h 3Ah  not defined */
                    /* opcode C5h C1h 3Bh  not defined */
                    /* opcode C5h C1h 3Ch  not defined */
                    /* opcode C5h C1h 3Dh  not defined */
                    /* opcode C5h C1h 3Eh  not defined */
                    /* opcode C5h C1h 3Fh  not defined */
                    /* opcode C5h C1h 40h  not defined */
                    /* opcode C5h C1h 41h  not defined */
                    /* opcode C5h C1h 42h  not defined */
                    /* opcode C5h C1h 43h  not defined */
                    /* opcode C5h C1h 44h  not defined */
                    /* opcode C5h C1h 45h  not defined */
                    /* opcode C5h C1h 46h  not defined */
                    /* opcode C5h C1h 47h  not defined */
                    /* opcode C5h C1h 48h  not defined */
                    /* opcode C5h C1h 49h  not defined */
                    /* opcode C5h C1h 4Ah  not defined */
                    /* opcode C5h C1h 4Bh  not defined */
                    /* opcode C5h C1h 4Ch  not defined */
                    /* opcode C5h C1h 4Dh  not defined */
                    /* opcode C5h C1h 4Eh  not defined */
                    /* opcode C5h C1h 4Fh  not defined */
                    /* opcode C5h C1h 50h  not defined */
                    /* opcode C5h C1h 51h  not defined */
                    /* opcode C5h C1h 52h  not defined */
                    /* opcode C5h C1h 53h  not defined */
                    /* opcode C5h C1h 54h  not defined */
                    /* opcode C5h C1h 55h  not defined */
                    /* opcode C5h C1h 56h  not defined */
                    /* opcode C5h C1h 57h  not defined */
                    case 0x58: /* C5h C1h 58h VADDPD sse(reg),sse(vsidx),sse(r/m)      spec: vex vsize(128) vlead(0x0F) vprefix(0x66) 0x58 mod/reg/rm */
                        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VADDPD XMM%u,XMM%u,%s",mrm.reg(),vex.V,IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                        break;
                    /* opcode C5h C1h 59h  not defined */
                    /* opcode C5h C1h 5Ah  not defined */
                    /* opcode C5h C1h 5Bh  not defined */
                    /* opcode C5h C1h 5Ch  not defined */
                    /* opcode C5h C1h 5Dh  not defined */
                    /* opcode C5h C1h 5Eh  not defined */
                    /* opcode C5h C1h 5Fh  not defined */
                    /* opcode C5h C1h 60h  not defined */
                    /* opcode C5h C1h 61h  not defined */
                    /* opcode C5h C1h 62h  not defined */
                    /* opcode C5h C1h 63h  not defined */
                    /* opcode C5h C1h 64h  not defined */
                    /* opcode C5h C1h 65h  not defined */
                    /* opcode C5h C1h 66h  not defined */
                    /* opcode C5h C1h 67h  not defined */
                    /* opcode C5h C1h 68h  not defined */
                    /* opcode C5h C1h 69h  not defined */
                    /* opcode C5h C1h 6Ah  not defined */
                    /* opcode C5h C1h 6Bh  not defined */
                    /* opcode C5h C1h 6Ch  not defined */
                    /* opcode C5h C1h 6Dh  not defined */
                    /* opcode C5h C1h 6Eh  not defined */
                    /* opcode C5h C1h 6Fh  not defined */
                    /* opcode C5h C1h 70h  not defined */
                    /* opcode C5h C1h 71h  not defined */
                    /* opcode C5h C1h 72h  not defined */
                    /* opcode C5h C1h 73h  not defined */
                    /* opcode C5h C1h 74h  not defined */
                    /* opcode C5h C1h 75h  not defined */
                    /* opcode C5h C1h 76h  not defined */
                    /* opcode C5h C1h 77h  not defined */
                    /* opcode C5h C1h 78h  not defined */
                    /* opcode C5h C1h 79h  not defined */
                    /* opcode C5h C1h 7Ah  not defined */
                    /* opcode C5h C1h 7Bh  not defined */
                    /* opcode C5h C1h 7Ch  not defined */
                    /* opcode C5h C1h 7Dh  not defined */
                    /* opcode C5h C1h 7Eh  not defined */
                    /* opcode C5h C1h 7Fh  not defined */
                    /* opcode C5h C1h 80h  not defined */
                    /* opcode C5h C1h 81h  not defined */
                    /* opcode C5h C1h 82h  not defined */
                    /* opcode C5h C1h 83h  not defined */
                    /* opcode C5h C1h 84h  not defined */
                    /* opcode C5h C1h 85h  not defined */
                    /* opcode C5h C1h 86h  not defined */
                    /* opcode C5h C1h 87h  not defined */
                    /* opcode C5h C1h 88h  not defined */
                    /* opcode C5h C1h 89h  not defined */
                    /* opcode C5h C1h 8Ah  not defined */
                    /* opcode C5h C1h 8Bh  not defined */
                    /* opcode C5h C1h 8Ch  not defined */
                    /* opcode C5h C1h 8Dh  not defined */
                    /* opcode C5h C1h 8Eh  not defined */
                    /* opcode C5h C1h 8Fh  not defined */
                    /* opcode C5h C1h 90h  not defined */
                    /* opcode C5h C1h 91h  not defined */
                    /* opcode C5h C1h 92h  not defined */
                    /* opcode C5h C1h 93h  not defined */
                    /* opcode C5h C1h 94h  not defined */
                    /* opcode C5h C1h 95h  not defined */
                    /* opcode C5h C1h 96h  not defined */
                    /* opcode C5h C1h 97h  not defined */
                    /* opcode C5h C1h 98h  not defined */
                    /* opcode C5h C1h 99h  not defined */
                    /* opcode C5h C1h 9Ah  not defined */
                    /* opcode C5h C1h 9Bh  not defined */
                    /* opcode C5h C1h 9Ch  not defined */
                    /* opcode C5h C1h 9Dh  not defined */
                    /* opcode C5h C1h 9Eh  not defined */
                    /* opcode C5h C1h 9Fh  not defined */
                    /* opcode C5h C1h A0h  not defined */
                    /* opcode C5h C1h A1h  not defined */
                    /* opcode C5h C1h A2h  not defined */
                    /* opcode C5h C1h A3h  not defined */
                    /* opcode C5h C1h A4h  not defined */
                    /* opcode C5h C1h A5h  not defined */
                    /* opcode C5h C1h A6h  not defined */
                    /* opcode C5h C1h A7h  not defined */
                    /* opcode C5h C1h A8h  not defined */
                    /* opcode C5h C1h A9h  not defined */
                    /* opcode C5h C1h AAh  not defined */
                    /* opcode C5h C1h ABh  not defined */
                    /* opcode C5h C1h ACh  not defined */
                    /* opcode C5h C1h ADh  not defined */
                    /* opcode C5h C1h AEh  not defined */
                    /* opcode C5h C1h AFh  not defined */
                    /* opcode C5h C1h B0h  not defined */
                    /* opcode C5h C1h B1h  not defined */
                    /* opcode C5h C1h B2h  not defined */
                    /* opcode C5h C1h B3h  not defined */
                    /* opcode C5h C1h B4h  not defined */
                    /* opcode C5h C1h B5h  not defined */
                    /* opcode C5h C1h B6h  not defined */
                    /* opcode C5h C1h B7h  not defined */
                    /* opcode C5h C1h B8h  not defined */
                    /* opcode C5h C1h B9h  not defined */
                    /* opcode C5h C1h BAh  not defined */
                    /* opcode C5h C1h BBh  not defined */
                    /* opcode C5h C1h BCh  not defined */
                    /* opcode C5h C1h BDh  not defined */
                    /* opcode C5h C1h BEh  not defined */
                    /* opcode C5h C1h BFh  not defined */
                    /* opcode C5h C1h C0h  not defined */
                    /* opcode C5h C1h C1h  not defined */
                    /* opcode C5h C1h C2h  not defined */
                    /* opcode C5h C1h C3h  not defined */
                    /* opcode C5h C1h C4h  not defined */
                    /* opcode C5h C1h C5h  not defined */
                    /* opcode C5h C1h C6h  not defined */
                    /* opcode C5h C1h C7h  not defined */
                    /* opcode C5h C1h C8h  not defined */
                    /* opcode C5h C1h C9h  not defined */
                    /* opcode C5h C1h CAh  not defined */
                    /* opcode C5h C1h CBh  not defined */
                    /* opcode C5h C1h CCh  not defined */
                    /* opcode C5h C1h CDh  not defined */
                    /* opcode C5h C1h CEh  not defined */
                    /* opcode C5h C1h CFh  not defined */
                    /* opcode C5h C1h D0h  not defined */
                    /* opcode C5h C1h D1h  not defined */
                    /* opcode C5h C1h D2h  not defined */
                    /* opcode C5h C1h D3h  not defined */
                    /* opcode C5h C1h D4h  not defined */
                    /* opcode C5h C1h D5h  not defined */
                    /* opcode C5h C1h D6h  not defined */
                    /* opcode C5h C1h D7h  not defined */
                    /* opcode C5h C1h D8h  not defined */
                    /* opcode C5h C1h D9h  not defined */
                    /* opcode C5h C1h DAh  not defined */
                    /* opcode C5h C1h DBh  not defined */
                    /* opcode C5h C1h DCh  not defined */
                    /* opcode C5h C1h DDh  not defined */
                    /* opcode C5h C1h DEh  not defined */
                    /* opcode C5h C1h DFh  not defined */
                    /* opcode C5h C1h E0h  not defined */
                    /* opcode C5h C1h E1h  not defined */
                    /* opcode C5h C1h E2h  not defined */
                    /* opcode C5h C1h E3h  not defined */
                    /* opcode C5h C1h E4h  not defined */
                    /* opcode C5h C1h E5h  not defined */
                    /* opcode C5h C1h E6h  not defined */
                    /* opcode C5h C1h E7h  not defined */
                    /* opcode C5h C1h E8h  not defined */
                    /* opcode C5h C1h E9h  not defined */
                    /* opcode C5h C1h EAh  not defined */
                    /* opcode C5h C1h EBh  not defined */
                    /* opcode C5h C1h ECh  not defined */
                    /* opcode C5h C1h EDh  not defined */
                    /* opcode C5h C1h EEh  not defined */
                    /* opcode C5h C1h EFh  not defined */
                    /* opcode C5h C1h F0h  not defined */
                    /* opcode C5h C1h F1h  not defined */
                    /* opcode C5h C1h F2h  not defined */
                    /* opcode C5h C1h F3h  not defined */
                    /* opcode C5h C1h F4h  not defined */
                    /* opcode C5h C1h F5h  not defined */
                    /* opcode C5h C1h F6h  not defined */
                    /* opcode C5h C1h F7h  not defined */
                    /* opcode C5h C1h F8h  not defined */
                    /* opcode C5h C1h F9h  not defined */
                    /* opcode C5h C1h FAh  not defined */
                    /* opcode C5h C1h FBh  not defined */
                    /* opcode C5h C1h FCh  not defined */
                    /* opcode C5h C1h FDh  not defined */
                    /* opcode C5h C1h FEh  not defined */
                    /* opcode C5h C1h FFh  not defined */
                    default:
                        goto _x86decode_illegal_opcode;
                };
/* End of opcodes starting with C5h C1h */
                break;
            /* opcode C5h C2h  not defined */
            /* opcode C5h C3h  not defined */
            case 0xC4: /* C5h C4h   mod=3 reg=0 rm=4      spec:  */
            case 0xCC: /* C5h CCh   mod=3 reg=1 rm=4      spec:  */
            case 0xD4: /* C5h D4h   mod=3 reg=2 rm=4      spec:  */
            case 0xDC: /* C5h DCh   mod=3 reg=3 rm=4      spec:  */
            case 0xE4: /* C5h E4h   mod=3 reg=4 rm=4      spec:  */
            case 0xEC: /* C5h ECh   mod=3 reg=5 rm=4      spec:  */
            case 0xF4: /* C5h F4h   mod=3 reg=6 rm=4      spec:  */
                vex.V = ((~mrm.byte) >> 3) & 7;
/* Opcodes starting with C5h C4h */
                op=IPFB();
                _x86decode_begin_code32_addr32_opcode_parse_C5C4:
                switch (op) {
                    /* opcode C5h C4h 00h  not defined */
                    /* opcode C5h C4h 01h  not defined */
                    /* opcode C5h C4h 02h  not defined */
                    /* opcode C5h C4h 03h  not defined */
                    /* opcode C5h C4h 04h  not defined */
                    /* opcode C5h C4h 05h  not defined */
                    /* opcode C5h C4h 06h  not defined */
                    /* opcode C5h C4h 07h  not defined */
                    /* opcode C5h C4h 08h  not defined */
                    /* opcode C5h C4h 09h  not defined */
                    /* opcode C5h C4h 0Ah  not defined */
                    /* opcode C5h C4h 0Bh  not defined */
                    /* opcode C5h C4h 0Ch  not defined */
                    /* opcode C5h C4h 0Dh  not defined */
                    /* opcode C5h C4h 0Eh  not defined */
                    /* opcode C5h C4h 0Fh  not defined */
                    /* opcode C5h C4h 10h  not defined */
                    /* opcode C5h C4h 11h  not defined */
                    /* opcode C5h C4h 12h  not defined */
                    /* opcode C5h C4h 13h  not defined */
                    /* opcode C5h C4h 14h  not defined */
                    /* opcode C5h C4h 15h  not defined */
                    /* opcode C5h C4h 16h  not defined */
                    /* opcode C5h C4h 17h  not defined */
                    /* opcode C5h C4h 18h  not defined */
                    /* opcode C5h C4h 19h  not defined */
                    /* opcode C5h C4h 1Ah  not defined */
                    /* opcode C5h C4h 1Bh  not defined */
                    /* opcode C5h C4h 1Ch  not defined */
                    /* opcode C5h C4h 1Dh  not defined */
                    /* opcode C5h C4h 1Eh  not defined */
                    /* opcode C5h C4h 1Fh  not defined */
                    /* opcode C5h C4h 20h  not defined */
                    /* opcode C5h C4h 21h  not defined */
                    /* opcode C5h C4h 22h  not defined */
                    /* opcode C5h C4h 23h  not defined */
                    /* opcode C5h C4h 24h  not defined */
                    /* opcode C5h C4h 25h  not defined */
                    /* opcode C5h C4h 26h  not defined */
                    /* opcode C5h C4h 27h  not defined */
                    /* opcode C5h C4h 28h  not defined */
                    /* opcode C5h C4h 29h  not defined */
                    /* opcode C5h C4h 2Ah  not defined */
                    /* opcode C5h C4h 2Bh  not defined */
                    /* opcode C5h C4h 2Ch  not defined */
                    /* opcode C5h C4h 2Dh  not defined */
                    /* opcode C5h C4h 2Eh  not defined */
                    /* opcode C5h C4h 2Fh  not defined */
                    /* opcode C5h C4h 30h  not defined */
                    /* opcode C5h C4h 31h  not defined */
                    /* opcode C5h C4h 32h  not defined */
                    /* opcode C5h C4h 33h  not defined */
                    /* opcode C5h C4h 34h  not defined */
                    /* opcode C5h C4h 35h  not defined */
                    /* opcode C5h C4h 36h  not defined */
                    /* opcode C5h C4h 37h  not defined */
                    /* opcode C5h C4h 38h  not defined */
                    /* opcode C5h C4h 39h  not defined */
                    /* opcode C5h C4h 3Ah  not defined */
                    /* opcode C5h C4h 3Bh  not defined */
                    /* opcode C5h C4h 3Ch  not defined */
                    /* opcode C5h C4h 3Dh  not defined */
                    /* opcode C5h C4h 3Eh  not defined */
                    /* opcode C5h C4h 3Fh  not defined */
                    /* opcode C5h C4h 40h  not defined */
                    /* opcode C5h C4h 41h  not defined */
                    /* opcode C5h C4h 42h  not defined */
                    /* opcode C5h C4h 43h  not defined */
                    /* opcode C5h C4h 44h  not defined */
                    /* opcode C5h C4h 45h  not defined */
                    /* opcode C5h C4h 46h  not defined */
                    /* opcode C5h C4h 47h  not defined */
                    /* opcode C5h C4h 48h  not defined */
                    /* opcode C5h C4h 49h  not defined */
                    /* opcode C5h C4h 4Ah  not defined */
                    /* opcode C5h C4h 4Bh  not defined */
                    /* opcode C5h C4h 4Ch  not defined */
                    /* opcode C5h C4h 4Dh  not defined */
                    /* opcode C5h C4h 4Eh  not defined */
                    /* opcode C5h C4h 4Fh  not defined */
                    /* opcode C5h C4h 50h  not defined */
                    /* opcode C5h C4h 51h  not defined */
                    /* opcode C5h C4h 52h  not defined */
                    /* opcode C5h C4h 53h  not defined */
                    /* opcode C5h C4h 54h  not defined */
                    /* opcode C5h C4h 55h  not defined */
                    /* opcode C5h C4h 56h  not defined */
                    /* opcode C5h C4h 57h  not defined */
                    case 0x58: /* C5h C4h 58h VADDPS avx(reg),avx(vsidx),avx(r/m)      spec: vex vsize(256) vlead(0x0F) vprefix(none) 0x58 mod/reg/rm */
                        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VADDPS YMM%u,YMM%u,%s",mrm.reg(),vex.V,IPDecPrint32(mrm,sib,disp,32,RC_AVXREG,""));
                        break;
                    /* opcode C5h C4h 59h  not defined */
                    /* opcode C5h C4h 5Ah  not defined */
                    /* opcode C5h C4h 5Bh  not defined */
                    /* opcode C5h C4h 5Ch  not defined */
                    /* opcode C5h C4h 5Dh  not defined */
                    /* opcode C5h C4h 5Eh  not defined */
                    /* opcode C5h C4h 5Fh  not defined */
                    /* opcode C5h C4h 60h  not defined */
                    /* opcode C5h C4h 61h  not defined */
                    /* opcode C5h C4h 62h  not defined */
                    /* opcode C5h C4h 63h  not defined */
                    /* opcode C5h C4h 64h  not defined */
                    /* opcode C5h C4h 65h  not defined */
                    /* opcode C5h C4h 66h  not defined */
                    /* opcode C5h C4h 67h  not defined */
                    /* opcode C5h C4h 68h  not defined */
                    /* opcode C5h C4h 69h  not defined */
                    /* opcode C5h C4h 6Ah  not defined */
                    /* opcode C5h C4h 6Bh  not defined */
                    /* opcode C5h C4h 6Ch  not defined */
                    /* opcode C5h C4h 6Dh  not defined */
                    /* opcode C5h C4h 6Eh  not defined */
                    /* opcode C5h C4h 6Fh  not defined */
                    /* opcode C5h C4h 70h  not defined */
                    /* opcode C5h C4h 71h  not defined */
                    /* opcode C5h C4h 72h  not defined */
                    /* opcode C5h C4h 73h  not defined */
                    /* opcode C5h C4h 74h  not defined */
                    /* opcode C5h C4h 75h  not defined */
                    /* opcode C5h C4h 76h  not defined */
                    /* opcode C5h C4h 77h  not defined */
                    /* opcode C5h C4h 78h  not defined */
                    /* opcode C5h C4h 79h  not defined */
                    /* opcode C5h C4h 7Ah  not defined */
                    /* opcode C5h C4h 7Bh  not defined */
                    /* opcode C5h C4h 7Ch  not defined */
                    /* opcode C5h C4h 7Dh  not defined */
                    /* opcode C5h C4h 7Eh  not defined */
                    /* opcode C5h C4h 7Fh  not defined */
                    /* opcode C5h C4h 80h  not defined */
                    /* opcode C5h C4h 81h  not defined */
                    /* opcode C5h C4h 82h  not defined */
                    /* opcode C5h C4h 83h  not defined */
                    /* opcode C5h C4h 84h  not defined */
                    /* opcode C5h C4h 85h  not defined */
                    /* opcode C5h C4h 86h  not defined */
                    /* opcode C5h C4h 87h  not defined */
                    /* opcode C5h C4h 88h  not defined */
                    /* opcode C5h C4h 89h  not defined */
                    /* opcode C5h C4h 8Ah  not defined */
                    /* opcode C5h C4h 8Bh  not defined */
                    /* opcode C5h C4h 8Ch  not defined */
                    /* opcode C5h C4h 8Dh  not defined */
                    /* opcode C5h C4h 8Eh  not defined */
                    /* opcode C5h C4h 8Fh  not defined */
                    /* opcode C5h C4h 90h  not defined */
                    /* opcode C5h C4h 91h  not defined */
                    /* opcode C5h C4h 92h  not defined */
                    /* opcode C5h C4h 93h  not defined */
                    /* opcode C5h C4h 94h  not defined */
                    /* opcode C5h C4h 95h  not defined */
                    /* opcode C5h C4h 96h  not defined */
                    /* opcode C5h C4h 97h  not defined */
                    /* opcode C5h C4h 98h  not defined */
                    /* opcode C5h C4h 99h  not defined */
                    /* opcode C5h C4h 9Ah  not defined */
                    /* opcode C5h C4h 9Bh  not defined */
                    /* opcode C5h C4h 9Ch  not defined */
                    /* opcode C5h C4h 9Dh  not defined */
                    /* opcode C5h C4h 9Eh  not defined */
                    /* opcode C5h C4h 9Fh  not defined */
                    /* opcode C5h C4h A0h  not defined */
                    /* opcode C5h C4h A1h  not defined */
                    /* opcode C5h C4h A2h  not defined */
                    /* opcode C5h C4h A3h  not defined */
                    /* opcode C5h C4h A4h  not defined */
                    /* opcode C5h C4h A5h  not defined */
                    /* opcode C5h C4h A6h  not defined */
                    /* opcode C5h C4h A7h  not defined */
                    /* opcode C5h C4h A8h  not defined */
                    /* opcode C5h C4h A9h  not defined */
                    /* opcode C5h C4h AAh  not defined */
                    /* opcode C5h C4h ABh  not defined */
                    /* opcode C5h C4h ACh  not defined */
                    /* opcode C5h C4h ADh  not defined */
                    /* opcode C5h C4h AEh  not defined */
                    /* opcode C5h C4h AFh  not defined */
                    /* opcode C5h C4h B0h  not defined */
                    /* opcode C5h C4h B1h  not defined */
                    /* opcode C5h C4h B2h  not defined */
                    /* opcode C5h C4h B3h  not defined */
                    /* opcode C5h C4h B4h  not defined */
                    /* opcode C5h C4h B5h  not defined */
                    /* opcode C5h C4h B6h  not defined */
                    /* opcode C5h C4h B7h  not defined */
                    /* opcode C5h C4h B8h  not defined */
                    /* opcode C5h C4h B9h  not defined */
                    /* opcode C5h C4h BAh  not defined */
                    /* opcode C5h C4h BBh  not defined */
                    /* opcode C5h C4h BCh  not defined */
                    /* opcode C5h C4h BDh  not defined */
                    /* opcode C5h C4h BEh  not defined */
                    /* opcode C5h C4h BFh  not defined */
                    /* opcode C5h C4h C0h  not defined */
                    /* opcode C5h C4h C1h  not defined */
                    /* opcode C5h C4h C2h  not defined */
                    /* opcode C5h C4h C3h  not defined */
                    /* opcode C5h C4h C4h  not defined */
                    /* opcode C5h C4h C5h  not defined */
                    /* opcode C5h C4h C6h  not defined */
                    /* opcode C5h C4h C7h  not defined */
                    /* opcode C5h C4h C8h  not defined */
                    /* opcode C5h C4h C9h  not defined */
                    /* opcode C5h C4h CAh  not defined */
                    /* opcode C5h C4h CBh  not defined */
                    /* opcode C5h C4h CCh  not defined */
                    /* opcode C5h C4h CDh  not defined */
                    /* opcode C5h C4h CEh  not defined */
                    /* opcode C5h C4h CFh  not defined */
                    /* opcode C5h C4h D0h  not defined */
                    /* opcode C5h C4h D1h  not defined */
                    /* opcode C5h C4h D2h  not defined */
                    /* opcode C5h C4h D3h  not defined */
                    /* opcode C5h C4h D4h  not defined */
                    /* opcode C5h C4h D5h  not defined */
                    /* opcode C5h C4h D6h  not defined */
                    /* opcode C5h C4h D7h  not defined */
                    /* opcode C5h C4h D8h  not defined */
                    /* opcode C5h C4h D9h  not defined */
                    /* opcode C5h C4h DAh  not defined */
                    /* opcode C5h C4h DBh  not defined */
                    /* opcode C5h C4h DCh  not defined */
                    /* opcode C5h C4h DDh  not defined */
                    /* opcode C5h C4h DEh  not defined */
                    /* opcode C5h C4h DFh  not defined */
                    /* opcode C5h C4h E0h  not defined */
                    /* opcode C5h C4h E1h  not defined */
                    /* opcode C5h C4h E2h  not defined */
                    /* opcode C5h C4h E3h  not defined */
                    /* opcode C5h C4h E4h  not defined */
                    /* opcode C5h C4h E5h  not defined */
                    /* opcode C5h C4h E6h  not defined */
                    /* opcode C5h C4h E7h  not defined */
                    /* opcode C5h C4h E8h  not defined */
                    /* opcode C5h C4h E9h  not defined */
                    /* opcode C5h C4h EAh  not defined */
                    /* opcode C5h C4h EBh  not defined */
                    /* opcode C5h C4h ECh  not defined */
                    /* opcode C5h C4h EDh  not defined */
                    /* opcode C5h C4h EEh  not defined */
                    /* opcode C5h C4h EFh  not defined */
                    /* opcode C5h C4h F0h  not defined */
                    /* opcode C5h C4h F1h  not defined */
                    /* opcode C5h C4h F2h  not defined */
                    /* opcode C5h C4h F3h  not defined */
                    /* opcode C5h C4h F4h  not defined */
                    /* opcode C5h C4h F5h  not defined */
                    /* opcode C5h C4h F6h  not defined */
                    /* opcode C5h C4h F7h  not defined */
                    /* opcode C5h C4h F8h  not defined */
                    /* opcode C5h C4h F9h  not defined */
                    /* opcode C5h C4h FAh  not defined */
                    /* opcode C5h C4h FBh  not defined */
                    /* opcode C5h C4h FCh  not defined */
                    /* opcode C5h C4h FDh  not defined */
                    /* opcode C5h C4h FEh  not defined */
                    /* opcode C5h C4h FFh  not defined */
                    default:
                        goto _x86decode_illegal_opcode;
                };
/* End of opcodes starting with C5h C4h */
                break;
            case 0xC5: /* C5h C5h   mod=3 reg=0 rm=5      spec:  */
            case 0xCD: /* C5h CDh   mod=3 reg=1 rm=5      spec:  */
            case 0xD5: /* C5h D5h   mod=3 reg=2 rm=5      spec:  */
            case 0xDD: /* C5h DDh   mod=3 reg=3 rm=5      spec:  */
            case 0xE5: /* C5h E5h   mod=3 reg=4 rm=5      spec:  */
            case 0xED: /* C5h EDh   mod=3 reg=5 rm=5      spec:  */
            case 0xF5: /* C5h F5h   mod=3 reg=6 rm=5      spec:  */
            case 0xFD: /* C5h FDh   mod=3 reg=7 rm=5      spec:  */
                vex.V = ((~mrm.byte) >> 3) & 7;
/* Opcodes starting with C5h C5h */
                op=IPFB();
                _x86decode_begin_code32_addr32_opcode_parse_C5C5:
                switch (op) {
                    /* opcode C5h C5h 00h  not defined */
                    /* opcode C5h C5h 01h  not defined */
                    /* opcode C5h C5h 02h  not defined */
                    /* opcode C5h C5h 03h  not defined */
                    /* opcode C5h C5h 04h  not defined */
                    /* opcode C5h C5h 05h  not defined */
                    /* opcode C5h C5h 06h  not defined */
                    /* opcode C5h C5h 07h  not defined */
                    /* opcode C5h C5h 08h  not defined */
                    /* opcode C5h C5h 09h  not defined */
                    /* opcode C5h C5h 0Ah  not defined */
                    /* opcode C5h C5h 0Bh  not defined */
                    /* opcode C5h C5h 0Ch  not defined */
                    /* opcode C5h C5h 0Dh  not defined */
                    /* opcode C5h C5h 0Eh  not defined */
                    /* opcode C5h C5h 0Fh  not defined */
                    /* opcode C5h C5h 10h  not defined */
                    /* opcode C5h C5h 11h  not defined */
                    /* opcode C5h C5h 12h  not defined */
                    /* opcode C5h C5h 13h  not defined */
                    /* opcode C5h C5h 14h  not defined */
                    /* opcode C5h C5h 15h  not defined */
                    /* opcode C5h C5h 16h  not defined */
                    /* opcode C5h C5h 17h  not defined */
                    /* opcode C5h C5h 18h  not defined */
                    /* opcode C5h C5h 19h  not defined */
                    /* opcode C5h C5h 1Ah  not defined */
                    /* opcode C5h C5h 1Bh  not defined */
                    /* opcode C5h C5h 1Ch  not defined */
                    /* opcode C5h C5h 1Dh  not defined */
                    /* opcode C5h C5h 1Eh  not defined */
                    /* opcode C5h C5h 1Fh  not defined */
                    /* opcode C5h C5h 20h  not defined */
                    /* opcode C5h C5h 21h  not defined */
                    /* opcode C5h C5h 22h  not defined */
                    /* opcode C5h C5h 23h  not defined */
                    /* opcode C5h C5h 24h  not defined */
                    /* opcode C5h C5h 25h  not defined */
                    /* opcode C5h C5h 26h  not defined */
                    /* opcode C5h C5h 27h  not defined */
                    /* opcode C5h C5h 28h  not defined */
                    /* opcode C5h C5h 29h  not defined */
                    /* opcode C5h C5h 2Ah  not defined */
                    /* opcode C5h C5h 2Bh  not defined */
                    /* opcode C5h C5h 2Ch  not defined */
                    /* opcode C5h C5h 2Dh  not defined */
                    /* opcode C5h C5h 2Eh  not defined */
                    /* opcode C5h C5h 2Fh  not defined */
                    /* opcode C5h C5h 30h  not defined */
                    /* opcode C5h C5h 31h  not defined */
                    /* opcode C5h C5h 32h  not defined */
                    /* opcode C5h C5h 33h  not defined */
                    /* opcode C5h C5h 34h  not defined */
                    /* opcode C5h C5h 35h  not defined */
                    /* opcode C5h C5h 36h  not defined */
                    /* opcode C5h C5h 37h  not defined */
                    /* opcode C5h C5h 38h  not defined */
                    /* opcode C5h C5h 39h  not defined */
                    /* opcode C5h C5h 3Ah  not defined */
                    /* opcode C5h C5h 3Bh  not defined */
                    /* opcode C5h C5h 3Ch  not defined */
                    /* opcode C5h C5h 3Dh  not defined */
                    /* opcode C5h C5h 3Eh  not defined */
                    /* opcode C5h C5h 3Fh  not defined */
                    /* opcode C5h C5h 40h  not defined */
                    /* opcode C5h C5h 41h  not defined */
                    /* opcode C5h C5h 42h  not defined */
                    /* opcode C5h C5h 43h  not defined */
                    /* opcode C5h C5h 44h  not defined */
                    /* opcode C5h C5h 45h  not defined */
                    /* opcode C5h C5h 46h  not defined */
                    /* opcode C5h C5h 47h  not defined */
                    /* opcode C5h C5h 48h  not defined */
                    /* opcode C5h C5h 49h  not defined */
                    /* opcode C5h C5h 4Ah  not defined */
                    /* opcode C5h C5h 4Bh  not defined */
                    /* opcode C5h C5h 4Ch  not defined */
                    /* opcode C5h C5h 4Dh  not defined */
                    /* opcode C5h C5h 4Eh  not defined */
                    /* opcode C5h C5h 4Fh  not defined */
                    /* opcode C5h C5h 50h  not defined */
                    /* opcode C5h C5h 51h  not defined */
                    /* opcode C5h C5h 52h  not defined */
                    /* opcode C5h C5h 53h  not defined */
                    /* opcode C5h C5h 54h  not defined */
                    /* opcode C5h C5h 55h  not defined */
                    /* opcode C5h C5h 56h  not defined */
                    /* opcode C5h C5h 57h  not defined */
                    case 0x58: /* C5h C5h 58h VADDPD avx(reg),avx(vsidx),avx(r/m)      spec: vex vsize(256) vlead(0x0F) vprefix(0x66) 0x58 mod/reg/rm */
                        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VADDPD YMM%u,YMM%u,%s",mrm.reg(),vex.V,IPDecPrint32(mrm,sib,disp,32,RC_AVXREG,""));
                        break;
                    /* opcode C5h C5h 59h  not defined */
                    /* opcode C5h C5h 5Ah  not defined */
                    /* opcode C5h C5h 5Bh  not defined */
                    /* opcode C5h C5h 5Ch  not defined */
                    /* opcode C5h C5h 5Dh  not defined */
                    /* opcode C5h C5h 5Eh  not defined */
                    /* opcode C5h C5h 5Fh  not defined */
                    /* opcode C5h C5h 60h  not defined */
                    /* opcode C5h C5h 61h  not defined */
                    /* opcode C5h C5h 62h  not defined */
                    /* opcode C5h C5h 63h  not defined */
                    /* opcode C5h C5h 64h  not defined */
                    /* opcode C5h C5h 65h  not defined */
                    /* opcode C5h C5h 66h  not defined */
                    /* opcode C5h C5h 67h  not defined */
                    /* opcode C5h C5h 68h  not defined */
                    /* opcode C5h C5h 69h  not defined */
                    /* opcode C5h C5h 6Ah  not defined */
                    /* opcode C5h C5h 6Bh  not defined */
                    /* opcode C5h C5h 6Ch  not defined */
                    /* opcode C5h C5h 6Dh  not defined */
                    /* opcode C5h C5h 6Eh  not defined */
                    /* opcode C5h C5h 6Fh  not defined */
                    /* opcode C5h C5h 70h  not defined */
                    /* opcode C5h C5h 71h  not defined */
                    /* opcode C5h C5h 72h  not defined */
                    /* opcode C5h C5h 73h  not defined */
                    /* opcode C5h C5h 74h  not defined */
                    /* opcode C5h C5h 75h  not defined */
                    /* opcode C5h C5h 76h  not defined */
                    /* opcode C5h C5h 77h  not defined */
                    /* opcode C5h C5h 78h  not defined */
                    /* opcode C5h C5h 79h  not defined */
                    /* opcode C5h C5h 7Ah  not defined */
                    /* opcode C5h C5h 7Bh  not defined */
                    /* opcode C5h C5h 7Ch  not defined */
                    /* opcode C5h C5h 7Dh  not defined */
                    /* opcode C5h C5h 7Eh  not defined */
                    /* opcode C5h C5h 7Fh  not defined */
                    /* opcode C5h C5h 80h  not defined */
                    /* opcode C5h C5h 81h  not defined */
                    /* opcode C5h C5h 82h  not defined */
                    /* opcode C5h C5h 83h  not defined */
                    /* opcode C5h C5h 84h  not defined */
                    /* opcode C5h C5h 85h  not defined */
                    /* opcode C5h C5h 86h  not defined */
                    /* opcode C5h C5h 87h  not defined */
                    /* opcode C5h C5h 88h  not defined */
                    /* opcode C5h C5h 89h  not defined */
                    /* opcode C5h C5h 8Ah  not defined */
                    /* opcode C5h C5h 8Bh  not defined */
                    /* opcode C5h C5h 8Ch  not defined */
                    /* opcode C5h C5h 8Dh  not defined */
                    /* opcode C5h C5h 8Eh  not defined */
                    /* opcode C5h C5h 8Fh  not defined */
                    /* opcode C5h C5h 90h  not defined */
                    /* opcode C5h C5h 91h  not defined */
                    /* opcode C5h C5h 92h  not defined */
                    /* opcode C5h C5h 93h  not defined */
                    /* opcode C5h C5h 94h  not defined */
                    /* opcode C5h C5h 95h  not defined */
                    /* opcode C5h C5h 96h  not defined */
                    /* opcode C5h C5h 97h  not defined */
                    /* opcode C5h C5h 98h  not defined */
                    /* opcode C5h C5h 99h  not defined */
                    /* opcode C5h C5h 9Ah  not defined */
                    /* opcode C5h C5h 9Bh  not defined */
                    /* opcode C5h C5h 9Ch  not defined */
                    /* opcode C5h C5h 9Dh  not defined */
                    /* opcode C5h C5h 9Eh  not defined */
                    /* opcode C5h C5h 9Fh  not defined */
                    /* opcode C5h C5h A0h  not defined */
                    /* opcode C5h C5h A1h  not defined */
                    /* opcode C5h C5h A2h  not defined */
                    /* opcode C5h C5h A3h  not defined */
                    /* opcode C5h C5h A4h  not defined */
                    /* opcode C5h C5h A5h  not defined */
                    /* opcode C5h C5h A6h  not defined */
                    /* opcode C5h C5h A7h  not defined */
                    /* opcode C5h C5h A8h  not defined */
                    /* opcode C5h C5h A9h  not defined */
                    /* opcode C5h C5h AAh  not defined */
                    /* opcode C5h C5h ABh  not defined */
                    /* opcode C5h C5h ACh  not defined */
                    /* opcode C5h C5h ADh  not defined */
                    /* opcode C5h C5h AEh  not defined */
                    /* opcode C5h C5h AFh  not defined */
                    /* opcode C5h C5h B0h  not defined */
                    /* opcode C5h C5h B1h  not defined */
                    /* opcode C5h C5h B2h  not defined */
                    /* opcode C5h C5h B3h  not defined */
                    /* opcode C5h C5h B4h  not defined */
                    /* opcode C5h C5h B5h  not defined */
                    /* opcode C5h C5h B6h  not defined */
                    /* opcode C5h C5h B7h  not defined */
                    /* opcode C5h C5h B8h  not defined */
                    /* opcode C5h C5h B9h  not defined */
                    /* opcode C5h C5h BAh  not defined */
                    /* opcode C5h C5h BBh  not defined */
                    /* opcode C5h C5h BCh  not defined */
                    /* opcode C5h C5h BDh  not defined */
                    /* opcode C5h C5h BEh  not defined */
                    /* opcode C5h C5h BFh  not defined */
                    /* opcode C5h C5h C0h  not defined */
                    /* opcode C5h C5h C1h  not defined */
                    /* opcode C5h C5h C2h  not defined */
                    /* opcode C5h C5h C3h  not defined */
                    /* opcode C5h C5h C4h  not defined */
                    /* opcode C5h C5h C5h  not defined */
                    /* opcode C5h C5h C6h  not defined */
                    /* opcode C5h C5h C7h  not defined */
                    /* opcode C5h C5h C8h  not defined */
                    /* opcode C5h C5h C9h  not defined */
                    /* opcode C5h C5h CAh  not defined */
                    /* opcode C5h C5h CBh  not defined */
                    /* opcode C5h C5h CCh  not defined */
                    /* opcode C5h C5h CDh  not defined */
                    /* opcode C5h C5h CEh  not defined */
                    /* opcode C5h C5h CFh  not defined */
                    /* opcode C5h C5h D0h  not defined */
                    /* opcode C5h C5h D1h  not defined */
                    /* opcode C5h C5h D2h  not defined */
                    /* opcode C5h C5h D3h  not defined */
                    /* opcode C5h C5h D4h  not defined */
                    /* opcode C5h C5h D5h  not defined */
                    /* opcode C5h C5h D6h  not defined */
                    /* opcode C5h C5h D7h  not defined */
                    /* opcode C5h C5h D8h  not defined */
                    /* opcode C5h C5h D9h  not defined */
                    /* opcode C5h C5h DAh  not defined */
                    /* opcode C5h C5h DBh  not defined */
                    /* opcode C5h C5h DCh  not defined */
                    /* opcode C5h C5h DDh  not defined */
                    /* opcode C5h C5h DEh  not defined */
                    /* opcode C5h C5h DFh  not defined */
                    /* opcode C5h C5h E0h  not defined */
                    /* opcode C5h C5h E1h  not defined */
                    /* opcode C5h C5h E2h  not defined */
                    /* opcode C5h C5h E3h  not defined */
                    /* opcode C5h C5h E4h  not defined */
                    /* opcode C5h C5h E5h  not defined */
                    /* opcode C5h C5h E6h  not defined */
                    /* opcode C5h C5h E7h  not defined */
                    /* opcode C5h C5h E8h  not defined */
                    /* opcode C5h C5h E9h  not defined */
                    /* opcode C5h C5h EAh  not defined */
                    /* opcode C5h C5h EBh  not defined */
                    /* opcode C5h C5h ECh  not defined */
                    /* opcode C5h C5h EDh  not defined */
                    /* opcode C5h C5h EEh  not defined */
                    /* opcode C5h C5h EFh  not defined */
                    /* opcode C5h C5h F0h  not defined */
                    /* opcode C5h C5h F1h  not defined */
                    /* opcode C5h C5h F2h  not defined */
                    /* opcode C5h C5h F3h  not defined */
                    /* opcode C5h C5h F4h  not defined */
                    /* opcode C5h C5h F5h  not defined */
                    /* opcode C5h C5h F6h  not defined */
                    /* opcode C5h C5h F7h  not defined */
                    /* opcode C5h C5h F8h  not defined */
                    /* opcode C5h C5h F9h  not defined */
                    /* opcode C5h C5h FAh  not defined */
                    /* opcode C5h C5h FBh  not defined */
                    /* opcode C5h C5h FCh  not defined */
                    /* opcode C5h C5h FDh  not defined */
                    /* opcode C5h C5h FEh  not defined */
                    /* opcode C5h C5h FFh  not defined */
                    default:
                        goto _x86decode_illegal_opcode;
                };
/* End of opcodes starting with C5h C5h */
                break;
            /* opcode C5h C6h  not defined */
            /* opcode C5h C7h  not defined */
            /* opcode C5h CAh  not defined */
            /* opcode C5h CBh  not defined */
            /* opcode C5h CEh  not defined */
            /* opcode C5h CFh  not defined */
            /* opcode C5h D2h  not defined */
            /* opcode C5h D3h  not defined */
            /* opcode C5h D6h  not defined */
            /* opcode C5h D7h  not defined */
            /* opcode C5h DAh  not defined */
            /* opcode C5h DBh  not defined */
            /* opcode C5h DEh  not defined */
            /* opcode C5h DFh  not defined */
            /* opcode C5h E2h  not defined */
            /* opcode C5h E3h  not defined */
            /* opcode C5h E6h  not defined */
            /* opcode C5h E7h  not defined */
            /* opcode C5h EAh  not defined */
            /* opcode C5h EBh  not defined */
            /* opcode C5h EEh  not defined */
            /* opcode C5h EFh  not defined */
            /* opcode C5h F2h  not defined */
            /* opcode C5h F3h  not defined */
            /* opcode C5h F6h  not defined */
            /* opcode C5h F7h  not defined */
            case 0xF8: /* C5h F8h   mod=3 reg=7 rm=0      spec:  */
                vex.V = ((~mrm.byte) >> 3) & 7;
/* Opcodes starting with C5h F8h */
                op=IPFB();
                _x86decode_begin_code32_addr32_opcode_parse_C5F8:
                switch (op) {
                    /* opcode C5h F8h 00h  not defined */
                    /* opcode C5h F8h 01h  not defined */
                    /* opcode C5h F8h 02h  not defined */
                    /* opcode C5h F8h 03h  not defined */
                    /* opcode C5h F8h 04h  not defined */
                    /* opcode C5h F8h 05h  not defined */
                    /* opcode C5h F8h 06h  not defined */
                    /* opcode C5h F8h 07h  not defined */
                    /* opcode C5h F8h 08h  not defined */
                    /* opcode C5h F8h 09h  not defined */
                    /* opcode C5h F8h 0Ah  not defined */
                    /* opcode C5h F8h 0Bh  not defined */
                    /* opcode C5h F8h 0Ch  not defined */
                    /* opcode C5h F8h 0Dh  not defined */
                    /* opcode C5h F8h 0Eh  not defined */
                    /* opcode C5h F8h 0Fh  not defined */
                    /* opcode C5h F8h 10h  not defined */
                    /* opcode C5h F8h 11h  not defined */
                    /* opcode C5h F8h 12h  not defined */
                    /* opcode C5h F8h 13h  not defined */
                    /* opcode C5h F8h 14h  not defined */
                    /* opcode C5h F8h 15h  not defined */
                    /* opcode C5h F8h 16h  not defined */
                    /* opcode C5h F8h 17h  not defined */
                    /* opcode C5h F8h 18h  not defined */
                    /* opcode C5h F8h 19h  not defined */
                    /* opcode C5h F8h 1Ah  not defined */
                    /* opcode C5h F8h 1Bh  not defined */
                    /* opcode C5h F8h 1Ch  not defined */
                    /* opcode C5h F8h 1Dh  not defined */
                    /* opcode C5h F8h 1Eh  not defined */
                    /* opcode C5h F8h 1Fh  not defined */
                    /* opcode C5h F8h 20h  not defined */
                    /* opcode C5h F8h 21h  not defined */
                    /* opcode C5h F8h 22h  not defined */
                    /* opcode C5h F8h 23h  not defined */
                    /* opcode C5h F8h 24h  not defined */
                    /* opcode C5h F8h 25h  not defined */
                    /* opcode C5h F8h 26h  not defined */
                    /* opcode C5h F8h 27h  not defined */
                    /* opcode C5h F8h 28h  not defined */
                    /* opcode C5h F8h 29h  not defined */
                    /* opcode C5h F8h 2Ah  not defined */
                    /* opcode C5h F8h 2Bh  not defined */
                    /* opcode C5h F8h 2Ch  not defined */
                    /* opcode C5h F8h 2Dh  not defined */
                    /* opcode C5h F8h 2Eh  not defined */
                    /* opcode C5h F8h 2Fh  not defined */
                    /* opcode C5h F8h 30h  not defined */
                    /* opcode C5h F8h 31h  not defined */
                    /* opcode C5h F8h 32h  not defined */
                    /* opcode C5h F8h 33h  not defined */
                    /* opcode C5h F8h 34h  not defined */
                    /* opcode C5h F8h 35h  not defined */
                    /* opcode C5h F8h 36h  not defined */
                    /* opcode C5h F8h 37h  not defined */
                    /* opcode C5h F8h 38h  not defined */
                    /* opcode C5h F8h 39h  not defined */
                    /* opcode C5h F8h 3Ah  not defined */
                    /* opcode C5h F8h 3Bh  not defined */
                    /* opcode C5h F8h 3Ch  not defined */
                    /* opcode C5h F8h 3Dh  not defined */
                    /* opcode C5h F8h 3Eh  not defined */
                    /* opcode C5h F8h 3Fh  not defined */
                    /* opcode C5h F8h 40h  not defined */
                    /* opcode C5h F8h 41h  not defined */
                    /* opcode C5h F8h 42h  not defined */
                    /* opcode C5h F8h 43h  not defined */
                    /* opcode C5h F8h 44h  not defined */
                    /* opcode C5h F8h 45h  not defined */
                    /* opcode C5h F8h 46h  not defined */
                    /* opcode C5h F8h 47h  not defined */
                    /* opcode C5h F8h 48h  not defined */
                    /* opcode C5h F8h 49h  not defined */
                    /* opcode C5h F8h 4Ah  not defined */
                    /* opcode C5h F8h 4Bh  not defined */
                    /* opcode C5h F8h 4Ch  not defined */
                    /* opcode C5h F8h 4Dh  not defined */
                    /* opcode C5h F8h 4Eh  not defined */
                    /* opcode C5h F8h 4Fh  not defined */
                    /* opcode C5h F8h 50h  not defined */
                    /* opcode C5h F8h 51h  not defined */
                    /* opcode C5h F8h 52h  not defined */
                    /* opcode C5h F8h 53h  not defined */
                    /* opcode C5h F8h 54h  not defined */
                    /* opcode C5h F8h 55h  not defined */
                    /* opcode C5h F8h 56h  not defined */
                    /* opcode C5h F8h 57h  not defined */
                    case 0x58: /* C5h F8h 58h VADDPS sse(reg),sse(vsidx),sse(r/m)      spec: vex vsize(128) vlead(0x0F) vprefix(none) 0x58 mod/reg/rm */
                        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VADDPS XMM%u,XMM%u,%s",mrm.reg(),vex.V,IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                        break;
                    /* opcode C5h F8h 59h  not defined */
                    /* opcode C5h F8h 5Ah  not defined */
                    /* opcode C5h F8h 5Bh  not defined */
                    /* opcode C5h F8h 5Ch  not defined */
                    /* opcode C5h F8h 5Dh  not defined */
                    /* opcode C5h F8h 5Eh  not defined */
                    /* opcode C5h F8h 5Fh  not defined */
                    /* opcode C5h F8h 60h  not defined */
                    /* opcode C5h F8h 61h  not defined */
                    /* opcode C5h F8h 62h  not defined */
                    /* opcode C5h F8h 63h  not defined */
                    /* opcode C5h F8h 64h  not defined */
                    /* opcode C5h F8h 65h  not defined */
                    /* opcode C5h F8h 66h  not defined */
                    /* opcode C5h F8h 67h  not defined */
                    /* opcode C5h F8h 68h  not defined */
                    /* opcode C5h F8h 69h  not defined */
                    /* opcode C5h F8h 6Ah  not defined */
                    /* opcode C5h F8h 6Bh  not defined */
                    /* opcode C5h F8h 6Ch  not defined */
                    /* opcode C5h F8h 6Dh  not defined */
                    /* opcode C5h F8h 6Eh  not defined */
                    /* opcode C5h F8h 6Fh  not defined */
                    /* opcode C5h F8h 70h  not defined */
                    /* opcode C5h F8h 71h  not defined */
                    /* opcode C5h F8h 72h  not defined */
                    /* opcode C5h F8h 73h  not defined */
                    /* opcode C5h F8h 74h  not defined */
                    /* opcode C5h F8h 75h  not defined */
                    /* opcode C5h F8h 76h  not defined */
                    case 0x77: /* C5h F8h 77h VZEROUPPER       spec: vex vsize(128) vlead(0x0F) vsidx(0) vprefix(none) 0x77 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VZEROUPPER");
                        break;
                    /* opcode C5h F8h 78h  not defined */
                    /* opcode C5h F8h 79h  not defined */
                    /* opcode C5h F8h 7Ah  not defined */
                    /* opcode C5h F8h 7Bh  not defined */
                    /* opcode C5h F8h 7Ch  not defined */
                    /* opcode C5h F8h 7Dh  not defined */
                    /* opcode C5h F8h 7Eh  not defined */
                    /* opcode C5h F8h 7Fh  not defined */
                    /* opcode C5h F8h 80h  not defined */
                    /* opcode C5h F8h 81h  not defined */
                    /* opcode C5h F8h 82h  not defined */
                    /* opcode C5h F8h 83h  not defined */
                    /* opcode C5h F8h 84h  not defined */
                    /* opcode C5h F8h 85h  not defined */
                    /* opcode C5h F8h 86h  not defined */
                    /* opcode C5h F8h 87h  not defined */
                    /* opcode C5h F8h 88h  not defined */
                    /* opcode C5h F8h 89h  not defined */
                    /* opcode C5h F8h 8Ah  not defined */
                    /* opcode C5h F8h 8Bh  not defined */
                    /* opcode C5h F8h 8Ch  not defined */
                    /* opcode C5h F8h 8Dh  not defined */
                    /* opcode C5h F8h 8Eh  not defined */
                    /* opcode C5h F8h 8Fh  not defined */
                    /* opcode C5h F8h 90h  not defined */
                    /* opcode C5h F8h 91h  not defined */
                    /* opcode C5h F8h 92h  not defined */
                    /* opcode C5h F8h 93h  not defined */
                    /* opcode C5h F8h 94h  not defined */
                    /* opcode C5h F8h 95h  not defined */
                    /* opcode C5h F8h 96h  not defined */
                    /* opcode C5h F8h 97h  not defined */
                    /* opcode C5h F8h 98h  not defined */
                    /* opcode C5h F8h 99h  not defined */
                    /* opcode C5h F8h 9Ah  not defined */
                    /* opcode C5h F8h 9Bh  not defined */
                    /* opcode C5h F8h 9Ch  not defined */
                    /* opcode C5h F8h 9Dh  not defined */
                    /* opcode C5h F8h 9Eh  not defined */
                    /* opcode C5h F8h 9Fh  not defined */
                    /* opcode C5h F8h A0h  not defined */
                    /* opcode C5h F8h A1h  not defined */
                    /* opcode C5h F8h A2h  not defined */
                    /* opcode C5h F8h A3h  not defined */
                    /* opcode C5h F8h A4h  not defined */
                    /* opcode C5h F8h A5h  not defined */
                    /* opcode C5h F8h A6h  not defined */
                    /* opcode C5h F8h A7h  not defined */
                    /* opcode C5h F8h A8h  not defined */
                    /* opcode C5h F8h A9h  not defined */
                    /* opcode C5h F8h AAh  not defined */
                    /* opcode C5h F8h ABh  not defined */
                    /* opcode C5h F8h ACh  not defined */
                    /* opcode C5h F8h ADh  not defined */
                    /* opcode C5h F8h AEh  not defined */
                    /* opcode C5h F8h AFh  not defined */
                    /* opcode C5h F8h B0h  not defined */
                    /* opcode C5h F8h B1h  not defined */
                    /* opcode C5h F8h B2h  not defined */
                    /* opcode C5h F8h B3h  not defined */
                    /* opcode C5h F8h B4h  not defined */
                    /* opcode C5h F8h B5h  not defined */
                    /* opcode C5h F8h B6h  not defined */
                    /* opcode C5h F8h B7h  not defined */
                    /* opcode C5h F8h B8h  not defined */
                    /* opcode C5h F8h B9h  not defined */
                    /* opcode C5h F8h BAh  not defined */
                    /* opcode C5h F8h BBh  not defined */
                    /* opcode C5h F8h BCh  not defined */
                    /* opcode C5h F8h BDh  not defined */
                    /* opcode C5h F8h BEh  not defined */
                    /* opcode C5h F8h BFh  not defined */
                    /* opcode C5h F8h C0h  not defined */
                    /* opcode C5h F8h C1h  not defined */
                    /* opcode C5h F8h C2h  not defined */
                    /* opcode C5h F8h C3h  not defined */
                    /* opcode C5h F8h C4h  not defined */
                    /* opcode C5h F8h C5h  not defined */
                    /* opcode C5h F8h C6h  not defined */
                    /* opcode C5h F8h C7h  not defined */
                    /* opcode C5h F8h C8h  not defined */
                    /* opcode C5h F8h C9h  not defined */
                    /* opcode C5h F8h CAh  not defined */
                    /* opcode C5h F8h CBh  not defined */
                    /* opcode C5h F8h CCh  not defined */
                    /* opcode C5h F8h CDh  not defined */
                    /* opcode C5h F8h CEh  not defined */
                    /* opcode C5h F8h CFh  not defined */
                    /* opcode C5h F8h D0h  not defined */
                    /* opcode C5h F8h D1h  not defined */
                    /* opcode C5h F8h D2h  not defined */
                    /* opcode C5h F8h D3h  not defined */
                    /* opcode C5h F8h D4h  not defined */
                    /* opcode C5h F8h D5h  not defined */
                    /* opcode C5h F8h D6h  not defined */
                    /* opcode C5h F8h D7h  not defined */
                    /* opcode C5h F8h D8h  not defined */
                    /* opcode C5h F8h D9h  not defined */
                    /* opcode C5h F8h DAh  not defined */
                    /* opcode C5h F8h DBh  not defined */
                    /* opcode C5h F8h DCh  not defined */
                    /* opcode C5h F8h DDh  not defined */
                    /* opcode C5h F8h DEh  not defined */
                    /* opcode C5h F8h DFh  not defined */
                    /* opcode C5h F8h E0h  not defined */
                    /* opcode C5h F8h E1h  not defined */
                    /* opcode C5h F8h E2h  not defined */
                    /* opcode C5h F8h E3h  not defined */
                    /* opcode C5h F8h E4h  not defined */
                    /* opcode C5h F8h E5h  not defined */
                    /* opcode C5h F8h E6h  not defined */
                    /* opcode C5h F8h E7h  not defined */
                    /* opcode C5h F8h E8h  not defined */
                    /* opcode C5h F8h E9h  not defined */
                    /* opcode C5h F8h EAh  not defined */
                    /* opcode C5h F8h EBh  not defined */
                    /* opcode C5h F8h ECh  not defined */
                    /* opcode C5h F8h EDh  not defined */
                    /* opcode C5h F8h EEh  not defined */
                    /* opcode C5h F8h EFh  not defined */
                    /* opcode C5h F8h F0h  not defined */
                    /* opcode C5h F8h F1h  not defined */
                    /* opcode C5h F8h F2h  not defined */
                    /* opcode C5h F8h F3h  not defined */
                    /* opcode C5h F8h F4h  not defined */
                    /* opcode C5h F8h F5h  not defined */
                    /* opcode C5h F8h F6h  not defined */
                    /* opcode C5h F8h F7h  not defined */
                    /* opcode C5h F8h F8h  not defined */
                    /* opcode C5h F8h F9h  not defined */
                    /* opcode C5h F8h FAh  not defined */
                    /* opcode C5h F8h FBh  not defined */
                    /* opcode C5h F8h FCh  not defined */
                    /* opcode C5h F8h FDh  not defined */
                    /* opcode C5h F8h FEh  not defined */
                    /* opcode C5h F8h FFh  not defined */
                    default:
                        goto _x86decode_illegal_opcode;
                };
/* End of opcodes starting with C5h F8h */
                break;
            /* opcode C5h FAh  not defined */
            /* opcode C5h FBh  not defined */
            case 0xFC: /* C5h FCh   mod=3 reg=7 rm=4      spec:  */
                vex.V = ((~mrm.byte) >> 3) & 7;
/* Opcodes starting with C5h FCh */
                op=IPFB();
                _x86decode_begin_code32_addr32_opcode_parse_C5FC:
                switch (op) {
                    /* opcode C5h FCh 00h  not defined */
                    /* opcode C5h FCh 01h  not defined */
                    /* opcode C5h FCh 02h  not defined */
                    /* opcode C5h FCh 03h  not defined */
                    /* opcode C5h FCh 04h  not defined */
                    /* opcode C5h FCh 05h  not defined */
                    /* opcode C5h FCh 06h  not defined */
                    /* opcode C5h FCh 07h  not defined */
                    /* opcode C5h FCh 08h  not defined */
                    /* opcode C5h FCh 09h  not defined */
                    /* opcode C5h FCh 0Ah  not defined */
                    /* opcode C5h FCh 0Bh  not defined */
                    /* opcode C5h FCh 0Ch  not defined */
                    /* opcode C5h FCh 0Dh  not defined */
                    /* opcode C5h FCh 0Eh  not defined */
                    /* opcode C5h FCh 0Fh  not defined */
                    /* opcode C5h FCh 10h  not defined */
                    /* opcode C5h FCh 11h  not defined */
                    /* opcode C5h FCh 12h  not defined */
                    /* opcode C5h FCh 13h  not defined */
                    /* opcode C5h FCh 14h  not defined */
                    /* opcode C5h FCh 15h  not defined */
                    /* opcode C5h FCh 16h  not defined */
                    /* opcode C5h FCh 17h  not defined */
                    /* opcode C5h FCh 18h  not defined */
                    /* opcode C5h FCh 19h  not defined */
                    /* opcode C5h FCh 1Ah  not defined */
                    /* opcode C5h FCh 1Bh  not defined */
                    /* opcode C5h FCh 1Ch  not defined */
                    /* opcode C5h FCh 1Dh  not defined */
                    /* opcode C5h FCh 1Eh  not defined */
                    /* opcode C5h FCh 1Fh  not defined */
                    /* opcode C5h FCh 20h  not defined */
                    /* opcode C5h FCh 21h  not defined */
                    /* opcode C5h FCh 22h  not defined */
                    /* opcode C5h FCh 23h  not defined */
                    /* opcode C5h FCh 24h  not defined */
                    /* opcode C5h FCh 25h  not defined */
                    /* opcode C5h FCh 26h  not defined */
                    /* opcode C5h FCh 27h  not defined */
                    /* opcode C5h FCh 28h  not defined */
                    /* opcode C5h FCh 29h  not defined */
                    /* opcode C5h FCh 2Ah  not defined */
                    /* opcode C5h FCh 2Bh  not defined */
                    /* opcode C5h FCh 2Ch  not defined */
                    /* opcode C5h FCh 2Dh  not defined */
                    /* opcode C5h FCh 2Eh  not defined */
                    /* opcode C5h FCh 2Fh  not defined */
                    /* opcode C5h FCh 30h  not defined */
                    /* opcode C5h FCh 31h  not defined */
                    /* opcode C5h FCh 32h  not defined */
                    /* opcode C5h FCh 33h  not defined */
                    /* opcode C5h FCh 34h  not defined */
                    /* opcode C5h FCh 35h  not defined */
                    /* opcode C5h FCh 36h  not defined */
                    /* opcode C5h FCh 37h  not defined */
                    /* opcode C5h FCh 38h  not defined */
                    /* opcode C5h FCh 39h  not defined */
                    /* opcode C5h FCh 3Ah  not defined */
                    /* opcode C5h FCh 3Bh  not defined */
                    /* opcode C5h FCh 3Ch  not defined */
                    /* opcode C5h FCh 3Dh  not defined */
                    /* opcode C5h FCh 3Eh  not defined */
                    /* opcode C5h FCh 3Fh  not defined */
                    /* opcode C5h FCh 40h  not defined */
                    /* opcode C5h FCh 41h  not defined */
                    /* opcode C5h FCh 42h  not defined */
                    /* opcode C5h FCh 43h  not defined */
                    /* opcode C5h FCh 44h  not defined */
                    /* opcode C5h FCh 45h  not defined */
                    /* opcode C5h FCh 46h  not defined */
                    /* opcode C5h FCh 47h  not defined */
                    /* opcode C5h FCh 48h  not defined */
                    /* opcode C5h FCh 49h  not defined */
                    /* opcode C5h FCh 4Ah  not defined */
                    /* opcode C5h FCh 4Bh  not defined */
                    /* opcode C5h FCh 4Ch  not defined */
                    /* opcode C5h FCh 4Dh  not defined */
                    /* opcode C5h FCh 4Eh  not defined */
                    /* opcode C5h FCh 4Fh  not defined */
                    /* opcode C5h FCh 50h  not defined */
                    /* opcode C5h FCh 51h  not defined */
                    /* opcode C5h FCh 52h  not defined */
                    /* opcode C5h FCh 53h  not defined */
                    /* opcode C5h FCh 54h  not defined */
                    /* opcode C5h FCh 55h  not defined */
                    /* opcode C5h FCh 56h  not defined */
                    /* opcode C5h FCh 57h  not defined */
                    case 0x58: /* C5h FCh 58h VADDPS avx(reg),avx(vsidx),avx(r/m)      spec: vex vsize(256) vlead(0x0F) vprefix(none) 0x58 mod/reg/rm */
                        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VADDPS YMM%u,YMM%u,%s",mrm.reg(),vex.V,IPDecPrint32(mrm,sib,disp,32,RC_AVXREG,""));
                        break;
                    /* opcode C5h FCh 59h  not defined */
                    /* opcode C5h FCh 5Ah  not defined */
                    /* opcode C5h FCh 5Bh  not defined */
                    /* opcode C5h FCh 5Ch  not defined */
                    /* opcode C5h FCh 5Dh  not defined */
                    /* opcode C5h FCh 5Eh  not defined */
                    /* opcode C5h FCh 5Fh  not defined */
                    /* opcode C5h FCh 60h  not defined */
                    /* opcode C5h FCh 61h  not defined */
                    /* opcode C5h FCh 62h  not defined */
                    /* opcode C5h FCh 63h  not defined */
                    /* opcode C5h FCh 64h  not defined */
                    /* opcode C5h FCh 65h  not defined */
                    /* opcode C5h FCh 66h  not defined */
                    /* opcode C5h FCh 67h  not defined */
                    /* opcode C5h FCh 68h  not defined */
                    /* opcode C5h FCh 69h  not defined */
                    /* opcode C5h FCh 6Ah  not defined */
                    /* opcode C5h FCh 6Bh  not defined */
                    /* opcode C5h FCh 6Ch  not defined */
                    /* opcode C5h FCh 6Dh  not defined */
                    /* opcode C5h FCh 6Eh  not defined */
                    /* opcode C5h FCh 6Fh  not defined */
                    /* opcode C5h FCh 70h  not defined */
                    /* opcode C5h FCh 71h  not defined */
                    /* opcode C5h FCh 72h  not defined */
                    /* opcode C5h FCh 73h  not defined */
                    /* opcode C5h FCh 74h  not defined */
                    /* opcode C5h FCh 75h  not defined */
                    /* opcode C5h FCh 76h  not defined */
                    case 0x77: /* C5h FCh 77h VZEROALL       spec: vex vsize(256) vlead(0x0F) vsidx(0) vprefix(none) 0x77 */
                        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VZEROALL");
                        break;
                    /* opcode C5h FCh 78h  not defined */
                    /* opcode C5h FCh 79h  not defined */
                    /* opcode C5h FCh 7Ah  not defined */
                    /* opcode C5h FCh 7Bh  not defined */
                    /* opcode C5h FCh 7Ch  not defined */
                    /* opcode C5h FCh 7Dh  not defined */
                    /* opcode C5h FCh 7Eh  not defined */
                    /* opcode C5h FCh 7Fh  not defined */
                    /* opcode C5h FCh 80h  not defined */
                    /* opcode C5h FCh 81h  not defined */
                    /* opcode C5h FCh 82h  not defined */
                    /* opcode C5h FCh 83h  not defined */
                    /* opcode C5h FCh 84h  not defined */
                    /* opcode C5h FCh 85h  not defined */
                    /* opcode C5h FCh 86h  not defined */
                    /* opcode C5h FCh 87h  not defined */
                    /* opcode C5h FCh 88h  not defined */
                    /* opcode C5h FCh 89h  not defined */
                    /* opcode C5h FCh 8Ah  not defined */
                    /* opcode C5h FCh 8Bh  not defined */
                    /* opcode C5h FCh 8Ch  not defined */
                    /* opcode C5h FCh 8Dh  not defined */
                    /* opcode C5h FCh 8Eh  not defined */
                    /* opcode C5h FCh 8Fh  not defined */
                    /* opcode C5h FCh 90h  not defined */
                    /* opcode C5h FCh 91h  not defined */
                    /* opcode C5h FCh 92h  not defined */
                    /* opcode C5h FCh 93h  not defined */
                    /* opcode C5h FCh 94h  not defined */
                    /* opcode C5h FCh 95h  not defined */
                    /* opcode C5h FCh 96h  not defined */
                    /* opcode C5h FCh 97h  not defined */
                    /* opcode C5h FCh 98h  not defined */
                    /* opcode C5h FCh 99h  not defined */
                    /* opcode C5h FCh 9Ah  not defined */
                    /* opcode C5h FCh 9Bh  not defined */
                    /* opcode C5h FCh 9Ch  not defined */
                    /* opcode C5h FCh 9Dh  not defined */
                    /* opcode C5h FCh 9Eh  not defined */
                    /* opcode C5h FCh 9Fh  not defined */
                    /* opcode C5h FCh A0h  not defined */
                    /* opcode C5h FCh A1h  not defined */
                    /* opcode C5h FCh A2h  not defined */
                    /* opcode C5h FCh A3h  not defined */
                    /* opcode C5h FCh A4h  not defined */
                    /* opcode C5h FCh A5h  not defined */
                    /* opcode C5h FCh A6h  not defined */
                    /* opcode C5h FCh A7h  not defined */
                    /* opcode C5h FCh A8h  not defined */
                    /* opcode C5h FCh A9h  not defined */
                    /* opcode C5h FCh AAh  not defined */
                    /* opcode C5h FCh ABh  not defined */
                    /* opcode C5h FCh ACh  not defined */
                    /* opcode C5h FCh ADh  not defined */
                    /* opcode C5h FCh AEh  not defined */
                    /* opcode C5h FCh AFh  not defined */
                    /* opcode C5h FCh B0h  not defined */
                    /* opcode C5h FCh B1h  not defined */
                    /* opcode C5h FCh B2h  not defined */
                    /* opcode C5h FCh B3h  not defined */
                    /* opcode C5h FCh B4h  not defined */
                    /* opcode C5h FCh B5h  not defined */
                    /* opcode C5h FCh B6h  not defined */
                    /* opcode C5h FCh B7h  not defined */
                    /* opcode C5h FCh B8h  not defined */
                    /* opcode C5h FCh B9h  not defined */
                    /* opcode C5h FCh BAh  not defined */
                    /* opcode C5h FCh BBh  not defined */
                    /* opcode C5h FCh BCh  not defined */
                    /* opcode C5h FCh BDh  not defined */
                    /* opcode C5h FCh BEh  not defined */
                    /* opcode C5h FCh BFh  not defined */
                    /* opcode C5h FCh C0h  not defined */
                    /* opcode C5h FCh C1h  not defined */
                    /* opcode C5h FCh C2h  not defined */
                    /* opcode C5h FCh C3h  not defined */
                    /* opcode C5h FCh C4h  not defined */
                    /* opcode C5h FCh C5h  not defined */
                    /* opcode C5h FCh C6h  not defined */
                    /* opcode C5h FCh C7h  not defined */
                    /* opcode C5h FCh C8h  not defined */
                    /* opcode C5h FCh C9h  not defined */
                    /* opcode C5h FCh CAh  not defined */
                    /* opcode C5h FCh CBh  not defined */
                    /* opcode C5h FCh CCh  not defined */
                    /* opcode C5h FCh CDh  not defined */
                    /* opcode C5h FCh CEh  not defined */
                    /* opcode C5h FCh CFh  not defined */
                    /* opcode C5h FCh D0h  not defined */
                    /* opcode C5h FCh D1h  not defined */
                    /* opcode C5h FCh D2h  not defined */
                    /* opcode C5h FCh D3h  not defined */
                    /* opcode C5h FCh D4h  not defined */
                    /* opcode C5h FCh D5h  not defined */
                    /* opcode C5h FCh D6h  not defined */
                    /* opcode C5h FCh D7h  not defined */
                    /* opcode C5h FCh D8h  not defined */
                    /* opcode C5h FCh D9h  not defined */
                    /* opcode C5h FCh DAh  not defined */
                    /* opcode C5h FCh DBh  not defined */
                    /* opcode C5h FCh DCh  not defined */
                    /* opcode C5h FCh DDh  not defined */
                    /* opcode C5h FCh DEh  not defined */
                    /* opcode C5h FCh DFh  not defined */
                    /* opcode C5h FCh E0h  not defined */
                    /* opcode C5h FCh E1h  not defined */
                    /* opcode C5h FCh E2h  not defined */
                    /* opcode C5h FCh E3h  not defined */
                    /* opcode C5h FCh E4h  not defined */
                    /* opcode C5h FCh E5h  not defined */
                    /* opcode C5h FCh E6h  not defined */
                    /* opcode C5h FCh E7h  not defined */
                    /* opcode C5h FCh E8h  not defined */
                    /* opcode C5h FCh E9h  not defined */
                    /* opcode C5h FCh EAh  not defined */
                    /* opcode C5h FCh EBh  not defined */
                    /* opcode C5h FCh ECh  not defined */
                    /* opcode C5h FCh EDh  not defined */
                    /* opcode C5h FCh EEh  not defined */
                    /* opcode C5h FCh EFh  not defined */
                    /* opcode C5h FCh F0h  not defined */
                    /* opcode C5h FCh F1h  not defined */
                    /* opcode C5h FCh F2h  not defined */
                    /* opcode C5h FCh F3h  not defined */
                    /* opcode C5h FCh F4h  not defined */
                    /* opcode C5h FCh F5h  not defined */
                    /* opcode C5h FCh F6h  not defined */
                    /* opcode C5h FCh F7h  not defined */
                    /* opcode C5h FCh F8h  not defined */
                    /* opcode C5h FCh F9h  not defined */
                    /* opcode C5h FCh FAh  not defined */
                    /* opcode C5h FCh FBh  not defined */
                    /* opcode C5h FCh FCh  not defined */
                    /* opcode C5h FCh FDh  not defined */
                    /* opcode C5h FCh FEh  not defined */
                    /* opcode C5h FCh FFh  not defined */
                    default:
                        goto _x86decode_illegal_opcode;
                };
/* End of opcodes starting with C5h FCh */
                break;
            /* opcode C5h FEh  not defined */
            /* opcode C5h FFh  not defined */
            default:
                goto _x86decode_illegal_opcode;
        };
/* End of opcodes starting with C5h */
        break;
    case 0xC6: /* C6h        spec:  */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        _x86decode_begin_code32_addr32_opcode_parse_C6:
/* Opcodes starting with C6h */
        switch (mrm.reg()) {
            case 0: /* C6h 00h MOVb b(r/m),i reg=0      spec: 0xC6 mod/reg/rm /0 ib */
                imm=IPFB();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVb %s,0x%02lX",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),(unsigned long)((uint32_t)imm));
                break;
            /* reg 1 not defined */
            /* reg 2 not defined */
            /* reg 3 not defined */
            /* reg 4 not defined */
            /* reg 5 not defined */
            /* reg 6 not defined */
            /* reg 7 not defined */
            default:
                goto _x86decode_illegal_opcode;
        };
/* End of opcodes starting with C6h */
        break;
    case 0xC7: /* C7h        spec:  */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        _x86decode_begin_code32_addr32_opcode_parse_C7:
/* Opcodes starting with C7h */
        switch (mrm.reg()) {
            case 0: /* C7h 00h MOVd w(r/m),i reg=0      spec: 0xC7 mod/reg/rm /0 iw */
                imm=IPFcodeW();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVd %s,0x%08lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
                break;
            /* reg 1 not defined */
            /* reg 2 not defined */
            /* reg 3 not defined */
            /* reg 4 not defined */
            /* reg 5 not defined */
            /* reg 6 not defined */
            /* reg 7 not defined */
            default:
                goto _x86decode_illegal_opcode;
        };
/* End of opcodes starting with C7h */
        break;
    case 0xC8: /* C8h ENTERd w(i),b(i2)      spec: 0xC8 iw ib */
        imm=IPFcodeW();
        imm2=IPFB();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ENTERd 0x%08lX,0x%02lX",(unsigned long)((uint32_t)imm),(unsigned long)((uint32_t)imm2));
        break;
    case 0xC9: /* C9h LEAVEd       spec: 0xC9 */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"LEAVEd");
        break;
    case 0xCA: /* CAh RETFd i      spec: 0xCA iw16 */
        imm=IPFW();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"RETFd 0x%04lX",(unsigned long)((uint32_t)imm));
        break;
    case 0xCB: /* CBh RETFd       spec: 0xCB */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"RETFd");
        break;
    case 0xCC: /* CCh INT3d       spec: 0xCC */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"INT3d");
        break;
    case 0xCD: /* CDh INTd i      spec: 0xCD ib */
        imm=IPFB();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"INTd 0x%02lX",(unsigned long)((uint32_t)imm));
        break;
    case 0xCE: /* CEh INTOd       spec: 0xCE */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"INTOd");
        break;
    case 0xCF: /* CFh IRETd       spec: 0xCF */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"IRETd");
        break;
    case 0xD0: /* D0h        spec:  */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        _x86decode_begin_code32_addr32_opcode_parse_D0:
/* Opcodes starting with D0h */
        switch (mrm.reg()) {
            case 0: /* D0h 00h ROLb b(r/m),1 reg=0      spec: 0xD0 mod/reg/rm /0 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ROLb %s,1",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 1: /* D0h 08h RORb b(r/m),1 reg=1      spec: 0xD0 mod/reg/rm /1 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"RORb %s,1",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 2: /* D0h 10h RCLb b(r/m),1 reg=2      spec: 0xD0 mod/reg/rm /2 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"RCLb %s,1",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 3: /* D0h 18h RCRb b(r/m),1 reg=3      spec: 0xD0 mod/reg/rm /3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"RCRb %s,1",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 4: /* D0h 20h SHLb b(r/m),1 reg=4      spec: 0xD0 mod/reg/rm /4 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SHLb %s,1",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 5: /* D0h 28h SHRb b(r/m),1 reg=5      spec: 0xD0 mod/reg/rm /5 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SHRb %s,1",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 6: /* D0h 30h SALb b(r/m),1 reg=6      spec: 0xD0 mod/reg/rm /6 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SALb %s,1",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 7: /* D0h 38h SARb b(r/m),1 reg=7      spec: 0xD0 mod/reg/rm /7 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SARb %s,1",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            default:
                goto _x86decode_illegal_opcode;
        };
/* End of opcodes starting with D0h */
        break;
    case 0xD1: /* D1h        spec:  */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        _x86decode_begin_code32_addr32_opcode_parse_D1:
/* Opcodes starting with D1h */
        switch (mrm.reg()) {
            case 0: /* D1h 00h ROLd w(r/m),1 reg=0      spec: 0xD1 mod/reg/rm /0 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ROLd %s,1",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 1: /* D1h 08h RORd w(r/m),1 reg=1      spec: 0xD1 mod/reg/rm /1 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"RORd %s,1",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 2: /* D1h 10h RCLd w(r/m),1 reg=2      spec: 0xD1 mod/reg/rm /2 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"RCLd %s,1",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 3: /* D1h 18h RCRd w(r/m),1 reg=3      spec: 0xD1 mod/reg/rm /3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"RCRd %s,1",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 4: /* D1h 20h SHLd w(r/m),1 reg=4      spec: 0xD1 mod/reg/rm /4 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SHLd %s,1",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 5: /* D1h 28h SHRd w(r/m),1 reg=5      spec: 0xD1 mod/reg/rm /5 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SHRd %s,1",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 6: /* D1h 30h SALd w(r/m),1 reg=6      spec: 0xD1 mod/reg/rm /6 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SALd %s,1",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 7: /* D1h 38h SARd w(r/m),1 reg=7      spec: 0xD1 mod/reg/rm /7 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SARd %s,1",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            default:
                goto _x86decode_illegal_opcode;
        };
/* End of opcodes starting with D1h */
        break;
    case 0xD2: /* D2h        spec:  */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        _x86decode_begin_code32_addr32_opcode_parse_D2:
/* Opcodes starting with D2h */
        switch (mrm.reg()) {
            case 0: /* D2h 00h ROLb b(r/m),b(c) reg=0      spec: 0xD2 mod/reg/rm /0 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ROLb %s,%s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),CPUregsN[1][1]);
                break;
            case 1: /* D2h 08h RORb b(r/m),b(c) reg=1      spec: 0xD2 mod/reg/rm /1 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"RORb %s,%s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),CPUregsN[1][1]);
                break;
            case 2: /* D2h 10h RCLb b(r/m),b(c) reg=2      spec: 0xD2 mod/reg/rm /2 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"RCLb %s,%s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),CPUregsN[1][1]);
                break;
            case 3: /* D2h 18h RCRb b(r/m),b(c) reg=3      spec: 0xD2 mod/reg/rm /3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"RCRb %s,%s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),CPUregsN[1][1]);
                break;
            case 4: /* D2h 20h SHLb b(r/m),b(c) reg=4      spec: 0xD2 mod/reg/rm /4 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SHLb %s,%s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),CPUregsN[1][1]);
                break;
            case 5: /* D2h 28h SHRb b(r/m),b(c) reg=5      spec: 0xD2 mod/reg/rm /5 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SHRb %s,%s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),CPUregsN[1][1]);
                break;
            case 6: /* D2h 30h SALb b(r/m),b(c) reg=6      spec: 0xD2 mod/reg/rm /6 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SALb %s,%s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),CPUregsN[1][1]);
                break;
            case 7: /* D2h 38h SARb b(r/m),b(c) reg=7      spec: 0xD2 mod/reg/rm /7 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SARb %s,%s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),CPUregsN[1][1]);
                break;
            default:
                goto _x86decode_illegal_opcode;
        };
/* End of opcodes starting with D2h */
        break;
    case 0xD3: /* D3h        spec:  */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        _x86decode_begin_code32_addr32_opcode_parse_D3:
/* Opcodes starting with D3h */
        switch (mrm.reg()) {
            case 0: /* D3h 00h ROLd w(r/m),b(c) reg=0      spec: 0xD3 mod/reg/rm /0 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ROLd %s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[1][1]);
                break;
            case 1: /* D3h 08h RORd w(r/m),b(c) reg=1      spec: 0xD3 mod/reg/rm /1 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"RORd %s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[1][1]);
                break;
            case 2: /* D3h 10h RCLd w(r/m),b(c) reg=2      spec: 0xD3 mod/reg/rm /2 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"RCLd %s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[1][1]);
                break;
            case 3: /* D3h 18h RCRd w(r/m),b(c) reg=3      spec: 0xD3 mod/reg/rm /3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"RCRd %s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[1][1]);
                break;
            case 4: /* D3h 20h SHLd w(r/m),b(c) reg=4      spec: 0xD3 mod/reg/rm /4 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SHLd %s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[1][1]);
                break;
            case 5: /* D3h 28h SHRd w(r/m),b(c) reg=5      spec: 0xD3 mod/reg/rm /5 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SHRd %s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[1][1]);
                break;
            case 6: /* D3h 30h SALd w(r/m),b(c) reg=6      spec: 0xD3 mod/reg/rm /6 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SALd %s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[1][1]);
                break;
            case 7: /* D3h 38h SARd w(r/m),b(c) reg=7      spec: 0xD3 mod/reg/rm /7 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SARd %s,%s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),CPUregsN[1][1]);
                break;
            default:
                goto _x86decode_illegal_opcode;
        };
/* End of opcodes starting with D3h */
        break;
    case 0xD4: /* D4h AAMb i      spec: 0xD4 ib */
        imm=IPFB();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"AAMb 0x%02lX",(unsigned long)((uint32_t)imm));
        break;
    case 0xD5: /* D5h AADb i      spec: 0xD5 ib */
        imm=IPFB();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"AADb 0x%02lX",(unsigned long)((uint32_t)imm));
        break;
    case 0xD6: /* D6h SALCb       spec: 0xD6 */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SALCb");
        break;
    case 0xD7: /* D7h XLATb       spec: 0xD7 */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"XLATb");
        break;
    case 0xD8: /* D8h        spec:  */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        _x86decode_begin_code32_addr32_opcode_parse_D8:
/* Opcodes starting with D8h */
        switch (mrm.byte) {
            case 0x00: /* D8h 00h FADDf32 f32(r/m) mod=0 reg=0 rm=0      spec: 0xD8 mod/reg/rm /0 mod!=3 */
            case 0x01: /* D8h 01h FADDf32 f32(r/m) mod=0 reg=0 rm=1      spec: 0xD8 mod/reg/rm /0 mod!=3 */
            case 0x02: /* D8h 02h FADDf32 f32(r/m) mod=0 reg=0 rm=2      spec: 0xD8 mod/reg/rm /0 mod!=3 */
            case 0x03: /* D8h 03h FADDf32 f32(r/m) mod=0 reg=0 rm=3      spec: 0xD8 mod/reg/rm /0 mod!=3 */
            case 0x04: /* D8h 04h FADDf32 f32(r/m) mod=0 reg=0 rm=4      spec: 0xD8 mod/reg/rm /0 mod!=3 */
            case 0x05: /* D8h 05h FADDf32 f32(r/m) mod=0 reg=0 rm=5      spec: 0xD8 mod/reg/rm /0 mod!=3 */
            case 0x06: /* D8h 06h FADDf32 f32(r/m) mod=0 reg=0 rm=6      spec: 0xD8 mod/reg/rm /0 mod!=3 */
            case 0x07: /* D8h 07h FADDf32 f32(r/m) mod=0 reg=0 rm=7      spec: 0xD8 mod/reg/rm /0 mod!=3 */
            case 0x40: /* D8h 40h FADDf32 f32(r/m) mod=1 reg=0 rm=0      spec: 0xD8 mod/reg/rm /0 mod!=3 */
            case 0x41: /* D8h 41h FADDf32 f32(r/m) mod=1 reg=0 rm=1      spec: 0xD8 mod/reg/rm /0 mod!=3 */
            case 0x42: /* D8h 42h FADDf32 f32(r/m) mod=1 reg=0 rm=2      spec: 0xD8 mod/reg/rm /0 mod!=3 */
            case 0x43: /* D8h 43h FADDf32 f32(r/m) mod=1 reg=0 rm=3      spec: 0xD8 mod/reg/rm /0 mod!=3 */
            case 0x44: /* D8h 44h FADDf32 f32(r/m) mod=1 reg=0 rm=4      spec: 0xD8 mod/reg/rm /0 mod!=3 */
            case 0x45: /* D8h 45h FADDf32 f32(r/m) mod=1 reg=0 rm=5      spec: 0xD8 mod/reg/rm /0 mod!=3 */
            case 0x46: /* D8h 46h FADDf32 f32(r/m) mod=1 reg=0 rm=6      spec: 0xD8 mod/reg/rm /0 mod!=3 */
            case 0x47: /* D8h 47h FADDf32 f32(r/m) mod=1 reg=0 rm=7      spec: 0xD8 mod/reg/rm /0 mod!=3 */
            case 0x80: /* D8h 80h FADDf32 f32(r/m) mod=2 reg=0 rm=0      spec: 0xD8 mod/reg/rm /0 mod!=3 */
            case 0x81: /* D8h 81h FADDf32 f32(r/m) mod=2 reg=0 rm=1      spec: 0xD8 mod/reg/rm /0 mod!=3 */
            case 0x82: /* D8h 82h FADDf32 f32(r/m) mod=2 reg=0 rm=2      spec: 0xD8 mod/reg/rm /0 mod!=3 */
            case 0x83: /* D8h 83h FADDf32 f32(r/m) mod=2 reg=0 rm=3      spec: 0xD8 mod/reg/rm /0 mod!=3 */
            case 0x84: /* D8h 84h FADDf32 f32(r/m) mod=2 reg=0 rm=4      spec: 0xD8 mod/reg/rm /0 mod!=3 */
            case 0x85: /* D8h 85h FADDf32 f32(r/m) mod=2 reg=0 rm=5      spec: 0xD8 mod/reg/rm /0 mod!=3 */
            case 0x86: /* D8h 86h FADDf32 f32(r/m) mod=2 reg=0 rm=6      spec: 0xD8 mod/reg/rm /0 mod!=3 */
            case 0x87: /* D8h 87h FADDf32 f32(r/m) mod=2 reg=0 rm=7      spec: 0xD8 mod/reg/rm /0 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FADDf32 %s",IPDecPrint32(mrm,sib,disp,4,RC_FPUREG,"f32"));
                break;
            case 0x08: /* D8h 08h FMULf32 f32(r/m) mod=0 reg=1 rm=0      spec: 0xD8 mod/reg/rm /1 mod!=3 */
            case 0x09: /* D8h 09h FMULf32 f32(r/m) mod=0 reg=1 rm=1      spec: 0xD8 mod/reg/rm /1 mod!=3 */
            case 0x0A: /* D8h 0Ah FMULf32 f32(r/m) mod=0 reg=1 rm=2      spec: 0xD8 mod/reg/rm /1 mod!=3 */
            case 0x0B: /* D8h 0Bh FMULf32 f32(r/m) mod=0 reg=1 rm=3      spec: 0xD8 mod/reg/rm /1 mod!=3 */
            case 0x0C: /* D8h 0Ch FMULf32 f32(r/m) mod=0 reg=1 rm=4      spec: 0xD8 mod/reg/rm /1 mod!=3 */
            case 0x0D: /* D8h 0Dh FMULf32 f32(r/m) mod=0 reg=1 rm=5      spec: 0xD8 mod/reg/rm /1 mod!=3 */
            case 0x0E: /* D8h 0Eh FMULf32 f32(r/m) mod=0 reg=1 rm=6      spec: 0xD8 mod/reg/rm /1 mod!=3 */
            case 0x0F: /* D8h 0Fh FMULf32 f32(r/m) mod=0 reg=1 rm=7      spec: 0xD8 mod/reg/rm /1 mod!=3 */
            case 0x48: /* D8h 48h FMULf32 f32(r/m) mod=1 reg=1 rm=0      spec: 0xD8 mod/reg/rm /1 mod!=3 */
            case 0x49: /* D8h 49h FMULf32 f32(r/m) mod=1 reg=1 rm=1      spec: 0xD8 mod/reg/rm /1 mod!=3 */
            case 0x4A: /* D8h 4Ah FMULf32 f32(r/m) mod=1 reg=1 rm=2      spec: 0xD8 mod/reg/rm /1 mod!=3 */
            case 0x4B: /* D8h 4Bh FMULf32 f32(r/m) mod=1 reg=1 rm=3      spec: 0xD8 mod/reg/rm /1 mod!=3 */
            case 0x4C: /* D8h 4Ch FMULf32 f32(r/m) mod=1 reg=1 rm=4      spec: 0xD8 mod/reg/rm /1 mod!=3 */
            case 0x4D: /* D8h 4Dh FMULf32 f32(r/m) mod=1 reg=1 rm=5      spec: 0xD8 mod/reg/rm /1 mod!=3 */
            case 0x4E: /* D8h 4Eh FMULf32 f32(r/m) mod=1 reg=1 rm=6      spec: 0xD8 mod/reg/rm /1 mod!=3 */
            case 0x4F: /* D8h 4Fh FMULf32 f32(r/m) mod=1 reg=1 rm=7      spec: 0xD8 mod/reg/rm /1 mod!=3 */
            case 0x88: /* D8h 88h FMULf32 f32(r/m) mod=2 reg=1 rm=0      spec: 0xD8 mod/reg/rm /1 mod!=3 */
            case 0x89: /* D8h 89h FMULf32 f32(r/m) mod=2 reg=1 rm=1      spec: 0xD8 mod/reg/rm /1 mod!=3 */
            case 0x8A: /* D8h 8Ah FMULf32 f32(r/m) mod=2 reg=1 rm=2      spec: 0xD8 mod/reg/rm /1 mod!=3 */
            case 0x8B: /* D8h 8Bh FMULf32 f32(r/m) mod=2 reg=1 rm=3      spec: 0xD8 mod/reg/rm /1 mod!=3 */
            case 0x8C: /* D8h 8Ch FMULf32 f32(r/m) mod=2 reg=1 rm=4      spec: 0xD8 mod/reg/rm /1 mod!=3 */
            case 0x8D: /* D8h 8Dh FMULf32 f32(r/m) mod=2 reg=1 rm=5      spec: 0xD8 mod/reg/rm /1 mod!=3 */
            case 0x8E: /* D8h 8Eh FMULf32 f32(r/m) mod=2 reg=1 rm=6      spec: 0xD8 mod/reg/rm /1 mod!=3 */
            case 0x8F: /* D8h 8Fh FMULf32 f32(r/m) mod=2 reg=1 rm=7      spec: 0xD8 mod/reg/rm /1 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FMULf32 %s",IPDecPrint32(mrm,sib,disp,4,RC_FPUREG,"f32"));
                break;
            case 0x10: /* D8h 10h FCOMf32 f32(r/m) mod=0 reg=2 rm=0      spec: 0xD8 mod/reg/rm /2 mod!=3 */
            case 0x11: /* D8h 11h FCOMf32 f32(r/m) mod=0 reg=2 rm=1      spec: 0xD8 mod/reg/rm /2 mod!=3 */
            case 0x12: /* D8h 12h FCOMf32 f32(r/m) mod=0 reg=2 rm=2      spec: 0xD8 mod/reg/rm /2 mod!=3 */
            case 0x13: /* D8h 13h FCOMf32 f32(r/m) mod=0 reg=2 rm=3      spec: 0xD8 mod/reg/rm /2 mod!=3 */
            case 0x14: /* D8h 14h FCOMf32 f32(r/m) mod=0 reg=2 rm=4      spec: 0xD8 mod/reg/rm /2 mod!=3 */
            case 0x15: /* D8h 15h FCOMf32 f32(r/m) mod=0 reg=2 rm=5      spec: 0xD8 mod/reg/rm /2 mod!=3 */
            case 0x16: /* D8h 16h FCOMf32 f32(r/m) mod=0 reg=2 rm=6      spec: 0xD8 mod/reg/rm /2 mod!=3 */
            case 0x17: /* D8h 17h FCOMf32 f32(r/m) mod=0 reg=2 rm=7      spec: 0xD8 mod/reg/rm /2 mod!=3 */
            case 0x50: /* D8h 50h FCOMf32 f32(r/m) mod=1 reg=2 rm=0      spec: 0xD8 mod/reg/rm /2 mod!=3 */
            case 0x51: /* D8h 51h FCOMf32 f32(r/m) mod=1 reg=2 rm=1      spec: 0xD8 mod/reg/rm /2 mod!=3 */
            case 0x52: /* D8h 52h FCOMf32 f32(r/m) mod=1 reg=2 rm=2      spec: 0xD8 mod/reg/rm /2 mod!=3 */
            case 0x53: /* D8h 53h FCOMf32 f32(r/m) mod=1 reg=2 rm=3      spec: 0xD8 mod/reg/rm /2 mod!=3 */
            case 0x54: /* D8h 54h FCOMf32 f32(r/m) mod=1 reg=2 rm=4      spec: 0xD8 mod/reg/rm /2 mod!=3 */
            case 0x55: /* D8h 55h FCOMf32 f32(r/m) mod=1 reg=2 rm=5      spec: 0xD8 mod/reg/rm /2 mod!=3 */
            case 0x56: /* D8h 56h FCOMf32 f32(r/m) mod=1 reg=2 rm=6      spec: 0xD8 mod/reg/rm /2 mod!=3 */
            case 0x57: /* D8h 57h FCOMf32 f32(r/m) mod=1 reg=2 rm=7      spec: 0xD8 mod/reg/rm /2 mod!=3 */
            case 0x90: /* D8h 90h FCOMf32 f32(r/m) mod=2 reg=2 rm=0      spec: 0xD8 mod/reg/rm /2 mod!=3 */
            case 0x91: /* D8h 91h FCOMf32 f32(r/m) mod=2 reg=2 rm=1      spec: 0xD8 mod/reg/rm /2 mod!=3 */
            case 0x92: /* D8h 92h FCOMf32 f32(r/m) mod=2 reg=2 rm=2      spec: 0xD8 mod/reg/rm /2 mod!=3 */
            case 0x93: /* D8h 93h FCOMf32 f32(r/m) mod=2 reg=2 rm=3      spec: 0xD8 mod/reg/rm /2 mod!=3 */
            case 0x94: /* D8h 94h FCOMf32 f32(r/m) mod=2 reg=2 rm=4      spec: 0xD8 mod/reg/rm /2 mod!=3 */
            case 0x95: /* D8h 95h FCOMf32 f32(r/m) mod=2 reg=2 rm=5      spec: 0xD8 mod/reg/rm /2 mod!=3 */
            case 0x96: /* D8h 96h FCOMf32 f32(r/m) mod=2 reg=2 rm=6      spec: 0xD8 mod/reg/rm /2 mod!=3 */
            case 0x97: /* D8h 97h FCOMf32 f32(r/m) mod=2 reg=2 rm=7      spec: 0xD8 mod/reg/rm /2 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FCOMf32 %s",IPDecPrint32(mrm,sib,disp,4,RC_FPUREG,"f32"));
                break;
            case 0x18: /* D8h 18h FCOMPf32 f32(r/m) mod=0 reg=3 rm=0      spec: 0xD8 mod/reg/rm /3 mod!=3 */
            case 0x19: /* D8h 19h FCOMPf32 f32(r/m) mod=0 reg=3 rm=1      spec: 0xD8 mod/reg/rm /3 mod!=3 */
            case 0x1A: /* D8h 1Ah FCOMPf32 f32(r/m) mod=0 reg=3 rm=2      spec: 0xD8 mod/reg/rm /3 mod!=3 */
            case 0x1B: /* D8h 1Bh FCOMPf32 f32(r/m) mod=0 reg=3 rm=3      spec: 0xD8 mod/reg/rm /3 mod!=3 */
            case 0x1C: /* D8h 1Ch FCOMPf32 f32(r/m) mod=0 reg=3 rm=4      spec: 0xD8 mod/reg/rm /3 mod!=3 */
            case 0x1D: /* D8h 1Dh FCOMPf32 f32(r/m) mod=0 reg=3 rm=5      spec: 0xD8 mod/reg/rm /3 mod!=3 */
            case 0x1E: /* D8h 1Eh FCOMPf32 f32(r/m) mod=0 reg=3 rm=6      spec: 0xD8 mod/reg/rm /3 mod!=3 */
            case 0x1F: /* D8h 1Fh FCOMPf32 f32(r/m) mod=0 reg=3 rm=7      spec: 0xD8 mod/reg/rm /3 mod!=3 */
            case 0x58: /* D8h 58h FCOMPf32 f32(r/m) mod=1 reg=3 rm=0      spec: 0xD8 mod/reg/rm /3 mod!=3 */
            case 0x59: /* D8h 59h FCOMPf32 f32(r/m) mod=1 reg=3 rm=1      spec: 0xD8 mod/reg/rm /3 mod!=3 */
            case 0x5A: /* D8h 5Ah FCOMPf32 f32(r/m) mod=1 reg=3 rm=2      spec: 0xD8 mod/reg/rm /3 mod!=3 */
            case 0x5B: /* D8h 5Bh FCOMPf32 f32(r/m) mod=1 reg=3 rm=3      spec: 0xD8 mod/reg/rm /3 mod!=3 */
            case 0x5C: /* D8h 5Ch FCOMPf32 f32(r/m) mod=1 reg=3 rm=4      spec: 0xD8 mod/reg/rm /3 mod!=3 */
            case 0x5D: /* D8h 5Dh FCOMPf32 f32(r/m) mod=1 reg=3 rm=5      spec: 0xD8 mod/reg/rm /3 mod!=3 */
            case 0x5E: /* D8h 5Eh FCOMPf32 f32(r/m) mod=1 reg=3 rm=6      spec: 0xD8 mod/reg/rm /3 mod!=3 */
            case 0x5F: /* D8h 5Fh FCOMPf32 f32(r/m) mod=1 reg=3 rm=7      spec: 0xD8 mod/reg/rm /3 mod!=3 */
            case 0x98: /* D8h 98h FCOMPf32 f32(r/m) mod=2 reg=3 rm=0      spec: 0xD8 mod/reg/rm /3 mod!=3 */
            case 0x99: /* D8h 99h FCOMPf32 f32(r/m) mod=2 reg=3 rm=1      spec: 0xD8 mod/reg/rm /3 mod!=3 */
            case 0x9A: /* D8h 9Ah FCOMPf32 f32(r/m) mod=2 reg=3 rm=2      spec: 0xD8 mod/reg/rm /3 mod!=3 */
            case 0x9B: /* D8h 9Bh FCOMPf32 f32(r/m) mod=2 reg=3 rm=3      spec: 0xD8 mod/reg/rm /3 mod!=3 */
            case 0x9C: /* D8h 9Ch FCOMPf32 f32(r/m) mod=2 reg=3 rm=4      spec: 0xD8 mod/reg/rm /3 mod!=3 */
            case 0x9D: /* D8h 9Dh FCOMPf32 f32(r/m) mod=2 reg=3 rm=5      spec: 0xD8 mod/reg/rm /3 mod!=3 */
            case 0x9E: /* D8h 9Eh FCOMPf32 f32(r/m) mod=2 reg=3 rm=6      spec: 0xD8 mod/reg/rm /3 mod!=3 */
            case 0x9F: /* D8h 9Fh FCOMPf32 f32(r/m) mod=2 reg=3 rm=7      spec: 0xD8 mod/reg/rm /3 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FCOMPf32 %s",IPDecPrint32(mrm,sib,disp,4,RC_FPUREG,"f32"));
                break;
            case 0x20: /* D8h 20h FSUBf32 f32(r/m) mod=0 reg=4 rm=0      spec: 0xD8 mod/reg/rm /4 mod!=3 */
            case 0x21: /* D8h 21h FSUBf32 f32(r/m) mod=0 reg=4 rm=1      spec: 0xD8 mod/reg/rm /4 mod!=3 */
            case 0x22: /* D8h 22h FSUBf32 f32(r/m) mod=0 reg=4 rm=2      spec: 0xD8 mod/reg/rm /4 mod!=3 */
            case 0x23: /* D8h 23h FSUBf32 f32(r/m) mod=0 reg=4 rm=3      spec: 0xD8 mod/reg/rm /4 mod!=3 */
            case 0x24: /* D8h 24h FSUBf32 f32(r/m) mod=0 reg=4 rm=4      spec: 0xD8 mod/reg/rm /4 mod!=3 */
            case 0x25: /* D8h 25h FSUBf32 f32(r/m) mod=0 reg=4 rm=5      spec: 0xD8 mod/reg/rm /4 mod!=3 */
            case 0x26: /* D8h 26h FSUBf32 f32(r/m) mod=0 reg=4 rm=6      spec: 0xD8 mod/reg/rm /4 mod!=3 */
            case 0x27: /* D8h 27h FSUBf32 f32(r/m) mod=0 reg=4 rm=7      spec: 0xD8 mod/reg/rm /4 mod!=3 */
            case 0x60: /* D8h 60h FSUBf32 f32(r/m) mod=1 reg=4 rm=0      spec: 0xD8 mod/reg/rm /4 mod!=3 */
            case 0x61: /* D8h 61h FSUBf32 f32(r/m) mod=1 reg=4 rm=1      spec: 0xD8 mod/reg/rm /4 mod!=3 */
            case 0x62: /* D8h 62h FSUBf32 f32(r/m) mod=1 reg=4 rm=2      spec: 0xD8 mod/reg/rm /4 mod!=3 */
            case 0x63: /* D8h 63h FSUBf32 f32(r/m) mod=1 reg=4 rm=3      spec: 0xD8 mod/reg/rm /4 mod!=3 */
            case 0x64: /* D8h 64h FSUBf32 f32(r/m) mod=1 reg=4 rm=4      spec: 0xD8 mod/reg/rm /4 mod!=3 */
            case 0x65: /* D8h 65h FSUBf32 f32(r/m) mod=1 reg=4 rm=5      spec: 0xD8 mod/reg/rm /4 mod!=3 */
            case 0x66: /* D8h 66h FSUBf32 f32(r/m) mod=1 reg=4 rm=6      spec: 0xD8 mod/reg/rm /4 mod!=3 */
            case 0x67: /* D8h 67h FSUBf32 f32(r/m) mod=1 reg=4 rm=7      spec: 0xD8 mod/reg/rm /4 mod!=3 */
            case 0xA0: /* D8h A0h FSUBf32 f32(r/m) mod=2 reg=4 rm=0      spec: 0xD8 mod/reg/rm /4 mod!=3 */
            case 0xA1: /* D8h A1h FSUBf32 f32(r/m) mod=2 reg=4 rm=1      spec: 0xD8 mod/reg/rm /4 mod!=3 */
            case 0xA2: /* D8h A2h FSUBf32 f32(r/m) mod=2 reg=4 rm=2      spec: 0xD8 mod/reg/rm /4 mod!=3 */
            case 0xA3: /* D8h A3h FSUBf32 f32(r/m) mod=2 reg=4 rm=3      spec: 0xD8 mod/reg/rm /4 mod!=3 */
            case 0xA4: /* D8h A4h FSUBf32 f32(r/m) mod=2 reg=4 rm=4      spec: 0xD8 mod/reg/rm /4 mod!=3 */
            case 0xA5: /* D8h A5h FSUBf32 f32(r/m) mod=2 reg=4 rm=5      spec: 0xD8 mod/reg/rm /4 mod!=3 */
            case 0xA6: /* D8h A6h FSUBf32 f32(r/m) mod=2 reg=4 rm=6      spec: 0xD8 mod/reg/rm /4 mod!=3 */
            case 0xA7: /* D8h A7h FSUBf32 f32(r/m) mod=2 reg=4 rm=7      spec: 0xD8 mod/reg/rm /4 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSUBf32 %s",IPDecPrint32(mrm,sib,disp,4,RC_FPUREG,"f32"));
                break;
            case 0x28: /* D8h 28h FSUBRf32 f32(r/m) mod=0 reg=5 rm=0      spec: 0xD8 mod/reg/rm /5 mod!=3 */
            case 0x29: /* D8h 29h FSUBRf32 f32(r/m) mod=0 reg=5 rm=1      spec: 0xD8 mod/reg/rm /5 mod!=3 */
            case 0x2A: /* D8h 2Ah FSUBRf32 f32(r/m) mod=0 reg=5 rm=2      spec: 0xD8 mod/reg/rm /5 mod!=3 */
            case 0x2B: /* D8h 2Bh FSUBRf32 f32(r/m) mod=0 reg=5 rm=3      spec: 0xD8 mod/reg/rm /5 mod!=3 */
            case 0x2C: /* D8h 2Ch FSUBRf32 f32(r/m) mod=0 reg=5 rm=4      spec: 0xD8 mod/reg/rm /5 mod!=3 */
            case 0x2D: /* D8h 2Dh FSUBRf32 f32(r/m) mod=0 reg=5 rm=5      spec: 0xD8 mod/reg/rm /5 mod!=3 */
            case 0x2E: /* D8h 2Eh FSUBRf32 f32(r/m) mod=0 reg=5 rm=6      spec: 0xD8 mod/reg/rm /5 mod!=3 */
            case 0x2F: /* D8h 2Fh FSUBRf32 f32(r/m) mod=0 reg=5 rm=7      spec: 0xD8 mod/reg/rm /5 mod!=3 */
            case 0x68: /* D8h 68h FSUBRf32 f32(r/m) mod=1 reg=5 rm=0      spec: 0xD8 mod/reg/rm /5 mod!=3 */
            case 0x69: /* D8h 69h FSUBRf32 f32(r/m) mod=1 reg=5 rm=1      spec: 0xD8 mod/reg/rm /5 mod!=3 */
            case 0x6A: /* D8h 6Ah FSUBRf32 f32(r/m) mod=1 reg=5 rm=2      spec: 0xD8 mod/reg/rm /5 mod!=3 */
            case 0x6B: /* D8h 6Bh FSUBRf32 f32(r/m) mod=1 reg=5 rm=3      spec: 0xD8 mod/reg/rm /5 mod!=3 */
            case 0x6C: /* D8h 6Ch FSUBRf32 f32(r/m) mod=1 reg=5 rm=4      spec: 0xD8 mod/reg/rm /5 mod!=3 */
            case 0x6D: /* D8h 6Dh FSUBRf32 f32(r/m) mod=1 reg=5 rm=5      spec: 0xD8 mod/reg/rm /5 mod!=3 */
            case 0x6E: /* D8h 6Eh FSUBRf32 f32(r/m) mod=1 reg=5 rm=6      spec: 0xD8 mod/reg/rm /5 mod!=3 */
            case 0x6F: /* D8h 6Fh FSUBRf32 f32(r/m) mod=1 reg=5 rm=7      spec: 0xD8 mod/reg/rm /5 mod!=3 */
            case 0xA8: /* D8h A8h FSUBRf32 f32(r/m) mod=2 reg=5 rm=0      spec: 0xD8 mod/reg/rm /5 mod!=3 */
            case 0xA9: /* D8h A9h FSUBRf32 f32(r/m) mod=2 reg=5 rm=1      spec: 0xD8 mod/reg/rm /5 mod!=3 */
            case 0xAA: /* D8h AAh FSUBRf32 f32(r/m) mod=2 reg=5 rm=2      spec: 0xD8 mod/reg/rm /5 mod!=3 */
            case 0xAB: /* D8h ABh FSUBRf32 f32(r/m) mod=2 reg=5 rm=3      spec: 0xD8 mod/reg/rm /5 mod!=3 */
            case 0xAC: /* D8h ACh FSUBRf32 f32(r/m) mod=2 reg=5 rm=4      spec: 0xD8 mod/reg/rm /5 mod!=3 */
            case 0xAD: /* D8h ADh FSUBRf32 f32(r/m) mod=2 reg=5 rm=5      spec: 0xD8 mod/reg/rm /5 mod!=3 */
            case 0xAE: /* D8h AEh FSUBRf32 f32(r/m) mod=2 reg=5 rm=6      spec: 0xD8 mod/reg/rm /5 mod!=3 */
            case 0xAF: /* D8h AFh FSUBRf32 f32(r/m) mod=2 reg=5 rm=7      spec: 0xD8 mod/reg/rm /5 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSUBRf32 %s",IPDecPrint32(mrm,sib,disp,4,RC_FPUREG,"f32"));
                break;
            case 0x30: /* D8h 30h FDIVf32 f32(r/m) mod=0 reg=6 rm=0      spec: 0xD8 mod/reg/rm /6 mod!=3 */
            case 0x31: /* D8h 31h FDIVf32 f32(r/m) mod=0 reg=6 rm=1      spec: 0xD8 mod/reg/rm /6 mod!=3 */
            case 0x32: /* D8h 32h FDIVf32 f32(r/m) mod=0 reg=6 rm=2      spec: 0xD8 mod/reg/rm /6 mod!=3 */
            case 0x33: /* D8h 33h FDIVf32 f32(r/m) mod=0 reg=6 rm=3      spec: 0xD8 mod/reg/rm /6 mod!=3 */
            case 0x34: /* D8h 34h FDIVf32 f32(r/m) mod=0 reg=6 rm=4      spec: 0xD8 mod/reg/rm /6 mod!=3 */
            case 0x35: /* D8h 35h FDIVf32 f32(r/m) mod=0 reg=6 rm=5      spec: 0xD8 mod/reg/rm /6 mod!=3 */
            case 0x36: /* D8h 36h FDIVf32 f32(r/m) mod=0 reg=6 rm=6      spec: 0xD8 mod/reg/rm /6 mod!=3 */
            case 0x37: /* D8h 37h FDIVf32 f32(r/m) mod=0 reg=6 rm=7      spec: 0xD8 mod/reg/rm /6 mod!=3 */
            case 0x70: /* D8h 70h FDIVf32 f32(r/m) mod=1 reg=6 rm=0      spec: 0xD8 mod/reg/rm /6 mod!=3 */
            case 0x71: /* D8h 71h FDIVf32 f32(r/m) mod=1 reg=6 rm=1      spec: 0xD8 mod/reg/rm /6 mod!=3 */
            case 0x72: /* D8h 72h FDIVf32 f32(r/m) mod=1 reg=6 rm=2      spec: 0xD8 mod/reg/rm /6 mod!=3 */
            case 0x73: /* D8h 73h FDIVf32 f32(r/m) mod=1 reg=6 rm=3      spec: 0xD8 mod/reg/rm /6 mod!=3 */
            case 0x74: /* D8h 74h FDIVf32 f32(r/m) mod=1 reg=6 rm=4      spec: 0xD8 mod/reg/rm /6 mod!=3 */
            case 0x75: /* D8h 75h FDIVf32 f32(r/m) mod=1 reg=6 rm=5      spec: 0xD8 mod/reg/rm /6 mod!=3 */
            case 0x76: /* D8h 76h FDIVf32 f32(r/m) mod=1 reg=6 rm=6      spec: 0xD8 mod/reg/rm /6 mod!=3 */
            case 0x77: /* D8h 77h FDIVf32 f32(r/m) mod=1 reg=6 rm=7      spec: 0xD8 mod/reg/rm /6 mod!=3 */
            case 0xB0: /* D8h B0h FDIVf32 f32(r/m) mod=2 reg=6 rm=0      spec: 0xD8 mod/reg/rm /6 mod!=3 */
            case 0xB1: /* D8h B1h FDIVf32 f32(r/m) mod=2 reg=6 rm=1      spec: 0xD8 mod/reg/rm /6 mod!=3 */
            case 0xB2: /* D8h B2h FDIVf32 f32(r/m) mod=2 reg=6 rm=2      spec: 0xD8 mod/reg/rm /6 mod!=3 */
            case 0xB3: /* D8h B3h FDIVf32 f32(r/m) mod=2 reg=6 rm=3      spec: 0xD8 mod/reg/rm /6 mod!=3 */
            case 0xB4: /* D8h B4h FDIVf32 f32(r/m) mod=2 reg=6 rm=4      spec: 0xD8 mod/reg/rm /6 mod!=3 */
            case 0xB5: /* D8h B5h FDIVf32 f32(r/m) mod=2 reg=6 rm=5      spec: 0xD8 mod/reg/rm /6 mod!=3 */
            case 0xB6: /* D8h B6h FDIVf32 f32(r/m) mod=2 reg=6 rm=6      spec: 0xD8 mod/reg/rm /6 mod!=3 */
            case 0xB7: /* D8h B7h FDIVf32 f32(r/m) mod=2 reg=6 rm=7      spec: 0xD8 mod/reg/rm /6 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FDIVf32 %s",IPDecPrint32(mrm,sib,disp,4,RC_FPUREG,"f32"));
                break;
            case 0x38: /* D8h 38h FDIVRf32 f32(r/m) mod=0 reg=7 rm=0      spec: 0xD8 mod/reg/rm /7 mod!=3 */
            case 0x39: /* D8h 39h FDIVRf32 f32(r/m) mod=0 reg=7 rm=1      spec: 0xD8 mod/reg/rm /7 mod!=3 */
            case 0x3A: /* D8h 3Ah FDIVRf32 f32(r/m) mod=0 reg=7 rm=2      spec: 0xD8 mod/reg/rm /7 mod!=3 */
            case 0x3B: /* D8h 3Bh FDIVRf32 f32(r/m) mod=0 reg=7 rm=3      spec: 0xD8 mod/reg/rm /7 mod!=3 */
            case 0x3C: /* D8h 3Ch FDIVRf32 f32(r/m) mod=0 reg=7 rm=4      spec: 0xD8 mod/reg/rm /7 mod!=3 */
            case 0x3D: /* D8h 3Dh FDIVRf32 f32(r/m) mod=0 reg=7 rm=5      spec: 0xD8 mod/reg/rm /7 mod!=3 */
            case 0x3E: /* D8h 3Eh FDIVRf32 f32(r/m) mod=0 reg=7 rm=6      spec: 0xD8 mod/reg/rm /7 mod!=3 */
            case 0x3F: /* D8h 3Fh FDIVRf32 f32(r/m) mod=0 reg=7 rm=7      spec: 0xD8 mod/reg/rm /7 mod!=3 */
            case 0x78: /* D8h 78h FDIVRf32 f32(r/m) mod=1 reg=7 rm=0      spec: 0xD8 mod/reg/rm /7 mod!=3 */
            case 0x79: /* D8h 79h FDIVRf32 f32(r/m) mod=1 reg=7 rm=1      spec: 0xD8 mod/reg/rm /7 mod!=3 */
            case 0x7A: /* D8h 7Ah FDIVRf32 f32(r/m) mod=1 reg=7 rm=2      spec: 0xD8 mod/reg/rm /7 mod!=3 */
            case 0x7B: /* D8h 7Bh FDIVRf32 f32(r/m) mod=1 reg=7 rm=3      spec: 0xD8 mod/reg/rm /7 mod!=3 */
            case 0x7C: /* D8h 7Ch FDIVRf32 f32(r/m) mod=1 reg=7 rm=4      spec: 0xD8 mod/reg/rm /7 mod!=3 */
            case 0x7D: /* D8h 7Dh FDIVRf32 f32(r/m) mod=1 reg=7 rm=5      spec: 0xD8 mod/reg/rm /7 mod!=3 */
            case 0x7E: /* D8h 7Eh FDIVRf32 f32(r/m) mod=1 reg=7 rm=6      spec: 0xD8 mod/reg/rm /7 mod!=3 */
            case 0x7F: /* D8h 7Fh FDIVRf32 f32(r/m) mod=1 reg=7 rm=7      spec: 0xD8 mod/reg/rm /7 mod!=3 */
            case 0xB8: /* D8h B8h FDIVRf32 f32(r/m) mod=2 reg=7 rm=0      spec: 0xD8 mod/reg/rm /7 mod!=3 */
            case 0xB9: /* D8h B9h FDIVRf32 f32(r/m) mod=2 reg=7 rm=1      spec: 0xD8 mod/reg/rm /7 mod!=3 */
            case 0xBA: /* D8h BAh FDIVRf32 f32(r/m) mod=2 reg=7 rm=2      spec: 0xD8 mod/reg/rm /7 mod!=3 */
            case 0xBB: /* D8h BBh FDIVRf32 f32(r/m) mod=2 reg=7 rm=3      spec: 0xD8 mod/reg/rm /7 mod!=3 */
            case 0xBC: /* D8h BCh FDIVRf32 f32(r/m) mod=2 reg=7 rm=4      spec: 0xD8 mod/reg/rm /7 mod!=3 */
            case 0xBD: /* D8h BDh FDIVRf32 f32(r/m) mod=2 reg=7 rm=5      spec: 0xD8 mod/reg/rm /7 mod!=3 */
            case 0xBE: /* D8h BEh FDIVRf32 f32(r/m) mod=2 reg=7 rm=6      spec: 0xD8 mod/reg/rm /7 mod!=3 */
            case 0xBF: /* D8h BFh FDIVRf32 f32(r/m) mod=2 reg=7 rm=7      spec: 0xD8 mod/reg/rm /7 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FDIVRf32 %s",IPDecPrint32(mrm,sib,disp,4,RC_FPUREG,"f32"));
                break;
            case 0xC0: /* D8h C0h FADD st(0),st(r/m) mod=3 reg=0 rm=0      spec: 0xD8 mod/reg/rm /0 mod==3 */
            case 0xC1: /* D8h C1h FADD st(0),st(r/m) mod=3 reg=0 rm=1      spec: 0xD8 mod/reg/rm /0 mod==3 */
            case 0xC2: /* D8h C2h FADD st(0),st(r/m) mod=3 reg=0 rm=2      spec: 0xD8 mod/reg/rm /0 mod==3 */
            case 0xC3: /* D8h C3h FADD st(0),st(r/m) mod=3 reg=0 rm=3      spec: 0xD8 mod/reg/rm /0 mod==3 */
            case 0xC4: /* D8h C4h FADD st(0),st(r/m) mod=3 reg=0 rm=4      spec: 0xD8 mod/reg/rm /0 mod==3 */
            case 0xC5: /* D8h C5h FADD st(0),st(r/m) mod=3 reg=0 rm=5      spec: 0xD8 mod/reg/rm /0 mod==3 */
            case 0xC6: /* D8h C6h FADD st(0),st(r/m) mod=3 reg=0 rm=6      spec: 0xD8 mod/reg/rm /0 mod==3 */
            case 0xC7: /* D8h C7h FADD st(0),st(r/m) mod=3 reg=0 rm=7      spec: 0xD8 mod/reg/rm /0 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FADD ST(%u),%s",0,IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""));
                break;
            case 0xC8: /* D8h C8h FMUL st(0),st(r/m) mod=3 reg=1 rm=0      spec: 0xD8 mod/reg/rm /1 mod==3 */
            case 0xC9: /* D8h C9h FMUL st(0),st(r/m) mod=3 reg=1 rm=1      spec: 0xD8 mod/reg/rm /1 mod==3 */
            case 0xCA: /* D8h CAh FMUL st(0),st(r/m) mod=3 reg=1 rm=2      spec: 0xD8 mod/reg/rm /1 mod==3 */
            case 0xCB: /* D8h CBh FMUL st(0),st(r/m) mod=3 reg=1 rm=3      spec: 0xD8 mod/reg/rm /1 mod==3 */
            case 0xCC: /* D8h CCh FMUL st(0),st(r/m) mod=3 reg=1 rm=4      spec: 0xD8 mod/reg/rm /1 mod==3 */
            case 0xCD: /* D8h CDh FMUL st(0),st(r/m) mod=3 reg=1 rm=5      spec: 0xD8 mod/reg/rm /1 mod==3 */
            case 0xCE: /* D8h CEh FMUL st(0),st(r/m) mod=3 reg=1 rm=6      spec: 0xD8 mod/reg/rm /1 mod==3 */
            case 0xCF: /* D8h CFh FMUL st(0),st(r/m) mod=3 reg=1 rm=7      spec: 0xD8 mod/reg/rm /1 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FMUL ST(%u),%s",0,IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""));
                break;
            case 0xD0: /* D8h D0h FCOM st(0),st(r/m) mod=3 reg=2 rm=0      spec: 0xD8 mod/reg/rm /2 mod==3 */
            case 0xD1: /* D8h D1h FCOM st(0),st(r/m) mod=3 reg=2 rm=1      spec: 0xD8 mod/reg/rm /2 mod==3 */
            case 0xD2: /* D8h D2h FCOM st(0),st(r/m) mod=3 reg=2 rm=2      spec: 0xD8 mod/reg/rm /2 mod==3 */
            case 0xD3: /* D8h D3h FCOM st(0),st(r/m) mod=3 reg=2 rm=3      spec: 0xD8 mod/reg/rm /2 mod==3 */
            case 0xD4: /* D8h D4h FCOM st(0),st(r/m) mod=3 reg=2 rm=4      spec: 0xD8 mod/reg/rm /2 mod==3 */
            case 0xD5: /* D8h D5h FCOM st(0),st(r/m) mod=3 reg=2 rm=5      spec: 0xD8 mod/reg/rm /2 mod==3 */
            case 0xD6: /* D8h D6h FCOM st(0),st(r/m) mod=3 reg=2 rm=6      spec: 0xD8 mod/reg/rm /2 mod==3 */
            case 0xD7: /* D8h D7h FCOM st(0),st(r/m) mod=3 reg=2 rm=7      spec: 0xD8 mod/reg/rm /2 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FCOM ST(%u),%s",0,IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""));
                break;
            case 0xD8: /* D8h D8h FCOMP st(0),st(r/m) mod=3 reg=3 rm=0      spec: 0xD8 mod/reg/rm /3 mod==3 */
            case 0xD9: /* D8h D9h FCOMP st(0),st(r/m) mod=3 reg=3 rm=1      spec: 0xD8 mod/reg/rm /3 mod==3 */
            case 0xDA: /* D8h DAh FCOMP st(0),st(r/m) mod=3 reg=3 rm=2      spec: 0xD8 mod/reg/rm /3 mod==3 */
            case 0xDB: /* D8h DBh FCOMP st(0),st(r/m) mod=3 reg=3 rm=3      spec: 0xD8 mod/reg/rm /3 mod==3 */
            case 0xDC: /* D8h DCh FCOMP st(0),st(r/m) mod=3 reg=3 rm=4      spec: 0xD8 mod/reg/rm /3 mod==3 */
            case 0xDD: /* D8h DDh FCOMP st(0),st(r/m) mod=3 reg=3 rm=5      spec: 0xD8 mod/reg/rm /3 mod==3 */
            case 0xDE: /* D8h DEh FCOMP st(0),st(r/m) mod=3 reg=3 rm=6      spec: 0xD8 mod/reg/rm /3 mod==3 */
            case 0xDF: /* D8h DFh FCOMP st(0),st(r/m) mod=3 reg=3 rm=7      spec: 0xD8 mod/reg/rm /3 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FCOMP ST(%u),%s",0,IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""));
                break;
            case 0xE0: /* D8h E0h FSUB st(0),st(r/m) mod=3 reg=4 rm=0      spec: 0xD8 mod/reg/rm /4 mod==3 */
            case 0xE1: /* D8h E1h FSUB st(0),st(r/m) mod=3 reg=4 rm=1      spec: 0xD8 mod/reg/rm /4 mod==3 */
            case 0xE2: /* D8h E2h FSUB st(0),st(r/m) mod=3 reg=4 rm=2      spec: 0xD8 mod/reg/rm /4 mod==3 */
            case 0xE3: /* D8h E3h FSUB st(0),st(r/m) mod=3 reg=4 rm=3      spec: 0xD8 mod/reg/rm /4 mod==3 */
            case 0xE4: /* D8h E4h FSUB st(0),st(r/m) mod=3 reg=4 rm=4      spec: 0xD8 mod/reg/rm /4 mod==3 */
            case 0xE5: /* D8h E5h FSUB st(0),st(r/m) mod=3 reg=4 rm=5      spec: 0xD8 mod/reg/rm /4 mod==3 */
            case 0xE6: /* D8h E6h FSUB st(0),st(r/m) mod=3 reg=4 rm=6      spec: 0xD8 mod/reg/rm /4 mod==3 */
            case 0xE7: /* D8h E7h FSUB st(0),st(r/m) mod=3 reg=4 rm=7      spec: 0xD8 mod/reg/rm /4 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSUB ST(%u),%s",0,IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""));
                break;
            case 0xE8: /* D8h E8h FSUBR st(0),st(r/m) mod=3 reg=5 rm=0      spec: 0xD8 mod/reg/rm /5 mod==3 */
            case 0xE9: /* D8h E9h FSUBR st(0),st(r/m) mod=3 reg=5 rm=1      spec: 0xD8 mod/reg/rm /5 mod==3 */
            case 0xEA: /* D8h EAh FSUBR st(0),st(r/m) mod=3 reg=5 rm=2      spec: 0xD8 mod/reg/rm /5 mod==3 */
            case 0xEB: /* D8h EBh FSUBR st(0),st(r/m) mod=3 reg=5 rm=3      spec: 0xD8 mod/reg/rm /5 mod==3 */
            case 0xEC: /* D8h ECh FSUBR st(0),st(r/m) mod=3 reg=5 rm=4      spec: 0xD8 mod/reg/rm /5 mod==3 */
            case 0xED: /* D8h EDh FSUBR st(0),st(r/m) mod=3 reg=5 rm=5      spec: 0xD8 mod/reg/rm /5 mod==3 */
            case 0xEE: /* D8h EEh FSUBR st(0),st(r/m) mod=3 reg=5 rm=6      spec: 0xD8 mod/reg/rm /5 mod==3 */
            case 0xEF: /* D8h EFh FSUBR st(0),st(r/m) mod=3 reg=5 rm=7      spec: 0xD8 mod/reg/rm /5 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSUBR ST(%u),%s",0,IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""));
                break;
            case 0xF0: /* D8h F0h FDIV st(0),st(r/m) mod=3 reg=6 rm=0      spec: 0xD8 mod/reg/rm /6 mod==3 */
            case 0xF1: /* D8h F1h FDIV st(0),st(r/m) mod=3 reg=6 rm=1      spec: 0xD8 mod/reg/rm /6 mod==3 */
            case 0xF2: /* D8h F2h FDIV st(0),st(r/m) mod=3 reg=6 rm=2      spec: 0xD8 mod/reg/rm /6 mod==3 */
            case 0xF3: /* D8h F3h FDIV st(0),st(r/m) mod=3 reg=6 rm=3      spec: 0xD8 mod/reg/rm /6 mod==3 */
            case 0xF4: /* D8h F4h FDIV st(0),st(r/m) mod=3 reg=6 rm=4      spec: 0xD8 mod/reg/rm /6 mod==3 */
            case 0xF5: /* D8h F5h FDIV st(0),st(r/m) mod=3 reg=6 rm=5      spec: 0xD8 mod/reg/rm /6 mod==3 */
            case 0xF6: /* D8h F6h FDIV st(0),st(r/m) mod=3 reg=6 rm=6      spec: 0xD8 mod/reg/rm /6 mod==3 */
            case 0xF7: /* D8h F7h FDIV st(0),st(r/m) mod=3 reg=6 rm=7      spec: 0xD8 mod/reg/rm /6 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FDIV ST(%u),%s",0,IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""));
                break;
            case 0xF8: /* D8h F8h FDIVR st(0),st(r/m) mod=3 reg=7 rm=0      spec: 0xD8 mod/reg/rm /7 mod==3 */
            case 0xF9: /* D8h F9h FDIVR st(0),st(r/m) mod=3 reg=7 rm=1      spec: 0xD8 mod/reg/rm /7 mod==3 */
            case 0xFA: /* D8h FAh FDIVR st(0),st(r/m) mod=3 reg=7 rm=2      spec: 0xD8 mod/reg/rm /7 mod==3 */
            case 0xFB: /* D8h FBh FDIVR st(0),st(r/m) mod=3 reg=7 rm=3      spec: 0xD8 mod/reg/rm /7 mod==3 */
            case 0xFC: /* D8h FCh FDIVR st(0),st(r/m) mod=3 reg=7 rm=4      spec: 0xD8 mod/reg/rm /7 mod==3 */
            case 0xFD: /* D8h FDh FDIVR st(0),st(r/m) mod=3 reg=7 rm=5      spec: 0xD8 mod/reg/rm /7 mod==3 */
            case 0xFE: /* D8h FEh FDIVR st(0),st(r/m) mod=3 reg=7 rm=6      spec: 0xD8 mod/reg/rm /7 mod==3 */
            case 0xFF: /* D8h FFh FDIVR st(0),st(r/m) mod=3 reg=7 rm=7      spec: 0xD8 mod/reg/rm /7 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FDIVR ST(%u),%s",0,IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""));
                break;
            default:
                goto _x86decode_illegal_opcode;
        };
/* End of opcodes starting with D8h */
        break;
    case 0xD9: /* D9h        spec:  */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        _x86decode_begin_code32_addr32_opcode_parse_D9:
/* Opcodes starting with D9h */
        switch (mrm.byte) {
            case 0x00: /* D9h 00h FLDf32 f32(r/m) mod=0 reg=0 rm=0      spec: 0xD9 mod/reg/rm /0 mod!=3 */
            case 0x01: /* D9h 01h FLDf32 f32(r/m) mod=0 reg=0 rm=1      spec: 0xD9 mod/reg/rm /0 mod!=3 */
            case 0x02: /* D9h 02h FLDf32 f32(r/m) mod=0 reg=0 rm=2      spec: 0xD9 mod/reg/rm /0 mod!=3 */
            case 0x03: /* D9h 03h FLDf32 f32(r/m) mod=0 reg=0 rm=3      spec: 0xD9 mod/reg/rm /0 mod!=3 */
            case 0x04: /* D9h 04h FLDf32 f32(r/m) mod=0 reg=0 rm=4      spec: 0xD9 mod/reg/rm /0 mod!=3 */
            case 0x05: /* D9h 05h FLDf32 f32(r/m) mod=0 reg=0 rm=5      spec: 0xD9 mod/reg/rm /0 mod!=3 */
            case 0x06: /* D9h 06h FLDf32 f32(r/m) mod=0 reg=0 rm=6      spec: 0xD9 mod/reg/rm /0 mod!=3 */
            case 0x07: /* D9h 07h FLDf32 f32(r/m) mod=0 reg=0 rm=7      spec: 0xD9 mod/reg/rm /0 mod!=3 */
            case 0x40: /* D9h 40h FLDf32 f32(r/m) mod=1 reg=0 rm=0      spec: 0xD9 mod/reg/rm /0 mod!=3 */
            case 0x41: /* D9h 41h FLDf32 f32(r/m) mod=1 reg=0 rm=1      spec: 0xD9 mod/reg/rm /0 mod!=3 */
            case 0x42: /* D9h 42h FLDf32 f32(r/m) mod=1 reg=0 rm=2      spec: 0xD9 mod/reg/rm /0 mod!=3 */
            case 0x43: /* D9h 43h FLDf32 f32(r/m) mod=1 reg=0 rm=3      spec: 0xD9 mod/reg/rm /0 mod!=3 */
            case 0x44: /* D9h 44h FLDf32 f32(r/m) mod=1 reg=0 rm=4      spec: 0xD9 mod/reg/rm /0 mod!=3 */
            case 0x45: /* D9h 45h FLDf32 f32(r/m) mod=1 reg=0 rm=5      spec: 0xD9 mod/reg/rm /0 mod!=3 */
            case 0x46: /* D9h 46h FLDf32 f32(r/m) mod=1 reg=0 rm=6      spec: 0xD9 mod/reg/rm /0 mod!=3 */
            case 0x47: /* D9h 47h FLDf32 f32(r/m) mod=1 reg=0 rm=7      spec: 0xD9 mod/reg/rm /0 mod!=3 */
            case 0x80: /* D9h 80h FLDf32 f32(r/m) mod=2 reg=0 rm=0      spec: 0xD9 mod/reg/rm /0 mod!=3 */
            case 0x81: /* D9h 81h FLDf32 f32(r/m) mod=2 reg=0 rm=1      spec: 0xD9 mod/reg/rm /0 mod!=3 */
            case 0x82: /* D9h 82h FLDf32 f32(r/m) mod=2 reg=0 rm=2      spec: 0xD9 mod/reg/rm /0 mod!=3 */
            case 0x83: /* D9h 83h FLDf32 f32(r/m) mod=2 reg=0 rm=3      spec: 0xD9 mod/reg/rm /0 mod!=3 */
            case 0x84: /* D9h 84h FLDf32 f32(r/m) mod=2 reg=0 rm=4      spec: 0xD9 mod/reg/rm /0 mod!=3 */
            case 0x85: /* D9h 85h FLDf32 f32(r/m) mod=2 reg=0 rm=5      spec: 0xD9 mod/reg/rm /0 mod!=3 */
            case 0x86: /* D9h 86h FLDf32 f32(r/m) mod=2 reg=0 rm=6      spec: 0xD9 mod/reg/rm /0 mod!=3 */
            case 0x87: /* D9h 87h FLDf32 f32(r/m) mod=2 reg=0 rm=7      spec: 0xD9 mod/reg/rm /0 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FLDf32 %s",IPDecPrint32(mrm,sib,disp,4,RC_FPUREG,"f32"));
                break;
            /* opcode D9h 08h  not defined */
            /* opcode D9h 09h  not defined */
            /* opcode D9h 0Ah  not defined */
            /* opcode D9h 0Bh  not defined */
            /* opcode D9h 0Ch  not defined */
            /* opcode D9h 0Dh  not defined */
            /* opcode D9h 0Eh  not defined */
            /* opcode D9h 0Fh  not defined */
            case 0x10: /* D9h 10h FSTf32 f32(r/m) mod=0 reg=2 rm=0      spec: 0xD9 mod/reg/rm /2 mod!=3 */
            case 0x11: /* D9h 11h FSTf32 f32(r/m) mod=0 reg=2 rm=1      spec: 0xD9 mod/reg/rm /2 mod!=3 */
            case 0x12: /* D9h 12h FSTf32 f32(r/m) mod=0 reg=2 rm=2      spec: 0xD9 mod/reg/rm /2 mod!=3 */
            case 0x13: /* D9h 13h FSTf32 f32(r/m) mod=0 reg=2 rm=3      spec: 0xD9 mod/reg/rm /2 mod!=3 */
            case 0x14: /* D9h 14h FSTf32 f32(r/m) mod=0 reg=2 rm=4      spec: 0xD9 mod/reg/rm /2 mod!=3 */
            case 0x15: /* D9h 15h FSTf32 f32(r/m) mod=0 reg=2 rm=5      spec: 0xD9 mod/reg/rm /2 mod!=3 */
            case 0x16: /* D9h 16h FSTf32 f32(r/m) mod=0 reg=2 rm=6      spec: 0xD9 mod/reg/rm /2 mod!=3 */
            case 0x17: /* D9h 17h FSTf32 f32(r/m) mod=0 reg=2 rm=7      spec: 0xD9 mod/reg/rm /2 mod!=3 */
            case 0x50: /* D9h 50h FSTf32 f32(r/m) mod=1 reg=2 rm=0      spec: 0xD9 mod/reg/rm /2 mod!=3 */
            case 0x51: /* D9h 51h FSTf32 f32(r/m) mod=1 reg=2 rm=1      spec: 0xD9 mod/reg/rm /2 mod!=3 */
            case 0x52: /* D9h 52h FSTf32 f32(r/m) mod=1 reg=2 rm=2      spec: 0xD9 mod/reg/rm /2 mod!=3 */
            case 0x53: /* D9h 53h FSTf32 f32(r/m) mod=1 reg=2 rm=3      spec: 0xD9 mod/reg/rm /2 mod!=3 */
            case 0x54: /* D9h 54h FSTf32 f32(r/m) mod=1 reg=2 rm=4      spec: 0xD9 mod/reg/rm /2 mod!=3 */
            case 0x55: /* D9h 55h FSTf32 f32(r/m) mod=1 reg=2 rm=5      spec: 0xD9 mod/reg/rm /2 mod!=3 */
            case 0x56: /* D9h 56h FSTf32 f32(r/m) mod=1 reg=2 rm=6      spec: 0xD9 mod/reg/rm /2 mod!=3 */
            case 0x57: /* D9h 57h FSTf32 f32(r/m) mod=1 reg=2 rm=7      spec: 0xD9 mod/reg/rm /2 mod!=3 */
            case 0x90: /* D9h 90h FSTf32 f32(r/m) mod=2 reg=2 rm=0      spec: 0xD9 mod/reg/rm /2 mod!=3 */
            case 0x91: /* D9h 91h FSTf32 f32(r/m) mod=2 reg=2 rm=1      spec: 0xD9 mod/reg/rm /2 mod!=3 */
            case 0x92: /* D9h 92h FSTf32 f32(r/m) mod=2 reg=2 rm=2      spec: 0xD9 mod/reg/rm /2 mod!=3 */
            case 0x93: /* D9h 93h FSTf32 f32(r/m) mod=2 reg=2 rm=3      spec: 0xD9 mod/reg/rm /2 mod!=3 */
            case 0x94: /* D9h 94h FSTf32 f32(r/m) mod=2 reg=2 rm=4      spec: 0xD9 mod/reg/rm /2 mod!=3 */
            case 0x95: /* D9h 95h FSTf32 f32(r/m) mod=2 reg=2 rm=5      spec: 0xD9 mod/reg/rm /2 mod!=3 */
            case 0x96: /* D9h 96h FSTf32 f32(r/m) mod=2 reg=2 rm=6      spec: 0xD9 mod/reg/rm /2 mod!=3 */
            case 0x97: /* D9h 97h FSTf32 f32(r/m) mod=2 reg=2 rm=7      spec: 0xD9 mod/reg/rm /2 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSTf32 %s",IPDecPrint32(mrm,sib,disp,4,RC_FPUREG,"f32"));
                break;
            case 0x18: /* D9h 18h FSTPf32 f32(r/m) mod=0 reg=3 rm=0      spec: 0xD9 mod/reg/rm /3 mod!=3 */
            case 0x19: /* D9h 19h FSTPf32 f32(r/m) mod=0 reg=3 rm=1      spec: 0xD9 mod/reg/rm /3 mod!=3 */
            case 0x1A: /* D9h 1Ah FSTPf32 f32(r/m) mod=0 reg=3 rm=2      spec: 0xD9 mod/reg/rm /3 mod!=3 */
            case 0x1B: /* D9h 1Bh FSTPf32 f32(r/m) mod=0 reg=3 rm=3      spec: 0xD9 mod/reg/rm /3 mod!=3 */
            case 0x1C: /* D9h 1Ch FSTPf32 f32(r/m) mod=0 reg=3 rm=4      spec: 0xD9 mod/reg/rm /3 mod!=3 */
            case 0x1D: /* D9h 1Dh FSTPf32 f32(r/m) mod=0 reg=3 rm=5      spec: 0xD9 mod/reg/rm /3 mod!=3 */
            case 0x1E: /* D9h 1Eh FSTPf32 f32(r/m) mod=0 reg=3 rm=6      spec: 0xD9 mod/reg/rm /3 mod!=3 */
            case 0x1F: /* D9h 1Fh FSTPf32 f32(r/m) mod=0 reg=3 rm=7      spec: 0xD9 mod/reg/rm /3 mod!=3 */
            case 0x58: /* D9h 58h FSTPf32 f32(r/m) mod=1 reg=3 rm=0      spec: 0xD9 mod/reg/rm /3 mod!=3 */
            case 0x59: /* D9h 59h FSTPf32 f32(r/m) mod=1 reg=3 rm=1      spec: 0xD9 mod/reg/rm /3 mod!=3 */
            case 0x5A: /* D9h 5Ah FSTPf32 f32(r/m) mod=1 reg=3 rm=2      spec: 0xD9 mod/reg/rm /3 mod!=3 */
            case 0x5B: /* D9h 5Bh FSTPf32 f32(r/m) mod=1 reg=3 rm=3      spec: 0xD9 mod/reg/rm /3 mod!=3 */
            case 0x5C: /* D9h 5Ch FSTPf32 f32(r/m) mod=1 reg=3 rm=4      spec: 0xD9 mod/reg/rm /3 mod!=3 */
            case 0x5D: /* D9h 5Dh FSTPf32 f32(r/m) mod=1 reg=3 rm=5      spec: 0xD9 mod/reg/rm /3 mod!=3 */
            case 0x5E: /* D9h 5Eh FSTPf32 f32(r/m) mod=1 reg=3 rm=6      spec: 0xD9 mod/reg/rm /3 mod!=3 */
            case 0x5F: /* D9h 5Fh FSTPf32 f32(r/m) mod=1 reg=3 rm=7      spec: 0xD9 mod/reg/rm /3 mod!=3 */
            case 0x98: /* D9h 98h FSTPf32 f32(r/m) mod=2 reg=3 rm=0      spec: 0xD9 mod/reg/rm /3 mod!=3 */
            case 0x99: /* D9h 99h FSTPf32 f32(r/m) mod=2 reg=3 rm=1      spec: 0xD9 mod/reg/rm /3 mod!=3 */
            case 0x9A: /* D9h 9Ah FSTPf32 f32(r/m) mod=2 reg=3 rm=2      spec: 0xD9 mod/reg/rm /3 mod!=3 */
            case 0x9B: /* D9h 9Bh FSTPf32 f32(r/m) mod=2 reg=3 rm=3      spec: 0xD9 mod/reg/rm /3 mod!=3 */
            case 0x9C: /* D9h 9Ch FSTPf32 f32(r/m) mod=2 reg=3 rm=4      spec: 0xD9 mod/reg/rm /3 mod!=3 */
            case 0x9D: /* D9h 9Dh FSTPf32 f32(r/m) mod=2 reg=3 rm=5      spec: 0xD9 mod/reg/rm /3 mod!=3 */
            case 0x9E: /* D9h 9Eh FSTPf32 f32(r/m) mod=2 reg=3 rm=6      spec: 0xD9 mod/reg/rm /3 mod!=3 */
            case 0x9F: /* D9h 9Fh FSTPf32 f32(r/m) mod=2 reg=3 rm=7      spec: 0xD9 mod/reg/rm /3 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSTPf32 %s",IPDecPrint32(mrm,sib,disp,4,RC_FPUREG,"f32"));
                break;
            case 0x20: /* D9h 20h FLDENV fenv(r/m) mod=0 reg=4 rm=0      spec: 0xD9 mod/reg/rm /4 mod!=3 */
            case 0x21: /* D9h 21h FLDENV fenv(r/m) mod=0 reg=4 rm=1      spec: 0xD9 mod/reg/rm /4 mod!=3 */
            case 0x22: /* D9h 22h FLDENV fenv(r/m) mod=0 reg=4 rm=2      spec: 0xD9 mod/reg/rm /4 mod!=3 */
            case 0x23: /* D9h 23h FLDENV fenv(r/m) mod=0 reg=4 rm=3      spec: 0xD9 mod/reg/rm /4 mod!=3 */
            case 0x24: /* D9h 24h FLDENV fenv(r/m) mod=0 reg=4 rm=4      spec: 0xD9 mod/reg/rm /4 mod!=3 */
            case 0x25: /* D9h 25h FLDENV fenv(r/m) mod=0 reg=4 rm=5      spec: 0xD9 mod/reg/rm /4 mod!=3 */
            case 0x26: /* D9h 26h FLDENV fenv(r/m) mod=0 reg=4 rm=6      spec: 0xD9 mod/reg/rm /4 mod!=3 */
            case 0x27: /* D9h 27h FLDENV fenv(r/m) mod=0 reg=4 rm=7      spec: 0xD9 mod/reg/rm /4 mod!=3 */
            case 0x60: /* D9h 60h FLDENV fenv(r/m) mod=1 reg=4 rm=0      spec: 0xD9 mod/reg/rm /4 mod!=3 */
            case 0x61: /* D9h 61h FLDENV fenv(r/m) mod=1 reg=4 rm=1      spec: 0xD9 mod/reg/rm /4 mod!=3 */
            case 0x62: /* D9h 62h FLDENV fenv(r/m) mod=1 reg=4 rm=2      spec: 0xD9 mod/reg/rm /4 mod!=3 */
            case 0x63: /* D9h 63h FLDENV fenv(r/m) mod=1 reg=4 rm=3      spec: 0xD9 mod/reg/rm /4 mod!=3 */
            case 0x64: /* D9h 64h FLDENV fenv(r/m) mod=1 reg=4 rm=4      spec: 0xD9 mod/reg/rm /4 mod!=3 */
            case 0x65: /* D9h 65h FLDENV fenv(r/m) mod=1 reg=4 rm=5      spec: 0xD9 mod/reg/rm /4 mod!=3 */
            case 0x66: /* D9h 66h FLDENV fenv(r/m) mod=1 reg=4 rm=6      spec: 0xD9 mod/reg/rm /4 mod!=3 */
            case 0x67: /* D9h 67h FLDENV fenv(r/m) mod=1 reg=4 rm=7      spec: 0xD9 mod/reg/rm /4 mod!=3 */
            case 0xA0: /* D9h A0h FLDENV fenv(r/m) mod=2 reg=4 rm=0      spec: 0xD9 mod/reg/rm /4 mod!=3 */
            case 0xA1: /* D9h A1h FLDENV fenv(r/m) mod=2 reg=4 rm=1      spec: 0xD9 mod/reg/rm /4 mod!=3 */
            case 0xA2: /* D9h A2h FLDENV fenv(r/m) mod=2 reg=4 rm=2      spec: 0xD9 mod/reg/rm /4 mod!=3 */
            case 0xA3: /* D9h A3h FLDENV fenv(r/m) mod=2 reg=4 rm=3      spec: 0xD9 mod/reg/rm /4 mod!=3 */
            case 0xA4: /* D9h A4h FLDENV fenv(r/m) mod=2 reg=4 rm=4      spec: 0xD9 mod/reg/rm /4 mod!=3 */
            case 0xA5: /* D9h A5h FLDENV fenv(r/m) mod=2 reg=4 rm=5      spec: 0xD9 mod/reg/rm /4 mod!=3 */
            case 0xA6: /* D9h A6h FLDENV fenv(r/m) mod=2 reg=4 rm=6      spec: 0xD9 mod/reg/rm /4 mod!=3 */
            case 0xA7: /* D9h A7h FLDENV fenv(r/m) mod=2 reg=4 rm=7      spec: 0xD9 mod/reg/rm /4 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FLDENV %s",IPDecPrint32(mrm,sib,disp,0,RC_REG,"fenv"));
                break;
            case 0x28: /* D9h 28h FLDCW w16(r/m) mod=0 reg=5 rm=0      spec: 0xD9 mod/reg/rm /5 mod!=3 */
            case 0x29: /* D9h 29h FLDCW w16(r/m) mod=0 reg=5 rm=1      spec: 0xD9 mod/reg/rm /5 mod!=3 */
            case 0x2A: /* D9h 2Ah FLDCW w16(r/m) mod=0 reg=5 rm=2      spec: 0xD9 mod/reg/rm /5 mod!=3 */
            case 0x2B: /* D9h 2Bh FLDCW w16(r/m) mod=0 reg=5 rm=3      spec: 0xD9 mod/reg/rm /5 mod!=3 */
            case 0x2C: /* D9h 2Ch FLDCW w16(r/m) mod=0 reg=5 rm=4      spec: 0xD9 mod/reg/rm /5 mod!=3 */
            case 0x2D: /* D9h 2Dh FLDCW w16(r/m) mod=0 reg=5 rm=5      spec: 0xD9 mod/reg/rm /5 mod!=3 */
            case 0x2E: /* D9h 2Eh FLDCW w16(r/m) mod=0 reg=5 rm=6      spec: 0xD9 mod/reg/rm /5 mod!=3 */
            case 0x2F: /* D9h 2Fh FLDCW w16(r/m) mod=0 reg=5 rm=7      spec: 0xD9 mod/reg/rm /5 mod!=3 */
            case 0x68: /* D9h 68h FLDCW w16(r/m) mod=1 reg=5 rm=0      spec: 0xD9 mod/reg/rm /5 mod!=3 */
            case 0x69: /* D9h 69h FLDCW w16(r/m) mod=1 reg=5 rm=1      spec: 0xD9 mod/reg/rm /5 mod!=3 */
            case 0x6A: /* D9h 6Ah FLDCW w16(r/m) mod=1 reg=5 rm=2      spec: 0xD9 mod/reg/rm /5 mod!=3 */
            case 0x6B: /* D9h 6Bh FLDCW w16(r/m) mod=1 reg=5 rm=3      spec: 0xD9 mod/reg/rm /5 mod!=3 */
            case 0x6C: /* D9h 6Ch FLDCW w16(r/m) mod=1 reg=5 rm=4      spec: 0xD9 mod/reg/rm /5 mod!=3 */
            case 0x6D: /* D9h 6Dh FLDCW w16(r/m) mod=1 reg=5 rm=5      spec: 0xD9 mod/reg/rm /5 mod!=3 */
            case 0x6E: /* D9h 6Eh FLDCW w16(r/m) mod=1 reg=5 rm=6      spec: 0xD9 mod/reg/rm /5 mod!=3 */
            case 0x6F: /* D9h 6Fh FLDCW w16(r/m) mod=1 reg=5 rm=7      spec: 0xD9 mod/reg/rm /5 mod!=3 */
            case 0xA8: /* D9h A8h FLDCW w16(r/m) mod=2 reg=5 rm=0      spec: 0xD9 mod/reg/rm /5 mod!=3 */
            case 0xA9: /* D9h A9h FLDCW w16(r/m) mod=2 reg=5 rm=1      spec: 0xD9 mod/reg/rm /5 mod!=3 */
            case 0xAA: /* D9h AAh FLDCW w16(r/m) mod=2 reg=5 rm=2      spec: 0xD9 mod/reg/rm /5 mod!=3 */
            case 0xAB: /* D9h ABh FLDCW w16(r/m) mod=2 reg=5 rm=3      spec: 0xD9 mod/reg/rm /5 mod!=3 */
            case 0xAC: /* D9h ACh FLDCW w16(r/m) mod=2 reg=5 rm=4      spec: 0xD9 mod/reg/rm /5 mod!=3 */
            case 0xAD: /* D9h ADh FLDCW w16(r/m) mod=2 reg=5 rm=5      spec: 0xD9 mod/reg/rm /5 mod!=3 */
            case 0xAE: /* D9h AEh FLDCW w16(r/m) mod=2 reg=5 rm=6      spec: 0xD9 mod/reg/rm /5 mod!=3 */
            case 0xAF: /* D9h AFh FLDCW w16(r/m) mod=2 reg=5 rm=7      spec: 0xD9 mod/reg/rm /5 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FLDCW %s",IPDecPrint32(mrm,sib,disp,2,RC_REG,"w16"));
                break;
            case 0x30: /* D9h 30h FSTENV fenv(r/m) mod=0 reg=6 rm=0      spec: 0xD9 mod/reg/rm /6 mod!=3 */
            case 0x31: /* D9h 31h FSTENV fenv(r/m) mod=0 reg=6 rm=1      spec: 0xD9 mod/reg/rm /6 mod!=3 */
            case 0x32: /* D9h 32h FSTENV fenv(r/m) mod=0 reg=6 rm=2      spec: 0xD9 mod/reg/rm /6 mod!=3 */
            case 0x33: /* D9h 33h FSTENV fenv(r/m) mod=0 reg=6 rm=3      spec: 0xD9 mod/reg/rm /6 mod!=3 */
            case 0x34: /* D9h 34h FSTENV fenv(r/m) mod=0 reg=6 rm=4      spec: 0xD9 mod/reg/rm /6 mod!=3 */
            case 0x35: /* D9h 35h FSTENV fenv(r/m) mod=0 reg=6 rm=5      spec: 0xD9 mod/reg/rm /6 mod!=3 */
            case 0x36: /* D9h 36h FSTENV fenv(r/m) mod=0 reg=6 rm=6      spec: 0xD9 mod/reg/rm /6 mod!=3 */
            case 0x37: /* D9h 37h FSTENV fenv(r/m) mod=0 reg=6 rm=7      spec: 0xD9 mod/reg/rm /6 mod!=3 */
            case 0x70: /* D9h 70h FSTENV fenv(r/m) mod=1 reg=6 rm=0      spec: 0xD9 mod/reg/rm /6 mod!=3 */
            case 0x71: /* D9h 71h FSTENV fenv(r/m) mod=1 reg=6 rm=1      spec: 0xD9 mod/reg/rm /6 mod!=3 */
            case 0x72: /* D9h 72h FSTENV fenv(r/m) mod=1 reg=6 rm=2      spec: 0xD9 mod/reg/rm /6 mod!=3 */
            case 0x73: /* D9h 73h FSTENV fenv(r/m) mod=1 reg=6 rm=3      spec: 0xD9 mod/reg/rm /6 mod!=3 */
            case 0x74: /* D9h 74h FSTENV fenv(r/m) mod=1 reg=6 rm=4      spec: 0xD9 mod/reg/rm /6 mod!=3 */
            case 0x75: /* D9h 75h FSTENV fenv(r/m) mod=1 reg=6 rm=5      spec: 0xD9 mod/reg/rm /6 mod!=3 */
            case 0x76: /* D9h 76h FSTENV fenv(r/m) mod=1 reg=6 rm=6      spec: 0xD9 mod/reg/rm /6 mod!=3 */
            case 0x77: /* D9h 77h FSTENV fenv(r/m) mod=1 reg=6 rm=7      spec: 0xD9 mod/reg/rm /6 mod!=3 */
            case 0xB0: /* D9h B0h FSTENV fenv(r/m) mod=2 reg=6 rm=0      spec: 0xD9 mod/reg/rm /6 mod!=3 */
            case 0xB1: /* D9h B1h FSTENV fenv(r/m) mod=2 reg=6 rm=1      spec: 0xD9 mod/reg/rm /6 mod!=3 */
            case 0xB2: /* D9h B2h FSTENV fenv(r/m) mod=2 reg=6 rm=2      spec: 0xD9 mod/reg/rm /6 mod!=3 */
            case 0xB3: /* D9h B3h FSTENV fenv(r/m) mod=2 reg=6 rm=3      spec: 0xD9 mod/reg/rm /6 mod!=3 */
            case 0xB4: /* D9h B4h FSTENV fenv(r/m) mod=2 reg=6 rm=4      spec: 0xD9 mod/reg/rm /6 mod!=3 */
            case 0xB5: /* D9h B5h FSTENV fenv(r/m) mod=2 reg=6 rm=5      spec: 0xD9 mod/reg/rm /6 mod!=3 */
            case 0xB6: /* D9h B6h FSTENV fenv(r/m) mod=2 reg=6 rm=6      spec: 0xD9 mod/reg/rm /6 mod!=3 */
            case 0xB7: /* D9h B7h FSTENV fenv(r/m) mod=2 reg=6 rm=7      spec: 0xD9 mod/reg/rm /6 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSTENV %s",IPDecPrint32(mrm,sib,disp,0,RC_REG,"fenv"));
                break;
            case 0x38: /* D9h 38h FSTCW w16(r/m) mod=0 reg=7 rm=0      spec: 0xD9 mod/reg/rm /7 mod!=3 */
            case 0x39: /* D9h 39h FSTCW w16(r/m) mod=0 reg=7 rm=1      spec: 0xD9 mod/reg/rm /7 mod!=3 */
            case 0x3A: /* D9h 3Ah FSTCW w16(r/m) mod=0 reg=7 rm=2      spec: 0xD9 mod/reg/rm /7 mod!=3 */
            case 0x3B: /* D9h 3Bh FSTCW w16(r/m) mod=0 reg=7 rm=3      spec: 0xD9 mod/reg/rm /7 mod!=3 */
            case 0x3C: /* D9h 3Ch FSTCW w16(r/m) mod=0 reg=7 rm=4      spec: 0xD9 mod/reg/rm /7 mod!=3 */
            case 0x3D: /* D9h 3Dh FSTCW w16(r/m) mod=0 reg=7 rm=5      spec: 0xD9 mod/reg/rm /7 mod!=3 */
            case 0x3E: /* D9h 3Eh FSTCW w16(r/m) mod=0 reg=7 rm=6      spec: 0xD9 mod/reg/rm /7 mod!=3 */
            case 0x3F: /* D9h 3Fh FSTCW w16(r/m) mod=0 reg=7 rm=7      spec: 0xD9 mod/reg/rm /7 mod!=3 */
            case 0x78: /* D9h 78h FSTCW w16(r/m) mod=1 reg=7 rm=0      spec: 0xD9 mod/reg/rm /7 mod!=3 */
            case 0x79: /* D9h 79h FSTCW w16(r/m) mod=1 reg=7 rm=1      spec: 0xD9 mod/reg/rm /7 mod!=3 */
            case 0x7A: /* D9h 7Ah FSTCW w16(r/m) mod=1 reg=7 rm=2      spec: 0xD9 mod/reg/rm /7 mod!=3 */
            case 0x7B: /* D9h 7Bh FSTCW w16(r/m) mod=1 reg=7 rm=3      spec: 0xD9 mod/reg/rm /7 mod!=3 */
            case 0x7C: /* D9h 7Ch FSTCW w16(r/m) mod=1 reg=7 rm=4      spec: 0xD9 mod/reg/rm /7 mod!=3 */
            case 0x7D: /* D9h 7Dh FSTCW w16(r/m) mod=1 reg=7 rm=5      spec: 0xD9 mod/reg/rm /7 mod!=3 */
            case 0x7E: /* D9h 7Eh FSTCW w16(r/m) mod=1 reg=7 rm=6      spec: 0xD9 mod/reg/rm /7 mod!=3 */
            case 0x7F: /* D9h 7Fh FSTCW w16(r/m) mod=1 reg=7 rm=7      spec: 0xD9 mod/reg/rm /7 mod!=3 */
            case 0xB8: /* D9h B8h FSTCW w16(r/m) mod=2 reg=7 rm=0      spec: 0xD9 mod/reg/rm /7 mod!=3 */
            case 0xB9: /* D9h B9h FSTCW w16(r/m) mod=2 reg=7 rm=1      spec: 0xD9 mod/reg/rm /7 mod!=3 */
            case 0xBA: /* D9h BAh FSTCW w16(r/m) mod=2 reg=7 rm=2      spec: 0xD9 mod/reg/rm /7 mod!=3 */
            case 0xBB: /* D9h BBh FSTCW w16(r/m) mod=2 reg=7 rm=3      spec: 0xD9 mod/reg/rm /7 mod!=3 */
            case 0xBC: /* D9h BCh FSTCW w16(r/m) mod=2 reg=7 rm=4      spec: 0xD9 mod/reg/rm /7 mod!=3 */
            case 0xBD: /* D9h BDh FSTCW w16(r/m) mod=2 reg=7 rm=5      spec: 0xD9 mod/reg/rm /7 mod!=3 */
            case 0xBE: /* D9h BEh FSTCW w16(r/m) mod=2 reg=7 rm=6      spec: 0xD9 mod/reg/rm /7 mod!=3 */
            case 0xBF: /* D9h BFh FSTCW w16(r/m) mod=2 reg=7 rm=7      spec: 0xD9 mod/reg/rm /7 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSTCW %s",IPDecPrint32(mrm,sib,disp,2,RC_REG,"w16"));
                break;
            /* opcode D9h 48h  not defined */
            /* opcode D9h 49h  not defined */
            /* opcode D9h 4Ah  not defined */
            /* opcode D9h 4Bh  not defined */
            /* opcode D9h 4Ch  not defined */
            /* opcode D9h 4Dh  not defined */
            /* opcode D9h 4Eh  not defined */
            /* opcode D9h 4Fh  not defined */
            /* opcode D9h 88h  not defined */
            /* opcode D9h 89h  not defined */
            /* opcode D9h 8Ah  not defined */
            /* opcode D9h 8Bh  not defined */
            /* opcode D9h 8Ch  not defined */
            /* opcode D9h 8Dh  not defined */
            /* opcode D9h 8Eh  not defined */
            /* opcode D9h 8Fh  not defined */
            case 0xC0: /* D9h C0h FLD st(0),st(r/m) mod=3 reg=0 rm=0      spec: 0xD9 mod/reg/rm /0 mod==3 */
            case 0xC1: /* D9h C1h FLD st(0),st(r/m) mod=3 reg=0 rm=1      spec: 0xD9 mod/reg/rm /0 mod==3 */
            case 0xC2: /* D9h C2h FLD st(0),st(r/m) mod=3 reg=0 rm=2      spec: 0xD9 mod/reg/rm /0 mod==3 */
            case 0xC3: /* D9h C3h FLD st(0),st(r/m) mod=3 reg=0 rm=3      spec: 0xD9 mod/reg/rm /0 mod==3 */
            case 0xC4: /* D9h C4h FLD st(0),st(r/m) mod=3 reg=0 rm=4      spec: 0xD9 mod/reg/rm /0 mod==3 */
            case 0xC5: /* D9h C5h FLD st(0),st(r/m) mod=3 reg=0 rm=5      spec: 0xD9 mod/reg/rm /0 mod==3 */
            case 0xC6: /* D9h C6h FLD st(0),st(r/m) mod=3 reg=0 rm=6      spec: 0xD9 mod/reg/rm /0 mod==3 */
            case 0xC7: /* D9h C7h FLD st(0),st(r/m) mod=3 reg=0 rm=7      spec: 0xD9 mod/reg/rm /0 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FLD ST(%u),%s",0,IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""));
                break;
            case 0xC8: /* D9h C8h FXCH st(r/m) mod=3 reg=1 rm=0      spec: 0xD9 mod/reg/rm /1 mod==3 */
            case 0xC9: /* D9h C9h FXCH st(r/m) mod=3 reg=1 rm=1      spec: 0xD9 mod/reg/rm /1 mod==3 */
            case 0xCA: /* D9h CAh FXCH st(r/m) mod=3 reg=1 rm=2      spec: 0xD9 mod/reg/rm /1 mod==3 */
            case 0xCB: /* D9h CBh FXCH st(r/m) mod=3 reg=1 rm=3      spec: 0xD9 mod/reg/rm /1 mod==3 */
            case 0xCC: /* D9h CCh FXCH st(r/m) mod=3 reg=1 rm=4      spec: 0xD9 mod/reg/rm /1 mod==3 */
            case 0xCD: /* D9h CDh FXCH st(r/m) mod=3 reg=1 rm=5      spec: 0xD9 mod/reg/rm /1 mod==3 */
            case 0xCE: /* D9h CEh FXCH st(r/m) mod=3 reg=1 rm=6      spec: 0xD9 mod/reg/rm /1 mod==3 */
            case 0xCF: /* D9h CFh FXCH st(r/m) mod=3 reg=1 rm=7      spec: 0xD9 mod/reg/rm /1 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FXCH %s",IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""));
                break;
            case 0xD0: /* D9h D0h FNOP  mod=3 reg=2 rm=0      spec: 0xD9 0xD0 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FNOP");
                break;
            /* opcode D9h D1h  not defined */
            /* opcode D9h D2h  not defined */
            /* opcode D9h D3h  not defined */
            /* opcode D9h D4h  not defined */
            /* opcode D9h D5h  not defined */
            /* opcode D9h D6h  not defined */
            /* opcode D9h D7h  not defined */
            /* opcode D9h D8h  not defined */
            /* opcode D9h D9h  not defined */
            /* opcode D9h DAh  not defined */
            /* opcode D9h DBh  not defined */
            /* opcode D9h DCh  not defined */
            /* opcode D9h DDh  not defined */
            /* opcode D9h DEh  not defined */
            /* opcode D9h DFh  not defined */
            case 0xE0: /* D9h E0h FCHS  mod=3 reg=4 rm=0      spec: 0xD9 0xE0 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FCHS");
                break;
            case 0xE1: /* D9h E1h FABS  mod=3 reg=4 rm=1      spec: 0xD9 0xE1 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FABS");
                break;
            /* opcode D9h E2h  not defined */
            /* opcode D9h E3h  not defined */
            case 0xE4: /* D9h E4h FTST  mod=3 reg=4 rm=4      spec: 0xD9 0xE4 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FTST");
                break;
            case 0xE5: /* D9h E5h FXAM  mod=3 reg=4 rm=5      spec: 0xD9 0xE5 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FXAM");
                break;
            /* opcode D9h E6h  not defined */
            /* opcode D9h E7h  not defined */
            case 0xE8: /* D9h E8h FLD1  mod=3 reg=5 rm=0      spec: 0xD9 0xE8 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FLD1");
                break;
            case 0xE9: /* D9h E9h FLD2L2T  mod=3 reg=5 rm=1      spec: 0xD9 0xE9 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FLD2L2T");
                break;
            case 0xEA: /* D9h EAh FLD2L2E  mod=3 reg=5 rm=2      spec: 0xD9 0xEA */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FLD2L2E");
                break;
            case 0xEB: /* D9h EBh FLDPI  mod=3 reg=5 rm=3      spec: 0xD9 0xEB */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FLDPI");
                break;
            case 0xEC: /* D9h ECh FLDLG2  mod=3 reg=5 rm=4      spec: 0xD9 0xEC */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FLDLG2");
                break;
            case 0xED: /* D9h EDh FLDLN2  mod=3 reg=5 rm=5      spec: 0xD9 0xED */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FLDLN2");
                break;
            case 0xEE: /* D9h EEh FLDZ  mod=3 reg=5 rm=6      spec: 0xD9 0xEE */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FLDZ");
                break;
            /* opcode D9h EFh  not defined */
            case 0xF0: /* D9h F0h F2XM1  mod=3 reg=6 rm=0      spec: 0xD9 0xF0 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"F2XM1");
                break;
            case 0xF1: /* D9h F1h FYL2X  mod=3 reg=6 rm=1      spec: 0xD9 0xF1 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FYL2X");
                break;
            case 0xF2: /* D9h F2h FPTAN  mod=3 reg=6 rm=2      spec: 0xD9 0xF2 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FPTAN");
                break;
            case 0xF3: /* D9h F3h FPATAN  mod=3 reg=6 rm=3      spec: 0xD9 0xF3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FPATAN");
                break;
            case 0xF4: /* D9h F4h FXTRACT  mod=3 reg=6 rm=4      spec: 0xD9 0xF4 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FXTRACT");
                break;
            case 0xF5: /* D9h F5h FPREM1  mod=3 reg=6 rm=5      spec: 0xD9 0xF5 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FPREM1");
                break;
            case 0xF6: /* D9h F6h FDECSTP  mod=3 reg=6 rm=6      spec: 0xD9 0xF6 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FDECSTP");
                break;
            case 0xF7: /* D9h F7h FINCSTP  mod=3 reg=6 rm=7      spec: 0xD9 0xF7 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FINCSTP");
                break;
            case 0xF8: /* D9h F8h FPREM  mod=3 reg=7 rm=0      spec: 0xD9 0xF8 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FPREM");
                break;
            case 0xF9: /* D9h F9h FYL2XP1  mod=3 reg=7 rm=1      spec: 0xD9 0xF9 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FYL2XP1");
                break;
            case 0xFA: /* D9h FAh FSQRT  mod=3 reg=7 rm=2      spec: 0xD9 0xFA */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSQRT");
                break;
            case 0xFB: /* D9h FBh FSINCOS  mod=3 reg=7 rm=3      spec: 0xD9 0xFB */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSINCOS");
                break;
            case 0xFC: /* D9h FCh FRNDINT  mod=3 reg=7 rm=4      spec: 0xD9 0xFC */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FRNDINT");
                break;
            case 0xFD: /* D9h FDh FSCALE  mod=3 reg=7 rm=5      spec: 0xD9 0xFD */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSCALE");
                break;
            case 0xFE: /* D9h FEh FSIN  mod=3 reg=7 rm=6      spec: 0xD9 0xFE */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSIN");
                break;
            case 0xFF: /* D9h FFh FCOS  mod=3 reg=7 rm=7      spec: 0xD9 0xFF */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FCOS");
                break;
            default:
                goto _x86decode_illegal_opcode;
        };
/* End of opcodes starting with D9h */
        break;
    case 0xDA: /* DAh        spec:  */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        _x86decode_begin_code32_addr32_opcode_parse_DA:
/* Opcodes starting with DAh */
        switch (mrm.byte) {
            case 0x00: /* DAh 00h FADDd w32(r/m) mod=0 reg=0 rm=0      spec: 0xDA mod/reg/rm /0 mod!=3 */
            case 0x01: /* DAh 01h FADDd w32(r/m) mod=0 reg=0 rm=1      spec: 0xDA mod/reg/rm /0 mod!=3 */
            case 0x02: /* DAh 02h FADDd w32(r/m) mod=0 reg=0 rm=2      spec: 0xDA mod/reg/rm /0 mod!=3 */
            case 0x03: /* DAh 03h FADDd w32(r/m) mod=0 reg=0 rm=3      spec: 0xDA mod/reg/rm /0 mod!=3 */
            case 0x04: /* DAh 04h FADDd w32(r/m) mod=0 reg=0 rm=4      spec: 0xDA mod/reg/rm /0 mod!=3 */
            case 0x05: /* DAh 05h FADDd w32(r/m) mod=0 reg=0 rm=5      spec: 0xDA mod/reg/rm /0 mod!=3 */
            case 0x06: /* DAh 06h FADDd w32(r/m) mod=0 reg=0 rm=6      spec: 0xDA mod/reg/rm /0 mod!=3 */
            case 0x07: /* DAh 07h FADDd w32(r/m) mod=0 reg=0 rm=7      spec: 0xDA mod/reg/rm /0 mod!=3 */
            case 0x40: /* DAh 40h FADDd w32(r/m) mod=1 reg=0 rm=0      spec: 0xDA mod/reg/rm /0 mod!=3 */
            case 0x41: /* DAh 41h FADDd w32(r/m) mod=1 reg=0 rm=1      spec: 0xDA mod/reg/rm /0 mod!=3 */
            case 0x42: /* DAh 42h FADDd w32(r/m) mod=1 reg=0 rm=2      spec: 0xDA mod/reg/rm /0 mod!=3 */
            case 0x43: /* DAh 43h FADDd w32(r/m) mod=1 reg=0 rm=3      spec: 0xDA mod/reg/rm /0 mod!=3 */
            case 0x44: /* DAh 44h FADDd w32(r/m) mod=1 reg=0 rm=4      spec: 0xDA mod/reg/rm /0 mod!=3 */
            case 0x45: /* DAh 45h FADDd w32(r/m) mod=1 reg=0 rm=5      spec: 0xDA mod/reg/rm /0 mod!=3 */
            case 0x46: /* DAh 46h FADDd w32(r/m) mod=1 reg=0 rm=6      spec: 0xDA mod/reg/rm /0 mod!=3 */
            case 0x47: /* DAh 47h FADDd w32(r/m) mod=1 reg=0 rm=7      spec: 0xDA mod/reg/rm /0 mod!=3 */
            case 0x80: /* DAh 80h FADDd w32(r/m) mod=2 reg=0 rm=0      spec: 0xDA mod/reg/rm /0 mod!=3 */
            case 0x81: /* DAh 81h FADDd w32(r/m) mod=2 reg=0 rm=1      spec: 0xDA mod/reg/rm /0 mod!=3 */
            case 0x82: /* DAh 82h FADDd w32(r/m) mod=2 reg=0 rm=2      spec: 0xDA mod/reg/rm /0 mod!=3 */
            case 0x83: /* DAh 83h FADDd w32(r/m) mod=2 reg=0 rm=3      spec: 0xDA mod/reg/rm /0 mod!=3 */
            case 0x84: /* DAh 84h FADDd w32(r/m) mod=2 reg=0 rm=4      spec: 0xDA mod/reg/rm /0 mod!=3 */
            case 0x85: /* DAh 85h FADDd w32(r/m) mod=2 reg=0 rm=5      spec: 0xDA mod/reg/rm /0 mod!=3 */
            case 0x86: /* DAh 86h FADDd w32(r/m) mod=2 reg=0 rm=6      spec: 0xDA mod/reg/rm /0 mod!=3 */
            case 0x87: /* DAh 87h FADDd w32(r/m) mod=2 reg=0 rm=7      spec: 0xDA mod/reg/rm /0 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FADDd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"w32"));
                break;
            case 0x08: /* DAh 08h FMULd w32(r/m) mod=0 reg=1 rm=0      spec: 0xDA mod/reg/rm /1 mod!=3 */
            case 0x09: /* DAh 09h FMULd w32(r/m) mod=0 reg=1 rm=1      spec: 0xDA mod/reg/rm /1 mod!=3 */
            case 0x0A: /* DAh 0Ah FMULd w32(r/m) mod=0 reg=1 rm=2      spec: 0xDA mod/reg/rm /1 mod!=3 */
            case 0x0B: /* DAh 0Bh FMULd w32(r/m) mod=0 reg=1 rm=3      spec: 0xDA mod/reg/rm /1 mod!=3 */
            case 0x0C: /* DAh 0Ch FMULd w32(r/m) mod=0 reg=1 rm=4      spec: 0xDA mod/reg/rm /1 mod!=3 */
            case 0x0D: /* DAh 0Dh FMULd w32(r/m) mod=0 reg=1 rm=5      spec: 0xDA mod/reg/rm /1 mod!=3 */
            case 0x0E: /* DAh 0Eh FMULd w32(r/m) mod=0 reg=1 rm=6      spec: 0xDA mod/reg/rm /1 mod!=3 */
            case 0x0F: /* DAh 0Fh FMULd w32(r/m) mod=0 reg=1 rm=7      spec: 0xDA mod/reg/rm /1 mod!=3 */
            case 0x48: /* DAh 48h FMULd w32(r/m) mod=1 reg=1 rm=0      spec: 0xDA mod/reg/rm /1 mod!=3 */
            case 0x49: /* DAh 49h FMULd w32(r/m) mod=1 reg=1 rm=1      spec: 0xDA mod/reg/rm /1 mod!=3 */
            case 0x4A: /* DAh 4Ah FMULd w32(r/m) mod=1 reg=1 rm=2      spec: 0xDA mod/reg/rm /1 mod!=3 */
            case 0x4B: /* DAh 4Bh FMULd w32(r/m) mod=1 reg=1 rm=3      spec: 0xDA mod/reg/rm /1 mod!=3 */
            case 0x4C: /* DAh 4Ch FMULd w32(r/m) mod=1 reg=1 rm=4      spec: 0xDA mod/reg/rm /1 mod!=3 */
            case 0x4D: /* DAh 4Dh FMULd w32(r/m) mod=1 reg=1 rm=5      spec: 0xDA mod/reg/rm /1 mod!=3 */
            case 0x4E: /* DAh 4Eh FMULd w32(r/m) mod=1 reg=1 rm=6      spec: 0xDA mod/reg/rm /1 mod!=3 */
            case 0x4F: /* DAh 4Fh FMULd w32(r/m) mod=1 reg=1 rm=7      spec: 0xDA mod/reg/rm /1 mod!=3 */
            case 0x88: /* DAh 88h FMULd w32(r/m) mod=2 reg=1 rm=0      spec: 0xDA mod/reg/rm /1 mod!=3 */
            case 0x89: /* DAh 89h FMULd w32(r/m) mod=2 reg=1 rm=1      spec: 0xDA mod/reg/rm /1 mod!=3 */
            case 0x8A: /* DAh 8Ah FMULd w32(r/m) mod=2 reg=1 rm=2      spec: 0xDA mod/reg/rm /1 mod!=3 */
            case 0x8B: /* DAh 8Bh FMULd w32(r/m) mod=2 reg=1 rm=3      spec: 0xDA mod/reg/rm /1 mod!=3 */
            case 0x8C: /* DAh 8Ch FMULd w32(r/m) mod=2 reg=1 rm=4      spec: 0xDA mod/reg/rm /1 mod!=3 */
            case 0x8D: /* DAh 8Dh FMULd w32(r/m) mod=2 reg=1 rm=5      spec: 0xDA mod/reg/rm /1 mod!=3 */
            case 0x8E: /* DAh 8Eh FMULd w32(r/m) mod=2 reg=1 rm=6      spec: 0xDA mod/reg/rm /1 mod!=3 */
            case 0x8F: /* DAh 8Fh FMULd w32(r/m) mod=2 reg=1 rm=7      spec: 0xDA mod/reg/rm /1 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FMULd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"w32"));
                break;
            case 0x10: /* DAh 10h FCOMd w32(r/m) mod=0 reg=2 rm=0      spec: 0xDA mod/reg/rm /2 mod!=3 */
            case 0x11: /* DAh 11h FCOMd w32(r/m) mod=0 reg=2 rm=1      spec: 0xDA mod/reg/rm /2 mod!=3 */
            case 0x12: /* DAh 12h FCOMd w32(r/m) mod=0 reg=2 rm=2      spec: 0xDA mod/reg/rm /2 mod!=3 */
            case 0x13: /* DAh 13h FCOMd w32(r/m) mod=0 reg=2 rm=3      spec: 0xDA mod/reg/rm /2 mod!=3 */
            case 0x14: /* DAh 14h FCOMd w32(r/m) mod=0 reg=2 rm=4      spec: 0xDA mod/reg/rm /2 mod!=3 */
            case 0x15: /* DAh 15h FCOMd w32(r/m) mod=0 reg=2 rm=5      spec: 0xDA mod/reg/rm /2 mod!=3 */
            case 0x16: /* DAh 16h FCOMd w32(r/m) mod=0 reg=2 rm=6      spec: 0xDA mod/reg/rm /2 mod!=3 */
            case 0x17: /* DAh 17h FCOMd w32(r/m) mod=0 reg=2 rm=7      spec: 0xDA mod/reg/rm /2 mod!=3 */
            case 0x50: /* DAh 50h FCOMd w32(r/m) mod=1 reg=2 rm=0      spec: 0xDA mod/reg/rm /2 mod!=3 */
            case 0x51: /* DAh 51h FCOMd w32(r/m) mod=1 reg=2 rm=1      spec: 0xDA mod/reg/rm /2 mod!=3 */
            case 0x52: /* DAh 52h FCOMd w32(r/m) mod=1 reg=2 rm=2      spec: 0xDA mod/reg/rm /2 mod!=3 */
            case 0x53: /* DAh 53h FCOMd w32(r/m) mod=1 reg=2 rm=3      spec: 0xDA mod/reg/rm /2 mod!=3 */
            case 0x54: /* DAh 54h FCOMd w32(r/m) mod=1 reg=2 rm=4      spec: 0xDA mod/reg/rm /2 mod!=3 */
            case 0x55: /* DAh 55h FCOMd w32(r/m) mod=1 reg=2 rm=5      spec: 0xDA mod/reg/rm /2 mod!=3 */
            case 0x56: /* DAh 56h FCOMd w32(r/m) mod=1 reg=2 rm=6      spec: 0xDA mod/reg/rm /2 mod!=3 */
            case 0x57: /* DAh 57h FCOMd w32(r/m) mod=1 reg=2 rm=7      spec: 0xDA mod/reg/rm /2 mod!=3 */
            case 0x90: /* DAh 90h FCOMd w32(r/m) mod=2 reg=2 rm=0      spec: 0xDA mod/reg/rm /2 mod!=3 */
            case 0x91: /* DAh 91h FCOMd w32(r/m) mod=2 reg=2 rm=1      spec: 0xDA mod/reg/rm /2 mod!=3 */
            case 0x92: /* DAh 92h FCOMd w32(r/m) mod=2 reg=2 rm=2      spec: 0xDA mod/reg/rm /2 mod!=3 */
            case 0x93: /* DAh 93h FCOMd w32(r/m) mod=2 reg=2 rm=3      spec: 0xDA mod/reg/rm /2 mod!=3 */
            case 0x94: /* DAh 94h FCOMd w32(r/m) mod=2 reg=2 rm=4      spec: 0xDA mod/reg/rm /2 mod!=3 */
            case 0x95: /* DAh 95h FCOMd w32(r/m) mod=2 reg=2 rm=5      spec: 0xDA mod/reg/rm /2 mod!=3 */
            case 0x96: /* DAh 96h FCOMd w32(r/m) mod=2 reg=2 rm=6      spec: 0xDA mod/reg/rm /2 mod!=3 */
            case 0x97: /* DAh 97h FCOMd w32(r/m) mod=2 reg=2 rm=7      spec: 0xDA mod/reg/rm /2 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FCOMd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"w32"));
                break;
            case 0x18: /* DAh 18h FCOMPd w32(r/m) mod=0 reg=3 rm=0      spec: 0xDA mod/reg/rm /3 mod!=3 */
            case 0x19: /* DAh 19h FCOMPd w32(r/m) mod=0 reg=3 rm=1      spec: 0xDA mod/reg/rm /3 mod!=3 */
            case 0x1A: /* DAh 1Ah FCOMPd w32(r/m) mod=0 reg=3 rm=2      spec: 0xDA mod/reg/rm /3 mod!=3 */
            case 0x1B: /* DAh 1Bh FCOMPd w32(r/m) mod=0 reg=3 rm=3      spec: 0xDA mod/reg/rm /3 mod!=3 */
            case 0x1C: /* DAh 1Ch FCOMPd w32(r/m) mod=0 reg=3 rm=4      spec: 0xDA mod/reg/rm /3 mod!=3 */
            case 0x1D: /* DAh 1Dh FCOMPd w32(r/m) mod=0 reg=3 rm=5      spec: 0xDA mod/reg/rm /3 mod!=3 */
            case 0x1E: /* DAh 1Eh FCOMPd w32(r/m) mod=0 reg=3 rm=6      spec: 0xDA mod/reg/rm /3 mod!=3 */
            case 0x1F: /* DAh 1Fh FCOMPd w32(r/m) mod=0 reg=3 rm=7      spec: 0xDA mod/reg/rm /3 mod!=3 */
            case 0x58: /* DAh 58h FCOMPd w32(r/m) mod=1 reg=3 rm=0      spec: 0xDA mod/reg/rm /3 mod!=3 */
            case 0x59: /* DAh 59h FCOMPd w32(r/m) mod=1 reg=3 rm=1      spec: 0xDA mod/reg/rm /3 mod!=3 */
            case 0x5A: /* DAh 5Ah FCOMPd w32(r/m) mod=1 reg=3 rm=2      spec: 0xDA mod/reg/rm /3 mod!=3 */
            case 0x5B: /* DAh 5Bh FCOMPd w32(r/m) mod=1 reg=3 rm=3      spec: 0xDA mod/reg/rm /3 mod!=3 */
            case 0x5C: /* DAh 5Ch FCOMPd w32(r/m) mod=1 reg=3 rm=4      spec: 0xDA mod/reg/rm /3 mod!=3 */
            case 0x5D: /* DAh 5Dh FCOMPd w32(r/m) mod=1 reg=3 rm=5      spec: 0xDA mod/reg/rm /3 mod!=3 */
            case 0x5E: /* DAh 5Eh FCOMPd w32(r/m) mod=1 reg=3 rm=6      spec: 0xDA mod/reg/rm /3 mod!=3 */
            case 0x5F: /* DAh 5Fh FCOMPd w32(r/m) mod=1 reg=3 rm=7      spec: 0xDA mod/reg/rm /3 mod!=3 */
            case 0x98: /* DAh 98h FCOMPd w32(r/m) mod=2 reg=3 rm=0      spec: 0xDA mod/reg/rm /3 mod!=3 */
            case 0x99: /* DAh 99h FCOMPd w32(r/m) mod=2 reg=3 rm=1      spec: 0xDA mod/reg/rm /3 mod!=3 */
            case 0x9A: /* DAh 9Ah FCOMPd w32(r/m) mod=2 reg=3 rm=2      spec: 0xDA mod/reg/rm /3 mod!=3 */
            case 0x9B: /* DAh 9Bh FCOMPd w32(r/m) mod=2 reg=3 rm=3      spec: 0xDA mod/reg/rm /3 mod!=3 */
            case 0x9C: /* DAh 9Ch FCOMPd w32(r/m) mod=2 reg=3 rm=4      spec: 0xDA mod/reg/rm /3 mod!=3 */
            case 0x9D: /* DAh 9Dh FCOMPd w32(r/m) mod=2 reg=3 rm=5      spec: 0xDA mod/reg/rm /3 mod!=3 */
            case 0x9E: /* DAh 9Eh FCOMPd w32(r/m) mod=2 reg=3 rm=6      spec: 0xDA mod/reg/rm /3 mod!=3 */
            case 0x9F: /* DAh 9Fh FCOMPd w32(r/m) mod=2 reg=3 rm=7      spec: 0xDA mod/reg/rm /3 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FCOMPd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"w32"));
                break;
            case 0x20: /* DAh 20h FSUBd w32(r/m) mod=0 reg=4 rm=0      spec: 0xDA mod/reg/rm /4 mod!=3 */
            case 0x21: /* DAh 21h FSUBd w32(r/m) mod=0 reg=4 rm=1      spec: 0xDA mod/reg/rm /4 mod!=3 */
            case 0x22: /* DAh 22h FSUBd w32(r/m) mod=0 reg=4 rm=2      spec: 0xDA mod/reg/rm /4 mod!=3 */
            case 0x23: /* DAh 23h FSUBd w32(r/m) mod=0 reg=4 rm=3      spec: 0xDA mod/reg/rm /4 mod!=3 */
            case 0x24: /* DAh 24h FSUBd w32(r/m) mod=0 reg=4 rm=4      spec: 0xDA mod/reg/rm /4 mod!=3 */
            case 0x25: /* DAh 25h FSUBd w32(r/m) mod=0 reg=4 rm=5      spec: 0xDA mod/reg/rm /4 mod!=3 */
            case 0x26: /* DAh 26h FSUBd w32(r/m) mod=0 reg=4 rm=6      spec: 0xDA mod/reg/rm /4 mod!=3 */
            case 0x27: /* DAh 27h FSUBd w32(r/m) mod=0 reg=4 rm=7      spec: 0xDA mod/reg/rm /4 mod!=3 */
            case 0x60: /* DAh 60h FSUBd w32(r/m) mod=1 reg=4 rm=0      spec: 0xDA mod/reg/rm /4 mod!=3 */
            case 0x61: /* DAh 61h FSUBd w32(r/m) mod=1 reg=4 rm=1      spec: 0xDA mod/reg/rm /4 mod!=3 */
            case 0x62: /* DAh 62h FSUBd w32(r/m) mod=1 reg=4 rm=2      spec: 0xDA mod/reg/rm /4 mod!=3 */
            case 0x63: /* DAh 63h FSUBd w32(r/m) mod=1 reg=4 rm=3      spec: 0xDA mod/reg/rm /4 mod!=3 */
            case 0x64: /* DAh 64h FSUBd w32(r/m) mod=1 reg=4 rm=4      spec: 0xDA mod/reg/rm /4 mod!=3 */
            case 0x65: /* DAh 65h FSUBd w32(r/m) mod=1 reg=4 rm=5      spec: 0xDA mod/reg/rm /4 mod!=3 */
            case 0x66: /* DAh 66h FSUBd w32(r/m) mod=1 reg=4 rm=6      spec: 0xDA mod/reg/rm /4 mod!=3 */
            case 0x67: /* DAh 67h FSUBd w32(r/m) mod=1 reg=4 rm=7      spec: 0xDA mod/reg/rm /4 mod!=3 */
            case 0xA0: /* DAh A0h FSUBd w32(r/m) mod=2 reg=4 rm=0      spec: 0xDA mod/reg/rm /4 mod!=3 */
            case 0xA1: /* DAh A1h FSUBd w32(r/m) mod=2 reg=4 rm=1      spec: 0xDA mod/reg/rm /4 mod!=3 */
            case 0xA2: /* DAh A2h FSUBd w32(r/m) mod=2 reg=4 rm=2      spec: 0xDA mod/reg/rm /4 mod!=3 */
            case 0xA3: /* DAh A3h FSUBd w32(r/m) mod=2 reg=4 rm=3      spec: 0xDA mod/reg/rm /4 mod!=3 */
            case 0xA4: /* DAh A4h FSUBd w32(r/m) mod=2 reg=4 rm=4      spec: 0xDA mod/reg/rm /4 mod!=3 */
            case 0xA5: /* DAh A5h FSUBd w32(r/m) mod=2 reg=4 rm=5      spec: 0xDA mod/reg/rm /4 mod!=3 */
            case 0xA6: /* DAh A6h FSUBd w32(r/m) mod=2 reg=4 rm=6      spec: 0xDA mod/reg/rm /4 mod!=3 */
            case 0xA7: /* DAh A7h FSUBd w32(r/m) mod=2 reg=4 rm=7      spec: 0xDA mod/reg/rm /4 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSUBd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"w32"));
                break;
            case 0x28: /* DAh 28h FSUBRd w32(r/m) mod=0 reg=5 rm=0      spec: 0xDA mod/reg/rm /5 mod!=3 */
            case 0x29: /* DAh 29h FSUBRd w32(r/m) mod=0 reg=5 rm=1      spec: 0xDA mod/reg/rm /5 mod!=3 */
            case 0x2A: /* DAh 2Ah FSUBRd w32(r/m) mod=0 reg=5 rm=2      spec: 0xDA mod/reg/rm /5 mod!=3 */
            case 0x2B: /* DAh 2Bh FSUBRd w32(r/m) mod=0 reg=5 rm=3      spec: 0xDA mod/reg/rm /5 mod!=3 */
            case 0x2C: /* DAh 2Ch FSUBRd w32(r/m) mod=0 reg=5 rm=4      spec: 0xDA mod/reg/rm /5 mod!=3 */
            case 0x2D: /* DAh 2Dh FSUBRd w32(r/m) mod=0 reg=5 rm=5      spec: 0xDA mod/reg/rm /5 mod!=3 */
            case 0x2E: /* DAh 2Eh FSUBRd w32(r/m) mod=0 reg=5 rm=6      spec: 0xDA mod/reg/rm /5 mod!=3 */
            case 0x2F: /* DAh 2Fh FSUBRd w32(r/m) mod=0 reg=5 rm=7      spec: 0xDA mod/reg/rm /5 mod!=3 */
            case 0x68: /* DAh 68h FSUBRd w32(r/m) mod=1 reg=5 rm=0      spec: 0xDA mod/reg/rm /5 mod!=3 */
            case 0x69: /* DAh 69h FSUBRd w32(r/m) mod=1 reg=5 rm=1      spec: 0xDA mod/reg/rm /5 mod!=3 */
            case 0x6A: /* DAh 6Ah FSUBRd w32(r/m) mod=1 reg=5 rm=2      spec: 0xDA mod/reg/rm /5 mod!=3 */
            case 0x6B: /* DAh 6Bh FSUBRd w32(r/m) mod=1 reg=5 rm=3      spec: 0xDA mod/reg/rm /5 mod!=3 */
            case 0x6C: /* DAh 6Ch FSUBRd w32(r/m) mod=1 reg=5 rm=4      spec: 0xDA mod/reg/rm /5 mod!=3 */
            case 0x6D: /* DAh 6Dh FSUBRd w32(r/m) mod=1 reg=5 rm=5      spec: 0xDA mod/reg/rm /5 mod!=3 */
            case 0x6E: /* DAh 6Eh FSUBRd w32(r/m) mod=1 reg=5 rm=6      spec: 0xDA mod/reg/rm /5 mod!=3 */
            case 0x6F: /* DAh 6Fh FSUBRd w32(r/m) mod=1 reg=5 rm=7      spec: 0xDA mod/reg/rm /5 mod!=3 */
            case 0xA8: /* DAh A8h FSUBRd w32(r/m) mod=2 reg=5 rm=0      spec: 0xDA mod/reg/rm /5 mod!=3 */
            case 0xA9: /* DAh A9h FSUBRd w32(r/m) mod=2 reg=5 rm=1      spec: 0xDA mod/reg/rm /5 mod!=3 */
            case 0xAA: /* DAh AAh FSUBRd w32(r/m) mod=2 reg=5 rm=2      spec: 0xDA mod/reg/rm /5 mod!=3 */
            case 0xAB: /* DAh ABh FSUBRd w32(r/m) mod=2 reg=5 rm=3      spec: 0xDA mod/reg/rm /5 mod!=3 */
            case 0xAC: /* DAh ACh FSUBRd w32(r/m) mod=2 reg=5 rm=4      spec: 0xDA mod/reg/rm /5 mod!=3 */
            case 0xAD: /* DAh ADh FSUBRd w32(r/m) mod=2 reg=5 rm=5      spec: 0xDA mod/reg/rm /5 mod!=3 */
            case 0xAE: /* DAh AEh FSUBRd w32(r/m) mod=2 reg=5 rm=6      spec: 0xDA mod/reg/rm /5 mod!=3 */
            case 0xAF: /* DAh AFh FSUBRd w32(r/m) mod=2 reg=5 rm=7      spec: 0xDA mod/reg/rm /5 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSUBRd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"w32"));
                break;
            case 0x30: /* DAh 30h FDIVd w32(r/m) mod=0 reg=6 rm=0      spec: 0xDA mod/reg/rm /6 mod!=3 */
            case 0x31: /* DAh 31h FDIVd w32(r/m) mod=0 reg=6 rm=1      spec: 0xDA mod/reg/rm /6 mod!=3 */
            case 0x32: /* DAh 32h FDIVd w32(r/m) mod=0 reg=6 rm=2      spec: 0xDA mod/reg/rm /6 mod!=3 */
            case 0x33: /* DAh 33h FDIVd w32(r/m) mod=0 reg=6 rm=3      spec: 0xDA mod/reg/rm /6 mod!=3 */
            case 0x34: /* DAh 34h FDIVd w32(r/m) mod=0 reg=6 rm=4      spec: 0xDA mod/reg/rm /6 mod!=3 */
            case 0x35: /* DAh 35h FDIVd w32(r/m) mod=0 reg=6 rm=5      spec: 0xDA mod/reg/rm /6 mod!=3 */
            case 0x36: /* DAh 36h FDIVd w32(r/m) mod=0 reg=6 rm=6      spec: 0xDA mod/reg/rm /6 mod!=3 */
            case 0x37: /* DAh 37h FDIVd w32(r/m) mod=0 reg=6 rm=7      spec: 0xDA mod/reg/rm /6 mod!=3 */
            case 0x70: /* DAh 70h FDIVd w32(r/m) mod=1 reg=6 rm=0      spec: 0xDA mod/reg/rm /6 mod!=3 */
            case 0x71: /* DAh 71h FDIVd w32(r/m) mod=1 reg=6 rm=1      spec: 0xDA mod/reg/rm /6 mod!=3 */
            case 0x72: /* DAh 72h FDIVd w32(r/m) mod=1 reg=6 rm=2      spec: 0xDA mod/reg/rm /6 mod!=3 */
            case 0x73: /* DAh 73h FDIVd w32(r/m) mod=1 reg=6 rm=3      spec: 0xDA mod/reg/rm /6 mod!=3 */
            case 0x74: /* DAh 74h FDIVd w32(r/m) mod=1 reg=6 rm=4      spec: 0xDA mod/reg/rm /6 mod!=3 */
            case 0x75: /* DAh 75h FDIVd w32(r/m) mod=1 reg=6 rm=5      spec: 0xDA mod/reg/rm /6 mod!=3 */
            case 0x76: /* DAh 76h FDIVd w32(r/m) mod=1 reg=6 rm=6      spec: 0xDA mod/reg/rm /6 mod!=3 */
            case 0x77: /* DAh 77h FDIVd w32(r/m) mod=1 reg=6 rm=7      spec: 0xDA mod/reg/rm /6 mod!=3 */
            case 0xB0: /* DAh B0h FDIVd w32(r/m) mod=2 reg=6 rm=0      spec: 0xDA mod/reg/rm /6 mod!=3 */
            case 0xB1: /* DAh B1h FDIVd w32(r/m) mod=2 reg=6 rm=1      spec: 0xDA mod/reg/rm /6 mod!=3 */
            case 0xB2: /* DAh B2h FDIVd w32(r/m) mod=2 reg=6 rm=2      spec: 0xDA mod/reg/rm /6 mod!=3 */
            case 0xB3: /* DAh B3h FDIVd w32(r/m) mod=2 reg=6 rm=3      spec: 0xDA mod/reg/rm /6 mod!=3 */
            case 0xB4: /* DAh B4h FDIVd w32(r/m) mod=2 reg=6 rm=4      spec: 0xDA mod/reg/rm /6 mod!=3 */
            case 0xB5: /* DAh B5h FDIVd w32(r/m) mod=2 reg=6 rm=5      spec: 0xDA mod/reg/rm /6 mod!=3 */
            case 0xB6: /* DAh B6h FDIVd w32(r/m) mod=2 reg=6 rm=6      spec: 0xDA mod/reg/rm /6 mod!=3 */
            case 0xB7: /* DAh B7h FDIVd w32(r/m) mod=2 reg=6 rm=7      spec: 0xDA mod/reg/rm /6 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FDIVd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"w32"));
                break;
            case 0x38: /* DAh 38h FDIVRd w32(r/m) mod=0 reg=7 rm=0      spec: 0xDA mod/reg/rm /7 mod!=3 */
            case 0x39: /* DAh 39h FDIVRd w32(r/m) mod=0 reg=7 rm=1      spec: 0xDA mod/reg/rm /7 mod!=3 */
            case 0x3A: /* DAh 3Ah FDIVRd w32(r/m) mod=0 reg=7 rm=2      spec: 0xDA mod/reg/rm /7 mod!=3 */
            case 0x3B: /* DAh 3Bh FDIVRd w32(r/m) mod=0 reg=7 rm=3      spec: 0xDA mod/reg/rm /7 mod!=3 */
            case 0x3C: /* DAh 3Ch FDIVRd w32(r/m) mod=0 reg=7 rm=4      spec: 0xDA mod/reg/rm /7 mod!=3 */
            case 0x3D: /* DAh 3Dh FDIVRd w32(r/m) mod=0 reg=7 rm=5      spec: 0xDA mod/reg/rm /7 mod!=3 */
            case 0x3E: /* DAh 3Eh FDIVRd w32(r/m) mod=0 reg=7 rm=6      spec: 0xDA mod/reg/rm /7 mod!=3 */
            case 0x3F: /* DAh 3Fh FDIVRd w32(r/m) mod=0 reg=7 rm=7      spec: 0xDA mod/reg/rm /7 mod!=3 */
            case 0x78: /* DAh 78h FDIVRd w32(r/m) mod=1 reg=7 rm=0      spec: 0xDA mod/reg/rm /7 mod!=3 */
            case 0x79: /* DAh 79h FDIVRd w32(r/m) mod=1 reg=7 rm=1      spec: 0xDA mod/reg/rm /7 mod!=3 */
            case 0x7A: /* DAh 7Ah FDIVRd w32(r/m) mod=1 reg=7 rm=2      spec: 0xDA mod/reg/rm /7 mod!=3 */
            case 0x7B: /* DAh 7Bh FDIVRd w32(r/m) mod=1 reg=7 rm=3      spec: 0xDA mod/reg/rm /7 mod!=3 */
            case 0x7C: /* DAh 7Ch FDIVRd w32(r/m) mod=1 reg=7 rm=4      spec: 0xDA mod/reg/rm /7 mod!=3 */
            case 0x7D: /* DAh 7Dh FDIVRd w32(r/m) mod=1 reg=7 rm=5      spec: 0xDA mod/reg/rm /7 mod!=3 */
            case 0x7E: /* DAh 7Eh FDIVRd w32(r/m) mod=1 reg=7 rm=6      spec: 0xDA mod/reg/rm /7 mod!=3 */
            case 0x7F: /* DAh 7Fh FDIVRd w32(r/m) mod=1 reg=7 rm=7      spec: 0xDA mod/reg/rm /7 mod!=3 */
            case 0xB8: /* DAh B8h FDIVRd w32(r/m) mod=2 reg=7 rm=0      spec: 0xDA mod/reg/rm /7 mod!=3 */
            case 0xB9: /* DAh B9h FDIVRd w32(r/m) mod=2 reg=7 rm=1      spec: 0xDA mod/reg/rm /7 mod!=3 */
            case 0xBA: /* DAh BAh FDIVRd w32(r/m) mod=2 reg=7 rm=2      spec: 0xDA mod/reg/rm /7 mod!=3 */
            case 0xBB: /* DAh BBh FDIVRd w32(r/m) mod=2 reg=7 rm=3      spec: 0xDA mod/reg/rm /7 mod!=3 */
            case 0xBC: /* DAh BCh FDIVRd w32(r/m) mod=2 reg=7 rm=4      spec: 0xDA mod/reg/rm /7 mod!=3 */
            case 0xBD: /* DAh BDh FDIVRd w32(r/m) mod=2 reg=7 rm=5      spec: 0xDA mod/reg/rm /7 mod!=3 */
            case 0xBE: /* DAh BEh FDIVRd w32(r/m) mod=2 reg=7 rm=6      spec: 0xDA mod/reg/rm /7 mod!=3 */
            case 0xBF: /* DAh BFh FDIVRd w32(r/m) mod=2 reg=7 rm=7      spec: 0xDA mod/reg/rm /7 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FDIVRd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"w32"));
                break;
            case 0xC0: /* DAh C0h FCMOVB st(0),st(r/m) mod=3 reg=0 rm=0      spec: 0xDA mod/reg/rm /0 mod==3 */
            case 0xC1: /* DAh C1h FCMOVB st(0),st(r/m) mod=3 reg=0 rm=1      spec: 0xDA mod/reg/rm /0 mod==3 */
            case 0xC2: /* DAh C2h FCMOVB st(0),st(r/m) mod=3 reg=0 rm=2      spec: 0xDA mod/reg/rm /0 mod==3 */
            case 0xC3: /* DAh C3h FCMOVB st(0),st(r/m) mod=3 reg=0 rm=3      spec: 0xDA mod/reg/rm /0 mod==3 */
            case 0xC4: /* DAh C4h FCMOVB st(0),st(r/m) mod=3 reg=0 rm=4      spec: 0xDA mod/reg/rm /0 mod==3 */
            case 0xC5: /* DAh C5h FCMOVB st(0),st(r/m) mod=3 reg=0 rm=5      spec: 0xDA mod/reg/rm /0 mod==3 */
            case 0xC6: /* DAh C6h FCMOVB st(0),st(r/m) mod=3 reg=0 rm=6      spec: 0xDA mod/reg/rm /0 mod==3 */
            case 0xC7: /* DAh C7h FCMOVB st(0),st(r/m) mod=3 reg=0 rm=7      spec: 0xDA mod/reg/rm /0 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FCMOVB ST(%u),%s",0,IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""));
                break;
            case 0xC8: /* DAh C8h FCMOVE st(0),st(r/m) mod=3 reg=1 rm=0      spec: 0xDA mod/reg/rm /1 mod==3 */
            case 0xC9: /* DAh C9h FCMOVE st(0),st(r/m) mod=3 reg=1 rm=1      spec: 0xDA mod/reg/rm /1 mod==3 */
            case 0xCA: /* DAh CAh FCMOVE st(0),st(r/m) mod=3 reg=1 rm=2      spec: 0xDA mod/reg/rm /1 mod==3 */
            case 0xCB: /* DAh CBh FCMOVE st(0),st(r/m) mod=3 reg=1 rm=3      spec: 0xDA mod/reg/rm /1 mod==3 */
            case 0xCC: /* DAh CCh FCMOVE st(0),st(r/m) mod=3 reg=1 rm=4      spec: 0xDA mod/reg/rm /1 mod==3 */
            case 0xCD: /* DAh CDh FCMOVE st(0),st(r/m) mod=3 reg=1 rm=5      spec: 0xDA mod/reg/rm /1 mod==3 */
            case 0xCE: /* DAh CEh FCMOVE st(0),st(r/m) mod=3 reg=1 rm=6      spec: 0xDA mod/reg/rm /1 mod==3 */
            case 0xCF: /* DAh CFh FCMOVE st(0),st(r/m) mod=3 reg=1 rm=7      spec: 0xDA mod/reg/rm /1 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FCMOVE ST(%u),%s",0,IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""));
                break;
            case 0xD0: /* DAh D0h FCMOVBE st(0),st(r/m) mod=3 reg=2 rm=0      spec: 0xDA mod/reg/rm /2 mod==3 */
            case 0xD1: /* DAh D1h FCMOVBE st(0),st(r/m) mod=3 reg=2 rm=1      spec: 0xDA mod/reg/rm /2 mod==3 */
            case 0xD2: /* DAh D2h FCMOVBE st(0),st(r/m) mod=3 reg=2 rm=2      spec: 0xDA mod/reg/rm /2 mod==3 */
            case 0xD3: /* DAh D3h FCMOVBE st(0),st(r/m) mod=3 reg=2 rm=3      spec: 0xDA mod/reg/rm /2 mod==3 */
            case 0xD4: /* DAh D4h FCMOVBE st(0),st(r/m) mod=3 reg=2 rm=4      spec: 0xDA mod/reg/rm /2 mod==3 */
            case 0xD5: /* DAh D5h FCMOVBE st(0),st(r/m) mod=3 reg=2 rm=5      spec: 0xDA mod/reg/rm /2 mod==3 */
            case 0xD6: /* DAh D6h FCMOVBE st(0),st(r/m) mod=3 reg=2 rm=6      spec: 0xDA mod/reg/rm /2 mod==3 */
            case 0xD7: /* DAh D7h FCMOVBE st(0),st(r/m) mod=3 reg=2 rm=7      spec: 0xDA mod/reg/rm /2 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FCMOVBE ST(%u),%s",0,IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""));
                break;
            case 0xD8: /* DAh D8h FCMOVU st(0),st(r/m) mod=3 reg=3 rm=0      spec: 0xDA mod/reg/rm /3 mod==3 */
            case 0xD9: /* DAh D9h FCMOVU st(0),st(r/m) mod=3 reg=3 rm=1      spec: 0xDA mod/reg/rm /3 mod==3 */
            case 0xDA: /* DAh DAh FCMOVU st(0),st(r/m) mod=3 reg=3 rm=2      spec: 0xDA mod/reg/rm /3 mod==3 */
            case 0xDB: /* DAh DBh FCMOVU st(0),st(r/m) mod=3 reg=3 rm=3      spec: 0xDA mod/reg/rm /3 mod==3 */
            case 0xDC: /* DAh DCh FCMOVU st(0),st(r/m) mod=3 reg=3 rm=4      spec: 0xDA mod/reg/rm /3 mod==3 */
            case 0xDD: /* DAh DDh FCMOVU st(0),st(r/m) mod=3 reg=3 rm=5      spec: 0xDA mod/reg/rm /3 mod==3 */
            case 0xDE: /* DAh DEh FCMOVU st(0),st(r/m) mod=3 reg=3 rm=6      spec: 0xDA mod/reg/rm /3 mod==3 */
            case 0xDF: /* DAh DFh FCMOVU st(0),st(r/m) mod=3 reg=3 rm=7      spec: 0xDA mod/reg/rm /3 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FCMOVU ST(%u),%s",0,IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""));
                break;
            /* opcode DAh E0h  not defined */
            /* opcode DAh E1h  not defined */
            /* opcode DAh E2h  not defined */
            /* opcode DAh E3h  not defined */
            /* opcode DAh E4h  not defined */
            /* opcode DAh E5h  not defined */
            /* opcode DAh E6h  not defined */
            /* opcode DAh E7h  not defined */
            /* opcode DAh E8h  not defined */
            case 0xE9: /* DAh E9h FUCOMPP  mod=3 reg=5 rm=1      spec: 0xDA 0xE9 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FUCOMPP");
                break;
            /* opcode DAh EAh  not defined */
            /* opcode DAh EBh  not defined */
            /* opcode DAh ECh  not defined */
            /* opcode DAh EDh  not defined */
            /* opcode DAh EEh  not defined */
            /* opcode DAh EFh  not defined */
            /* opcode DAh F0h  not defined */
            /* opcode DAh F1h  not defined */
            /* opcode DAh F2h  not defined */
            /* opcode DAh F3h  not defined */
            /* opcode DAh F4h  not defined */
            /* opcode DAh F5h  not defined */
            /* opcode DAh F6h  not defined */
            /* opcode DAh F7h  not defined */
            /* opcode DAh F8h  not defined */
            /* opcode DAh F9h  not defined */
            /* opcode DAh FAh  not defined */
            /* opcode DAh FBh  not defined */
            /* opcode DAh FCh  not defined */
            /* opcode DAh FDh  not defined */
            /* opcode DAh FEh  not defined */
            /* opcode DAh FFh  not defined */
            default:
                goto _x86decode_illegal_opcode;
        };
/* End of opcodes starting with DAh */
        break;
    case 0xDB: /* DBh        spec:  */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        _x86decode_begin_code32_addr32_opcode_parse_DB:
/* Opcodes starting with DBh */
        switch (mrm.byte) {
            case 0x00: /* DBh 00h FLDd w32(r/m) mod=0 reg=0 rm=0      spec: 0xDB mod/reg/rm /0 mod!=3 */
            case 0x01: /* DBh 01h FLDd w32(r/m) mod=0 reg=0 rm=1      spec: 0xDB mod/reg/rm /0 mod!=3 */
            case 0x02: /* DBh 02h FLDd w32(r/m) mod=0 reg=0 rm=2      spec: 0xDB mod/reg/rm /0 mod!=3 */
            case 0x03: /* DBh 03h FLDd w32(r/m) mod=0 reg=0 rm=3      spec: 0xDB mod/reg/rm /0 mod!=3 */
            case 0x04: /* DBh 04h FLDd w32(r/m) mod=0 reg=0 rm=4      spec: 0xDB mod/reg/rm /0 mod!=3 */
            case 0x05: /* DBh 05h FLDd w32(r/m) mod=0 reg=0 rm=5      spec: 0xDB mod/reg/rm /0 mod!=3 */
            case 0x06: /* DBh 06h FLDd w32(r/m) mod=0 reg=0 rm=6      spec: 0xDB mod/reg/rm /0 mod!=3 */
            case 0x07: /* DBh 07h FLDd w32(r/m) mod=0 reg=0 rm=7      spec: 0xDB mod/reg/rm /0 mod!=3 */
            case 0x40: /* DBh 40h FLDd w32(r/m) mod=1 reg=0 rm=0      spec: 0xDB mod/reg/rm /0 mod!=3 */
            case 0x41: /* DBh 41h FLDd w32(r/m) mod=1 reg=0 rm=1      spec: 0xDB mod/reg/rm /0 mod!=3 */
            case 0x42: /* DBh 42h FLDd w32(r/m) mod=1 reg=0 rm=2      spec: 0xDB mod/reg/rm /0 mod!=3 */
            case 0x43: /* DBh 43h FLDd w32(r/m) mod=1 reg=0 rm=3      spec: 0xDB mod/reg/rm /0 mod!=3 */
            case 0x44: /* DBh 44h FLDd w32(r/m) mod=1 reg=0 rm=4      spec: 0xDB mod/reg/rm /0 mod!=3 */
            case 0x45: /* DBh 45h FLDd w32(r/m) mod=1 reg=0 rm=5      spec: 0xDB mod/reg/rm /0 mod!=3 */
            case 0x46: /* DBh 46h FLDd w32(r/m) mod=1 reg=0 rm=6      spec: 0xDB mod/reg/rm /0 mod!=3 */
            case 0x47: /* DBh 47h FLDd w32(r/m) mod=1 reg=0 rm=7      spec: 0xDB mod/reg/rm /0 mod!=3 */
            case 0x80: /* DBh 80h FLDd w32(r/m) mod=2 reg=0 rm=0      spec: 0xDB mod/reg/rm /0 mod!=3 */
            case 0x81: /* DBh 81h FLDd w32(r/m) mod=2 reg=0 rm=1      spec: 0xDB mod/reg/rm /0 mod!=3 */
            case 0x82: /* DBh 82h FLDd w32(r/m) mod=2 reg=0 rm=2      spec: 0xDB mod/reg/rm /0 mod!=3 */
            case 0x83: /* DBh 83h FLDd w32(r/m) mod=2 reg=0 rm=3      spec: 0xDB mod/reg/rm /0 mod!=3 */
            case 0x84: /* DBh 84h FLDd w32(r/m) mod=2 reg=0 rm=4      spec: 0xDB mod/reg/rm /0 mod!=3 */
            case 0x85: /* DBh 85h FLDd w32(r/m) mod=2 reg=0 rm=5      spec: 0xDB mod/reg/rm /0 mod!=3 */
            case 0x86: /* DBh 86h FLDd w32(r/m) mod=2 reg=0 rm=6      spec: 0xDB mod/reg/rm /0 mod!=3 */
            case 0x87: /* DBh 87h FLDd w32(r/m) mod=2 reg=0 rm=7      spec: 0xDB mod/reg/rm /0 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FLDd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"w32"));
                break;
            case 0x08: /* DBh 08h FISTTP w32(r/m) mod=0 reg=1 rm=0      spec: 0xDB mod/reg/rm /1 mod!=3 */
            case 0x09: /* DBh 09h FISTTP w32(r/m) mod=0 reg=1 rm=1      spec: 0xDB mod/reg/rm /1 mod!=3 */
            case 0x0A: /* DBh 0Ah FISTTP w32(r/m) mod=0 reg=1 rm=2      spec: 0xDB mod/reg/rm /1 mod!=3 */
            case 0x0B: /* DBh 0Bh FISTTP w32(r/m) mod=0 reg=1 rm=3      spec: 0xDB mod/reg/rm /1 mod!=3 */
            case 0x0C: /* DBh 0Ch FISTTP w32(r/m) mod=0 reg=1 rm=4      spec: 0xDB mod/reg/rm /1 mod!=3 */
            case 0x0D: /* DBh 0Dh FISTTP w32(r/m) mod=0 reg=1 rm=5      spec: 0xDB mod/reg/rm /1 mod!=3 */
            case 0x0E: /* DBh 0Eh FISTTP w32(r/m) mod=0 reg=1 rm=6      spec: 0xDB mod/reg/rm /1 mod!=3 */
            case 0x0F: /* DBh 0Fh FISTTP w32(r/m) mod=0 reg=1 rm=7      spec: 0xDB mod/reg/rm /1 mod!=3 */
            case 0x48: /* DBh 48h FISTTP w32(r/m) mod=1 reg=1 rm=0      spec: 0xDB mod/reg/rm /1 mod!=3 */
            case 0x49: /* DBh 49h FISTTP w32(r/m) mod=1 reg=1 rm=1      spec: 0xDB mod/reg/rm /1 mod!=3 */
            case 0x4A: /* DBh 4Ah FISTTP w32(r/m) mod=1 reg=1 rm=2      spec: 0xDB mod/reg/rm /1 mod!=3 */
            case 0x4B: /* DBh 4Bh FISTTP w32(r/m) mod=1 reg=1 rm=3      spec: 0xDB mod/reg/rm /1 mod!=3 */
            case 0x4C: /* DBh 4Ch FISTTP w32(r/m) mod=1 reg=1 rm=4      spec: 0xDB mod/reg/rm /1 mod!=3 */
            case 0x4D: /* DBh 4Dh FISTTP w32(r/m) mod=1 reg=1 rm=5      spec: 0xDB mod/reg/rm /1 mod!=3 */
            case 0x4E: /* DBh 4Eh FISTTP w32(r/m) mod=1 reg=1 rm=6      spec: 0xDB mod/reg/rm /1 mod!=3 */
            case 0x4F: /* DBh 4Fh FISTTP w32(r/m) mod=1 reg=1 rm=7      spec: 0xDB mod/reg/rm /1 mod!=3 */
            case 0x88: /* DBh 88h FISTTP w32(r/m) mod=2 reg=1 rm=0      spec: 0xDB mod/reg/rm /1 mod!=3 */
            case 0x89: /* DBh 89h FISTTP w32(r/m) mod=2 reg=1 rm=1      spec: 0xDB mod/reg/rm /1 mod!=3 */
            case 0x8A: /* DBh 8Ah FISTTP w32(r/m) mod=2 reg=1 rm=2      spec: 0xDB mod/reg/rm /1 mod!=3 */
            case 0x8B: /* DBh 8Bh FISTTP w32(r/m) mod=2 reg=1 rm=3      spec: 0xDB mod/reg/rm /1 mod!=3 */
            case 0x8C: /* DBh 8Ch FISTTP w32(r/m) mod=2 reg=1 rm=4      spec: 0xDB mod/reg/rm /1 mod!=3 */
            case 0x8D: /* DBh 8Dh FISTTP w32(r/m) mod=2 reg=1 rm=5      spec: 0xDB mod/reg/rm /1 mod!=3 */
            case 0x8E: /* DBh 8Eh FISTTP w32(r/m) mod=2 reg=1 rm=6      spec: 0xDB mod/reg/rm /1 mod!=3 */
            case 0x8F: /* DBh 8Fh FISTTP w32(r/m) mod=2 reg=1 rm=7      spec: 0xDB mod/reg/rm /1 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FISTTP %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"w32"));
                break;
            case 0x10: /* DBh 10h FSTd w32(r/m) mod=0 reg=2 rm=0      spec: 0xDB mod/reg/rm /2 mod!=3 */
            case 0x11: /* DBh 11h FSTd w32(r/m) mod=0 reg=2 rm=1      spec: 0xDB mod/reg/rm /2 mod!=3 */
            case 0x12: /* DBh 12h FSTd w32(r/m) mod=0 reg=2 rm=2      spec: 0xDB mod/reg/rm /2 mod!=3 */
            case 0x13: /* DBh 13h FSTd w32(r/m) mod=0 reg=2 rm=3      spec: 0xDB mod/reg/rm /2 mod!=3 */
            case 0x14: /* DBh 14h FSTd w32(r/m) mod=0 reg=2 rm=4      spec: 0xDB mod/reg/rm /2 mod!=3 */
            case 0x15: /* DBh 15h FSTd w32(r/m) mod=0 reg=2 rm=5      spec: 0xDB mod/reg/rm /2 mod!=3 */
            case 0x16: /* DBh 16h FSTd w32(r/m) mod=0 reg=2 rm=6      spec: 0xDB mod/reg/rm /2 mod!=3 */
            case 0x17: /* DBh 17h FSTd w32(r/m) mod=0 reg=2 rm=7      spec: 0xDB mod/reg/rm /2 mod!=3 */
            case 0x50: /* DBh 50h FSTd w32(r/m) mod=1 reg=2 rm=0      spec: 0xDB mod/reg/rm /2 mod!=3 */
            case 0x51: /* DBh 51h FSTd w32(r/m) mod=1 reg=2 rm=1      spec: 0xDB mod/reg/rm /2 mod!=3 */
            case 0x52: /* DBh 52h FSTd w32(r/m) mod=1 reg=2 rm=2      spec: 0xDB mod/reg/rm /2 mod!=3 */
            case 0x53: /* DBh 53h FSTd w32(r/m) mod=1 reg=2 rm=3      spec: 0xDB mod/reg/rm /2 mod!=3 */
            case 0x54: /* DBh 54h FSTd w32(r/m) mod=1 reg=2 rm=4      spec: 0xDB mod/reg/rm /2 mod!=3 */
            case 0x55: /* DBh 55h FSTd w32(r/m) mod=1 reg=2 rm=5      spec: 0xDB mod/reg/rm /2 mod!=3 */
            case 0x56: /* DBh 56h FSTd w32(r/m) mod=1 reg=2 rm=6      spec: 0xDB mod/reg/rm /2 mod!=3 */
            case 0x57: /* DBh 57h FSTd w32(r/m) mod=1 reg=2 rm=7      spec: 0xDB mod/reg/rm /2 mod!=3 */
            case 0x90: /* DBh 90h FSTd w32(r/m) mod=2 reg=2 rm=0      spec: 0xDB mod/reg/rm /2 mod!=3 */
            case 0x91: /* DBh 91h FSTd w32(r/m) mod=2 reg=2 rm=1      spec: 0xDB mod/reg/rm /2 mod!=3 */
            case 0x92: /* DBh 92h FSTd w32(r/m) mod=2 reg=2 rm=2      spec: 0xDB mod/reg/rm /2 mod!=3 */
            case 0x93: /* DBh 93h FSTd w32(r/m) mod=2 reg=2 rm=3      spec: 0xDB mod/reg/rm /2 mod!=3 */
            case 0x94: /* DBh 94h FSTd w32(r/m) mod=2 reg=2 rm=4      spec: 0xDB mod/reg/rm /2 mod!=3 */
            case 0x95: /* DBh 95h FSTd w32(r/m) mod=2 reg=2 rm=5      spec: 0xDB mod/reg/rm /2 mod!=3 */
            case 0x96: /* DBh 96h FSTd w32(r/m) mod=2 reg=2 rm=6      spec: 0xDB mod/reg/rm /2 mod!=3 */
            case 0x97: /* DBh 97h FSTd w32(r/m) mod=2 reg=2 rm=7      spec: 0xDB mod/reg/rm /2 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSTd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"w32"));
                break;
            case 0x18: /* DBh 18h FSTPd w32(r/m) mod=0 reg=3 rm=0      spec: 0xDB mod/reg/rm /3 mod!=3 */
            case 0x19: /* DBh 19h FSTPd w32(r/m) mod=0 reg=3 rm=1      spec: 0xDB mod/reg/rm /3 mod!=3 */
            case 0x1A: /* DBh 1Ah FSTPd w32(r/m) mod=0 reg=3 rm=2      spec: 0xDB mod/reg/rm /3 mod!=3 */
            case 0x1B: /* DBh 1Bh FSTPd w32(r/m) mod=0 reg=3 rm=3      spec: 0xDB mod/reg/rm /3 mod!=3 */
            case 0x1C: /* DBh 1Ch FSTPd w32(r/m) mod=0 reg=3 rm=4      spec: 0xDB mod/reg/rm /3 mod!=3 */
            case 0x1D: /* DBh 1Dh FSTPd w32(r/m) mod=0 reg=3 rm=5      spec: 0xDB mod/reg/rm /3 mod!=3 */
            case 0x1E: /* DBh 1Eh FSTPd w32(r/m) mod=0 reg=3 rm=6      spec: 0xDB mod/reg/rm /3 mod!=3 */
            case 0x1F: /* DBh 1Fh FSTPd w32(r/m) mod=0 reg=3 rm=7      spec: 0xDB mod/reg/rm /3 mod!=3 */
            case 0x58: /* DBh 58h FSTPd w32(r/m) mod=1 reg=3 rm=0      spec: 0xDB mod/reg/rm /3 mod!=3 */
            case 0x59: /* DBh 59h FSTPd w32(r/m) mod=1 reg=3 rm=1      spec: 0xDB mod/reg/rm /3 mod!=3 */
            case 0x5A: /* DBh 5Ah FSTPd w32(r/m) mod=1 reg=3 rm=2      spec: 0xDB mod/reg/rm /3 mod!=3 */
            case 0x5B: /* DBh 5Bh FSTPd w32(r/m) mod=1 reg=3 rm=3      spec: 0xDB mod/reg/rm /3 mod!=3 */
            case 0x5C: /* DBh 5Ch FSTPd w32(r/m) mod=1 reg=3 rm=4      spec: 0xDB mod/reg/rm /3 mod!=3 */
            case 0x5D: /* DBh 5Dh FSTPd w32(r/m) mod=1 reg=3 rm=5      spec: 0xDB mod/reg/rm /3 mod!=3 */
            case 0x5E: /* DBh 5Eh FSTPd w32(r/m) mod=1 reg=3 rm=6      spec: 0xDB mod/reg/rm /3 mod!=3 */
            case 0x5F: /* DBh 5Fh FSTPd w32(r/m) mod=1 reg=3 rm=7      spec: 0xDB mod/reg/rm /3 mod!=3 */
            case 0x98: /* DBh 98h FSTPd w32(r/m) mod=2 reg=3 rm=0      spec: 0xDB mod/reg/rm /3 mod!=3 */
            case 0x99: /* DBh 99h FSTPd w32(r/m) mod=2 reg=3 rm=1      spec: 0xDB mod/reg/rm /3 mod!=3 */
            case 0x9A: /* DBh 9Ah FSTPd w32(r/m) mod=2 reg=3 rm=2      spec: 0xDB mod/reg/rm /3 mod!=3 */
            case 0x9B: /* DBh 9Bh FSTPd w32(r/m) mod=2 reg=3 rm=3      spec: 0xDB mod/reg/rm /3 mod!=3 */
            case 0x9C: /* DBh 9Ch FSTPd w32(r/m) mod=2 reg=3 rm=4      spec: 0xDB mod/reg/rm /3 mod!=3 */
            case 0x9D: /* DBh 9Dh FSTPd w32(r/m) mod=2 reg=3 rm=5      spec: 0xDB mod/reg/rm /3 mod!=3 */
            case 0x9E: /* DBh 9Eh FSTPd w32(r/m) mod=2 reg=3 rm=6      spec: 0xDB mod/reg/rm /3 mod!=3 */
            case 0x9F: /* DBh 9Fh FSTPd w32(r/m) mod=2 reg=3 rm=7      spec: 0xDB mod/reg/rm /3 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSTPd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"w32"));
                break;
            /* opcode DBh 20h  not defined */
            /* opcode DBh 21h  not defined */
            /* opcode DBh 22h  not defined */
            /* opcode DBh 23h  not defined */
            /* opcode DBh 24h  not defined */
            /* opcode DBh 25h  not defined */
            /* opcode DBh 26h  not defined */
            /* opcode DBh 27h  not defined */
            case 0x28: /* DBh 28h FLDf80 f80(r/m) mod=0 reg=5 rm=0      spec: 0xDB mod/reg/rm /5 mod!=3 */
            case 0x29: /* DBh 29h FLDf80 f80(r/m) mod=0 reg=5 rm=1      spec: 0xDB mod/reg/rm /5 mod!=3 */
            case 0x2A: /* DBh 2Ah FLDf80 f80(r/m) mod=0 reg=5 rm=2      spec: 0xDB mod/reg/rm /5 mod!=3 */
            case 0x2B: /* DBh 2Bh FLDf80 f80(r/m) mod=0 reg=5 rm=3      spec: 0xDB mod/reg/rm /5 mod!=3 */
            case 0x2C: /* DBh 2Ch FLDf80 f80(r/m) mod=0 reg=5 rm=4      spec: 0xDB mod/reg/rm /5 mod!=3 */
            case 0x2D: /* DBh 2Dh FLDf80 f80(r/m) mod=0 reg=5 rm=5      spec: 0xDB mod/reg/rm /5 mod!=3 */
            case 0x2E: /* DBh 2Eh FLDf80 f80(r/m) mod=0 reg=5 rm=6      spec: 0xDB mod/reg/rm /5 mod!=3 */
            case 0x2F: /* DBh 2Fh FLDf80 f80(r/m) mod=0 reg=5 rm=7      spec: 0xDB mod/reg/rm /5 mod!=3 */
            case 0x68: /* DBh 68h FLDf80 f80(r/m) mod=1 reg=5 rm=0      spec: 0xDB mod/reg/rm /5 mod!=3 */
            case 0x69: /* DBh 69h FLDf80 f80(r/m) mod=1 reg=5 rm=1      spec: 0xDB mod/reg/rm /5 mod!=3 */
            case 0x6A: /* DBh 6Ah FLDf80 f80(r/m) mod=1 reg=5 rm=2      spec: 0xDB mod/reg/rm /5 mod!=3 */
            case 0x6B: /* DBh 6Bh FLDf80 f80(r/m) mod=1 reg=5 rm=3      spec: 0xDB mod/reg/rm /5 mod!=3 */
            case 0x6C: /* DBh 6Ch FLDf80 f80(r/m) mod=1 reg=5 rm=4      spec: 0xDB mod/reg/rm /5 mod!=3 */
            case 0x6D: /* DBh 6Dh FLDf80 f80(r/m) mod=1 reg=5 rm=5      spec: 0xDB mod/reg/rm /5 mod!=3 */
            case 0x6E: /* DBh 6Eh FLDf80 f80(r/m) mod=1 reg=5 rm=6      spec: 0xDB mod/reg/rm /5 mod!=3 */
            case 0x6F: /* DBh 6Fh FLDf80 f80(r/m) mod=1 reg=5 rm=7      spec: 0xDB mod/reg/rm /5 mod!=3 */
            case 0xA8: /* DBh A8h FLDf80 f80(r/m) mod=2 reg=5 rm=0      spec: 0xDB mod/reg/rm /5 mod!=3 */
            case 0xA9: /* DBh A9h FLDf80 f80(r/m) mod=2 reg=5 rm=1      spec: 0xDB mod/reg/rm /5 mod!=3 */
            case 0xAA: /* DBh AAh FLDf80 f80(r/m) mod=2 reg=5 rm=2      spec: 0xDB mod/reg/rm /5 mod!=3 */
            case 0xAB: /* DBh ABh FLDf80 f80(r/m) mod=2 reg=5 rm=3      spec: 0xDB mod/reg/rm /5 mod!=3 */
            case 0xAC: /* DBh ACh FLDf80 f80(r/m) mod=2 reg=5 rm=4      spec: 0xDB mod/reg/rm /5 mod!=3 */
            case 0xAD: /* DBh ADh FLDf80 f80(r/m) mod=2 reg=5 rm=5      spec: 0xDB mod/reg/rm /5 mod!=3 */
            case 0xAE: /* DBh AEh FLDf80 f80(r/m) mod=2 reg=5 rm=6      spec: 0xDB mod/reg/rm /5 mod!=3 */
            case 0xAF: /* DBh AFh FLDf80 f80(r/m) mod=2 reg=5 rm=7      spec: 0xDB mod/reg/rm /5 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FLDf80 %s",IPDecPrint32(mrm,sib,disp,10,RC_FPUREG,"f80"));
                break;
            /* opcode DBh 30h  not defined */
            /* opcode DBh 31h  not defined */
            /* opcode DBh 32h  not defined */
            /* opcode DBh 33h  not defined */
            /* opcode DBh 34h  not defined */
            /* opcode DBh 35h  not defined */
            /* opcode DBh 36h  not defined */
            /* opcode DBh 37h  not defined */
            case 0x38: /* DBh 38h FSTPf80 f80(r/m) mod=0 reg=7 rm=0      spec: 0xDB mod/reg/rm /7 mod!=3 */
            case 0x39: /* DBh 39h FSTPf80 f80(r/m) mod=0 reg=7 rm=1      spec: 0xDB mod/reg/rm /7 mod!=3 */
            case 0x3A: /* DBh 3Ah FSTPf80 f80(r/m) mod=0 reg=7 rm=2      spec: 0xDB mod/reg/rm /7 mod!=3 */
            case 0x3B: /* DBh 3Bh FSTPf80 f80(r/m) mod=0 reg=7 rm=3      spec: 0xDB mod/reg/rm /7 mod!=3 */
            case 0x3C: /* DBh 3Ch FSTPf80 f80(r/m) mod=0 reg=7 rm=4      spec: 0xDB mod/reg/rm /7 mod!=3 */
            case 0x3D: /* DBh 3Dh FSTPf80 f80(r/m) mod=0 reg=7 rm=5      spec: 0xDB mod/reg/rm /7 mod!=3 */
            case 0x3E: /* DBh 3Eh FSTPf80 f80(r/m) mod=0 reg=7 rm=6      spec: 0xDB mod/reg/rm /7 mod!=3 */
            case 0x3F: /* DBh 3Fh FSTPf80 f80(r/m) mod=0 reg=7 rm=7      spec: 0xDB mod/reg/rm /7 mod!=3 */
            case 0x78: /* DBh 78h FSTPf80 f80(r/m) mod=1 reg=7 rm=0      spec: 0xDB mod/reg/rm /7 mod!=3 */
            case 0x79: /* DBh 79h FSTPf80 f80(r/m) mod=1 reg=7 rm=1      spec: 0xDB mod/reg/rm /7 mod!=3 */
            case 0x7A: /* DBh 7Ah FSTPf80 f80(r/m) mod=1 reg=7 rm=2      spec: 0xDB mod/reg/rm /7 mod!=3 */
            case 0x7B: /* DBh 7Bh FSTPf80 f80(r/m) mod=1 reg=7 rm=3      spec: 0xDB mod/reg/rm /7 mod!=3 */
            case 0x7C: /* DBh 7Ch FSTPf80 f80(r/m) mod=1 reg=7 rm=4      spec: 0xDB mod/reg/rm /7 mod!=3 */
            case 0x7D: /* DBh 7Dh FSTPf80 f80(r/m) mod=1 reg=7 rm=5      spec: 0xDB mod/reg/rm /7 mod!=3 */
            case 0x7E: /* DBh 7Eh FSTPf80 f80(r/m) mod=1 reg=7 rm=6      spec: 0xDB mod/reg/rm /7 mod!=3 */
            case 0x7F: /* DBh 7Fh FSTPf80 f80(r/m) mod=1 reg=7 rm=7      spec: 0xDB mod/reg/rm /7 mod!=3 */
            case 0xB8: /* DBh B8h FSTPf80 f80(r/m) mod=2 reg=7 rm=0      spec: 0xDB mod/reg/rm /7 mod!=3 */
            case 0xB9: /* DBh B9h FSTPf80 f80(r/m) mod=2 reg=7 rm=1      spec: 0xDB mod/reg/rm /7 mod!=3 */
            case 0xBA: /* DBh BAh FSTPf80 f80(r/m) mod=2 reg=7 rm=2      spec: 0xDB mod/reg/rm /7 mod!=3 */
            case 0xBB: /* DBh BBh FSTPf80 f80(r/m) mod=2 reg=7 rm=3      spec: 0xDB mod/reg/rm /7 mod!=3 */
            case 0xBC: /* DBh BCh FSTPf80 f80(r/m) mod=2 reg=7 rm=4      spec: 0xDB mod/reg/rm /7 mod!=3 */
            case 0xBD: /* DBh BDh FSTPf80 f80(r/m) mod=2 reg=7 rm=5      spec: 0xDB mod/reg/rm /7 mod!=3 */
            case 0xBE: /* DBh BEh FSTPf80 f80(r/m) mod=2 reg=7 rm=6      spec: 0xDB mod/reg/rm /7 mod!=3 */
            case 0xBF: /* DBh BFh FSTPf80 f80(r/m) mod=2 reg=7 rm=7      spec: 0xDB mod/reg/rm /7 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSTPf80 %s",IPDecPrint32(mrm,sib,disp,10,RC_FPUREG,"f80"));
                break;
            /* opcode DBh 60h  not defined */
            /* opcode DBh 61h  not defined */
            /* opcode DBh 62h  not defined */
            /* opcode DBh 63h  not defined */
            /* opcode DBh 64h  not defined */
            /* opcode DBh 65h  not defined */
            /* opcode DBh 66h  not defined */
            /* opcode DBh 67h  not defined */
            /* opcode DBh 70h  not defined */
            /* opcode DBh 71h  not defined */
            /* opcode DBh 72h  not defined */
            /* opcode DBh 73h  not defined */
            /* opcode DBh 74h  not defined */
            /* opcode DBh 75h  not defined */
            /* opcode DBh 76h  not defined */
            /* opcode DBh 77h  not defined */
            /* opcode DBh A0h  not defined */
            /* opcode DBh A1h  not defined */
            /* opcode DBh A2h  not defined */
            /* opcode DBh A3h  not defined */
            /* opcode DBh A4h  not defined */
            /* opcode DBh A5h  not defined */
            /* opcode DBh A6h  not defined */
            /* opcode DBh A7h  not defined */
            /* opcode DBh B0h  not defined */
            /* opcode DBh B1h  not defined */
            /* opcode DBh B2h  not defined */
            /* opcode DBh B3h  not defined */
            /* opcode DBh B4h  not defined */
            /* opcode DBh B5h  not defined */
            /* opcode DBh B6h  not defined */
            /* opcode DBh B7h  not defined */
            case 0xC0: /* DBh C0h FCMOVNB st(0),st(r/m) mod=3 reg=0 rm=0      spec: 0xDB mod/reg/rm /0 mod==3 */
            case 0xC1: /* DBh C1h FCMOVNB st(0),st(r/m) mod=3 reg=0 rm=1      spec: 0xDB mod/reg/rm /0 mod==3 */
            case 0xC2: /* DBh C2h FCMOVNB st(0),st(r/m) mod=3 reg=0 rm=2      spec: 0xDB mod/reg/rm /0 mod==3 */
            case 0xC3: /* DBh C3h FCMOVNB st(0),st(r/m) mod=3 reg=0 rm=3      spec: 0xDB mod/reg/rm /0 mod==3 */
            case 0xC4: /* DBh C4h FCMOVNB st(0),st(r/m) mod=3 reg=0 rm=4      spec: 0xDB mod/reg/rm /0 mod==3 */
            case 0xC5: /* DBh C5h FCMOVNB st(0),st(r/m) mod=3 reg=0 rm=5      spec: 0xDB mod/reg/rm /0 mod==3 */
            case 0xC6: /* DBh C6h FCMOVNB st(0),st(r/m) mod=3 reg=0 rm=6      spec: 0xDB mod/reg/rm /0 mod==3 */
            case 0xC7: /* DBh C7h FCMOVNB st(0),st(r/m) mod=3 reg=0 rm=7      spec: 0xDB mod/reg/rm /0 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FCMOVNB ST(%u),%s",0,IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""));
                break;
            case 0xC8: /* DBh C8h FCMOVNE st(0),st(r/m) mod=3 reg=1 rm=0      spec: 0xDB mod/reg/rm /1 mod==3 */
            case 0xC9: /* DBh C9h FCMOVNE st(0),st(r/m) mod=3 reg=1 rm=1      spec: 0xDB mod/reg/rm /1 mod==3 */
            case 0xCA: /* DBh CAh FCMOVNE st(0),st(r/m) mod=3 reg=1 rm=2      spec: 0xDB mod/reg/rm /1 mod==3 */
            case 0xCB: /* DBh CBh FCMOVNE st(0),st(r/m) mod=3 reg=1 rm=3      spec: 0xDB mod/reg/rm /1 mod==3 */
            case 0xCC: /* DBh CCh FCMOVNE st(0),st(r/m) mod=3 reg=1 rm=4      spec: 0xDB mod/reg/rm /1 mod==3 */
            case 0xCD: /* DBh CDh FCMOVNE st(0),st(r/m) mod=3 reg=1 rm=5      spec: 0xDB mod/reg/rm /1 mod==3 */
            case 0xCE: /* DBh CEh FCMOVNE st(0),st(r/m) mod=3 reg=1 rm=6      spec: 0xDB mod/reg/rm /1 mod==3 */
            case 0xCF: /* DBh CFh FCMOVNE st(0),st(r/m) mod=3 reg=1 rm=7      spec: 0xDB mod/reg/rm /1 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FCMOVNE ST(%u),%s",0,IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""));
                break;
            case 0xD0: /* DBh D0h FCMOVNBE st(0),st(r/m) mod=3 reg=2 rm=0      spec: 0xDB mod/reg/rm /2 mod==3 */
            case 0xD1: /* DBh D1h FCMOVNBE st(0),st(r/m) mod=3 reg=2 rm=1      spec: 0xDB mod/reg/rm /2 mod==3 */
            case 0xD2: /* DBh D2h FCMOVNBE st(0),st(r/m) mod=3 reg=2 rm=2      spec: 0xDB mod/reg/rm /2 mod==3 */
            case 0xD3: /* DBh D3h FCMOVNBE st(0),st(r/m) mod=3 reg=2 rm=3      spec: 0xDB mod/reg/rm /2 mod==3 */
            case 0xD4: /* DBh D4h FCMOVNBE st(0),st(r/m) mod=3 reg=2 rm=4      spec: 0xDB mod/reg/rm /2 mod==3 */
            case 0xD5: /* DBh D5h FCMOVNBE st(0),st(r/m) mod=3 reg=2 rm=5      spec: 0xDB mod/reg/rm /2 mod==3 */
            case 0xD6: /* DBh D6h FCMOVNBE st(0),st(r/m) mod=3 reg=2 rm=6      spec: 0xDB mod/reg/rm /2 mod==3 */
            case 0xD7: /* DBh D7h FCMOVNBE st(0),st(r/m) mod=3 reg=2 rm=7      spec: 0xDB mod/reg/rm /2 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FCMOVNBE ST(%u),%s",0,IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""));
                break;
            case 0xD8: /* DBh D8h FCMOVNU st(0),st(r/m) mod=3 reg=3 rm=0      spec: 0xDB mod/reg/rm /3 mod==3 */
            case 0xD9: /* DBh D9h FCMOVNU st(0),st(r/m) mod=3 reg=3 rm=1      spec: 0xDB mod/reg/rm /3 mod==3 */
            case 0xDA: /* DBh DAh FCMOVNU st(0),st(r/m) mod=3 reg=3 rm=2      spec: 0xDB mod/reg/rm /3 mod==3 */
            case 0xDB: /* DBh DBh FCMOVNU st(0),st(r/m) mod=3 reg=3 rm=3      spec: 0xDB mod/reg/rm /3 mod==3 */
            case 0xDC: /* DBh DCh FCMOVNU st(0),st(r/m) mod=3 reg=3 rm=4      spec: 0xDB mod/reg/rm /3 mod==3 */
            case 0xDD: /* DBh DDh FCMOVNU st(0),st(r/m) mod=3 reg=3 rm=5      spec: 0xDB mod/reg/rm /3 mod==3 */
            case 0xDE: /* DBh DEh FCMOVNU st(0),st(r/m) mod=3 reg=3 rm=6      spec: 0xDB mod/reg/rm /3 mod==3 */
            case 0xDF: /* DBh DFh FCMOVNU st(0),st(r/m) mod=3 reg=3 rm=7      spec: 0xDB mod/reg/rm /3 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FCMOVNU ST(%u),%s",0,IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""));
                break;
            case 0xE0: /* DBh E0h FENI  mod=3 reg=4 rm=0      spec: 0xDB 0xE0 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FENI");
                break;
            case 0xE1: /* DBh E1h FDISI  mod=3 reg=4 rm=1      spec: 0xDB 0xE1 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FDISI");
                break;
            case 0xE2: /* DBh E2h FCLEX  mod=3 reg=4 rm=2      spec: 0xDB 0xE2 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FCLEX");
                break;
            case 0xE3: /* DBh E3h FINIT  mod=3 reg=4 rm=3      spec: 0xDB 0xE3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FINIT");
                break;
            case 0xE4: /* DBh E4h FSETPM  mod=3 reg=4 rm=4      spec: 0xDB 0xE4 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSETPM");
                break;
            /* opcode DBh E5h  not defined */
            /* opcode DBh E6h  not defined */
            /* opcode DBh E7h  not defined */
            case 0xE8: /* DBh E8h FUCOMI st(0),st(r/m) mod=3 reg=5 rm=0      spec: 0xDB mod/reg/rm /5 mod==3 */
            case 0xE9: /* DBh E9h FUCOMI st(0),st(r/m) mod=3 reg=5 rm=1      spec: 0xDB mod/reg/rm /5 mod==3 */
            case 0xEA: /* DBh EAh FUCOMI st(0),st(r/m) mod=3 reg=5 rm=2      spec: 0xDB mod/reg/rm /5 mod==3 */
            case 0xEB: /* DBh EBh FUCOMI st(0),st(r/m) mod=3 reg=5 rm=3      spec: 0xDB mod/reg/rm /5 mod==3 */
            case 0xEC: /* DBh ECh FUCOMI st(0),st(r/m) mod=3 reg=5 rm=4      spec: 0xDB mod/reg/rm /5 mod==3 */
            case 0xED: /* DBh EDh FUCOMI st(0),st(r/m) mod=3 reg=5 rm=5      spec: 0xDB mod/reg/rm /5 mod==3 */
            case 0xEE: /* DBh EEh FUCOMI st(0),st(r/m) mod=3 reg=5 rm=6      spec: 0xDB mod/reg/rm /5 mod==3 */
            case 0xEF: /* DBh EFh FUCOMI st(0),st(r/m) mod=3 reg=5 rm=7      spec: 0xDB mod/reg/rm /5 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FUCOMI ST(%u),%s",0,IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""));
                break;
            case 0xF0: /* DBh F0h FCOMI st(0),st(r/m) mod=3 reg=6 rm=0      spec: 0xDB mod/reg/rm /6 mod==3 */
            case 0xF1: /* DBh F1h FCOMI st(0),st(r/m) mod=3 reg=6 rm=1      spec: 0xDB mod/reg/rm /6 mod==3 */
            case 0xF2: /* DBh F2h FCOMI st(0),st(r/m) mod=3 reg=6 rm=2      spec: 0xDB mod/reg/rm /6 mod==3 */
            case 0xF3: /* DBh F3h FCOMI st(0),st(r/m) mod=3 reg=6 rm=3      spec: 0xDB mod/reg/rm /6 mod==3 */
            case 0xF4: /* DBh F4h FCOMI st(0),st(r/m) mod=3 reg=6 rm=4      spec: 0xDB mod/reg/rm /6 mod==3 */
            case 0xF5: /* DBh F5h FCOMI st(0),st(r/m) mod=3 reg=6 rm=5      spec: 0xDB mod/reg/rm /6 mod==3 */
            case 0xF6: /* DBh F6h FCOMI st(0),st(r/m) mod=3 reg=6 rm=6      spec: 0xDB mod/reg/rm /6 mod==3 */
            case 0xF7: /* DBh F7h FCOMI st(0),st(r/m) mod=3 reg=6 rm=7      spec: 0xDB mod/reg/rm /6 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FCOMI ST(%u),%s",0,IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""));
                break;
            /* opcode DBh F8h  not defined */
            /* opcode DBh F9h  not defined */
            /* opcode DBh FAh  not defined */
            /* opcode DBh FBh  not defined */
            /* opcode DBh FCh  not defined */
            /* opcode DBh FDh  not defined */
            /* opcode DBh FEh  not defined */
            /* opcode DBh FFh  not defined */
            default:
                goto _x86decode_illegal_opcode;
        };
/* End of opcodes starting with DBh */
        break;
    case 0xDC: /* DCh        spec:  */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        _x86decode_begin_code32_addr32_opcode_parse_DC:
/* Opcodes starting with DCh */
        switch (mrm.byte) {
            case 0x00: /* DCh 00h FADDf64 f64(r/m) mod=0 reg=0 rm=0      spec: 0xDC mod/reg/rm /0 mod!=3 */
            case 0x01: /* DCh 01h FADDf64 f64(r/m) mod=0 reg=0 rm=1      spec: 0xDC mod/reg/rm /0 mod!=3 */
            case 0x02: /* DCh 02h FADDf64 f64(r/m) mod=0 reg=0 rm=2      spec: 0xDC mod/reg/rm /0 mod!=3 */
            case 0x03: /* DCh 03h FADDf64 f64(r/m) mod=0 reg=0 rm=3      spec: 0xDC mod/reg/rm /0 mod!=3 */
            case 0x04: /* DCh 04h FADDf64 f64(r/m) mod=0 reg=0 rm=4      spec: 0xDC mod/reg/rm /0 mod!=3 */
            case 0x05: /* DCh 05h FADDf64 f64(r/m) mod=0 reg=0 rm=5      spec: 0xDC mod/reg/rm /0 mod!=3 */
            case 0x06: /* DCh 06h FADDf64 f64(r/m) mod=0 reg=0 rm=6      spec: 0xDC mod/reg/rm /0 mod!=3 */
            case 0x07: /* DCh 07h FADDf64 f64(r/m) mod=0 reg=0 rm=7      spec: 0xDC mod/reg/rm /0 mod!=3 */
            case 0x40: /* DCh 40h FADDf64 f64(r/m) mod=1 reg=0 rm=0      spec: 0xDC mod/reg/rm /0 mod!=3 */
            case 0x41: /* DCh 41h FADDf64 f64(r/m) mod=1 reg=0 rm=1      spec: 0xDC mod/reg/rm /0 mod!=3 */
            case 0x42: /* DCh 42h FADDf64 f64(r/m) mod=1 reg=0 rm=2      spec: 0xDC mod/reg/rm /0 mod!=3 */
            case 0x43: /* DCh 43h FADDf64 f64(r/m) mod=1 reg=0 rm=3      spec: 0xDC mod/reg/rm /0 mod!=3 */
            case 0x44: /* DCh 44h FADDf64 f64(r/m) mod=1 reg=0 rm=4      spec: 0xDC mod/reg/rm /0 mod!=3 */
            case 0x45: /* DCh 45h FADDf64 f64(r/m) mod=1 reg=0 rm=5      spec: 0xDC mod/reg/rm /0 mod!=3 */
            case 0x46: /* DCh 46h FADDf64 f64(r/m) mod=1 reg=0 rm=6      spec: 0xDC mod/reg/rm /0 mod!=3 */
            case 0x47: /* DCh 47h FADDf64 f64(r/m) mod=1 reg=0 rm=7      spec: 0xDC mod/reg/rm /0 mod!=3 */
            case 0x80: /* DCh 80h FADDf64 f64(r/m) mod=2 reg=0 rm=0      spec: 0xDC mod/reg/rm /0 mod!=3 */
            case 0x81: /* DCh 81h FADDf64 f64(r/m) mod=2 reg=0 rm=1      spec: 0xDC mod/reg/rm /0 mod!=3 */
            case 0x82: /* DCh 82h FADDf64 f64(r/m) mod=2 reg=0 rm=2      spec: 0xDC mod/reg/rm /0 mod!=3 */
            case 0x83: /* DCh 83h FADDf64 f64(r/m) mod=2 reg=0 rm=3      spec: 0xDC mod/reg/rm /0 mod!=3 */
            case 0x84: /* DCh 84h FADDf64 f64(r/m) mod=2 reg=0 rm=4      spec: 0xDC mod/reg/rm /0 mod!=3 */
            case 0x85: /* DCh 85h FADDf64 f64(r/m) mod=2 reg=0 rm=5      spec: 0xDC mod/reg/rm /0 mod!=3 */
            case 0x86: /* DCh 86h FADDf64 f64(r/m) mod=2 reg=0 rm=6      spec: 0xDC mod/reg/rm /0 mod!=3 */
            case 0x87: /* DCh 87h FADDf64 f64(r/m) mod=2 reg=0 rm=7      spec: 0xDC mod/reg/rm /0 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FADDf64 %s",IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,"f64"));
                break;
            case 0x08: /* DCh 08h FMULf64 f64(r/m) mod=0 reg=1 rm=0      spec: 0xDC mod/reg/rm /1 mod!=3 */
            case 0x09: /* DCh 09h FMULf64 f64(r/m) mod=0 reg=1 rm=1      spec: 0xDC mod/reg/rm /1 mod!=3 */
            case 0x0A: /* DCh 0Ah FMULf64 f64(r/m) mod=0 reg=1 rm=2      spec: 0xDC mod/reg/rm /1 mod!=3 */
            case 0x0B: /* DCh 0Bh FMULf64 f64(r/m) mod=0 reg=1 rm=3      spec: 0xDC mod/reg/rm /1 mod!=3 */
            case 0x0C: /* DCh 0Ch FMULf64 f64(r/m) mod=0 reg=1 rm=4      spec: 0xDC mod/reg/rm /1 mod!=3 */
            case 0x0D: /* DCh 0Dh FMULf64 f64(r/m) mod=0 reg=1 rm=5      spec: 0xDC mod/reg/rm /1 mod!=3 */
            case 0x0E: /* DCh 0Eh FMULf64 f64(r/m) mod=0 reg=1 rm=6      spec: 0xDC mod/reg/rm /1 mod!=3 */
            case 0x0F: /* DCh 0Fh FMULf64 f64(r/m) mod=0 reg=1 rm=7      spec: 0xDC mod/reg/rm /1 mod!=3 */
            case 0x48: /* DCh 48h FMULf64 f64(r/m) mod=1 reg=1 rm=0      spec: 0xDC mod/reg/rm /1 mod!=3 */
            case 0x49: /* DCh 49h FMULf64 f64(r/m) mod=1 reg=1 rm=1      spec: 0xDC mod/reg/rm /1 mod!=3 */
            case 0x4A: /* DCh 4Ah FMULf64 f64(r/m) mod=1 reg=1 rm=2      spec: 0xDC mod/reg/rm /1 mod!=3 */
            case 0x4B: /* DCh 4Bh FMULf64 f64(r/m) mod=1 reg=1 rm=3      spec: 0xDC mod/reg/rm /1 mod!=3 */
            case 0x4C: /* DCh 4Ch FMULf64 f64(r/m) mod=1 reg=1 rm=4      spec: 0xDC mod/reg/rm /1 mod!=3 */
            case 0x4D: /* DCh 4Dh FMULf64 f64(r/m) mod=1 reg=1 rm=5      spec: 0xDC mod/reg/rm /1 mod!=3 */
            case 0x4E: /* DCh 4Eh FMULf64 f64(r/m) mod=1 reg=1 rm=6      spec: 0xDC mod/reg/rm /1 mod!=3 */
            case 0x4F: /* DCh 4Fh FMULf64 f64(r/m) mod=1 reg=1 rm=7      spec: 0xDC mod/reg/rm /1 mod!=3 */
            case 0x88: /* DCh 88h FMULf64 f64(r/m) mod=2 reg=1 rm=0      spec: 0xDC mod/reg/rm /1 mod!=3 */
            case 0x89: /* DCh 89h FMULf64 f64(r/m) mod=2 reg=1 rm=1      spec: 0xDC mod/reg/rm /1 mod!=3 */
            case 0x8A: /* DCh 8Ah FMULf64 f64(r/m) mod=2 reg=1 rm=2      spec: 0xDC mod/reg/rm /1 mod!=3 */
            case 0x8B: /* DCh 8Bh FMULf64 f64(r/m) mod=2 reg=1 rm=3      spec: 0xDC mod/reg/rm /1 mod!=3 */
            case 0x8C: /* DCh 8Ch FMULf64 f64(r/m) mod=2 reg=1 rm=4      spec: 0xDC mod/reg/rm /1 mod!=3 */
            case 0x8D: /* DCh 8Dh FMULf64 f64(r/m) mod=2 reg=1 rm=5      spec: 0xDC mod/reg/rm /1 mod!=3 */
            case 0x8E: /* DCh 8Eh FMULf64 f64(r/m) mod=2 reg=1 rm=6      spec: 0xDC mod/reg/rm /1 mod!=3 */
            case 0x8F: /* DCh 8Fh FMULf64 f64(r/m) mod=2 reg=1 rm=7      spec: 0xDC mod/reg/rm /1 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FMULf64 %s",IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,"f64"));
                break;
            case 0x10: /* DCh 10h FCOMf64 f64(r/m) mod=0 reg=2 rm=0      spec: 0xDC mod/reg/rm /2 mod!=3 */
            case 0x11: /* DCh 11h FCOMf64 f64(r/m) mod=0 reg=2 rm=1      spec: 0xDC mod/reg/rm /2 mod!=3 */
            case 0x12: /* DCh 12h FCOMf64 f64(r/m) mod=0 reg=2 rm=2      spec: 0xDC mod/reg/rm /2 mod!=3 */
            case 0x13: /* DCh 13h FCOMf64 f64(r/m) mod=0 reg=2 rm=3      spec: 0xDC mod/reg/rm /2 mod!=3 */
            case 0x14: /* DCh 14h FCOMf64 f64(r/m) mod=0 reg=2 rm=4      spec: 0xDC mod/reg/rm /2 mod!=3 */
            case 0x15: /* DCh 15h FCOMf64 f64(r/m) mod=0 reg=2 rm=5      spec: 0xDC mod/reg/rm /2 mod!=3 */
            case 0x16: /* DCh 16h FCOMf64 f64(r/m) mod=0 reg=2 rm=6      spec: 0xDC mod/reg/rm /2 mod!=3 */
            case 0x17: /* DCh 17h FCOMf64 f64(r/m) mod=0 reg=2 rm=7      spec: 0xDC mod/reg/rm /2 mod!=3 */
            case 0x50: /* DCh 50h FCOMf64 f64(r/m) mod=1 reg=2 rm=0      spec: 0xDC mod/reg/rm /2 mod!=3 */
            case 0x51: /* DCh 51h FCOMf64 f64(r/m) mod=1 reg=2 rm=1      spec: 0xDC mod/reg/rm /2 mod!=3 */
            case 0x52: /* DCh 52h FCOMf64 f64(r/m) mod=1 reg=2 rm=2      spec: 0xDC mod/reg/rm /2 mod!=3 */
            case 0x53: /* DCh 53h FCOMf64 f64(r/m) mod=1 reg=2 rm=3      spec: 0xDC mod/reg/rm /2 mod!=3 */
            case 0x54: /* DCh 54h FCOMf64 f64(r/m) mod=1 reg=2 rm=4      spec: 0xDC mod/reg/rm /2 mod!=3 */
            case 0x55: /* DCh 55h FCOMf64 f64(r/m) mod=1 reg=2 rm=5      spec: 0xDC mod/reg/rm /2 mod!=3 */
            case 0x56: /* DCh 56h FCOMf64 f64(r/m) mod=1 reg=2 rm=6      spec: 0xDC mod/reg/rm /2 mod!=3 */
            case 0x57: /* DCh 57h FCOMf64 f64(r/m) mod=1 reg=2 rm=7      spec: 0xDC mod/reg/rm /2 mod!=3 */
            case 0x90: /* DCh 90h FCOMf64 f64(r/m) mod=2 reg=2 rm=0      spec: 0xDC mod/reg/rm /2 mod!=3 */
            case 0x91: /* DCh 91h FCOMf64 f64(r/m) mod=2 reg=2 rm=1      spec: 0xDC mod/reg/rm /2 mod!=3 */
            case 0x92: /* DCh 92h FCOMf64 f64(r/m) mod=2 reg=2 rm=2      spec: 0xDC mod/reg/rm /2 mod!=3 */
            case 0x93: /* DCh 93h FCOMf64 f64(r/m) mod=2 reg=2 rm=3      spec: 0xDC mod/reg/rm /2 mod!=3 */
            case 0x94: /* DCh 94h FCOMf64 f64(r/m) mod=2 reg=2 rm=4      spec: 0xDC mod/reg/rm /2 mod!=3 */
            case 0x95: /* DCh 95h FCOMf64 f64(r/m) mod=2 reg=2 rm=5      spec: 0xDC mod/reg/rm /2 mod!=3 */
            case 0x96: /* DCh 96h FCOMf64 f64(r/m) mod=2 reg=2 rm=6      spec: 0xDC mod/reg/rm /2 mod!=3 */
            case 0x97: /* DCh 97h FCOMf64 f64(r/m) mod=2 reg=2 rm=7      spec: 0xDC mod/reg/rm /2 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FCOMf64 %s",IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,"f64"));
                break;
            case 0x18: /* DCh 18h FCOMPf64 f64(r/m) mod=0 reg=3 rm=0      spec: 0xDC mod/reg/rm /3 mod!=3 */
            case 0x19: /* DCh 19h FCOMPf64 f64(r/m) mod=0 reg=3 rm=1      spec: 0xDC mod/reg/rm /3 mod!=3 */
            case 0x1A: /* DCh 1Ah FCOMPf64 f64(r/m) mod=0 reg=3 rm=2      spec: 0xDC mod/reg/rm /3 mod!=3 */
            case 0x1B: /* DCh 1Bh FCOMPf64 f64(r/m) mod=0 reg=3 rm=3      spec: 0xDC mod/reg/rm /3 mod!=3 */
            case 0x1C: /* DCh 1Ch FCOMPf64 f64(r/m) mod=0 reg=3 rm=4      spec: 0xDC mod/reg/rm /3 mod!=3 */
            case 0x1D: /* DCh 1Dh FCOMPf64 f64(r/m) mod=0 reg=3 rm=5      spec: 0xDC mod/reg/rm /3 mod!=3 */
            case 0x1E: /* DCh 1Eh FCOMPf64 f64(r/m) mod=0 reg=3 rm=6      spec: 0xDC mod/reg/rm /3 mod!=3 */
            case 0x1F: /* DCh 1Fh FCOMPf64 f64(r/m) mod=0 reg=3 rm=7      spec: 0xDC mod/reg/rm /3 mod!=3 */
            case 0x58: /* DCh 58h FCOMPf64 f64(r/m) mod=1 reg=3 rm=0      spec: 0xDC mod/reg/rm /3 mod!=3 */
            case 0x59: /* DCh 59h FCOMPf64 f64(r/m) mod=1 reg=3 rm=1      spec: 0xDC mod/reg/rm /3 mod!=3 */
            case 0x5A: /* DCh 5Ah FCOMPf64 f64(r/m) mod=1 reg=3 rm=2      spec: 0xDC mod/reg/rm /3 mod!=3 */
            case 0x5B: /* DCh 5Bh FCOMPf64 f64(r/m) mod=1 reg=3 rm=3      spec: 0xDC mod/reg/rm /3 mod!=3 */
            case 0x5C: /* DCh 5Ch FCOMPf64 f64(r/m) mod=1 reg=3 rm=4      spec: 0xDC mod/reg/rm /3 mod!=3 */
            case 0x5D: /* DCh 5Dh FCOMPf64 f64(r/m) mod=1 reg=3 rm=5      spec: 0xDC mod/reg/rm /3 mod!=3 */
            case 0x5E: /* DCh 5Eh FCOMPf64 f64(r/m) mod=1 reg=3 rm=6      spec: 0xDC mod/reg/rm /3 mod!=3 */
            case 0x5F: /* DCh 5Fh FCOMPf64 f64(r/m) mod=1 reg=3 rm=7      spec: 0xDC mod/reg/rm /3 mod!=3 */
            case 0x98: /* DCh 98h FCOMPf64 f64(r/m) mod=2 reg=3 rm=0      spec: 0xDC mod/reg/rm /3 mod!=3 */
            case 0x99: /* DCh 99h FCOMPf64 f64(r/m) mod=2 reg=3 rm=1      spec: 0xDC mod/reg/rm /3 mod!=3 */
            case 0x9A: /* DCh 9Ah FCOMPf64 f64(r/m) mod=2 reg=3 rm=2      spec: 0xDC mod/reg/rm /3 mod!=3 */
            case 0x9B: /* DCh 9Bh FCOMPf64 f64(r/m) mod=2 reg=3 rm=3      spec: 0xDC mod/reg/rm /3 mod!=3 */
            case 0x9C: /* DCh 9Ch FCOMPf64 f64(r/m) mod=2 reg=3 rm=4      spec: 0xDC mod/reg/rm /3 mod!=3 */
            case 0x9D: /* DCh 9Dh FCOMPf64 f64(r/m) mod=2 reg=3 rm=5      spec: 0xDC mod/reg/rm /3 mod!=3 */
            case 0x9E: /* DCh 9Eh FCOMPf64 f64(r/m) mod=2 reg=3 rm=6      spec: 0xDC mod/reg/rm /3 mod!=3 */
            case 0x9F: /* DCh 9Fh FCOMPf64 f64(r/m) mod=2 reg=3 rm=7      spec: 0xDC mod/reg/rm /3 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FCOMPf64 %s",IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,"f64"));
                break;
            case 0x20: /* DCh 20h FSUBf64 f64(r/m) mod=0 reg=4 rm=0      spec: 0xDC mod/reg/rm /4 mod!=3 */
            case 0x21: /* DCh 21h FSUBf64 f64(r/m) mod=0 reg=4 rm=1      spec: 0xDC mod/reg/rm /4 mod!=3 */
            case 0x22: /* DCh 22h FSUBf64 f64(r/m) mod=0 reg=4 rm=2      spec: 0xDC mod/reg/rm /4 mod!=3 */
            case 0x23: /* DCh 23h FSUBf64 f64(r/m) mod=0 reg=4 rm=3      spec: 0xDC mod/reg/rm /4 mod!=3 */
            case 0x24: /* DCh 24h FSUBf64 f64(r/m) mod=0 reg=4 rm=4      spec: 0xDC mod/reg/rm /4 mod!=3 */
            case 0x25: /* DCh 25h FSUBf64 f64(r/m) mod=0 reg=4 rm=5      spec: 0xDC mod/reg/rm /4 mod!=3 */
            case 0x26: /* DCh 26h FSUBf64 f64(r/m) mod=0 reg=4 rm=6      spec: 0xDC mod/reg/rm /4 mod!=3 */
            case 0x27: /* DCh 27h FSUBf64 f64(r/m) mod=0 reg=4 rm=7      spec: 0xDC mod/reg/rm /4 mod!=3 */
            case 0x60: /* DCh 60h FSUBf64 f64(r/m) mod=1 reg=4 rm=0      spec: 0xDC mod/reg/rm /4 mod!=3 */
            case 0x61: /* DCh 61h FSUBf64 f64(r/m) mod=1 reg=4 rm=1      spec: 0xDC mod/reg/rm /4 mod!=3 */
            case 0x62: /* DCh 62h FSUBf64 f64(r/m) mod=1 reg=4 rm=2      spec: 0xDC mod/reg/rm /4 mod!=3 */
            case 0x63: /* DCh 63h FSUBf64 f64(r/m) mod=1 reg=4 rm=3      spec: 0xDC mod/reg/rm /4 mod!=3 */
            case 0x64: /* DCh 64h FSUBf64 f64(r/m) mod=1 reg=4 rm=4      spec: 0xDC mod/reg/rm /4 mod!=3 */
            case 0x65: /* DCh 65h FSUBf64 f64(r/m) mod=1 reg=4 rm=5      spec: 0xDC mod/reg/rm /4 mod!=3 */
            case 0x66: /* DCh 66h FSUBf64 f64(r/m) mod=1 reg=4 rm=6      spec: 0xDC mod/reg/rm /4 mod!=3 */
            case 0x67: /* DCh 67h FSUBf64 f64(r/m) mod=1 reg=4 rm=7      spec: 0xDC mod/reg/rm /4 mod!=3 */
            case 0xA0: /* DCh A0h FSUBf64 f64(r/m) mod=2 reg=4 rm=0      spec: 0xDC mod/reg/rm /4 mod!=3 */
            case 0xA1: /* DCh A1h FSUBf64 f64(r/m) mod=2 reg=4 rm=1      spec: 0xDC mod/reg/rm /4 mod!=3 */
            case 0xA2: /* DCh A2h FSUBf64 f64(r/m) mod=2 reg=4 rm=2      spec: 0xDC mod/reg/rm /4 mod!=3 */
            case 0xA3: /* DCh A3h FSUBf64 f64(r/m) mod=2 reg=4 rm=3      spec: 0xDC mod/reg/rm /4 mod!=3 */
            case 0xA4: /* DCh A4h FSUBf64 f64(r/m) mod=2 reg=4 rm=4      spec: 0xDC mod/reg/rm /4 mod!=3 */
            case 0xA5: /* DCh A5h FSUBf64 f64(r/m) mod=2 reg=4 rm=5      spec: 0xDC mod/reg/rm /4 mod!=3 */
            case 0xA6: /* DCh A6h FSUBf64 f64(r/m) mod=2 reg=4 rm=6      spec: 0xDC mod/reg/rm /4 mod!=3 */
            case 0xA7: /* DCh A7h FSUBf64 f64(r/m) mod=2 reg=4 rm=7      spec: 0xDC mod/reg/rm /4 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSUBf64 %s",IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,"f64"));
                break;
            case 0x28: /* DCh 28h FSUBRf64 f64(r/m) mod=0 reg=5 rm=0      spec: 0xDC mod/reg/rm /5 mod!=3 */
            case 0x29: /* DCh 29h FSUBRf64 f64(r/m) mod=0 reg=5 rm=1      spec: 0xDC mod/reg/rm /5 mod!=3 */
            case 0x2A: /* DCh 2Ah FSUBRf64 f64(r/m) mod=0 reg=5 rm=2      spec: 0xDC mod/reg/rm /5 mod!=3 */
            case 0x2B: /* DCh 2Bh FSUBRf64 f64(r/m) mod=0 reg=5 rm=3      spec: 0xDC mod/reg/rm /5 mod!=3 */
            case 0x2C: /* DCh 2Ch FSUBRf64 f64(r/m) mod=0 reg=5 rm=4      spec: 0xDC mod/reg/rm /5 mod!=3 */
            case 0x2D: /* DCh 2Dh FSUBRf64 f64(r/m) mod=0 reg=5 rm=5      spec: 0xDC mod/reg/rm /5 mod!=3 */
            case 0x2E: /* DCh 2Eh FSUBRf64 f64(r/m) mod=0 reg=5 rm=6      spec: 0xDC mod/reg/rm /5 mod!=3 */
            case 0x2F: /* DCh 2Fh FSUBRf64 f64(r/m) mod=0 reg=5 rm=7      spec: 0xDC mod/reg/rm /5 mod!=3 */
            case 0x68: /* DCh 68h FSUBRf64 f64(r/m) mod=1 reg=5 rm=0      spec: 0xDC mod/reg/rm /5 mod!=3 */
            case 0x69: /* DCh 69h FSUBRf64 f64(r/m) mod=1 reg=5 rm=1      spec: 0xDC mod/reg/rm /5 mod!=3 */
            case 0x6A: /* DCh 6Ah FSUBRf64 f64(r/m) mod=1 reg=5 rm=2      spec: 0xDC mod/reg/rm /5 mod!=3 */
            case 0x6B: /* DCh 6Bh FSUBRf64 f64(r/m) mod=1 reg=5 rm=3      spec: 0xDC mod/reg/rm /5 mod!=3 */
            case 0x6C: /* DCh 6Ch FSUBRf64 f64(r/m) mod=1 reg=5 rm=4      spec: 0xDC mod/reg/rm /5 mod!=3 */
            case 0x6D: /* DCh 6Dh FSUBRf64 f64(r/m) mod=1 reg=5 rm=5      spec: 0xDC mod/reg/rm /5 mod!=3 */
            case 0x6E: /* DCh 6Eh FSUBRf64 f64(r/m) mod=1 reg=5 rm=6      spec: 0xDC mod/reg/rm /5 mod!=3 */
            case 0x6F: /* DCh 6Fh FSUBRf64 f64(r/m) mod=1 reg=5 rm=7      spec: 0xDC mod/reg/rm /5 mod!=3 */
            case 0xA8: /* DCh A8h FSUBRf64 f64(r/m) mod=2 reg=5 rm=0      spec: 0xDC mod/reg/rm /5 mod!=3 */
            case 0xA9: /* DCh A9h FSUBRf64 f64(r/m) mod=2 reg=5 rm=1      spec: 0xDC mod/reg/rm /5 mod!=3 */
            case 0xAA: /* DCh AAh FSUBRf64 f64(r/m) mod=2 reg=5 rm=2      spec: 0xDC mod/reg/rm /5 mod!=3 */
            case 0xAB: /* DCh ABh FSUBRf64 f64(r/m) mod=2 reg=5 rm=3      spec: 0xDC mod/reg/rm /5 mod!=3 */
            case 0xAC: /* DCh ACh FSUBRf64 f64(r/m) mod=2 reg=5 rm=4      spec: 0xDC mod/reg/rm /5 mod!=3 */
            case 0xAD: /* DCh ADh FSUBRf64 f64(r/m) mod=2 reg=5 rm=5      spec: 0xDC mod/reg/rm /5 mod!=3 */
            case 0xAE: /* DCh AEh FSUBRf64 f64(r/m) mod=2 reg=5 rm=6      spec: 0xDC mod/reg/rm /5 mod!=3 */
            case 0xAF: /* DCh AFh FSUBRf64 f64(r/m) mod=2 reg=5 rm=7      spec: 0xDC mod/reg/rm /5 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSUBRf64 %s",IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,"f64"));
                break;
            case 0x30: /* DCh 30h FDIVf64 f64(r/m) mod=0 reg=6 rm=0      spec: 0xDC mod/reg/rm /6 mod!=3 */
            case 0x31: /* DCh 31h FDIVf64 f64(r/m) mod=0 reg=6 rm=1      spec: 0xDC mod/reg/rm /6 mod!=3 */
            case 0x32: /* DCh 32h FDIVf64 f64(r/m) mod=0 reg=6 rm=2      spec: 0xDC mod/reg/rm /6 mod!=3 */
            case 0x33: /* DCh 33h FDIVf64 f64(r/m) mod=0 reg=6 rm=3      spec: 0xDC mod/reg/rm /6 mod!=3 */
            case 0x34: /* DCh 34h FDIVf64 f64(r/m) mod=0 reg=6 rm=4      spec: 0xDC mod/reg/rm /6 mod!=3 */
            case 0x35: /* DCh 35h FDIVf64 f64(r/m) mod=0 reg=6 rm=5      spec: 0xDC mod/reg/rm /6 mod!=3 */
            case 0x36: /* DCh 36h FDIVf64 f64(r/m) mod=0 reg=6 rm=6      spec: 0xDC mod/reg/rm /6 mod!=3 */
            case 0x37: /* DCh 37h FDIVf64 f64(r/m) mod=0 reg=6 rm=7      spec: 0xDC mod/reg/rm /6 mod!=3 */
            case 0x70: /* DCh 70h FDIVf64 f64(r/m) mod=1 reg=6 rm=0      spec: 0xDC mod/reg/rm /6 mod!=3 */
            case 0x71: /* DCh 71h FDIVf64 f64(r/m) mod=1 reg=6 rm=1      spec: 0xDC mod/reg/rm /6 mod!=3 */
            case 0x72: /* DCh 72h FDIVf64 f64(r/m) mod=1 reg=6 rm=2      spec: 0xDC mod/reg/rm /6 mod!=3 */
            case 0x73: /* DCh 73h FDIVf64 f64(r/m) mod=1 reg=6 rm=3      spec: 0xDC mod/reg/rm /6 mod!=3 */
            case 0x74: /* DCh 74h FDIVf64 f64(r/m) mod=1 reg=6 rm=4      spec: 0xDC mod/reg/rm /6 mod!=3 */
            case 0x75: /* DCh 75h FDIVf64 f64(r/m) mod=1 reg=6 rm=5      spec: 0xDC mod/reg/rm /6 mod!=3 */
            case 0x76: /* DCh 76h FDIVf64 f64(r/m) mod=1 reg=6 rm=6      spec: 0xDC mod/reg/rm /6 mod!=3 */
            case 0x77: /* DCh 77h FDIVf64 f64(r/m) mod=1 reg=6 rm=7      spec: 0xDC mod/reg/rm /6 mod!=3 */
            case 0xB0: /* DCh B0h FDIVf64 f64(r/m) mod=2 reg=6 rm=0      spec: 0xDC mod/reg/rm /6 mod!=3 */
            case 0xB1: /* DCh B1h FDIVf64 f64(r/m) mod=2 reg=6 rm=1      spec: 0xDC mod/reg/rm /6 mod!=3 */
            case 0xB2: /* DCh B2h FDIVf64 f64(r/m) mod=2 reg=6 rm=2      spec: 0xDC mod/reg/rm /6 mod!=3 */
            case 0xB3: /* DCh B3h FDIVf64 f64(r/m) mod=2 reg=6 rm=3      spec: 0xDC mod/reg/rm /6 mod!=3 */
            case 0xB4: /* DCh B4h FDIVf64 f64(r/m) mod=2 reg=6 rm=4      spec: 0xDC mod/reg/rm /6 mod!=3 */
            case 0xB5: /* DCh B5h FDIVf64 f64(r/m) mod=2 reg=6 rm=5      spec: 0xDC mod/reg/rm /6 mod!=3 */
            case 0xB6: /* DCh B6h FDIVf64 f64(r/m) mod=2 reg=6 rm=6      spec: 0xDC mod/reg/rm /6 mod!=3 */
            case 0xB7: /* DCh B7h FDIVf64 f64(r/m) mod=2 reg=6 rm=7      spec: 0xDC mod/reg/rm /6 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FDIVf64 %s",IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,"f64"));
                break;
            case 0x38: /* DCh 38h FDIVRf64 f64(r/m) mod=0 reg=7 rm=0      spec: 0xDC mod/reg/rm /7 mod!=3 */
            case 0x39: /* DCh 39h FDIVRf64 f64(r/m) mod=0 reg=7 rm=1      spec: 0xDC mod/reg/rm /7 mod!=3 */
            case 0x3A: /* DCh 3Ah FDIVRf64 f64(r/m) mod=0 reg=7 rm=2      spec: 0xDC mod/reg/rm /7 mod!=3 */
            case 0x3B: /* DCh 3Bh FDIVRf64 f64(r/m) mod=0 reg=7 rm=3      spec: 0xDC mod/reg/rm /7 mod!=3 */
            case 0x3C: /* DCh 3Ch FDIVRf64 f64(r/m) mod=0 reg=7 rm=4      spec: 0xDC mod/reg/rm /7 mod!=3 */
            case 0x3D: /* DCh 3Dh FDIVRf64 f64(r/m) mod=0 reg=7 rm=5      spec: 0xDC mod/reg/rm /7 mod!=3 */
            case 0x3E: /* DCh 3Eh FDIVRf64 f64(r/m) mod=0 reg=7 rm=6      spec: 0xDC mod/reg/rm /7 mod!=3 */
            case 0x3F: /* DCh 3Fh FDIVRf64 f64(r/m) mod=0 reg=7 rm=7      spec: 0xDC mod/reg/rm /7 mod!=3 */
            case 0x78: /* DCh 78h FDIVRf64 f64(r/m) mod=1 reg=7 rm=0      spec: 0xDC mod/reg/rm /7 mod!=3 */
            case 0x79: /* DCh 79h FDIVRf64 f64(r/m) mod=1 reg=7 rm=1      spec: 0xDC mod/reg/rm /7 mod!=3 */
            case 0x7A: /* DCh 7Ah FDIVRf64 f64(r/m) mod=1 reg=7 rm=2      spec: 0xDC mod/reg/rm /7 mod!=3 */
            case 0x7B: /* DCh 7Bh FDIVRf64 f64(r/m) mod=1 reg=7 rm=3      spec: 0xDC mod/reg/rm /7 mod!=3 */
            case 0x7C: /* DCh 7Ch FDIVRf64 f64(r/m) mod=1 reg=7 rm=4      spec: 0xDC mod/reg/rm /7 mod!=3 */
            case 0x7D: /* DCh 7Dh FDIVRf64 f64(r/m) mod=1 reg=7 rm=5      spec: 0xDC mod/reg/rm /7 mod!=3 */
            case 0x7E: /* DCh 7Eh FDIVRf64 f64(r/m) mod=1 reg=7 rm=6      spec: 0xDC mod/reg/rm /7 mod!=3 */
            case 0x7F: /* DCh 7Fh FDIVRf64 f64(r/m) mod=1 reg=7 rm=7      spec: 0xDC mod/reg/rm /7 mod!=3 */
            case 0xB8: /* DCh B8h FDIVRf64 f64(r/m) mod=2 reg=7 rm=0      spec: 0xDC mod/reg/rm /7 mod!=3 */
            case 0xB9: /* DCh B9h FDIVRf64 f64(r/m) mod=2 reg=7 rm=1      spec: 0xDC mod/reg/rm /7 mod!=3 */
            case 0xBA: /* DCh BAh FDIVRf64 f64(r/m) mod=2 reg=7 rm=2      spec: 0xDC mod/reg/rm /7 mod!=3 */
            case 0xBB: /* DCh BBh FDIVRf64 f64(r/m) mod=2 reg=7 rm=3      spec: 0xDC mod/reg/rm /7 mod!=3 */
            case 0xBC: /* DCh BCh FDIVRf64 f64(r/m) mod=2 reg=7 rm=4      spec: 0xDC mod/reg/rm /7 mod!=3 */
            case 0xBD: /* DCh BDh FDIVRf64 f64(r/m) mod=2 reg=7 rm=5      spec: 0xDC mod/reg/rm /7 mod!=3 */
            case 0xBE: /* DCh BEh FDIVRf64 f64(r/m) mod=2 reg=7 rm=6      spec: 0xDC mod/reg/rm /7 mod!=3 */
            case 0xBF: /* DCh BFh FDIVRf64 f64(r/m) mod=2 reg=7 rm=7      spec: 0xDC mod/reg/rm /7 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FDIVRf64 %s",IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,"f64"));
                break;
            case 0xC0: /* DCh C0h FADD st(r/m),st(0) mod=3 reg=0 rm=0      spec: 0xDC mod/reg/rm /0 mod==3 */
            case 0xC1: /* DCh C1h FADD st(r/m),st(0) mod=3 reg=0 rm=1      spec: 0xDC mod/reg/rm /0 mod==3 */
            case 0xC2: /* DCh C2h FADD st(r/m),st(0) mod=3 reg=0 rm=2      spec: 0xDC mod/reg/rm /0 mod==3 */
            case 0xC3: /* DCh C3h FADD st(r/m),st(0) mod=3 reg=0 rm=3      spec: 0xDC mod/reg/rm /0 mod==3 */
            case 0xC4: /* DCh C4h FADD st(r/m),st(0) mod=3 reg=0 rm=4      spec: 0xDC mod/reg/rm /0 mod==3 */
            case 0xC5: /* DCh C5h FADD st(r/m),st(0) mod=3 reg=0 rm=5      spec: 0xDC mod/reg/rm /0 mod==3 */
            case 0xC6: /* DCh C6h FADD st(r/m),st(0) mod=3 reg=0 rm=6      spec: 0xDC mod/reg/rm /0 mod==3 */
            case 0xC7: /* DCh C7h FADD st(r/m),st(0) mod=3 reg=0 rm=7      spec: 0xDC mod/reg/rm /0 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FADD %s,ST(%u)",IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""),0);
                break;
            case 0xC8: /* DCh C8h FMUL st(r/m),st(0) mod=3 reg=1 rm=0      spec: 0xDC mod/reg/rm /1 mod==3 */
            case 0xC9: /* DCh C9h FMUL st(r/m),st(0) mod=3 reg=1 rm=1      spec: 0xDC mod/reg/rm /1 mod==3 */
            case 0xCA: /* DCh CAh FMUL st(r/m),st(0) mod=3 reg=1 rm=2      spec: 0xDC mod/reg/rm /1 mod==3 */
            case 0xCB: /* DCh CBh FMUL st(r/m),st(0) mod=3 reg=1 rm=3      spec: 0xDC mod/reg/rm /1 mod==3 */
            case 0xCC: /* DCh CCh FMUL st(r/m),st(0) mod=3 reg=1 rm=4      spec: 0xDC mod/reg/rm /1 mod==3 */
            case 0xCD: /* DCh CDh FMUL st(r/m),st(0) mod=3 reg=1 rm=5      spec: 0xDC mod/reg/rm /1 mod==3 */
            case 0xCE: /* DCh CEh FMUL st(r/m),st(0) mod=3 reg=1 rm=6      spec: 0xDC mod/reg/rm /1 mod==3 */
            case 0xCF: /* DCh CFh FMUL st(r/m),st(0) mod=3 reg=1 rm=7      spec: 0xDC mod/reg/rm /1 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FMUL %s,ST(%u)",IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""),0);
                break;
            /* opcode DCh D0h  not defined */
            /* opcode DCh D1h  not defined */
            /* opcode DCh D2h  not defined */
            /* opcode DCh D3h  not defined */
            /* opcode DCh D4h  not defined */
            /* opcode DCh D5h  not defined */
            /* opcode DCh D6h  not defined */
            /* opcode DCh D7h  not defined */
            /* opcode DCh D8h  not defined */
            /* opcode DCh D9h  not defined */
            /* opcode DCh DAh  not defined */
            /* opcode DCh DBh  not defined */
            /* opcode DCh DCh  not defined */
            /* opcode DCh DDh  not defined */
            /* opcode DCh DEh  not defined */
            /* opcode DCh DFh  not defined */
            case 0xE0: /* DCh E0h FSUB st(r/m),st(0) mod=3 reg=4 rm=0      spec: 0xDC mod/reg/rm /4 mod==3 */
            case 0xE1: /* DCh E1h FSUB st(r/m),st(0) mod=3 reg=4 rm=1      spec: 0xDC mod/reg/rm /4 mod==3 */
            case 0xE2: /* DCh E2h FSUB st(r/m),st(0) mod=3 reg=4 rm=2      spec: 0xDC mod/reg/rm /4 mod==3 */
            case 0xE3: /* DCh E3h FSUB st(r/m),st(0) mod=3 reg=4 rm=3      spec: 0xDC mod/reg/rm /4 mod==3 */
            case 0xE4: /* DCh E4h FSUB st(r/m),st(0) mod=3 reg=4 rm=4      spec: 0xDC mod/reg/rm /4 mod==3 */
            case 0xE5: /* DCh E5h FSUB st(r/m),st(0) mod=3 reg=4 rm=5      spec: 0xDC mod/reg/rm /4 mod==3 */
            case 0xE6: /* DCh E6h FSUB st(r/m),st(0) mod=3 reg=4 rm=6      spec: 0xDC mod/reg/rm /4 mod==3 */
            case 0xE7: /* DCh E7h FSUB st(r/m),st(0) mod=3 reg=4 rm=7      spec: 0xDC mod/reg/rm /4 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSUB %s,ST(%u)",IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""),0);
                break;
            case 0xE8: /* DCh E8h FSUBR st(r/m),st(0) mod=3 reg=5 rm=0      spec: 0xDC mod/reg/rm /5 mod==3 */
            case 0xE9: /* DCh E9h FSUBR st(r/m),st(0) mod=3 reg=5 rm=1      spec: 0xDC mod/reg/rm /5 mod==3 */
            case 0xEA: /* DCh EAh FSUBR st(r/m),st(0) mod=3 reg=5 rm=2      spec: 0xDC mod/reg/rm /5 mod==3 */
            case 0xEB: /* DCh EBh FSUBR st(r/m),st(0) mod=3 reg=5 rm=3      spec: 0xDC mod/reg/rm /5 mod==3 */
            case 0xEC: /* DCh ECh FSUBR st(r/m),st(0) mod=3 reg=5 rm=4      spec: 0xDC mod/reg/rm /5 mod==3 */
            case 0xED: /* DCh EDh FSUBR st(r/m),st(0) mod=3 reg=5 rm=5      spec: 0xDC mod/reg/rm /5 mod==3 */
            case 0xEE: /* DCh EEh FSUBR st(r/m),st(0) mod=3 reg=5 rm=6      spec: 0xDC mod/reg/rm /5 mod==3 */
            case 0xEF: /* DCh EFh FSUBR st(r/m),st(0) mod=3 reg=5 rm=7      spec: 0xDC mod/reg/rm /5 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSUBR %s,ST(%u)",IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""),0);
                break;
            case 0xF0: /* DCh F0h FDIV st(r/m),st(0) mod=3 reg=6 rm=0      spec: 0xDC mod/reg/rm /6 mod==3 */
            case 0xF1: /* DCh F1h FDIV st(r/m),st(0) mod=3 reg=6 rm=1      spec: 0xDC mod/reg/rm /6 mod==3 */
            case 0xF2: /* DCh F2h FDIV st(r/m),st(0) mod=3 reg=6 rm=2      spec: 0xDC mod/reg/rm /6 mod==3 */
            case 0xF3: /* DCh F3h FDIV st(r/m),st(0) mod=3 reg=6 rm=3      spec: 0xDC mod/reg/rm /6 mod==3 */
            case 0xF4: /* DCh F4h FDIV st(r/m),st(0) mod=3 reg=6 rm=4      spec: 0xDC mod/reg/rm /6 mod==3 */
            case 0xF5: /* DCh F5h FDIV st(r/m),st(0) mod=3 reg=6 rm=5      spec: 0xDC mod/reg/rm /6 mod==3 */
            case 0xF6: /* DCh F6h FDIV st(r/m),st(0) mod=3 reg=6 rm=6      spec: 0xDC mod/reg/rm /6 mod==3 */
            case 0xF7: /* DCh F7h FDIV st(r/m),st(0) mod=3 reg=6 rm=7      spec: 0xDC mod/reg/rm /6 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FDIV %s,ST(%u)",IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""),0);
                break;
            case 0xF8: /* DCh F8h FDIVR st(r/m),st(0) mod=3 reg=7 rm=0      spec: 0xDC mod/reg/rm /7 mod==3 */
            case 0xF9: /* DCh F9h FDIVR st(r/m),st(0) mod=3 reg=7 rm=1      spec: 0xDC mod/reg/rm /7 mod==3 */
            case 0xFA: /* DCh FAh FDIVR st(r/m),st(0) mod=3 reg=7 rm=2      spec: 0xDC mod/reg/rm /7 mod==3 */
            case 0xFB: /* DCh FBh FDIVR st(r/m),st(0) mod=3 reg=7 rm=3      spec: 0xDC mod/reg/rm /7 mod==3 */
            case 0xFC: /* DCh FCh FDIVR st(r/m),st(0) mod=3 reg=7 rm=4      spec: 0xDC mod/reg/rm /7 mod==3 */
            case 0xFD: /* DCh FDh FDIVR st(r/m),st(0) mod=3 reg=7 rm=5      spec: 0xDC mod/reg/rm /7 mod==3 */
            case 0xFE: /* DCh FEh FDIVR st(r/m),st(0) mod=3 reg=7 rm=6      spec: 0xDC mod/reg/rm /7 mod==3 */
            case 0xFF: /* DCh FFh FDIVR st(r/m),st(0) mod=3 reg=7 rm=7      spec: 0xDC mod/reg/rm /7 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FDIVR %s,ST(%u)",IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""),0);
                break;
            default:
                goto _x86decode_illegal_opcode;
        };
/* End of opcodes starting with DCh */
        break;
    case 0xDD: /* DDh        spec:  */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        _x86decode_begin_code32_addr32_opcode_parse_DD:
/* Opcodes starting with DDh */
        switch (mrm.byte) {
            case 0x00: /* DDh 00h FLDf64 f64(r/m) mod=0 reg=0 rm=0      spec: 0xDD mod/reg/rm /0 mod!=3 */
            case 0x01: /* DDh 01h FLDf64 f64(r/m) mod=0 reg=0 rm=1      spec: 0xDD mod/reg/rm /0 mod!=3 */
            case 0x02: /* DDh 02h FLDf64 f64(r/m) mod=0 reg=0 rm=2      spec: 0xDD mod/reg/rm /0 mod!=3 */
            case 0x03: /* DDh 03h FLDf64 f64(r/m) mod=0 reg=0 rm=3      spec: 0xDD mod/reg/rm /0 mod!=3 */
            case 0x04: /* DDh 04h FLDf64 f64(r/m) mod=0 reg=0 rm=4      spec: 0xDD mod/reg/rm /0 mod!=3 */
            case 0x05: /* DDh 05h FLDf64 f64(r/m) mod=0 reg=0 rm=5      spec: 0xDD mod/reg/rm /0 mod!=3 */
            case 0x06: /* DDh 06h FLDf64 f64(r/m) mod=0 reg=0 rm=6      spec: 0xDD mod/reg/rm /0 mod!=3 */
            case 0x07: /* DDh 07h FLDf64 f64(r/m) mod=0 reg=0 rm=7      spec: 0xDD mod/reg/rm /0 mod!=3 */
            case 0x40: /* DDh 40h FLDf64 f64(r/m) mod=1 reg=0 rm=0      spec: 0xDD mod/reg/rm /0 mod!=3 */
            case 0x41: /* DDh 41h FLDf64 f64(r/m) mod=1 reg=0 rm=1      spec: 0xDD mod/reg/rm /0 mod!=3 */
            case 0x42: /* DDh 42h FLDf64 f64(r/m) mod=1 reg=0 rm=2      spec: 0xDD mod/reg/rm /0 mod!=3 */
            case 0x43: /* DDh 43h FLDf64 f64(r/m) mod=1 reg=0 rm=3      spec: 0xDD mod/reg/rm /0 mod!=3 */
            case 0x44: /* DDh 44h FLDf64 f64(r/m) mod=1 reg=0 rm=4      spec: 0xDD mod/reg/rm /0 mod!=3 */
            case 0x45: /* DDh 45h FLDf64 f64(r/m) mod=1 reg=0 rm=5      spec: 0xDD mod/reg/rm /0 mod!=3 */
            case 0x46: /* DDh 46h FLDf64 f64(r/m) mod=1 reg=0 rm=6      spec: 0xDD mod/reg/rm /0 mod!=3 */
            case 0x47: /* DDh 47h FLDf64 f64(r/m) mod=1 reg=0 rm=7      spec: 0xDD mod/reg/rm /0 mod!=3 */
            case 0x80: /* DDh 80h FLDf64 f64(r/m) mod=2 reg=0 rm=0      spec: 0xDD mod/reg/rm /0 mod!=3 */
            case 0x81: /* DDh 81h FLDf64 f64(r/m) mod=2 reg=0 rm=1      spec: 0xDD mod/reg/rm /0 mod!=3 */
            case 0x82: /* DDh 82h FLDf64 f64(r/m) mod=2 reg=0 rm=2      spec: 0xDD mod/reg/rm /0 mod!=3 */
            case 0x83: /* DDh 83h FLDf64 f64(r/m) mod=2 reg=0 rm=3      spec: 0xDD mod/reg/rm /0 mod!=3 */
            case 0x84: /* DDh 84h FLDf64 f64(r/m) mod=2 reg=0 rm=4      spec: 0xDD mod/reg/rm /0 mod!=3 */
            case 0x85: /* DDh 85h FLDf64 f64(r/m) mod=2 reg=0 rm=5      spec: 0xDD mod/reg/rm /0 mod!=3 */
            case 0x86: /* DDh 86h FLDf64 f64(r/m) mod=2 reg=0 rm=6      spec: 0xDD mod/reg/rm /0 mod!=3 */
            case 0x87: /* DDh 87h FLDf64 f64(r/m) mod=2 reg=0 rm=7      spec: 0xDD mod/reg/rm /0 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FLDf64 %s",IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,"f64"));
                break;
            case 0x08: /* DDh 08h FISTTP w64(r/m) mod=0 reg=1 rm=0      spec: 0xDD mod/reg/rm /1 mod!=3 */
            case 0x09: /* DDh 09h FISTTP w64(r/m) mod=0 reg=1 rm=1      spec: 0xDD mod/reg/rm /1 mod!=3 */
            case 0x0A: /* DDh 0Ah FISTTP w64(r/m) mod=0 reg=1 rm=2      spec: 0xDD mod/reg/rm /1 mod!=3 */
            case 0x0B: /* DDh 0Bh FISTTP w64(r/m) mod=0 reg=1 rm=3      spec: 0xDD mod/reg/rm /1 mod!=3 */
            case 0x0C: /* DDh 0Ch FISTTP w64(r/m) mod=0 reg=1 rm=4      spec: 0xDD mod/reg/rm /1 mod!=3 */
            case 0x0D: /* DDh 0Dh FISTTP w64(r/m) mod=0 reg=1 rm=5      spec: 0xDD mod/reg/rm /1 mod!=3 */
            case 0x0E: /* DDh 0Eh FISTTP w64(r/m) mod=0 reg=1 rm=6      spec: 0xDD mod/reg/rm /1 mod!=3 */
            case 0x0F: /* DDh 0Fh FISTTP w64(r/m) mod=0 reg=1 rm=7      spec: 0xDD mod/reg/rm /1 mod!=3 */
            case 0x48: /* DDh 48h FISTTP w64(r/m) mod=1 reg=1 rm=0      spec: 0xDD mod/reg/rm /1 mod!=3 */
            case 0x49: /* DDh 49h FISTTP w64(r/m) mod=1 reg=1 rm=1      spec: 0xDD mod/reg/rm /1 mod!=3 */
            case 0x4A: /* DDh 4Ah FISTTP w64(r/m) mod=1 reg=1 rm=2      spec: 0xDD mod/reg/rm /1 mod!=3 */
            case 0x4B: /* DDh 4Bh FISTTP w64(r/m) mod=1 reg=1 rm=3      spec: 0xDD mod/reg/rm /1 mod!=3 */
            case 0x4C: /* DDh 4Ch FISTTP w64(r/m) mod=1 reg=1 rm=4      spec: 0xDD mod/reg/rm /1 mod!=3 */
            case 0x4D: /* DDh 4Dh FISTTP w64(r/m) mod=1 reg=1 rm=5      spec: 0xDD mod/reg/rm /1 mod!=3 */
            case 0x4E: /* DDh 4Eh FISTTP w64(r/m) mod=1 reg=1 rm=6      spec: 0xDD mod/reg/rm /1 mod!=3 */
            case 0x4F: /* DDh 4Fh FISTTP w64(r/m) mod=1 reg=1 rm=7      spec: 0xDD mod/reg/rm /1 mod!=3 */
            case 0x88: /* DDh 88h FISTTP w64(r/m) mod=2 reg=1 rm=0      spec: 0xDD mod/reg/rm /1 mod!=3 */
            case 0x89: /* DDh 89h FISTTP w64(r/m) mod=2 reg=1 rm=1      spec: 0xDD mod/reg/rm /1 mod!=3 */
            case 0x8A: /* DDh 8Ah FISTTP w64(r/m) mod=2 reg=1 rm=2      spec: 0xDD mod/reg/rm /1 mod!=3 */
            case 0x8B: /* DDh 8Bh FISTTP w64(r/m) mod=2 reg=1 rm=3      spec: 0xDD mod/reg/rm /1 mod!=3 */
            case 0x8C: /* DDh 8Ch FISTTP w64(r/m) mod=2 reg=1 rm=4      spec: 0xDD mod/reg/rm /1 mod!=3 */
            case 0x8D: /* DDh 8Dh FISTTP w64(r/m) mod=2 reg=1 rm=5      spec: 0xDD mod/reg/rm /1 mod!=3 */
            case 0x8E: /* DDh 8Eh FISTTP w64(r/m) mod=2 reg=1 rm=6      spec: 0xDD mod/reg/rm /1 mod!=3 */
            case 0x8F: /* DDh 8Fh FISTTP w64(r/m) mod=2 reg=1 rm=7      spec: 0xDD mod/reg/rm /1 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FISTTP %s",IPDecPrint32(mrm,sib,disp,8,RC_REG,"w64"));
                break;
            case 0x10: /* DDh 10h FSTf64 f64(r/m) mod=0 reg=2 rm=0      spec: 0xDD mod/reg/rm /2 mod!=3 */
            case 0x11: /* DDh 11h FSTf64 f64(r/m) mod=0 reg=2 rm=1      spec: 0xDD mod/reg/rm /2 mod!=3 */
            case 0x12: /* DDh 12h FSTf64 f64(r/m) mod=0 reg=2 rm=2      spec: 0xDD mod/reg/rm /2 mod!=3 */
            case 0x13: /* DDh 13h FSTf64 f64(r/m) mod=0 reg=2 rm=3      spec: 0xDD mod/reg/rm /2 mod!=3 */
            case 0x14: /* DDh 14h FSTf64 f64(r/m) mod=0 reg=2 rm=4      spec: 0xDD mod/reg/rm /2 mod!=3 */
            case 0x15: /* DDh 15h FSTf64 f64(r/m) mod=0 reg=2 rm=5      spec: 0xDD mod/reg/rm /2 mod!=3 */
            case 0x16: /* DDh 16h FSTf64 f64(r/m) mod=0 reg=2 rm=6      spec: 0xDD mod/reg/rm /2 mod!=3 */
            case 0x17: /* DDh 17h FSTf64 f64(r/m) mod=0 reg=2 rm=7      spec: 0xDD mod/reg/rm /2 mod!=3 */
            case 0x50: /* DDh 50h FSTf64 f64(r/m) mod=1 reg=2 rm=0      spec: 0xDD mod/reg/rm /2 mod!=3 */
            case 0x51: /* DDh 51h FSTf64 f64(r/m) mod=1 reg=2 rm=1      spec: 0xDD mod/reg/rm /2 mod!=3 */
            case 0x52: /* DDh 52h FSTf64 f64(r/m) mod=1 reg=2 rm=2      spec: 0xDD mod/reg/rm /2 mod!=3 */
            case 0x53: /* DDh 53h FSTf64 f64(r/m) mod=1 reg=2 rm=3      spec: 0xDD mod/reg/rm /2 mod!=3 */
            case 0x54: /* DDh 54h FSTf64 f64(r/m) mod=1 reg=2 rm=4      spec: 0xDD mod/reg/rm /2 mod!=3 */
            case 0x55: /* DDh 55h FSTf64 f64(r/m) mod=1 reg=2 rm=5      spec: 0xDD mod/reg/rm /2 mod!=3 */
            case 0x56: /* DDh 56h FSTf64 f64(r/m) mod=1 reg=2 rm=6      spec: 0xDD mod/reg/rm /2 mod!=3 */
            case 0x57: /* DDh 57h FSTf64 f64(r/m) mod=1 reg=2 rm=7      spec: 0xDD mod/reg/rm /2 mod!=3 */
            case 0x90: /* DDh 90h FSTf64 f64(r/m) mod=2 reg=2 rm=0      spec: 0xDD mod/reg/rm /2 mod!=3 */
            case 0x91: /* DDh 91h FSTf64 f64(r/m) mod=2 reg=2 rm=1      spec: 0xDD mod/reg/rm /2 mod!=3 */
            case 0x92: /* DDh 92h FSTf64 f64(r/m) mod=2 reg=2 rm=2      spec: 0xDD mod/reg/rm /2 mod!=3 */
            case 0x93: /* DDh 93h FSTf64 f64(r/m) mod=2 reg=2 rm=3      spec: 0xDD mod/reg/rm /2 mod!=3 */
            case 0x94: /* DDh 94h FSTf64 f64(r/m) mod=2 reg=2 rm=4      spec: 0xDD mod/reg/rm /2 mod!=3 */
            case 0x95: /* DDh 95h FSTf64 f64(r/m) mod=2 reg=2 rm=5      spec: 0xDD mod/reg/rm /2 mod!=3 */
            case 0x96: /* DDh 96h FSTf64 f64(r/m) mod=2 reg=2 rm=6      spec: 0xDD mod/reg/rm /2 mod!=3 */
            case 0x97: /* DDh 97h FSTf64 f64(r/m) mod=2 reg=2 rm=7      spec: 0xDD mod/reg/rm /2 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSTf64 %s",IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,"f64"));
                break;
            case 0x18: /* DDh 18h FSTPf64 f64(r/m) mod=0 reg=3 rm=0      spec: 0xDD mod/reg/rm /3 mod!=3 */
            case 0x19: /* DDh 19h FSTPf64 f64(r/m) mod=0 reg=3 rm=1      spec: 0xDD mod/reg/rm /3 mod!=3 */
            case 0x1A: /* DDh 1Ah FSTPf64 f64(r/m) mod=0 reg=3 rm=2      spec: 0xDD mod/reg/rm /3 mod!=3 */
            case 0x1B: /* DDh 1Bh FSTPf64 f64(r/m) mod=0 reg=3 rm=3      spec: 0xDD mod/reg/rm /3 mod!=3 */
            case 0x1C: /* DDh 1Ch FSTPf64 f64(r/m) mod=0 reg=3 rm=4      spec: 0xDD mod/reg/rm /3 mod!=3 */
            case 0x1D: /* DDh 1Dh FSTPf64 f64(r/m) mod=0 reg=3 rm=5      spec: 0xDD mod/reg/rm /3 mod!=3 */
            case 0x1E: /* DDh 1Eh FSTPf64 f64(r/m) mod=0 reg=3 rm=6      spec: 0xDD mod/reg/rm /3 mod!=3 */
            case 0x1F: /* DDh 1Fh FSTPf64 f64(r/m) mod=0 reg=3 rm=7      spec: 0xDD mod/reg/rm /3 mod!=3 */
            case 0x58: /* DDh 58h FSTPf64 f64(r/m) mod=1 reg=3 rm=0      spec: 0xDD mod/reg/rm /3 mod!=3 */
            case 0x59: /* DDh 59h FSTPf64 f64(r/m) mod=1 reg=3 rm=1      spec: 0xDD mod/reg/rm /3 mod!=3 */
            case 0x5A: /* DDh 5Ah FSTPf64 f64(r/m) mod=1 reg=3 rm=2      spec: 0xDD mod/reg/rm /3 mod!=3 */
            case 0x5B: /* DDh 5Bh FSTPf64 f64(r/m) mod=1 reg=3 rm=3      spec: 0xDD mod/reg/rm /3 mod!=3 */
            case 0x5C: /* DDh 5Ch FSTPf64 f64(r/m) mod=1 reg=3 rm=4      spec: 0xDD mod/reg/rm /3 mod!=3 */
            case 0x5D: /* DDh 5Dh FSTPf64 f64(r/m) mod=1 reg=3 rm=5      spec: 0xDD mod/reg/rm /3 mod!=3 */
            case 0x5E: /* DDh 5Eh FSTPf64 f64(r/m) mod=1 reg=3 rm=6      spec: 0xDD mod/reg/rm /3 mod!=3 */
            case 0x5F: /* DDh 5Fh FSTPf64 f64(r/m) mod=1 reg=3 rm=7      spec: 0xDD mod/reg/rm /3 mod!=3 */
            case 0x98: /* DDh 98h FSTPf64 f64(r/m) mod=2 reg=3 rm=0      spec: 0xDD mod/reg/rm /3 mod!=3 */
            case 0x99: /* DDh 99h FSTPf64 f64(r/m) mod=2 reg=3 rm=1      spec: 0xDD mod/reg/rm /3 mod!=3 */
            case 0x9A: /* DDh 9Ah FSTPf64 f64(r/m) mod=2 reg=3 rm=2      spec: 0xDD mod/reg/rm /3 mod!=3 */
            case 0x9B: /* DDh 9Bh FSTPf64 f64(r/m) mod=2 reg=3 rm=3      spec: 0xDD mod/reg/rm /3 mod!=3 */
            case 0x9C: /* DDh 9Ch FSTPf64 f64(r/m) mod=2 reg=3 rm=4      spec: 0xDD mod/reg/rm /3 mod!=3 */
            case 0x9D: /* DDh 9Dh FSTPf64 f64(r/m) mod=2 reg=3 rm=5      spec: 0xDD mod/reg/rm /3 mod!=3 */
            case 0x9E: /* DDh 9Eh FSTPf64 f64(r/m) mod=2 reg=3 rm=6      spec: 0xDD mod/reg/rm /3 mod!=3 */
            case 0x9F: /* DDh 9Fh FSTPf64 f64(r/m) mod=2 reg=3 rm=7      spec: 0xDD mod/reg/rm /3 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSTPf64 %s",IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,"f64"));
                break;
            case 0x20: /* DDh 20h FRSTOR fstate(r/m) mod=0 reg=4 rm=0      spec: 0xDD mod/reg/rm /4 mod!=3 */
            case 0x21: /* DDh 21h FRSTOR fstate(r/m) mod=0 reg=4 rm=1      spec: 0xDD mod/reg/rm /4 mod!=3 */
            case 0x22: /* DDh 22h FRSTOR fstate(r/m) mod=0 reg=4 rm=2      spec: 0xDD mod/reg/rm /4 mod!=3 */
            case 0x23: /* DDh 23h FRSTOR fstate(r/m) mod=0 reg=4 rm=3      spec: 0xDD mod/reg/rm /4 mod!=3 */
            case 0x24: /* DDh 24h FRSTOR fstate(r/m) mod=0 reg=4 rm=4      spec: 0xDD mod/reg/rm /4 mod!=3 */
            case 0x25: /* DDh 25h FRSTOR fstate(r/m) mod=0 reg=4 rm=5      spec: 0xDD mod/reg/rm /4 mod!=3 */
            case 0x26: /* DDh 26h FRSTOR fstate(r/m) mod=0 reg=4 rm=6      spec: 0xDD mod/reg/rm /4 mod!=3 */
            case 0x27: /* DDh 27h FRSTOR fstate(r/m) mod=0 reg=4 rm=7      spec: 0xDD mod/reg/rm /4 mod!=3 */
            case 0x60: /* DDh 60h FRSTOR fstate(r/m) mod=1 reg=4 rm=0      spec: 0xDD mod/reg/rm /4 mod!=3 */
            case 0x61: /* DDh 61h FRSTOR fstate(r/m) mod=1 reg=4 rm=1      spec: 0xDD mod/reg/rm /4 mod!=3 */
            case 0x62: /* DDh 62h FRSTOR fstate(r/m) mod=1 reg=4 rm=2      spec: 0xDD mod/reg/rm /4 mod!=3 */
            case 0x63: /* DDh 63h FRSTOR fstate(r/m) mod=1 reg=4 rm=3      spec: 0xDD mod/reg/rm /4 mod!=3 */
            case 0x64: /* DDh 64h FRSTOR fstate(r/m) mod=1 reg=4 rm=4      spec: 0xDD mod/reg/rm /4 mod!=3 */
            case 0x65: /* DDh 65h FRSTOR fstate(r/m) mod=1 reg=4 rm=5      spec: 0xDD mod/reg/rm /4 mod!=3 */
            case 0x66: /* DDh 66h FRSTOR fstate(r/m) mod=1 reg=4 rm=6      spec: 0xDD mod/reg/rm /4 mod!=3 */
            case 0x67: /* DDh 67h FRSTOR fstate(r/m) mod=1 reg=4 rm=7      spec: 0xDD mod/reg/rm /4 mod!=3 */
            case 0xA0: /* DDh A0h FRSTOR fstate(r/m) mod=2 reg=4 rm=0      spec: 0xDD mod/reg/rm /4 mod!=3 */
            case 0xA1: /* DDh A1h FRSTOR fstate(r/m) mod=2 reg=4 rm=1      spec: 0xDD mod/reg/rm /4 mod!=3 */
            case 0xA2: /* DDh A2h FRSTOR fstate(r/m) mod=2 reg=4 rm=2      spec: 0xDD mod/reg/rm /4 mod!=3 */
            case 0xA3: /* DDh A3h FRSTOR fstate(r/m) mod=2 reg=4 rm=3      spec: 0xDD mod/reg/rm /4 mod!=3 */
            case 0xA4: /* DDh A4h FRSTOR fstate(r/m) mod=2 reg=4 rm=4      spec: 0xDD mod/reg/rm /4 mod!=3 */
            case 0xA5: /* DDh A5h FRSTOR fstate(r/m) mod=2 reg=4 rm=5      spec: 0xDD mod/reg/rm /4 mod!=3 */
            case 0xA6: /* DDh A6h FRSTOR fstate(r/m) mod=2 reg=4 rm=6      spec: 0xDD mod/reg/rm /4 mod!=3 */
            case 0xA7: /* DDh A7h FRSTOR fstate(r/m) mod=2 reg=4 rm=7      spec: 0xDD mod/reg/rm /4 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FRSTOR %s",IPDecPrint32(mrm,sib,disp,0,RC_REG,"fstate"));
                break;
            /* opcode DDh 28h  not defined */
            /* opcode DDh 29h  not defined */
            /* opcode DDh 2Ah  not defined */
            /* opcode DDh 2Bh  not defined */
            /* opcode DDh 2Ch  not defined */
            /* opcode DDh 2Dh  not defined */
            /* opcode DDh 2Eh  not defined */
            /* opcode DDh 2Fh  not defined */
            case 0x30: /* DDh 30h FSAVE fstate(r/m) mod=0 reg=6 rm=0      spec: 0xDD mod/reg/rm /6 mod!=3 */
            case 0x31: /* DDh 31h FSAVE fstate(r/m) mod=0 reg=6 rm=1      spec: 0xDD mod/reg/rm /6 mod!=3 */
            case 0x32: /* DDh 32h FSAVE fstate(r/m) mod=0 reg=6 rm=2      spec: 0xDD mod/reg/rm /6 mod!=3 */
            case 0x33: /* DDh 33h FSAVE fstate(r/m) mod=0 reg=6 rm=3      spec: 0xDD mod/reg/rm /6 mod!=3 */
            case 0x34: /* DDh 34h FSAVE fstate(r/m) mod=0 reg=6 rm=4      spec: 0xDD mod/reg/rm /6 mod!=3 */
            case 0x35: /* DDh 35h FSAVE fstate(r/m) mod=0 reg=6 rm=5      spec: 0xDD mod/reg/rm /6 mod!=3 */
            case 0x36: /* DDh 36h FSAVE fstate(r/m) mod=0 reg=6 rm=6      spec: 0xDD mod/reg/rm /6 mod!=3 */
            case 0x37: /* DDh 37h FSAVE fstate(r/m) mod=0 reg=6 rm=7      spec: 0xDD mod/reg/rm /6 mod!=3 */
            case 0x70: /* DDh 70h FSAVE fstate(r/m) mod=1 reg=6 rm=0      spec: 0xDD mod/reg/rm /6 mod!=3 */
            case 0x71: /* DDh 71h FSAVE fstate(r/m) mod=1 reg=6 rm=1      spec: 0xDD mod/reg/rm /6 mod!=3 */
            case 0x72: /* DDh 72h FSAVE fstate(r/m) mod=1 reg=6 rm=2      spec: 0xDD mod/reg/rm /6 mod!=3 */
            case 0x73: /* DDh 73h FSAVE fstate(r/m) mod=1 reg=6 rm=3      spec: 0xDD mod/reg/rm /6 mod!=3 */
            case 0x74: /* DDh 74h FSAVE fstate(r/m) mod=1 reg=6 rm=4      spec: 0xDD mod/reg/rm /6 mod!=3 */
            case 0x75: /* DDh 75h FSAVE fstate(r/m) mod=1 reg=6 rm=5      spec: 0xDD mod/reg/rm /6 mod!=3 */
            case 0x76: /* DDh 76h FSAVE fstate(r/m) mod=1 reg=6 rm=6      spec: 0xDD mod/reg/rm /6 mod!=3 */
            case 0x77: /* DDh 77h FSAVE fstate(r/m) mod=1 reg=6 rm=7      spec: 0xDD mod/reg/rm /6 mod!=3 */
            case 0xB0: /* DDh B0h FSAVE fstate(r/m) mod=2 reg=6 rm=0      spec: 0xDD mod/reg/rm /6 mod!=3 */
            case 0xB1: /* DDh B1h FSAVE fstate(r/m) mod=2 reg=6 rm=1      spec: 0xDD mod/reg/rm /6 mod!=3 */
            case 0xB2: /* DDh B2h FSAVE fstate(r/m) mod=2 reg=6 rm=2      spec: 0xDD mod/reg/rm /6 mod!=3 */
            case 0xB3: /* DDh B3h FSAVE fstate(r/m) mod=2 reg=6 rm=3      spec: 0xDD mod/reg/rm /6 mod!=3 */
            case 0xB4: /* DDh B4h FSAVE fstate(r/m) mod=2 reg=6 rm=4      spec: 0xDD mod/reg/rm /6 mod!=3 */
            case 0xB5: /* DDh B5h FSAVE fstate(r/m) mod=2 reg=6 rm=5      spec: 0xDD mod/reg/rm /6 mod!=3 */
            case 0xB6: /* DDh B6h FSAVE fstate(r/m) mod=2 reg=6 rm=6      spec: 0xDD mod/reg/rm /6 mod!=3 */
            case 0xB7: /* DDh B7h FSAVE fstate(r/m) mod=2 reg=6 rm=7      spec: 0xDD mod/reg/rm /6 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSAVE %s",IPDecPrint32(mrm,sib,disp,0,RC_REG,"fstate"));
                break;
            case 0x38: /* DDh 38h FSTSW w16(r/m) mod=0 reg=7 rm=0      spec: 0xDD mod/reg/rm /7 mod!=3 */
            case 0x39: /* DDh 39h FSTSW w16(r/m) mod=0 reg=7 rm=1      spec: 0xDD mod/reg/rm /7 mod!=3 */
            case 0x3A: /* DDh 3Ah FSTSW w16(r/m) mod=0 reg=7 rm=2      spec: 0xDD mod/reg/rm /7 mod!=3 */
            case 0x3B: /* DDh 3Bh FSTSW w16(r/m) mod=0 reg=7 rm=3      spec: 0xDD mod/reg/rm /7 mod!=3 */
            case 0x3C: /* DDh 3Ch FSTSW w16(r/m) mod=0 reg=7 rm=4      spec: 0xDD mod/reg/rm /7 mod!=3 */
            case 0x3D: /* DDh 3Dh FSTSW w16(r/m) mod=0 reg=7 rm=5      spec: 0xDD mod/reg/rm /7 mod!=3 */
            case 0x3E: /* DDh 3Eh FSTSW w16(r/m) mod=0 reg=7 rm=6      spec: 0xDD mod/reg/rm /7 mod!=3 */
            case 0x3F: /* DDh 3Fh FSTSW w16(r/m) mod=0 reg=7 rm=7      spec: 0xDD mod/reg/rm /7 mod!=3 */
            case 0x78: /* DDh 78h FSTSW w16(r/m) mod=1 reg=7 rm=0      spec: 0xDD mod/reg/rm /7 mod!=3 */
            case 0x79: /* DDh 79h FSTSW w16(r/m) mod=1 reg=7 rm=1      spec: 0xDD mod/reg/rm /7 mod!=3 */
            case 0x7A: /* DDh 7Ah FSTSW w16(r/m) mod=1 reg=7 rm=2      spec: 0xDD mod/reg/rm /7 mod!=3 */
            case 0x7B: /* DDh 7Bh FSTSW w16(r/m) mod=1 reg=7 rm=3      spec: 0xDD mod/reg/rm /7 mod!=3 */
            case 0x7C: /* DDh 7Ch FSTSW w16(r/m) mod=1 reg=7 rm=4      spec: 0xDD mod/reg/rm /7 mod!=3 */
            case 0x7D: /* DDh 7Dh FSTSW w16(r/m) mod=1 reg=7 rm=5      spec: 0xDD mod/reg/rm /7 mod!=3 */
            case 0x7E: /* DDh 7Eh FSTSW w16(r/m) mod=1 reg=7 rm=6      spec: 0xDD mod/reg/rm /7 mod!=3 */
            case 0x7F: /* DDh 7Fh FSTSW w16(r/m) mod=1 reg=7 rm=7      spec: 0xDD mod/reg/rm /7 mod!=3 */
            case 0xB8: /* DDh B8h FSTSW w16(r/m) mod=2 reg=7 rm=0      spec: 0xDD mod/reg/rm /7 mod!=3 */
            case 0xB9: /* DDh B9h FSTSW w16(r/m) mod=2 reg=7 rm=1      spec: 0xDD mod/reg/rm /7 mod!=3 */
            case 0xBA: /* DDh BAh FSTSW w16(r/m) mod=2 reg=7 rm=2      spec: 0xDD mod/reg/rm /7 mod!=3 */
            case 0xBB: /* DDh BBh FSTSW w16(r/m) mod=2 reg=7 rm=3      spec: 0xDD mod/reg/rm /7 mod!=3 */
            case 0xBC: /* DDh BCh FSTSW w16(r/m) mod=2 reg=7 rm=4      spec: 0xDD mod/reg/rm /7 mod!=3 */
            case 0xBD: /* DDh BDh FSTSW w16(r/m) mod=2 reg=7 rm=5      spec: 0xDD mod/reg/rm /7 mod!=3 */
            case 0xBE: /* DDh BEh FSTSW w16(r/m) mod=2 reg=7 rm=6      spec: 0xDD mod/reg/rm /7 mod!=3 */
            case 0xBF: /* DDh BFh FSTSW w16(r/m) mod=2 reg=7 rm=7      spec: 0xDD mod/reg/rm /7 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSTSW %s",IPDecPrint32(mrm,sib,disp,2,RC_REG,"w16"));
                break;
            /* opcode DDh 68h  not defined */
            /* opcode DDh 69h  not defined */
            /* opcode DDh 6Ah  not defined */
            /* opcode DDh 6Bh  not defined */
            /* opcode DDh 6Ch  not defined */
            /* opcode DDh 6Dh  not defined */
            /* opcode DDh 6Eh  not defined */
            /* opcode DDh 6Fh  not defined */
            /* opcode DDh A8h  not defined */
            /* opcode DDh A9h  not defined */
            /* opcode DDh AAh  not defined */
            /* opcode DDh ABh  not defined */
            /* opcode DDh ACh  not defined */
            /* opcode DDh ADh  not defined */
            /* opcode DDh AEh  not defined */
            /* opcode DDh AFh  not defined */
            case 0xC0: /* DDh C0h FFREE st(r/m) mod=3 reg=0 rm=0      spec: 0xDD mod/reg/rm /0 mod==3 */
            case 0xC1: /* DDh C1h FFREE st(r/m) mod=3 reg=0 rm=1      spec: 0xDD mod/reg/rm /0 mod==3 */
            case 0xC2: /* DDh C2h FFREE st(r/m) mod=3 reg=0 rm=2      spec: 0xDD mod/reg/rm /0 mod==3 */
            case 0xC3: /* DDh C3h FFREE st(r/m) mod=3 reg=0 rm=3      spec: 0xDD mod/reg/rm /0 mod==3 */
            case 0xC4: /* DDh C4h FFREE st(r/m) mod=3 reg=0 rm=4      spec: 0xDD mod/reg/rm /0 mod==3 */
            case 0xC5: /* DDh C5h FFREE st(r/m) mod=3 reg=0 rm=5      spec: 0xDD mod/reg/rm /0 mod==3 */
            case 0xC6: /* DDh C6h FFREE st(r/m) mod=3 reg=0 rm=6      spec: 0xDD mod/reg/rm /0 mod==3 */
            case 0xC7: /* DDh C7h FFREE st(r/m) mod=3 reg=0 rm=7      spec: 0xDD mod/reg/rm /0 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FFREE %s",IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""));
                break;
            /* opcode DDh C8h  not defined */
            /* opcode DDh C9h  not defined */
            /* opcode DDh CAh  not defined */
            /* opcode DDh CBh  not defined */
            /* opcode DDh CCh  not defined */
            /* opcode DDh CDh  not defined */
            /* opcode DDh CEh  not defined */
            /* opcode DDh CFh  not defined */
            case 0xD0: /* DDh D0h FST st(r/m) mod=3 reg=2 rm=0      spec: 0xDD mod/reg/rm /2 mod==3 */
            case 0xD1: /* DDh D1h FST st(r/m) mod=3 reg=2 rm=1      spec: 0xDD mod/reg/rm /2 mod==3 */
            case 0xD2: /* DDh D2h FST st(r/m) mod=3 reg=2 rm=2      spec: 0xDD mod/reg/rm /2 mod==3 */
            case 0xD3: /* DDh D3h FST st(r/m) mod=3 reg=2 rm=3      spec: 0xDD mod/reg/rm /2 mod==3 */
            case 0xD4: /* DDh D4h FST st(r/m) mod=3 reg=2 rm=4      spec: 0xDD mod/reg/rm /2 mod==3 */
            case 0xD5: /* DDh D5h FST st(r/m) mod=3 reg=2 rm=5      spec: 0xDD mod/reg/rm /2 mod==3 */
            case 0xD6: /* DDh D6h FST st(r/m) mod=3 reg=2 rm=6      spec: 0xDD mod/reg/rm /2 mod==3 */
            case 0xD7: /* DDh D7h FST st(r/m) mod=3 reg=2 rm=7      spec: 0xDD mod/reg/rm /2 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FST %s",IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""));
                break;
            case 0xD8: /* DDh D8h FSTP st(r/m) mod=3 reg=3 rm=0      spec: 0xDD mod/reg/rm /3 mod==3 */
            case 0xD9: /* DDh D9h FSTP st(r/m) mod=3 reg=3 rm=1      spec: 0xDD mod/reg/rm /3 mod==3 */
            case 0xDA: /* DDh DAh FSTP st(r/m) mod=3 reg=3 rm=2      spec: 0xDD mod/reg/rm /3 mod==3 */
            case 0xDB: /* DDh DBh FSTP st(r/m) mod=3 reg=3 rm=3      spec: 0xDD mod/reg/rm /3 mod==3 */
            case 0xDC: /* DDh DCh FSTP st(r/m) mod=3 reg=3 rm=4      spec: 0xDD mod/reg/rm /3 mod==3 */
            case 0xDD: /* DDh DDh FSTP st(r/m) mod=3 reg=3 rm=5      spec: 0xDD mod/reg/rm /3 mod==3 */
            case 0xDE: /* DDh DEh FSTP st(r/m) mod=3 reg=3 rm=6      spec: 0xDD mod/reg/rm /3 mod==3 */
            case 0xDF: /* DDh DFh FSTP st(r/m) mod=3 reg=3 rm=7      spec: 0xDD mod/reg/rm /3 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSTP %s",IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""));
                break;
            case 0xE0: /* DDh E0h FUCOM st(r/m) mod=3 reg=4 rm=0      spec: 0xDD mod/reg/rm mod==3 /4 */
            case 0xE1: /* DDh E1h FUCOM st(r/m) mod=3 reg=4 rm=1      spec: 0xDD mod/reg/rm mod==3 /4 */
            case 0xE2: /* DDh E2h FUCOM st(r/m) mod=3 reg=4 rm=2      spec: 0xDD mod/reg/rm mod==3 /4 */
            case 0xE3: /* DDh E3h FUCOM st(r/m) mod=3 reg=4 rm=3      spec: 0xDD mod/reg/rm mod==3 /4 */
            case 0xE4: /* DDh E4h FUCOM st(r/m) mod=3 reg=4 rm=4      spec: 0xDD mod/reg/rm mod==3 /4 */
            case 0xE5: /* DDh E5h FUCOM st(r/m) mod=3 reg=4 rm=5      spec: 0xDD mod/reg/rm mod==3 /4 */
            case 0xE6: /* DDh E6h FUCOM st(r/m) mod=3 reg=4 rm=6      spec: 0xDD mod/reg/rm mod==3 /4 */
            case 0xE7: /* DDh E7h FUCOM st(r/m) mod=3 reg=4 rm=7      spec: 0xDD mod/reg/rm mod==3 /4 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FUCOM %s",IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""));
                break;
            case 0xE8: /* DDh E8h FUCOMP st(r/m) mod=3 reg=5 rm=0      spec: 0xDD mod/reg/rm mod==3 /5 */
            case 0xE9: /* DDh E9h FUCOMP st(r/m) mod=3 reg=5 rm=1      spec: 0xDD mod/reg/rm mod==3 /5 */
            case 0xEA: /* DDh EAh FUCOMP st(r/m) mod=3 reg=5 rm=2      spec: 0xDD mod/reg/rm mod==3 /5 */
            case 0xEB: /* DDh EBh FUCOMP st(r/m) mod=3 reg=5 rm=3      spec: 0xDD mod/reg/rm mod==3 /5 */
            case 0xEC: /* DDh ECh FUCOMP st(r/m) mod=3 reg=5 rm=4      spec: 0xDD mod/reg/rm mod==3 /5 */
            case 0xED: /* DDh EDh FUCOMP st(r/m) mod=3 reg=5 rm=5      spec: 0xDD mod/reg/rm mod==3 /5 */
            case 0xEE: /* DDh EEh FUCOMP st(r/m) mod=3 reg=5 rm=6      spec: 0xDD mod/reg/rm mod==3 /5 */
            case 0xEF: /* DDh EFh FUCOMP st(r/m) mod=3 reg=5 rm=7      spec: 0xDD mod/reg/rm mod==3 /5 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FUCOMP %s",IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""));
                break;
            /* opcode DDh F0h  not defined */
            /* opcode DDh F1h  not defined */
            /* opcode DDh F2h  not defined */
            /* opcode DDh F3h  not defined */
            /* opcode DDh F4h  not defined */
            /* opcode DDh F5h  not defined */
            /* opcode DDh F6h  not defined */
            /* opcode DDh F7h  not defined */
            /* opcode DDh F8h  not defined */
            /* opcode DDh F9h  not defined */
            /* opcode DDh FAh  not defined */
            /* opcode DDh FBh  not defined */
            /* opcode DDh FCh  not defined */
            /* opcode DDh FDh  not defined */
            /* opcode DDh FEh  not defined */
            /* opcode DDh FFh  not defined */
            default:
                goto _x86decode_illegal_opcode;
        };
/* End of opcodes starting with DDh */
        break;
    case 0xDE: /* DEh        spec:  */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        _x86decode_begin_code32_addr32_opcode_parse_DE:
/* Opcodes starting with DEh */
        switch (mrm.byte) {
            case 0x00: /* DEh 00h FADDw w16(r/m) mod=0 reg=0 rm=0      spec: 0xDE mod/reg/rm /0 mod!=3 */
            case 0x01: /* DEh 01h FADDw w16(r/m) mod=0 reg=0 rm=1      spec: 0xDE mod/reg/rm /0 mod!=3 */
            case 0x02: /* DEh 02h FADDw w16(r/m) mod=0 reg=0 rm=2      spec: 0xDE mod/reg/rm /0 mod!=3 */
            case 0x03: /* DEh 03h FADDw w16(r/m) mod=0 reg=0 rm=3      spec: 0xDE mod/reg/rm /0 mod!=3 */
            case 0x04: /* DEh 04h FADDw w16(r/m) mod=0 reg=0 rm=4      spec: 0xDE mod/reg/rm /0 mod!=3 */
            case 0x05: /* DEh 05h FADDw w16(r/m) mod=0 reg=0 rm=5      spec: 0xDE mod/reg/rm /0 mod!=3 */
            case 0x06: /* DEh 06h FADDw w16(r/m) mod=0 reg=0 rm=6      spec: 0xDE mod/reg/rm /0 mod!=3 */
            case 0x07: /* DEh 07h FADDw w16(r/m) mod=0 reg=0 rm=7      spec: 0xDE mod/reg/rm /0 mod!=3 */
            case 0x40: /* DEh 40h FADDw w16(r/m) mod=1 reg=0 rm=0      spec: 0xDE mod/reg/rm /0 mod!=3 */
            case 0x41: /* DEh 41h FADDw w16(r/m) mod=1 reg=0 rm=1      spec: 0xDE mod/reg/rm /0 mod!=3 */
            case 0x42: /* DEh 42h FADDw w16(r/m) mod=1 reg=0 rm=2      spec: 0xDE mod/reg/rm /0 mod!=3 */
            case 0x43: /* DEh 43h FADDw w16(r/m) mod=1 reg=0 rm=3      spec: 0xDE mod/reg/rm /0 mod!=3 */
            case 0x44: /* DEh 44h FADDw w16(r/m) mod=1 reg=0 rm=4      spec: 0xDE mod/reg/rm /0 mod!=3 */
            case 0x45: /* DEh 45h FADDw w16(r/m) mod=1 reg=0 rm=5      spec: 0xDE mod/reg/rm /0 mod!=3 */
            case 0x46: /* DEh 46h FADDw w16(r/m) mod=1 reg=0 rm=6      spec: 0xDE mod/reg/rm /0 mod!=3 */
            case 0x47: /* DEh 47h FADDw w16(r/m) mod=1 reg=0 rm=7      spec: 0xDE mod/reg/rm /0 mod!=3 */
            case 0x80: /* DEh 80h FADDw w16(r/m) mod=2 reg=0 rm=0      spec: 0xDE mod/reg/rm /0 mod!=3 */
            case 0x81: /* DEh 81h FADDw w16(r/m) mod=2 reg=0 rm=1      spec: 0xDE mod/reg/rm /0 mod!=3 */
            case 0x82: /* DEh 82h FADDw w16(r/m) mod=2 reg=0 rm=2      spec: 0xDE mod/reg/rm /0 mod!=3 */
            case 0x83: /* DEh 83h FADDw w16(r/m) mod=2 reg=0 rm=3      spec: 0xDE mod/reg/rm /0 mod!=3 */
            case 0x84: /* DEh 84h FADDw w16(r/m) mod=2 reg=0 rm=4      spec: 0xDE mod/reg/rm /0 mod!=3 */
            case 0x85: /* DEh 85h FADDw w16(r/m) mod=2 reg=0 rm=5      spec: 0xDE mod/reg/rm /0 mod!=3 */
            case 0x86: /* DEh 86h FADDw w16(r/m) mod=2 reg=0 rm=6      spec: 0xDE mod/reg/rm /0 mod!=3 */
            case 0x87: /* DEh 87h FADDw w16(r/m) mod=2 reg=0 rm=7      spec: 0xDE mod/reg/rm /0 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FADDw %s",IPDecPrint32(mrm,sib,disp,2,RC_REG,"w16"));
                break;
            case 0x08: /* DEh 08h FMULw w16(r/m) mod=0 reg=1 rm=0      spec: 0xDE mod/reg/rm /1 mod!=3 */
            case 0x09: /* DEh 09h FMULw w16(r/m) mod=0 reg=1 rm=1      spec: 0xDE mod/reg/rm /1 mod!=3 */
            case 0x0A: /* DEh 0Ah FMULw w16(r/m) mod=0 reg=1 rm=2      spec: 0xDE mod/reg/rm /1 mod!=3 */
            case 0x0B: /* DEh 0Bh FMULw w16(r/m) mod=0 reg=1 rm=3      spec: 0xDE mod/reg/rm /1 mod!=3 */
            case 0x0C: /* DEh 0Ch FMULw w16(r/m) mod=0 reg=1 rm=4      spec: 0xDE mod/reg/rm /1 mod!=3 */
            case 0x0D: /* DEh 0Dh FMULw w16(r/m) mod=0 reg=1 rm=5      spec: 0xDE mod/reg/rm /1 mod!=3 */
            case 0x0E: /* DEh 0Eh FMULw w16(r/m) mod=0 reg=1 rm=6      spec: 0xDE mod/reg/rm /1 mod!=3 */
            case 0x0F: /* DEh 0Fh FMULw w16(r/m) mod=0 reg=1 rm=7      spec: 0xDE mod/reg/rm /1 mod!=3 */
            case 0x48: /* DEh 48h FMULw w16(r/m) mod=1 reg=1 rm=0      spec: 0xDE mod/reg/rm /1 mod!=3 */
            case 0x49: /* DEh 49h FMULw w16(r/m) mod=1 reg=1 rm=1      spec: 0xDE mod/reg/rm /1 mod!=3 */
            case 0x4A: /* DEh 4Ah FMULw w16(r/m) mod=1 reg=1 rm=2      spec: 0xDE mod/reg/rm /1 mod!=3 */
            case 0x4B: /* DEh 4Bh FMULw w16(r/m) mod=1 reg=1 rm=3      spec: 0xDE mod/reg/rm /1 mod!=3 */
            case 0x4C: /* DEh 4Ch FMULw w16(r/m) mod=1 reg=1 rm=4      spec: 0xDE mod/reg/rm /1 mod!=3 */
            case 0x4D: /* DEh 4Dh FMULw w16(r/m) mod=1 reg=1 rm=5      spec: 0xDE mod/reg/rm /1 mod!=3 */
            case 0x4E: /* DEh 4Eh FMULw w16(r/m) mod=1 reg=1 rm=6      spec: 0xDE mod/reg/rm /1 mod!=3 */
            case 0x4F: /* DEh 4Fh FMULw w16(r/m) mod=1 reg=1 rm=7      spec: 0xDE mod/reg/rm /1 mod!=3 */
            case 0x88: /* DEh 88h FMULw w16(r/m) mod=2 reg=1 rm=0      spec: 0xDE mod/reg/rm /1 mod!=3 */
            case 0x89: /* DEh 89h FMULw w16(r/m) mod=2 reg=1 rm=1      spec: 0xDE mod/reg/rm /1 mod!=3 */
            case 0x8A: /* DEh 8Ah FMULw w16(r/m) mod=2 reg=1 rm=2      spec: 0xDE mod/reg/rm /1 mod!=3 */
            case 0x8B: /* DEh 8Bh FMULw w16(r/m) mod=2 reg=1 rm=3      spec: 0xDE mod/reg/rm /1 mod!=3 */
            case 0x8C: /* DEh 8Ch FMULw w16(r/m) mod=2 reg=1 rm=4      spec: 0xDE mod/reg/rm /1 mod!=3 */
            case 0x8D: /* DEh 8Dh FMULw w16(r/m) mod=2 reg=1 rm=5      spec: 0xDE mod/reg/rm /1 mod!=3 */
            case 0x8E: /* DEh 8Eh FMULw w16(r/m) mod=2 reg=1 rm=6      spec: 0xDE mod/reg/rm /1 mod!=3 */
            case 0x8F: /* DEh 8Fh FMULw w16(r/m) mod=2 reg=1 rm=7      spec: 0xDE mod/reg/rm /1 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FMULw %s",IPDecPrint32(mrm,sib,disp,2,RC_REG,"w16"));
                break;
            case 0x10: /* DEh 10h FCOMw w16(r/m) mod=0 reg=2 rm=0      spec: 0xDE mod/reg/rm /2 mod!=3 */
            case 0x11: /* DEh 11h FCOMw w16(r/m) mod=0 reg=2 rm=1      spec: 0xDE mod/reg/rm /2 mod!=3 */
            case 0x12: /* DEh 12h FCOMw w16(r/m) mod=0 reg=2 rm=2      spec: 0xDE mod/reg/rm /2 mod!=3 */
            case 0x13: /* DEh 13h FCOMw w16(r/m) mod=0 reg=2 rm=3      spec: 0xDE mod/reg/rm /2 mod!=3 */
            case 0x14: /* DEh 14h FCOMw w16(r/m) mod=0 reg=2 rm=4      spec: 0xDE mod/reg/rm /2 mod!=3 */
            case 0x15: /* DEh 15h FCOMw w16(r/m) mod=0 reg=2 rm=5      spec: 0xDE mod/reg/rm /2 mod!=3 */
            case 0x16: /* DEh 16h FCOMw w16(r/m) mod=0 reg=2 rm=6      spec: 0xDE mod/reg/rm /2 mod!=3 */
            case 0x17: /* DEh 17h FCOMw w16(r/m) mod=0 reg=2 rm=7      spec: 0xDE mod/reg/rm /2 mod!=3 */
            case 0x50: /* DEh 50h FCOMw w16(r/m) mod=1 reg=2 rm=0      spec: 0xDE mod/reg/rm /2 mod!=3 */
            case 0x51: /* DEh 51h FCOMw w16(r/m) mod=1 reg=2 rm=1      spec: 0xDE mod/reg/rm /2 mod!=3 */
            case 0x52: /* DEh 52h FCOMw w16(r/m) mod=1 reg=2 rm=2      spec: 0xDE mod/reg/rm /2 mod!=3 */
            case 0x53: /* DEh 53h FCOMw w16(r/m) mod=1 reg=2 rm=3      spec: 0xDE mod/reg/rm /2 mod!=3 */
            case 0x54: /* DEh 54h FCOMw w16(r/m) mod=1 reg=2 rm=4      spec: 0xDE mod/reg/rm /2 mod!=3 */
            case 0x55: /* DEh 55h FCOMw w16(r/m) mod=1 reg=2 rm=5      spec: 0xDE mod/reg/rm /2 mod!=3 */
            case 0x56: /* DEh 56h FCOMw w16(r/m) mod=1 reg=2 rm=6      spec: 0xDE mod/reg/rm /2 mod!=3 */
            case 0x57: /* DEh 57h FCOMw w16(r/m) mod=1 reg=2 rm=7      spec: 0xDE mod/reg/rm /2 mod!=3 */
            case 0x90: /* DEh 90h FCOMw w16(r/m) mod=2 reg=2 rm=0      spec: 0xDE mod/reg/rm /2 mod!=3 */
            case 0x91: /* DEh 91h FCOMw w16(r/m) mod=2 reg=2 rm=1      spec: 0xDE mod/reg/rm /2 mod!=3 */
            case 0x92: /* DEh 92h FCOMw w16(r/m) mod=2 reg=2 rm=2      spec: 0xDE mod/reg/rm /2 mod!=3 */
            case 0x93: /* DEh 93h FCOMw w16(r/m) mod=2 reg=2 rm=3      spec: 0xDE mod/reg/rm /2 mod!=3 */
            case 0x94: /* DEh 94h FCOMw w16(r/m) mod=2 reg=2 rm=4      spec: 0xDE mod/reg/rm /2 mod!=3 */
            case 0x95: /* DEh 95h FCOMw w16(r/m) mod=2 reg=2 rm=5      spec: 0xDE mod/reg/rm /2 mod!=3 */
            case 0x96: /* DEh 96h FCOMw w16(r/m) mod=2 reg=2 rm=6      spec: 0xDE mod/reg/rm /2 mod!=3 */
            case 0x97: /* DEh 97h FCOMw w16(r/m) mod=2 reg=2 rm=7      spec: 0xDE mod/reg/rm /2 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FCOMw %s",IPDecPrint32(mrm,sib,disp,2,RC_REG,"w16"));
                break;
            case 0x18: /* DEh 18h FCOMPw w16(r/m) mod=0 reg=3 rm=0      spec: 0xDE mod/reg/rm /3 mod!=3 */
            case 0x19: /* DEh 19h FCOMPw w16(r/m) mod=0 reg=3 rm=1      spec: 0xDE mod/reg/rm /3 mod!=3 */
            case 0x1A: /* DEh 1Ah FCOMPw w16(r/m) mod=0 reg=3 rm=2      spec: 0xDE mod/reg/rm /3 mod!=3 */
            case 0x1B: /* DEh 1Bh FCOMPw w16(r/m) mod=0 reg=3 rm=3      spec: 0xDE mod/reg/rm /3 mod!=3 */
            case 0x1C: /* DEh 1Ch FCOMPw w16(r/m) mod=0 reg=3 rm=4      spec: 0xDE mod/reg/rm /3 mod!=3 */
            case 0x1D: /* DEh 1Dh FCOMPw w16(r/m) mod=0 reg=3 rm=5      spec: 0xDE mod/reg/rm /3 mod!=3 */
            case 0x1E: /* DEh 1Eh FCOMPw w16(r/m) mod=0 reg=3 rm=6      spec: 0xDE mod/reg/rm /3 mod!=3 */
            case 0x1F: /* DEh 1Fh FCOMPw w16(r/m) mod=0 reg=3 rm=7      spec: 0xDE mod/reg/rm /3 mod!=3 */
            case 0x58: /* DEh 58h FCOMPw w16(r/m) mod=1 reg=3 rm=0      spec: 0xDE mod/reg/rm /3 mod!=3 */
            case 0x59: /* DEh 59h FCOMPw w16(r/m) mod=1 reg=3 rm=1      spec: 0xDE mod/reg/rm /3 mod!=3 */
            case 0x5A: /* DEh 5Ah FCOMPw w16(r/m) mod=1 reg=3 rm=2      spec: 0xDE mod/reg/rm /3 mod!=3 */
            case 0x5B: /* DEh 5Bh FCOMPw w16(r/m) mod=1 reg=3 rm=3      spec: 0xDE mod/reg/rm /3 mod!=3 */
            case 0x5C: /* DEh 5Ch FCOMPw w16(r/m) mod=1 reg=3 rm=4      spec: 0xDE mod/reg/rm /3 mod!=3 */
            case 0x5D: /* DEh 5Dh FCOMPw w16(r/m) mod=1 reg=3 rm=5      spec: 0xDE mod/reg/rm /3 mod!=3 */
            case 0x5E: /* DEh 5Eh FCOMPw w16(r/m) mod=1 reg=3 rm=6      spec: 0xDE mod/reg/rm /3 mod!=3 */
            case 0x5F: /* DEh 5Fh FCOMPw w16(r/m) mod=1 reg=3 rm=7      spec: 0xDE mod/reg/rm /3 mod!=3 */
            case 0x98: /* DEh 98h FCOMPw w16(r/m) mod=2 reg=3 rm=0      spec: 0xDE mod/reg/rm /3 mod!=3 */
            case 0x99: /* DEh 99h FCOMPw w16(r/m) mod=2 reg=3 rm=1      spec: 0xDE mod/reg/rm /3 mod!=3 */
            case 0x9A: /* DEh 9Ah FCOMPw w16(r/m) mod=2 reg=3 rm=2      spec: 0xDE mod/reg/rm /3 mod!=3 */
            case 0x9B: /* DEh 9Bh FCOMPw w16(r/m) mod=2 reg=3 rm=3      spec: 0xDE mod/reg/rm /3 mod!=3 */
            case 0x9C: /* DEh 9Ch FCOMPw w16(r/m) mod=2 reg=3 rm=4      spec: 0xDE mod/reg/rm /3 mod!=3 */
            case 0x9D: /* DEh 9Dh FCOMPw w16(r/m) mod=2 reg=3 rm=5      spec: 0xDE mod/reg/rm /3 mod!=3 */
            case 0x9E: /* DEh 9Eh FCOMPw w16(r/m) mod=2 reg=3 rm=6      spec: 0xDE mod/reg/rm /3 mod!=3 */
            case 0x9F: /* DEh 9Fh FCOMPw w16(r/m) mod=2 reg=3 rm=7      spec: 0xDE mod/reg/rm /3 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FCOMPw %s",IPDecPrint32(mrm,sib,disp,2,RC_REG,"w16"));
                break;
            case 0x20: /* DEh 20h FSUBw w16(r/m) mod=0 reg=4 rm=0      spec: 0xDE mod/reg/rm /4 mod!=3 */
            case 0x21: /* DEh 21h FSUBw w16(r/m) mod=0 reg=4 rm=1      spec: 0xDE mod/reg/rm /4 mod!=3 */
            case 0x22: /* DEh 22h FSUBw w16(r/m) mod=0 reg=4 rm=2      spec: 0xDE mod/reg/rm /4 mod!=3 */
            case 0x23: /* DEh 23h FSUBw w16(r/m) mod=0 reg=4 rm=3      spec: 0xDE mod/reg/rm /4 mod!=3 */
            case 0x24: /* DEh 24h FSUBw w16(r/m) mod=0 reg=4 rm=4      spec: 0xDE mod/reg/rm /4 mod!=3 */
            case 0x25: /* DEh 25h FSUBw w16(r/m) mod=0 reg=4 rm=5      spec: 0xDE mod/reg/rm /4 mod!=3 */
            case 0x26: /* DEh 26h FSUBw w16(r/m) mod=0 reg=4 rm=6      spec: 0xDE mod/reg/rm /4 mod!=3 */
            case 0x27: /* DEh 27h FSUBw w16(r/m) mod=0 reg=4 rm=7      spec: 0xDE mod/reg/rm /4 mod!=3 */
            case 0x60: /* DEh 60h FSUBw w16(r/m) mod=1 reg=4 rm=0      spec: 0xDE mod/reg/rm /4 mod!=3 */
            case 0x61: /* DEh 61h FSUBw w16(r/m) mod=1 reg=4 rm=1      spec: 0xDE mod/reg/rm /4 mod!=3 */
            case 0x62: /* DEh 62h FSUBw w16(r/m) mod=1 reg=4 rm=2      spec: 0xDE mod/reg/rm /4 mod!=3 */
            case 0x63: /* DEh 63h FSUBw w16(r/m) mod=1 reg=4 rm=3      spec: 0xDE mod/reg/rm /4 mod!=3 */
            case 0x64: /* DEh 64h FSUBw w16(r/m) mod=1 reg=4 rm=4      spec: 0xDE mod/reg/rm /4 mod!=3 */
            case 0x65: /* DEh 65h FSUBw w16(r/m) mod=1 reg=4 rm=5      spec: 0xDE mod/reg/rm /4 mod!=3 */
            case 0x66: /* DEh 66h FSUBw w16(r/m) mod=1 reg=4 rm=6      spec: 0xDE mod/reg/rm /4 mod!=3 */
            case 0x67: /* DEh 67h FSUBw w16(r/m) mod=1 reg=4 rm=7      spec: 0xDE mod/reg/rm /4 mod!=3 */
            case 0xA0: /* DEh A0h FSUBw w16(r/m) mod=2 reg=4 rm=0      spec: 0xDE mod/reg/rm /4 mod!=3 */
            case 0xA1: /* DEh A1h FSUBw w16(r/m) mod=2 reg=4 rm=1      spec: 0xDE mod/reg/rm /4 mod!=3 */
            case 0xA2: /* DEh A2h FSUBw w16(r/m) mod=2 reg=4 rm=2      spec: 0xDE mod/reg/rm /4 mod!=3 */
            case 0xA3: /* DEh A3h FSUBw w16(r/m) mod=2 reg=4 rm=3      spec: 0xDE mod/reg/rm /4 mod!=3 */
            case 0xA4: /* DEh A4h FSUBw w16(r/m) mod=2 reg=4 rm=4      spec: 0xDE mod/reg/rm /4 mod!=3 */
            case 0xA5: /* DEh A5h FSUBw w16(r/m) mod=2 reg=4 rm=5      spec: 0xDE mod/reg/rm /4 mod!=3 */
            case 0xA6: /* DEh A6h FSUBw w16(r/m) mod=2 reg=4 rm=6      spec: 0xDE mod/reg/rm /4 mod!=3 */
            case 0xA7: /* DEh A7h FSUBw w16(r/m) mod=2 reg=4 rm=7      spec: 0xDE mod/reg/rm /4 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSUBw %s",IPDecPrint32(mrm,sib,disp,2,RC_REG,"w16"));
                break;
            case 0x28: /* DEh 28h FSUBRw w16(r/m) mod=0 reg=5 rm=0      spec: 0xDE mod/reg/rm /5 mod!=3 */
            case 0x29: /* DEh 29h FSUBRw w16(r/m) mod=0 reg=5 rm=1      spec: 0xDE mod/reg/rm /5 mod!=3 */
            case 0x2A: /* DEh 2Ah FSUBRw w16(r/m) mod=0 reg=5 rm=2      spec: 0xDE mod/reg/rm /5 mod!=3 */
            case 0x2B: /* DEh 2Bh FSUBRw w16(r/m) mod=0 reg=5 rm=3      spec: 0xDE mod/reg/rm /5 mod!=3 */
            case 0x2C: /* DEh 2Ch FSUBRw w16(r/m) mod=0 reg=5 rm=4      spec: 0xDE mod/reg/rm /5 mod!=3 */
            case 0x2D: /* DEh 2Dh FSUBRw w16(r/m) mod=0 reg=5 rm=5      spec: 0xDE mod/reg/rm /5 mod!=3 */
            case 0x2E: /* DEh 2Eh FSUBRw w16(r/m) mod=0 reg=5 rm=6      spec: 0xDE mod/reg/rm /5 mod!=3 */
            case 0x2F: /* DEh 2Fh FSUBRw w16(r/m) mod=0 reg=5 rm=7      spec: 0xDE mod/reg/rm /5 mod!=3 */
            case 0x68: /* DEh 68h FSUBRw w16(r/m) mod=1 reg=5 rm=0      spec: 0xDE mod/reg/rm /5 mod!=3 */
            case 0x69: /* DEh 69h FSUBRw w16(r/m) mod=1 reg=5 rm=1      spec: 0xDE mod/reg/rm /5 mod!=3 */
            case 0x6A: /* DEh 6Ah FSUBRw w16(r/m) mod=1 reg=5 rm=2      spec: 0xDE mod/reg/rm /5 mod!=3 */
            case 0x6B: /* DEh 6Bh FSUBRw w16(r/m) mod=1 reg=5 rm=3      spec: 0xDE mod/reg/rm /5 mod!=3 */
            case 0x6C: /* DEh 6Ch FSUBRw w16(r/m) mod=1 reg=5 rm=4      spec: 0xDE mod/reg/rm /5 mod!=3 */
            case 0x6D: /* DEh 6Dh FSUBRw w16(r/m) mod=1 reg=5 rm=5      spec: 0xDE mod/reg/rm /5 mod!=3 */
            case 0x6E: /* DEh 6Eh FSUBRw w16(r/m) mod=1 reg=5 rm=6      spec: 0xDE mod/reg/rm /5 mod!=3 */
            case 0x6F: /* DEh 6Fh FSUBRw w16(r/m) mod=1 reg=5 rm=7      spec: 0xDE mod/reg/rm /5 mod!=3 */
            case 0xA8: /* DEh A8h FSUBRw w16(r/m) mod=2 reg=5 rm=0      spec: 0xDE mod/reg/rm /5 mod!=3 */
            case 0xA9: /* DEh A9h FSUBRw w16(r/m) mod=2 reg=5 rm=1      spec: 0xDE mod/reg/rm /5 mod!=3 */
            case 0xAA: /* DEh AAh FSUBRw w16(r/m) mod=2 reg=5 rm=2      spec: 0xDE mod/reg/rm /5 mod!=3 */
            case 0xAB: /* DEh ABh FSUBRw w16(r/m) mod=2 reg=5 rm=3      spec: 0xDE mod/reg/rm /5 mod!=3 */
            case 0xAC: /* DEh ACh FSUBRw w16(r/m) mod=2 reg=5 rm=4      spec: 0xDE mod/reg/rm /5 mod!=3 */
            case 0xAD: /* DEh ADh FSUBRw w16(r/m) mod=2 reg=5 rm=5      spec: 0xDE mod/reg/rm /5 mod!=3 */
            case 0xAE: /* DEh AEh FSUBRw w16(r/m) mod=2 reg=5 rm=6      spec: 0xDE mod/reg/rm /5 mod!=3 */
            case 0xAF: /* DEh AFh FSUBRw w16(r/m) mod=2 reg=5 rm=7      spec: 0xDE mod/reg/rm /5 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSUBRw %s",IPDecPrint32(mrm,sib,disp,2,RC_REG,"w16"));
                break;
            case 0x30: /* DEh 30h FDIVw w16(r/m) mod=0 reg=6 rm=0      spec: 0xDE mod/reg/rm /6 mod!=3 */
            case 0x31: /* DEh 31h FDIVw w16(r/m) mod=0 reg=6 rm=1      spec: 0xDE mod/reg/rm /6 mod!=3 */
            case 0x32: /* DEh 32h FDIVw w16(r/m) mod=0 reg=6 rm=2      spec: 0xDE mod/reg/rm /6 mod!=3 */
            case 0x33: /* DEh 33h FDIVw w16(r/m) mod=0 reg=6 rm=3      spec: 0xDE mod/reg/rm /6 mod!=3 */
            case 0x34: /* DEh 34h FDIVw w16(r/m) mod=0 reg=6 rm=4      spec: 0xDE mod/reg/rm /6 mod!=3 */
            case 0x35: /* DEh 35h FDIVw w16(r/m) mod=0 reg=6 rm=5      spec: 0xDE mod/reg/rm /6 mod!=3 */
            case 0x36: /* DEh 36h FDIVw w16(r/m) mod=0 reg=6 rm=6      spec: 0xDE mod/reg/rm /6 mod!=3 */
            case 0x37: /* DEh 37h FDIVw w16(r/m) mod=0 reg=6 rm=7      spec: 0xDE mod/reg/rm /6 mod!=3 */
            case 0x70: /* DEh 70h FDIVw w16(r/m) mod=1 reg=6 rm=0      spec: 0xDE mod/reg/rm /6 mod!=3 */
            case 0x71: /* DEh 71h FDIVw w16(r/m) mod=1 reg=6 rm=1      spec: 0xDE mod/reg/rm /6 mod!=3 */
            case 0x72: /* DEh 72h FDIVw w16(r/m) mod=1 reg=6 rm=2      spec: 0xDE mod/reg/rm /6 mod!=3 */
            case 0x73: /* DEh 73h FDIVw w16(r/m) mod=1 reg=6 rm=3      spec: 0xDE mod/reg/rm /6 mod!=3 */
            case 0x74: /* DEh 74h FDIVw w16(r/m) mod=1 reg=6 rm=4      spec: 0xDE mod/reg/rm /6 mod!=3 */
            case 0x75: /* DEh 75h FDIVw w16(r/m) mod=1 reg=6 rm=5      spec: 0xDE mod/reg/rm /6 mod!=3 */
            case 0x76: /* DEh 76h FDIVw w16(r/m) mod=1 reg=6 rm=6      spec: 0xDE mod/reg/rm /6 mod!=3 */
            case 0x77: /* DEh 77h FDIVw w16(r/m) mod=1 reg=6 rm=7      spec: 0xDE mod/reg/rm /6 mod!=3 */
            case 0xB0: /* DEh B0h FDIVw w16(r/m) mod=2 reg=6 rm=0      spec: 0xDE mod/reg/rm /6 mod!=3 */
            case 0xB1: /* DEh B1h FDIVw w16(r/m) mod=2 reg=6 rm=1      spec: 0xDE mod/reg/rm /6 mod!=3 */
            case 0xB2: /* DEh B2h FDIVw w16(r/m) mod=2 reg=6 rm=2      spec: 0xDE mod/reg/rm /6 mod!=3 */
            case 0xB3: /* DEh B3h FDIVw w16(r/m) mod=2 reg=6 rm=3      spec: 0xDE mod/reg/rm /6 mod!=3 */
            case 0xB4: /* DEh B4h FDIVw w16(r/m) mod=2 reg=6 rm=4      spec: 0xDE mod/reg/rm /6 mod!=3 */
            case 0xB5: /* DEh B5h FDIVw w16(r/m) mod=2 reg=6 rm=5      spec: 0xDE mod/reg/rm /6 mod!=3 */
            case 0xB6: /* DEh B6h FDIVw w16(r/m) mod=2 reg=6 rm=6      spec: 0xDE mod/reg/rm /6 mod!=3 */
            case 0xB7: /* DEh B7h FDIVw w16(r/m) mod=2 reg=6 rm=7      spec: 0xDE mod/reg/rm /6 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FDIVw %s",IPDecPrint32(mrm,sib,disp,2,RC_REG,"w16"));
                break;
            case 0x38: /* DEh 38h FDIVRw w16(r/m) mod=0 reg=7 rm=0      spec: 0xDE mod/reg/rm /7 mod!=3 */
            case 0x39: /* DEh 39h FDIVRw w16(r/m) mod=0 reg=7 rm=1      spec: 0xDE mod/reg/rm /7 mod!=3 */
            case 0x3A: /* DEh 3Ah FDIVRw w16(r/m) mod=0 reg=7 rm=2      spec: 0xDE mod/reg/rm /7 mod!=3 */
            case 0x3B: /* DEh 3Bh FDIVRw w16(r/m) mod=0 reg=7 rm=3      spec: 0xDE mod/reg/rm /7 mod!=3 */
            case 0x3C: /* DEh 3Ch FDIVRw w16(r/m) mod=0 reg=7 rm=4      spec: 0xDE mod/reg/rm /7 mod!=3 */
            case 0x3D: /* DEh 3Dh FDIVRw w16(r/m) mod=0 reg=7 rm=5      spec: 0xDE mod/reg/rm /7 mod!=3 */
            case 0x3E: /* DEh 3Eh FDIVRw w16(r/m) mod=0 reg=7 rm=6      spec: 0xDE mod/reg/rm /7 mod!=3 */
            case 0x3F: /* DEh 3Fh FDIVRw w16(r/m) mod=0 reg=7 rm=7      spec: 0xDE mod/reg/rm /7 mod!=3 */
            case 0x78: /* DEh 78h FDIVRw w16(r/m) mod=1 reg=7 rm=0      spec: 0xDE mod/reg/rm /7 mod!=3 */
            case 0x79: /* DEh 79h FDIVRw w16(r/m) mod=1 reg=7 rm=1      spec: 0xDE mod/reg/rm /7 mod!=3 */
            case 0x7A: /* DEh 7Ah FDIVRw w16(r/m) mod=1 reg=7 rm=2      spec: 0xDE mod/reg/rm /7 mod!=3 */
            case 0x7B: /* DEh 7Bh FDIVRw w16(r/m) mod=1 reg=7 rm=3      spec: 0xDE mod/reg/rm /7 mod!=3 */
            case 0x7C: /* DEh 7Ch FDIVRw w16(r/m) mod=1 reg=7 rm=4      spec: 0xDE mod/reg/rm /7 mod!=3 */
            case 0x7D: /* DEh 7Dh FDIVRw w16(r/m) mod=1 reg=7 rm=5      spec: 0xDE mod/reg/rm /7 mod!=3 */
            case 0x7E: /* DEh 7Eh FDIVRw w16(r/m) mod=1 reg=7 rm=6      spec: 0xDE mod/reg/rm /7 mod!=3 */
            case 0x7F: /* DEh 7Fh FDIVRw w16(r/m) mod=1 reg=7 rm=7      spec: 0xDE mod/reg/rm /7 mod!=3 */
            case 0xB8: /* DEh B8h FDIVRw w16(r/m) mod=2 reg=7 rm=0      spec: 0xDE mod/reg/rm /7 mod!=3 */
            case 0xB9: /* DEh B9h FDIVRw w16(r/m) mod=2 reg=7 rm=1      spec: 0xDE mod/reg/rm /7 mod!=3 */
            case 0xBA: /* DEh BAh FDIVRw w16(r/m) mod=2 reg=7 rm=2      spec: 0xDE mod/reg/rm /7 mod!=3 */
            case 0xBB: /* DEh BBh FDIVRw w16(r/m) mod=2 reg=7 rm=3      spec: 0xDE mod/reg/rm /7 mod!=3 */
            case 0xBC: /* DEh BCh FDIVRw w16(r/m) mod=2 reg=7 rm=4      spec: 0xDE mod/reg/rm /7 mod!=3 */
            case 0xBD: /* DEh BDh FDIVRw w16(r/m) mod=2 reg=7 rm=5      spec: 0xDE mod/reg/rm /7 mod!=3 */
            case 0xBE: /* DEh BEh FDIVRw w16(r/m) mod=2 reg=7 rm=6      spec: 0xDE mod/reg/rm /7 mod!=3 */
            case 0xBF: /* DEh BFh FDIVRw w16(r/m) mod=2 reg=7 rm=7      spec: 0xDE mod/reg/rm /7 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FDIVRw %s",IPDecPrint32(mrm,sib,disp,2,RC_REG,"w16"));
                break;
            case 0xC0: /* DEh C0h FADDP st(r/m),st(0) mod=3 reg=0 rm=0      spec: 0xDE mod/reg/rm /0 mod==3 */
            case 0xC1: /* DEh C1h FADDP st(r/m),st(0) mod=3 reg=0 rm=1      spec: 0xDE mod/reg/rm /0 mod==3 */
            case 0xC2: /* DEh C2h FADDP st(r/m),st(0) mod=3 reg=0 rm=2      spec: 0xDE mod/reg/rm /0 mod==3 */
            case 0xC3: /* DEh C3h FADDP st(r/m),st(0) mod=3 reg=0 rm=3      spec: 0xDE mod/reg/rm /0 mod==3 */
            case 0xC4: /* DEh C4h FADDP st(r/m),st(0) mod=3 reg=0 rm=4      spec: 0xDE mod/reg/rm /0 mod==3 */
            case 0xC5: /* DEh C5h FADDP st(r/m),st(0) mod=3 reg=0 rm=5      spec: 0xDE mod/reg/rm /0 mod==3 */
            case 0xC6: /* DEh C6h FADDP st(r/m),st(0) mod=3 reg=0 rm=6      spec: 0xDE mod/reg/rm /0 mod==3 */
            case 0xC7: /* DEh C7h FADDP st(r/m),st(0) mod=3 reg=0 rm=7      spec: 0xDE mod/reg/rm /0 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FADDP %s,ST(%u)",IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""),0);
                break;
            case 0xC8: /* DEh C8h FMULP st(r/m),st(0) mod=3 reg=1 rm=0      spec: 0xDE mod/reg/rm /1 mod==3 */
            case 0xC9: /* DEh C9h FMULP st(r/m),st(0) mod=3 reg=1 rm=1      spec: 0xDE mod/reg/rm /1 mod==3 */
            case 0xCA: /* DEh CAh FMULP st(r/m),st(0) mod=3 reg=1 rm=2      spec: 0xDE mod/reg/rm /1 mod==3 */
            case 0xCB: /* DEh CBh FMULP st(r/m),st(0) mod=3 reg=1 rm=3      spec: 0xDE mod/reg/rm /1 mod==3 */
            case 0xCC: /* DEh CCh FMULP st(r/m),st(0) mod=3 reg=1 rm=4      spec: 0xDE mod/reg/rm /1 mod==3 */
            case 0xCD: /* DEh CDh FMULP st(r/m),st(0) mod=3 reg=1 rm=5      spec: 0xDE mod/reg/rm /1 mod==3 */
            case 0xCE: /* DEh CEh FMULP st(r/m),st(0) mod=3 reg=1 rm=6      spec: 0xDE mod/reg/rm /1 mod==3 */
            case 0xCF: /* DEh CFh FMULP st(r/m),st(0) mod=3 reg=1 rm=7      spec: 0xDE mod/reg/rm /1 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FMULP %s,ST(%u)",IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""),0);
                break;
            /* opcode DEh D0h  not defined */
            /* opcode DEh D1h  not defined */
            /* opcode DEh D2h  not defined */
            /* opcode DEh D3h  not defined */
            /* opcode DEh D4h  not defined */
            /* opcode DEh D5h  not defined */
            /* opcode DEh D6h  not defined */
            /* opcode DEh D7h  not defined */
            /* opcode DEh D8h  not defined */
            case 0xD9: /* DEh D9h FCOMPP  mod=3 reg=3 rm=1      spec: 0xDE 0xD9 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FCOMPP");
                break;
            /* opcode DEh DAh  not defined */
            /* opcode DEh DBh  not defined */
            /* opcode DEh DCh  not defined */
            /* opcode DEh DDh  not defined */
            /* opcode DEh DEh  not defined */
            /* opcode DEh DFh  not defined */
            case 0xE0: /* DEh E0h FSUBP st(r/m),st(0) mod=3 reg=4 rm=0      spec: 0xDE mod/reg/rm /4 mod==3 */
            case 0xE1: /* DEh E1h FSUBP st(r/m),st(0) mod=3 reg=4 rm=1      spec: 0xDE mod/reg/rm /4 mod==3 */
            case 0xE2: /* DEh E2h FSUBP st(r/m),st(0) mod=3 reg=4 rm=2      spec: 0xDE mod/reg/rm /4 mod==3 */
            case 0xE3: /* DEh E3h FSUBP st(r/m),st(0) mod=3 reg=4 rm=3      spec: 0xDE mod/reg/rm /4 mod==3 */
            case 0xE4: /* DEh E4h FSUBP st(r/m),st(0) mod=3 reg=4 rm=4      spec: 0xDE mod/reg/rm /4 mod==3 */
            case 0xE5: /* DEh E5h FSUBP st(r/m),st(0) mod=3 reg=4 rm=5      spec: 0xDE mod/reg/rm /4 mod==3 */
            case 0xE6: /* DEh E6h FSUBP st(r/m),st(0) mod=3 reg=4 rm=6      spec: 0xDE mod/reg/rm /4 mod==3 */
            case 0xE7: /* DEh E7h FSUBP st(r/m),st(0) mod=3 reg=4 rm=7      spec: 0xDE mod/reg/rm /4 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSUBP %s,ST(%u)",IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""),0);
                break;
            case 0xE8: /* DEh E8h FSUBRP st(r/m),st(0) mod=3 reg=5 rm=0      spec: 0xDE mod/reg/rm /5 mod==3 */
            case 0xE9: /* DEh E9h FSUBRP st(r/m),st(0) mod=3 reg=5 rm=1      spec: 0xDE mod/reg/rm /5 mod==3 */
            case 0xEA: /* DEh EAh FSUBRP st(r/m),st(0) mod=3 reg=5 rm=2      spec: 0xDE mod/reg/rm /5 mod==3 */
            case 0xEB: /* DEh EBh FSUBRP st(r/m),st(0) mod=3 reg=5 rm=3      spec: 0xDE mod/reg/rm /5 mod==3 */
            case 0xEC: /* DEh ECh FSUBRP st(r/m),st(0) mod=3 reg=5 rm=4      spec: 0xDE mod/reg/rm /5 mod==3 */
            case 0xED: /* DEh EDh FSUBRP st(r/m),st(0) mod=3 reg=5 rm=5      spec: 0xDE mod/reg/rm /5 mod==3 */
            case 0xEE: /* DEh EEh FSUBRP st(r/m),st(0) mod=3 reg=5 rm=6      spec: 0xDE mod/reg/rm /5 mod==3 */
            case 0xEF: /* DEh EFh FSUBRP st(r/m),st(0) mod=3 reg=5 rm=7      spec: 0xDE mod/reg/rm /5 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSUBRP %s,ST(%u)",IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""),0);
                break;
            case 0xF0: /* DEh F0h FDIVP st(r/m),st(0) mod=3 reg=6 rm=0      spec: 0xDE mod/reg/rm /6 mod==3 */
            case 0xF1: /* DEh F1h FDIVP st(r/m),st(0) mod=3 reg=6 rm=1      spec: 0xDE mod/reg/rm /6 mod==3 */
            case 0xF2: /* DEh F2h FDIVP st(r/m),st(0) mod=3 reg=6 rm=2      spec: 0xDE mod/reg/rm /6 mod==3 */
            case 0xF3: /* DEh F3h FDIVP st(r/m),st(0) mod=3 reg=6 rm=3      spec: 0xDE mod/reg/rm /6 mod==3 */
            case 0xF4: /* DEh F4h FDIVP st(r/m),st(0) mod=3 reg=6 rm=4      spec: 0xDE mod/reg/rm /6 mod==3 */
            case 0xF5: /* DEh F5h FDIVP st(r/m),st(0) mod=3 reg=6 rm=5      spec: 0xDE mod/reg/rm /6 mod==3 */
            case 0xF6: /* DEh F6h FDIVP st(r/m),st(0) mod=3 reg=6 rm=6      spec: 0xDE mod/reg/rm /6 mod==3 */
            case 0xF7: /* DEh F7h FDIVP st(r/m),st(0) mod=3 reg=6 rm=7      spec: 0xDE mod/reg/rm /6 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FDIVP %s,ST(%u)",IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""),0);
                break;
            case 0xF8: /* DEh F8h FDIVRP st(r/m),st(0) mod=3 reg=7 rm=0      spec: 0xDE mod/reg/rm /7 mod==3 */
            case 0xF9: /* DEh F9h FDIVRP st(r/m),st(0) mod=3 reg=7 rm=1      spec: 0xDE mod/reg/rm /7 mod==3 */
            case 0xFA: /* DEh FAh FDIVRP st(r/m),st(0) mod=3 reg=7 rm=2      spec: 0xDE mod/reg/rm /7 mod==3 */
            case 0xFB: /* DEh FBh FDIVRP st(r/m),st(0) mod=3 reg=7 rm=3      spec: 0xDE mod/reg/rm /7 mod==3 */
            case 0xFC: /* DEh FCh FDIVRP st(r/m),st(0) mod=3 reg=7 rm=4      spec: 0xDE mod/reg/rm /7 mod==3 */
            case 0xFD: /* DEh FDh FDIVRP st(r/m),st(0) mod=3 reg=7 rm=5      spec: 0xDE mod/reg/rm /7 mod==3 */
            case 0xFE: /* DEh FEh FDIVRP st(r/m),st(0) mod=3 reg=7 rm=6      spec: 0xDE mod/reg/rm /7 mod==3 */
            case 0xFF: /* DEh FFh FDIVRP st(r/m),st(0) mod=3 reg=7 rm=7      spec: 0xDE mod/reg/rm /7 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FDIVRP %s,ST(%u)",IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""),0);
                break;
            default:
                goto _x86decode_illegal_opcode;
        };
/* End of opcodes starting with DEh */
        break;
    case 0xDF: /* DFh        spec:  */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        _x86decode_begin_code32_addr32_opcode_parse_DF:
/* Opcodes starting with DFh */
        switch (mrm.byte) {
            case 0x00: /* DFh 00h FLDw w16(r/m) mod=0 reg=0 rm=0      spec: 0xDF mod/reg/rm /0 mod!=3 */
            case 0x01: /* DFh 01h FLDw w16(r/m) mod=0 reg=0 rm=1      spec: 0xDF mod/reg/rm /0 mod!=3 */
            case 0x02: /* DFh 02h FLDw w16(r/m) mod=0 reg=0 rm=2      spec: 0xDF mod/reg/rm /0 mod!=3 */
            case 0x03: /* DFh 03h FLDw w16(r/m) mod=0 reg=0 rm=3      spec: 0xDF mod/reg/rm /0 mod!=3 */
            case 0x04: /* DFh 04h FLDw w16(r/m) mod=0 reg=0 rm=4      spec: 0xDF mod/reg/rm /0 mod!=3 */
            case 0x05: /* DFh 05h FLDw w16(r/m) mod=0 reg=0 rm=5      spec: 0xDF mod/reg/rm /0 mod!=3 */
            case 0x06: /* DFh 06h FLDw w16(r/m) mod=0 reg=0 rm=6      spec: 0xDF mod/reg/rm /0 mod!=3 */
            case 0x07: /* DFh 07h FLDw w16(r/m) mod=0 reg=0 rm=7      spec: 0xDF mod/reg/rm /0 mod!=3 */
            case 0x40: /* DFh 40h FLDw w16(r/m) mod=1 reg=0 rm=0      spec: 0xDF mod/reg/rm /0 mod!=3 */
            case 0x41: /* DFh 41h FLDw w16(r/m) mod=1 reg=0 rm=1      spec: 0xDF mod/reg/rm /0 mod!=3 */
            case 0x42: /* DFh 42h FLDw w16(r/m) mod=1 reg=0 rm=2      spec: 0xDF mod/reg/rm /0 mod!=3 */
            case 0x43: /* DFh 43h FLDw w16(r/m) mod=1 reg=0 rm=3      spec: 0xDF mod/reg/rm /0 mod!=3 */
            case 0x44: /* DFh 44h FLDw w16(r/m) mod=1 reg=0 rm=4      spec: 0xDF mod/reg/rm /0 mod!=3 */
            case 0x45: /* DFh 45h FLDw w16(r/m) mod=1 reg=0 rm=5      spec: 0xDF mod/reg/rm /0 mod!=3 */
            case 0x46: /* DFh 46h FLDw w16(r/m) mod=1 reg=0 rm=6      spec: 0xDF mod/reg/rm /0 mod!=3 */
            case 0x47: /* DFh 47h FLDw w16(r/m) mod=1 reg=0 rm=7      spec: 0xDF mod/reg/rm /0 mod!=3 */
            case 0x80: /* DFh 80h FLDw w16(r/m) mod=2 reg=0 rm=0      spec: 0xDF mod/reg/rm /0 mod!=3 */
            case 0x81: /* DFh 81h FLDw w16(r/m) mod=2 reg=0 rm=1      spec: 0xDF mod/reg/rm /0 mod!=3 */
            case 0x82: /* DFh 82h FLDw w16(r/m) mod=2 reg=0 rm=2      spec: 0xDF mod/reg/rm /0 mod!=3 */
            case 0x83: /* DFh 83h FLDw w16(r/m) mod=2 reg=0 rm=3      spec: 0xDF mod/reg/rm /0 mod!=3 */
            case 0x84: /* DFh 84h FLDw w16(r/m) mod=2 reg=0 rm=4      spec: 0xDF mod/reg/rm /0 mod!=3 */
            case 0x85: /* DFh 85h FLDw w16(r/m) mod=2 reg=0 rm=5      spec: 0xDF mod/reg/rm /0 mod!=3 */
            case 0x86: /* DFh 86h FLDw w16(r/m) mod=2 reg=0 rm=6      spec: 0xDF mod/reg/rm /0 mod!=3 */
            case 0x87: /* DFh 87h FLDw w16(r/m) mod=2 reg=0 rm=7      spec: 0xDF mod/reg/rm /0 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FLDw %s",IPDecPrint32(mrm,sib,disp,2,RC_REG,"w16"));
                break;
            case 0x08: /* DFh 08h FISTTP w16(r/m) mod=0 reg=1 rm=0      spec: 0xDF mod/reg/rm /1 mod!=3 */
            case 0x09: /* DFh 09h FISTTP w16(r/m) mod=0 reg=1 rm=1      spec: 0xDF mod/reg/rm /1 mod!=3 */
            case 0x0A: /* DFh 0Ah FISTTP w16(r/m) mod=0 reg=1 rm=2      spec: 0xDF mod/reg/rm /1 mod!=3 */
            case 0x0B: /* DFh 0Bh FISTTP w16(r/m) mod=0 reg=1 rm=3      spec: 0xDF mod/reg/rm /1 mod!=3 */
            case 0x0C: /* DFh 0Ch FISTTP w16(r/m) mod=0 reg=1 rm=4      spec: 0xDF mod/reg/rm /1 mod!=3 */
            case 0x0D: /* DFh 0Dh FISTTP w16(r/m) mod=0 reg=1 rm=5      spec: 0xDF mod/reg/rm /1 mod!=3 */
            case 0x0E: /* DFh 0Eh FISTTP w16(r/m) mod=0 reg=1 rm=6      spec: 0xDF mod/reg/rm /1 mod!=3 */
            case 0x0F: /* DFh 0Fh FISTTP w16(r/m) mod=0 reg=1 rm=7      spec: 0xDF mod/reg/rm /1 mod!=3 */
            case 0x48: /* DFh 48h FISTTP w16(r/m) mod=1 reg=1 rm=0      spec: 0xDF mod/reg/rm /1 mod!=3 */
            case 0x49: /* DFh 49h FISTTP w16(r/m) mod=1 reg=1 rm=1      spec: 0xDF mod/reg/rm /1 mod!=3 */
            case 0x4A: /* DFh 4Ah FISTTP w16(r/m) mod=1 reg=1 rm=2      spec: 0xDF mod/reg/rm /1 mod!=3 */
            case 0x4B: /* DFh 4Bh FISTTP w16(r/m) mod=1 reg=1 rm=3      spec: 0xDF mod/reg/rm /1 mod!=3 */
            case 0x4C: /* DFh 4Ch FISTTP w16(r/m) mod=1 reg=1 rm=4      spec: 0xDF mod/reg/rm /1 mod!=3 */
            case 0x4D: /* DFh 4Dh FISTTP w16(r/m) mod=1 reg=1 rm=5      spec: 0xDF mod/reg/rm /1 mod!=3 */
            case 0x4E: /* DFh 4Eh FISTTP w16(r/m) mod=1 reg=1 rm=6      spec: 0xDF mod/reg/rm /1 mod!=3 */
            case 0x4F: /* DFh 4Fh FISTTP w16(r/m) mod=1 reg=1 rm=7      spec: 0xDF mod/reg/rm /1 mod!=3 */
            case 0x88: /* DFh 88h FISTTP w16(r/m) mod=2 reg=1 rm=0      spec: 0xDF mod/reg/rm /1 mod!=3 */
            case 0x89: /* DFh 89h FISTTP w16(r/m) mod=2 reg=1 rm=1      spec: 0xDF mod/reg/rm /1 mod!=3 */
            case 0x8A: /* DFh 8Ah FISTTP w16(r/m) mod=2 reg=1 rm=2      spec: 0xDF mod/reg/rm /1 mod!=3 */
            case 0x8B: /* DFh 8Bh FISTTP w16(r/m) mod=2 reg=1 rm=3      spec: 0xDF mod/reg/rm /1 mod!=3 */
            case 0x8C: /* DFh 8Ch FISTTP w16(r/m) mod=2 reg=1 rm=4      spec: 0xDF mod/reg/rm /1 mod!=3 */
            case 0x8D: /* DFh 8Dh FISTTP w16(r/m) mod=2 reg=1 rm=5      spec: 0xDF mod/reg/rm /1 mod!=3 */
            case 0x8E: /* DFh 8Eh FISTTP w16(r/m) mod=2 reg=1 rm=6      spec: 0xDF mod/reg/rm /1 mod!=3 */
            case 0x8F: /* DFh 8Fh FISTTP w16(r/m) mod=2 reg=1 rm=7      spec: 0xDF mod/reg/rm /1 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FISTTP %s",IPDecPrint32(mrm,sib,disp,2,RC_REG,"w16"));
                break;
            case 0x10: /* DFh 10h FSTw w16(r/m) mod=0 reg=2 rm=0      spec: 0xDF mod/reg/rm /2 mod!=3 */
            case 0x11: /* DFh 11h FSTw w16(r/m) mod=0 reg=2 rm=1      spec: 0xDF mod/reg/rm /2 mod!=3 */
            case 0x12: /* DFh 12h FSTw w16(r/m) mod=0 reg=2 rm=2      spec: 0xDF mod/reg/rm /2 mod!=3 */
            case 0x13: /* DFh 13h FSTw w16(r/m) mod=0 reg=2 rm=3      spec: 0xDF mod/reg/rm /2 mod!=3 */
            case 0x14: /* DFh 14h FSTw w16(r/m) mod=0 reg=2 rm=4      spec: 0xDF mod/reg/rm /2 mod!=3 */
            case 0x15: /* DFh 15h FSTw w16(r/m) mod=0 reg=2 rm=5      spec: 0xDF mod/reg/rm /2 mod!=3 */
            case 0x16: /* DFh 16h FSTw w16(r/m) mod=0 reg=2 rm=6      spec: 0xDF mod/reg/rm /2 mod!=3 */
            case 0x17: /* DFh 17h FSTw w16(r/m) mod=0 reg=2 rm=7      spec: 0xDF mod/reg/rm /2 mod!=3 */
            case 0x50: /* DFh 50h FSTw w16(r/m) mod=1 reg=2 rm=0      spec: 0xDF mod/reg/rm /2 mod!=3 */
            case 0x51: /* DFh 51h FSTw w16(r/m) mod=1 reg=2 rm=1      spec: 0xDF mod/reg/rm /2 mod!=3 */
            case 0x52: /* DFh 52h FSTw w16(r/m) mod=1 reg=2 rm=2      spec: 0xDF mod/reg/rm /2 mod!=3 */
            case 0x53: /* DFh 53h FSTw w16(r/m) mod=1 reg=2 rm=3      spec: 0xDF mod/reg/rm /2 mod!=3 */
            case 0x54: /* DFh 54h FSTw w16(r/m) mod=1 reg=2 rm=4      spec: 0xDF mod/reg/rm /2 mod!=3 */
            case 0x55: /* DFh 55h FSTw w16(r/m) mod=1 reg=2 rm=5      spec: 0xDF mod/reg/rm /2 mod!=3 */
            case 0x56: /* DFh 56h FSTw w16(r/m) mod=1 reg=2 rm=6      spec: 0xDF mod/reg/rm /2 mod!=3 */
            case 0x57: /* DFh 57h FSTw w16(r/m) mod=1 reg=2 rm=7      spec: 0xDF mod/reg/rm /2 mod!=3 */
            case 0x90: /* DFh 90h FSTw w16(r/m) mod=2 reg=2 rm=0      spec: 0xDF mod/reg/rm /2 mod!=3 */
            case 0x91: /* DFh 91h FSTw w16(r/m) mod=2 reg=2 rm=1      spec: 0xDF mod/reg/rm /2 mod!=3 */
            case 0x92: /* DFh 92h FSTw w16(r/m) mod=2 reg=2 rm=2      spec: 0xDF mod/reg/rm /2 mod!=3 */
            case 0x93: /* DFh 93h FSTw w16(r/m) mod=2 reg=2 rm=3      spec: 0xDF mod/reg/rm /2 mod!=3 */
            case 0x94: /* DFh 94h FSTw w16(r/m) mod=2 reg=2 rm=4      spec: 0xDF mod/reg/rm /2 mod!=3 */
            case 0x95: /* DFh 95h FSTw w16(r/m) mod=2 reg=2 rm=5      spec: 0xDF mod/reg/rm /2 mod!=3 */
            case 0x96: /* DFh 96h FSTw w16(r/m) mod=2 reg=2 rm=6      spec: 0xDF mod/reg/rm /2 mod!=3 */
            case 0x97: /* DFh 97h FSTw w16(r/m) mod=2 reg=2 rm=7      spec: 0xDF mod/reg/rm /2 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSTw %s",IPDecPrint32(mrm,sib,disp,2,RC_REG,"w16"));
                break;
            case 0x18: /* DFh 18h FSTPw w16(r/m) mod=0 reg=3 rm=0      spec: 0xDF mod/reg/rm /3 mod!=3 */
            case 0x19: /* DFh 19h FSTPw w16(r/m) mod=0 reg=3 rm=1      spec: 0xDF mod/reg/rm /3 mod!=3 */
            case 0x1A: /* DFh 1Ah FSTPw w16(r/m) mod=0 reg=3 rm=2      spec: 0xDF mod/reg/rm /3 mod!=3 */
            case 0x1B: /* DFh 1Bh FSTPw w16(r/m) mod=0 reg=3 rm=3      spec: 0xDF mod/reg/rm /3 mod!=3 */
            case 0x1C: /* DFh 1Ch FSTPw w16(r/m) mod=0 reg=3 rm=4      spec: 0xDF mod/reg/rm /3 mod!=3 */
            case 0x1D: /* DFh 1Dh FSTPw w16(r/m) mod=0 reg=3 rm=5      spec: 0xDF mod/reg/rm /3 mod!=3 */
            case 0x1E: /* DFh 1Eh FSTPw w16(r/m) mod=0 reg=3 rm=6      spec: 0xDF mod/reg/rm /3 mod!=3 */
            case 0x1F: /* DFh 1Fh FSTPw w16(r/m) mod=0 reg=3 rm=7      spec: 0xDF mod/reg/rm /3 mod!=3 */
            case 0x58: /* DFh 58h FSTPw w16(r/m) mod=1 reg=3 rm=0      spec: 0xDF mod/reg/rm /3 mod!=3 */
            case 0x59: /* DFh 59h FSTPw w16(r/m) mod=1 reg=3 rm=1      spec: 0xDF mod/reg/rm /3 mod!=3 */
            case 0x5A: /* DFh 5Ah FSTPw w16(r/m) mod=1 reg=3 rm=2      spec: 0xDF mod/reg/rm /3 mod!=3 */
            case 0x5B: /* DFh 5Bh FSTPw w16(r/m) mod=1 reg=3 rm=3      spec: 0xDF mod/reg/rm /3 mod!=3 */
            case 0x5C: /* DFh 5Ch FSTPw w16(r/m) mod=1 reg=3 rm=4      spec: 0xDF mod/reg/rm /3 mod!=3 */
            case 0x5D: /* DFh 5Dh FSTPw w16(r/m) mod=1 reg=3 rm=5      spec: 0xDF mod/reg/rm /3 mod!=3 */
            case 0x5E: /* DFh 5Eh FSTPw w16(r/m) mod=1 reg=3 rm=6      spec: 0xDF mod/reg/rm /3 mod!=3 */
            case 0x5F: /* DFh 5Fh FSTPw w16(r/m) mod=1 reg=3 rm=7      spec: 0xDF mod/reg/rm /3 mod!=3 */
            case 0x98: /* DFh 98h FSTPw w16(r/m) mod=2 reg=3 rm=0      spec: 0xDF mod/reg/rm /3 mod!=3 */
            case 0x99: /* DFh 99h FSTPw w16(r/m) mod=2 reg=3 rm=1      spec: 0xDF mod/reg/rm /3 mod!=3 */
            case 0x9A: /* DFh 9Ah FSTPw w16(r/m) mod=2 reg=3 rm=2      spec: 0xDF mod/reg/rm /3 mod!=3 */
            case 0x9B: /* DFh 9Bh FSTPw w16(r/m) mod=2 reg=3 rm=3      spec: 0xDF mod/reg/rm /3 mod!=3 */
            case 0x9C: /* DFh 9Ch FSTPw w16(r/m) mod=2 reg=3 rm=4      spec: 0xDF mod/reg/rm /3 mod!=3 */
            case 0x9D: /* DFh 9Dh FSTPw w16(r/m) mod=2 reg=3 rm=5      spec: 0xDF mod/reg/rm /3 mod!=3 */
            case 0x9E: /* DFh 9Eh FSTPw w16(r/m) mod=2 reg=3 rm=6      spec: 0xDF mod/reg/rm /3 mod!=3 */
            case 0x9F: /* DFh 9Fh FSTPw w16(r/m) mod=2 reg=3 rm=7      spec: 0xDF mod/reg/rm /3 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSTPw %s",IPDecPrint32(mrm,sib,disp,2,RC_REG,"w16"));
                break;
            case 0x20: /* DFh 20h FLDfbcd fbcd(r/m) mod=0 reg=4 rm=0      spec: 0xDF mod/reg/rm /4 mod!=3 */
            case 0x21: /* DFh 21h FLDfbcd fbcd(r/m) mod=0 reg=4 rm=1      spec: 0xDF mod/reg/rm /4 mod!=3 */
            case 0x22: /* DFh 22h FLDfbcd fbcd(r/m) mod=0 reg=4 rm=2      spec: 0xDF mod/reg/rm /4 mod!=3 */
            case 0x23: /* DFh 23h FLDfbcd fbcd(r/m) mod=0 reg=4 rm=3      spec: 0xDF mod/reg/rm /4 mod!=3 */
            case 0x24: /* DFh 24h FLDfbcd fbcd(r/m) mod=0 reg=4 rm=4      spec: 0xDF mod/reg/rm /4 mod!=3 */
            case 0x25: /* DFh 25h FLDfbcd fbcd(r/m) mod=0 reg=4 rm=5      spec: 0xDF mod/reg/rm /4 mod!=3 */
            case 0x26: /* DFh 26h FLDfbcd fbcd(r/m) mod=0 reg=4 rm=6      spec: 0xDF mod/reg/rm /4 mod!=3 */
            case 0x27: /* DFh 27h FLDfbcd fbcd(r/m) mod=0 reg=4 rm=7      spec: 0xDF mod/reg/rm /4 mod!=3 */
            case 0x60: /* DFh 60h FLDfbcd fbcd(r/m) mod=1 reg=4 rm=0      spec: 0xDF mod/reg/rm /4 mod!=3 */
            case 0x61: /* DFh 61h FLDfbcd fbcd(r/m) mod=1 reg=4 rm=1      spec: 0xDF mod/reg/rm /4 mod!=3 */
            case 0x62: /* DFh 62h FLDfbcd fbcd(r/m) mod=1 reg=4 rm=2      spec: 0xDF mod/reg/rm /4 mod!=3 */
            case 0x63: /* DFh 63h FLDfbcd fbcd(r/m) mod=1 reg=4 rm=3      spec: 0xDF mod/reg/rm /4 mod!=3 */
            case 0x64: /* DFh 64h FLDfbcd fbcd(r/m) mod=1 reg=4 rm=4      spec: 0xDF mod/reg/rm /4 mod!=3 */
            case 0x65: /* DFh 65h FLDfbcd fbcd(r/m) mod=1 reg=4 rm=5      spec: 0xDF mod/reg/rm /4 mod!=3 */
            case 0x66: /* DFh 66h FLDfbcd fbcd(r/m) mod=1 reg=4 rm=6      spec: 0xDF mod/reg/rm /4 mod!=3 */
            case 0x67: /* DFh 67h FLDfbcd fbcd(r/m) mod=1 reg=4 rm=7      spec: 0xDF mod/reg/rm /4 mod!=3 */
            case 0xA0: /* DFh A0h FLDfbcd fbcd(r/m) mod=2 reg=4 rm=0      spec: 0xDF mod/reg/rm /4 mod!=3 */
            case 0xA1: /* DFh A1h FLDfbcd fbcd(r/m) mod=2 reg=4 rm=1      spec: 0xDF mod/reg/rm /4 mod!=3 */
            case 0xA2: /* DFh A2h FLDfbcd fbcd(r/m) mod=2 reg=4 rm=2      spec: 0xDF mod/reg/rm /4 mod!=3 */
            case 0xA3: /* DFh A3h FLDfbcd fbcd(r/m) mod=2 reg=4 rm=3      spec: 0xDF mod/reg/rm /4 mod!=3 */
            case 0xA4: /* DFh A4h FLDfbcd fbcd(r/m) mod=2 reg=4 rm=4      spec: 0xDF mod/reg/rm /4 mod!=3 */
            case 0xA5: /* DFh A5h FLDfbcd fbcd(r/m) mod=2 reg=4 rm=5      spec: 0xDF mod/reg/rm /4 mod!=3 */
            case 0xA6: /* DFh A6h FLDfbcd fbcd(r/m) mod=2 reg=4 rm=6      spec: 0xDF mod/reg/rm /4 mod!=3 */
            case 0xA7: /* DFh A7h FLDfbcd fbcd(r/m) mod=2 reg=4 rm=7      spec: 0xDF mod/reg/rm /4 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FLDfbcd %s",IPDecPrint32(mrm,sib,disp,10,RC_FPUREG,"fbcd"));
                break;
            case 0x28: /* DFh 28h FLDq w64(r/m) mod=0 reg=5 rm=0      spec: 0xDF mod/reg/rm /5 mod!=3 */
            case 0x29: /* DFh 29h FLDq w64(r/m) mod=0 reg=5 rm=1      spec: 0xDF mod/reg/rm /5 mod!=3 */
            case 0x2A: /* DFh 2Ah FLDq w64(r/m) mod=0 reg=5 rm=2      spec: 0xDF mod/reg/rm /5 mod!=3 */
            case 0x2B: /* DFh 2Bh FLDq w64(r/m) mod=0 reg=5 rm=3      spec: 0xDF mod/reg/rm /5 mod!=3 */
            case 0x2C: /* DFh 2Ch FLDq w64(r/m) mod=0 reg=5 rm=4      spec: 0xDF mod/reg/rm /5 mod!=3 */
            case 0x2D: /* DFh 2Dh FLDq w64(r/m) mod=0 reg=5 rm=5      spec: 0xDF mod/reg/rm /5 mod!=3 */
            case 0x2E: /* DFh 2Eh FLDq w64(r/m) mod=0 reg=5 rm=6      spec: 0xDF mod/reg/rm /5 mod!=3 */
            case 0x2F: /* DFh 2Fh FLDq w64(r/m) mod=0 reg=5 rm=7      spec: 0xDF mod/reg/rm /5 mod!=3 */
            case 0x68: /* DFh 68h FLDq w64(r/m) mod=1 reg=5 rm=0      spec: 0xDF mod/reg/rm /5 mod!=3 */
            case 0x69: /* DFh 69h FLDq w64(r/m) mod=1 reg=5 rm=1      spec: 0xDF mod/reg/rm /5 mod!=3 */
            case 0x6A: /* DFh 6Ah FLDq w64(r/m) mod=1 reg=5 rm=2      spec: 0xDF mod/reg/rm /5 mod!=3 */
            case 0x6B: /* DFh 6Bh FLDq w64(r/m) mod=1 reg=5 rm=3      spec: 0xDF mod/reg/rm /5 mod!=3 */
            case 0x6C: /* DFh 6Ch FLDq w64(r/m) mod=1 reg=5 rm=4      spec: 0xDF mod/reg/rm /5 mod!=3 */
            case 0x6D: /* DFh 6Dh FLDq w64(r/m) mod=1 reg=5 rm=5      spec: 0xDF mod/reg/rm /5 mod!=3 */
            case 0x6E: /* DFh 6Eh FLDq w64(r/m) mod=1 reg=5 rm=6      spec: 0xDF mod/reg/rm /5 mod!=3 */
            case 0x6F: /* DFh 6Fh FLDq w64(r/m) mod=1 reg=5 rm=7      spec: 0xDF mod/reg/rm /5 mod!=3 */
            case 0xA8: /* DFh A8h FLDq w64(r/m) mod=2 reg=5 rm=0      spec: 0xDF mod/reg/rm /5 mod!=3 */
            case 0xA9: /* DFh A9h FLDq w64(r/m) mod=2 reg=5 rm=1      spec: 0xDF mod/reg/rm /5 mod!=3 */
            case 0xAA: /* DFh AAh FLDq w64(r/m) mod=2 reg=5 rm=2      spec: 0xDF mod/reg/rm /5 mod!=3 */
            case 0xAB: /* DFh ABh FLDq w64(r/m) mod=2 reg=5 rm=3      spec: 0xDF mod/reg/rm /5 mod!=3 */
            case 0xAC: /* DFh ACh FLDq w64(r/m) mod=2 reg=5 rm=4      spec: 0xDF mod/reg/rm /5 mod!=3 */
            case 0xAD: /* DFh ADh FLDq w64(r/m) mod=2 reg=5 rm=5      spec: 0xDF mod/reg/rm /5 mod!=3 */
            case 0xAE: /* DFh AEh FLDq w64(r/m) mod=2 reg=5 rm=6      spec: 0xDF mod/reg/rm /5 mod!=3 */
            case 0xAF: /* DFh AFh FLDq w64(r/m) mod=2 reg=5 rm=7      spec: 0xDF mod/reg/rm /5 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FLDq %s",IPDecPrint32(mrm,sib,disp,8,RC_REG,"w64"));
                break;
            case 0x30: /* DFh 30h FSTPfbcd fbcd(r/m) mod=0 reg=6 rm=0      spec: 0xDF mod/reg/rm /6 mod!=3 */
            case 0x31: /* DFh 31h FSTPfbcd fbcd(r/m) mod=0 reg=6 rm=1      spec: 0xDF mod/reg/rm /6 mod!=3 */
            case 0x32: /* DFh 32h FSTPfbcd fbcd(r/m) mod=0 reg=6 rm=2      spec: 0xDF mod/reg/rm /6 mod!=3 */
            case 0x33: /* DFh 33h FSTPfbcd fbcd(r/m) mod=0 reg=6 rm=3      spec: 0xDF mod/reg/rm /6 mod!=3 */
            case 0x34: /* DFh 34h FSTPfbcd fbcd(r/m) mod=0 reg=6 rm=4      spec: 0xDF mod/reg/rm /6 mod!=3 */
            case 0x35: /* DFh 35h FSTPfbcd fbcd(r/m) mod=0 reg=6 rm=5      spec: 0xDF mod/reg/rm /6 mod!=3 */
            case 0x36: /* DFh 36h FSTPfbcd fbcd(r/m) mod=0 reg=6 rm=6      spec: 0xDF mod/reg/rm /6 mod!=3 */
            case 0x37: /* DFh 37h FSTPfbcd fbcd(r/m) mod=0 reg=6 rm=7      spec: 0xDF mod/reg/rm /6 mod!=3 */
            case 0x70: /* DFh 70h FSTPfbcd fbcd(r/m) mod=1 reg=6 rm=0      spec: 0xDF mod/reg/rm /6 mod!=3 */
            case 0x71: /* DFh 71h FSTPfbcd fbcd(r/m) mod=1 reg=6 rm=1      spec: 0xDF mod/reg/rm /6 mod!=3 */
            case 0x72: /* DFh 72h FSTPfbcd fbcd(r/m) mod=1 reg=6 rm=2      spec: 0xDF mod/reg/rm /6 mod!=3 */
            case 0x73: /* DFh 73h FSTPfbcd fbcd(r/m) mod=1 reg=6 rm=3      spec: 0xDF mod/reg/rm /6 mod!=3 */
            case 0x74: /* DFh 74h FSTPfbcd fbcd(r/m) mod=1 reg=6 rm=4      spec: 0xDF mod/reg/rm /6 mod!=3 */
            case 0x75: /* DFh 75h FSTPfbcd fbcd(r/m) mod=1 reg=6 rm=5      spec: 0xDF mod/reg/rm /6 mod!=3 */
            case 0x76: /* DFh 76h FSTPfbcd fbcd(r/m) mod=1 reg=6 rm=6      spec: 0xDF mod/reg/rm /6 mod!=3 */
            case 0x77: /* DFh 77h FSTPfbcd fbcd(r/m) mod=1 reg=6 rm=7      spec: 0xDF mod/reg/rm /6 mod!=3 */
            case 0xB0: /* DFh B0h FSTPfbcd fbcd(r/m) mod=2 reg=6 rm=0      spec: 0xDF mod/reg/rm /6 mod!=3 */
            case 0xB1: /* DFh B1h FSTPfbcd fbcd(r/m) mod=2 reg=6 rm=1      spec: 0xDF mod/reg/rm /6 mod!=3 */
            case 0xB2: /* DFh B2h FSTPfbcd fbcd(r/m) mod=2 reg=6 rm=2      spec: 0xDF mod/reg/rm /6 mod!=3 */
            case 0xB3: /* DFh B3h FSTPfbcd fbcd(r/m) mod=2 reg=6 rm=3      spec: 0xDF mod/reg/rm /6 mod!=3 */
            case 0xB4: /* DFh B4h FSTPfbcd fbcd(r/m) mod=2 reg=6 rm=4      spec: 0xDF mod/reg/rm /6 mod!=3 */
            case 0xB5: /* DFh B5h FSTPfbcd fbcd(r/m) mod=2 reg=6 rm=5      spec: 0xDF mod/reg/rm /6 mod!=3 */
            case 0xB6: /* DFh B6h FSTPfbcd fbcd(r/m) mod=2 reg=6 rm=6      spec: 0xDF mod/reg/rm /6 mod!=3 */
            case 0xB7: /* DFh B7h FSTPfbcd fbcd(r/m) mod=2 reg=6 rm=7      spec: 0xDF mod/reg/rm /6 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSTPfbcd %s",IPDecPrint32(mrm,sib,disp,10,RC_FPUREG,"fbcd"));
                break;
            case 0x38: /* DFh 38h FSTPq w64(r/m) mod=0 reg=7 rm=0      spec: 0xDF mod/reg/rm /7 mod!=3 */
            case 0x39: /* DFh 39h FSTPq w64(r/m) mod=0 reg=7 rm=1      spec: 0xDF mod/reg/rm /7 mod!=3 */
            case 0x3A: /* DFh 3Ah FSTPq w64(r/m) mod=0 reg=7 rm=2      spec: 0xDF mod/reg/rm /7 mod!=3 */
            case 0x3B: /* DFh 3Bh FSTPq w64(r/m) mod=0 reg=7 rm=3      spec: 0xDF mod/reg/rm /7 mod!=3 */
            case 0x3C: /* DFh 3Ch FSTPq w64(r/m) mod=0 reg=7 rm=4      spec: 0xDF mod/reg/rm /7 mod!=3 */
            case 0x3D: /* DFh 3Dh FSTPq w64(r/m) mod=0 reg=7 rm=5      spec: 0xDF mod/reg/rm /7 mod!=3 */
            case 0x3E: /* DFh 3Eh FSTPq w64(r/m) mod=0 reg=7 rm=6      spec: 0xDF mod/reg/rm /7 mod!=3 */
            case 0x3F: /* DFh 3Fh FSTPq w64(r/m) mod=0 reg=7 rm=7      spec: 0xDF mod/reg/rm /7 mod!=3 */
            case 0x78: /* DFh 78h FSTPq w64(r/m) mod=1 reg=7 rm=0      spec: 0xDF mod/reg/rm /7 mod!=3 */
            case 0x79: /* DFh 79h FSTPq w64(r/m) mod=1 reg=7 rm=1      spec: 0xDF mod/reg/rm /7 mod!=3 */
            case 0x7A: /* DFh 7Ah FSTPq w64(r/m) mod=1 reg=7 rm=2      spec: 0xDF mod/reg/rm /7 mod!=3 */
            case 0x7B: /* DFh 7Bh FSTPq w64(r/m) mod=1 reg=7 rm=3      spec: 0xDF mod/reg/rm /7 mod!=3 */
            case 0x7C: /* DFh 7Ch FSTPq w64(r/m) mod=1 reg=7 rm=4      spec: 0xDF mod/reg/rm /7 mod!=3 */
            case 0x7D: /* DFh 7Dh FSTPq w64(r/m) mod=1 reg=7 rm=5      spec: 0xDF mod/reg/rm /7 mod!=3 */
            case 0x7E: /* DFh 7Eh FSTPq w64(r/m) mod=1 reg=7 rm=6      spec: 0xDF mod/reg/rm /7 mod!=3 */
            case 0x7F: /* DFh 7Fh FSTPq w64(r/m) mod=1 reg=7 rm=7      spec: 0xDF mod/reg/rm /7 mod!=3 */
            case 0xB8: /* DFh B8h FSTPq w64(r/m) mod=2 reg=7 rm=0      spec: 0xDF mod/reg/rm /7 mod!=3 */
            case 0xB9: /* DFh B9h FSTPq w64(r/m) mod=2 reg=7 rm=1      spec: 0xDF mod/reg/rm /7 mod!=3 */
            case 0xBA: /* DFh BAh FSTPq w64(r/m) mod=2 reg=7 rm=2      spec: 0xDF mod/reg/rm /7 mod!=3 */
            case 0xBB: /* DFh BBh FSTPq w64(r/m) mod=2 reg=7 rm=3      spec: 0xDF mod/reg/rm /7 mod!=3 */
            case 0xBC: /* DFh BCh FSTPq w64(r/m) mod=2 reg=7 rm=4      spec: 0xDF mod/reg/rm /7 mod!=3 */
            case 0xBD: /* DFh BDh FSTPq w64(r/m) mod=2 reg=7 rm=5      spec: 0xDF mod/reg/rm /7 mod!=3 */
            case 0xBE: /* DFh BEh FSTPq w64(r/m) mod=2 reg=7 rm=6      spec: 0xDF mod/reg/rm /7 mod!=3 */
            case 0xBF: /* DFh BFh FSTPq w64(r/m) mod=2 reg=7 rm=7      spec: 0xDF mod/reg/rm /7 mod!=3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSTPq %s",IPDecPrint32(mrm,sib,disp,8,RC_REG,"w64"));
                break;
            /* opcode DFh C0h  not defined */
            /* opcode DFh C1h  not defined */
            /* opcode DFh C2h  not defined */
            /* opcode DFh C3h  not defined */
            /* opcode DFh C4h  not defined */
            /* opcode DFh C5h  not defined */
            /* opcode DFh C6h  not defined */
            /* opcode DFh C7h  not defined */
            /* opcode DFh C8h  not defined */
            /* opcode DFh C9h  not defined */
            /* opcode DFh CAh  not defined */
            /* opcode DFh CBh  not defined */
            /* opcode DFh CCh  not defined */
            /* opcode DFh CDh  not defined */
            /* opcode DFh CEh  not defined */
            /* opcode DFh CFh  not defined */
            /* opcode DFh D0h  not defined */
            /* opcode DFh D1h  not defined */
            /* opcode DFh D2h  not defined */
            /* opcode DFh D3h  not defined */
            /* opcode DFh D4h  not defined */
            /* opcode DFh D5h  not defined */
            /* opcode DFh D6h  not defined */
            /* opcode DFh D7h  not defined */
            /* opcode DFh D8h  not defined */
            /* opcode DFh D9h  not defined */
            /* opcode DFh DAh  not defined */
            /* opcode DFh DBh  not defined */
            /* opcode DFh DCh  not defined */
            /* opcode DFh DDh  not defined */
            /* opcode DFh DEh  not defined */
            /* opcode DFh DFh  not defined */
            case 0xE0: /* DFh E0h FSTSWd w(a) mod=3 reg=4 rm=0      spec: 0xDF 0xE0 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FSTSWd %s",CPUregsN[4][0]);
                break;
            /* opcode DFh E1h  not defined */
            /* opcode DFh E2h  not defined */
            /* opcode DFh E3h  not defined */
            /* opcode DFh E4h  not defined */
            /* opcode DFh E5h  not defined */
            /* opcode DFh E6h  not defined */
            /* opcode DFh E7h  not defined */
            case 0xE8: /* DFh E8h FUCOMIP st(0),st(r/m) mod=3 reg=5 rm=0      spec: 0xDF mod/reg/rm /5 mod==3 */
            case 0xE9: /* DFh E9h FUCOMIP st(0),st(r/m) mod=3 reg=5 rm=1      spec: 0xDF mod/reg/rm /5 mod==3 */
            case 0xEA: /* DFh EAh FUCOMIP st(0),st(r/m) mod=3 reg=5 rm=2      spec: 0xDF mod/reg/rm /5 mod==3 */
            case 0xEB: /* DFh EBh FUCOMIP st(0),st(r/m) mod=3 reg=5 rm=3      spec: 0xDF mod/reg/rm /5 mod==3 */
            case 0xEC: /* DFh ECh FUCOMIP st(0),st(r/m) mod=3 reg=5 rm=4      spec: 0xDF mod/reg/rm /5 mod==3 */
            case 0xED: /* DFh EDh FUCOMIP st(0),st(r/m) mod=3 reg=5 rm=5      spec: 0xDF mod/reg/rm /5 mod==3 */
            case 0xEE: /* DFh EEh FUCOMIP st(0),st(r/m) mod=3 reg=5 rm=6      spec: 0xDF mod/reg/rm /5 mod==3 */
            case 0xEF: /* DFh EFh FUCOMIP st(0),st(r/m) mod=3 reg=5 rm=7      spec: 0xDF mod/reg/rm /5 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FUCOMIP ST(%u),%s",0,IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""));
                break;
            case 0xF0: /* DFh F0h FCOMIP st(0),st(r/m) mod=3 reg=6 rm=0      spec: 0xDF mod/reg/rm /6 mod==3 */
            case 0xF1: /* DFh F1h FCOMIP st(0),st(r/m) mod=3 reg=6 rm=1      spec: 0xDF mod/reg/rm /6 mod==3 */
            case 0xF2: /* DFh F2h FCOMIP st(0),st(r/m) mod=3 reg=6 rm=2      spec: 0xDF mod/reg/rm /6 mod==3 */
            case 0xF3: /* DFh F3h FCOMIP st(0),st(r/m) mod=3 reg=6 rm=3      spec: 0xDF mod/reg/rm /6 mod==3 */
            case 0xF4: /* DFh F4h FCOMIP st(0),st(r/m) mod=3 reg=6 rm=4      spec: 0xDF mod/reg/rm /6 mod==3 */
            case 0xF5: /* DFh F5h FCOMIP st(0),st(r/m) mod=3 reg=6 rm=5      spec: 0xDF mod/reg/rm /6 mod==3 */
            case 0xF6: /* DFh F6h FCOMIP st(0),st(r/m) mod=3 reg=6 rm=6      spec: 0xDF mod/reg/rm /6 mod==3 */
            case 0xF7: /* DFh F7h FCOMIP st(0),st(r/m) mod=3 reg=6 rm=7      spec: 0xDF mod/reg/rm /6 mod==3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"FCOMIP ST(%u),%s",0,IPDecPrint32(mrm,sib,disp,8,RC_FPUREG,""));
                break;
            /* opcode DFh F8h  not defined */
            /* opcode DFh F9h  not defined */
            /* opcode DFh FAh  not defined */
            /* opcode DFh FBh  not defined */
            /* opcode DFh FCh  not defined */
            /* opcode DFh FDh  not defined */
            /* opcode DFh FEh  not defined */
            /* opcode DFh FFh  not defined */
            default:
                goto _x86decode_illegal_opcode;
        };
/* End of opcodes starting with DFh */
        break;
    case 0xE0: /* E0h LOOPNZd w(i+ip)      spec: 0xE0 ibs */
        imm=IPFBsigned();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"LOOPNZd 0x%02lX",(unsigned long)((uint32_t)(imm+IPval())));
        break;
    case 0xE1: /* E1h LOOPZd w(i+ip)      spec: 0xE1 ibs */
        imm=IPFBsigned();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"LOOPZd 0x%02lX",(unsigned long)((uint32_t)(imm+IPval())));
        break;
    case 0xE2: /* E2h LOOPd w(i+ip)      spec: 0xE2 ibs */
        imm=IPFBsigned();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"LOOPd 0x%02lX",(unsigned long)((uint32_t)(imm+IPval())));
        break;
    case 0xE3: /* E3h JCXZd w(i+ip)      spec: 0xE3 ibs */
        imm=IPFBsigned();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JCXZd 0x%02lX",(unsigned long)((uint32_t)(imm+IPval())));
        break;
    case 0xE4: /* E4h INb b(a),i      spec: 0xE4 ib */
        imm=IPFB();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"INb %s,0x%02lX",CPUregsN[1][0],(unsigned long)((uint32_t)imm));
        break;
    case 0xE5: /* E5h INd w(a),i      spec: 0xE5 ib */
        imm=IPFB();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"INd %s,0x%02lX",CPUregsN[4][0],(unsigned long)((uint32_t)imm));
        break;
    case 0xE6: /* E6h OUTb i,b(a)      spec: 0xE6 ib */
        imm=IPFB();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"OUTb 0x%02lX,%s",(unsigned long)((uint32_t)imm),CPUregsN[1][0]);
        break;
    case 0xE7: /* E7h OUTd i,w(a)      spec: 0xE7 ib */
        imm=IPFB();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"OUTd 0x%02lX,%s",(unsigned long)((uint32_t)imm),CPUregsN[4][0]);
        break;
    case 0xE8: /* E8h CALLd w(i+ip)      spec: 0xE8 iws */
        imm=IPFcodeWsigned();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CALLd 0x%08lX",(unsigned long)((uint32_t)(imm+IPval())));
        break;
    case 0xE9: /* E9h JMPd w(i+ip)      spec: 0xE9 iws */
        imm=IPFcodeWsigned();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JMPd 0x%08lX",(unsigned long)((uint32_t)(imm+IPval())));
        break;
    case 0xEA: /* EAh JMPFd w(i2),w(i)      spec: 0xEA iw iw16 */
        imm=IPFcodeW();
        imm2=IPFW();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JMPFd 0x%04lX,0x%08lX",(unsigned long)((uint32_t)imm2),(unsigned long)((uint32_t)imm));
        break;
    case 0xEB: /* EBh JMPd w(i+ip)      spec: 0xEB ibs */
        imm=IPFBsigned();
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JMPd 0x%02lX",(unsigned long)((uint32_t)(imm+IPval())));
        break;
    case 0xEC: /* ECh INb b(a),w16(d)      spec: 0xEC */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"INb %s,%s",CPUregsN[1][0],CPUregsN[2][2]);
        break;
    case 0xED: /* EDh INd w(a),w16(d)      spec: 0xED */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"INd %s,%s",CPUregsN[4][0],CPUregsN[2][2]);
        break;
    case 0xEE: /* EEh OUTb w16(d),b(a)      spec: 0xEE */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"OUTb %s,%s",CPUregsN[2][2],CPUregsN[1][0]);
        break;
    case 0xEF: /* EFh OUTd w16(d),w(a)      spec: 0xEF */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"OUTd %s,%s",CPUregsN[2][2],CPUregsN[4][0]);
        break;
    case 0xF0: /* F0h LOCK       spec: 0xF0 prefix */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"LOCK ");
        goto _x86decode_after_prefix_code32_addr32;
    case 0xF1: /* F1h INT1       spec: 0xF1 */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"INT1");
        break;
    case 0xF2: /* F2h REPNZ       spec: 0xF2 prefix */
        /* Mandatory prefix detection */
        op=IPFB();
        if (op == 0x0F) {
/* Opcodes starting with F2h 0Fh */
            op=IPFB();
            _x86decode_begin_code32_addr32_opcode_parse_F20F:
            switch (op) {
                /* opcode F2h 0Fh 00h  not defined */
                /* opcode F2h 0Fh 01h  not defined */
                /* opcode F2h 0Fh 02h  not defined */
                /* opcode F2h 0Fh 03h  not defined */
                /* opcode F2h 0Fh 04h  not defined */
                /* opcode F2h 0Fh 05h  not defined */
                /* opcode F2h 0Fh 06h  not defined */
                /* opcode F2h 0Fh 07h  not defined */
                /* opcode F2h 0Fh 08h  not defined */
                /* opcode F2h 0Fh 09h  not defined */
                /* opcode F2h 0Fh 0Ah  not defined */
                /* opcode F2h 0Fh 0Bh  not defined */
                /* opcode F2h 0Fh 0Ch  not defined */
                /* opcode F2h 0Fh 0Dh  not defined */
                /* opcode F2h 0Fh 0Eh  not defined */
                /* opcode F2h 0Fh 0Fh  not defined */
                case 0x10: /* F2h 0Fh 10h MOVSD sse(reg),sse(r/m)      spec: 0x0F 0x10 mod/reg/rm mprefix(0xF2) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVSD XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x11: /* F2h 0Fh 11h MOVSD sse(r/m),sse(reg)      spec: 0x0F 0x11 mod/reg/rm mprefix(0xF2) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVSD %s,XMM%u",IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""),mrm.reg());
                    break;
                case 0x12: /* F2h 0Fh 12h MOVDDUP sse(reg),sse(r/m)      spec: 0x0F 0x12 mod/reg/rm mprefix(0xF2) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVDDUP XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                /* opcode F2h 0Fh 13h  not defined */
                /* opcode F2h 0Fh 14h  not defined */
                /* opcode F2h 0Fh 15h  not defined */
                /* opcode F2h 0Fh 16h  not defined */
                /* opcode F2h 0Fh 17h  not defined */
                /* opcode F2h 0Fh 18h  not defined */
                /* opcode F2h 0Fh 19h  not defined */
                /* opcode F2h 0Fh 1Ah  not defined */
                /* opcode F2h 0Fh 1Bh  not defined */
                /* opcode F2h 0Fh 1Ch  not defined */
                /* opcode F2h 0Fh 1Dh  not defined */
                /* opcode F2h 0Fh 1Eh  not defined */
                /* opcode F2h 0Fh 1Fh  not defined */
                /* opcode F2h 0Fh 20h  not defined */
                /* opcode F2h 0Fh 21h  not defined */
                /* opcode F2h 0Fh 22h  not defined */
                /* opcode F2h 0Fh 23h  not defined */
                /* opcode F2h 0Fh 24h  not defined */
                /* opcode F2h 0Fh 25h  not defined */
                /* opcode F2h 0Fh 26h  not defined */
                /* opcode F2h 0Fh 27h  not defined */
                /* opcode F2h 0Fh 28h  not defined */
                /* opcode F2h 0Fh 29h  not defined */
                case 0x2A: /* F2h 0Fh 2Ah CVTSI2SD sse(reg),w32(r/m)      spec: 0x0F 0x2A mod/reg/rm mprefix(0xF2) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CVTSI2SD XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,4,RC_REG,"w32"));
                    break;
                /* opcode F2h 0Fh 2Bh  not defined */
                case 0x2C: /* F2h 0Fh 2Ch CVTTSD2SI w32(reg),sse(r/m)      spec: 0x0F 0x2C mod/reg/rm mprefix(0xF2) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CVTTSD2SI %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x2D: /* F2h 0Fh 2Dh CVTSD2SI w32(reg),sse(r/m)      spec: 0x0F 0x2D mod/reg/rm mprefix(0xF2) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CVTSD2SI %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                /* opcode F2h 0Fh 2Eh  not defined */
                /* opcode F2h 0Fh 2Fh  not defined */
                /* opcode F2h 0Fh 30h  not defined */
                /* opcode F2h 0Fh 31h  not defined */
                /* opcode F2h 0Fh 32h  not defined */
                /* opcode F2h 0Fh 33h  not defined */
                /* opcode F2h 0Fh 34h  not defined */
                /* opcode F2h 0Fh 35h  not defined */
                /* opcode F2h 0Fh 36h  not defined */
                /* opcode F2h 0Fh 37h  not defined */
                case 0x38: /* F2h 0Fh 38h        spec:  */
/* Opcodes starting with F2h 0Fh 38h */
                    op=IPFB();
                    _x86decode_begin_code32_addr32_opcode_parse_F20F38:
                    switch (op) {
                        /* opcode F2h 0Fh 38h 00h  not defined */
                        /* opcode F2h 0Fh 38h 01h  not defined */
                        /* opcode F2h 0Fh 38h 02h  not defined */
                        /* opcode F2h 0Fh 38h 03h  not defined */
                        /* opcode F2h 0Fh 38h 04h  not defined */
                        /* opcode F2h 0Fh 38h 05h  not defined */
                        /* opcode F2h 0Fh 38h 06h  not defined */
                        /* opcode F2h 0Fh 38h 07h  not defined */
                        /* opcode F2h 0Fh 38h 08h  not defined */
                        /* opcode F2h 0Fh 38h 09h  not defined */
                        /* opcode F2h 0Fh 38h 0Ah  not defined */
                        /* opcode F2h 0Fh 38h 0Bh  not defined */
                        /* opcode F2h 0Fh 38h 0Ch  not defined */
                        /* opcode F2h 0Fh 38h 0Dh  not defined */
                        /* opcode F2h 0Fh 38h 0Eh  not defined */
                        /* opcode F2h 0Fh 38h 0Fh  not defined */
                        /* opcode F2h 0Fh 38h 10h  not defined */
                        /* opcode F2h 0Fh 38h 11h  not defined */
                        /* opcode F2h 0Fh 38h 12h  not defined */
                        /* opcode F2h 0Fh 38h 13h  not defined */
                        /* opcode F2h 0Fh 38h 14h  not defined */
                        /* opcode F2h 0Fh 38h 15h  not defined */
                        /* opcode F2h 0Fh 38h 16h  not defined */
                        /* opcode F2h 0Fh 38h 17h  not defined */
                        /* opcode F2h 0Fh 38h 18h  not defined */
                        /* opcode F2h 0Fh 38h 19h  not defined */
                        /* opcode F2h 0Fh 38h 1Ah  not defined */
                        /* opcode F2h 0Fh 38h 1Bh  not defined */
                        /* opcode F2h 0Fh 38h 1Ch  not defined */
                        /* opcode F2h 0Fh 38h 1Dh  not defined */
                        /* opcode F2h 0Fh 38h 1Eh  not defined */
                        /* opcode F2h 0Fh 38h 1Fh  not defined */
                        /* opcode F2h 0Fh 38h 20h  not defined */
                        /* opcode F2h 0Fh 38h 21h  not defined */
                        /* opcode F2h 0Fh 38h 22h  not defined */
                        /* opcode F2h 0Fh 38h 23h  not defined */
                        /* opcode F2h 0Fh 38h 24h  not defined */
                        /* opcode F2h 0Fh 38h 25h  not defined */
                        /* opcode F2h 0Fh 38h 26h  not defined */
                        /* opcode F2h 0Fh 38h 27h  not defined */
                        /* opcode F2h 0Fh 38h 28h  not defined */
                        /* opcode F2h 0Fh 38h 29h  not defined */
                        /* opcode F2h 0Fh 38h 2Ah  not defined */
                        /* opcode F2h 0Fh 38h 2Bh  not defined */
                        /* opcode F2h 0Fh 38h 2Ch  not defined */
                        /* opcode F2h 0Fh 38h 2Dh  not defined */
                        /* opcode F2h 0Fh 38h 2Eh  not defined */
                        /* opcode F2h 0Fh 38h 2Fh  not defined */
                        /* opcode F2h 0Fh 38h 30h  not defined */
                        /* opcode F2h 0Fh 38h 31h  not defined */
                        /* opcode F2h 0Fh 38h 32h  not defined */
                        /* opcode F2h 0Fh 38h 33h  not defined */
                        /* opcode F2h 0Fh 38h 34h  not defined */
                        /* opcode F2h 0Fh 38h 35h  not defined */
                        /* opcode F2h 0Fh 38h 36h  not defined */
                        /* opcode F2h 0Fh 38h 37h  not defined */
                        /* opcode F2h 0Fh 38h 38h  not defined */
                        /* opcode F2h 0Fh 38h 39h  not defined */
                        /* opcode F2h 0Fh 38h 3Ah  not defined */
                        /* opcode F2h 0Fh 38h 3Bh  not defined */
                        /* opcode F2h 0Fh 38h 3Ch  not defined */
                        /* opcode F2h 0Fh 38h 3Dh  not defined */
                        /* opcode F2h 0Fh 38h 3Eh  not defined */
                        /* opcode F2h 0Fh 38h 3Fh  not defined */
                        /* opcode F2h 0Fh 38h 40h  not defined */
                        /* opcode F2h 0Fh 38h 41h  not defined */
                        /* opcode F2h 0Fh 38h 42h  not defined */
                        /* opcode F2h 0Fh 38h 43h  not defined */
                        /* opcode F2h 0Fh 38h 44h  not defined */
                        /* opcode F2h 0Fh 38h 45h  not defined */
                        /* opcode F2h 0Fh 38h 46h  not defined */
                        /* opcode F2h 0Fh 38h 47h  not defined */
                        /* opcode F2h 0Fh 38h 48h  not defined */
                        /* opcode F2h 0Fh 38h 49h  not defined */
                        /* opcode F2h 0Fh 38h 4Ah  not defined */
                        /* opcode F2h 0Fh 38h 4Bh  not defined */
                        /* opcode F2h 0Fh 38h 4Ch  not defined */
                        /* opcode F2h 0Fh 38h 4Dh  not defined */
                        /* opcode F2h 0Fh 38h 4Eh  not defined */
                        /* opcode F2h 0Fh 38h 4Fh  not defined */
                        /* opcode F2h 0Fh 38h 50h  not defined */
                        /* opcode F2h 0Fh 38h 51h  not defined */
                        /* opcode F2h 0Fh 38h 52h  not defined */
                        /* opcode F2h 0Fh 38h 53h  not defined */
                        /* opcode F2h 0Fh 38h 54h  not defined */
                        /* opcode F2h 0Fh 38h 55h  not defined */
                        /* opcode F2h 0Fh 38h 56h  not defined */
                        /* opcode F2h 0Fh 38h 57h  not defined */
                        /* opcode F2h 0Fh 38h 58h  not defined */
                        /* opcode F2h 0Fh 38h 59h  not defined */
                        /* opcode F2h 0Fh 38h 5Ah  not defined */
                        /* opcode F2h 0Fh 38h 5Bh  not defined */
                        /* opcode F2h 0Fh 38h 5Ch  not defined */
                        /* opcode F2h 0Fh 38h 5Dh  not defined */
                        /* opcode F2h 0Fh 38h 5Eh  not defined */
                        /* opcode F2h 0Fh 38h 5Fh  not defined */
                        /* opcode F2h 0Fh 38h 60h  not defined */
                        /* opcode F2h 0Fh 38h 61h  not defined */
                        /* opcode F2h 0Fh 38h 62h  not defined */
                        /* opcode F2h 0Fh 38h 63h  not defined */
                        /* opcode F2h 0Fh 38h 64h  not defined */
                        /* opcode F2h 0Fh 38h 65h  not defined */
                        /* opcode F2h 0Fh 38h 66h  not defined */
                        /* opcode F2h 0Fh 38h 67h  not defined */
                        /* opcode F2h 0Fh 38h 68h  not defined */
                        /* opcode F2h 0Fh 38h 69h  not defined */
                        /* opcode F2h 0Fh 38h 6Ah  not defined */
                        /* opcode F2h 0Fh 38h 6Bh  not defined */
                        /* opcode F2h 0Fh 38h 6Ch  not defined */
                        /* opcode F2h 0Fh 38h 6Dh  not defined */
                        /* opcode F2h 0Fh 38h 6Eh  not defined */
                        /* opcode F2h 0Fh 38h 6Fh  not defined */
                        /* opcode F2h 0Fh 38h 70h  not defined */
                        /* opcode F2h 0Fh 38h 71h  not defined */
                        /* opcode F2h 0Fh 38h 72h  not defined */
                        /* opcode F2h 0Fh 38h 73h  not defined */
                        /* opcode F2h 0Fh 38h 74h  not defined */
                        /* opcode F2h 0Fh 38h 75h  not defined */
                        /* opcode F2h 0Fh 38h 76h  not defined */
                        /* opcode F2h 0Fh 38h 77h  not defined */
                        /* opcode F2h 0Fh 38h 78h  not defined */
                        /* opcode F2h 0Fh 38h 79h  not defined */
                        /* opcode F2h 0Fh 38h 7Ah  not defined */
                        /* opcode F2h 0Fh 38h 7Bh  not defined */
                        /* opcode F2h 0Fh 38h 7Ch  not defined */
                        /* opcode F2h 0Fh 38h 7Dh  not defined */
                        /* opcode F2h 0Fh 38h 7Eh  not defined */
                        /* opcode F2h 0Fh 38h 7Fh  not defined */
                        /* opcode F2h 0Fh 38h 80h  not defined */
                        /* opcode F2h 0Fh 38h 81h  not defined */
                        /* opcode F2h 0Fh 38h 82h  not defined */
                        /* opcode F2h 0Fh 38h 83h  not defined */
                        /* opcode F2h 0Fh 38h 84h  not defined */
                        /* opcode F2h 0Fh 38h 85h  not defined */
                        /* opcode F2h 0Fh 38h 86h  not defined */
                        /* opcode F2h 0Fh 38h 87h  not defined */
                        /* opcode F2h 0Fh 38h 88h  not defined */
                        /* opcode F2h 0Fh 38h 89h  not defined */
                        /* opcode F2h 0Fh 38h 8Ah  not defined */
                        /* opcode F2h 0Fh 38h 8Bh  not defined */
                        /* opcode F2h 0Fh 38h 8Ch  not defined */
                        /* opcode F2h 0Fh 38h 8Dh  not defined */
                        /* opcode F2h 0Fh 38h 8Eh  not defined */
                        /* opcode F2h 0Fh 38h 8Fh  not defined */
                        /* opcode F2h 0Fh 38h 90h  not defined */
                        /* opcode F2h 0Fh 38h 91h  not defined */
                        /* opcode F2h 0Fh 38h 92h  not defined */
                        /* opcode F2h 0Fh 38h 93h  not defined */
                        /* opcode F2h 0Fh 38h 94h  not defined */
                        /* opcode F2h 0Fh 38h 95h  not defined */
                        /* opcode F2h 0Fh 38h 96h  not defined */
                        /* opcode F2h 0Fh 38h 97h  not defined */
                        /* opcode F2h 0Fh 38h 98h  not defined */
                        /* opcode F2h 0Fh 38h 99h  not defined */
                        /* opcode F2h 0Fh 38h 9Ah  not defined */
                        /* opcode F2h 0Fh 38h 9Bh  not defined */
                        /* opcode F2h 0Fh 38h 9Ch  not defined */
                        /* opcode F2h 0Fh 38h 9Dh  not defined */
                        /* opcode F2h 0Fh 38h 9Eh  not defined */
                        /* opcode F2h 0Fh 38h 9Fh  not defined */
                        /* opcode F2h 0Fh 38h A0h  not defined */
                        /* opcode F2h 0Fh 38h A1h  not defined */
                        /* opcode F2h 0Fh 38h A2h  not defined */
                        /* opcode F2h 0Fh 38h A3h  not defined */
                        /* opcode F2h 0Fh 38h A4h  not defined */
                        /* opcode F2h 0Fh 38h A5h  not defined */
                        /* opcode F2h 0Fh 38h A6h  not defined */
                        /* opcode F2h 0Fh 38h A7h  not defined */
                        /* opcode F2h 0Fh 38h A8h  not defined */
                        /* opcode F2h 0Fh 38h A9h  not defined */
                        /* opcode F2h 0Fh 38h AAh  not defined */
                        /* opcode F2h 0Fh 38h ABh  not defined */
                        /* opcode F2h 0Fh 38h ACh  not defined */
                        /* opcode F2h 0Fh 38h ADh  not defined */
                        /* opcode F2h 0Fh 38h AEh  not defined */
                        /* opcode F2h 0Fh 38h AFh  not defined */
                        /* opcode F2h 0Fh 38h B0h  not defined */
                        /* opcode F2h 0Fh 38h B1h  not defined */
                        /* opcode F2h 0Fh 38h B2h  not defined */
                        /* opcode F2h 0Fh 38h B3h  not defined */
                        /* opcode F2h 0Fh 38h B4h  not defined */
                        /* opcode F2h 0Fh 38h B5h  not defined */
                        /* opcode F2h 0Fh 38h B6h  not defined */
                        /* opcode F2h 0Fh 38h B7h  not defined */
                        /* opcode F2h 0Fh 38h B8h  not defined */
                        /* opcode F2h 0Fh 38h B9h  not defined */
                        /* opcode F2h 0Fh 38h BAh  not defined */
                        /* opcode F2h 0Fh 38h BBh  not defined */
                        /* opcode F2h 0Fh 38h BCh  not defined */
                        /* opcode F2h 0Fh 38h BDh  not defined */
                        /* opcode F2h 0Fh 38h BEh  not defined */
                        /* opcode F2h 0Fh 38h BFh  not defined */
                        /* opcode F2h 0Fh 38h C0h  not defined */
                        /* opcode F2h 0Fh 38h C1h  not defined */
                        /* opcode F2h 0Fh 38h C2h  not defined */
                        /* opcode F2h 0Fh 38h C3h  not defined */
                        /* opcode F2h 0Fh 38h C4h  not defined */
                        /* opcode F2h 0Fh 38h C5h  not defined */
                        /* opcode F2h 0Fh 38h C6h  not defined */
                        /* opcode F2h 0Fh 38h C7h  not defined */
                        /* opcode F2h 0Fh 38h C8h  not defined */
                        /* opcode F2h 0Fh 38h C9h  not defined */
                        /* opcode F2h 0Fh 38h CAh  not defined */
                        /* opcode F2h 0Fh 38h CBh  not defined */
                        /* opcode F2h 0Fh 38h CCh  not defined */
                        /* opcode F2h 0Fh 38h CDh  not defined */
                        /* opcode F2h 0Fh 38h CEh  not defined */
                        /* opcode F2h 0Fh 38h CFh  not defined */
                        /* opcode F2h 0Fh 38h D0h  not defined */
                        /* opcode F2h 0Fh 38h D1h  not defined */
                        /* opcode F2h 0Fh 38h D2h  not defined */
                        /* opcode F2h 0Fh 38h D3h  not defined */
                        /* opcode F2h 0Fh 38h D4h  not defined */
                        /* opcode F2h 0Fh 38h D5h  not defined */
                        /* opcode F2h 0Fh 38h D6h  not defined */
                        /* opcode F2h 0Fh 38h D7h  not defined */
                        /* opcode F2h 0Fh 38h D8h  not defined */
                        /* opcode F2h 0Fh 38h D9h  not defined */
                        /* opcode F2h 0Fh 38h DAh  not defined */
                        /* opcode F2h 0Fh 38h DBh  not defined */
                        /* opcode F2h 0Fh 38h DCh  not defined */
                        /* opcode F2h 0Fh 38h DDh  not defined */
                        /* opcode F2h 0Fh 38h DEh  not defined */
                        /* opcode F2h 0Fh 38h DFh  not defined */
                        /* opcode F2h 0Fh 38h E0h  not defined */
                        /* opcode F2h 0Fh 38h E1h  not defined */
                        /* opcode F2h 0Fh 38h E2h  not defined */
                        /* opcode F2h 0Fh 38h E3h  not defined */
                        /* opcode F2h 0Fh 38h E4h  not defined */
                        /* opcode F2h 0Fh 38h E5h  not defined */
                        /* opcode F2h 0Fh 38h E6h  not defined */
                        /* opcode F2h 0Fh 38h E7h  not defined */
                        /* opcode F2h 0Fh 38h E8h  not defined */
                        /* opcode F2h 0Fh 38h E9h  not defined */
                        /* opcode F2h 0Fh 38h EAh  not defined */
                        /* opcode F2h 0Fh 38h EBh  not defined */
                        /* opcode F2h 0Fh 38h ECh  not defined */
                        /* opcode F2h 0Fh 38h EDh  not defined */
                        /* opcode F2h 0Fh 38h EEh  not defined */
                        /* opcode F2h 0Fh 38h EFh  not defined */
                        case 0xF0: /* F2h 0Fh 38h F0h CRC32 w32(reg),b(r/m)      spec: 0x0F 0x38 0xF0 mod/reg/rm mprefix(0xF2) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CRC32 %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                            break;
                        case 0xF1: /* F2h 0Fh 38h F1h CRC32 w32(reg),w(r/m)      spec: 0x0F 0x38 0xF1 mod/reg/rm mprefix(0xF2) */
                            IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CRC32 %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                            break;
                        /* opcode F2h 0Fh 38h F2h  not defined */
                        /* opcode F2h 0Fh 38h F3h  not defined */
                        /* opcode F2h 0Fh 38h F4h  not defined */
                        /* opcode F2h 0Fh 38h F5h  not defined */
                        /* opcode F2h 0Fh 38h F6h  not defined */
                        /* opcode F2h 0Fh 38h F7h  not defined */
                        /* opcode F2h 0Fh 38h F8h  not defined */
                        /* opcode F2h 0Fh 38h F9h  not defined */
                        /* opcode F2h 0Fh 38h FAh  not defined */
                        /* opcode F2h 0Fh 38h FBh  not defined */
                        /* opcode F2h 0Fh 38h FCh  not defined */
                        /* opcode F2h 0Fh 38h FDh  not defined */
                        /* opcode F2h 0Fh 38h FEh  not defined */
                        /* opcode F2h 0Fh 38h FFh  not defined */
                        default:
                            goto _x86decode_begin_code32_addr32_opcode_parse_0F38; /* Fall through to normal 0x0F 0x38 opcode handling */
                    };
/* End of opcodes starting with F2h 0Fh 38h */
                    break;
                /* opcode F2h 0Fh 39h  not defined */
                /* opcode F2h 0Fh 3Ah  not defined */
                /* opcode F2h 0Fh 3Bh  not defined */
                /* opcode F2h 0Fh 3Ch  not defined */
                /* opcode F2h 0Fh 3Dh  not defined */
                /* opcode F2h 0Fh 3Eh  not defined */
                /* opcode F2h 0Fh 3Fh  not defined */
                /* opcode F2h 0Fh 40h  not defined */
                /* opcode F2h 0Fh 41h  not defined */
                /* opcode F2h 0Fh 42h  not defined */
                /* opcode F2h 0Fh 43h  not defined */
                /* opcode F2h 0Fh 44h  not defined */
                /* opcode F2h 0Fh 45h  not defined */
                /* opcode F2h 0Fh 46h  not defined */
                /* opcode F2h 0Fh 47h  not defined */
                /* opcode F2h 0Fh 48h  not defined */
                /* opcode F2h 0Fh 49h  not defined */
                /* opcode F2h 0Fh 4Ah  not defined */
                /* opcode F2h 0Fh 4Bh  not defined */
                /* opcode F2h 0Fh 4Ch  not defined */
                /* opcode F2h 0Fh 4Dh  not defined */
                /* opcode F2h 0Fh 4Eh  not defined */
                /* opcode F2h 0Fh 4Fh  not defined */
                /* opcode F2h 0Fh 50h  not defined */
                case 0x51: /* F2h 0Fh 51h SQRTSD sse(reg),sse(r/m)      spec: 0x0F 0x51 mod/reg/rm mprefix(0xF2) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SQRTSD XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                /* opcode F2h 0Fh 52h  not defined */
                /* opcode F2h 0Fh 53h  not defined */
                /* opcode F2h 0Fh 54h  not defined */
                /* opcode F2h 0Fh 55h  not defined */
                /* opcode F2h 0Fh 56h  not defined */
                /* opcode F2h 0Fh 57h  not defined */
                case 0x58: /* F2h 0Fh 58h ADDSD sse(reg),sse(r/m)      spec: 0x0F 0x58 mod/reg/rm mprefix(0xF2) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ADDSD XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x59: /* F2h 0Fh 59h MULSD sse(reg),sse(r/m)      spec: 0x0F 0x59 mod/reg/rm mprefix(0xF2) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MULSD XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x5A: /* F2h 0Fh 5Ah CVTSD2SS sse(reg),sse(r/m)      spec: 0x0F 0x5A mod/reg/rm mprefix(0xF2) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CVTSD2SS XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                /* opcode F2h 0Fh 5Bh  not defined */
                case 0x5C: /* F2h 0Fh 5Ch SUBSD sse(reg),sse(r/m)      spec: 0x0F 0x5C mod/reg/rm mprefix(0xF2) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SUBSD XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x5D: /* F2h 0Fh 5Dh MINSD sse(reg),sse(r/m)      spec: 0x0F 0x5D mod/reg/rm mprefix(0xF2) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MINSD XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x5E: /* F2h 0Fh 5Eh DIVSD sse(reg),sse(r/m)      spec: 0x0F 0x5E mod/reg/rm mprefix(0xF2) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"DIVSD XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x5F: /* F2h 0Fh 5Fh MAXSD sse(reg),sse(r/m)      spec: 0x0F 0x5F mod/reg/rm mprefix(0xF2) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MAXSD XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                /* opcode F2h 0Fh 60h  not defined */
                /* opcode F2h 0Fh 61h  not defined */
                /* opcode F2h 0Fh 62h  not defined */
                /* opcode F2h 0Fh 63h  not defined */
                /* opcode F2h 0Fh 64h  not defined */
                /* opcode F2h 0Fh 65h  not defined */
                /* opcode F2h 0Fh 66h  not defined */
                /* opcode F2h 0Fh 67h  not defined */
                /* opcode F2h 0Fh 68h  not defined */
                /* opcode F2h 0Fh 69h  not defined */
                /* opcode F2h 0Fh 6Ah  not defined */
                /* opcode F2h 0Fh 6Bh  not defined */
                /* opcode F2h 0Fh 6Ch  not defined */
                /* opcode F2h 0Fh 6Dh  not defined */
                /* opcode F2h 0Fh 6Eh  not defined */
                /* opcode F2h 0Fh 6Fh  not defined */
                case 0x70: /* F2h 0Fh 70h PSHUFLW sse(reg),sse(r/m),i      spec: 0x0F 0x70 mod/reg/rm ib mprefix(0xF2) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    imm=IPFB();
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSHUFLW XMM%u,%s,0x%02lX",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""),(unsigned long)((uint32_t)imm));
                    break;
                /* opcode F2h 0Fh 71h  not defined */
                /* opcode F2h 0Fh 72h  not defined */
                /* opcode F2h 0Fh 73h  not defined */
                /* opcode F2h 0Fh 74h  not defined */
                /* opcode F2h 0Fh 75h  not defined */
                /* opcode F2h 0Fh 76h  not defined */
                /* opcode F2h 0Fh 77h  not defined */
                /* opcode F2h 0Fh 78h  not defined */
                /* opcode F2h 0Fh 79h  not defined */
                /* opcode F2h 0Fh 7Ah  not defined */
                /* opcode F2h 0Fh 7Bh  not defined */
                case 0x7C: /* F2h 0Fh 7Ch HADDPS sse(reg),sse(r/m)      spec: 0x0F 0x7C mod/reg/rm mprefix(0xF2) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"HADDPS XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x7D: /* F2h 0Fh 7Dh HSUBPS sse(reg),sse(r/m)      spec: 0x0F 0x7D mod/reg/rm mprefix(0xF2) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"HSUBPS XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                /* opcode F2h 0Fh 7Eh  not defined */
                /* opcode F2h 0Fh 7Fh  not defined */
                /* opcode F2h 0Fh 80h  not defined */
                /* opcode F2h 0Fh 81h  not defined */
                /* opcode F2h 0Fh 82h  not defined */
                /* opcode F2h 0Fh 83h  not defined */
                /* opcode F2h 0Fh 84h  not defined */
                /* opcode F2h 0Fh 85h  not defined */
                /* opcode F2h 0Fh 86h  not defined */
                /* opcode F2h 0Fh 87h  not defined */
                /* opcode F2h 0Fh 88h  not defined */
                /* opcode F2h 0Fh 89h  not defined */
                /* opcode F2h 0Fh 8Ah  not defined */
                /* opcode F2h 0Fh 8Bh  not defined */
                /* opcode F2h 0Fh 8Ch  not defined */
                /* opcode F2h 0Fh 8Dh  not defined */
                /* opcode F2h 0Fh 8Eh  not defined */
                /* opcode F2h 0Fh 8Fh  not defined */
                /* opcode F2h 0Fh 90h  not defined */
                /* opcode F2h 0Fh 91h  not defined */
                /* opcode F2h 0Fh 92h  not defined */
                /* opcode F2h 0Fh 93h  not defined */
                /* opcode F2h 0Fh 94h  not defined */
                /* opcode F2h 0Fh 95h  not defined */
                /* opcode F2h 0Fh 96h  not defined */
                /* opcode F2h 0Fh 97h  not defined */
                /* opcode F2h 0Fh 98h  not defined */
                /* opcode F2h 0Fh 99h  not defined */
                /* opcode F2h 0Fh 9Ah  not defined */
                /* opcode F2h 0Fh 9Bh  not defined */
                /* opcode F2h 0Fh 9Ch  not defined */
                /* opcode F2h 0Fh 9Dh  not defined */
                /* opcode F2h 0Fh 9Eh  not defined */
                /* opcode F2h 0Fh 9Fh  not defined */
                /* opcode F2h 0Fh A0h  not defined */
                /* opcode F2h 0Fh A1h  not defined */
                /* opcode F2h 0Fh A2h  not defined */
                /* opcode F2h 0Fh A3h  not defined */
                /* opcode F2h 0Fh A4h  not defined */
                /* opcode F2h 0Fh A5h  not defined */
                /* opcode F2h 0Fh A6h  not defined */
                /* opcode F2h 0Fh A7h  not defined */
                /* opcode F2h 0Fh A8h  not defined */
                /* opcode F2h 0Fh A9h  not defined */
                /* opcode F2h 0Fh AAh  not defined */
                /* opcode F2h 0Fh ABh  not defined */
                /* opcode F2h 0Fh ACh  not defined */
                /* opcode F2h 0Fh ADh  not defined */
                /* opcode F2h 0Fh AEh  not defined */
                /* opcode F2h 0Fh AFh  not defined */
                /* opcode F2h 0Fh B0h  not defined */
                /* opcode F2h 0Fh B1h  not defined */
                /* opcode F2h 0Fh B2h  not defined */
                /* opcode F2h 0Fh B3h  not defined */
                /* opcode F2h 0Fh B4h  not defined */
                /* opcode F2h 0Fh B5h  not defined */
                /* opcode F2h 0Fh B6h  not defined */
                /* opcode F2h 0Fh B7h  not defined */
                /* opcode F2h 0Fh B8h  not defined */
                /* opcode F2h 0Fh B9h  not defined */
                /* opcode F2h 0Fh BAh  not defined */
                /* opcode F2h 0Fh BBh  not defined */
                /* opcode F2h 0Fh BCh  not defined */
                /* opcode F2h 0Fh BDh  not defined */
                /* opcode F2h 0Fh BEh  not defined */
                /* opcode F2h 0Fh BFh  not defined */
                /* opcode F2h 0Fh C0h  not defined */
                /* opcode F2h 0Fh C1h  not defined */
                case 0xC2: /* F2h 0Fh C2h CMPSD sse(reg),sse(r/m),i      spec: 0x0F 0xC2 mod/reg/rm ib mprefix(0xF2) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    imm=IPFB();
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CMPSD XMM%u,%s,0x%02lX",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""),(unsigned long)((uint32_t)imm));
                    break;
                /* opcode F2h 0Fh C3h  not defined */
                /* opcode F2h 0Fh C4h  not defined */
                /* opcode F2h 0Fh C5h  not defined */
                /* opcode F2h 0Fh C6h  not defined */
                /* opcode F2h 0Fh C7h  not defined */
                /* opcode F2h 0Fh C8h  not defined */
                /* opcode F2h 0Fh C9h  not defined */
                /* opcode F2h 0Fh CAh  not defined */
                /* opcode F2h 0Fh CBh  not defined */
                /* opcode F2h 0Fh CCh  not defined */
                /* opcode F2h 0Fh CDh  not defined */
                /* opcode F2h 0Fh CEh  not defined */
                /* opcode F2h 0Fh CFh  not defined */
                case 0xD0: /* F2h 0Fh D0h ADDSUBPS sse(reg),sse(r/m)      spec: 0x0F 0xD0 mod/reg/rm mprefix(0xF2) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ADDSUBPS XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                /* opcode F2h 0Fh D1h  not defined */
                /* opcode F2h 0Fh D2h  not defined */
                /* opcode F2h 0Fh D3h  not defined */
                /* opcode F2h 0Fh D4h  not defined */
                /* opcode F2h 0Fh D5h  not defined */
                case 0xD6: /* F2h 0Fh D6h        spec:  */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    _x86decode_begin_code32_addr32_opcode_parse_F20FD6:
/* Opcodes starting with F2h 0Fh D6h */
                    switch (mrm.byte) {
                        /* opcode F2h 0Fh D6h 00h  not defined */
                        /* opcode F2h 0Fh D6h 01h  not defined */
                        /* opcode F2h 0Fh D6h 02h  not defined */
                        /* opcode F2h 0Fh D6h 03h  not defined */
                        /* opcode F2h 0Fh D6h 04h  not defined */
                        /* opcode F2h 0Fh D6h 05h  not defined */
                        /* opcode F2h 0Fh D6h 06h  not defined */
                        /* opcode F2h 0Fh D6h 07h  not defined */
                        /* opcode F2h 0Fh D6h 08h  not defined */
                        /* opcode F2h 0Fh D6h 09h  not defined */
                        /* opcode F2h 0Fh D6h 0Ah  not defined */
                        /* opcode F2h 0Fh D6h 0Bh  not defined */
                        /* opcode F2h 0Fh D6h 0Ch  not defined */
                        /* opcode F2h 0Fh D6h 0Dh  not defined */
                        /* opcode F2h 0Fh D6h 0Eh  not defined */
                        /* opcode F2h 0Fh D6h 0Fh  not defined */
                        /* opcode F2h 0Fh D6h 10h  not defined */
                        /* opcode F2h 0Fh D6h 11h  not defined */
                        /* opcode F2h 0Fh D6h 12h  not defined */
                        /* opcode F2h 0Fh D6h 13h  not defined */
                        /* opcode F2h 0Fh D6h 14h  not defined */
                        /* opcode F2h 0Fh D6h 15h  not defined */
                        /* opcode F2h 0Fh D6h 16h  not defined */
                        /* opcode F2h 0Fh D6h 17h  not defined */
                        /* opcode F2h 0Fh D6h 18h  not defined */
                        /* opcode F2h 0Fh D6h 19h  not defined */
                        /* opcode F2h 0Fh D6h 1Ah  not defined */
                        /* opcode F2h 0Fh D6h 1Bh  not defined */
                        /* opcode F2h 0Fh D6h 1Ch  not defined */
                        /* opcode F2h 0Fh D6h 1Dh  not defined */
                        /* opcode F2h 0Fh D6h 1Eh  not defined */
                        /* opcode F2h 0Fh D6h 1Fh  not defined */
                        /* opcode F2h 0Fh D6h 20h  not defined */
                        /* opcode F2h 0Fh D6h 21h  not defined */
                        /* opcode F2h 0Fh D6h 22h  not defined */
                        /* opcode F2h 0Fh D6h 23h  not defined */
                        /* opcode F2h 0Fh D6h 24h  not defined */
                        /* opcode F2h 0Fh D6h 25h  not defined */
                        /* opcode F2h 0Fh D6h 26h  not defined */
                        /* opcode F2h 0Fh D6h 27h  not defined */
                        /* opcode F2h 0Fh D6h 28h  not defined */
                        /* opcode F2h 0Fh D6h 29h  not defined */
                        /* opcode F2h 0Fh D6h 2Ah  not defined */
                        /* opcode F2h 0Fh D6h 2Bh  not defined */
                        /* opcode F2h 0Fh D6h 2Ch  not defined */
                        /* opcode F2h 0Fh D6h 2Dh  not defined */
                        /* opcode F2h 0Fh D6h 2Eh  not defined */
                        /* opcode F2h 0Fh D6h 2Fh  not defined */
                        /* opcode F2h 0Fh D6h 30h  not defined */
                        /* opcode F2h 0Fh D6h 31h  not defined */
                        /* opcode F2h 0Fh D6h 32h  not defined */
                        /* opcode F2h 0Fh D6h 33h  not defined */
                        /* opcode F2h 0Fh D6h 34h  not defined */
                        /* opcode F2h 0Fh D6h 35h  not defined */
                        /* opcode F2h 0Fh D6h 36h  not defined */
                        /* opcode F2h 0Fh D6h 37h  not defined */
                        /* opcode F2h 0Fh D6h 38h  not defined */
                        /* opcode F2h 0Fh D6h 39h  not defined */
                        /* opcode F2h 0Fh D6h 3Ah  not defined */
                        /* opcode F2h 0Fh D6h 3Bh  not defined */
                        /* opcode F2h 0Fh D6h 3Ch  not defined */
                        /* opcode F2h 0Fh D6h 3Dh  not defined */
                        /* opcode F2h 0Fh D6h 3Eh  not defined */
                        /* opcode F2h 0Fh D6h 3Fh  not defined */
                        /* opcode F2h 0Fh D6h 40h  not defined */
                        /* opcode F2h 0Fh D6h 41h  not defined */
                        /* opcode F2h 0Fh D6h 42h  not defined */
                        /* opcode F2h 0Fh D6h 43h  not defined */
                        /* opcode F2h 0Fh D6h 44h  not defined */
                        /* opcode F2h 0Fh D6h 45h  not defined */
                        /* opcode F2h 0Fh D6h 46h  not defined */
                        /* opcode F2h 0Fh D6h 47h  not defined */
                        /* opcode F2h 0Fh D6h 48h  not defined */
                        /* opcode F2h 0Fh D6h 49h  not defined */
                        /* opcode F2h 0Fh D6h 4Ah  not defined */
                        /* opcode F2h 0Fh D6h 4Bh  not defined */
                        /* opcode F2h 0Fh D6h 4Ch  not defined */
                        /* opcode F2h 0Fh D6h 4Dh  not defined */
                        /* opcode F2h 0Fh D6h 4Eh  not defined */
                        /* opcode F2h 0Fh D6h 4Fh  not defined */
                        /* opcode F2h 0Fh D6h 50h  not defined */
                        /* opcode F2h 0Fh D6h 51h  not defined */
                        /* opcode F2h 0Fh D6h 52h  not defined */
                        /* opcode F2h 0Fh D6h 53h  not defined */
                        /* opcode F2h 0Fh D6h 54h  not defined */
                        /* opcode F2h 0Fh D6h 55h  not defined */
                        /* opcode F2h 0Fh D6h 56h  not defined */
                        /* opcode F2h 0Fh D6h 57h  not defined */
                        /* opcode F2h 0Fh D6h 58h  not defined */
                        /* opcode F2h 0Fh D6h 59h  not defined */
                        /* opcode F2h 0Fh D6h 5Ah  not defined */
                        /* opcode F2h 0Fh D6h 5Bh  not defined */
                        /* opcode F2h 0Fh D6h 5Ch  not defined */
                        /* opcode F2h 0Fh D6h 5Dh  not defined */
                        /* opcode F2h 0Fh D6h 5Eh  not defined */
                        /* opcode F2h 0Fh D6h 5Fh  not defined */
                        /* opcode F2h 0Fh D6h 60h  not defined */
                        /* opcode F2h 0Fh D6h 61h  not defined */
                        /* opcode F2h 0Fh D6h 62h  not defined */
                        /* opcode F2h 0Fh D6h 63h  not defined */
                        /* opcode F2h 0Fh D6h 64h  not defined */
                        /* opcode F2h 0Fh D6h 65h  not defined */
                        /* opcode F2h 0Fh D6h 66h  not defined */
                        /* opcode F2h 0Fh D6h 67h  not defined */
                        /* opcode F2h 0Fh D6h 68h  not defined */
                        /* opcode F2h 0Fh D6h 69h  not defined */
                        /* opcode F2h 0Fh D6h 6Ah  not defined */
                        /* opcode F2h 0Fh D6h 6Bh  not defined */
                        /* opcode F2h 0Fh D6h 6Ch  not defined */
                        /* opcode F2h 0Fh D6h 6Dh  not defined */
                        /* opcode F2h 0Fh D6h 6Eh  not defined */
                        /* opcode F2h 0Fh D6h 6Fh  not defined */
                        /* opcode F2h 0Fh D6h 70h  not defined */
                        /* opcode F2h 0Fh D6h 71h  not defined */
                        /* opcode F2h 0Fh D6h 72h  not defined */
                        /* opcode F2h 0Fh D6h 73h  not defined */
                        /* opcode F2h 0Fh D6h 74h  not defined */
                        /* opcode F2h 0Fh D6h 75h  not defined */
                        /* opcode F2h 0Fh D6h 76h  not defined */
                        /* opcode F2h 0Fh D6h 77h  not defined */
                        /* opcode F2h 0Fh D6h 78h  not defined */
                        /* opcode F2h 0Fh D6h 79h  not defined */
                        /* opcode F2h 0Fh D6h 7Ah  not defined */
                        /* opcode F2h 0Fh D6h 7Bh  not defined */
                        /* opcode F2h 0Fh D6h 7Ch  not defined */
                        /* opcode F2h 0Fh D6h 7Dh  not defined */
                        /* opcode F2h 0Fh D6h 7Eh  not defined */
                        /* opcode F2h 0Fh D6h 7Fh  not defined */
                        /* opcode F2h 0Fh D6h 80h  not defined */
                        /* opcode F2h 0Fh D6h 81h  not defined */
                        /* opcode F2h 0Fh D6h 82h  not defined */
                        /* opcode F2h 0Fh D6h 83h  not defined */
                        /* opcode F2h 0Fh D6h 84h  not defined */
                        /* opcode F2h 0Fh D6h 85h  not defined */
                        /* opcode F2h 0Fh D6h 86h  not defined */
                        /* opcode F2h 0Fh D6h 87h  not defined */
                        /* opcode F2h 0Fh D6h 88h  not defined */
                        /* opcode F2h 0Fh D6h 89h  not defined */
                        /* opcode F2h 0Fh D6h 8Ah  not defined */
                        /* opcode F2h 0Fh D6h 8Bh  not defined */
                        /* opcode F2h 0Fh D6h 8Ch  not defined */
                        /* opcode F2h 0Fh D6h 8Dh  not defined */
                        /* opcode F2h 0Fh D6h 8Eh  not defined */
                        /* opcode F2h 0Fh D6h 8Fh  not defined */
                        /* opcode F2h 0Fh D6h 90h  not defined */
                        /* opcode F2h 0Fh D6h 91h  not defined */
                        /* opcode F2h 0Fh D6h 92h  not defined */
                        /* opcode F2h 0Fh D6h 93h  not defined */
                        /* opcode F2h 0Fh D6h 94h  not defined */
                        /* opcode F2h 0Fh D6h 95h  not defined */
                        /* opcode F2h 0Fh D6h 96h  not defined */
                        /* opcode F2h 0Fh D6h 97h  not defined */
                        /* opcode F2h 0Fh D6h 98h  not defined */
                        /* opcode F2h 0Fh D6h 99h  not defined */
                        /* opcode F2h 0Fh D6h 9Ah  not defined */
                        /* opcode F2h 0Fh D6h 9Bh  not defined */
                        /* opcode F2h 0Fh D6h 9Ch  not defined */
                        /* opcode F2h 0Fh D6h 9Dh  not defined */
                        /* opcode F2h 0Fh D6h 9Eh  not defined */
                        /* opcode F2h 0Fh D6h 9Fh  not defined */
                        /* opcode F2h 0Fh D6h A0h  not defined */
                        /* opcode F2h 0Fh D6h A1h  not defined */
                        /* opcode F2h 0Fh D6h A2h  not defined */
                        /* opcode F2h 0Fh D6h A3h  not defined */
                        /* opcode F2h 0Fh D6h A4h  not defined */
                        /* opcode F2h 0Fh D6h A5h  not defined */
                        /* opcode F2h 0Fh D6h A6h  not defined */
                        /* opcode F2h 0Fh D6h A7h  not defined */
                        /* opcode F2h 0Fh D6h A8h  not defined */
                        /* opcode F2h 0Fh D6h A9h  not defined */
                        /* opcode F2h 0Fh D6h AAh  not defined */
                        /* opcode F2h 0Fh D6h ABh  not defined */
                        /* opcode F2h 0Fh D6h ACh  not defined */
                        /* opcode F2h 0Fh D6h ADh  not defined */
                        /* opcode F2h 0Fh D6h AEh  not defined */
                        /* opcode F2h 0Fh D6h AFh  not defined */
                        /* opcode F2h 0Fh D6h B0h  not defined */
                        /* opcode F2h 0Fh D6h B1h  not defined */
                        /* opcode F2h 0Fh D6h B2h  not defined */
                        /* opcode F2h 0Fh D6h B3h  not defined */
                        /* opcode F2h 0Fh D6h B4h  not defined */
                        /* opcode F2h 0Fh D6h B5h  not defined */
                        /* opcode F2h 0Fh D6h B6h  not defined */
                        /* opcode F2h 0Fh D6h B7h  not defined */
                        /* opcode F2h 0Fh D6h B8h  not defined */
                        /* opcode F2h 0Fh D6h B9h  not defined */
                        /* opcode F2h 0Fh D6h BAh  not defined */
                        /* opcode F2h 0Fh D6h BBh  not defined */
                        /* opcode F2h 0Fh D6h BCh  not defined */
                        /* opcode F2h 0Fh D6h BDh  not defined */
                        /* opcode F2h 0Fh D6h BEh  not defined */
                        /* opcode F2h 0Fh D6h BFh  not defined */
                        case 0xC0: /* F2h 0Fh D6h C0h MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=0 rm=0      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xC1: /* F2h 0Fh D6h C1h MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=0 rm=1      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xC2: /* F2h 0Fh D6h C2h MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=0 rm=2      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xC3: /* F2h 0Fh D6h C3h MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=0 rm=3      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xC4: /* F2h 0Fh D6h C4h MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=0 rm=4      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xC5: /* F2h 0Fh D6h C5h MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=0 rm=5      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xC6: /* F2h 0Fh D6h C6h MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=0 rm=6      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xC7: /* F2h 0Fh D6h C7h MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=0 rm=7      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xC8: /* F2h 0Fh D6h C8h MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=1 rm=0      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xC9: /* F2h 0Fh D6h C9h MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=1 rm=1      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xCA: /* F2h 0Fh D6h CAh MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=1 rm=2      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xCB: /* F2h 0Fh D6h CBh MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=1 rm=3      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xCC: /* F2h 0Fh D6h CCh MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=1 rm=4      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xCD: /* F2h 0Fh D6h CDh MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=1 rm=5      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xCE: /* F2h 0Fh D6h CEh MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=1 rm=6      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xCF: /* F2h 0Fh D6h CFh MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=1 rm=7      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xD0: /* F2h 0Fh D6h D0h MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=2 rm=0      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xD1: /* F2h 0Fh D6h D1h MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=2 rm=1      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xD2: /* F2h 0Fh D6h D2h MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=2 rm=2      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xD3: /* F2h 0Fh D6h D3h MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=2 rm=3      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xD4: /* F2h 0Fh D6h D4h MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=2 rm=4      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xD5: /* F2h 0Fh D6h D5h MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=2 rm=5      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xD6: /* F2h 0Fh D6h D6h MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=2 rm=6      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xD7: /* F2h 0Fh D6h D7h MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=2 rm=7      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xD8: /* F2h 0Fh D6h D8h MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=3 rm=0      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xD9: /* F2h 0Fh D6h D9h MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=3 rm=1      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xDA: /* F2h 0Fh D6h DAh MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=3 rm=2      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xDB: /* F2h 0Fh D6h DBh MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=3 rm=3      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xDC: /* F2h 0Fh D6h DCh MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=3 rm=4      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xDD: /* F2h 0Fh D6h DDh MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=3 rm=5      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xDE: /* F2h 0Fh D6h DEh MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=3 rm=6      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xDF: /* F2h 0Fh D6h DFh MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=3 rm=7      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xE0: /* F2h 0Fh D6h E0h MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=4 rm=0      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xE1: /* F2h 0Fh D6h E1h MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=4 rm=1      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xE2: /* F2h 0Fh D6h E2h MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=4 rm=2      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xE3: /* F2h 0Fh D6h E3h MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=4 rm=3      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xE4: /* F2h 0Fh D6h E4h MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=4 rm=4      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xE5: /* F2h 0Fh D6h E5h MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=4 rm=5      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xE6: /* F2h 0Fh D6h E6h MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=4 rm=6      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xE7: /* F2h 0Fh D6h E7h MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=4 rm=7      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xE8: /* F2h 0Fh D6h E8h MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=5 rm=0      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xE9: /* F2h 0Fh D6h E9h MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=5 rm=1      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xEA: /* F2h 0Fh D6h EAh MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=5 rm=2      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xEB: /* F2h 0Fh D6h EBh MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=5 rm=3      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xEC: /* F2h 0Fh D6h ECh MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=5 rm=4      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xED: /* F2h 0Fh D6h EDh MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=5 rm=5      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xEE: /* F2h 0Fh D6h EEh MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=5 rm=6      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xEF: /* F2h 0Fh D6h EFh MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=5 rm=7      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xF0: /* F2h 0Fh D6h F0h MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=6 rm=0      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xF1: /* F2h 0Fh D6h F1h MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=6 rm=1      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xF2: /* F2h 0Fh D6h F2h MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=6 rm=2      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xF3: /* F2h 0Fh D6h F3h MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=6 rm=3      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xF4: /* F2h 0Fh D6h F4h MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=6 rm=4      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xF5: /* F2h 0Fh D6h F5h MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=6 rm=5      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xF6: /* F2h 0Fh D6h F6h MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=6 rm=6      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xF7: /* F2h 0Fh D6h F7h MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=6 rm=7      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xF8: /* F2h 0Fh D6h F8h MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=7 rm=0      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xF9: /* F2h 0Fh D6h F9h MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=7 rm=1      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xFA: /* F2h 0Fh D6h FAh MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=7 rm=2      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xFB: /* F2h 0Fh D6h FBh MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=7 rm=3      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xFC: /* F2h 0Fh D6h FCh MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=7 rm=4      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xFD: /* F2h 0Fh D6h FDh MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=7 rm=5      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xFE: /* F2h 0Fh D6h FEh MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=7 rm=6      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                        case 0xFF: /* F2h 0Fh D6h FFh MOVDQ2Q mmx(reg),sse(r/m) mod=3 reg=7 rm=7      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF2) mod==3 */
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVDQ2Q MM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                            break;
                        default:
                            goto _x86decode_illegal_opcode; /* non-mandatory fallback does not exist */
                    };
/* End of opcodes starting with F2h 0Fh D6h */
                    break;
                /* opcode F2h 0Fh D7h  not defined */
                /* opcode F2h 0Fh D8h  not defined */
                /* opcode F2h 0Fh D9h  not defined */
                /* opcode F2h 0Fh DAh  not defined */
                /* opcode F2h 0Fh DBh  not defined */
                /* opcode F2h 0Fh DCh  not defined */
                /* opcode F2h 0Fh DDh  not defined */
                /* opcode F2h 0Fh DEh  not defined */
                /* opcode F2h 0Fh DFh  not defined */
                /* opcode F2h 0Fh E0h  not defined */
                /* opcode F2h 0Fh E1h  not defined */
                /* opcode F2h 0Fh E2h  not defined */
                /* opcode F2h 0Fh E3h  not defined */
                /* opcode F2h 0Fh E4h  not defined */
                /* opcode F2h 0Fh E5h  not defined */
                case 0xE6: /* F2h 0Fh E6h CVTPD2DQ sse(reg),sse(r/m)      spec: 0x0F 0xE6 mod/reg/rm mprefix(0xF2) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CVTPD2DQ XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                /* opcode F2h 0Fh E7h  not defined */
                /* opcode F2h 0Fh E8h  not defined */
                /* opcode F2h 0Fh E9h  not defined */
                /* opcode F2h 0Fh EAh  not defined */
                /* opcode F2h 0Fh EBh  not defined */
                /* opcode F2h 0Fh ECh  not defined */
                /* opcode F2h 0Fh EDh  not defined */
                /* opcode F2h 0Fh EEh  not defined */
                /* opcode F2h 0Fh EFh  not defined */
                case 0xF0: /* F2h 0Fh F0h        spec:  */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    _x86decode_begin_code32_addr32_opcode_parse_F20FF0:
/* Opcodes starting with F2h 0Fh F0h */
                    switch (mrm.byte) {
                        case 0x00: /* F2h 0Fh F0h 00h LDDQU sse(reg),sse(r/m) mod=0 reg=0 rm=0      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x01: /* F2h 0Fh F0h 01h LDDQU sse(reg),sse(r/m) mod=0 reg=0 rm=1      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x02: /* F2h 0Fh F0h 02h LDDQU sse(reg),sse(r/m) mod=0 reg=0 rm=2      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x03: /* F2h 0Fh F0h 03h LDDQU sse(reg),sse(r/m) mod=0 reg=0 rm=3      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x04: /* F2h 0Fh F0h 04h LDDQU sse(reg),sse(r/m) mod=0 reg=0 rm=4      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x05: /* F2h 0Fh F0h 05h LDDQU sse(reg),sse(r/m) mod=0 reg=0 rm=5      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x06: /* F2h 0Fh F0h 06h LDDQU sse(reg),sse(r/m) mod=0 reg=0 rm=6      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x07: /* F2h 0Fh F0h 07h LDDQU sse(reg),sse(r/m) mod=0 reg=0 rm=7      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x08: /* F2h 0Fh F0h 08h LDDQU sse(reg),sse(r/m) mod=0 reg=1 rm=0      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x09: /* F2h 0Fh F0h 09h LDDQU sse(reg),sse(r/m) mod=0 reg=1 rm=1      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x0A: /* F2h 0Fh F0h 0Ah LDDQU sse(reg),sse(r/m) mod=0 reg=1 rm=2      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x0B: /* F2h 0Fh F0h 0Bh LDDQU sse(reg),sse(r/m) mod=0 reg=1 rm=3      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x0C: /* F2h 0Fh F0h 0Ch LDDQU sse(reg),sse(r/m) mod=0 reg=1 rm=4      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x0D: /* F2h 0Fh F0h 0Dh LDDQU sse(reg),sse(r/m) mod=0 reg=1 rm=5      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x0E: /* F2h 0Fh F0h 0Eh LDDQU sse(reg),sse(r/m) mod=0 reg=1 rm=6      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x0F: /* F2h 0Fh F0h 0Fh LDDQU sse(reg),sse(r/m) mod=0 reg=1 rm=7      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x10: /* F2h 0Fh F0h 10h LDDQU sse(reg),sse(r/m) mod=0 reg=2 rm=0      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x11: /* F2h 0Fh F0h 11h LDDQU sse(reg),sse(r/m) mod=0 reg=2 rm=1      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x12: /* F2h 0Fh F0h 12h LDDQU sse(reg),sse(r/m) mod=0 reg=2 rm=2      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x13: /* F2h 0Fh F0h 13h LDDQU sse(reg),sse(r/m) mod=0 reg=2 rm=3      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x14: /* F2h 0Fh F0h 14h LDDQU sse(reg),sse(r/m) mod=0 reg=2 rm=4      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x15: /* F2h 0Fh F0h 15h LDDQU sse(reg),sse(r/m) mod=0 reg=2 rm=5      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x16: /* F2h 0Fh F0h 16h LDDQU sse(reg),sse(r/m) mod=0 reg=2 rm=6      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x17: /* F2h 0Fh F0h 17h LDDQU sse(reg),sse(r/m) mod=0 reg=2 rm=7      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x18: /* F2h 0Fh F0h 18h LDDQU sse(reg),sse(r/m) mod=0 reg=3 rm=0      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x19: /* F2h 0Fh F0h 19h LDDQU sse(reg),sse(r/m) mod=0 reg=3 rm=1      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x1A: /* F2h 0Fh F0h 1Ah LDDQU sse(reg),sse(r/m) mod=0 reg=3 rm=2      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x1B: /* F2h 0Fh F0h 1Bh LDDQU sse(reg),sse(r/m) mod=0 reg=3 rm=3      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x1C: /* F2h 0Fh F0h 1Ch LDDQU sse(reg),sse(r/m) mod=0 reg=3 rm=4      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x1D: /* F2h 0Fh F0h 1Dh LDDQU sse(reg),sse(r/m) mod=0 reg=3 rm=5      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x1E: /* F2h 0Fh F0h 1Eh LDDQU sse(reg),sse(r/m) mod=0 reg=3 rm=6      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x1F: /* F2h 0Fh F0h 1Fh LDDQU sse(reg),sse(r/m) mod=0 reg=3 rm=7      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x20: /* F2h 0Fh F0h 20h LDDQU sse(reg),sse(r/m) mod=0 reg=4 rm=0      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x21: /* F2h 0Fh F0h 21h LDDQU sse(reg),sse(r/m) mod=0 reg=4 rm=1      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x22: /* F2h 0Fh F0h 22h LDDQU sse(reg),sse(r/m) mod=0 reg=4 rm=2      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x23: /* F2h 0Fh F0h 23h LDDQU sse(reg),sse(r/m) mod=0 reg=4 rm=3      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x24: /* F2h 0Fh F0h 24h LDDQU sse(reg),sse(r/m) mod=0 reg=4 rm=4      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x25: /* F2h 0Fh F0h 25h LDDQU sse(reg),sse(r/m) mod=0 reg=4 rm=5      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x26: /* F2h 0Fh F0h 26h LDDQU sse(reg),sse(r/m) mod=0 reg=4 rm=6      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x27: /* F2h 0Fh F0h 27h LDDQU sse(reg),sse(r/m) mod=0 reg=4 rm=7      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x28: /* F2h 0Fh F0h 28h LDDQU sse(reg),sse(r/m) mod=0 reg=5 rm=0      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x29: /* F2h 0Fh F0h 29h LDDQU sse(reg),sse(r/m) mod=0 reg=5 rm=1      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x2A: /* F2h 0Fh F0h 2Ah LDDQU sse(reg),sse(r/m) mod=0 reg=5 rm=2      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x2B: /* F2h 0Fh F0h 2Bh LDDQU sse(reg),sse(r/m) mod=0 reg=5 rm=3      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x2C: /* F2h 0Fh F0h 2Ch LDDQU sse(reg),sse(r/m) mod=0 reg=5 rm=4      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x2D: /* F2h 0Fh F0h 2Dh LDDQU sse(reg),sse(r/m) mod=0 reg=5 rm=5      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x2E: /* F2h 0Fh F0h 2Eh LDDQU sse(reg),sse(r/m) mod=0 reg=5 rm=6      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x2F: /* F2h 0Fh F0h 2Fh LDDQU sse(reg),sse(r/m) mod=0 reg=5 rm=7      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x30: /* F2h 0Fh F0h 30h LDDQU sse(reg),sse(r/m) mod=0 reg=6 rm=0      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x31: /* F2h 0Fh F0h 31h LDDQU sse(reg),sse(r/m) mod=0 reg=6 rm=1      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x32: /* F2h 0Fh F0h 32h LDDQU sse(reg),sse(r/m) mod=0 reg=6 rm=2      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x33: /* F2h 0Fh F0h 33h LDDQU sse(reg),sse(r/m) mod=0 reg=6 rm=3      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x34: /* F2h 0Fh F0h 34h LDDQU sse(reg),sse(r/m) mod=0 reg=6 rm=4      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x35: /* F2h 0Fh F0h 35h LDDQU sse(reg),sse(r/m) mod=0 reg=6 rm=5      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x36: /* F2h 0Fh F0h 36h LDDQU sse(reg),sse(r/m) mod=0 reg=6 rm=6      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x37: /* F2h 0Fh F0h 37h LDDQU sse(reg),sse(r/m) mod=0 reg=6 rm=7      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x38: /* F2h 0Fh F0h 38h LDDQU sse(reg),sse(r/m) mod=0 reg=7 rm=0      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x39: /* F2h 0Fh F0h 39h LDDQU sse(reg),sse(r/m) mod=0 reg=7 rm=1      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x3A: /* F2h 0Fh F0h 3Ah LDDQU sse(reg),sse(r/m) mod=0 reg=7 rm=2      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x3B: /* F2h 0Fh F0h 3Bh LDDQU sse(reg),sse(r/m) mod=0 reg=7 rm=3      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x3C: /* F2h 0Fh F0h 3Ch LDDQU sse(reg),sse(r/m) mod=0 reg=7 rm=4      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x3D: /* F2h 0Fh F0h 3Dh LDDQU sse(reg),sse(r/m) mod=0 reg=7 rm=5      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x3E: /* F2h 0Fh F0h 3Eh LDDQU sse(reg),sse(r/m) mod=0 reg=7 rm=6      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x3F: /* F2h 0Fh F0h 3Fh LDDQU sse(reg),sse(r/m) mod=0 reg=7 rm=7      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x40: /* F2h 0Fh F0h 40h LDDQU sse(reg),sse(r/m) mod=1 reg=0 rm=0      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x41: /* F2h 0Fh F0h 41h LDDQU sse(reg),sse(r/m) mod=1 reg=0 rm=1      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x42: /* F2h 0Fh F0h 42h LDDQU sse(reg),sse(r/m) mod=1 reg=0 rm=2      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x43: /* F2h 0Fh F0h 43h LDDQU sse(reg),sse(r/m) mod=1 reg=0 rm=3      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x44: /* F2h 0Fh F0h 44h LDDQU sse(reg),sse(r/m) mod=1 reg=0 rm=4      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x45: /* F2h 0Fh F0h 45h LDDQU sse(reg),sse(r/m) mod=1 reg=0 rm=5      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x46: /* F2h 0Fh F0h 46h LDDQU sse(reg),sse(r/m) mod=1 reg=0 rm=6      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x47: /* F2h 0Fh F0h 47h LDDQU sse(reg),sse(r/m) mod=1 reg=0 rm=7      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x48: /* F2h 0Fh F0h 48h LDDQU sse(reg),sse(r/m) mod=1 reg=1 rm=0      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x49: /* F2h 0Fh F0h 49h LDDQU sse(reg),sse(r/m) mod=1 reg=1 rm=1      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x4A: /* F2h 0Fh F0h 4Ah LDDQU sse(reg),sse(r/m) mod=1 reg=1 rm=2      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x4B: /* F2h 0Fh F0h 4Bh LDDQU sse(reg),sse(r/m) mod=1 reg=1 rm=3      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x4C: /* F2h 0Fh F0h 4Ch LDDQU sse(reg),sse(r/m) mod=1 reg=1 rm=4      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x4D: /* F2h 0Fh F0h 4Dh LDDQU sse(reg),sse(r/m) mod=1 reg=1 rm=5      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x4E: /* F2h 0Fh F0h 4Eh LDDQU sse(reg),sse(r/m) mod=1 reg=1 rm=6      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x4F: /* F2h 0Fh F0h 4Fh LDDQU sse(reg),sse(r/m) mod=1 reg=1 rm=7      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x50: /* F2h 0Fh F0h 50h LDDQU sse(reg),sse(r/m) mod=1 reg=2 rm=0      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x51: /* F2h 0Fh F0h 51h LDDQU sse(reg),sse(r/m) mod=1 reg=2 rm=1      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x52: /* F2h 0Fh F0h 52h LDDQU sse(reg),sse(r/m) mod=1 reg=2 rm=2      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x53: /* F2h 0Fh F0h 53h LDDQU sse(reg),sse(r/m) mod=1 reg=2 rm=3      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x54: /* F2h 0Fh F0h 54h LDDQU sse(reg),sse(r/m) mod=1 reg=2 rm=4      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x55: /* F2h 0Fh F0h 55h LDDQU sse(reg),sse(r/m) mod=1 reg=2 rm=5      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x56: /* F2h 0Fh F0h 56h LDDQU sse(reg),sse(r/m) mod=1 reg=2 rm=6      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x57: /* F2h 0Fh F0h 57h LDDQU sse(reg),sse(r/m) mod=1 reg=2 rm=7      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x58: /* F2h 0Fh F0h 58h LDDQU sse(reg),sse(r/m) mod=1 reg=3 rm=0      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x59: /* F2h 0Fh F0h 59h LDDQU sse(reg),sse(r/m) mod=1 reg=3 rm=1      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x5A: /* F2h 0Fh F0h 5Ah LDDQU sse(reg),sse(r/m) mod=1 reg=3 rm=2      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x5B: /* F2h 0Fh F0h 5Bh LDDQU sse(reg),sse(r/m) mod=1 reg=3 rm=3      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x5C: /* F2h 0Fh F0h 5Ch LDDQU sse(reg),sse(r/m) mod=1 reg=3 rm=4      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x5D: /* F2h 0Fh F0h 5Dh LDDQU sse(reg),sse(r/m) mod=1 reg=3 rm=5      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x5E: /* F2h 0Fh F0h 5Eh LDDQU sse(reg),sse(r/m) mod=1 reg=3 rm=6      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x5F: /* F2h 0Fh F0h 5Fh LDDQU sse(reg),sse(r/m) mod=1 reg=3 rm=7      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x60: /* F2h 0Fh F0h 60h LDDQU sse(reg),sse(r/m) mod=1 reg=4 rm=0      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x61: /* F2h 0Fh F0h 61h LDDQU sse(reg),sse(r/m) mod=1 reg=4 rm=1      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x62: /* F2h 0Fh F0h 62h LDDQU sse(reg),sse(r/m) mod=1 reg=4 rm=2      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x63: /* F2h 0Fh F0h 63h LDDQU sse(reg),sse(r/m) mod=1 reg=4 rm=3      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x64: /* F2h 0Fh F0h 64h LDDQU sse(reg),sse(r/m) mod=1 reg=4 rm=4      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x65: /* F2h 0Fh F0h 65h LDDQU sse(reg),sse(r/m) mod=1 reg=4 rm=5      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x66: /* F2h 0Fh F0h 66h LDDQU sse(reg),sse(r/m) mod=1 reg=4 rm=6      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x67: /* F2h 0Fh F0h 67h LDDQU sse(reg),sse(r/m) mod=1 reg=4 rm=7      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x68: /* F2h 0Fh F0h 68h LDDQU sse(reg),sse(r/m) mod=1 reg=5 rm=0      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x69: /* F2h 0Fh F0h 69h LDDQU sse(reg),sse(r/m) mod=1 reg=5 rm=1      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x6A: /* F2h 0Fh F0h 6Ah LDDQU sse(reg),sse(r/m) mod=1 reg=5 rm=2      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x6B: /* F2h 0Fh F0h 6Bh LDDQU sse(reg),sse(r/m) mod=1 reg=5 rm=3      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x6C: /* F2h 0Fh F0h 6Ch LDDQU sse(reg),sse(r/m) mod=1 reg=5 rm=4      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x6D: /* F2h 0Fh F0h 6Dh LDDQU sse(reg),sse(r/m) mod=1 reg=5 rm=5      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x6E: /* F2h 0Fh F0h 6Eh LDDQU sse(reg),sse(r/m) mod=1 reg=5 rm=6      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x6F: /* F2h 0Fh F0h 6Fh LDDQU sse(reg),sse(r/m) mod=1 reg=5 rm=7      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x70: /* F2h 0Fh F0h 70h LDDQU sse(reg),sse(r/m) mod=1 reg=6 rm=0      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x71: /* F2h 0Fh F0h 71h LDDQU sse(reg),sse(r/m) mod=1 reg=6 rm=1      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x72: /* F2h 0Fh F0h 72h LDDQU sse(reg),sse(r/m) mod=1 reg=6 rm=2      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x73: /* F2h 0Fh F0h 73h LDDQU sse(reg),sse(r/m) mod=1 reg=6 rm=3      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x74: /* F2h 0Fh F0h 74h LDDQU sse(reg),sse(r/m) mod=1 reg=6 rm=4      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x75: /* F2h 0Fh F0h 75h LDDQU sse(reg),sse(r/m) mod=1 reg=6 rm=5      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x76: /* F2h 0Fh F0h 76h LDDQU sse(reg),sse(r/m) mod=1 reg=6 rm=6      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x77: /* F2h 0Fh F0h 77h LDDQU sse(reg),sse(r/m) mod=1 reg=6 rm=7      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x78: /* F2h 0Fh F0h 78h LDDQU sse(reg),sse(r/m) mod=1 reg=7 rm=0      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x79: /* F2h 0Fh F0h 79h LDDQU sse(reg),sse(r/m) mod=1 reg=7 rm=1      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x7A: /* F2h 0Fh F0h 7Ah LDDQU sse(reg),sse(r/m) mod=1 reg=7 rm=2      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x7B: /* F2h 0Fh F0h 7Bh LDDQU sse(reg),sse(r/m) mod=1 reg=7 rm=3      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x7C: /* F2h 0Fh F0h 7Ch LDDQU sse(reg),sse(r/m) mod=1 reg=7 rm=4      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x7D: /* F2h 0Fh F0h 7Dh LDDQU sse(reg),sse(r/m) mod=1 reg=7 rm=5      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x7E: /* F2h 0Fh F0h 7Eh LDDQU sse(reg),sse(r/m) mod=1 reg=7 rm=6      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x7F: /* F2h 0Fh F0h 7Fh LDDQU sse(reg),sse(r/m) mod=1 reg=7 rm=7      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x80: /* F2h 0Fh F0h 80h LDDQU sse(reg),sse(r/m) mod=2 reg=0 rm=0      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x81: /* F2h 0Fh F0h 81h LDDQU sse(reg),sse(r/m) mod=2 reg=0 rm=1      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x82: /* F2h 0Fh F0h 82h LDDQU sse(reg),sse(r/m) mod=2 reg=0 rm=2      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x83: /* F2h 0Fh F0h 83h LDDQU sse(reg),sse(r/m) mod=2 reg=0 rm=3      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x84: /* F2h 0Fh F0h 84h LDDQU sse(reg),sse(r/m) mod=2 reg=0 rm=4      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x85: /* F2h 0Fh F0h 85h LDDQU sse(reg),sse(r/m) mod=2 reg=0 rm=5      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x86: /* F2h 0Fh F0h 86h LDDQU sse(reg),sse(r/m) mod=2 reg=0 rm=6      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x87: /* F2h 0Fh F0h 87h LDDQU sse(reg),sse(r/m) mod=2 reg=0 rm=7      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x88: /* F2h 0Fh F0h 88h LDDQU sse(reg),sse(r/m) mod=2 reg=1 rm=0      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x89: /* F2h 0Fh F0h 89h LDDQU sse(reg),sse(r/m) mod=2 reg=1 rm=1      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x8A: /* F2h 0Fh F0h 8Ah LDDQU sse(reg),sse(r/m) mod=2 reg=1 rm=2      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x8B: /* F2h 0Fh F0h 8Bh LDDQU sse(reg),sse(r/m) mod=2 reg=1 rm=3      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x8C: /* F2h 0Fh F0h 8Ch LDDQU sse(reg),sse(r/m) mod=2 reg=1 rm=4      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x8D: /* F2h 0Fh F0h 8Dh LDDQU sse(reg),sse(r/m) mod=2 reg=1 rm=5      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x8E: /* F2h 0Fh F0h 8Eh LDDQU sse(reg),sse(r/m) mod=2 reg=1 rm=6      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x8F: /* F2h 0Fh F0h 8Fh LDDQU sse(reg),sse(r/m) mod=2 reg=1 rm=7      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x90: /* F2h 0Fh F0h 90h LDDQU sse(reg),sse(r/m) mod=2 reg=2 rm=0      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x91: /* F2h 0Fh F0h 91h LDDQU sse(reg),sse(r/m) mod=2 reg=2 rm=1      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x92: /* F2h 0Fh F0h 92h LDDQU sse(reg),sse(r/m) mod=2 reg=2 rm=2      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x93: /* F2h 0Fh F0h 93h LDDQU sse(reg),sse(r/m) mod=2 reg=2 rm=3      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x94: /* F2h 0Fh F0h 94h LDDQU sse(reg),sse(r/m) mod=2 reg=2 rm=4      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x95: /* F2h 0Fh F0h 95h LDDQU sse(reg),sse(r/m) mod=2 reg=2 rm=5      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x96: /* F2h 0Fh F0h 96h LDDQU sse(reg),sse(r/m) mod=2 reg=2 rm=6      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x97: /* F2h 0Fh F0h 97h LDDQU sse(reg),sse(r/m) mod=2 reg=2 rm=7      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x98: /* F2h 0Fh F0h 98h LDDQU sse(reg),sse(r/m) mod=2 reg=3 rm=0      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x99: /* F2h 0Fh F0h 99h LDDQU sse(reg),sse(r/m) mod=2 reg=3 rm=1      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x9A: /* F2h 0Fh F0h 9Ah LDDQU sse(reg),sse(r/m) mod=2 reg=3 rm=2      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x9B: /* F2h 0Fh F0h 9Bh LDDQU sse(reg),sse(r/m) mod=2 reg=3 rm=3      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x9C: /* F2h 0Fh F0h 9Ch LDDQU sse(reg),sse(r/m) mod=2 reg=3 rm=4      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x9D: /* F2h 0Fh F0h 9Dh LDDQU sse(reg),sse(r/m) mod=2 reg=3 rm=5      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x9E: /* F2h 0Fh F0h 9Eh LDDQU sse(reg),sse(r/m) mod=2 reg=3 rm=6      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0x9F: /* F2h 0Fh F0h 9Fh LDDQU sse(reg),sse(r/m) mod=2 reg=3 rm=7      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0xA0: /* F2h 0Fh F0h A0h LDDQU sse(reg),sse(r/m) mod=2 reg=4 rm=0      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0xA1: /* F2h 0Fh F0h A1h LDDQU sse(reg),sse(r/m) mod=2 reg=4 rm=1      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0xA2: /* F2h 0Fh F0h A2h LDDQU sse(reg),sse(r/m) mod=2 reg=4 rm=2      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0xA3: /* F2h 0Fh F0h A3h LDDQU sse(reg),sse(r/m) mod=2 reg=4 rm=3      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0xA4: /* F2h 0Fh F0h A4h LDDQU sse(reg),sse(r/m) mod=2 reg=4 rm=4      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0xA5: /* F2h 0Fh F0h A5h LDDQU sse(reg),sse(r/m) mod=2 reg=4 rm=5      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0xA6: /* F2h 0Fh F0h A6h LDDQU sse(reg),sse(r/m) mod=2 reg=4 rm=6      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0xA7: /* F2h 0Fh F0h A7h LDDQU sse(reg),sse(r/m) mod=2 reg=4 rm=7      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0xA8: /* F2h 0Fh F0h A8h LDDQU sse(reg),sse(r/m) mod=2 reg=5 rm=0      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0xA9: /* F2h 0Fh F0h A9h LDDQU sse(reg),sse(r/m) mod=2 reg=5 rm=1      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0xAA: /* F2h 0Fh F0h AAh LDDQU sse(reg),sse(r/m) mod=2 reg=5 rm=2      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0xAB: /* F2h 0Fh F0h ABh LDDQU sse(reg),sse(r/m) mod=2 reg=5 rm=3      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0xAC: /* F2h 0Fh F0h ACh LDDQU sse(reg),sse(r/m) mod=2 reg=5 rm=4      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0xAD: /* F2h 0Fh F0h ADh LDDQU sse(reg),sse(r/m) mod=2 reg=5 rm=5      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0xAE: /* F2h 0Fh F0h AEh LDDQU sse(reg),sse(r/m) mod=2 reg=5 rm=6      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0xAF: /* F2h 0Fh F0h AFh LDDQU sse(reg),sse(r/m) mod=2 reg=5 rm=7      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0xB0: /* F2h 0Fh F0h B0h LDDQU sse(reg),sse(r/m) mod=2 reg=6 rm=0      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0xB1: /* F2h 0Fh F0h B1h LDDQU sse(reg),sse(r/m) mod=2 reg=6 rm=1      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0xB2: /* F2h 0Fh F0h B2h LDDQU sse(reg),sse(r/m) mod=2 reg=6 rm=2      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0xB3: /* F2h 0Fh F0h B3h LDDQU sse(reg),sse(r/m) mod=2 reg=6 rm=3      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0xB4: /* F2h 0Fh F0h B4h LDDQU sse(reg),sse(r/m) mod=2 reg=6 rm=4      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0xB5: /* F2h 0Fh F0h B5h LDDQU sse(reg),sse(r/m) mod=2 reg=6 rm=5      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0xB6: /* F2h 0Fh F0h B6h LDDQU sse(reg),sse(r/m) mod=2 reg=6 rm=6      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0xB7: /* F2h 0Fh F0h B7h LDDQU sse(reg),sse(r/m) mod=2 reg=6 rm=7      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0xB8: /* F2h 0Fh F0h B8h LDDQU sse(reg),sse(r/m) mod=2 reg=7 rm=0      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0xB9: /* F2h 0Fh F0h B9h LDDQU sse(reg),sse(r/m) mod=2 reg=7 rm=1      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0xBA: /* F2h 0Fh F0h BAh LDDQU sse(reg),sse(r/m) mod=2 reg=7 rm=2      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0xBB: /* F2h 0Fh F0h BBh LDDQU sse(reg),sse(r/m) mod=2 reg=7 rm=3      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0xBC: /* F2h 0Fh F0h BCh LDDQU sse(reg),sse(r/m) mod=2 reg=7 rm=4      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0xBD: /* F2h 0Fh F0h BDh LDDQU sse(reg),sse(r/m) mod=2 reg=7 rm=5      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0xBE: /* F2h 0Fh F0h BEh LDDQU sse(reg),sse(r/m) mod=2 reg=7 rm=6      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                        case 0xBF: /* F2h 0Fh F0h BFh LDDQU sse(reg),sse(r/m) mod=2 reg=7 rm=7      spec: 0x0F 0xF0 mod/reg/rm mprefix(0xF2) mod!=3 */
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"LDDQU XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                            break;
                        /* opcode F2h 0Fh F0h C0h  not defined */
                        /* opcode F2h 0Fh F0h C1h  not defined */
                        /* opcode F2h 0Fh F0h C2h  not defined */
                        /* opcode F2h 0Fh F0h C3h  not defined */
                        /* opcode F2h 0Fh F0h C4h  not defined */
                        /* opcode F2h 0Fh F0h C5h  not defined */
                        /* opcode F2h 0Fh F0h C6h  not defined */
                        /* opcode F2h 0Fh F0h C7h  not defined */
                        /* opcode F2h 0Fh F0h C8h  not defined */
                        /* opcode F2h 0Fh F0h C9h  not defined */
                        /* opcode F2h 0Fh F0h CAh  not defined */
                        /* opcode F2h 0Fh F0h CBh  not defined */
                        /* opcode F2h 0Fh F0h CCh  not defined */
                        /* opcode F2h 0Fh F0h CDh  not defined */
                        /* opcode F2h 0Fh F0h CEh  not defined */
                        /* opcode F2h 0Fh F0h CFh  not defined */
                        /* opcode F2h 0Fh F0h D0h  not defined */
                        /* opcode F2h 0Fh F0h D1h  not defined */
                        /* opcode F2h 0Fh F0h D2h  not defined */
                        /* opcode F2h 0Fh F0h D3h  not defined */
                        /* opcode F2h 0Fh F0h D4h  not defined */
                        /* opcode F2h 0Fh F0h D5h  not defined */
                        /* opcode F2h 0Fh F0h D6h  not defined */
                        /* opcode F2h 0Fh F0h D7h  not defined */
                        /* opcode F2h 0Fh F0h D8h  not defined */
                        /* opcode F2h 0Fh F0h D9h  not defined */
                        /* opcode F2h 0Fh F0h DAh  not defined */
                        /* opcode F2h 0Fh F0h DBh  not defined */
                        /* opcode F2h 0Fh F0h DCh  not defined */
                        /* opcode F2h 0Fh F0h DDh  not defined */
                        /* opcode F2h 0Fh F0h DEh  not defined */
                        /* opcode F2h 0Fh F0h DFh  not defined */
                        /* opcode F2h 0Fh F0h E0h  not defined */
                        /* opcode F2h 0Fh F0h E1h  not defined */
                        /* opcode F2h 0Fh F0h E2h  not defined */
                        /* opcode F2h 0Fh F0h E3h  not defined */
                        /* opcode F2h 0Fh F0h E4h  not defined */
                        /* opcode F2h 0Fh F0h E5h  not defined */
                        /* opcode F2h 0Fh F0h E6h  not defined */
                        /* opcode F2h 0Fh F0h E7h  not defined */
                        /* opcode F2h 0Fh F0h E8h  not defined */
                        /* opcode F2h 0Fh F0h E9h  not defined */
                        /* opcode F2h 0Fh F0h EAh  not defined */
                        /* opcode F2h 0Fh F0h EBh  not defined */
                        /* opcode F2h 0Fh F0h ECh  not defined */
                        /* opcode F2h 0Fh F0h EDh  not defined */
                        /* opcode F2h 0Fh F0h EEh  not defined */
                        /* opcode F2h 0Fh F0h EFh  not defined */
                        /* opcode F2h 0Fh F0h F0h  not defined */
                        /* opcode F2h 0Fh F0h F1h  not defined */
                        /* opcode F2h 0Fh F0h F2h  not defined */
                        /* opcode F2h 0Fh F0h F3h  not defined */
                        /* opcode F2h 0Fh F0h F4h  not defined */
                        /* opcode F2h 0Fh F0h F5h  not defined */
                        /* opcode F2h 0Fh F0h F6h  not defined */
                        /* opcode F2h 0Fh F0h F7h  not defined */
                        /* opcode F2h 0Fh F0h F8h  not defined */
                        /* opcode F2h 0Fh F0h F9h  not defined */
                        /* opcode F2h 0Fh F0h FAh  not defined */
                        /* opcode F2h 0Fh F0h FBh  not defined */
                        /* opcode F2h 0Fh F0h FCh  not defined */
                        /* opcode F2h 0Fh F0h FDh  not defined */
                        /* opcode F2h 0Fh F0h FEh  not defined */
                        /* opcode F2h 0Fh F0h FFh  not defined */
                        default:
                            goto _x86decode_illegal_opcode; /* non-mandatory fallback does not exist */
                    };
/* End of opcodes starting with F2h 0Fh F0h */
                    break;
                /* opcode F2h 0Fh F1h  not defined */
                /* opcode F2h 0Fh F2h  not defined */
                /* opcode F2h 0Fh F3h  not defined */
                /* opcode F2h 0Fh F4h  not defined */
                /* opcode F2h 0Fh F5h  not defined */
                /* opcode F2h 0Fh F6h  not defined */
                /* opcode F2h 0Fh F7h  not defined */
                /* opcode F2h 0Fh F8h  not defined */
                /* opcode F2h 0Fh F9h  not defined */
                /* opcode F2h 0Fh FAh  not defined */
                /* opcode F2h 0Fh FBh  not defined */
                /* opcode F2h 0Fh FCh  not defined */
                /* opcode F2h 0Fh FDh  not defined */
                /* opcode F2h 0Fh FEh  not defined */
                /* opcode F2h 0Fh FFh  not defined */
                default:
                    goto _x86decode_begin_code32_addr32_opcode_parse_0F; /* Fall through to normal 0x0F opcode handling */
            };
/* End of opcodes starting with F2h 0Fh */
        }
        else {
            goto _x86decode_begin_code32_addr32_opcode_parse_;
        }
        break;
    case 0xF3: /* F3h REPZ       spec: 0xF3 prefix */
        /* Mandatory prefix detection */
        op=IPFB();
        if (op == 0x0F) {
/* Opcodes starting with F3h 0Fh */
            op=IPFB();
            _x86decode_begin_code32_addr32_opcode_parse_F30F:
            switch (op) {
                /* opcode F3h 0Fh 00h  not defined */
                /* opcode F3h 0Fh 01h  not defined */
                /* opcode F3h 0Fh 02h  not defined */
                /* opcode F3h 0Fh 03h  not defined */
                /* opcode F3h 0Fh 04h  not defined */
                /* opcode F3h 0Fh 05h  not defined */
                /* opcode F3h 0Fh 06h  not defined */
                /* opcode F3h 0Fh 07h  not defined */
                /* opcode F3h 0Fh 08h  not defined */
                /* opcode F3h 0Fh 09h  not defined */
                /* opcode F3h 0Fh 0Ah  not defined */
                /* opcode F3h 0Fh 0Bh  not defined */
                /* opcode F3h 0Fh 0Ch  not defined */
                /* opcode F3h 0Fh 0Dh  not defined */
                /* opcode F3h 0Fh 0Eh  not defined */
                /* opcode F3h 0Fh 0Fh  not defined */
                case 0x10: /* F3h 0Fh 10h MOVSS sse(reg),sse(r/m)      spec: 0x0F 0x10 mod/reg/rm mprefix(0xF3) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVSS XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x11: /* F3h 0Fh 11h MOVSS sse(r/m),sse(reg)      spec: 0x0F 0x11 mod/reg/rm mprefix(0xF3) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVSS %s,XMM%u",IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""),mrm.reg());
                    break;
                case 0x12: /* F3h 0Fh 12h MOVSLDUP sse(reg),sse(r/m)      spec: 0x0F 0x12 mod/reg/rm mprefix(0xF3) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVSLDUP XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                /* opcode F3h 0Fh 13h  not defined */
                /* opcode F3h 0Fh 14h  not defined */
                /* opcode F3h 0Fh 15h  not defined */
                case 0x16: /* F3h 0Fh 16h MOVSHDUP sse(reg),sse(r/m)      spec: 0x0F 0x16 mod/reg/rm mprefix(0xF3) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVSHDUP XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                /* opcode F3h 0Fh 17h  not defined */
                /* opcode F3h 0Fh 18h  not defined */
                /* opcode F3h 0Fh 19h  not defined */
                /* opcode F3h 0Fh 1Ah  not defined */
                /* opcode F3h 0Fh 1Bh  not defined */
                /* opcode F3h 0Fh 1Ch  not defined */
                /* opcode F3h 0Fh 1Dh  not defined */
                /* opcode F3h 0Fh 1Eh  not defined */
                /* opcode F3h 0Fh 1Fh  not defined */
                /* opcode F3h 0Fh 20h  not defined */
                /* opcode F3h 0Fh 21h  not defined */
                /* opcode F3h 0Fh 22h  not defined */
                /* opcode F3h 0Fh 23h  not defined */
                /* opcode F3h 0Fh 24h  not defined */
                /* opcode F3h 0Fh 25h  not defined */
                /* opcode F3h 0Fh 26h  not defined */
                /* opcode F3h 0Fh 27h  not defined */
                /* opcode F3h 0Fh 28h  not defined */
                /* opcode F3h 0Fh 29h  not defined */
                case 0x2A: /* F3h 0Fh 2Ah CVTSI2SS sse(reg),w32(r/m)      spec: 0x0F 0x2A mod/reg/rm mprefix(0xF3) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CVTSI2SS XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,4,RC_REG,"w32"));
                    break;
                /* opcode F3h 0Fh 2Bh  not defined */
                case 0x2C: /* F3h 0Fh 2Ch CVTTSS2SI w32(reg),sse(r/m)      spec: 0x0F 0x2C mod/reg/rm mprefix(0xF3) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CVTTSS2SI %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x2D: /* F3h 0Fh 2Dh CVTSS2SI w32(reg),sse(r/m)      spec: 0x0F 0x2D mod/reg/rm mprefix(0xF3) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CVTSS2SI %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                /* opcode F3h 0Fh 2Eh  not defined */
                /* opcode F3h 0Fh 2Fh  not defined */
                /* opcode F3h 0Fh 30h  not defined */
                /* opcode F3h 0Fh 31h  not defined */
                /* opcode F3h 0Fh 32h  not defined */
                /* opcode F3h 0Fh 33h  not defined */
                /* opcode F3h 0Fh 34h  not defined */
                /* opcode F3h 0Fh 35h  not defined */
                /* opcode F3h 0Fh 36h  not defined */
                /* opcode F3h 0Fh 37h  not defined */
                /* opcode F3h 0Fh 38h  not defined */
                /* opcode F3h 0Fh 39h  not defined */
                /* opcode F3h 0Fh 3Ah  not defined */
                /* opcode F3h 0Fh 3Bh  not defined */
                /* opcode F3h 0Fh 3Ch  not defined */
                /* opcode F3h 0Fh 3Dh  not defined */
                /* opcode F3h 0Fh 3Eh  not defined */
                /* opcode F3h 0Fh 3Fh  not defined */
                /* opcode F3h 0Fh 40h  not defined */
                /* opcode F3h 0Fh 41h  not defined */
                /* opcode F3h 0Fh 42h  not defined */
                /* opcode F3h 0Fh 43h  not defined */
                /* opcode F3h 0Fh 44h  not defined */
                /* opcode F3h 0Fh 45h  not defined */
                /* opcode F3h 0Fh 46h  not defined */
                /* opcode F3h 0Fh 47h  not defined */
                /* opcode F3h 0Fh 48h  not defined */
                /* opcode F3h 0Fh 49h  not defined */
                /* opcode F3h 0Fh 4Ah  not defined */
                /* opcode F3h 0Fh 4Bh  not defined */
                /* opcode F3h 0Fh 4Ch  not defined */
                /* opcode F3h 0Fh 4Dh  not defined */
                /* opcode F3h 0Fh 4Eh  not defined */
                /* opcode F3h 0Fh 4Fh  not defined */
                /* opcode F3h 0Fh 50h  not defined */
                case 0x51: /* F3h 0Fh 51h SQRTSS sse(reg),sse(r/m)      spec: 0x0F 0x51 mod/reg/rm mprefix(0xF3) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SQRTSS XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x52: /* F3h 0Fh 52h RSQRTSS sse(reg),sse(r/m)      spec: 0x0F 0x52 mod/reg/rm mprefix(0xF3) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"RSQRTSS XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x53: /* F3h 0Fh 53h RCPSS sse(reg),sse(r/m)      spec: 0x0F 0x53 mod/reg/rm mprefix(0xF3) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"RCPSS XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                /* opcode F3h 0Fh 54h  not defined */
                /* opcode F3h 0Fh 55h  not defined */
                /* opcode F3h 0Fh 56h  not defined */
                /* opcode F3h 0Fh 57h  not defined */
                case 0x58: /* F3h 0Fh 58h ADDSS sse(reg),sse(r/m)      spec: 0x0F 0x58 mod/reg/rm mprefix(0xF3) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"ADDSS XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x59: /* F3h 0Fh 59h MULSS sse(reg),sse(r/m)      spec: 0x0F 0x59 mod/reg/rm mprefix(0xF3) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MULSS XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x5A: /* F3h 0Fh 5Ah CVTSS2SD sse(reg),sse(r/m)      spec: 0x0F 0x5A mod/reg/rm mprefix(0xF3) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CVTSS2SD XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x5B: /* F3h 0Fh 5Bh CVTTPS2DQ sse(reg),sse(r/m)      spec: 0x0F 0x5B mod/reg/rm mprefix(0xF3) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CVTTPS2DQ XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x5C: /* F3h 0Fh 5Ch SUBSS sse(reg),sse(r/m)      spec: 0x0F 0x5C mod/reg/rm mprefix(0xF3) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"SUBSS XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x5D: /* F3h 0Fh 5Dh MINSS sse(reg),sse(r/m)      spec: 0x0F 0x5D mod/reg/rm mprefix(0xF3) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MINSS XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x5E: /* F3h 0Fh 5Eh DIVSS sse(reg),sse(r/m)      spec: 0x0F 0x5E mod/reg/rm mprefix(0xF3) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"DIVSS XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x5F: /* F3h 0Fh 5Fh MAXSS sse(reg),sse(r/m)      spec: 0x0F 0x5F mod/reg/rm mprefix(0xF3) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MAXSS XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                /* opcode F3h 0Fh 60h  not defined */
                /* opcode F3h 0Fh 61h  not defined */
                /* opcode F3h 0Fh 62h  not defined */
                /* opcode F3h 0Fh 63h  not defined */
                /* opcode F3h 0Fh 64h  not defined */
                /* opcode F3h 0Fh 65h  not defined */
                /* opcode F3h 0Fh 66h  not defined */
                /* opcode F3h 0Fh 67h  not defined */
                /* opcode F3h 0Fh 68h  not defined */
                /* opcode F3h 0Fh 69h  not defined */
                /* opcode F3h 0Fh 6Ah  not defined */
                /* opcode F3h 0Fh 6Bh  not defined */
                /* opcode F3h 0Fh 6Ch  not defined */
                /* opcode F3h 0Fh 6Dh  not defined */
                /* opcode F3h 0Fh 6Eh  not defined */
                case 0x6F: /* F3h 0Fh 6Fh MOVDQU sse(reg),sse(r/m)      spec: 0x0F 0x6F mod/reg/rm mprefix(0xF3) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVDQU XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x70: /* F3h 0Fh 70h PSHUFHW sse(reg),sse(r/m),i      spec: 0x0F 0x70 mod/reg/rm ib mprefix(0xF3) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    imm=IPFB();
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PSHUFHW XMM%u,%s,0x%02lX",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""),(unsigned long)((uint32_t)imm));
                    break;
                /* opcode F3h 0Fh 71h  not defined */
                /* opcode F3h 0Fh 72h  not defined */
                /* opcode F3h 0Fh 73h  not defined */
                /* opcode F3h 0Fh 74h  not defined */
                /* opcode F3h 0Fh 75h  not defined */
                /* opcode F3h 0Fh 76h  not defined */
                /* opcode F3h 0Fh 77h  not defined */
                /* opcode F3h 0Fh 78h  not defined */
                /* opcode F3h 0Fh 79h  not defined */
                /* opcode F3h 0Fh 7Ah  not defined */
                /* opcode F3h 0Fh 7Bh  not defined */
                /* opcode F3h 0Fh 7Ch  not defined */
                /* opcode F3h 0Fh 7Dh  not defined */
                case 0x7E: /* F3h 0Fh 7Eh MOVD sse(reg),sse(r/m)      spec: 0x0F 0x7E mod/reg/rm mprefix(0xF3) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVD XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                case 0x7F: /* F3h 0Fh 7Fh MOVDQU sse(r/m),sse(reg)      spec: 0x0F 0x7F mod/reg/rm mprefix(0xF3) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVDQU %s,XMM%u",IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""),mrm.reg());
                    break;
                /* opcode F3h 0Fh 80h  not defined */
                /* opcode F3h 0Fh 81h  not defined */
                /* opcode F3h 0Fh 82h  not defined */
                /* opcode F3h 0Fh 83h  not defined */
                /* opcode F3h 0Fh 84h  not defined */
                /* opcode F3h 0Fh 85h  not defined */
                /* opcode F3h 0Fh 86h  not defined */
                /* opcode F3h 0Fh 87h  not defined */
                /* opcode F3h 0Fh 88h  not defined */
                /* opcode F3h 0Fh 89h  not defined */
                /* opcode F3h 0Fh 8Ah  not defined */
                /* opcode F3h 0Fh 8Bh  not defined */
                /* opcode F3h 0Fh 8Ch  not defined */
                /* opcode F3h 0Fh 8Dh  not defined */
                /* opcode F3h 0Fh 8Eh  not defined */
                /* opcode F3h 0Fh 8Fh  not defined */
                /* opcode F3h 0Fh 90h  not defined */
                /* opcode F3h 0Fh 91h  not defined */
                /* opcode F3h 0Fh 92h  not defined */
                /* opcode F3h 0Fh 93h  not defined */
                /* opcode F3h 0Fh 94h  not defined */
                /* opcode F3h 0Fh 95h  not defined */
                /* opcode F3h 0Fh 96h  not defined */
                /* opcode F3h 0Fh 97h  not defined */
                /* opcode F3h 0Fh 98h  not defined */
                /* opcode F3h 0Fh 99h  not defined */
                /* opcode F3h 0Fh 9Ah  not defined */
                /* opcode F3h 0Fh 9Bh  not defined */
                /* opcode F3h 0Fh 9Ch  not defined */
                /* opcode F3h 0Fh 9Dh  not defined */
                /* opcode F3h 0Fh 9Eh  not defined */
                /* opcode F3h 0Fh 9Fh  not defined */
                /* opcode F3h 0Fh A0h  not defined */
                /* opcode F3h 0Fh A1h  not defined */
                /* opcode F3h 0Fh A2h  not defined */
                /* opcode F3h 0Fh A3h  not defined */
                /* opcode F3h 0Fh A4h  not defined */
                /* opcode F3h 0Fh A5h  not defined */
                /* opcode F3h 0Fh A6h  not defined */
                /* opcode F3h 0Fh A7h  not defined */
                /* opcode F3h 0Fh A8h  not defined */
                /* opcode F3h 0Fh A9h  not defined */
                /* opcode F3h 0Fh AAh  not defined */
                /* opcode F3h 0Fh ABh  not defined */
                /* opcode F3h 0Fh ACh  not defined */
                /* opcode F3h 0Fh ADh  not defined */
                /* opcode F3h 0Fh AEh  not defined */
                /* opcode F3h 0Fh AFh  not defined */
                /* opcode F3h 0Fh B0h  not defined */
                /* opcode F3h 0Fh B1h  not defined */
                /* opcode F3h 0Fh B2h  not defined */
                /* opcode F3h 0Fh B3h  not defined */
                /* opcode F3h 0Fh B4h  not defined */
                /* opcode F3h 0Fh B5h  not defined */
                /* opcode F3h 0Fh B6h  not defined */
                /* opcode F3h 0Fh B7h  not defined */
                case 0xB8: /* F3h 0Fh B8h POPCNT w(reg),w(r/m)      spec: 0x0F 0xB8 mod/reg/rm mprefix(0xF3) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"POPCNT %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                    break;
                /* opcode F3h 0Fh B9h  not defined */
                /* opcode F3h 0Fh BAh  not defined */
                /* opcode F3h 0Fh BBh  not defined */
                /* opcode F3h 0Fh BCh  not defined */
                case 0xBD: /* F3h 0Fh BDh LZCNT w(reg),w(r/m)      spec: 0x0F 0xBD mod/reg/rm mprefix(0xF3) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"LZCNT %s,%s",CPUregsN[4][mrm.reg()],IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                    break;
                /* opcode F3h 0Fh BEh  not defined */
                /* opcode F3h 0Fh BFh  not defined */
                /* opcode F3h 0Fh C0h  not defined */
                /* opcode F3h 0Fh C1h  not defined */
                case 0xC2: /* F3h 0Fh C2h CMPSS sse(reg),sse(r/m),i      spec: 0x0F 0xC2 mod/reg/rm ib mprefix(0xF3) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    imm=IPFB();
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CMPSS XMM%u,%s,0x%02lX",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""),(unsigned long)((uint32_t)imm));
                    break;
                /* opcode F3h 0Fh C3h  not defined */
                /* opcode F3h 0Fh C4h  not defined */
                /* opcode F3h 0Fh C5h  not defined */
                /* opcode F3h 0Fh C6h  not defined */
                case 0xC7: /* F3h 0Fh C7h        spec:  */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    _x86decode_begin_code32_addr32_opcode_parse_F30FC7:
/* Opcodes starting with F3h 0Fh C7h */
                    switch (mrm.byte) {
                        /* opcode F3h 0Fh C7h 00h  not defined */
                        /* opcode F3h 0Fh C7h 01h  not defined */
                        /* opcode F3h 0Fh C7h 02h  not defined */
                        /* opcode F3h 0Fh C7h 03h  not defined */
                        /* opcode F3h 0Fh C7h 04h  not defined */
                        /* opcode F3h 0Fh C7h 05h  not defined */
                        /* opcode F3h 0Fh C7h 06h  not defined */
                        /* opcode F3h 0Fh C7h 07h  not defined */
                        /* opcode F3h 0Fh C7h 08h  not defined */
                        /* opcode F3h 0Fh C7h 09h  not defined */
                        /* opcode F3h 0Fh C7h 0Ah  not defined */
                        /* opcode F3h 0Fh C7h 0Bh  not defined */
                        /* opcode F3h 0Fh C7h 0Ch  not defined */
                        /* opcode F3h 0Fh C7h 0Dh  not defined */
                        /* opcode F3h 0Fh C7h 0Eh  not defined */
                        /* opcode F3h 0Fh C7h 0Fh  not defined */
                        /* opcode F3h 0Fh C7h 10h  not defined */
                        /* opcode F3h 0Fh C7h 11h  not defined */
                        /* opcode F3h 0Fh C7h 12h  not defined */
                        /* opcode F3h 0Fh C7h 13h  not defined */
                        /* opcode F3h 0Fh C7h 14h  not defined */
                        /* opcode F3h 0Fh C7h 15h  not defined */
                        /* opcode F3h 0Fh C7h 16h  not defined */
                        /* opcode F3h 0Fh C7h 17h  not defined */
                        /* opcode F3h 0Fh C7h 18h  not defined */
                        /* opcode F3h 0Fh C7h 19h  not defined */
                        /* opcode F3h 0Fh C7h 1Ah  not defined */
                        /* opcode F3h 0Fh C7h 1Bh  not defined */
                        /* opcode F3h 0Fh C7h 1Ch  not defined */
                        /* opcode F3h 0Fh C7h 1Dh  not defined */
                        /* opcode F3h 0Fh C7h 1Eh  not defined */
                        /* opcode F3h 0Fh C7h 1Fh  not defined */
                        /* opcode F3h 0Fh C7h 20h  not defined */
                        /* opcode F3h 0Fh C7h 21h  not defined */
                        /* opcode F3h 0Fh C7h 22h  not defined */
                        /* opcode F3h 0Fh C7h 23h  not defined */
                        /* opcode F3h 0Fh C7h 24h  not defined */
                        /* opcode F3h 0Fh C7h 25h  not defined */
                        /* opcode F3h 0Fh C7h 26h  not defined */
                        /* opcode F3h 0Fh C7h 27h  not defined */
                        /* opcode F3h 0Fh C7h 28h  not defined */
                        /* opcode F3h 0Fh C7h 29h  not defined */
                        /* opcode F3h 0Fh C7h 2Ah  not defined */
                        /* opcode F3h 0Fh C7h 2Bh  not defined */
                        /* opcode F3h 0Fh C7h 2Ch  not defined */
                        /* opcode F3h 0Fh C7h 2Dh  not defined */
                        /* opcode F3h 0Fh C7h 2Eh  not defined */
                        /* opcode F3h 0Fh C7h 2Fh  not defined */
                        case 0x30: /* F3h 0Fh C7h 30h VMXON w64(r/m) mod=0 reg=6 rm=0      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 mprefix(0xF3) */
                        case 0x31: /* F3h 0Fh C7h 31h VMXON w64(r/m) mod=0 reg=6 rm=1      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 mprefix(0xF3) */
                        case 0x32: /* F3h 0Fh C7h 32h VMXON w64(r/m) mod=0 reg=6 rm=2      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 mprefix(0xF3) */
                        case 0x33: /* F3h 0Fh C7h 33h VMXON w64(r/m) mod=0 reg=6 rm=3      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 mprefix(0xF3) */
                        case 0x34: /* F3h 0Fh C7h 34h VMXON w64(r/m) mod=0 reg=6 rm=4      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 mprefix(0xF3) */
                        case 0x35: /* F3h 0Fh C7h 35h VMXON w64(r/m) mod=0 reg=6 rm=5      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 mprefix(0xF3) */
                        case 0x36: /* F3h 0Fh C7h 36h VMXON w64(r/m) mod=0 reg=6 rm=6      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 mprefix(0xF3) */
                        case 0x37: /* F3h 0Fh C7h 37h VMXON w64(r/m) mod=0 reg=6 rm=7      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 mprefix(0xF3) */
                        case 0x70: /* F3h 0Fh C7h 70h VMXON w64(r/m) mod=1 reg=6 rm=0      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 mprefix(0xF3) */
                        case 0x71: /* F3h 0Fh C7h 71h VMXON w64(r/m) mod=1 reg=6 rm=1      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 mprefix(0xF3) */
                        case 0x72: /* F3h 0Fh C7h 72h VMXON w64(r/m) mod=1 reg=6 rm=2      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 mprefix(0xF3) */
                        case 0x73: /* F3h 0Fh C7h 73h VMXON w64(r/m) mod=1 reg=6 rm=3      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 mprefix(0xF3) */
                        case 0x74: /* F3h 0Fh C7h 74h VMXON w64(r/m) mod=1 reg=6 rm=4      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 mprefix(0xF3) */
                        case 0x75: /* F3h 0Fh C7h 75h VMXON w64(r/m) mod=1 reg=6 rm=5      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 mprefix(0xF3) */
                        case 0x76: /* F3h 0Fh C7h 76h VMXON w64(r/m) mod=1 reg=6 rm=6      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 mprefix(0xF3) */
                        case 0x77: /* F3h 0Fh C7h 77h VMXON w64(r/m) mod=1 reg=6 rm=7      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 mprefix(0xF3) */
                        case 0xB0: /* F3h 0Fh C7h B0h VMXON w64(r/m) mod=2 reg=6 rm=0      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 mprefix(0xF3) */
                        case 0xB1: /* F3h 0Fh C7h B1h VMXON w64(r/m) mod=2 reg=6 rm=1      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 mprefix(0xF3) */
                        case 0xB2: /* F3h 0Fh C7h B2h VMXON w64(r/m) mod=2 reg=6 rm=2      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 mprefix(0xF3) */
                        case 0xB3: /* F3h 0Fh C7h B3h VMXON w64(r/m) mod=2 reg=6 rm=3      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 mprefix(0xF3) */
                        case 0xB4: /* F3h 0Fh C7h B4h VMXON w64(r/m) mod=2 reg=6 rm=4      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 mprefix(0xF3) */
                        case 0xB5: /* F3h 0Fh C7h B5h VMXON w64(r/m) mod=2 reg=6 rm=5      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 mprefix(0xF3) */
                        case 0xB6: /* F3h 0Fh C7h B6h VMXON w64(r/m) mod=2 reg=6 rm=6      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 mprefix(0xF3) */
                        case 0xB7: /* F3h 0Fh C7h B7h VMXON w64(r/m) mod=2 reg=6 rm=7      spec: 0x0F 0xC7 mod/reg/rm /6 mod!=3 mprefix(0xF3) */
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"VMXON %s",IPDecPrint32(mrm,sib,disp,8,RC_REG,"w64"));
                            break;
                        /* opcode F3h 0Fh C7h 38h  not defined */
                        /* opcode F3h 0Fh C7h 39h  not defined */
                        /* opcode F3h 0Fh C7h 3Ah  not defined */
                        /* opcode F3h 0Fh C7h 3Bh  not defined */
                        /* opcode F3h 0Fh C7h 3Ch  not defined */
                        /* opcode F3h 0Fh C7h 3Dh  not defined */
                        /* opcode F3h 0Fh C7h 3Eh  not defined */
                        /* opcode F3h 0Fh C7h 3Fh  not defined */
                        /* opcode F3h 0Fh C7h 40h  not defined */
                        /* opcode F3h 0Fh C7h 41h  not defined */
                        /* opcode F3h 0Fh C7h 42h  not defined */
                        /* opcode F3h 0Fh C7h 43h  not defined */
                        /* opcode F3h 0Fh C7h 44h  not defined */
                        /* opcode F3h 0Fh C7h 45h  not defined */
                        /* opcode F3h 0Fh C7h 46h  not defined */
                        /* opcode F3h 0Fh C7h 47h  not defined */
                        /* opcode F3h 0Fh C7h 48h  not defined */
                        /* opcode F3h 0Fh C7h 49h  not defined */
                        /* opcode F3h 0Fh C7h 4Ah  not defined */
                        /* opcode F3h 0Fh C7h 4Bh  not defined */
                        /* opcode F3h 0Fh C7h 4Ch  not defined */
                        /* opcode F3h 0Fh C7h 4Dh  not defined */
                        /* opcode F3h 0Fh C7h 4Eh  not defined */
                        /* opcode F3h 0Fh C7h 4Fh  not defined */
                        /* opcode F3h 0Fh C7h 50h  not defined */
                        /* opcode F3h 0Fh C7h 51h  not defined */
                        /* opcode F3h 0Fh C7h 52h  not defined */
                        /* opcode F3h 0Fh C7h 53h  not defined */
                        /* opcode F3h 0Fh C7h 54h  not defined */
                        /* opcode F3h 0Fh C7h 55h  not defined */
                        /* opcode F3h 0Fh C7h 56h  not defined */
                        /* opcode F3h 0Fh C7h 57h  not defined */
                        /* opcode F3h 0Fh C7h 58h  not defined */
                        /* opcode F3h 0Fh C7h 59h  not defined */
                        /* opcode F3h 0Fh C7h 5Ah  not defined */
                        /* opcode F3h 0Fh C7h 5Bh  not defined */
                        /* opcode F3h 0Fh C7h 5Ch  not defined */
                        /* opcode F3h 0Fh C7h 5Dh  not defined */
                        /* opcode F3h 0Fh C7h 5Eh  not defined */
                        /* opcode F3h 0Fh C7h 5Fh  not defined */
                        /* opcode F3h 0Fh C7h 60h  not defined */
                        /* opcode F3h 0Fh C7h 61h  not defined */
                        /* opcode F3h 0Fh C7h 62h  not defined */
                        /* opcode F3h 0Fh C7h 63h  not defined */
                        /* opcode F3h 0Fh C7h 64h  not defined */
                        /* opcode F3h 0Fh C7h 65h  not defined */
                        /* opcode F3h 0Fh C7h 66h  not defined */
                        /* opcode F3h 0Fh C7h 67h  not defined */
                        /* opcode F3h 0Fh C7h 68h  not defined */
                        /* opcode F3h 0Fh C7h 69h  not defined */
                        /* opcode F3h 0Fh C7h 6Ah  not defined */
                        /* opcode F3h 0Fh C7h 6Bh  not defined */
                        /* opcode F3h 0Fh C7h 6Ch  not defined */
                        /* opcode F3h 0Fh C7h 6Dh  not defined */
                        /* opcode F3h 0Fh C7h 6Eh  not defined */
                        /* opcode F3h 0Fh C7h 6Fh  not defined */
                        /* opcode F3h 0Fh C7h 78h  not defined */
                        /* opcode F3h 0Fh C7h 79h  not defined */
                        /* opcode F3h 0Fh C7h 7Ah  not defined */
                        /* opcode F3h 0Fh C7h 7Bh  not defined */
                        /* opcode F3h 0Fh C7h 7Ch  not defined */
                        /* opcode F3h 0Fh C7h 7Dh  not defined */
                        /* opcode F3h 0Fh C7h 7Eh  not defined */
                        /* opcode F3h 0Fh C7h 7Fh  not defined */
                        /* opcode F3h 0Fh C7h 80h  not defined */
                        /* opcode F3h 0Fh C7h 81h  not defined */
                        /* opcode F3h 0Fh C7h 82h  not defined */
                        /* opcode F3h 0Fh C7h 83h  not defined */
                        /* opcode F3h 0Fh C7h 84h  not defined */
                        /* opcode F3h 0Fh C7h 85h  not defined */
                        /* opcode F3h 0Fh C7h 86h  not defined */
                        /* opcode F3h 0Fh C7h 87h  not defined */
                        /* opcode F3h 0Fh C7h 88h  not defined */
                        /* opcode F3h 0Fh C7h 89h  not defined */
                        /* opcode F3h 0Fh C7h 8Ah  not defined */
                        /* opcode F3h 0Fh C7h 8Bh  not defined */
                        /* opcode F3h 0Fh C7h 8Ch  not defined */
                        /* opcode F3h 0Fh C7h 8Dh  not defined */
                        /* opcode F3h 0Fh C7h 8Eh  not defined */
                        /* opcode F3h 0Fh C7h 8Fh  not defined */
                        /* opcode F3h 0Fh C7h 90h  not defined */
                        /* opcode F3h 0Fh C7h 91h  not defined */
                        /* opcode F3h 0Fh C7h 92h  not defined */
                        /* opcode F3h 0Fh C7h 93h  not defined */
                        /* opcode F3h 0Fh C7h 94h  not defined */
                        /* opcode F3h 0Fh C7h 95h  not defined */
                        /* opcode F3h 0Fh C7h 96h  not defined */
                        /* opcode F3h 0Fh C7h 97h  not defined */
                        /* opcode F3h 0Fh C7h 98h  not defined */
                        /* opcode F3h 0Fh C7h 99h  not defined */
                        /* opcode F3h 0Fh C7h 9Ah  not defined */
                        /* opcode F3h 0Fh C7h 9Bh  not defined */
                        /* opcode F3h 0Fh C7h 9Ch  not defined */
                        /* opcode F3h 0Fh C7h 9Dh  not defined */
                        /* opcode F3h 0Fh C7h 9Eh  not defined */
                        /* opcode F3h 0Fh C7h 9Fh  not defined */
                        /* opcode F3h 0Fh C7h A0h  not defined */
                        /* opcode F3h 0Fh C7h A1h  not defined */
                        /* opcode F3h 0Fh C7h A2h  not defined */
                        /* opcode F3h 0Fh C7h A3h  not defined */
                        /* opcode F3h 0Fh C7h A4h  not defined */
                        /* opcode F3h 0Fh C7h A5h  not defined */
                        /* opcode F3h 0Fh C7h A6h  not defined */
                        /* opcode F3h 0Fh C7h A7h  not defined */
                        /* opcode F3h 0Fh C7h A8h  not defined */
                        /* opcode F3h 0Fh C7h A9h  not defined */
                        /* opcode F3h 0Fh C7h AAh  not defined */
                        /* opcode F3h 0Fh C7h ABh  not defined */
                        /* opcode F3h 0Fh C7h ACh  not defined */
                        /* opcode F3h 0Fh C7h ADh  not defined */
                        /* opcode F3h 0Fh C7h AEh  not defined */
                        /* opcode F3h 0Fh C7h AFh  not defined */
                        /* opcode F3h 0Fh C7h B8h  not defined */
                        /* opcode F3h 0Fh C7h B9h  not defined */
                        /* opcode F3h 0Fh C7h BAh  not defined */
                        /* opcode F3h 0Fh C7h BBh  not defined */
                        /* opcode F3h 0Fh C7h BCh  not defined */
                        /* opcode F3h 0Fh C7h BDh  not defined */
                        /* opcode F3h 0Fh C7h BEh  not defined */
                        /* opcode F3h 0Fh C7h BFh  not defined */
                        /* opcode F3h 0Fh C7h C0h  not defined */
                        /* opcode F3h 0Fh C7h C1h  not defined */
                        /* opcode F3h 0Fh C7h C2h  not defined */
                        /* opcode F3h 0Fh C7h C3h  not defined */
                        /* opcode F3h 0Fh C7h C4h  not defined */
                        /* opcode F3h 0Fh C7h C5h  not defined */
                        /* opcode F3h 0Fh C7h C6h  not defined */
                        /* opcode F3h 0Fh C7h C7h  not defined */
                        /* opcode F3h 0Fh C7h C8h  not defined */
                        /* opcode F3h 0Fh C7h C9h  not defined */
                        /* opcode F3h 0Fh C7h CAh  not defined */
                        /* opcode F3h 0Fh C7h CBh  not defined */
                        /* opcode F3h 0Fh C7h CCh  not defined */
                        /* opcode F3h 0Fh C7h CDh  not defined */
                        /* opcode F3h 0Fh C7h CEh  not defined */
                        /* opcode F3h 0Fh C7h CFh  not defined */
                        /* opcode F3h 0Fh C7h D0h  not defined */
                        /* opcode F3h 0Fh C7h D1h  not defined */
                        /* opcode F3h 0Fh C7h D2h  not defined */
                        /* opcode F3h 0Fh C7h D3h  not defined */
                        /* opcode F3h 0Fh C7h D4h  not defined */
                        /* opcode F3h 0Fh C7h D5h  not defined */
                        /* opcode F3h 0Fh C7h D6h  not defined */
                        /* opcode F3h 0Fh C7h D7h  not defined */
                        /* opcode F3h 0Fh C7h D8h  not defined */
                        /* opcode F3h 0Fh C7h D9h  not defined */
                        /* opcode F3h 0Fh C7h DAh  not defined */
                        /* opcode F3h 0Fh C7h DBh  not defined */
                        /* opcode F3h 0Fh C7h DCh  not defined */
                        /* opcode F3h 0Fh C7h DDh  not defined */
                        /* opcode F3h 0Fh C7h DEh  not defined */
                        /* opcode F3h 0Fh C7h DFh  not defined */
                        /* opcode F3h 0Fh C7h E0h  not defined */
                        /* opcode F3h 0Fh C7h E1h  not defined */
                        /* opcode F3h 0Fh C7h E2h  not defined */
                        /* opcode F3h 0Fh C7h E3h  not defined */
                        /* opcode F3h 0Fh C7h E4h  not defined */
                        /* opcode F3h 0Fh C7h E5h  not defined */
                        /* opcode F3h 0Fh C7h E6h  not defined */
                        /* opcode F3h 0Fh C7h E7h  not defined */
                        /* opcode F3h 0Fh C7h E8h  not defined */
                        /* opcode F3h 0Fh C7h E9h  not defined */
                        /* opcode F3h 0Fh C7h EAh  not defined */
                        /* opcode F3h 0Fh C7h EBh  not defined */
                        /* opcode F3h 0Fh C7h ECh  not defined */
                        /* opcode F3h 0Fh C7h EDh  not defined */
                        /* opcode F3h 0Fh C7h EEh  not defined */
                        /* opcode F3h 0Fh C7h EFh  not defined */
                        /* opcode F3h 0Fh C7h F0h  not defined */
                        /* opcode F3h 0Fh C7h F1h  not defined */
                        /* opcode F3h 0Fh C7h F2h  not defined */
                        /* opcode F3h 0Fh C7h F3h  not defined */
                        /* opcode F3h 0Fh C7h F4h  not defined */
                        /* opcode F3h 0Fh C7h F5h  not defined */
                        /* opcode F3h 0Fh C7h F6h  not defined */
                        /* opcode F3h 0Fh C7h F7h  not defined */
                        /* opcode F3h 0Fh C7h F8h  not defined */
                        /* opcode F3h 0Fh C7h F9h  not defined */
                        /* opcode F3h 0Fh C7h FAh  not defined */
                        /* opcode F3h 0Fh C7h FBh  not defined */
                        /* opcode F3h 0Fh C7h FCh  not defined */
                        /* opcode F3h 0Fh C7h FDh  not defined */
                        /* opcode F3h 0Fh C7h FEh  not defined */
                        /* opcode F3h 0Fh C7h FFh  not defined */
                        default:
                            goto _x86decode_begin_code32_addr32_opcode_parse_0FC7; /* Fall through to normal 0x0F 0xC7 opcode handling */
                    };
/* End of opcodes starting with F3h 0Fh C7h */
                    break;
                /* opcode F3h 0Fh C8h  not defined */
                /* opcode F3h 0Fh C9h  not defined */
                /* opcode F3h 0Fh CAh  not defined */
                /* opcode F3h 0Fh CBh  not defined */
                /* opcode F3h 0Fh CCh  not defined */
                /* opcode F3h 0Fh CDh  not defined */
                /* opcode F3h 0Fh CEh  not defined */
                /* opcode F3h 0Fh CFh  not defined */
                /* opcode F3h 0Fh D0h  not defined */
                /* opcode F3h 0Fh D1h  not defined */
                /* opcode F3h 0Fh D2h  not defined */
                /* opcode F3h 0Fh D3h  not defined */
                /* opcode F3h 0Fh D4h  not defined */
                /* opcode F3h 0Fh D5h  not defined */
                case 0xD6: /* F3h 0Fh D6h        spec:  */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    _x86decode_begin_code32_addr32_opcode_parse_F30FD6:
/* Opcodes starting with F3h 0Fh D6h */
                    switch (mrm.byte) {
                        /* opcode F3h 0Fh D6h 00h  not defined */
                        /* opcode F3h 0Fh D6h 01h  not defined */
                        /* opcode F3h 0Fh D6h 02h  not defined */
                        /* opcode F3h 0Fh D6h 03h  not defined */
                        /* opcode F3h 0Fh D6h 04h  not defined */
                        /* opcode F3h 0Fh D6h 05h  not defined */
                        /* opcode F3h 0Fh D6h 06h  not defined */
                        /* opcode F3h 0Fh D6h 07h  not defined */
                        /* opcode F3h 0Fh D6h 08h  not defined */
                        /* opcode F3h 0Fh D6h 09h  not defined */
                        /* opcode F3h 0Fh D6h 0Ah  not defined */
                        /* opcode F3h 0Fh D6h 0Bh  not defined */
                        /* opcode F3h 0Fh D6h 0Ch  not defined */
                        /* opcode F3h 0Fh D6h 0Dh  not defined */
                        /* opcode F3h 0Fh D6h 0Eh  not defined */
                        /* opcode F3h 0Fh D6h 0Fh  not defined */
                        /* opcode F3h 0Fh D6h 10h  not defined */
                        /* opcode F3h 0Fh D6h 11h  not defined */
                        /* opcode F3h 0Fh D6h 12h  not defined */
                        /* opcode F3h 0Fh D6h 13h  not defined */
                        /* opcode F3h 0Fh D6h 14h  not defined */
                        /* opcode F3h 0Fh D6h 15h  not defined */
                        /* opcode F3h 0Fh D6h 16h  not defined */
                        /* opcode F3h 0Fh D6h 17h  not defined */
                        /* opcode F3h 0Fh D6h 18h  not defined */
                        /* opcode F3h 0Fh D6h 19h  not defined */
                        /* opcode F3h 0Fh D6h 1Ah  not defined */
                        /* opcode F3h 0Fh D6h 1Bh  not defined */
                        /* opcode F3h 0Fh D6h 1Ch  not defined */
                        /* opcode F3h 0Fh D6h 1Dh  not defined */
                        /* opcode F3h 0Fh D6h 1Eh  not defined */
                        /* opcode F3h 0Fh D6h 1Fh  not defined */
                        /* opcode F3h 0Fh D6h 20h  not defined */
                        /* opcode F3h 0Fh D6h 21h  not defined */
                        /* opcode F3h 0Fh D6h 22h  not defined */
                        /* opcode F3h 0Fh D6h 23h  not defined */
                        /* opcode F3h 0Fh D6h 24h  not defined */
                        /* opcode F3h 0Fh D6h 25h  not defined */
                        /* opcode F3h 0Fh D6h 26h  not defined */
                        /* opcode F3h 0Fh D6h 27h  not defined */
                        /* opcode F3h 0Fh D6h 28h  not defined */
                        /* opcode F3h 0Fh D6h 29h  not defined */
                        /* opcode F3h 0Fh D6h 2Ah  not defined */
                        /* opcode F3h 0Fh D6h 2Bh  not defined */
                        /* opcode F3h 0Fh D6h 2Ch  not defined */
                        /* opcode F3h 0Fh D6h 2Dh  not defined */
                        /* opcode F3h 0Fh D6h 2Eh  not defined */
                        /* opcode F3h 0Fh D6h 2Fh  not defined */
                        /* opcode F3h 0Fh D6h 30h  not defined */
                        /* opcode F3h 0Fh D6h 31h  not defined */
                        /* opcode F3h 0Fh D6h 32h  not defined */
                        /* opcode F3h 0Fh D6h 33h  not defined */
                        /* opcode F3h 0Fh D6h 34h  not defined */
                        /* opcode F3h 0Fh D6h 35h  not defined */
                        /* opcode F3h 0Fh D6h 36h  not defined */
                        /* opcode F3h 0Fh D6h 37h  not defined */
                        /* opcode F3h 0Fh D6h 38h  not defined */
                        /* opcode F3h 0Fh D6h 39h  not defined */
                        /* opcode F3h 0Fh D6h 3Ah  not defined */
                        /* opcode F3h 0Fh D6h 3Bh  not defined */
                        /* opcode F3h 0Fh D6h 3Ch  not defined */
                        /* opcode F3h 0Fh D6h 3Dh  not defined */
                        /* opcode F3h 0Fh D6h 3Eh  not defined */
                        /* opcode F3h 0Fh D6h 3Fh  not defined */
                        /* opcode F3h 0Fh D6h 40h  not defined */
                        /* opcode F3h 0Fh D6h 41h  not defined */
                        /* opcode F3h 0Fh D6h 42h  not defined */
                        /* opcode F3h 0Fh D6h 43h  not defined */
                        /* opcode F3h 0Fh D6h 44h  not defined */
                        /* opcode F3h 0Fh D6h 45h  not defined */
                        /* opcode F3h 0Fh D6h 46h  not defined */
                        /* opcode F3h 0Fh D6h 47h  not defined */
                        /* opcode F3h 0Fh D6h 48h  not defined */
                        /* opcode F3h 0Fh D6h 49h  not defined */
                        /* opcode F3h 0Fh D6h 4Ah  not defined */
                        /* opcode F3h 0Fh D6h 4Bh  not defined */
                        /* opcode F3h 0Fh D6h 4Ch  not defined */
                        /* opcode F3h 0Fh D6h 4Dh  not defined */
                        /* opcode F3h 0Fh D6h 4Eh  not defined */
                        /* opcode F3h 0Fh D6h 4Fh  not defined */
                        /* opcode F3h 0Fh D6h 50h  not defined */
                        /* opcode F3h 0Fh D6h 51h  not defined */
                        /* opcode F3h 0Fh D6h 52h  not defined */
                        /* opcode F3h 0Fh D6h 53h  not defined */
                        /* opcode F3h 0Fh D6h 54h  not defined */
                        /* opcode F3h 0Fh D6h 55h  not defined */
                        /* opcode F3h 0Fh D6h 56h  not defined */
                        /* opcode F3h 0Fh D6h 57h  not defined */
                        /* opcode F3h 0Fh D6h 58h  not defined */
                        /* opcode F3h 0Fh D6h 59h  not defined */
                        /* opcode F3h 0Fh D6h 5Ah  not defined */
                        /* opcode F3h 0Fh D6h 5Bh  not defined */
                        /* opcode F3h 0Fh D6h 5Ch  not defined */
                        /* opcode F3h 0Fh D6h 5Dh  not defined */
                        /* opcode F3h 0Fh D6h 5Eh  not defined */
                        /* opcode F3h 0Fh D6h 5Fh  not defined */
                        /* opcode F3h 0Fh D6h 60h  not defined */
                        /* opcode F3h 0Fh D6h 61h  not defined */
                        /* opcode F3h 0Fh D6h 62h  not defined */
                        /* opcode F3h 0Fh D6h 63h  not defined */
                        /* opcode F3h 0Fh D6h 64h  not defined */
                        /* opcode F3h 0Fh D6h 65h  not defined */
                        /* opcode F3h 0Fh D6h 66h  not defined */
                        /* opcode F3h 0Fh D6h 67h  not defined */
                        /* opcode F3h 0Fh D6h 68h  not defined */
                        /* opcode F3h 0Fh D6h 69h  not defined */
                        /* opcode F3h 0Fh D6h 6Ah  not defined */
                        /* opcode F3h 0Fh D6h 6Bh  not defined */
                        /* opcode F3h 0Fh D6h 6Ch  not defined */
                        /* opcode F3h 0Fh D6h 6Dh  not defined */
                        /* opcode F3h 0Fh D6h 6Eh  not defined */
                        /* opcode F3h 0Fh D6h 6Fh  not defined */
                        /* opcode F3h 0Fh D6h 70h  not defined */
                        /* opcode F3h 0Fh D6h 71h  not defined */
                        /* opcode F3h 0Fh D6h 72h  not defined */
                        /* opcode F3h 0Fh D6h 73h  not defined */
                        /* opcode F3h 0Fh D6h 74h  not defined */
                        /* opcode F3h 0Fh D6h 75h  not defined */
                        /* opcode F3h 0Fh D6h 76h  not defined */
                        /* opcode F3h 0Fh D6h 77h  not defined */
                        /* opcode F3h 0Fh D6h 78h  not defined */
                        /* opcode F3h 0Fh D6h 79h  not defined */
                        /* opcode F3h 0Fh D6h 7Ah  not defined */
                        /* opcode F3h 0Fh D6h 7Bh  not defined */
                        /* opcode F3h 0Fh D6h 7Ch  not defined */
                        /* opcode F3h 0Fh D6h 7Dh  not defined */
                        /* opcode F3h 0Fh D6h 7Eh  not defined */
                        /* opcode F3h 0Fh D6h 7Fh  not defined */
                        /* opcode F3h 0Fh D6h 80h  not defined */
                        /* opcode F3h 0Fh D6h 81h  not defined */
                        /* opcode F3h 0Fh D6h 82h  not defined */
                        /* opcode F3h 0Fh D6h 83h  not defined */
                        /* opcode F3h 0Fh D6h 84h  not defined */
                        /* opcode F3h 0Fh D6h 85h  not defined */
                        /* opcode F3h 0Fh D6h 86h  not defined */
                        /* opcode F3h 0Fh D6h 87h  not defined */
                        /* opcode F3h 0Fh D6h 88h  not defined */
                        /* opcode F3h 0Fh D6h 89h  not defined */
                        /* opcode F3h 0Fh D6h 8Ah  not defined */
                        /* opcode F3h 0Fh D6h 8Bh  not defined */
                        /* opcode F3h 0Fh D6h 8Ch  not defined */
                        /* opcode F3h 0Fh D6h 8Dh  not defined */
                        /* opcode F3h 0Fh D6h 8Eh  not defined */
                        /* opcode F3h 0Fh D6h 8Fh  not defined */
                        /* opcode F3h 0Fh D6h 90h  not defined */
                        /* opcode F3h 0Fh D6h 91h  not defined */
                        /* opcode F3h 0Fh D6h 92h  not defined */
                        /* opcode F3h 0Fh D6h 93h  not defined */
                        /* opcode F3h 0Fh D6h 94h  not defined */
                        /* opcode F3h 0Fh D6h 95h  not defined */
                        /* opcode F3h 0Fh D6h 96h  not defined */
                        /* opcode F3h 0Fh D6h 97h  not defined */
                        /* opcode F3h 0Fh D6h 98h  not defined */
                        /* opcode F3h 0Fh D6h 99h  not defined */
                        /* opcode F3h 0Fh D6h 9Ah  not defined */
                        /* opcode F3h 0Fh D6h 9Bh  not defined */
                        /* opcode F3h 0Fh D6h 9Ch  not defined */
                        /* opcode F3h 0Fh D6h 9Dh  not defined */
                        /* opcode F3h 0Fh D6h 9Eh  not defined */
                        /* opcode F3h 0Fh D6h 9Fh  not defined */
                        /* opcode F3h 0Fh D6h A0h  not defined */
                        /* opcode F3h 0Fh D6h A1h  not defined */
                        /* opcode F3h 0Fh D6h A2h  not defined */
                        /* opcode F3h 0Fh D6h A3h  not defined */
                        /* opcode F3h 0Fh D6h A4h  not defined */
                        /* opcode F3h 0Fh D6h A5h  not defined */
                        /* opcode F3h 0Fh D6h A6h  not defined */
                        /* opcode F3h 0Fh D6h A7h  not defined */
                        /* opcode F3h 0Fh D6h A8h  not defined */
                        /* opcode F3h 0Fh D6h A9h  not defined */
                        /* opcode F3h 0Fh D6h AAh  not defined */
                        /* opcode F3h 0Fh D6h ABh  not defined */
                        /* opcode F3h 0Fh D6h ACh  not defined */
                        /* opcode F3h 0Fh D6h ADh  not defined */
                        /* opcode F3h 0Fh D6h AEh  not defined */
                        /* opcode F3h 0Fh D6h AFh  not defined */
                        /* opcode F3h 0Fh D6h B0h  not defined */
                        /* opcode F3h 0Fh D6h B1h  not defined */
                        /* opcode F3h 0Fh D6h B2h  not defined */
                        /* opcode F3h 0Fh D6h B3h  not defined */
                        /* opcode F3h 0Fh D6h B4h  not defined */
                        /* opcode F3h 0Fh D6h B5h  not defined */
                        /* opcode F3h 0Fh D6h B6h  not defined */
                        /* opcode F3h 0Fh D6h B7h  not defined */
                        /* opcode F3h 0Fh D6h B8h  not defined */
                        /* opcode F3h 0Fh D6h B9h  not defined */
                        /* opcode F3h 0Fh D6h BAh  not defined */
                        /* opcode F3h 0Fh D6h BBh  not defined */
                        /* opcode F3h 0Fh D6h BCh  not defined */
                        /* opcode F3h 0Fh D6h BDh  not defined */
                        /* opcode F3h 0Fh D6h BEh  not defined */
                        /* opcode F3h 0Fh D6h BFh  not defined */
                        case 0xC0: /* F3h 0Fh D6h C0h MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=0 rm=0      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xC1: /* F3h 0Fh D6h C1h MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=0 rm=1      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xC2: /* F3h 0Fh D6h C2h MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=0 rm=2      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xC3: /* F3h 0Fh D6h C3h MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=0 rm=3      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xC4: /* F3h 0Fh D6h C4h MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=0 rm=4      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xC5: /* F3h 0Fh D6h C5h MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=0 rm=5      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xC6: /* F3h 0Fh D6h C6h MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=0 rm=6      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xC7: /* F3h 0Fh D6h C7h MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=0 rm=7      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xC8: /* F3h 0Fh D6h C8h MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=1 rm=0      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xC9: /* F3h 0Fh D6h C9h MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=1 rm=1      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xCA: /* F3h 0Fh D6h CAh MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=1 rm=2      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xCB: /* F3h 0Fh D6h CBh MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=1 rm=3      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xCC: /* F3h 0Fh D6h CCh MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=1 rm=4      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xCD: /* F3h 0Fh D6h CDh MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=1 rm=5      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xCE: /* F3h 0Fh D6h CEh MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=1 rm=6      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xCF: /* F3h 0Fh D6h CFh MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=1 rm=7      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xD0: /* F3h 0Fh D6h D0h MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=2 rm=0      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xD1: /* F3h 0Fh D6h D1h MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=2 rm=1      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xD2: /* F3h 0Fh D6h D2h MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=2 rm=2      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xD3: /* F3h 0Fh D6h D3h MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=2 rm=3      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xD4: /* F3h 0Fh D6h D4h MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=2 rm=4      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xD5: /* F3h 0Fh D6h D5h MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=2 rm=5      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xD6: /* F3h 0Fh D6h D6h MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=2 rm=6      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xD7: /* F3h 0Fh D6h D7h MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=2 rm=7      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xD8: /* F3h 0Fh D6h D8h MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=3 rm=0      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xD9: /* F3h 0Fh D6h D9h MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=3 rm=1      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xDA: /* F3h 0Fh D6h DAh MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=3 rm=2      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xDB: /* F3h 0Fh D6h DBh MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=3 rm=3      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xDC: /* F3h 0Fh D6h DCh MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=3 rm=4      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xDD: /* F3h 0Fh D6h DDh MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=3 rm=5      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xDE: /* F3h 0Fh D6h DEh MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=3 rm=6      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xDF: /* F3h 0Fh D6h DFh MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=3 rm=7      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xE0: /* F3h 0Fh D6h E0h MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=4 rm=0      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xE1: /* F3h 0Fh D6h E1h MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=4 rm=1      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xE2: /* F3h 0Fh D6h E2h MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=4 rm=2      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xE3: /* F3h 0Fh D6h E3h MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=4 rm=3      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xE4: /* F3h 0Fh D6h E4h MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=4 rm=4      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xE5: /* F3h 0Fh D6h E5h MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=4 rm=5      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xE6: /* F3h 0Fh D6h E6h MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=4 rm=6      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xE7: /* F3h 0Fh D6h E7h MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=4 rm=7      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xE8: /* F3h 0Fh D6h E8h MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=5 rm=0      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xE9: /* F3h 0Fh D6h E9h MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=5 rm=1      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xEA: /* F3h 0Fh D6h EAh MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=5 rm=2      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xEB: /* F3h 0Fh D6h EBh MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=5 rm=3      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xEC: /* F3h 0Fh D6h ECh MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=5 rm=4      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xED: /* F3h 0Fh D6h EDh MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=5 rm=5      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xEE: /* F3h 0Fh D6h EEh MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=5 rm=6      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xEF: /* F3h 0Fh D6h EFh MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=5 rm=7      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xF0: /* F3h 0Fh D6h F0h MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=6 rm=0      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xF1: /* F3h 0Fh D6h F1h MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=6 rm=1      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xF2: /* F3h 0Fh D6h F2h MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=6 rm=2      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xF3: /* F3h 0Fh D6h F3h MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=6 rm=3      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xF4: /* F3h 0Fh D6h F4h MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=6 rm=4      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xF5: /* F3h 0Fh D6h F5h MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=6 rm=5      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xF6: /* F3h 0Fh D6h F6h MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=6 rm=6      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xF7: /* F3h 0Fh D6h F7h MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=6 rm=7      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xF8: /* F3h 0Fh D6h F8h MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=7 rm=0      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xF9: /* F3h 0Fh D6h F9h MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=7 rm=1      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xFA: /* F3h 0Fh D6h FAh MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=7 rm=2      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xFB: /* F3h 0Fh D6h FBh MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=7 rm=3      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xFC: /* F3h 0Fh D6h FCh MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=7 rm=4      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xFD: /* F3h 0Fh D6h FDh MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=7 rm=5      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xFE: /* F3h 0Fh D6h FEh MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=7 rm=6      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                        case 0xFF: /* F3h 0Fh D6h FFh MOVQ2DQ sse(reg),mmx(r/m) mod=3 reg=7 rm=7      spec: 0x0F 0xD6 mod/reg/rm mprefix(0xF3) mod==3 */
                            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MOVQ2DQ XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,8,RC_MMXREG,""));
                            break;
                        default:
                            goto _x86decode_illegal_opcode; /* non-mandatory fallback does not exist */
                    };
/* End of opcodes starting with F3h 0Fh D6h */
                    break;
                /* opcode F3h 0Fh D7h  not defined */
                /* opcode F3h 0Fh D8h  not defined */
                /* opcode F3h 0Fh D9h  not defined */
                /* opcode F3h 0Fh DAh  not defined */
                /* opcode F3h 0Fh DBh  not defined */
                /* opcode F3h 0Fh DCh  not defined */
                /* opcode F3h 0Fh DDh  not defined */
                /* opcode F3h 0Fh DEh  not defined */
                /* opcode F3h 0Fh DFh  not defined */
                /* opcode F3h 0Fh E0h  not defined */
                /* opcode F3h 0Fh E1h  not defined */
                /* opcode F3h 0Fh E2h  not defined */
                /* opcode F3h 0Fh E3h  not defined */
                /* opcode F3h 0Fh E4h  not defined */
                /* opcode F3h 0Fh E5h  not defined */
                case 0xE6: /* F3h 0Fh E6h CVTDQ2PD sse(reg),sse(r/m)      spec: 0x0F 0xE6 mod/reg/rm mprefix(0xF3) */
                    IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
                    ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CVTDQ2PD XMM%u,%s",mrm.reg(),IPDecPrint32(mrm,sib,disp,16,RC_SSEREG,""));
                    break;
                /* opcode F3h 0Fh E7h  not defined */
                /* opcode F3h 0Fh E8h  not defined */
                /* opcode F3h 0Fh E9h  not defined */
                /* opcode F3h 0Fh EAh  not defined */
                /* opcode F3h 0Fh EBh  not defined */
                /* opcode F3h 0Fh ECh  not defined */
                /* opcode F3h 0Fh EDh  not defined */
                /* opcode F3h 0Fh EEh  not defined */
                /* opcode F3h 0Fh EFh  not defined */
                /* opcode F3h 0Fh F0h  not defined */
                /* opcode F3h 0Fh F1h  not defined */
                /* opcode F3h 0Fh F2h  not defined */
                /* opcode F3h 0Fh F3h  not defined */
                /* opcode F3h 0Fh F4h  not defined */
                /* opcode F3h 0Fh F5h  not defined */
                /* opcode F3h 0Fh F6h  not defined */
                /* opcode F3h 0Fh F7h  not defined */
                /* opcode F3h 0Fh F8h  not defined */
                /* opcode F3h 0Fh F9h  not defined */
                /* opcode F3h 0Fh FAh  not defined */
                /* opcode F3h 0Fh FBh  not defined */
                /* opcode F3h 0Fh FCh  not defined */
                /* opcode F3h 0Fh FDh  not defined */
                /* opcode F3h 0Fh FEh  not defined */
                /* opcode F3h 0Fh FFh  not defined */
                default:
                    goto _x86decode_begin_code32_addr32_opcode_parse_0F; /* Fall through to normal 0x0F opcode handling */
            };
/* End of opcodes starting with F3h 0Fh */
        }
        else if (op == 0x90) {
            ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PAUSE");
            break;
        }
        else {
            goto _x86decode_begin_code32_addr32_opcode_parse_;
        }
        break;
    case 0xF4: /* F4h HLT       spec: 0xF4 */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"HLT");
        break;
    case 0xF5: /* F5h CMC       spec: 0xF5 */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CMC");
        break;
    case 0xF6: /* F6h        spec:  */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        _x86decode_begin_code32_addr32_opcode_parse_F6:
/* Opcodes starting with F6h */
        switch (mrm.reg()) {
            case 0: /* F6h 00h TESTb b(r/m),i reg=0      spec: 0xF6 mod/reg/rm /0 ib */
            case 1: /* F6h 08h TESTb b(r/m),i reg=1      spec: 0xF6 mod/reg/rm /1 ib */
                imm=IPFB();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"TESTb %s,0x%02lX",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"),(unsigned long)((uint32_t)imm));
                break;
            case 2: /* F6h 10h NOTb b(r/m) reg=2      spec: 0xF6 mod/reg/rm /2 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"NOTb %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 3: /* F6h 18h NEGb b(r/m) reg=3      spec: 0xF6 mod/reg/rm /3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"NEGb %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 4: /* F6h 20h MULb b(r/m) reg=4      spec: 0xF6 mod/reg/rm /4 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MULb %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 5: /* F6h 28h IMULb b(r/m) reg=5      spec: 0xF6 mod/reg/rm /5 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"IMULb %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 6: /* F6h 30h DIVb b(r/m) reg=6      spec: 0xF6 mod/reg/rm /6 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"DIVb %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 7: /* F6h 38h IDIVb b(r/m) reg=7      spec: 0xF6 mod/reg/rm /7 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"IDIVb %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            default:
                goto _x86decode_illegal_opcode;
        };
/* End of opcodes starting with F6h */
        break;
    case 0xF7: /* F7h        spec:  */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        _x86decode_begin_code32_addr32_opcode_parse_F7:
/* Opcodes starting with F7h */
        switch (mrm.reg()) {
            case 0: /* F7h 00h TESTd w(r/m),i reg=0      spec: 0xF7 mod/reg/rm /0 iw */
            case 1: /* F7h 08h TESTd w(r/m),i reg=1      spec: 0xF7 mod/reg/rm /1 iw */
                imm=IPFcodeW();
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"TESTd %s,0x%08lX",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"),(unsigned long)((uint32_t)imm));
                break;
            case 2: /* F7h 10h NOTd w(r/m) reg=2      spec: 0xF7 mod/reg/rm /2 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"NOTd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 3: /* F7h 18h NEGd w(r/m) reg=3      spec: 0xF7 mod/reg/rm /3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"NEGd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 4: /* F7h 20h MULd w(r/m) reg=4      spec: 0xF7 mod/reg/rm /4 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"MULd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 5: /* F7h 28h IMULd w(r/m) reg=5      spec: 0xF7 mod/reg/rm /5 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"IMULd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 6: /* F7h 30h DIVd w(r/m) reg=6      spec: 0xF7 mod/reg/rm /6 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"DIVd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 7: /* F7h 38h IDIVd w(r/m) reg=7      spec: 0xF7 mod/reg/rm /7 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"IDIVd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            default:
                goto _x86decode_illegal_opcode;
        };
/* End of opcodes starting with F7h */
        break;
    case 0xF8: /* F8h CLC       spec: 0xF8 */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CLC");
        break;
    case 0xF9: /* F9h STC       spec: 0xF9 */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"STC");
        break;
    case 0xFA: /* FAh CLI       spec: 0xFA */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CLI");
        break;
    case 0xFB: /* FBh STI       spec: 0xFB */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"STI");
        break;
    case 0xFC: /* FCh CLD       spec: 0xFC */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CLD");
        break;
    case 0xFD: /* FDh STD       spec: 0xFD */
        ipw += snprintf(ipw,(size_t)(ipwf-ipw),"STD");
        break;
    case 0xFE: /* FEh        spec:  */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        _x86decode_begin_code32_addr32_opcode_parse_FE:
/* Opcodes starting with FEh */
        switch (mrm.reg()) {
            case 0: /* FEh 00h INCb b(r/m) reg=0      spec: 0xFE mod/reg/rm /0 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"INCb %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            case 1: /* FEh 08h DECb b(r/m) reg=1      spec: 0xFE mod/reg/rm /1 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"DECb %s",IPDecPrint32(mrm,sib,disp,1,RC_REG,"b"));
                break;
            /* reg 2 not defined */
            /* reg 3 not defined */
            /* reg 4 not defined */
            /* reg 5 not defined */
            /* reg 6 not defined */
            /* reg 7 not defined */
            default:
                goto _x86decode_illegal_opcode;
        };
/* End of opcodes starting with FEh */
        break;
    case 0xFF: /* FFh        spec:  */
        IPFB_mrm_sib_disp_a32_read(mrm,sib,disp);
        _x86decode_begin_code32_addr32_opcode_parse_FF:
/* Opcodes starting with FFh */
        switch (mrm.reg()) {
            case 0: /* FFh 00h INCd w(r/m) reg=0      spec: 0xFF mod/reg/rm /0 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"INCd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 1: /* FFh 08h DECd w(r/m) reg=1      spec: 0xFF mod/reg/rm /1 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"DECd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 2: /* FFh 10h CALLd w(r/m) reg=2      spec: 0xFF mod/reg/rm /2 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CALLd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 3: /* FFh 18h CALLFd w(r/m) reg=3      spec: 0xFF mod/reg/rm /3 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"CALLFd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 4: /* FFh 20h JMPd w(r/m) reg=4      spec: 0xFF mod/reg/rm /4 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JMPd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 5: /* FFh 28h JMPFd w(r/m) reg=5      spec: 0xFF mod/reg/rm /5 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"JMPFd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            case 6: /* FFh 30h PUSHd w(r/m) reg=6      spec: 0xFF mod/reg/rm /6 */
                ipw += snprintf(ipw,(size_t)(ipwf-ipw),"PUSHd %s",IPDecPrint32(mrm,sib,disp,4,RC_REG,"d"));
                break;
            /* reg 7 not defined */
            default:
                goto _x86decode_illegal_opcode;
        };
/* End of opcodes starting with FFh */
        break;
    default:
        goto _x86decode_illegal_opcode;
};
#undef IPFaddrW
#undef IPFaddrWsigned
#undef IPFcodeW
#undef IPFcodeWsigned
