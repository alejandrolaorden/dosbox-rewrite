
; Pentium MMX
opcode 0x0F 0x60 mod/reg/rm:                    "PUNPCKLBW" mmx(reg),mmx(r/m)               ; Unpack Low Data                           00001111 01100000
opcode 0x0F 0x61 mod/reg/rm:                    "PUNPCKLWD" mmx(reg),mmx(r/m)               ; Unpack Low Data                           00001111 01100001
opcode 0x0F 0x62 mod/reg/rm:                    "PUNPCKLWQ" mmx(reg),mmx(r/m)               ; Unpack Low Data                           00001111 01100010
opcode 0x0F 0x63 mod/reg/rm:                    "PACKSSWB" mmx(reg),mmx(r/m)                ; Pack with Signed Saturation               00001111 01100011
opcode 0x0F 0x64 mod/reg/rm:                    "PCMPGTB" mmx(reg),mmx(r/m)                 ; Compare Packed Signed Ints for Greater Than
opcode 0x0F 0x65 mod/reg/rm:                    "PCMPGTW" mmx(reg),mmx(r/m)                 ; Compare Packed Signed Ints for Greater Than
opcode 0x0F 0x66 mod/reg/rm:                    "PCMPGTD" mmx(reg),mmx(r/m)                 ; Compare Packed Signed Ints for Greater Than
opcode 0x0F 0x67 mod/reg/rm:                    "PACKUSWB" mmx(reg),mmx(r/m)                ; Pack with Unsigned Saturation
opcode 0x0F 0x68 mod/reg/rm:                    "PUNPCKHBW" mmx(reg),mmx(r/m)               ; Unpack High Data
opcode 0x0F 0x69 mod/reg/rm:                    "PUNPCKHWD" mmx(reg),mmx(r/m)               ; Unpack High Data
opcode 0x0F 0x6A mod/reg/rm:                    "PUNPCKHDQ" mmx(reg),mmx(r/m)               ; Unpack High Data
opcode 0x0F 0x6B mod/reg/rm:                    "PACKSSDW" mmx(reg),mmx(r/m)                ; Pack with Signed Saturation
opcode 0x0F 0x6E mod/reg/rm:                    "MOVD" mmx(reg),w32(r/m)                    ; Move Doubleword
opcode 0x0F 0x7E mod/reg/rm:                    "MOVD" w32(r/m),mmx(reg)                    ; Move Doubleword
opcode 0x0F 0x6F mod/reg/rm:                    "MOVQ" mmx(reg),mmx(r/m)                    ; Move Quadword
opcode 0x0F 0x7F mod/reg/rm:                    "MOVQ" mmx(r/m),mmx(reg)                    ; Move Quadword
opcode 0x0F 0x71 mod/reg/rm /2 ib:              "PSRLW" mmx(r/m),i                          ; Shift Packed Data Right Logical
opcode 0x0F 0xD1 mod/reg/rm:                    "PSRLW" mmx(reg),mmx(r/m)                   ; Shift Packed Data Right Logical
opcode 0x0F 0x71 mod/reg/rm /4 ib:              "PSRAW" mmx(r/m),i                          ; Shift Packed Data Right Arithmetic
opcode 0x0F 0xE1 mod/reg/rm:                    "PSRAW" mmx(reg),mmx(r/m)                   ; Shift Packed Data Right Arithmetic
opcode 0x0F 0x71 mod/reg/rm /6 ib:              "PSLLW" mmx(r/m),i                          ; Shift Packed Data Left Logical
opcode 0x0F 0xF1 mod/reg/rm:                    "PSLLW" mmx(reg),mmx(r/m)                   ; Shift Packed Data Left Logical
opcode 0x0F 0x72 mod/reg/rm /2 ib:              "PSRLD" mmx(r/m),i                          ; Shift Double Quadword Right Logical
opcode 0x0F 0xD2 mod/reg/rm:                    "PSRLD" mmx(reg),mmx(r/m)                   ; Shift Double Quadword Right Logical
opcode 0x0F 0x72 mod/reg/rm /4 ib:              "PSRAD" mmx(r/m),i                          ; Shift Packed Data Right Arithmetic
opcode 0x0F 0xE2 mod/reg/rm:                    "PSRAD" mmx(reg),mmx(r/m)                   ; Shift Packed Data Right Arithmetic
opcode 0x0F 0x72 mod/reg/rm /6 ib:              "PSLLD" mmx(r/m),i                          ; Shift Packed Data Left Logical
opcode 0x0F 0xF2 mod/reg/rm:                    "PSLLD" mmx(reg),mmx(r/m)                   ; Shift Packed Data Left Logical
opcode 0x0F 0x73 mod/reg/rm /2 ib:              "PSRLQ" mmx(r/m),i                          ; Shift Packed Data Right Logical
opcode 0x0F 0xD3 mod/reg/rm:                    "PSRLQ" mmx(reg),mmx(r/m)                   ; Shift Packed Data Right Logical
opcode 0x0F 0x73 mod/reg/rm /6 ib:              "PSLLQ" mmx(r/m),i                          ; Shift Packed Data Left Logical
opcode 0x0F 0xF3 mod/reg/rm:                    "PSLLQ" mmx(reg),mmx(r/m)                   ; Shift Packed Data Left Logical
opcode 0x0F 0x74 mod/reg/rm:                    "PCMPEQB" mmx(reg),mmx(r/m)                 ; Compare Packed Data for Equal
opcode 0x0F 0x75 mod/reg/rm:                    "PCMPEQW" mmx(reg),mmx(r/m)                 ; Compare Packed Data for Equal
opcode 0x0F 0x76 mod/reg/rm:                    "PCMPEQD" mmx(reg),mmx(r/m)                 ; Compare Packed Data for Equal
opcode 0x0F 0x77:                               "EMMS"                                      ; Empty MMX Technology State
opcode 0x0F 0xD4 mod/reg/rm:                    "PADDQ" mmx(reg),mmx(r/m)                   ; Add Packed Quadword Integers
opcode 0x0F 0xD5 mod/reg/rm:                    "PMULLW" mmx(reg),mmx(r/m)                  ; Multiply Packed Signed Integers and Store Low Result
opcode 0x0F 0xD8 mod/reg/rm:                    "PSUBUSB" mmx(reg),mmx(r/m)                 ; Subtract Packed Unsigned Integers with Unsigned Saturation
opcode 0x0F 0xD9 mod/reg/rm:                    "PSUBUSW" mmx(reg),mmx(r/m)                 ; Subtract Packed Unsigned Integers with Unsigned Saturation
opcode 0x0F 0xDB mod/reg/rm:                    "PAND" mmx(reg),mmx(r/m)                    ; Logical AND
opcode 0x0F 0xDC mod/reg/rm:                    "PADDUSB" mmx(reg),mmx(r/m)                 ; Add Packed Unsigned Integers with Unsigned Saturation
opcode 0x0F 0xDD mod/reg/rm:                    "PADDUSW" mmx(reg),mmx(r/m)                 ; Add Packed Unsigned Integers with Unsigned Saturation
opcode 0x0F 0xDF mod/reg/rm:                    "PANDN" mmx(reg),mmx(r/m)                   ; Logical AND NOT
opcode 0x0F 0xE5 mod/reg/rm:                    "PMULHW" mmx(reg),mmx(r/m)                  ; Multiply Packed Signed Integers and Store High Result
opcode 0x0F 0xE8 mod/reg/rm:                    "PSUBSB" mmx(reg),mmx(r/m)                  ; Subtract Packed Signed Integers with Signed Saturation
opcode 0x0F 0xE9 mod/reg/rm:                    "PSUBSW" mmx(reg),mmx(r/m)                  ; Subtract Packed Signed Integers with Signed Saturation
opcode 0x0F 0xEB mod/reg/rm:                    "POR" mmx(reg),mmx(r/m)                     ; Bitwise Logical OR
opcode 0x0F 0xEC mod/reg/rm:                    "PADDSB" mmx(reg),mmx(r/m)                  ; Add Packed Signed Integers with Signed Saturation
opcode 0x0F 0xED mod/reg/rm:                    "PADDSW" mmx(reg),mmx(r/m)                  ; Add Packed Signed Integers with Signed Saturation
opcode 0x0F 0xEF mod/reg/rm:                    "PXOR" mmx(reg),mmx(r/m)                    ; Logical Exclusive OR
opcode 0x0F 0xF5 mod/reg/rm:                    "PMADDWD" mmx(reg),mmx(r/m)                 ; Multiply and Add Packed Integers
opcode 0x0F 0xF8 mod/reg/rm:                    "PSUBB" mmx(reg),mmx(r/m)                   ; Subtract Packed Integers
opcode 0x0F 0xF9 mod/reg/rm:                    "PSUBW" mmx(reg),mmx(r/m)                   ; Subtract Packed Integers
opcode 0x0F 0xFA mod/reg/rm:                    "PSUBD" mmx(reg),mmx(r/m)                   ; Subtract Packed Integers
opcode 0x0F 0xFC mod/reg/rm:                    "PADDB" mmx(reg),mmx(r/m)                   ; Add Packed Integers
opcode 0x0F 0xFD mod/reg/rm:                    "PADDW" mmx(reg),mmx(r/m)                   ; Add Packed Integers
opcode 0x0F 0xFE mod/reg/rm:                    "PADDD" mmx(reg),mmx(r/m)                   ; Add Packed Integers

