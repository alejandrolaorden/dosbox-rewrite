
; WARNING: YASM won't generate these opcodes, so the best I can do to test is
;          hand code the opcodes according to the datasheet. In some cases I
;          had to guess register order. There may be mistakes here.

; REPC
opcode 0x65 prefix:                         "REPC"                          ; 
opcode 0x64 prefix:                         "REPNC"                         ; 

; ins
opcode 0x0F 0x31 mod/reg/rm mod==3 /0:      "INS" b(r/m),b(c)               ; INS reg,CL
opcode 0x0F 0x39 mod/reg/rm ib mod==3 /0:   "INS" b(r/m),i                  ; INS reg,imm8
opcode 0x0F 0x33 mod/reg/rm mod==3 /0:      "EXT" b(r/m),b(c)               ; EXT reg,CL
opcode 0x0F 0x3B mod/reg/rm ib mod==3 /0:   "EXT" b(r/m),i                  ; EXT reg,imm8

; BCD stuff
opcode 0x0F 0x20:                           "ADD4S"
opcode 0x0F 0x22:                           "SUB4S"
opcode 0x0F 0x26:                           "CMP4S"

; ROL/ROL 4
opcode 0x0F 0x28 mod/reg/rm /0:             "ROL4" b(r/m)
opcode 0x0F 0x2A mod/reg/rm /0:             "ROR4" b(r/m)

; TEST1
opcode 0x0F 0x10 mod/reg/rm /0:             "TEST1" b(r/m),b(c)
opcode 0x0F 0x11 mod/reg/rm /0:             "TEST1" w(r/m),b(c)
opcode 0x0F 0x18 mod/reg/rm ib /0:          "TEST1" b(r/m),i
opcode 0x0F 0x19 mod/reg/rm ib /0:          "TEST1" w(r/m),i

; NOT1
opcode 0x0F 0x16 mod/reg/rm /0:             "NOT1" b(r/m),b(c)
opcode 0x0F 0x17 mod/reg/rm /0:             "NOT1" w(r/m),b(c)
opcode 0x0F 0x1E mod/reg/rm ib /0:          "NOT1" b(r/m),i
opcode 0x0F 0x1F mod/reg/rm ib /0:          "NOT1" w(r/m),i

; CLR1
opcode 0x0F 0x12 mod/reg/rm /0:             "CLR1" b(r/m),b(c)
opcode 0x0F 0x13 mod/reg/rm /0:             "CLR1" w(r/m),b(c)
opcode 0x0F 0x1A mod/reg/rm ib /0:          "CLR1" b(r/m),i
opcode 0x0F 0x1B mod/reg/rm ib /0:          "CLR1" w(r/m),i

; SET1
opcode 0x0F 0x14 mod/reg/rm /0:             "SET1" b(r/m),b(c)
opcode 0x0F 0x15 mod/reg/rm /0:             "SET1" w(r/m),b(c)
opcode 0x0F 0x1C mod/reg/rm ib /0:          "SET1" b(r/m),i
opcode 0x0F 0x1D mod/reg/rm ib /0:          "SET1" w(r/m),i

; BRKEM
opcode 0x0F 0xFF ib:                        "BRKEM" i

; FP02 (enhance if you get actual FPU codes)
opcode 0x66 mod/reg/rm mod==3:              "FP02"
opcode 0x67 mod/reg/rm mod==3:              "FP02"
opcode 0x66 mod/reg/rm mod!=3 /0:           "FP02" b(r/m)
opcode 0x67 mod/reg/rm mod!=3 /0:           "FP02" b(r/m)

